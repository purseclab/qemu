
./enclave.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000002000 <.plt>:
    2000:	ff 35 a2 4f 04 00    	pushq  0x44fa2(%rip)        # 46fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    2006:	ff 25 a4 4f 04 00    	jmpq   *0x44fa4(%rip)        # 46fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    200c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000002010 <_Z9pcl_entryPvS_@plt>:
    2010:	ff 25 d2 4f 04 00    	jmpq   *0x44fd2(%rip)        # 46fe8 <_Z9pcl_entryPvS_>
    2016:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002040 <sgx_ecall_type_char>:
    2040:	55                   	push   %rbp
    2041:	48 89 e5             	mov    %rsp,%rbp
    2044:	48 83 ec 20          	sub    $0x20,%rsp
    2048:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    204c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2051:	74 15                	je     2068 <sgx_ecall_type_char+0x28>
    2053:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2057:	be 01 00 00 00       	mov    $0x1,%esi
    205c:	48 89 c7             	mov    %rax,%rdi
    205f:	e8 da 5d 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2064:	85 c0                	test   %eax,%eax
    2066:	75 07                	jne    206f <sgx_ecall_type_char+0x2f>
    2068:	b8 02 00 00 00       	mov    $0x2,%eax
    206d:	eb 26                	jmp    2095 <sgx_ecall_type_char+0x55>
    206f:	0f ae e8             	lfence 
    2072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2076:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    207a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2085:	0f b6 00             	movzbl (%rax),%eax
    2088:	0f be c0             	movsbl %al,%eax
    208b:	89 c7                	mov    %eax,%edi
    208d:	e8 3a 27 00 00       	callq  47cc <ecall_type_char>
    2092:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2095:	c9                   	leaveq 
    2096:	c3                   	retq   

0000000000002097 <sgx_ecall_type_int>:
    2097:	55                   	push   %rbp
    2098:	48 89 e5             	mov    %rsp,%rbp
    209b:	48 83 ec 20          	sub    $0x20,%rsp
    209f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    20a3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    20a8:	74 15                	je     20bf <sgx_ecall_type_int+0x28>
    20aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    20ae:	be 04 00 00 00       	mov    $0x4,%esi
    20b3:	48 89 c7             	mov    %rax,%rdi
    20b6:	e8 83 5d 00 00       	callq  7e3e <sgx_is_outside_enclave>
    20bb:	85 c0                	test   %eax,%eax
    20bd:	75 07                	jne    20c6 <sgx_ecall_type_int+0x2f>
    20bf:	b8 02 00 00 00       	mov    $0x2,%eax
    20c4:	eb 22                	jmp    20e8 <sgx_ecall_type_int+0x51>
    20c6:	0f ae e8             	lfence 
    20c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    20cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    20d1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    20d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20dc:	8b 00                	mov    (%rax),%eax
    20de:	89 c7                	mov    %eax,%edi
    20e0:	e8 1c 27 00 00       	callq  4801 <ecall_type_int>
    20e5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    20e8:	c9                   	leaveq 
    20e9:	c3                   	retq   

00000000000020ea <sgx_ecall_type_float>:
    20ea:	55                   	push   %rbp
    20eb:	48 89 e5             	mov    %rsp,%rbp
    20ee:	48 83 ec 20          	sub    $0x20,%rsp
    20f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    20f6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    20fb:	74 15                	je     2112 <sgx_ecall_type_float+0x28>
    20fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2101:	be 04 00 00 00       	mov    $0x4,%esi
    2106:	48 89 c7             	mov    %rax,%rdi
    2109:	e8 30 5d 00 00       	callq  7e3e <sgx_is_outside_enclave>
    210e:	85 c0                	test   %eax,%eax
    2110:	75 07                	jne    2119 <sgx_ecall_type_float+0x2f>
    2112:	b8 02 00 00 00       	mov    $0x2,%eax
    2117:	eb 28                	jmp    2141 <sgx_ecall_type_float+0x57>
    2119:	0f ae e8             	lfence 
    211c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2120:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2124:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    212b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    212f:	8b 00                	mov    (%rax),%eax
    2131:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    2134:	f3 0f 10 45 e4       	movss  -0x1c(%rbp),%xmm0
    2139:	e8 f9 26 00 00       	callq  4837 <ecall_type_float>
    213e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2141:	c9                   	leaveq 
    2142:	c3                   	retq   

0000000000002143 <sgx_ecall_type_double>:
    2143:	55                   	push   %rbp
    2144:	48 89 e5             	mov    %rsp,%rbp
    2147:	48 83 ec 20          	sub    $0x20,%rsp
    214b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    214f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2154:	74 15                	je     216b <sgx_ecall_type_double+0x28>
    2156:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    215a:	be 08 00 00 00       	mov    $0x8,%esi
    215f:	48 89 c7             	mov    %rax,%rdi
    2162:	e8 d7 5c 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2167:	85 c0                	test   %eax,%eax
    2169:	75 07                	jne    2172 <sgx_ecall_type_double+0x2f>
    216b:	b8 02 00 00 00       	mov    $0x2,%eax
    2170:	eb 2a                	jmp    219c <sgx_ecall_type_double+0x59>
    2172:	0f ae e8             	lfence 
    2175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2179:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    217d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2188:	48 8b 00             	mov    (%rax),%rax
    218b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    218f:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    2194:	e8 e9 26 00 00       	callq  4882 <ecall_type_double>
    2199:	8b 45 f4             	mov    -0xc(%rbp),%eax
    219c:	c9                   	leaveq 
    219d:	c3                   	retq   

000000000000219e <sgx_ecall_type_size_t>:
    219e:	55                   	push   %rbp
    219f:	48 89 e5             	mov    %rsp,%rbp
    21a2:	48 83 ec 20          	sub    $0x20,%rsp
    21a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    21aa:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    21af:	74 15                	je     21c6 <sgx_ecall_type_size_t+0x28>
    21b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    21b5:	be 08 00 00 00       	mov    $0x8,%esi
    21ba:	48 89 c7             	mov    %rax,%rdi
    21bd:	e8 7c 5c 00 00       	callq  7e3e <sgx_is_outside_enclave>
    21c2:	85 c0                	test   %eax,%eax
    21c4:	75 07                	jne    21cd <sgx_ecall_type_size_t+0x2f>
    21c6:	b8 02 00 00 00       	mov    $0x2,%eax
    21cb:	eb 24                	jmp    21f1 <sgx_ecall_type_size_t+0x53>
    21cd:	0f ae e8             	lfence 
    21d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    21d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    21d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    21df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    21e3:	48 8b 00             	mov    (%rax),%rax
    21e6:	48 89 c7             	mov    %rax,%rdi
    21e9:	e8 e5 26 00 00       	callq  48d3 <ecall_type_size_t>
    21ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    21f1:	c9                   	leaveq 
    21f2:	c3                   	retq   

00000000000021f3 <sgx_ecall_type_wchar_t>:
    21f3:	55                   	push   %rbp
    21f4:	48 89 e5             	mov    %rsp,%rbp
    21f7:	48 83 ec 20          	sub    $0x20,%rsp
    21fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    21ff:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2204:	74 15                	je     221b <sgx_ecall_type_wchar_t+0x28>
    2206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    220a:	be 04 00 00 00       	mov    $0x4,%esi
    220f:	48 89 c7             	mov    %rax,%rdi
    2212:	e8 27 5c 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2217:	85 c0                	test   %eax,%eax
    2219:	75 07                	jne    2222 <sgx_ecall_type_wchar_t+0x2f>
    221b:	b8 02 00 00 00       	mov    $0x2,%eax
    2220:	eb 22                	jmp    2244 <sgx_ecall_type_wchar_t+0x51>
    2222:	0f ae e8             	lfence 
    2225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2229:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    222d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2238:	8b 00                	mov    (%rax),%eax
    223a:	89 c7                	mov    %eax,%edi
    223c:	e8 ca 26 00 00       	callq  490b <ecall_type_wchar_t>
    2241:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2244:	c9                   	leaveq 
    2245:	c3                   	retq   

0000000000002246 <sgx_ecall_type_struct>:
    2246:	55                   	push   %rbp
    2247:	48 89 e5             	mov    %rsp,%rbp
    224a:	48 83 ec 20          	sub    $0x20,%rsp
    224e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2252:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2257:	74 15                	je     226e <sgx_ecall_type_struct+0x28>
    2259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    225d:	be 10 00 00 00       	mov    $0x10,%esi
    2262:	48 89 c7             	mov    %rax,%rdi
    2265:	e8 d4 5b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    226a:	85 c0                	test   %eax,%eax
    226c:	75 07                	jne    2275 <sgx_ecall_type_struct+0x2f>
    226e:	b8 02 00 00 00       	mov    $0x2,%eax
    2273:	eb 29                	jmp    229e <sgx_ecall_type_struct+0x58>
    2275:	0f ae e8             	lfence 
    2278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    227c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2280:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    228b:	8b 10                	mov    (%rax),%edx
    228d:	48 8b 40 08          	mov    0x8(%rax),%rax
    2291:	89 d7                	mov    %edx,%edi
    2293:	48 89 c6             	mov    %rax,%rsi
    2296:	e8 a6 26 00 00       	callq  4941 <ecall_type_struct>
    229b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    229e:	c9                   	leaveq 
    229f:	c3                   	retq   

00000000000022a0 <sgx_ecall_type_enum_union>:
    22a0:	55                   	push   %rbp
    22a1:	48 89 e5             	mov    %rsp,%rbp
    22a4:	48 83 ec 30          	sub    $0x30,%rsp
    22a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    22ac:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    22b1:	74 15                	je     22c8 <sgx_ecall_type_enum_union+0x28>
    22b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22b7:	be 10 00 00 00       	mov    $0x10,%esi
    22bc:	48 89 c7             	mov    %rax,%rdi
    22bf:	e8 7a 5b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    22c4:	85 c0                	test   %eax,%eax
    22c6:	75 07                	jne    22cf <sgx_ecall_type_enum_union+0x2f>
    22c8:	b8 02 00 00 00       	mov    $0x2,%eax
    22cd:	eb 35                	jmp    2304 <sgx_ecall_type_enum_union+0x64>
    22cf:	0f ae e8             	lfence 
    22d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22da:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    22e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22e5:	48 8b 40 08          	mov    0x8(%rax),%rax
    22e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    22ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22f1:	8b 00                	mov    (%rax),%eax
    22f3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    22f7:	48 89 d6             	mov    %rdx,%rsi
    22fa:	89 c7                	mov    %eax,%edi
    22fc:	e8 af 26 00 00       	callq  49b0 <ecall_type_enum_union>
    2301:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2304:	c9                   	leaveq 
    2305:	c3                   	retq   

0000000000002306 <sgx_ecall_pointer_user_check>:
    2306:	55                   	push   %rbp
    2307:	48 89 e5             	mov    %rsp,%rbp
    230a:	48 83 ec 30          	sub    $0x30,%rsp
    230e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2312:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2317:	74 15                	je     232e <sgx_ecall_pointer_user_check+0x28>
    2319:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    231d:	be 18 00 00 00       	mov    $0x18,%esi
    2322:	48 89 c7             	mov    %rax,%rdi
    2325:	e8 14 5b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    232a:	85 c0                	test   %eax,%eax
    232c:	75 07                	jne    2335 <sgx_ecall_pointer_user_check+0x2f>
    232e:	b8 02 00 00 00       	mov    $0x2,%eax
    2333:	eb 42                	jmp    2377 <sgx_ecall_pointer_user_check+0x71>
    2335:	0f ae e8             	lfence 
    2338:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    233c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2340:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2347:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    234b:	48 8b 40 08          	mov    0x8(%rax),%rax
    234f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2353:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2357:	48 8b 50 10          	mov    0x10(%rax),%rdx
    235b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    235f:	48 89 d6             	mov    %rdx,%rsi
    2362:	48 89 c7             	mov    %rax,%rdi
    2365:	e8 48 1f 00 00       	callq  42b2 <ecall_pointer_user_check>
    236a:	48 89 c2             	mov    %rax,%rdx
    236d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2371:	48 89 10             	mov    %rdx,(%rax)
    2374:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2377:	c9                   	leaveq 
    2378:	c3                   	retq   

0000000000002379 <sgx_ecall_pointer_in>:
    2379:	55                   	push   %rbp
    237a:	48 89 e5             	mov    %rsp,%rbp
    237d:	48 83 ec 40          	sub    $0x40,%rsp
    2381:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2385:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    238a:	74 15                	je     23a1 <sgx_ecall_pointer_in+0x28>
    238c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2390:	be 08 00 00 00       	mov    $0x8,%esi
    2395:	48 89 c7             	mov    %rax,%rdi
    2398:	e8 a1 5a 00 00       	callq  7e3e <sgx_is_outside_enclave>
    239d:	85 c0                	test   %eax,%eax
    239f:	75 0a                	jne    23ab <sgx_ecall_pointer_in+0x32>
    23a1:	b8 02 00 00 00       	mov    $0x2,%eax
    23a6:	e9 e2 00 00 00       	jmpq   248d <sgx_ecall_pointer_in+0x114>
    23ab:	0f ae e8             	lfence 
    23ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    23b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    23b6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    23bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    23c1:	48 8b 00             	mov    (%rax),%rax
    23c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    23c8:	48 c7 45 f8 04 00 00 	movq   $0x4,-0x8(%rbp)
    23cf:	00 
    23d0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    23d7:	00 
    23d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    23dd:	74 21                	je     2400 <sgx_ecall_pointer_in+0x87>
    23df:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    23e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    23e7:	48 89 d6             	mov    %rdx,%rsi
    23ea:	48 89 c7             	mov    %rax,%rdi
    23ed:	e8 4c 5a 00 00       	callq  7e3e <sgx_is_outside_enclave>
    23f2:	85 c0                	test   %eax,%eax
    23f4:	75 0a                	jne    2400 <sgx_ecall_pointer_in+0x87>
    23f6:	b8 02 00 00 00       	mov    $0x2,%eax
    23fb:	e9 8d 00 00 00       	jmpq   248d <sgx_ecall_pointer_in+0x114>
    2400:	0f ae e8             	lfence 
    2403:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2408:	74 61                	je     246b <sgx_ecall_pointer_in+0xf2>
    240a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    240f:	74 5a                	je     246b <sgx_ecall_pointer_in+0xf2>
    2411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2415:	83 e0 03             	and    $0x3,%eax
    2418:	48 85 c0             	test   %rax,%rax
    241b:	74 09                	je     2426 <sgx_ecall_pointer_in+0xad>
    241d:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    2424:	eb 51                	jmp    2477 <sgx_ecall_pointer_in+0xfe>
    2426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    242a:	48 89 c7             	mov    %rax,%rdi
    242d:	e8 16 e0 00 00       	callq  10448 <dlmalloc>
    2432:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2436:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    243b:	75 09                	jne    2446 <sgx_ecall_pointer_in+0xcd>
    243d:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    2444:	eb 31                	jmp    2477 <sgx_ecall_pointer_in+0xfe>
    2446:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    244a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    244e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2452:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2456:	48 89 c7             	mov    %rax,%rdi
    2459:	e8 95 21 01 00       	callq  145f3 <memcpy_s>
    245e:	85 c0                	test   %eax,%eax
    2460:	74 09                	je     246b <sgx_ecall_pointer_in+0xf2>
    2462:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    2469:	eb 0c                	jmp    2477 <sgx_ecall_pointer_in+0xfe>
    246b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    246f:	48 89 c7             	mov    %rax,%rdi
    2472:	e8 58 1f 00 00       	callq  43cf <ecall_pointer_in>
    2477:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    247c:	74 0c                	je     248a <sgx_ecall_pointer_in+0x111>
    247e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2482:	48 89 c7             	mov    %rax,%rdi
    2485:	e8 b5 ea 00 00       	callq  10f3f <dlfree>
    248a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    248d:	c9                   	leaveq 
    248e:	c3                   	retq   

000000000000248f <sgx_ecall_pointer_out>:
    248f:	55                   	push   %rbp
    2490:	48 89 e5             	mov    %rsp,%rbp
    2493:	48 83 ec 40          	sub    $0x40,%rsp
    2497:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    249b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    24a0:	74 15                	je     24b7 <sgx_ecall_pointer_out+0x28>
    24a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    24a6:	be 08 00 00 00       	mov    $0x8,%esi
    24ab:	48 89 c7             	mov    %rax,%rdi
    24ae:	e8 8b 59 00 00       	callq  7e3e <sgx_is_outside_enclave>
    24b3:	85 c0                	test   %eax,%eax
    24b5:	75 0a                	jne    24c1 <sgx_ecall_pointer_out+0x32>
    24b7:	b8 02 00 00 00       	mov    $0x2,%eax
    24bc:	e9 ff 00 00 00       	jmpq   25c0 <sgx_ecall_pointer_out+0x131>
    24c1:	0f ae e8             	lfence 
    24c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    24c8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    24cc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    24d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24d7:	48 8b 00             	mov    (%rax),%rax
    24da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    24de:	48 c7 45 f8 04 00 00 	movq   $0x4,-0x8(%rbp)
    24e5:	00 
    24e6:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    24ed:	00 
    24ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    24f3:	74 21                	je     2516 <sgx_ecall_pointer_out+0x87>
    24f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    24f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    24fd:	48 89 d6             	mov    %rdx,%rsi
    2500:	48 89 c7             	mov    %rax,%rdi
    2503:	e8 36 59 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2508:	85 c0                	test   %eax,%eax
    250a:	75 0a                	jne    2516 <sgx_ecall_pointer_out+0x87>
    250c:	b8 02 00 00 00       	mov    $0x2,%eax
    2511:	e9 aa 00 00 00       	jmpq   25c0 <sgx_ecall_pointer_out+0x131>
    2516:	0f ae e8             	lfence 
    2519:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    251e:	74 51                	je     2571 <sgx_ecall_pointer_out+0xe2>
    2520:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2525:	74 4a                	je     2571 <sgx_ecall_pointer_out+0xe2>
    2527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    252b:	83 e0 03             	and    $0x3,%eax
    252e:	48 85 c0             	test   %rax,%rax
    2531:	74 09                	je     253c <sgx_ecall_pointer_out+0xad>
    2533:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    253a:	eb 6e                	jmp    25aa <sgx_ecall_pointer_out+0x11b>
    253c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2540:	48 89 c7             	mov    %rax,%rdi
    2543:	e8 00 df 00 00       	callq  10448 <dlmalloc>
    2548:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    254c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2551:	75 09                	jne    255c <sgx_ecall_pointer_out+0xcd>
    2553:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    255a:	eb 4e                	jmp    25aa <sgx_ecall_pointer_out+0x11b>
    255c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2560:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2564:	be 00 00 00 00       	mov    $0x0,%esi
    2569:	48 89 c7             	mov    %rax,%rdi
    256c:	e8 c4 11 01 00       	callq  13735 <memset>
    2571:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2575:	48 89 c7             	mov    %rax,%rdi
    2578:	e8 8b 1e 00 00       	callq  4408 <ecall_pointer_out>
    257d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2582:	74 25                	je     25a9 <sgx_ecall_pointer_out+0x11a>
    2584:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2588:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    258c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2590:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2594:	48 89 c7             	mov    %rax,%rdi
    2597:	e8 57 20 01 00       	callq  145f3 <memcpy_s>
    259c:	85 c0                	test   %eax,%eax
    259e:	74 09                	je     25a9 <sgx_ecall_pointer_out+0x11a>
    25a0:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    25a7:	eb 01                	jmp    25aa <sgx_ecall_pointer_out+0x11b>
    25a9:	90                   	nop
    25aa:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    25af:	74 0c                	je     25bd <sgx_ecall_pointer_out+0x12e>
    25b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    25b5:	48 89 c7             	mov    %rax,%rdi
    25b8:	e8 82 e9 00 00       	callq  10f3f <dlfree>
    25bd:	8b 45 dc             	mov    -0x24(%rbp),%eax
    25c0:	c9                   	leaveq 
    25c1:	c3                   	retq   

00000000000025c2 <sgx_ecall_pointer_in_out>:
    25c2:	55                   	push   %rbp
    25c3:	48 89 e5             	mov    %rsp,%rbp
    25c6:	48 83 ec 40          	sub    $0x40,%rsp
    25ca:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    25ce:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    25d3:	74 15                	je     25ea <sgx_ecall_pointer_in_out+0x28>
    25d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    25d9:	be 08 00 00 00       	mov    $0x8,%esi
    25de:	48 89 c7             	mov    %rax,%rdi
    25e1:	e8 58 58 00 00       	callq  7e3e <sgx_is_outside_enclave>
    25e6:	85 c0                	test   %eax,%eax
    25e8:	75 0a                	jne    25f4 <sgx_ecall_pointer_in_out+0x32>
    25ea:	b8 02 00 00 00       	mov    $0x2,%eax
    25ef:	e9 0f 01 00 00       	jmpq   2703 <sgx_ecall_pointer_in_out+0x141>
    25f4:	0f ae e8             	lfence 
    25f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    25fb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    25ff:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    2606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    260a:	48 8b 00             	mov    (%rax),%rax
    260d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2611:	48 c7 45 f8 04 00 00 	movq   $0x4,-0x8(%rbp)
    2618:	00 
    2619:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2620:	00 
    2621:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2626:	74 21                	je     2649 <sgx_ecall_pointer_in_out+0x87>
    2628:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    262c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2630:	48 89 d6             	mov    %rdx,%rsi
    2633:	48 89 c7             	mov    %rax,%rdi
    2636:	e8 03 58 00 00       	callq  7e3e <sgx_is_outside_enclave>
    263b:	85 c0                	test   %eax,%eax
    263d:	75 0a                	jne    2649 <sgx_ecall_pointer_in_out+0x87>
    263f:	b8 02 00 00 00       	mov    $0x2,%eax
    2644:	e9 ba 00 00 00       	jmpq   2703 <sgx_ecall_pointer_in_out+0x141>
    2649:	0f ae e8             	lfence 
    264c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2651:	74 61                	je     26b4 <sgx_ecall_pointer_in_out+0xf2>
    2653:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2658:	74 5a                	je     26b4 <sgx_ecall_pointer_in_out+0xf2>
    265a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    265e:	83 e0 03             	and    $0x3,%eax
    2661:	48 85 c0             	test   %rax,%rax
    2664:	74 09                	je     266f <sgx_ecall_pointer_in_out+0xad>
    2666:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    266d:	eb 7e                	jmp    26ed <sgx_ecall_pointer_in_out+0x12b>
    266f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2673:	48 89 c7             	mov    %rax,%rdi
    2676:	e8 cd dd 00 00       	callq  10448 <dlmalloc>
    267b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    267f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2684:	75 09                	jne    268f <sgx_ecall_pointer_in_out+0xcd>
    2686:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    268d:	eb 5e                	jmp    26ed <sgx_ecall_pointer_in_out+0x12b>
    268f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2693:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2697:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    269b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    269f:	48 89 c7             	mov    %rax,%rdi
    26a2:	e8 4c 1f 01 00       	callq  145f3 <memcpy_s>
    26a7:	85 c0                	test   %eax,%eax
    26a9:	74 09                	je     26b4 <sgx_ecall_pointer_in_out+0xf2>
    26ab:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    26b2:	eb 39                	jmp    26ed <sgx_ecall_pointer_in_out+0x12b>
    26b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    26b8:	48 89 c7             	mov    %rax,%rdi
    26bb:	e8 aa 1d 00 00       	callq  446a <ecall_pointer_in_out>
    26c0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    26c5:	74 25                	je     26ec <sgx_ecall_pointer_in_out+0x12a>
    26c7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    26cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    26cf:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    26d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26d7:	48 89 c7             	mov    %rax,%rdi
    26da:	e8 14 1f 01 00       	callq  145f3 <memcpy_s>
    26df:	85 c0                	test   %eax,%eax
    26e1:	74 09                	je     26ec <sgx_ecall_pointer_in_out+0x12a>
    26e3:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    26ea:	eb 01                	jmp    26ed <sgx_ecall_pointer_in_out+0x12b>
    26ec:	90                   	nop
    26ed:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    26f2:	74 0c                	je     2700 <sgx_ecall_pointer_in_out+0x13e>
    26f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    26f8:	48 89 c7             	mov    %rax,%rdi
    26fb:	e8 3f e8 00 00       	callq  10f3f <dlfree>
    2700:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2703:	c9                   	leaveq 
    2704:	c3                   	retq   

0000000000002705 <sgx_ecall_pointer_string>:
    2705:	55                   	push   %rbp
    2706:	48 89 e5             	mov    %rsp,%rbp
    2709:	48 83 ec 40          	sub    $0x40,%rsp
    270d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2711:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    2716:	74 15                	je     272d <sgx_ecall_pointer_string+0x28>
    2718:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    271c:	be 10 00 00 00       	mov    $0x10,%esi
    2721:	48 89 c7             	mov    %rax,%rdi
    2724:	e8 15 57 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2729:	85 c0                	test   %eax,%eax
    272b:	75 0a                	jne    2737 <sgx_ecall_pointer_string+0x32>
    272d:	b8 02 00 00 00       	mov    $0x2,%eax
    2732:	e9 5f 01 00 00       	jmpq   2896 <sgx_ecall_pointer_string+0x191>
    2737:	0f ae e8             	lfence 
    273a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    273e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2742:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    2749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    274d:	48 8b 00             	mov    (%rax),%rax
    2750:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2758:	48 8b 40 08          	mov    0x8(%rax),%rax
    275c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2760:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2767:	00 
    2768:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    276d:	74 21                	je     2790 <sgx_ecall_pointer_string+0x8b>
    276f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2773:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2777:	48 89 d6             	mov    %rdx,%rsi
    277a:	48 89 c7             	mov    %rax,%rdi
    277d:	e8 bc 56 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2782:	85 c0                	test   %eax,%eax
    2784:	75 0a                	jne    2790 <sgx_ecall_pointer_string+0x8b>
    2786:	b8 02 00 00 00       	mov    $0x2,%eax
    278b:	e9 06 01 00 00       	jmpq   2896 <sgx_ecall_pointer_string+0x191>
    2790:	0f ae e8             	lfence 
    2793:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2798:	0f 84 83 00 00 00    	je     2821 <sgx_ecall_pointer_string+0x11c>
    279e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    27a3:	74 7c                	je     2821 <sgx_ecall_pointer_string+0x11c>
    27a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27a9:	48 89 c7             	mov    %rax,%rdi
    27ac:	e8 97 dc 00 00       	callq  10448 <dlmalloc>
    27b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    27b5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    27ba:	75 0c                	jne    27c8 <sgx_ecall_pointer_string+0xc3>
    27bc:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    27c3:	e9 b8 00 00 00       	jmpq   2880 <sgx_ecall_pointer_string+0x17b>
    27c8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    27cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    27d0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    27d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    27d8:	48 89 c7             	mov    %rax,%rdi
    27db:	e8 13 1e 01 00       	callq  145f3 <memcpy_s>
    27e0:	85 c0                	test   %eax,%eax
    27e2:	74 0c                	je     27f0 <sgx_ecall_pointer_string+0xeb>
    27e4:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    27eb:	e9 90 00 00 00       	jmpq   2880 <sgx_ecall_pointer_string+0x17b>
    27f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27f4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    27f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    27fc:	48 01 d0             	add    %rdx,%rax
    27ff:	c6 00 00             	movb   $0x0,(%rax)
    2802:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2806:	48 89 c7             	mov    %rax,%rdi
    2809:	e8 63 14 01 00       	callq  13c71 <strlen>
    280e:	48 83 c0 01          	add    $0x1,%rax
    2812:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    2816:	74 09                	je     2821 <sgx_ecall_pointer_string+0x11c>
    2818:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    281f:	eb 5f                	jmp    2880 <sgx_ecall_pointer_string+0x17b>
    2821:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2825:	48 89 c7             	mov    %rax,%rdi
    2828:	e8 a8 1d 00 00       	callq  45d5 <ecall_pointer_string>
    282d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2832:	74 4b                	je     287f <sgx_ecall_pointer_string+0x17a>
    2834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2838:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    283c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2840:	48 01 d0             	add    %rdx,%rax
    2843:	c6 00 00             	movb   $0x0,(%rax)
    2846:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    284a:	48 89 c7             	mov    %rax,%rdi
    284d:	e8 1f 14 01 00       	callq  13c71 <strlen>
    2852:	48 83 c0 01          	add    $0x1,%rax
    2856:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    285a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    285e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2862:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2866:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    286a:	48 89 c7             	mov    %rax,%rdi
    286d:	e8 81 1d 01 00       	callq  145f3 <memcpy_s>
    2872:	85 c0                	test   %eax,%eax
    2874:	74 09                	je     287f <sgx_ecall_pointer_string+0x17a>
    2876:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    287d:	eb 01                	jmp    2880 <sgx_ecall_pointer_string+0x17b>
    287f:	90                   	nop
    2880:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2885:	74 0c                	je     2893 <sgx_ecall_pointer_string+0x18e>
    2887:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    288b:	48 89 c7             	mov    %rax,%rdi
    288e:	e8 ac e6 00 00       	callq  10f3f <dlfree>
    2893:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2896:	c9                   	leaveq 
    2897:	c3                   	retq   

0000000000002898 <sgx_ecall_pointer_string_const>:
    2898:	55                   	push   %rbp
    2899:	48 89 e5             	mov    %rsp,%rbp
    289c:	48 83 ec 40          	sub    $0x40,%rsp
    28a0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    28a4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    28a9:	74 15                	je     28c0 <sgx_ecall_pointer_string_const+0x28>
    28ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    28af:	be 10 00 00 00       	mov    $0x10,%esi
    28b4:	48 89 c7             	mov    %rax,%rdi
    28b7:	e8 82 55 00 00       	callq  7e3e <sgx_is_outside_enclave>
    28bc:	85 c0                	test   %eax,%eax
    28be:	75 0a                	jne    28ca <sgx_ecall_pointer_string_const+0x32>
    28c0:	b8 02 00 00 00       	mov    $0x2,%eax
    28c5:	e9 02 01 00 00       	jmpq   29cc <sgx_ecall_pointer_string_const+0x134>
    28ca:	0f ae e8             	lfence 
    28cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    28d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    28d5:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    28dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28e0:	48 8b 00             	mov    (%rax),%rax
    28e3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    28e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28eb:	48 8b 40 08          	mov    0x8(%rax),%rax
    28ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    28f3:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    28fa:	00 
    28fb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2900:	74 21                	je     2923 <sgx_ecall_pointer_string_const+0x8b>
    2902:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2906:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    290a:	48 89 d6             	mov    %rdx,%rsi
    290d:	48 89 c7             	mov    %rax,%rdi
    2910:	e8 29 55 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2915:	85 c0                	test   %eax,%eax
    2917:	75 0a                	jne    2923 <sgx_ecall_pointer_string_const+0x8b>
    2919:	b8 02 00 00 00       	mov    $0x2,%eax
    291e:	e9 a9 00 00 00       	jmpq   29cc <sgx_ecall_pointer_string_const+0x134>
    2923:	0f ae e8             	lfence 
    2926:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    292b:	74 7d                	je     29aa <sgx_ecall_pointer_string_const+0x112>
    292d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2932:	74 76                	je     29aa <sgx_ecall_pointer_string_const+0x112>
    2934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2938:	48 89 c7             	mov    %rax,%rdi
    293b:	e8 08 db 00 00       	callq  10448 <dlmalloc>
    2940:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2944:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2949:	75 09                	jne    2954 <sgx_ecall_pointer_string_const+0xbc>
    294b:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    2952:	eb 62                	jmp    29b6 <sgx_ecall_pointer_string_const+0x11e>
    2954:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2958:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    295c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2960:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2964:	48 89 c7             	mov    %rax,%rdi
    2967:	e8 87 1c 01 00       	callq  145f3 <memcpy_s>
    296c:	85 c0                	test   %eax,%eax
    296e:	74 09                	je     2979 <sgx_ecall_pointer_string_const+0xe1>
    2970:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    2977:	eb 3d                	jmp    29b6 <sgx_ecall_pointer_string_const+0x11e>
    2979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    297d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2981:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2985:	48 01 d0             	add    %rdx,%rax
    2988:	c6 00 00             	movb   $0x0,(%rax)
    298b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    298f:	48 89 c7             	mov    %rax,%rdi
    2992:	e8 da 12 01 00       	callq  13c71 <strlen>
    2997:	48 83 c0 01          	add    $0x1,%rax
    299b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    299f:	74 09                	je     29aa <sgx_ecall_pointer_string_const+0x112>
    29a1:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    29a8:	eb 0c                	jmp    29b6 <sgx_ecall_pointer_string_const+0x11e>
    29aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29ae:	48 89 c7             	mov    %rax,%rdi
    29b1:	e8 50 1c 00 00       	callq  4606 <ecall_pointer_string_const>
    29b6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    29bb:	74 0c                	je     29c9 <sgx_ecall_pointer_string_const+0x131>
    29bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29c1:	48 89 c7             	mov    %rax,%rdi
    29c4:	e8 76 e5 00 00       	callq  10f3f <dlfree>
    29c9:	8b 45 dc             	mov    -0x24(%rbp),%eax
    29cc:	c9                   	leaveq 
    29cd:	c3                   	retq   

00000000000029ce <sgx_ecall_pointer_size>:
    29ce:	55                   	push   %rbp
    29cf:	48 89 e5             	mov    %rsp,%rbp
    29d2:	48 83 ec 40          	sub    $0x40,%rsp
    29d6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    29da:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    29df:	74 15                	je     29f6 <sgx_ecall_pointer_size+0x28>
    29e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29e5:	be 10 00 00 00       	mov    $0x10,%esi
    29ea:	48 89 c7             	mov    %rax,%rdi
    29ed:	e8 4c 54 00 00       	callq  7e3e <sgx_is_outside_enclave>
    29f2:	85 c0                	test   %eax,%eax
    29f4:	75 0a                	jne    2a00 <sgx_ecall_pointer_size+0x32>
    29f6:	b8 02 00 00 00       	mov    $0x2,%eax
    29fb:	e9 0d 01 00 00       	jmpq   2b0d <sgx_ecall_pointer_size+0x13f>
    2a00:	0f ae e8             	lfence 
    2a03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a07:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2a0b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    2a12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2a16:	48 8b 00             	mov    (%rax),%rax
    2a19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2a1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2a21:	48 8b 40 08          	mov    0x8(%rax),%rax
    2a25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2a29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2a31:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    2a38:	00 
    2a39:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2a3e:	74 21                	je     2a61 <sgx_ecall_pointer_size+0x93>
    2a40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2a48:	48 89 d6             	mov    %rdx,%rsi
    2a4b:	48 89 c7             	mov    %rax,%rdi
    2a4e:	e8 eb 53 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2a53:	85 c0                	test   %eax,%eax
    2a55:	75 0a                	jne    2a61 <sgx_ecall_pointer_size+0x93>
    2a57:	b8 02 00 00 00       	mov    $0x2,%eax
    2a5c:	e9 ac 00 00 00       	jmpq   2b0d <sgx_ecall_pointer_size+0x13f>
    2a61:	0f ae e8             	lfence 
    2a64:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2a69:	74 4c                	je     2ab7 <sgx_ecall_pointer_size+0xe9>
    2a6b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2a70:	74 45                	je     2ab7 <sgx_ecall_pointer_size+0xe9>
    2a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a76:	48 89 c7             	mov    %rax,%rdi
    2a79:	e8 ca d9 00 00       	callq  10448 <dlmalloc>
    2a7e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2a82:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2a87:	75 09                	jne    2a92 <sgx_ecall_pointer_size+0xc4>
    2a89:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%rbp)
    2a90:	eb 65                	jmp    2af7 <sgx_ecall_pointer_size+0x129>
    2a92:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2a96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2a9a:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2a9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2aa2:	48 89 c7             	mov    %rax,%rdi
    2aa5:	e8 49 1b 01 00       	callq  145f3 <memcpy_s>
    2aaa:	85 c0                	test   %eax,%eax
    2aac:	74 09                	je     2ab7 <sgx_ecall_pointer_size+0xe9>
    2aae:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    2ab5:	eb 40                	jmp    2af7 <sgx_ecall_pointer_size+0x129>
    2ab7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2abb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2abf:	48 89 d6             	mov    %rdx,%rsi
    2ac2:	48 89 c7             	mov    %rax,%rdi
    2ac5:	e8 98 1b 00 00       	callq  4662 <ecall_pointer_size>
    2aca:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2acf:	74 25                	je     2af6 <sgx_ecall_pointer_size+0x128>
    2ad1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2ad5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2ad9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2add:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ae1:	48 89 c7             	mov    %rax,%rdi
    2ae4:	e8 0a 1b 01 00       	callq  145f3 <memcpy_s>
    2ae9:	85 c0                	test   %eax,%eax
    2aeb:	74 09                	je     2af6 <sgx_ecall_pointer_size+0x128>
    2aed:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    2af4:	eb 01                	jmp    2af7 <sgx_ecall_pointer_size+0x129>
    2af6:	90                   	nop
    2af7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2afc:	74 0c                	je     2b0a <sgx_ecall_pointer_size+0x13c>
    2afe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b02:	48 89 c7             	mov    %rax,%rdi
    2b05:	e8 35 e4 00 00       	callq  10f3f <dlfree>
    2b0a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2b0d:	c9                   	leaveq 
    2b0e:	c3                   	retq   

0000000000002b0f <sgx_ecall_pointer_count>:
    2b0f:	55                   	push   %rbp
    2b10:	48 89 e5             	mov    %rsp,%rbp
    2b13:	48 83 ec 40          	sub    $0x40,%rsp
    2b17:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2b1b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    2b20:	74 15                	je     2b37 <sgx_ecall_pointer_count+0x28>
    2b22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b26:	be 10 00 00 00       	mov    $0x10,%esi
    2b2b:	48 89 c7             	mov    %rax,%rdi
    2b2e:	e8 0b 53 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2b33:	85 c0                	test   %eax,%eax
    2b35:	75 0a                	jne    2b41 <sgx_ecall_pointer_count+0x32>
    2b37:	b8 02 00 00 00       	mov    $0x2,%eax
    2b3c:	e9 43 01 00 00       	jmpq   2c84 <sgx_ecall_pointer_count+0x175>
    2b41:	0f ae e8             	lfence 
    2b44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b48:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2b4c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    2b53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2b57:	48 8b 00             	mov    (%rax),%rax
    2b5a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2b5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2b62:	48 8b 40 08          	mov    0x8(%rax),%rax
    2b66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2b6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b6e:	48 c1 e0 02          	shl    $0x2,%rax
    2b72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b76:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    2b7d:	00 
    2b7e:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    2b85:	ff ff 3f 
    2b88:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    2b8c:	76 0a                	jbe    2b98 <sgx_ecall_pointer_count+0x89>
    2b8e:	b8 02 00 00 00       	mov    $0x2,%eax
    2b93:	e9 ec 00 00 00       	jmpq   2c84 <sgx_ecall_pointer_count+0x175>
    2b98:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2b9d:	74 21                	je     2bc0 <sgx_ecall_pointer_count+0xb1>
    2b9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ba7:	48 89 d6             	mov    %rdx,%rsi
    2baa:	48 89 c7             	mov    %rax,%rdi
    2bad:	e8 8c 52 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2bb2:	85 c0                	test   %eax,%eax
    2bb4:	75 0a                	jne    2bc0 <sgx_ecall_pointer_count+0xb1>
    2bb6:	b8 02 00 00 00       	mov    $0x2,%eax
    2bbb:	e9 c4 00 00 00       	jmpq   2c84 <sgx_ecall_pointer_count+0x175>
    2bc0:	0f ae e8             	lfence 
    2bc3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2bc8:	74 64                	je     2c2e <sgx_ecall_pointer_count+0x11f>
    2bca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2bcf:	74 5d                	je     2c2e <sgx_ecall_pointer_count+0x11f>
    2bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bd5:	83 e0 03             	and    $0x3,%eax
    2bd8:	48 85 c0             	test   %rax,%rax
    2bdb:	74 0c                	je     2be9 <sgx_ecall_pointer_count+0xda>
    2bdd:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    2be4:	e9 85 00 00 00       	jmpq   2c6e <sgx_ecall_pointer_count+0x15f>
    2be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bed:	48 89 c7             	mov    %rax,%rdi
    2bf0:	e8 53 d8 00 00       	callq  10448 <dlmalloc>
    2bf5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2bf9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2bfe:	75 09                	jne    2c09 <sgx_ecall_pointer_count+0xfa>
    2c00:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%rbp)
    2c07:	eb 65                	jmp    2c6e <sgx_ecall_pointer_count+0x15f>
    2c09:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2c0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2c11:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2c15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c19:	48 89 c7             	mov    %rax,%rdi
    2c1c:	e8 d2 19 01 00       	callq  145f3 <memcpy_s>
    2c21:	85 c0                	test   %eax,%eax
    2c23:	74 09                	je     2c2e <sgx_ecall_pointer_count+0x11f>
    2c25:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    2c2c:	eb 40                	jmp    2c6e <sgx_ecall_pointer_count+0x15f>
    2c2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2c32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c36:	48 89 d6             	mov    %rdx,%rsi
    2c39:	48 89 c7             	mov    %rax,%rdi
    2c3c:	e8 4b 1a 00 00       	callq  468c <ecall_pointer_count>
    2c41:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2c46:	74 25                	je     2c6d <sgx_ecall_pointer_count+0x15e>
    2c48:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2c4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2c50:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2c54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c58:	48 89 c7             	mov    %rax,%rdi
    2c5b:	e8 93 19 01 00       	callq  145f3 <memcpy_s>
    2c60:	85 c0                	test   %eax,%eax
    2c62:	74 09                	je     2c6d <sgx_ecall_pointer_count+0x15e>
    2c64:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    2c6b:	eb 01                	jmp    2c6e <sgx_ecall_pointer_count+0x15f>
    2c6d:	90                   	nop
    2c6e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2c73:	74 0c                	je     2c81 <sgx_ecall_pointer_count+0x172>
    2c75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c79:	48 89 c7             	mov    %rax,%rdi
    2c7c:	e8 be e2 00 00       	callq  10f3f <dlfree>
    2c81:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2c84:	c9                   	leaveq 
    2c85:	c3                   	retq   

0000000000002c86 <sgx_ecall_pointer_isptr_readonly>:
    2c86:	55                   	push   %rbp
    2c87:	48 89 e5             	mov    %rsp,%rbp
    2c8a:	48 83 ec 40          	sub    $0x40,%rsp
    2c8e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2c92:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    2c97:	74 15                	je     2cae <sgx_ecall_pointer_isptr_readonly+0x28>
    2c99:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c9d:	be 10 00 00 00       	mov    $0x10,%esi
    2ca2:	48 89 c7             	mov    %rax,%rdi
    2ca5:	e8 94 51 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2caa:	85 c0                	test   %eax,%eax
    2cac:	75 0a                	jne    2cb8 <sgx_ecall_pointer_isptr_readonly+0x32>
    2cae:	b8 02 00 00 00       	mov    $0x2,%eax
    2cb3:	e9 dd 00 00 00       	jmpq   2d95 <sgx_ecall_pointer_isptr_readonly+0x10f>
    2cb8:	0f ae e8             	lfence 
    2cbb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2cbf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2cc3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    2cca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2cce:	48 8b 00             	mov    (%rax),%rax
    2cd1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2cd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2cd9:	48 8b 40 08          	mov    0x8(%rax),%rax
    2cdd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2ce1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2ce5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2ce9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    2cf0:	00 
    2cf1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2cf6:	74 1e                	je     2d16 <sgx_ecall_pointer_isptr_readonly+0x90>
    2cf8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2cfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d00:	48 89 d6             	mov    %rdx,%rsi
    2d03:	48 89 c7             	mov    %rax,%rdi
    2d06:	e8 33 51 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2d0b:	85 c0                	test   %eax,%eax
    2d0d:	75 07                	jne    2d16 <sgx_ecall_pointer_isptr_readonly+0x90>
    2d0f:	b8 02 00 00 00       	mov    $0x2,%eax
    2d14:	eb 7f                	jmp    2d95 <sgx_ecall_pointer_isptr_readonly+0x10f>
    2d16:	0f ae e8             	lfence 
    2d19:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2d1e:	74 4c                	je     2d6c <sgx_ecall_pointer_isptr_readonly+0xe6>
    2d20:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2d25:	74 45                	je     2d6c <sgx_ecall_pointer_isptr_readonly+0xe6>
    2d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d2b:	48 89 c7             	mov    %rax,%rdi
    2d2e:	e8 15 d7 00 00       	callq  10448 <dlmalloc>
    2d33:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2d37:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2d3c:	75 09                	jne    2d47 <sgx_ecall_pointer_isptr_readonly+0xc1>
    2d3e:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%rbp)
    2d45:	eb 38                	jmp    2d7f <sgx_ecall_pointer_isptr_readonly+0xf9>
    2d47:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2d4b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2d4f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2d53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d57:	48 89 c7             	mov    %rax,%rdi
    2d5a:	e8 94 18 01 00       	callq  145f3 <memcpy_s>
    2d5f:	85 c0                	test   %eax,%eax
    2d61:	74 09                	je     2d6c <sgx_ecall_pointer_isptr_readonly+0xe6>
    2d63:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    2d6a:	eb 13                	jmp    2d7f <sgx_ecall_pointer_isptr_readonly+0xf9>
    2d6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d74:	48 89 d6             	mov    %rdx,%rsi
    2d77:	48 89 c7             	mov    %rax,%rdi
    2d7a:	e8 58 19 00 00       	callq  46d7 <ecall_pointer_isptr_readonly>
    2d7f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2d84:	74 0c                	je     2d92 <sgx_ecall_pointer_isptr_readonly+0x10c>
    2d86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d8a:	48 89 c7             	mov    %rax,%rdi
    2d8d:	e8 ad e1 00 00       	callq  10f3f <dlfree>
    2d92:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2d95:	c9                   	leaveq 
    2d96:	c3                   	retq   

0000000000002d97 <sgx_ocall_pointer_attr>:
    2d97:	55                   	push   %rbp
    2d98:	48 89 e5             	mov    %rsp,%rbp
    2d9b:	48 83 ec 20          	sub    $0x20,%rsp
    2d9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2da3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2daa:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2daf:	74 07                	je     2db8 <sgx_ocall_pointer_attr+0x21>
    2db1:	b8 02 00 00 00       	mov    $0x2,%eax
    2db6:	eb 08                	jmp    2dc0 <sgx_ocall_pointer_attr+0x29>
    2db8:	e8 e6 16 00 00       	callq  44a3 <ocall_pointer_attr>
    2dbd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2dc0:	c9                   	leaveq 
    2dc1:	c3                   	retq   

0000000000002dc2 <sgx_ecall_array_user_check>:
    2dc2:	55                   	push   %rbp
    2dc3:	48 89 e5             	mov    %rsp,%rbp
    2dc6:	48 83 ec 30          	sub    $0x30,%rsp
    2dca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2dce:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2dd3:	74 15                	je     2dea <sgx_ecall_array_user_check+0x28>
    2dd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2dd9:	be 08 00 00 00       	mov    $0x8,%esi
    2dde:	48 89 c7             	mov    %rax,%rdi
    2de1:	e8 58 50 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2de6:	85 c0                	test   %eax,%eax
    2de8:	75 07                	jne    2df1 <sgx_ecall_array_user_check+0x2f>
    2dea:	b8 02 00 00 00       	mov    $0x2,%eax
    2def:	eb 2c                	jmp    2e1d <sgx_ecall_array_user_check+0x5b>
    2df1:	0f ae e8             	lfence 
    2df4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2df8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2dfc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2e03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e07:	48 8b 00             	mov    (%rax),%rax
    2e0a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e12:	48 89 c7             	mov    %rax,%rdi
    2e15:	e8 68 11 00 00       	callq  3f82 <ecall_array_user_check>
    2e1a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2e1d:	c9                   	leaveq 
    2e1e:	c3                   	retq   

0000000000002e1f <sgx_ecall_array_in>:
    2e1f:	55                   	push   %rbp
    2e20:	48 89 e5             	mov    %rsp,%rbp
    2e23:	48 83 ec 40          	sub    $0x40,%rsp
    2e27:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2e2b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    2e30:	74 15                	je     2e47 <sgx_ecall_array_in+0x28>
    2e32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2e36:	be 08 00 00 00       	mov    $0x8,%esi
    2e3b:	48 89 c7             	mov    %rax,%rdi
    2e3e:	e8 fb 4f 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2e43:	85 c0                	test   %eax,%eax
    2e45:	75 0a                	jne    2e51 <sgx_ecall_array_in+0x32>
    2e47:	b8 02 00 00 00       	mov    $0x2,%eax
    2e4c:	e9 e2 00 00 00       	jmpq   2f33 <sgx_ecall_array_in+0x114>
    2e51:	0f ae e8             	lfence 
    2e54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2e58:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2e5c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    2e63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e67:	48 8b 00             	mov    (%rax),%rax
    2e6a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2e6e:	48 c7 45 f8 10 00 00 	movq   $0x10,-0x8(%rbp)
    2e75:	00 
    2e76:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2e7d:	00 
    2e7e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2e83:	74 21                	je     2ea6 <sgx_ecall_array_in+0x87>
    2e85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2e89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e8d:	48 89 d6             	mov    %rdx,%rsi
    2e90:	48 89 c7             	mov    %rax,%rdi
    2e93:	e8 a6 4f 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2e98:	85 c0                	test   %eax,%eax
    2e9a:	75 0a                	jne    2ea6 <sgx_ecall_array_in+0x87>
    2e9c:	b8 02 00 00 00       	mov    $0x2,%eax
    2ea1:	e9 8d 00 00 00       	jmpq   2f33 <sgx_ecall_array_in+0x114>
    2ea6:	0f ae e8             	lfence 
    2ea9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2eae:	74 61                	je     2f11 <sgx_ecall_array_in+0xf2>
    2eb0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2eb5:	74 5a                	je     2f11 <sgx_ecall_array_in+0xf2>
    2eb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ebb:	83 e0 03             	and    $0x3,%eax
    2ebe:	48 85 c0             	test   %rax,%rax
    2ec1:	74 09                	je     2ecc <sgx_ecall_array_in+0xad>
    2ec3:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    2eca:	eb 51                	jmp    2f1d <sgx_ecall_array_in+0xfe>
    2ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ed0:	48 89 c7             	mov    %rax,%rdi
    2ed3:	e8 70 d5 00 00       	callq  10448 <dlmalloc>
    2ed8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2edc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2ee1:	75 09                	jne    2eec <sgx_ecall_array_in+0xcd>
    2ee3:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    2eea:	eb 31                	jmp    2f1d <sgx_ecall_array_in+0xfe>
    2eec:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2ef0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2ef4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2ef8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2efc:	48 89 c7             	mov    %rax,%rdi
    2eff:	e8 ef 16 01 00       	callq  145f3 <memcpy_s>
    2f04:	85 c0                	test   %eax,%eax
    2f06:	74 09                	je     2f11 <sgx_ecall_array_in+0xf2>
    2f08:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    2f0f:	eb 0c                	jmp    2f1d <sgx_ecall_array_in+0xfe>
    2f11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2f15:	48 89 c7             	mov    %rax,%rdi
    2f18:	e8 ff 10 00 00       	callq  401c <ecall_array_in>
    2f1d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2f22:	74 0c                	je     2f30 <sgx_ecall_array_in+0x111>
    2f24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2f28:	48 89 c7             	mov    %rax,%rdi
    2f2b:	e8 0f e0 00 00       	callq  10f3f <dlfree>
    2f30:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2f33:	c9                   	leaveq 
    2f34:	c3                   	retq   

0000000000002f35 <sgx_ecall_array_out>:
    2f35:	55                   	push   %rbp
    2f36:	48 89 e5             	mov    %rsp,%rbp
    2f39:	48 83 ec 40          	sub    $0x40,%rsp
    2f3d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2f41:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    2f46:	74 15                	je     2f5d <sgx_ecall_array_out+0x28>
    2f48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2f4c:	be 08 00 00 00       	mov    $0x8,%esi
    2f51:	48 89 c7             	mov    %rax,%rdi
    2f54:	e8 e5 4e 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2f59:	85 c0                	test   %eax,%eax
    2f5b:	75 0a                	jne    2f67 <sgx_ecall_array_out+0x32>
    2f5d:	b8 02 00 00 00       	mov    $0x2,%eax
    2f62:	e9 ff 00 00 00       	jmpq   3066 <sgx_ecall_array_out+0x131>
    2f67:	0f ae e8             	lfence 
    2f6a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2f6e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2f72:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    2f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f7d:	48 8b 00             	mov    (%rax),%rax
    2f80:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2f84:	48 c7 45 f8 10 00 00 	movq   $0x10,-0x8(%rbp)
    2f8b:	00 
    2f8c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2f93:	00 
    2f94:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2f99:	74 21                	je     2fbc <sgx_ecall_array_out+0x87>
    2f9b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2f9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2fa3:	48 89 d6             	mov    %rdx,%rsi
    2fa6:	48 89 c7             	mov    %rax,%rdi
    2fa9:	e8 90 4e 00 00       	callq  7e3e <sgx_is_outside_enclave>
    2fae:	85 c0                	test   %eax,%eax
    2fb0:	75 0a                	jne    2fbc <sgx_ecall_array_out+0x87>
    2fb2:	b8 02 00 00 00       	mov    $0x2,%eax
    2fb7:	e9 aa 00 00 00       	jmpq   3066 <sgx_ecall_array_out+0x131>
    2fbc:	0f ae e8             	lfence 
    2fbf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2fc4:	74 51                	je     3017 <sgx_ecall_array_out+0xe2>
    2fc6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2fcb:	74 4a                	je     3017 <sgx_ecall_array_out+0xe2>
    2fcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fd1:	83 e0 03             	and    $0x3,%eax
    2fd4:	48 85 c0             	test   %rax,%rax
    2fd7:	74 09                	je     2fe2 <sgx_ecall_array_out+0xad>
    2fd9:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    2fe0:	eb 6e                	jmp    3050 <sgx_ecall_array_out+0x11b>
    2fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fe6:	48 89 c7             	mov    %rax,%rdi
    2fe9:	e8 5a d4 00 00       	callq  10448 <dlmalloc>
    2fee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2ff2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2ff7:	75 09                	jne    3002 <sgx_ecall_array_out+0xcd>
    2ff9:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    3000:	eb 4e                	jmp    3050 <sgx_ecall_array_out+0x11b>
    3002:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3006:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    300a:	be 00 00 00 00       	mov    $0x0,%esi
    300f:	48 89 c7             	mov    %rax,%rdi
    3012:	e8 1e 07 01 00       	callq  13735 <memset>
    3017:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    301b:	48 89 c7             	mov    %rax,%rdi
    301e:	e8 73 10 00 00       	callq  4096 <ecall_array_out>
    3023:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3028:	74 25                	je     304f <sgx_ecall_array_out+0x11a>
    302a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    302e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3032:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    3036:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    303a:	48 89 c7             	mov    %rax,%rdi
    303d:	e8 b1 15 01 00       	callq  145f3 <memcpy_s>
    3042:	85 c0                	test   %eax,%eax
    3044:	74 09                	je     304f <sgx_ecall_array_out+0x11a>
    3046:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    304d:	eb 01                	jmp    3050 <sgx_ecall_array_out+0x11b>
    304f:	90                   	nop
    3050:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3055:	74 0c                	je     3063 <sgx_ecall_array_out+0x12e>
    3057:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    305b:	48 89 c7             	mov    %rax,%rdi
    305e:	e8 dc de 00 00       	callq  10f3f <dlfree>
    3063:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3066:	c9                   	leaveq 
    3067:	c3                   	retq   

0000000000003068 <sgx_ecall_array_in_out>:
    3068:	55                   	push   %rbp
    3069:	48 89 e5             	mov    %rsp,%rbp
    306c:	48 83 ec 40          	sub    $0x40,%rsp
    3070:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3074:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3079:	74 15                	je     3090 <sgx_ecall_array_in_out+0x28>
    307b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    307f:	be 08 00 00 00       	mov    $0x8,%esi
    3084:	48 89 c7             	mov    %rax,%rdi
    3087:	e8 b2 4d 00 00       	callq  7e3e <sgx_is_outside_enclave>
    308c:	85 c0                	test   %eax,%eax
    308e:	75 0a                	jne    309a <sgx_ecall_array_in_out+0x32>
    3090:	b8 02 00 00 00       	mov    $0x2,%eax
    3095:	e9 0f 01 00 00       	jmpq   31a9 <sgx_ecall_array_in_out+0x141>
    309a:	0f ae e8             	lfence 
    309d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    30a1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    30a5:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    30ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    30b0:	48 8b 00             	mov    (%rax),%rax
    30b3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    30b7:	48 c7 45 f8 10 00 00 	movq   $0x10,-0x8(%rbp)
    30be:	00 
    30bf:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    30c6:	00 
    30c7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    30cc:	74 21                	je     30ef <sgx_ecall_array_in_out+0x87>
    30ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    30d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    30d6:	48 89 d6             	mov    %rdx,%rsi
    30d9:	48 89 c7             	mov    %rax,%rdi
    30dc:	e8 5d 4d 00 00       	callq  7e3e <sgx_is_outside_enclave>
    30e1:	85 c0                	test   %eax,%eax
    30e3:	75 0a                	jne    30ef <sgx_ecall_array_in_out+0x87>
    30e5:	b8 02 00 00 00       	mov    $0x2,%eax
    30ea:	e9 ba 00 00 00       	jmpq   31a9 <sgx_ecall_array_in_out+0x141>
    30ef:	0f ae e8             	lfence 
    30f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    30f7:	74 61                	je     315a <sgx_ecall_array_in_out+0xf2>
    30f9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    30fe:	74 5a                	je     315a <sgx_ecall_array_in_out+0xf2>
    3100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3104:	83 e0 03             	and    $0x3,%eax
    3107:	48 85 c0             	test   %rax,%rax
    310a:	74 09                	je     3115 <sgx_ecall_array_in_out+0xad>
    310c:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    3113:	eb 7e                	jmp    3193 <sgx_ecall_array_in_out+0x12b>
    3115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3119:	48 89 c7             	mov    %rax,%rdi
    311c:	e8 27 d3 00 00       	callq  10448 <dlmalloc>
    3121:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3125:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    312a:	75 09                	jne    3135 <sgx_ecall_array_in_out+0xcd>
    312c:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    3133:	eb 5e                	jmp    3193 <sgx_ecall_array_in_out+0x12b>
    3135:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3139:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    313d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    3141:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3145:	48 89 c7             	mov    %rax,%rdi
    3148:	e8 a6 14 01 00       	callq  145f3 <memcpy_s>
    314d:	85 c0                	test   %eax,%eax
    314f:	74 09                	je     315a <sgx_ecall_array_in_out+0xf2>
    3151:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    3158:	eb 39                	jmp    3193 <sgx_ecall_array_in_out+0x12b>
    315a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    315e:	48 89 c7             	mov    %rax,%rdi
    3161:	e8 a9 0f 00 00       	callq  410f <ecall_array_in_out>
    3166:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    316b:	74 25                	je     3192 <sgx_ecall_array_in_out+0x12a>
    316d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3171:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3175:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    3179:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    317d:	48 89 c7             	mov    %rax,%rdi
    3180:	e8 6e 14 01 00       	callq  145f3 <memcpy_s>
    3185:	85 c0                	test   %eax,%eax
    3187:	74 09                	je     3192 <sgx_ecall_array_in_out+0x12a>
    3189:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    3190:	eb 01                	jmp    3193 <sgx_ecall_array_in_out+0x12b>
    3192:	90                   	nop
    3193:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3198:	74 0c                	je     31a6 <sgx_ecall_array_in_out+0x13e>
    319a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    319e:	48 89 c7             	mov    %rax,%rdi
    31a1:	e8 99 dd 00 00       	callq  10f3f <dlfree>
    31a6:	8b 45 dc             	mov    -0x24(%rbp),%eax
    31a9:	c9                   	leaveq 
    31aa:	c3                   	retq   

00000000000031ab <sgx_ecall_array_isary>:
    31ab:	55                   	push   %rbp
    31ac:	48 89 e5             	mov    %rsp,%rbp
    31af:	48 83 ec 20          	sub    $0x20,%rsp
    31b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    31b7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    31bc:	74 15                	je     31d3 <sgx_ecall_array_isary+0x28>
    31be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31c2:	be 08 00 00 00       	mov    $0x8,%esi
    31c7:	48 89 c7             	mov    %rax,%rdi
    31ca:	e8 6f 4c 00 00       	callq  7e3e <sgx_is_outside_enclave>
    31cf:	85 c0                	test   %eax,%eax
    31d1:	75 07                	jne    31da <sgx_ecall_array_isary+0x2f>
    31d3:	b8 02 00 00 00       	mov    $0x2,%eax
    31d8:	eb 24                	jmp    31fe <sgx_ecall_array_isary+0x53>
    31da:	0f ae e8             	lfence 
    31dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    31e5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    31ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31f0:	48 8b 00             	mov    (%rax),%rax
    31f3:	48 89 c7             	mov    %rax,%rdi
    31f6:	e8 8e 0f 00 00       	callq  4189 <ecall_array_isary>
    31fb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    31fe:	c9                   	leaveq 
    31ff:	c3                   	retq   

0000000000003200 <sgx_ecall_function_public>:
    3200:	55                   	push   %rbp
    3201:	48 89 e5             	mov    %rsp,%rbp
    3204:	48 83 ec 20          	sub    $0x20,%rsp
    3208:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    320c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3213:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3218:	74 07                	je     3221 <sgx_ecall_function_public+0x21>
    321a:	b8 02 00 00 00       	mov    $0x2,%eax
    321f:	eb 08                	jmp    3229 <sgx_ecall_function_public+0x29>
    3221:	e8 08 10 00 00       	callq  422e <ecall_function_public>
    3226:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3229:	c9                   	leaveq 
    322a:	c3                   	retq   

000000000000322b <sgx_ecall_function_private>:
    322b:	55                   	push   %rbp
    322c:	48 89 e5             	mov    %rsp,%rbp
    322f:	48 83 ec 20          	sub    $0x20,%rsp
    3233:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3237:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    323c:	74 15                	je     3253 <sgx_ecall_function_private+0x28>
    323e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3242:	be 04 00 00 00       	mov    $0x4,%esi
    3247:	48 89 c7             	mov    %rax,%rdi
    324a:	e8 ef 4b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    324f:	85 c0                	test   %eax,%eax
    3251:	75 07                	jne    325a <sgx_ecall_function_private+0x2f>
    3253:	b8 02 00 00 00       	mov    $0x2,%eax
    3258:	eb 22                	jmp    327c <sgx_ecall_function_private+0x51>
    325a:	0f ae e8             	lfence 
    325d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3261:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3265:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    326c:	e8 e2 0f 00 00       	callq  4253 <ecall_function_private>
    3271:	89 c2                	mov    %eax,%edx
    3273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3277:	89 10                	mov    %edx,(%rax)
    3279:	8b 45 f4             	mov    -0xc(%rbp),%eax
    327c:	c9                   	leaveq 
    327d:	c3                   	retq   

000000000000327e <sgx_ecall_malloc_free>:
    327e:	55                   	push   %rbp
    327f:	48 89 e5             	mov    %rsp,%rbp
    3282:	48 83 ec 20          	sub    $0x20,%rsp
    3286:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    328a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3291:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3296:	74 07                	je     329f <sgx_ecall_malloc_free+0x21>
    3298:	b8 02 00 00 00       	mov    $0x2,%eax
    329d:	eb 08                	jmp    32a7 <sgx_ecall_malloc_free+0x29>
    329f:	e8 87 18 00 00       	callq  4b2b <ecall_malloc_free>
    32a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    32a7:	c9                   	leaveq 
    32a8:	c3                   	retq   

00000000000032a9 <sgx_ecall_sgx_cpuid>:
    32a9:	55                   	push   %rbp
    32aa:	48 89 e5             	mov    %rsp,%rbp
    32ad:	48 83 ec 40          	sub    $0x40,%rsp
    32b1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    32b5:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    32ba:	74 15                	je     32d1 <sgx_ecall_sgx_cpuid+0x28>
    32bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    32c0:	be 10 00 00 00       	mov    $0x10,%esi
    32c5:	48 89 c7             	mov    %rax,%rdi
    32c8:	e8 71 4b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    32cd:	85 c0                	test   %eax,%eax
    32cf:	75 0a                	jne    32db <sgx_ecall_sgx_cpuid+0x32>
    32d1:	b8 02 00 00 00       	mov    $0x2,%eax
    32d6:	e9 08 01 00 00       	jmpq   33e3 <sgx_ecall_sgx_cpuid+0x13a>
    32db:	0f ae e8             	lfence 
    32de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    32e2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    32e6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    32ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32f1:	48 8b 00             	mov    (%rax),%rax
    32f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    32f8:	48 c7 45 f8 10 00 00 	movq   $0x10,-0x8(%rbp)
    32ff:	00 
    3300:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    3307:	00 
    3308:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    330d:	74 21                	je     3330 <sgx_ecall_sgx_cpuid+0x87>
    330f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3313:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3317:	48 89 d6             	mov    %rdx,%rsi
    331a:	48 89 c7             	mov    %rax,%rdi
    331d:	e8 1c 4b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    3322:	85 c0                	test   %eax,%eax
    3324:	75 0a                	jne    3330 <sgx_ecall_sgx_cpuid+0x87>
    3326:	b8 02 00 00 00       	mov    $0x2,%eax
    332b:	e9 b3 00 00 00       	jmpq   33e3 <sgx_ecall_sgx_cpuid+0x13a>
    3330:	0f ae e8             	lfence 
    3333:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3338:	74 51                	je     338b <sgx_ecall_sgx_cpuid+0xe2>
    333a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    333f:	74 4a                	je     338b <sgx_ecall_sgx_cpuid+0xe2>
    3341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3345:	83 e0 03             	and    $0x3,%eax
    3348:	48 85 c0             	test   %rax,%rax
    334b:	74 09                	je     3356 <sgx_ecall_sgx_cpuid+0xad>
    334d:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    3354:	eb 77                	jmp    33cd <sgx_ecall_sgx_cpuid+0x124>
    3356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    335a:	48 89 c7             	mov    %rax,%rdi
    335d:	e8 e6 d0 00 00       	callq  10448 <dlmalloc>
    3362:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3366:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    336b:	75 09                	jne    3376 <sgx_ecall_sgx_cpuid+0xcd>
    336d:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
    3374:	eb 57                	jmp    33cd <sgx_ecall_sgx_cpuid+0x124>
    3376:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    337a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    337e:	be 00 00 00 00       	mov    $0x0,%esi
    3383:	48 89 c7             	mov    %rax,%rdi
    3386:	e8 aa 03 01 00       	callq  13735 <memset>
    338b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    338f:	8b 50 08             	mov    0x8(%rax),%edx
    3392:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3396:	89 d6                	mov    %edx,%esi
    3398:	48 89 c7             	mov    %rax,%rdi
    339b:	e8 ec 17 00 00       	callq  4b8c <ecall_sgx_cpuid>
    33a0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    33a5:	74 25                	je     33cc <sgx_ecall_sgx_cpuid+0x123>
    33a7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    33ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    33af:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    33b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33b7:	48 89 c7             	mov    %rax,%rdi
    33ba:	e8 34 12 01 00       	callq  145f3 <memcpy_s>
    33bf:	85 c0                	test   %eax,%eax
    33c1:	74 09                	je     33cc <sgx_ecall_sgx_cpuid+0x123>
    33c3:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    33ca:	eb 01                	jmp    33cd <sgx_ecall_sgx_cpuid+0x124>
    33cc:	90                   	nop
    33cd:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    33d2:	74 0c                	je     33e0 <sgx_ecall_sgx_cpuid+0x137>
    33d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    33d8:	48 89 c7             	mov    %rax,%rdi
    33db:	e8 5f db 00 00       	callq  10f3f <dlfree>
    33e0:	8b 45 dc             	mov    -0x24(%rbp),%eax
    33e3:	c9                   	leaveq 
    33e4:	c3                   	retq   

00000000000033e5 <sgx_ecall_exception>:
    33e5:	55                   	push   %rbp
    33e6:	48 89 e5             	mov    %rsp,%rbp
    33e9:	48 83 ec 20          	sub    $0x20,%rsp
    33ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    33f1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    33f8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    33fd:	74 07                	je     3406 <sgx_ecall_exception+0x21>
    33ff:	b8 02 00 00 00       	mov    $0x2,%eax
    3404:	eb 08                	jmp    340e <sgx_ecall_exception+0x29>
    3406:	e8 cc 17 00 00       	callq  4bd7 <ecall_exception>
    340b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    340e:	c9                   	leaveq 
    340f:	c3                   	retq   

0000000000003410 <sgx_ecall_map>:
    3410:	55                   	push   %rbp
    3411:	48 89 e5             	mov    %rsp,%rbp
    3414:	48 83 ec 20          	sub    $0x20,%rsp
    3418:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    341c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3423:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3428:	74 07                	je     3431 <sgx_ecall_map+0x21>
    342a:	b8 02 00 00 00       	mov    $0x2,%eax
    342f:	eb 08                	jmp    3439 <sgx_ecall_map+0x29>
    3431:	e8 bb 1c 00 00       	callq  50f1 <ecall_map>
    3436:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3439:	c9                   	leaveq 
    343a:	c3                   	retq   

000000000000343b <sgx_ecall_increase_counter>:
    343b:	55                   	push   %rbp
    343c:	48 89 e5             	mov    %rsp,%rbp
    343f:	48 83 ec 20          	sub    $0x20,%rsp
    3443:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3447:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    344c:	74 15                	je     3463 <sgx_ecall_increase_counter+0x28>
    344e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3452:	be 08 00 00 00       	mov    $0x8,%esi
    3457:	48 89 c7             	mov    %rax,%rdi
    345a:	e8 df 49 00 00       	callq  7e3e <sgx_is_outside_enclave>
    345f:	85 c0                	test   %eax,%eax
    3461:	75 07                	jne    346a <sgx_ecall_increase_counter+0x2f>
    3463:	b8 02 00 00 00       	mov    $0x2,%eax
    3468:	eb 24                	jmp    348e <sgx_ecall_increase_counter+0x53>
    346a:	0f ae e8             	lfence 
    346d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3471:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3475:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    347c:	e8 9d 46 00 00       	callq  7b1e <ecall_increase_counter>
    3481:	48 89 c2             	mov    %rax,%rdx
    3484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3488:	48 89 10             	mov    %rdx,(%rax)
    348b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    348e:	c9                   	leaveq 
    348f:	c3                   	retq   

0000000000003490 <sgx_ecall_producer>:
    3490:	55                   	push   %rbp
    3491:	48 89 e5             	mov    %rsp,%rbp
    3494:	48 83 ec 20          	sub    $0x20,%rsp
    3498:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    349c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    34a3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    34a8:	74 07                	je     34b1 <sgx_ecall_producer+0x21>
    34aa:	b8 02 00 00 00       	mov    $0x2,%eax
    34af:	eb 08                	jmp    34b9 <sgx_ecall_producer+0x29>
    34b1:	e8 e1 46 00 00       	callq  7b97 <ecall_producer>
    34b6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    34b9:	c9                   	leaveq 
    34ba:	c3                   	retq   

00000000000034bb <sgx_ecall_consumer>:
    34bb:	55                   	push   %rbp
    34bc:	48 89 e5             	mov    %rsp,%rbp
    34bf:	48 83 ec 20          	sub    $0x20,%rsp
    34c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    34c7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    34ce:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    34d3:	74 07                	je     34dc <sgx_ecall_consumer+0x21>
    34d5:	b8 02 00 00 00       	mov    $0x2,%eax
    34da:	eb 08                	jmp    34e4 <sgx_ecall_consumer+0x29>
    34dc:	e8 cc 47 00 00       	callq  7cad <ecall_consumer>
    34e1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    34e4:	c9                   	leaveq 
    34e5:	c3                   	retq   

00000000000034e6 <ocall_print_string>:
    34e6:	55                   	push   %rbp
    34e7:	48 89 e5             	mov    %rsp,%rbp
    34ea:	48 83 ec 40          	sub    $0x40,%rsp
    34ee:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    34f2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    34f9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    34fe:	74 12                	je     3512 <ocall_print_string+0x2c>
    3500:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3504:	48 89 c7             	mov    %rax,%rdi
    3507:	e8 65 07 01 00       	callq  13c71 <strlen>
    350c:	48 83 c0 01          	add    $0x1,%rax
    3510:	eb 05                	jmp    3517 <ocall_print_string+0x31>
    3512:	b8 00 00 00 00       	mov    $0x0,%eax
    3517:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    351b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3522:	00 
    3523:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    352a:	00 
    352b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3532:	00 
    3533:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3538:	74 21                	je     355b <ocall_print_string+0x75>
    353a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    353e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3542:	48 89 d6             	mov    %rdx,%rsi
    3545:	48 89 c7             	mov    %rax,%rdi
    3548:	e8 64 48 00 00       	callq  7db1 <sgx_is_within_enclave>
    354d:	85 c0                	test   %eax,%eax
    354f:	75 0a                	jne    355b <ocall_print_string+0x75>
    3551:	b8 02 00 00 00       	mov    $0x2,%eax
    3556:	e9 f1 00 00 00       	jmpq   364c <ocall_print_string+0x166>
    355b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3560:	74 06                	je     3568 <ocall_print_string+0x82>
    3562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3566:	eb 05                	jmp    356d <ocall_print_string+0x87>
    3568:	b8 00 00 00 00       	mov    $0x0,%eax
    356d:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    3571:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3576:	74 06                	je     357e <ocall_print_string+0x98>
    3578:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    357c:	eb 05                	jmp    3583 <ocall_print_string+0x9d>
    357e:	b8 00 00 00 00       	mov    $0x0,%eax
    3583:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    3587:	73 0a                	jae    3593 <ocall_print_string+0xad>
    3589:	b8 02 00 00 00       	mov    $0x2,%eax
    358e:	e9 b9 00 00 00       	jmpq   364c <ocall_print_string+0x166>
    3593:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3597:	48 89 c7             	mov    %rax,%rdi
    359a:	e8 2c 49 00 00       	callq  7ecb <sgx_ocalloc>
    359f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    35a3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    35a8:	75 0f                	jne    35b9 <ocall_print_string+0xd3>
    35aa:	e8 2d 4a 00 00       	callq  7fdc <sgx_ocfree>
    35af:	b8 01 00 00 00       	mov    $0x1,%eax
    35b4:	e9 93 00 00 00       	jmpq   364c <ocall_print_string+0x166>
    35b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    35c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35c5:	48 83 c0 08          	add    $0x8,%rax
    35c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    35cd:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    35d2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    35d7:	74 4c                	je     3625 <ocall_print_string+0x13f>
    35d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    35e1:	48 89 10             	mov    %rdx,(%rax)
    35e4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    35e8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    35ec:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    35f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35f4:	48 89 c7             	mov    %rax,%rdi
    35f7:	e8 f7 0f 01 00       	callq  145f3 <memcpy_s>
    35fc:	85 c0                	test   %eax,%eax
    35fe:	74 0c                	je     360c <ocall_print_string+0x126>
    3600:	e8 d7 49 00 00       	callq  7fdc <sgx_ocfree>
    3605:	b8 01 00 00 00       	mov    $0x1,%eax
    360a:	eb 40                	jmp    364c <ocall_print_string+0x166>
    360c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3610:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3614:	48 01 d0             	add    %rdx,%rax
    3617:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    361b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    361f:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    3623:	eb 0b                	jmp    3630 <ocall_print_string+0x14a>
    3625:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3629:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3630:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3634:	48 89 c6             	mov    %rax,%rsi
    3637:	bf 00 00 00 00       	mov    $0x0,%edi
    363c:	e8 2a 57 00 00       	callq  8d6b <sgx_ocall>
    3641:	89 45 dc             	mov    %eax,-0x24(%rbp)
    3644:	e8 93 49 00 00       	callq  7fdc <sgx_ocfree>
    3649:	8b 45 dc             	mov    -0x24(%rbp),%eax
    364c:	c9                   	leaveq 
    364d:	c3                   	retq   

000000000000364e <ocall_pointer_user_check>:
    364e:	55                   	push   %rbp
    364f:	48 89 e5             	mov    %rsp,%rbp
    3652:	48 83 ec 30          	sub    $0x30,%rsp
    3656:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    365a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3661:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3668:	00 
    3669:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    3670:	00 
    3671:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3678:	00 
    3679:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    367d:	48 89 c7             	mov    %rax,%rdi
    3680:	e8 46 48 00 00       	callq  7ecb <sgx_ocalloc>
    3685:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3689:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    368e:	75 0c                	jne    369c <ocall_pointer_user_check+0x4e>
    3690:	e8 47 49 00 00       	callq  7fdc <sgx_ocfree>
    3695:	b8 01 00 00 00       	mov    $0x1,%eax
    369a:	eb 40                	jmp    36dc <ocall_pointer_user_check+0x8e>
    369c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    36a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36a8:	48 83 c0 08          	add    $0x8,%rax
    36ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    36b0:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    36b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    36bd:	48 89 10             	mov    %rdx,(%rax)
    36c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36c4:	48 89 c6             	mov    %rax,%rsi
    36c7:	bf 01 00 00 00       	mov    $0x1,%edi
    36cc:	e8 9a 56 00 00       	callq  8d6b <sgx_ocall>
    36d1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    36d4:	e8 03 49 00 00       	callq  7fdc <sgx_ocfree>
    36d9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    36dc:	c9                   	leaveq 
    36dd:	c3                   	retq   

00000000000036de <ocall_pointer_in>:
    36de:	55                   	push   %rbp
    36df:	48 89 e5             	mov    %rsp,%rbp
    36e2:	48 83 ec 40          	sub    $0x40,%rsp
    36e6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    36ea:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    36f1:	48 c7 45 e0 04 00 00 	movq   $0x4,-0x20(%rbp)
    36f8:	00 
    36f9:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3700:	00 
    3701:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    3708:	00 
    3709:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3710:	00 
    3711:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3716:	74 21                	je     3739 <ocall_pointer_in+0x5b>
    3718:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    371c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3720:	48 89 d6             	mov    %rdx,%rsi
    3723:	48 89 c7             	mov    %rax,%rdi
    3726:	e8 86 46 00 00       	callq  7db1 <sgx_is_within_enclave>
    372b:	85 c0                	test   %eax,%eax
    372d:	75 0a                	jne    3739 <ocall_pointer_in+0x5b>
    372f:	b8 02 00 00 00       	mov    $0x2,%eax
    3734:	e9 09 01 00 00       	jmpq   3842 <ocall_pointer_in+0x164>
    3739:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    373e:	74 06                	je     3746 <ocall_pointer_in+0x68>
    3740:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3744:	eb 05                	jmp    374b <ocall_pointer_in+0x6d>
    3746:	b8 00 00 00 00       	mov    $0x0,%eax
    374b:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    374f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3754:	74 06                	je     375c <ocall_pointer_in+0x7e>
    3756:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    375a:	eb 05                	jmp    3761 <ocall_pointer_in+0x83>
    375c:	b8 00 00 00 00       	mov    $0x0,%eax
    3761:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    3765:	73 0a                	jae    3771 <ocall_pointer_in+0x93>
    3767:	b8 02 00 00 00       	mov    $0x2,%eax
    376c:	e9 d1 00 00 00       	jmpq   3842 <ocall_pointer_in+0x164>
    3771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3775:	48 89 c7             	mov    %rax,%rdi
    3778:	e8 4e 47 00 00       	callq  7ecb <sgx_ocalloc>
    377d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3781:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3786:	75 0f                	jne    3797 <ocall_pointer_in+0xb9>
    3788:	e8 4f 48 00 00       	callq  7fdc <sgx_ocfree>
    378d:	b8 01 00 00 00       	mov    $0x1,%eax
    3792:	e9 ab 00 00 00       	jmpq   3842 <ocall_pointer_in+0x164>
    3797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    379b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    379f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37a3:	48 83 c0 08          	add    $0x8,%rax
    37a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    37ab:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    37b0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    37b5:	74 64                	je     381b <ocall_pointer_in+0x13d>
    37b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    37bf:	48 89 10             	mov    %rdx,(%rax)
    37c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    37c6:	83 e0 03             	and    $0x3,%eax
    37c9:	48 85 c0             	test   %rax,%rax
    37cc:	74 0c                	je     37da <ocall_pointer_in+0xfc>
    37ce:	e8 09 48 00 00       	callq  7fdc <sgx_ocfree>
    37d3:	b8 02 00 00 00       	mov    $0x2,%eax
    37d8:	eb 68                	jmp    3842 <ocall_pointer_in+0x164>
    37da:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    37de:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    37e2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    37e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37ea:	48 89 c7             	mov    %rax,%rdi
    37ed:	e8 01 0e 01 00       	callq  145f3 <memcpy_s>
    37f2:	85 c0                	test   %eax,%eax
    37f4:	74 0c                	je     3802 <ocall_pointer_in+0x124>
    37f6:	e8 e1 47 00 00       	callq  7fdc <sgx_ocfree>
    37fb:	b8 01 00 00 00       	mov    $0x1,%eax
    3800:	eb 40                	jmp    3842 <ocall_pointer_in+0x164>
    3802:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3806:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    380a:	48 01 d0             	add    %rdx,%rax
    380d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3811:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3815:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    3819:	eb 0b                	jmp    3826 <ocall_pointer_in+0x148>
    381b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    381f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    382a:	48 89 c6             	mov    %rax,%rsi
    382d:	bf 02 00 00 00       	mov    $0x2,%edi
    3832:	e8 34 55 00 00       	callq  8d6b <sgx_ocall>
    3837:	89 45 dc             	mov    %eax,-0x24(%rbp)
    383a:	e8 9d 47 00 00       	callq  7fdc <sgx_ocfree>
    383f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3842:	c9                   	leaveq 
    3843:	c3                   	retq   

0000000000003844 <ocall_pointer_out>:
    3844:	55                   	push   %rbp
    3845:	48 89 e5             	mov    %rsp,%rbp
    3848:	48 83 ec 40          	sub    $0x40,%rsp
    384c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3850:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    3857:	48 c7 45 e0 04 00 00 	movq   $0x4,-0x20(%rbp)
    385e:	00 
    385f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3866:	00 
    3867:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    386e:	00 
    386f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3876:	00 
    3877:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    387e:	00 
    387f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3884:	74 21                	je     38a7 <ocall_pointer_out+0x63>
    3886:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    388a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    388e:	48 89 d6             	mov    %rdx,%rsi
    3891:	48 89 c7             	mov    %rax,%rdi
    3894:	e8 18 45 00 00       	callq  7db1 <sgx_is_within_enclave>
    3899:	85 c0                	test   %eax,%eax
    389b:	75 0a                	jne    38a7 <ocall_pointer_out+0x63>
    389d:	b8 02 00 00 00       	mov    $0x2,%eax
    38a2:	e9 36 01 00 00       	jmpq   39dd <ocall_pointer_out+0x199>
    38a7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    38ac:	74 06                	je     38b4 <ocall_pointer_out+0x70>
    38ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    38b2:	eb 05                	jmp    38b9 <ocall_pointer_out+0x75>
    38b4:	b8 00 00 00 00       	mov    $0x0,%eax
    38b9:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    38bd:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    38c2:	74 06                	je     38ca <ocall_pointer_out+0x86>
    38c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    38c8:	eb 05                	jmp    38cf <ocall_pointer_out+0x8b>
    38ca:	b8 00 00 00 00       	mov    $0x0,%eax
    38cf:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    38d3:	73 0a                	jae    38df <ocall_pointer_out+0x9b>
    38d5:	b8 02 00 00 00       	mov    $0x2,%eax
    38da:	e9 fe 00 00 00       	jmpq   39dd <ocall_pointer_out+0x199>
    38df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    38e3:	48 89 c7             	mov    %rax,%rdi
    38e6:	e8 e0 45 00 00       	callq  7ecb <sgx_ocalloc>
    38eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    38ef:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    38f4:	75 0f                	jne    3905 <ocall_pointer_out+0xc1>
    38f6:	e8 e1 46 00 00       	callq  7fdc <sgx_ocfree>
    38fb:	b8 01 00 00 00       	mov    $0x1,%eax
    3900:	e9 d8 00 00 00       	jmpq   39dd <ocall_pointer_out+0x199>
    3905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3909:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    390d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3911:	48 83 c0 08          	add    $0x8,%rax
    3915:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3919:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    391e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3923:	74 5c                	je     3981 <ocall_pointer_out+0x13d>
    3925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3929:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    392d:	48 89 10             	mov    %rdx,(%rax)
    3930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3934:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3938:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    393c:	83 e0 03             	and    $0x3,%eax
    393f:	48 85 c0             	test   %rax,%rax
    3942:	74 0f                	je     3953 <ocall_pointer_out+0x10f>
    3944:	e8 93 46 00 00       	callq  7fdc <sgx_ocfree>
    3949:	b8 02 00 00 00       	mov    $0x2,%eax
    394e:	e9 8a 00 00 00       	jmpq   39dd <ocall_pointer_out+0x199>
    3953:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3957:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    395b:	be 00 00 00 00       	mov    $0x0,%esi
    3960:	48 89 c7             	mov    %rax,%rdi
    3963:	e8 cd fd 00 00       	callq  13735 <memset>
    3968:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    396c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3970:	48 01 d0             	add    %rdx,%rax
    3973:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3977:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    397b:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    397f:	eb 0b                	jmp    398c <ocall_pointer_out+0x148>
    3981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3985:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    398c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3990:	48 89 c6             	mov    %rax,%rsi
    3993:	bf 03 00 00 00       	mov    $0x3,%edi
    3998:	e8 ce 53 00 00       	callq  8d6b <sgx_ocall>
    399d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    39a0:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    39a4:	75 2f                	jne    39d5 <ocall_pointer_out+0x191>
    39a6:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    39ab:	74 28                	je     39d5 <ocall_pointer_out+0x191>
    39ad:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    39b1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    39b5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    39b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39bd:	48 89 c7             	mov    %rax,%rdi
    39c0:	e8 2e 0c 01 00       	callq  145f3 <memcpy_s>
    39c5:	85 c0                	test   %eax,%eax
    39c7:	74 0c                	je     39d5 <ocall_pointer_out+0x191>
    39c9:	e8 0e 46 00 00       	callq  7fdc <sgx_ocfree>
    39ce:	b8 01 00 00 00       	mov    $0x1,%eax
    39d3:	eb 08                	jmp    39dd <ocall_pointer_out+0x199>
    39d5:	e8 02 46 00 00       	callq  7fdc <sgx_ocfree>
    39da:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    39dd:	c9                   	leaveq 
    39de:	c3                   	retq   

00000000000039df <ocall_pointer_in_out>:
    39df:	55                   	push   %rbp
    39e0:	48 89 e5             	mov    %rsp,%rbp
    39e3:	48 83 ec 40          	sub    $0x40,%rsp
    39e7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    39eb:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    39f2:	48 c7 45 e0 04 00 00 	movq   $0x4,-0x20(%rbp)
    39f9:	00 
    39fa:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3a01:	00 
    3a02:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    3a09:	00 
    3a0a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3a11:	00 
    3a12:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    3a19:	00 
    3a1a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3a1f:	74 21                	je     3a42 <ocall_pointer_in_out+0x63>
    3a21:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3a25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3a29:	48 89 d6             	mov    %rdx,%rsi
    3a2c:	48 89 c7             	mov    %rax,%rdi
    3a2f:	e8 7d 43 00 00       	callq  7db1 <sgx_is_within_enclave>
    3a34:	85 c0                	test   %eax,%eax
    3a36:	75 0a                	jne    3a42 <ocall_pointer_in_out+0x63>
    3a38:	b8 02 00 00 00       	mov    $0x2,%eax
    3a3d:	e9 49 01 00 00       	jmpq   3b8b <ocall_pointer_in_out+0x1ac>
    3a42:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3a47:	74 06                	je     3a4f <ocall_pointer_in_out+0x70>
    3a49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a4d:	eb 05                	jmp    3a54 <ocall_pointer_in_out+0x75>
    3a4f:	b8 00 00 00 00       	mov    $0x0,%eax
    3a54:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    3a58:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3a5d:	74 06                	je     3a65 <ocall_pointer_in_out+0x86>
    3a5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a63:	eb 05                	jmp    3a6a <ocall_pointer_in_out+0x8b>
    3a65:	b8 00 00 00 00       	mov    $0x0,%eax
    3a6a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    3a6e:	73 0a                	jae    3a7a <ocall_pointer_in_out+0x9b>
    3a70:	b8 02 00 00 00       	mov    $0x2,%eax
    3a75:	e9 11 01 00 00       	jmpq   3b8b <ocall_pointer_in_out+0x1ac>
    3a7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a7e:	48 89 c7             	mov    %rax,%rdi
    3a81:	e8 45 44 00 00       	callq  7ecb <sgx_ocalloc>
    3a86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3a8a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3a8f:	75 0f                	jne    3aa0 <ocall_pointer_in_out+0xc1>
    3a91:	e8 46 45 00 00       	callq  7fdc <sgx_ocfree>
    3a96:	b8 01 00 00 00       	mov    $0x1,%eax
    3a9b:	e9 eb 00 00 00       	jmpq   3b8b <ocall_pointer_in_out+0x1ac>
    3aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aa4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aac:	48 83 c0 08          	add    $0x8,%rax
    3ab0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3ab4:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    3ab9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3abe:	74 6f                	je     3b2f <ocall_pointer_in_out+0x150>
    3ac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ac4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ac8:	48 89 10             	mov    %rdx,(%rax)
    3acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3acf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3ad3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ad7:	83 e0 03             	and    $0x3,%eax
    3ada:	48 85 c0             	test   %rax,%rax
    3add:	74 0f                	je     3aee <ocall_pointer_in_out+0x10f>
    3adf:	e8 f8 44 00 00       	callq  7fdc <sgx_ocfree>
    3ae4:	b8 02 00 00 00       	mov    $0x2,%eax
    3ae9:	e9 9d 00 00 00       	jmpq   3b8b <ocall_pointer_in_out+0x1ac>
    3aee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3af2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3af6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    3afa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3afe:	48 89 c7             	mov    %rax,%rdi
    3b01:	e8 ed 0a 01 00       	callq  145f3 <memcpy_s>
    3b06:	85 c0                	test   %eax,%eax
    3b08:	74 0c                	je     3b16 <ocall_pointer_in_out+0x137>
    3b0a:	e8 cd 44 00 00       	callq  7fdc <sgx_ocfree>
    3b0f:	b8 01 00 00 00       	mov    $0x1,%eax
    3b14:	eb 75                	jmp    3b8b <ocall_pointer_in_out+0x1ac>
    3b16:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3b1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3b1e:	48 01 d0             	add    %rdx,%rax
    3b21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3b25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3b29:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    3b2d:	eb 0b                	jmp    3b3a <ocall_pointer_in_out+0x15b>
    3b2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b33:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3b3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b3e:	48 89 c6             	mov    %rax,%rsi
    3b41:	bf 04 00 00 00       	mov    $0x4,%edi
    3b46:	e8 20 52 00 00       	callq  8d6b <sgx_ocall>
    3b4b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3b4e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    3b52:	75 2f                	jne    3b83 <ocall_pointer_in_out+0x1a4>
    3b54:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3b59:	74 28                	je     3b83 <ocall_pointer_in_out+0x1a4>
    3b5b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3b5f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3b63:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    3b67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3b6b:	48 89 c7             	mov    %rax,%rdi
    3b6e:	e8 80 0a 01 00       	callq  145f3 <memcpy_s>
    3b73:	85 c0                	test   %eax,%eax
    3b75:	74 0c                	je     3b83 <ocall_pointer_in_out+0x1a4>
    3b77:	e8 60 44 00 00       	callq  7fdc <sgx_ocfree>
    3b7c:	b8 01 00 00 00       	mov    $0x1,%eax
    3b81:	eb 08                	jmp    3b8b <ocall_pointer_in_out+0x1ac>
    3b83:	e8 54 44 00 00       	callq  7fdc <sgx_ocfree>
    3b88:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3b8b:	c9                   	leaveq 
    3b8c:	c3                   	retq   

0000000000003b8d <ocall_function_allow>:
    3b8d:	55                   	push   %rbp
    3b8e:	48 89 e5             	mov    %rsp,%rbp
    3b91:	48 83 ec 10          	sub    $0x10,%rsp
    3b95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3b9c:	be 00 00 00 00       	mov    $0x0,%esi
    3ba1:	bf 05 00 00 00       	mov    $0x5,%edi
    3ba6:	e8 c0 51 00 00       	callq  8d6b <sgx_ocall>
    3bab:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3bae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3bb1:	c9                   	leaveq 
    3bb2:	c3                   	retq   

0000000000003bb3 <sgx_oc_cpuidex>:
    3bb3:	55                   	push   %rbp
    3bb4:	48 89 e5             	mov    %rsp,%rbp
    3bb7:	48 83 ec 40          	sub    $0x40,%rsp
    3bbb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3bbf:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    3bc2:	89 55 c0             	mov    %edx,-0x40(%rbp)
    3bc5:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    3bcc:	48 c7 45 e0 10 00 00 	movq   $0x10,-0x20(%rbp)
    3bd3:	00 
    3bd4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3bdb:	00 
    3bdc:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    3be3:	00 
    3be4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3beb:	00 
    3bec:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    3bf3:	00 
    3bf4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3bf9:	74 21                	je     3c1c <sgx_oc_cpuidex+0x69>
    3bfb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3bff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3c03:	48 89 d6             	mov    %rdx,%rsi
    3c06:	48 89 c7             	mov    %rax,%rdi
    3c09:	e8 a3 41 00 00       	callq  7db1 <sgx_is_within_enclave>
    3c0e:	85 c0                	test   %eax,%eax
    3c10:	75 0a                	jne    3c1c <sgx_oc_cpuidex+0x69>
    3c12:	b8 02 00 00 00       	mov    $0x2,%eax
    3c17:	e9 4a 01 00 00       	jmpq   3d66 <sgx_oc_cpuidex+0x1b3>
    3c1c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3c21:	74 06                	je     3c29 <sgx_oc_cpuidex+0x76>
    3c23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c27:	eb 05                	jmp    3c2e <sgx_oc_cpuidex+0x7b>
    3c29:	b8 00 00 00 00       	mov    $0x0,%eax
    3c2e:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    3c32:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3c37:	74 06                	je     3c3f <sgx_oc_cpuidex+0x8c>
    3c39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c3d:	eb 05                	jmp    3c44 <sgx_oc_cpuidex+0x91>
    3c3f:	b8 00 00 00 00       	mov    $0x0,%eax
    3c44:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    3c48:	73 0a                	jae    3c54 <sgx_oc_cpuidex+0xa1>
    3c4a:	b8 02 00 00 00       	mov    $0x2,%eax
    3c4f:	e9 12 01 00 00       	jmpq   3d66 <sgx_oc_cpuidex+0x1b3>
    3c54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c58:	48 89 c7             	mov    %rax,%rdi
    3c5b:	e8 6b 42 00 00       	callq  7ecb <sgx_ocalloc>
    3c60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c64:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3c69:	75 0f                	jne    3c7a <sgx_oc_cpuidex+0xc7>
    3c6b:	e8 6c 43 00 00       	callq  7fdc <sgx_ocfree>
    3c70:	b8 01 00 00 00       	mov    $0x1,%eax
    3c75:	e9 ec 00 00 00       	jmpq   3d66 <sgx_oc_cpuidex+0x1b3>
    3c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c7e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c86:	48 83 c0 10          	add    $0x10,%rax
    3c8a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c8e:	48 83 6d f0 10       	subq   $0x10,-0x10(%rbp)
    3c93:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3c98:	74 5c                	je     3cf6 <sgx_oc_cpuidex+0x143>
    3c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c9e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ca2:	48 89 10             	mov    %rdx,(%rax)
    3ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ca9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3cad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3cb1:	83 e0 03             	and    $0x3,%eax
    3cb4:	48 85 c0             	test   %rax,%rax
    3cb7:	74 0f                	je     3cc8 <sgx_oc_cpuidex+0x115>
    3cb9:	e8 1e 43 00 00       	callq  7fdc <sgx_ocfree>
    3cbe:	b8 02 00 00 00       	mov    $0x2,%eax
    3cc3:	e9 9e 00 00 00       	jmpq   3d66 <sgx_oc_cpuidex+0x1b3>
    3cc8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3ccc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cd0:	be 00 00 00 00       	mov    $0x0,%esi
    3cd5:	48 89 c7             	mov    %rax,%rdi
    3cd8:	e8 58 fa 00 00       	callq  13735 <memset>
    3cdd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ce1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ce5:	48 01 d0             	add    %rdx,%rax
    3ce8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3cec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3cf0:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    3cf4:	eb 0b                	jmp    3d01 <sgx_oc_cpuidex+0x14e>
    3cf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cfa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3d01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d05:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    3d08:	89 50 08             	mov    %edx,0x8(%rax)
    3d0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d0f:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3d12:	89 50 0c             	mov    %edx,0xc(%rax)
    3d15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d19:	48 89 c6             	mov    %rax,%rsi
    3d1c:	bf 06 00 00 00       	mov    $0x6,%edi
    3d21:	e8 45 50 00 00       	callq  8d6b <sgx_ocall>
    3d26:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3d29:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    3d2d:	75 2f                	jne    3d5e <sgx_oc_cpuidex+0x1ab>
    3d2f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3d34:	74 28                	je     3d5e <sgx_oc_cpuidex+0x1ab>
    3d36:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3d3a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3d3e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    3d42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3d46:	48 89 c7             	mov    %rax,%rdi
    3d49:	e8 a5 08 01 00       	callq  145f3 <memcpy_s>
    3d4e:	85 c0                	test   %eax,%eax
    3d50:	74 0c                	je     3d5e <sgx_oc_cpuidex+0x1ab>
    3d52:	e8 85 42 00 00       	callq  7fdc <sgx_ocfree>
    3d57:	b8 01 00 00 00       	mov    $0x1,%eax
    3d5c:	eb 08                	jmp    3d66 <sgx_oc_cpuidex+0x1b3>
    3d5e:	e8 79 42 00 00       	callq  7fdc <sgx_ocfree>
    3d63:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3d66:	c9                   	leaveq 
    3d67:	c3                   	retq   

0000000000003d68 <sgx_thread_wait_untrusted_event_ocall>:
    3d68:	55                   	push   %rbp
    3d69:	48 89 e5             	mov    %rsp,%rbp
    3d6c:	48 83 ec 30          	sub    $0x30,%rsp
    3d70:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3d74:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3d78:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3d7f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3d86:	00 
    3d87:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    3d8e:	00 
    3d8f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3d96:	00 
    3d97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d9b:	48 89 c7             	mov    %rax,%rdi
    3d9e:	e8 28 41 00 00       	callq  7ecb <sgx_ocalloc>
    3da3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3da7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3dac:	75 0c                	jne    3dba <sgx_thread_wait_untrusted_event_ocall+0x52>
    3dae:	e8 29 42 00 00       	callq  7fdc <sgx_ocfree>
    3db3:	b8 01 00 00 00       	mov    $0x1,%eax
    3db8:	eb 5a                	jmp    3e14 <sgx_thread_wait_untrusted_event_ocall+0xac>
    3dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dbe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3dc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dc6:	48 83 c0 10          	add    $0x10,%rax
    3dca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3dce:	48 83 6d f0 10       	subq   $0x10,-0x10(%rbp)
    3dd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dd7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3ddb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3ddf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3de3:	48 89 c6             	mov    %rax,%rsi
    3de6:	bf 07 00 00 00       	mov    $0x7,%edi
    3deb:	e8 7b 4f 00 00       	callq  8d6b <sgx_ocall>
    3df0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    3df3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    3df7:	75 13                	jne    3e0c <sgx_thread_wait_untrusted_event_ocall+0xa4>
    3df9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3dfe:	74 0c                	je     3e0c <sgx_thread_wait_untrusted_event_ocall+0xa4>
    3e00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e04:	8b 10                	mov    (%rax),%edx
    3e06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e0a:	89 10                	mov    %edx,(%rax)
    3e0c:	e8 cb 41 00 00       	callq  7fdc <sgx_ocfree>
    3e11:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3e14:	c9                   	leaveq 
    3e15:	c3                   	retq   

0000000000003e16 <sgx_thread_set_untrusted_event_ocall>:
    3e16:	55                   	push   %rbp
    3e17:	48 89 e5             	mov    %rsp,%rbp
    3e1a:	48 83 ec 30          	sub    $0x30,%rsp
    3e1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3e22:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3e26:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3e2d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3e34:	00 
    3e35:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    3e3c:	00 
    3e3d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3e44:	00 
    3e45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3e49:	48 89 c7             	mov    %rax,%rdi
    3e4c:	e8 7a 40 00 00       	callq  7ecb <sgx_ocalloc>
    3e51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3e55:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3e5a:	75 0c                	jne    3e68 <sgx_thread_set_untrusted_event_ocall+0x52>
    3e5c:	e8 7b 41 00 00       	callq  7fdc <sgx_ocfree>
    3e61:	b8 01 00 00 00       	mov    $0x1,%eax
    3e66:	eb 5a                	jmp    3ec2 <sgx_thread_set_untrusted_event_ocall+0xac>
    3e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e6c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e74:	48 83 c0 10          	add    $0x10,%rax
    3e78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3e7c:	48 83 6d f0 10       	subq   $0x10,-0x10(%rbp)
    3e81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e85:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3e89:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3e8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e91:	48 89 c6             	mov    %rax,%rsi
    3e94:	bf 08 00 00 00       	mov    $0x8,%edi
    3e99:	e8 cd 4e 00 00       	callq  8d6b <sgx_ocall>
    3e9e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    3ea1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    3ea5:	75 13                	jne    3eba <sgx_thread_set_untrusted_event_ocall+0xa4>
    3ea7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3eac:	74 0c                	je     3eba <sgx_thread_set_untrusted_event_ocall+0xa4>
    3eae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3eb2:	8b 10                	mov    (%rax),%edx
    3eb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3eb8:	89 10                	mov    %edx,(%rax)
    3eba:	e8 1d 41 00 00       	callq  7fdc <sgx_ocfree>
    3ebf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3ec2:	c9                   	leaveq 
    3ec3:	c3                   	retq   

0000000000003ec4 <sgx_thread_setwait_untrusted_events_ocall>:
    3ec4:	55                   	push   %rbp
    3ec5:	48 89 e5             	mov    %rsp,%rbp
    3ec8:	48 83 ec 40          	sub    $0x40,%rsp
    3ecc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3ed0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3ed4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    3ed8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3edf:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3ee6:	00 
    3ee7:	48 c7 45 f0 18 00 00 	movq   $0x18,-0x10(%rbp)
    3eee:	00 
    3eef:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3ef6:	00 
    3ef7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3efb:	48 89 c7             	mov    %rax,%rdi
    3efe:	e8 c8 3f 00 00       	callq  7ecb <sgx_ocalloc>
    3f03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3f07:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3f0c:	75 0c                	jne    3f1a <sgx_thread_setwait_untrusted_events_ocall+0x56>
    3f0e:	e8 c9 40 00 00       	callq  7fdc <sgx_ocfree>
    3f13:	b8 01 00 00 00       	mov    $0x1,%eax
    3f18:	eb 66                	jmp    3f80 <sgx_thread_setwait_untrusted_events_ocall+0xbc>
    3f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f26:	48 83 c0 18          	add    $0x18,%rax
    3f2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3f2e:	48 83 6d f0 18       	subq   $0x18,-0x10(%rbp)
    3f33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f37:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3f3b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3f3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f43:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3f47:	48 89 50 10          	mov    %rdx,0x10(%rax)
    3f4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f4f:	48 89 c6             	mov    %rax,%rsi
    3f52:	bf 09 00 00 00       	mov    $0x9,%edi
    3f57:	e8 0f 4e 00 00       	callq  8d6b <sgx_ocall>
    3f5c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    3f5f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    3f63:	75 13                	jne    3f78 <sgx_thread_setwait_untrusted_events_ocall+0xb4>
    3f65:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3f6a:	74 0c                	je     3f78 <sgx_thread_setwait_untrusted_events_ocall+0xb4>
    3f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f70:	8b 10                	mov    (%rax),%edx
    3f72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f76:	89 10                	mov    %edx,(%rax)
    3f78:	e8 5f 40 00 00       	callq  7fdc <sgx_ocfree>
    3f7d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3f80:	c9                   	leaveq 
    3f81:	c3                   	retq   

0000000000003f82 <ecall_array_user_check>:
    3f82:	55                   	push   %rbp
    3f83:	48 89 e5             	mov    %rsp,%rbp
    3f86:	48 83 ec 20          	sub    $0x20,%rsp
    3f8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f92:	be 10 00 00 00       	mov    $0x10,%esi
    3f97:	48 89 c7             	mov    %rax,%rdi
    3f9a:	e8 9f 3e 00 00       	callq  7e3e <sgx_is_outside_enclave>
    3f9f:	83 f8 01             	cmp    $0x1,%eax
    3fa2:	0f 95 c0             	setne  %al
    3fa5:	84 c0                	test   %al,%al
    3fa7:	74 05                	je     3fae <ecall_array_user_check+0x2c>
    3fa9:	e8 2b 76 03 00       	callq  3b5d9 <abort>
    3fae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3fb5:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    3fb9:	7f 5e                	jg     4019 <ecall_array_user_check+0x97>
    3fbb:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3fbe:	48 98                	cltq   
    3fc0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3fc7:	00 
    3fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fcc:	48 01 d0             	add    %rdx,%rax
    3fcf:	8b 00                	mov    (%rax),%eax
    3fd1:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    3fd4:	74 1f                	je     3ff5 <ecall_array_user_check+0x73>
    3fd6:	48 8d 0d 8b 81 03 00 	lea    0x3818b(%rip),%rcx        # 3c168 <g_dyn_entry_table+0x168>
    3fdd:	48 8d 15 cc 81 03 00 	lea    0x381cc(%rip),%rdx        # 3c1b0 <_ZZ22ecall_array_user_checkE8__func__>
    3fe4:	be 2f 00 00 00       	mov    $0x2f,%esi
    3fe9:	48 8d 3d 88 81 03 00 	lea    0x38188(%rip),%rdi        # 3c178 <g_dyn_entry_table+0x178>
    3ff0:	e8 a0 74 00 00       	callq  b495 <__assert>
    3ff5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3ff8:	48 98                	cltq   
    3ffa:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4001:	00 
    4002:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4006:	48 01 c2             	add    %rax,%rdx
    4009:	b8 03 00 00 00       	mov    $0x3,%eax
    400e:	2b 45 fc             	sub    -0x4(%rbp),%eax
    4011:	89 02                	mov    %eax,(%rdx)
    4013:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4017:	eb 9c                	jmp    3fb5 <ecall_array_user_check+0x33>
    4019:	90                   	nop
    401a:	c9                   	leaveq 
    401b:	c3                   	retq   

000000000000401c <ecall_array_in>:
    401c:	55                   	push   %rbp
    401d:	48 89 e5             	mov    %rsp,%rbp
    4020:	48 83 ec 20          	sub    $0x20,%rsp
    4024:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4028:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    402f:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    4033:	7f 5e                	jg     4093 <ecall_array_in+0x77>
    4035:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4038:	48 98                	cltq   
    403a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4041:	00 
    4042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4046:	48 01 d0             	add    %rdx,%rax
    4049:	8b 00                	mov    (%rax),%eax
    404b:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    404e:	74 1f                	je     406f <ecall_array_in+0x53>
    4050:	48 8d 0d 11 81 03 00 	lea    0x38111(%rip),%rcx        # 3c168 <g_dyn_entry_table+0x168>
    4057:	48 8d 15 6a 81 03 00 	lea    0x3816a(%rip),%rdx        # 3c1c8 <_ZZ14ecall_array_inE8__func__>
    405e:	be 3b 00 00 00       	mov    $0x3b,%esi
    4063:	48 8d 3d 0e 81 03 00 	lea    0x3810e(%rip),%rdi        # 3c178 <g_dyn_entry_table+0x178>
    406a:	e8 26 74 00 00       	callq  b495 <__assert>
    406f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4072:	48 98                	cltq   
    4074:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    407b:	00 
    407c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4080:	48 01 c2             	add    %rax,%rdx
    4083:	b8 03 00 00 00       	mov    $0x3,%eax
    4088:	2b 45 fc             	sub    -0x4(%rbp),%eax
    408b:	89 02                	mov    %eax,(%rdx)
    408d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4091:	eb 9c                	jmp    402f <ecall_array_in+0x13>
    4093:	90                   	nop
    4094:	c9                   	leaveq 
    4095:	c3                   	retq   

0000000000004096 <ecall_array_out>:
    4096:	55                   	push   %rbp
    4097:	48 89 e5             	mov    %rsp,%rbp
    409a:	48 83 ec 20          	sub    $0x20,%rsp
    409e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    40a2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    40a9:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    40ad:	7f 5d                	jg     410c <ecall_array_out+0x76>
    40af:	8b 45 fc             	mov    -0x4(%rbp),%eax
    40b2:	48 98                	cltq   
    40b4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    40bb:	00 
    40bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40c0:	48 01 d0             	add    %rdx,%rax
    40c3:	8b 00                	mov    (%rax),%eax
    40c5:	85 c0                	test   %eax,%eax
    40c7:	74 1f                	je     40e8 <ecall_array_out+0x52>
    40c9:	48 8d 0d c9 80 03 00 	lea    0x380c9(%rip),%rcx        # 3c199 <g_dyn_entry_table+0x199>
    40d0:	48 8d 15 09 81 03 00 	lea    0x38109(%rip),%rdx        # 3c1e0 <_ZZ15ecall_array_outE8__func__>
    40d7:	be 48 00 00 00       	mov    $0x48,%esi
    40dc:	48 8d 3d 95 80 03 00 	lea    0x38095(%rip),%rdi        # 3c178 <g_dyn_entry_table+0x178>
    40e3:	e8 ad 73 00 00       	callq  b495 <__assert>
    40e8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    40eb:	48 98                	cltq   
    40ed:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    40f4:	00 
    40f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40f9:	48 01 c2             	add    %rax,%rdx
    40fc:	b8 03 00 00 00       	mov    $0x3,%eax
    4101:	2b 45 fc             	sub    -0x4(%rbp),%eax
    4104:	89 02                	mov    %eax,(%rdx)
    4106:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    410a:	eb 9d                	jmp    40a9 <ecall_array_out+0x13>
    410c:	90                   	nop
    410d:	c9                   	leaveq 
    410e:	c3                   	retq   

000000000000410f <ecall_array_in_out>:
    410f:	55                   	push   %rbp
    4110:	48 89 e5             	mov    %rsp,%rbp
    4113:	48 83 ec 20          	sub    $0x20,%rsp
    4117:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    411b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4122:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    4126:	7f 5e                	jg     4186 <ecall_array_in_out+0x77>
    4128:	8b 45 fc             	mov    -0x4(%rbp),%eax
    412b:	48 98                	cltq   
    412d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4134:	00 
    4135:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4139:	48 01 d0             	add    %rdx,%rax
    413c:	8b 00                	mov    (%rax),%eax
    413e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    4141:	74 1f                	je     4162 <ecall_array_in_out+0x53>
    4143:	48 8d 0d 1e 80 03 00 	lea    0x3801e(%rip),%rcx        # 3c168 <g_dyn_entry_table+0x168>
    414a:	48 8d 15 9f 80 03 00 	lea    0x3809f(%rip),%rdx        # 3c1f0 <_ZZ18ecall_array_in_outE8__func__>
    4151:	be 54 00 00 00       	mov    $0x54,%esi
    4156:	48 8d 3d 1b 80 03 00 	lea    0x3801b(%rip),%rdi        # 3c178 <g_dyn_entry_table+0x178>
    415d:	e8 33 73 00 00       	callq  b495 <__assert>
    4162:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4165:	48 98                	cltq   
    4167:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    416e:	00 
    416f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4173:	48 01 c2             	add    %rax,%rdx
    4176:	b8 03 00 00 00       	mov    $0x3,%eax
    417b:	2b 45 fc             	sub    -0x4(%rbp),%eax
    417e:	89 02                	mov    %eax,(%rdx)
    4180:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4184:	eb 9c                	jmp    4122 <ecall_array_in_out+0x13>
    4186:	90                   	nop
    4187:	c9                   	leaveq 
    4188:	c3                   	retq   

0000000000004189 <ecall_array_isary>:
    4189:	55                   	push   %rbp
    418a:	48 89 e5             	mov    %rsp,%rbp
    418d:	48 83 ec 20          	sub    $0x20,%rsp
    4191:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4195:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4199:	be 28 00 00 00       	mov    $0x28,%esi
    419e:	48 89 c7             	mov    %rax,%rdi
    41a1:	e8 98 3c 00 00       	callq  7e3e <sgx_is_outside_enclave>
    41a6:	83 f8 01             	cmp    $0x1,%eax
    41a9:	0f 95 c0             	setne  %al
    41ac:	84 c0                	test   %al,%al
    41ae:	74 05                	je     41b5 <ecall_array_isary+0x2c>
    41b0:	e8 24 74 03 00       	callq  3b5d9 <abort>
    41b5:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
    41bc:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    41c3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    41c6:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    41c9:	7d 60                	jge    422b <ecall_array_isary+0xa2>
    41cb:	8b 45 f8             	mov    -0x8(%rbp),%eax
    41ce:	48 98                	cltq   
    41d0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    41d7:	00 
    41d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41dc:	48 01 d0             	add    %rdx,%rax
    41df:	8b 00                	mov    (%rax),%eax
    41e1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    41e4:	74 1f                	je     4205 <ecall_array_isary+0x7c>
    41e6:	48 8d 0d 7b 7f 03 00 	lea    0x37f7b(%rip),%rcx        # 3c168 <g_dyn_entry_table+0x168>
    41ed:	48 8d 15 1c 80 03 00 	lea    0x3801c(%rip),%rdx        # 3c210 <_ZZ17ecall_array_isaryE8__func__>
    41f4:	be 63 00 00 00       	mov    $0x63,%esi
    41f9:	48 8d 3d 78 7f 03 00 	lea    0x37f78(%rip),%rdi        # 3c178 <g_dyn_entry_table+0x178>
    4200:	e8 90 72 00 00       	callq  b495 <__assert>
    4205:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4208:	83 e8 01             	sub    $0x1,%eax
    420b:	8b 55 f8             	mov    -0x8(%rbp),%edx
    420e:	48 63 d2             	movslq %edx,%rdx
    4211:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    4218:	00 
    4219:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    421d:	48 01 ca             	add    %rcx,%rdx
    4220:	2b 45 f8             	sub    -0x8(%rbp),%eax
    4223:	89 02                	mov    %eax,(%rdx)
    4225:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    4229:	eb 98                	jmp    41c3 <ecall_array_isary+0x3a>
    422b:	90                   	nop
    422c:	c9                   	leaveq 
    422d:	c3                   	retq   

000000000000422e <ecall_function_public>:
    422e:	55                   	push   %rbp
    422f:	48 89 e5             	mov    %rsp,%rbp
    4232:	48 83 ec 10          	sub    $0x10,%rsp
    4236:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    423d:	e8 4b f9 ff ff       	callq  3b8d <ocall_function_allow>
    4242:	89 45 fc             	mov    %eax,-0x4(%rbp)
    4245:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    4249:	74 05                	je     4250 <ecall_function_public+0x22>
    424b:	e8 89 73 03 00       	callq  3b5d9 <abort>
    4250:	90                   	nop
    4251:	c9                   	leaveq 
    4252:	c3                   	retq   

0000000000004253 <ecall_function_private>:
    4253:	55                   	push   %rbp
    4254:	48 89 e5             	mov    %rsp,%rbp
    4257:	b8 01 00 00 00       	mov    $0x1,%eax
    425c:	5d                   	pop    %rbp
    425d:	c3                   	retq   

000000000000425e <_Z17checksum_internalPcm>:
    425e:	55                   	push   %rbp
    425f:	48 89 e5             	mov    %rsp,%rbp
    4262:	53                   	push   %rbx
    4263:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    4267:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
    426b:	bb 00 00 00 00       	mov    $0x0,%ebx
    4270:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4274:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4278:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
    427d:	76 19                	jbe    4298 <_Z17checksum_internalPcm+0x3a>
    427f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4283:	48 8d 50 02          	lea    0x2(%rax),%rdx
    4287:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    428b:	0f b7 00             	movzwl (%rax),%eax
    428e:	98                   	cwtl   
    428f:	01 c3                	add    %eax,%ebx
    4291:	48 83 6d d8 02       	subq   $0x2,-0x28(%rbp)
    4296:	eb e0                	jmp    4278 <_Z17checksum_internalPcm+0x1a>
    4298:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    429d:	74 0c                	je     42ab <_Z17checksum_internalPcm+0x4d>
    429f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    42a3:	0f b6 00             	movzbl (%rax),%eax
    42a6:	0f be c0             	movsbl %al,%eax
    42a9:	01 c3                	add    %eax,%ebx
    42ab:	89 d8                	mov    %ebx,%eax
    42ad:	f7 d0                	not    %eax
    42af:	5b                   	pop    %rbx
    42b0:	5d                   	pop    %rbp
    42b1:	c3                   	retq   

00000000000042b2 <ecall_pointer_user_check>:
    42b2:	55                   	push   %rbp
    42b3:	48 89 e5             	mov    %rsp,%rbp
    42b6:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    42bd:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    42c4:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    42cb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    42d2:	00 00 
    42d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    42d8:	31 c0                	xor    %eax,%eax
    42da:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    42e1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    42e8:	48 89 d6             	mov    %rdx,%rsi
    42eb:	48 89 c7             	mov    %rax,%rdi
    42ee:	e8 4b 3b 00 00       	callq  7e3e <sgx_is_outside_enclave>
    42f3:	83 f8 01             	cmp    $0x1,%eax
    42f6:	0f 95 c0             	setne  %al
    42f9:	84 c0                	test   %al,%al
    42fb:	74 05                	je     4302 <ecall_pointer_user_check+0x50>
    42fd:	e8 d7 72 03 00       	callq  3b5d9 <abort>
    4302:	0f ae e8             	lfence 
    4305:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    4309:	b8 00 00 00 00       	mov    $0x0,%eax
    430e:	b9 0c 00 00 00       	mov    $0xc,%ecx
    4313:	48 89 d7             	mov    %rdx,%rdi
    4316:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4319:	48 89 fa             	mov    %rdi,%rdx
    431c:	89 02                	mov    %eax,(%rdx)
    431e:	48 83 c2 04          	add    $0x4,%rdx
    4322:	b8 64 00 00 00       	mov    $0x64,%eax
    4327:	48 83 bd 70 ff ff ff 	cmpq   $0x64,-0x90(%rbp)
    432e:	64 
    432f:	48 0f 46 85 70 ff ff 	cmovbe -0x90(%rbp),%rax
    4336:	ff 
    4337:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    433b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    433f:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    4346:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    434a:	48 89 ce             	mov    %rcx,%rsi
    434d:	48 89 c7             	mov    %rax,%rdi
    4350:	e8 72 f3 00 00       	callq  136c7 <memcpy>
    4355:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    4359:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    435d:	48 89 d6             	mov    %rdx,%rsi
    4360:	48 89 c7             	mov    %rax,%rdi
    4363:	e8 f6 fe ff ff       	callq  425e <_Z17checksum_internalPcm>
    4368:	89 45 84             	mov    %eax,-0x7c(%rbp)
    436b:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
    436e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    4372:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    4379:	48 89 c6             	mov    %rax,%rsi
    437c:	48 8d 3d a5 7e 03 00 	lea    0x37ea5(%rip),%rdi        # 3c228 <_ZZ17ecall_array_isaryE8__func__+0x18>
    4383:	b8 00 00 00 00       	mov    $0x0,%eax
    4388:	e8 8e 06 00 00       	callq  4a1b <printf>
    438d:	b8 0c 00 00 00       	mov    $0xc,%eax
    4392:	48 83 7d 88 0c       	cmpq   $0xc,-0x78(%rbp)
    4397:	48 0f 46 45 88       	cmovbe -0x78(%rbp),%rax
    439c:	48 89 c2             	mov    %rax,%rdx
    439f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    43a6:	48 8d 35 97 7e 03 00 	lea    0x37e97(%rip),%rsi        # 3c244 <_ZZ17ecall_array_isaryE8__func__+0x34>
    43ad:	48 89 c7             	mov    %rax,%rdi
    43b0:	e8 12 f3 00 00       	callq  136c7 <memcpy>
    43b5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    43b9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    43bd:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    43c4:	00 00 
    43c6:	74 05                	je     43cd <ecall_pointer_user_check+0x11b>
    43c8:	e8 bf 70 00 00       	callq  b48c <__stack_chk_fail>
    43cd:	c9                   	leaveq 
    43ce:	c3                   	retq   

00000000000043cf <ecall_pointer_in>:
    43cf:	55                   	push   %rbp
    43d0:	48 89 e5             	mov    %rsp,%rbp
    43d3:	48 83 ec 10          	sub    $0x10,%rsp
    43d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43df:	be 04 00 00 00       	mov    $0x4,%esi
    43e4:	48 89 c7             	mov    %rax,%rdi
    43e7:	e8 c5 39 00 00       	callq  7db1 <sgx_is_within_enclave>
    43ec:	83 f8 01             	cmp    $0x1,%eax
    43ef:	0f 95 c0             	setne  %al
    43f2:	84 c0                	test   %al,%al
    43f4:	74 05                	je     43fb <ecall_pointer_in+0x2c>
    43f6:	e8 de 71 03 00       	callq  3b5d9 <abort>
    43fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43ff:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
    4405:	90                   	nop
    4406:	c9                   	leaveq 
    4407:	c3                   	retq   

0000000000004408 <ecall_pointer_out>:
    4408:	55                   	push   %rbp
    4409:	48 89 e5             	mov    %rsp,%rbp
    440c:	48 83 ec 10          	sub    $0x10,%rsp
    4410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4418:	be 04 00 00 00       	mov    $0x4,%esi
    441d:	48 89 c7             	mov    %rax,%rdi
    4420:	e8 8c 39 00 00       	callq  7db1 <sgx_is_within_enclave>
    4425:	83 f8 01             	cmp    $0x1,%eax
    4428:	0f 95 c0             	setne  %al
    442b:	84 c0                	test   %al,%al
    442d:	74 05                	je     4434 <ecall_pointer_out+0x2c>
    442f:	e8 a5 71 03 00       	callq  3b5d9 <abort>
    4434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4438:	8b 00                	mov    (%rax),%eax
    443a:	85 c0                	test   %eax,%eax
    443c:	74 1f                	je     445d <ecall_pointer_out+0x55>
    443e:	48 8d 0d 0b 7e 03 00 	lea    0x37e0b(%rip),%rcx        # 3c250 <_ZZ17ecall_array_isaryE8__func__+0x40>
    4445:	48 8d 15 64 7e 03 00 	lea    0x37e64(%rip),%rdx        # 3c2b0 <_ZZ17ecall_pointer_outE8__func__>
    444c:	be 6f 00 00 00       	mov    $0x6f,%esi
    4451:	48 8d 3d 08 7e 03 00 	lea    0x37e08(%rip),%rdi        # 3c260 <_ZZ17ecall_array_isaryE8__func__+0x50>
    4458:	e8 38 70 00 00       	callq  b495 <__assert>
    445d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4461:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
    4467:	90                   	nop
    4468:	c9                   	leaveq 
    4469:	c3                   	retq   

000000000000446a <ecall_pointer_in_out>:
    446a:	55                   	push   %rbp
    446b:	48 89 e5             	mov    %rsp,%rbp
    446e:	48 83 ec 10          	sub    $0x10,%rsp
    4472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    447a:	be 04 00 00 00       	mov    $0x4,%esi
    447f:	48 89 c7             	mov    %rax,%rdi
    4482:	e8 2a 39 00 00       	callq  7db1 <sgx_is_within_enclave>
    4487:	83 f8 01             	cmp    $0x1,%eax
    448a:	0f 95 c0             	setne  %al
    448d:	84 c0                	test   %al,%al
    448f:	74 05                	je     4496 <ecall_pointer_in_out+0x2c>
    4491:	e8 43 71 03 00       	callq  3b5d9 <abort>
    4496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    449a:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
    44a0:	90                   	nop
    44a1:	c9                   	leaveq 
    44a2:	c3                   	retq   

00000000000044a3 <ocall_pointer_attr>:
    44a3:	55                   	push   %rbp
    44a4:	48 89 e5             	mov    %rsp,%rbp
    44a7:	48 83 ec 10          	sub    $0x10,%rsp
    44ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    44b2:	00 00 
    44b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    44b8:	31 c0                	xor    %eax,%eax
    44ba:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    44c1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    44c8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    44cc:	48 89 c7             	mov    %rax,%rdi
    44cf:	e8 7a f1 ff ff       	callq  364e <ocall_pointer_user_check>
    44d4:	89 45 f4             	mov    %eax,-0xc(%rbp)
    44d7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    44db:	74 05                	je     44e2 <ocall_pointer_attr+0x3f>
    44dd:	e8 f7 70 03 00       	callq  3b5d9 <abort>
    44e2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    44e9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    44ed:	48 89 c7             	mov    %rax,%rdi
    44f0:	e8 e9 f1 ff ff       	callq  36de <ocall_pointer_in>
    44f5:	89 45 f4             	mov    %eax,-0xc(%rbp)
    44f8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    44fc:	74 05                	je     4503 <ocall_pointer_attr+0x60>
    44fe:	e8 d6 70 03 00       	callq  3b5d9 <abort>
    4503:	8b 45 f0             	mov    -0x10(%rbp),%eax
    4506:	85 c0                	test   %eax,%eax
    4508:	74 1f                	je     4529 <ocall_pointer_attr+0x86>
    450a:	48 8d 0d 72 7d 03 00 	lea    0x37d72(%rip),%rcx        # 3c283 <_ZZ17ecall_array_isaryE8__func__+0x73>
    4511:	48 8d 15 b8 7d 03 00 	lea    0x37db8(%rip),%rdx        # 3c2d0 <_ZZ18ocall_pointer_attrE8__func__>
    4518:	be 8d 00 00 00       	mov    $0x8d,%esi
    451d:	48 8d 3d 3c 7d 03 00 	lea    0x37d3c(%rip),%rdi        # 3c260 <_ZZ17ecall_array_isaryE8__func__+0x50>
    4524:	e8 6c 6f 00 00       	callq  b495 <__assert>
    4529:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    4530:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    4534:	48 89 c7             	mov    %rax,%rdi
    4537:	e8 08 f3 ff ff       	callq  3844 <ocall_pointer_out>
    453c:	89 45 f4             	mov    %eax,-0xc(%rbp)
    453f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    4543:	74 05                	je     454a <ocall_pointer_attr+0xa7>
    4545:	e8 8f 70 03 00       	callq  3b5d9 <abort>
    454a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    454d:	3d d2 04 00 00       	cmp    $0x4d2,%eax
    4552:	74 1f                	je     4573 <ocall_pointer_attr+0xd0>
    4554:	48 8d 0d 31 7d 03 00 	lea    0x37d31(%rip),%rcx        # 3c28c <_ZZ17ecall_array_isaryE8__func__+0x7c>
    455b:	48 8d 15 6e 7d 03 00 	lea    0x37d6e(%rip),%rdx        # 3c2d0 <_ZZ18ocall_pointer_attrE8__func__>
    4562:	be 93 00 00 00       	mov    $0x93,%esi
    4567:	48 8d 3d f2 7c 03 00 	lea    0x37cf2(%rip),%rdi        # 3c260 <_ZZ17ecall_array_isaryE8__func__+0x50>
    456e:	e8 22 6f 00 00       	callq  b495 <__assert>
    4573:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    457a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    457e:	48 89 c7             	mov    %rax,%rdi
    4581:	e8 59 f4 ff ff       	callq  39df <ocall_pointer_in_out>
    4586:	89 45 f4             	mov    %eax,-0xc(%rbp)
    4589:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    458d:	74 05                	je     4594 <ocall_pointer_attr+0xf1>
    458f:	e8 45 70 03 00       	callq  3b5d9 <abort>
    4594:	8b 45 f0             	mov    -0x10(%rbp),%eax
    4597:	3d d2 04 00 00       	cmp    $0x4d2,%eax
    459c:	74 20                	je     45be <ocall_pointer_attr+0x11b>
    459e:	48 8d 0d e7 7c 03 00 	lea    0x37ce7(%rip),%rcx        # 3c28c <_ZZ17ecall_array_isaryE8__func__+0x7c>
    45a5:	48 8d 15 24 7d 03 00 	lea    0x37d24(%rip),%rdx        # 3c2d0 <_ZZ18ocall_pointer_attrE8__func__>
    45ac:	be 99 00 00 00       	mov    $0x99,%esi
    45b1:	48 8d 3d a8 7c 03 00 	lea    0x37ca8(%rip),%rdi        # 3c260 <_ZZ17ecall_array_isaryE8__func__+0x50>
    45b8:	e8 d8 6e 00 00       	callq  b495 <__assert>
    45bd:	90                   	nop
    45be:	90                   	nop
    45bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45c3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    45ca:	00 00 
    45cc:	74 05                	je     45d3 <ocall_pointer_attr+0x130>
    45ce:	e8 b9 6e 00 00       	callq  b48c <__stack_chk_fail>
    45d3:	c9                   	leaveq 
    45d4:	c3                   	retq   

00000000000045d5 <ecall_pointer_string>:
    45d5:	55                   	push   %rbp
    45d6:	48 89 e5             	mov    %rsp,%rbp
    45d9:	48 83 ec 10          	sub    $0x10,%rsp
    45dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45e5:	48 89 c7             	mov    %rax,%rdi
    45e8:	e8 84 f6 00 00       	callq  13c71 <strlen>
    45ed:	48 89 c2             	mov    %rax,%rdx
    45f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f4:	48 8d 35 9d 7c 03 00 	lea    0x37c9d(%rip),%rsi        # 3c298 <_ZZ17ecall_array_isaryE8__func__+0x88>
    45fb:	48 89 c7             	mov    %rax,%rdi
    45fe:	e8 a0 f6 00 00       	callq  13ca3 <strncpy>
    4603:	90                   	nop
    4604:	c9                   	leaveq 
    4605:	c3                   	retq   

0000000000004606 <ecall_pointer_string_const>:
    4606:	55                   	push   %rbp
    4607:	48 89 e5             	mov    %rsp,%rbp
    460a:	48 83 ec 20          	sub    $0x20,%rsp
    460e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4616:	48 89 c7             	mov    %rax,%rdi
    4619:	e8 53 f6 00 00       	callq  13c71 <strlen>
    461e:	48 89 c7             	mov    %rax,%rdi
    4621:	e8 b4 2d 02 00       	callq  273da <_Znam>
    4626:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    462a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    462e:	48 89 c7             	mov    %rax,%rdi
    4631:	e8 3b f6 00 00       	callq  13c71 <strlen>
    4636:	48 89 c2             	mov    %rax,%rdx
    4639:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    463d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4641:	48 89 ce             	mov    %rcx,%rsi
    4644:	48 89 c7             	mov    %rax,%rdi
    4647:	e8 57 f6 00 00       	callq  13ca3 <strncpy>
    464c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4651:	74 0c                	je     465f <ecall_pointer_string_const+0x59>
    4653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4657:	48 89 c7             	mov    %rax,%rdi
    465a:	e8 aa 2c 02 00       	callq  27309 <_ZdaPv>
    465f:	90                   	nop
    4660:	c9                   	leaveq 
    4661:	c3                   	retq   

0000000000004662 <ecall_pointer_size>:
    4662:	55                   	push   %rbp
    4663:	48 89 e5             	mov    %rsp,%rbp
    4666:	48 83 ec 10          	sub    $0x10,%rsp
    466a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    466e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4672:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    467a:	48 8d 35 17 7c 03 00 	lea    0x37c17(%rip),%rsi        # 3c298 <_ZZ17ecall_array_isaryE8__func__+0x88>
    4681:	48 89 c7             	mov    %rax,%rdi
    4684:	e8 1a f6 00 00       	callq  13ca3 <strncpy>
    4689:	90                   	nop
    468a:	c9                   	leaveq 
    468b:	c3                   	retq   

000000000000468c <ecall_pointer_count>:
    468c:	55                   	push   %rbp
    468d:	48 89 e5             	mov    %rsp,%rbp
    4690:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4694:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4698:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    469c:	89 45 fc             	mov    %eax,-0x4(%rbp)
    469f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    46a2:	83 e8 01             	sub    $0x1,%eax
    46a5:	89 45 f8             	mov    %eax,-0x8(%rbp)
    46a8:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    46ac:	78 26                	js     46d4 <ecall_pointer_count+0x48>
    46ae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    46b1:	83 e8 01             	sub    $0x1,%eax
    46b4:	8b 55 f8             	mov    -0x8(%rbp),%edx
    46b7:	48 63 d2             	movslq %edx,%rdx
    46ba:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    46c1:	00 
    46c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    46c6:	48 01 ca             	add    %rcx,%rdx
    46c9:	2b 45 f8             	sub    -0x8(%rbp),%eax
    46cc:	89 02                	mov    %eax,(%rdx)
    46ce:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
    46d2:	eb d4                	jmp    46a8 <ecall_pointer_count+0x1c>
    46d4:	90                   	nop
    46d5:	5d                   	pop    %rbp
    46d6:	c3                   	retq   

00000000000046d7 <ecall_pointer_isptr_readonly>:
    46d7:	55                   	push   %rbp
    46d8:	48 89 e5             	mov    %rsp,%rbp
    46db:	48 83 ec 10          	sub    $0x10,%rsp
    46df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46ef:	48 8d 35 a2 7b 03 00 	lea    0x37ba2(%rip),%rsi        # 3c298 <_ZZ17ecall_array_isaryE8__func__+0x88>
    46f6:	48 89 c7             	mov    %rax,%rdi
    46f9:	e8 a5 f5 00 00       	callq  13ca3 <strncpy>
    46fe:	90                   	nop
    46ff:	c9                   	leaveq 
    4700:	c3                   	retq   

0000000000004701 <_Z12almost_equaldd>:
    4701:	55                   	push   %rbp
    4702:	48 89 e5             	mov    %rsp,%rbp
    4705:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    470a:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
    470f:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    4714:	f2 0f 5c 45 e0       	subsd  -0x20(%rbp),%xmm0
    4719:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    471e:	f2 0f 10 4d f8       	movsd  -0x8(%rbp),%xmm1
    4723:	f3 0f 7e 05 d5 7c 03 	movq   0x37cd5(%rip),%xmm0        # 3c400 <_ZZ18ocall_pointer_attrE8__func__+0x130>
    472a:	00 
    472b:	66 0f 54 c8          	andpd  %xmm0,%xmm1
    472f:	f2 0f 10 1d d9 7c 03 	movsd  0x37cd9(%rip),%xmm3        # 3c410 <_ZZ18ocall_pointer_attrE8__func__+0x140>
    4736:	00 
    4737:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    473c:	f2 0f 58 45 e0       	addsd  -0x20(%rbp),%xmm0
    4741:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    4746:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
    474b:	f3 0f 7e 05 ad 7c 03 	movq   0x37cad(%rip),%xmm0        # 3c400 <_ZZ18ocall_pointer_attrE8__func__+0x130>
    4752:	00 
    4753:	66 0f 54 c2          	andpd  %xmm2,%xmm0
    4757:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    475b:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    475f:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    4763:	0f 93 c0             	setae  %al
    4766:	5d                   	pop    %rbp
    4767:	c3                   	retq   

0000000000004768 <_Z12almost_equalff>:
    4768:	55                   	push   %rbp
    4769:	48 89 e5             	mov    %rsp,%rbp
    476c:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
    4771:	f3 0f 11 4d e8       	movss  %xmm1,-0x18(%rbp)
    4776:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
    477b:	f3 0f 5c 45 e8       	subss  -0x18(%rbp),%xmm0
    4780:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
    4785:	f3 0f 10 4d fc       	movss  -0x4(%rbp),%xmm1
    478a:	f3 0f 10 05 8e 7c 03 	movss  0x37c8e(%rip),%xmm0        # 3c420 <_ZZ18ocall_pointer_attrE8__func__+0x150>
    4791:	00 
    4792:	0f 54 c8             	andps  %xmm0,%xmm1
    4795:	f3 0f 10 1d 93 7c 03 	movss  0x37c93(%rip),%xmm3        # 3c430 <_ZZ18ocall_pointer_attrE8__func__+0x160>
    479c:	00 
    479d:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
    47a2:	f3 0f 58 45 e8       	addss  -0x18(%rbp),%xmm0
    47a7:	f3 0f 11 45 f8       	movss  %xmm0,-0x8(%rbp)
    47ac:	f3 0f 10 55 f8       	movss  -0x8(%rbp),%xmm2
    47b1:	f3 0f 10 05 67 7c 03 	movss  0x37c67(%rip),%xmm0        # 3c420 <_ZZ18ocall_pointer_attrE8__func__+0x150>
    47b8:	00 
    47b9:	0f 54 c2             	andps  %xmm2,%xmm0
    47bc:	f3 0f 59 c3          	mulss  %xmm3,%xmm0
    47c0:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    47c4:	0f 2e c1             	ucomiss %xmm1,%xmm0
    47c7:	0f 93 c0             	setae  %al
    47ca:	5d                   	pop    %rbp
    47cb:	c3                   	retq   

00000000000047cc <ecall_type_char>:
    47cc:	55                   	push   %rbp
    47cd:	48 89 e5             	mov    %rsp,%rbp
    47d0:	48 83 ec 10          	sub    $0x10,%rsp
    47d4:	89 f8                	mov    %edi,%eax
    47d6:	88 45 fc             	mov    %al,-0x4(%rbp)
    47d9:	80 7d fc 12          	cmpb   $0x12,-0x4(%rbp)
    47dd:	74 1f                	je     47fe <ecall_type_char+0x32>
    47df:	48 8d 0d 0a 7b 03 00 	lea    0x37b0a(%rip),%rcx        # 3c2f0 <_ZZ18ocall_pointer_attrE8__func__+0x20>
    47e6:	48 8d 15 53 7c 03 00 	lea    0x37c53(%rip),%rdx        # 3c440 <_ZZ15ecall_type_charE8__func__>
    47ed:	be 43 00 00 00       	mov    $0x43,%esi
    47f2:	48 8d 3d 07 7b 03 00 	lea    0x37b07(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    47f9:	e8 97 6c 00 00       	callq  b495 <__assert>
    47fe:	90                   	nop
    47ff:	c9                   	leaveq 
    4800:	c3                   	retq   

0000000000004801 <ecall_type_int>:
    4801:	55                   	push   %rbp
    4802:	48 89 e5             	mov    %rsp,%rbp
    4805:	48 83 ec 10          	sub    $0x10,%rsp
    4809:	89 7d fc             	mov    %edi,-0x4(%rbp)
    480c:	81 7d fc d2 04 00 00 	cmpl   $0x4d2,-0x4(%rbp)
    4813:	74 1f                	je     4834 <ecall_type_int+0x33>
    4815:	48 8d 0d 04 7b 03 00 	lea    0x37b04(%rip),%rcx        # 3c320 <_ZZ18ocall_pointer_attrE8__func__+0x50>
    481c:	48 8d 15 2d 7c 03 00 	lea    0x37c2d(%rip),%rdx        # 3c450 <_ZZ14ecall_type_intE8__func__>
    4823:	be 4e 00 00 00       	mov    $0x4e,%esi
    4828:	48 8d 3d d1 7a 03 00 	lea    0x37ad1(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    482f:	e8 61 6c 00 00       	callq  b495 <__assert>
    4834:	90                   	nop
    4835:	c9                   	leaveq 
    4836:	c3                   	retq   

0000000000004837 <ecall_type_float>:
    4837:	55                   	push   %rbp
    4838:	48 89 e5             	mov    %rsp,%rbp
    483b:	48 83 ec 10          	sub    $0x10,%rsp
    483f:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
    4844:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4847:	f3 0f 10 0d e5 7b 03 	movss  0x37be5(%rip),%xmm1        # 3c434 <_ZZ18ocall_pointer_attrE8__func__+0x164>
    484e:	00 
    484f:	89 45 f8             	mov    %eax,-0x8(%rbp)
    4852:	f3 0f 10 45 f8       	movss  -0x8(%rbp),%xmm0
    4857:	e8 0c ff ff ff       	callq  4768 <_Z12almost_equalff>
    485c:	84 c0                	test   %al,%al
    485e:	75 1f                	jne    487f <ecall_type_float+0x48>
    4860:	48 8d 0d c9 7a 03 00 	lea    0x37ac9(%rip),%rcx        # 3c330 <_ZZ18ocall_pointer_attrE8__func__+0x60>
    4867:	48 8d 15 f2 7b 03 00 	lea    0x37bf2(%rip),%rdx        # 3c460 <_ZZ16ecall_type_floatE8__func__>
    486e:	be 59 00 00 00       	mov    $0x59,%esi
    4873:	48 8d 3d 86 7a 03 00 	lea    0x37a86(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    487a:	e8 16 6c 00 00       	callq  b495 <__assert>
    487f:	90                   	nop
    4880:	c9                   	leaveq 
    4881:	c3                   	retq   

0000000000004882 <ecall_type_double>:
    4882:	55                   	push   %rbp
    4883:	48 89 e5             	mov    %rsp,%rbp
    4886:	48 83 ec 10          	sub    $0x10,%rsp
    488a:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    488f:	f2 0f 10 05 a1 7b 03 	movsd  0x37ba1(%rip),%xmm0        # 3c438 <_ZZ18ocall_pointer_attrE8__func__+0x168>
    4896:	00 
    4897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    489b:	66 0f 28 c8          	movapd %xmm0,%xmm1
    489f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    48a3:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    48a8:	e8 54 fe ff ff       	callq  4701 <_Z12almost_equaldd>
    48ad:	84 c0                	test   %al,%al
    48af:	75 1f                	jne    48d0 <ecall_type_double+0x4e>
    48b1:	48 8d 0d a0 7a 03 00 	lea    0x37aa0(%rip),%rcx        # 3c358 <_ZZ18ocall_pointer_attrE8__func__+0x88>
    48b8:	48 8d 15 c1 7b 03 00 	lea    0x37bc1(%rip),%rdx        # 3c480 <_ZZ17ecall_type_doubleE8__func__>
    48bf:	be 64 00 00 00       	mov    $0x64,%esi
    48c4:	48 8d 3d 35 7a 03 00 	lea    0x37a35(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    48cb:	e8 c5 6b 00 00       	callq  b495 <__assert>
    48d0:	90                   	nop
    48d1:	c9                   	leaveq 
    48d2:	c3                   	retq   

00000000000048d3 <ecall_type_size_t>:
    48d3:	55                   	push   %rbp
    48d4:	48 89 e5             	mov    %rsp,%rbp
    48d7:	48 83 ec 10          	sub    $0x10,%rsp
    48db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48df:	48 81 7d f8 4e 61 bc 	cmpq   $0xbc614e,-0x8(%rbp)
    48e6:	00 
    48e7:	74 1f                	je     4908 <ecall_type_size_t+0x35>
    48e9:	48 8d 0d 8d 7a 03 00 	lea    0x37a8d(%rip),%rcx        # 3c37d <_ZZ18ocall_pointer_attrE8__func__+0xad>
    48f0:	48 8d 15 a9 7b 03 00 	lea    0x37ba9(%rip),%rdx        # 3c4a0 <_ZZ17ecall_type_size_tE8__func__>
    48f7:	be 6f 00 00 00       	mov    $0x6f,%esi
    48fc:	48 8d 3d fd 79 03 00 	lea    0x379fd(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    4903:	e8 8d 6b 00 00       	callq  b495 <__assert>
    4908:	90                   	nop
    4909:	c9                   	leaveq 
    490a:	c3                   	retq   

000000000000490b <ecall_type_wchar_t>:
    490b:	55                   	push   %rbp
    490c:	48 89 e5             	mov    %rsp,%rbp
    490f:	48 83 ec 10          	sub    $0x10,%rsp
    4913:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4916:	81 7d fc 34 12 00 00 	cmpl   $0x1234,-0x4(%rbp)
    491d:	74 1f                	je     493e <ecall_type_wchar_t+0x33>
    491f:	48 8d 0d 6f 7a 03 00 	lea    0x37a6f(%rip),%rcx        # 3c395 <_ZZ18ocall_pointer_attrE8__func__+0xc5>
    4926:	48 8d 15 93 7b 03 00 	lea    0x37b93(%rip),%rdx        # 3c4c0 <_ZZ18ecall_type_wchar_tE8__func__>
    492d:	be 7a 00 00 00       	mov    $0x7a,%esi
    4932:	48 8d 3d c7 79 03 00 	lea    0x379c7(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    4939:	e8 57 6b 00 00       	callq  b495 <__assert>
    493e:	90                   	nop
    493f:	c9                   	leaveq 
    4940:	c3                   	retq   

0000000000004941 <ecall_type_struct>:
    4941:	55                   	push   %rbp
    4942:	48 89 e5             	mov    %rsp,%rbp
    4945:	48 83 ec 10          	sub    $0x10,%rsp
    4949:	89 f8                	mov    %edi,%eax
    494b:	48 89 f1             	mov    %rsi,%rcx
    494e:	48 89 ca             	mov    %rcx,%rdx
    4951:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4955:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    4959:	8b 45 f0             	mov    -0x10(%rbp),%eax
    495c:	3d d2 04 00 00       	cmp    $0x4d2,%eax
    4961:	74 1f                	je     4982 <ecall_type_struct+0x41>
    4963:	48 8d 0d 42 7a 03 00 	lea    0x37a42(%rip),%rcx        # 3c3ac <_ZZ18ocall_pointer_attrE8__func__+0xdc>
    496a:	48 8d 15 6f 7b 03 00 	lea    0x37b6f(%rip),%rdx        # 3c4e0 <_ZZ17ecall_type_structE8__func__>
    4971:	be 85 00 00 00       	mov    $0x85,%esi
    4976:	48 8d 3d 83 79 03 00 	lea    0x37983(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    497d:	e8 13 6b 00 00       	callq  b495 <__assert>
    4982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4986:	48 3d 2e 16 00 00    	cmp    $0x162e,%rax
    498c:	74 1f                	je     49ad <ecall_type_struct+0x6c>
    498e:	48 8d 0d 30 7a 03 00 	lea    0x37a30(%rip),%rcx        # 3c3c5 <_ZZ18ocall_pointer_attrE8__func__+0xf5>
    4995:	48 8d 15 44 7b 03 00 	lea    0x37b44(%rip),%rdx        # 3c4e0 <_ZZ17ecall_type_structE8__func__>
    499c:	be 86 00 00 00       	mov    $0x86,%esi
    49a1:	48 8d 3d 58 79 03 00 	lea    0x37958(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    49a8:	e8 e8 6a 00 00       	callq  b495 <__assert>
    49ad:	90                   	nop
    49ae:	c9                   	leaveq 
    49af:	c3                   	retq   

00000000000049b0 <ecall_type_enum_union>:
    49b0:	55                   	push   %rbp
    49b1:	48 89 e5             	mov    %rsp,%rbp
    49b4:	48 83 ec 10          	sub    $0x10,%rsp
    49b8:	89 7d fc             	mov    %edi,-0x4(%rbp)
    49bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    49bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    49c3:	be 08 00 00 00       	mov    $0x8,%esi
    49c8:	48 89 c7             	mov    %rax,%rdi
    49cb:	e8 6e 34 00 00       	callq  7e3e <sgx_is_outside_enclave>
    49d0:	83 f8 01             	cmp    $0x1,%eax
    49d3:	0f 95 c0             	setne  %al
    49d6:	84 c0                	test   %al,%al
    49d8:	74 05                	je     49df <ecall_type_enum_union+0x2f>
    49da:	e8 fa 6b 03 00       	callq  3b5d9 <abort>
    49df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    49e3:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    49e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    49ed:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    49f3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    49f7:	74 1f                	je     4a18 <ecall_type_enum_union+0x68>
    49f9:	48 8d 0d de 79 03 00 	lea    0x379de(%rip),%rcx        # 3c3de <_ZZ18ocall_pointer_attrE8__func__+0x10e>
    4a00:	48 8d 15 f9 7a 03 00 	lea    0x37af9(%rip),%rdx        # 3c500 <_ZZ21ecall_type_enum_unionE8__func__>
    4a07:	be 97 00 00 00       	mov    $0x97,%esi
    4a0c:	48 8d 3d ed 78 03 00 	lea    0x378ed(%rip),%rdi        # 3c300 <_ZZ18ocall_pointer_attrE8__func__+0x30>
    4a13:	e8 7d 6a 00 00       	callq  b495 <__assert>
    4a18:	90                   	nop
    4a19:	c9                   	leaveq 
    4a1a:	c3                   	retq   

0000000000004a1b <printf>:
    4a1b:	55                   	push   %rbp
    4a1c:	48 89 e5             	mov    %rsp,%rbp
    4a1f:	48 81 ec f0 20 00 00 	sub    $0x20f0,%rsp
    4a26:	48 89 bd 18 df ff ff 	mov    %rdi,-0x20e8(%rbp)
    4a2d:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    4a34:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    4a3b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    4a42:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    4a49:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    4a50:	84 c0                	test   %al,%al
    4a52:	74 20                	je     4a74 <printf+0x59>
    4a54:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    4a58:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    4a5c:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    4a60:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    4a64:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    4a68:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    4a6c:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    4a70:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    4a74:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4a7b:	00 00 
    4a7d:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    4a84:	31 c0                	xor    %eax,%eax
    4a86:	48 8d 95 40 df ff ff 	lea    -0x20c0(%rbp),%rdx
    4a8d:	b8 00 00 00 00       	mov    $0x0,%eax
    4a92:	b9 00 04 00 00       	mov    $0x400,%ecx
    4a97:	48 89 d7             	mov    %rdx,%rdi
    4a9a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4a9d:	c7 85 28 df ff ff 08 	movl   $0x8,-0x20d8(%rbp)
    4aa4:	00 00 00 
    4aa7:	c7 85 2c df ff ff 30 	movl   $0x30,-0x20d4(%rbp)
    4aae:	00 00 00 
    4ab1:	48 8d 45 10          	lea    0x10(%rbp),%rax
    4ab5:	48 89 85 30 df ff ff 	mov    %rax,-0x20d0(%rbp)
    4abc:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    4ac3:	48 89 85 38 df ff ff 	mov    %rax,-0x20c8(%rbp)
    4aca:	48 8d 8d 28 df ff ff 	lea    -0x20d8(%rbp),%rcx
    4ad1:	48 8b 95 18 df ff ff 	mov    -0x20e8(%rbp),%rdx
    4ad8:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    4adf:	be 00 20 00 00       	mov    $0x2000,%esi
    4ae4:	48 89 c7             	mov    %rax,%rdi
    4ae7:	e8 75 f2 00 00       	callq  13d61 <vsnprintf>
    4aec:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    4af3:	48 89 c7             	mov    %rax,%rdi
    4af6:	e8 eb e9 ff ff       	callq  34e6 <ocall_print_string>
    4afb:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    4b02:	be ff 1f 00 00       	mov    $0x1fff,%esi
    4b07:	48 89 c7             	mov    %rax,%rdi
    4b0a:	e8 10 f2 00 00       	callq  13d1f <strnlen>
    4b0f:	83 c0 01             	add    $0x1,%eax
    4b12:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
    4b19:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    4b20:	00 00 
    4b22:	74 05                	je     4b29 <printf+0x10e>
    4b24:	e8 63 69 00 00       	callq  b48c <__stack_chk_fail>
    4b29:	c9                   	leaveq 
    4b2a:	c3                   	retq   

0000000000004b2b <ecall_malloc_free>:
    4b2b:	55                   	push   %rbp
    4b2c:	48 89 e5             	mov    %rsp,%rbp
    4b2f:	48 83 ec 10          	sub    $0x10,%rsp
    4b33:	bf 64 00 00 00       	mov    $0x64,%edi
    4b38:	e8 0b b9 00 00       	callq  10448 <dlmalloc>
    4b3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b41:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4b46:	75 1f                	jne    4b67 <ecall_malloc_free+0x3c>
    4b48:	48 8d 0d c9 79 03 00 	lea    0x379c9(%rip),%rcx        # 3c518 <_ZZ21ecall_type_enum_unionE8__func__+0x18>
    4b4f:	48 8d 15 fa 79 03 00 	lea    0x379fa(%rip),%rdx        # 3c550 <_ZZ17ecall_malloc_freeE8__func__>
    4b56:	be 2e 00 00 00       	mov    $0x2e,%esi
    4b5b:	48 8d 3d c6 79 03 00 	lea    0x379c6(%rip),%rdi        # 3c528 <_ZZ21ecall_type_enum_unionE8__func__+0x28>
    4b62:	e8 2e 69 00 00       	callq  b495 <__assert>
    4b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b6b:	ba 64 00 00 00       	mov    $0x64,%edx
    4b70:	be 00 00 00 00       	mov    $0x0,%esi
    4b75:	48 89 c7             	mov    %rax,%rdi
    4b78:	e8 b8 eb 00 00       	callq  13735 <memset>
    4b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b81:	48 89 c7             	mov    %rax,%rdi
    4b84:	e8 b6 c3 00 00       	callq  10f3f <dlfree>
    4b89:	90                   	nop
    4b8a:	c9                   	leaveq 
    4b8b:	c3                   	retq   

0000000000004b8c <ecall_sgx_cpuid>:
    4b8c:	55                   	push   %rbp
    4b8d:	48 89 e5             	mov    %rsp,%rbp
    4b90:	48 83 ec 20          	sub    $0x20,%rsp
    4b94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b98:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    4b9b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    4b9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ba2:	89 d6                	mov    %edx,%esi
    4ba4:	48 89 c7             	mov    %rax,%rdi
    4ba7:	e8 fb ef 00 00       	callq  13ba7 <sgx_cpuid>
    4bac:	89 45 fc             	mov    %eax,-0x4(%rbp)
    4baf:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    4bb3:	74 05                	je     4bba <ecall_sgx_cpuid+0x2e>
    4bb5:	e8 1f 6a 03 00       	callq  3b5d9 <abort>
    4bba:	90                   	nop
    4bbb:	c9                   	leaveq 
    4bbc:	c3                   	retq   

0000000000004bbd <_ZNSt3__111char_traitsIcE6lengthEPKc>:
    4bbd:	55                   	push   %rbp
    4bbe:	48 89 e5             	mov    %rsp,%rbp
    4bc1:	48 83 ec 10          	sub    $0x10,%rsp
    4bc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bcd:	48 89 c7             	mov    %rax,%rdi
    4bd0:	e8 9c f0 00 00       	callq  13c71 <strlen>
    4bd5:	c9                   	leaveq 
    4bd6:	c3                   	retq   

0000000000004bd7 <ecall_exception>:
    4bd7:	55                   	push   %rbp
    4bd8:	48 89 e5             	mov    %rsp,%rbp
    4bdb:	41 55                	push   %r13
    4bdd:	41 54                	push   %r12
    4bdf:	53                   	push   %rbx
    4be0:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    4be7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4bee:	00 00 
    4bf0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4bf4:	31 c0                	xor    %eax,%eax
    4bf6:	48 8d 05 6b 79 03 00 	lea    0x3796b(%rip),%rax        # 3c568 <_ZNSt3__1L19piecewise_constructE+0x6>
    4bfd:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    4c04:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4c08:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    4c0f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    4c16:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    4c1d:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    4c24:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    4c2b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    4c32:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4c39:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    4c40:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4c47:	00 
    4c48:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    4c4f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4c56:	00 
    4c57:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
    4c5e:	00 
    4c5f:	75 1f                	jne    4c80 <ecall_exception+0xa9>
    4c61:	48 8d 0d 04 79 03 00 	lea    0x37904(%rip),%rcx        # 3c56c <_ZNSt3__1L19piecewise_constructE+0xa>
    4c68:	48 8d 15 01 7a 03 00 	lea    0x37a01(%rip),%rdx        # 3c670 <_ZZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC4EPKcE8__func__>
    4c6f:	be 1a 08 00 00       	mov    $0x81a,%esi
    4c74:	48 8d 3d 05 79 03 00 	lea    0x37905(%rip),%rdi        # 3c580 <_ZNSt3__1L19piecewise_constructE+0x1e>
    4c7b:	e8 15 68 00 00       	callq  b495 <__assert>
    4c80:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    4c87:	48 89 c7             	mov    %rax,%rdi
    4c8a:	e8 2e ff ff ff       	callq  4bbd <_ZNSt3__111char_traitsIcE6lengthEPKc>
    4c8f:	48 89 c2             	mov    %rax,%rdx
    4c92:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
    4c99:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4c9d:	48 89 ce             	mov    %rcx,%rsi
    4ca0:	48 89 c7             	mov    %rax,%rdi
    4ca3:	e8 86 33 02 00       	callq  2802e <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>
    4ca8:	bf 10 00 00 00       	mov    $0x10,%edi
    4cad:	e8 1d 14 02 00       	callq  260cf <__cxa_allocate_exception>
    4cb2:	48 89 c3             	mov    %rax,%rbx
    4cb5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4cb9:	48 89 c6             	mov    %rax,%rsi
    4cbc:	48 89 df             	mov    %rbx,%rdi
    4cbf:	e8 3a 2a 02 00       	callq  276fe <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>
    4cc4:	48 8d 05 ed 2b 02 00 	lea    0x22bed(%rip),%rax        # 278b8 <_ZNSt13runtime_errorD1Ev>
    4ccb:	48 89 c2             	mov    %rax,%rdx
    4cce:	48 8d 35 1b 21 04 00 	lea    0x4211b(%rip),%rsi        # 46df0 <_ZTISt13runtime_error>
    4cd5:	48 89 df             	mov    %rbx,%rdi
    4cd8:	e8 f7 16 02 00       	callq  263d4 <__cxa_throw>
    4cdd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ce1:	48 89 c7             	mov    %rax,%rdi
    4ce4:	e8 b1 2e 02 00       	callq  27b9a <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    4ce9:	90                   	nop
    4cea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cee:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4cf5:	00 00 
    4cf7:	0f 84 cb 03 00 00    	je     50c8 <ecall_exception+0x4f1>
    4cfd:	e9 c1 03 00 00       	jmpq   50c3 <ecall_exception+0x4ec>
    4d02:	49 89 c5             	mov    %rax,%r13
    4d05:	49 89 d4             	mov    %rdx,%r12
    4d08:	48 89 df             	mov    %rbx,%rdi
    4d0b:	e8 f1 13 02 00       	callq  26101 <__cxa_free_exception>
    4d10:	4c 89 e8             	mov    %r13,%rax
    4d13:	4c 89 e2             	mov    %r12,%rdx
    4d16:	eb 00                	jmp    4d18 <ecall_exception+0x141>
    4d18:	48 83 fa 01          	cmp    $0x1,%rdx
    4d1c:	0f 85 31 03 00 00    	jne    5053 <ecall_exception+0x47c>
    4d22:	48 89 c7             	mov    %rax,%rdi
    4d25:	e8 b0 1e 02 00       	callq  26bda <__cxa_begin_catch>
    4d2a:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    4d31:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4d38:	48 8b 00             	mov    (%rax),%rax
    4d3b:	48 83 c0 10          	add    $0x10,%rax
    4d3f:	48 8b 00             	mov    (%rax),%rax
    4d42:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    4d49:	48 89 d7             	mov    %rdx,%rdi
    4d4c:	ff d0                	callq  *%rax
    4d4e:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    4d55:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
    4d5c:	00 
    4d5d:	75 1f                	jne    4d7e <ecall_exception+0x1a7>
    4d5f:	48 8d 0d 4c 78 03 00 	lea    0x3784c(%rip),%rcx        # 3c5b2 <_ZNSt3__1L19piecewise_constructE+0x50>
    4d66:	48 8d 15 13 79 03 00 	lea    0x37913(%rip),%rdx        # 3c680 <_ZZNSt3__1eqIcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EEPKS6_E8__func__>
    4d6d:	be 17 0f 00 00       	mov    $0xf17,%esi
    4d72:	48 8d 3d 07 78 03 00 	lea    0x37807(%rip),%rdi        # 3c580 <_ZNSt3__1L19piecewise_constructE+0x1e>
    4d79:	e8 17 67 00 00       	callq  b495 <__assert>
    4d7e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    4d85:	48 89 c7             	mov    %rax,%rdi
    4d88:	e8 30 fe ff ff       	callq  4bbd <_ZNSt3__111char_traitsIcE6lengthEPKc>
    4d8d:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    4d94:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4d98:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    4d9f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    4da6:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    4dad:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    4db4:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    4dbb:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    4dc2:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    4dc9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    4dd0:	0f b6 00             	movzbl (%rax),%eax
    4dd3:	0f b6 c0             	movzbl %al,%eax
    4dd6:	83 e0 01             	and    $0x1,%eax
    4dd9:	85 c0                	test   %eax,%eax
    4ddb:	0f 95 c0             	setne  %al
    4dde:	84 c0                	test   %al,%al
    4de0:	74 37                	je     4e19 <ecall_exception+0x242>
    4de2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    4de9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    4df0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    4df7:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    4dfe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    4e05:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    4e0c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    4e13:	48 8b 40 08          	mov    0x8(%rax),%rax
    4e17:	eb 3b                	jmp    4e54 <ecall_exception+0x27d>
    4e19:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    4e20:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    4e27:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    4e2e:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    4e35:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    4e3c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    4e43:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    4e4a:	0f b6 00             	movzbl (%rax),%eax
    4e4d:	0f b6 c0             	movzbl %al,%eax
    4e50:	d1 f8                	sar    %eax
    4e52:	48 98                	cltq   
    4e54:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
    4e5b:	0f 95 c0             	setne  %al
    4e5e:	84 c0                	test   %al,%al
    4e60:	74 07                	je     4e69 <ecall_exception+0x292>
    4e62:	b8 00 00 00 00       	mov    $0x0,%eax
    4e67:	eb 31                	jmp    4e9a <ecall_exception+0x2c3>
    4e69:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
    4e70:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    4e77:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4e7b:	49 89 c8             	mov    %rcx,%r8
    4e7e:	48 89 d1             	mov    %rdx,%rcx
    4e81:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    4e88:	be 00 00 00 00       	mov    $0x0,%esi
    4e8d:	48 89 c7             	mov    %rax,%rdi
    4e90:	e8 05 2e 02 00       	callq  27c9a <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    4e95:	85 c0                	test   %eax,%eax
    4e97:	0f 94 c0             	sete   %al
    4e9a:	84 c0                	test   %al,%al
    4e9c:	75 1f                	jne    4ebd <ecall_exception+0x2e6>
    4e9e:	48 8d 0d 1e 77 03 00 	lea    0x3771e(%rip),%rcx        # 3c5c3 <_ZNSt3__1L19piecewise_constructE+0x61>
    4ea5:	48 8d 15 b4 77 03 00 	lea    0x377b4(%rip),%rdx        # 3c660 <_ZZ15ecall_exceptionE8__func__>
    4eac:	be 33 00 00 00       	mov    $0x33,%esi
    4eb1:	48 8d 3d 20 77 03 00 	lea    0x37720(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    4eb8:	e8 d8 65 00 00       	callq  b495 <__assert>
    4ebd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4ec1:	48 8d 35 32 77 03 00 	lea    0x37732(%rip),%rsi        # 3c5fa <_ZNSt3__1L19piecewise_constructE+0x98>
    4ec8:	48 89 c7             	mov    %rax,%rdi
    4ecb:	e8 50 29 02 00       	callq  27820 <_ZNSt13runtime_errorC1EPKc>
    4ed0:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    4ed7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4edb:	48 89 d6             	mov    %rdx,%rsi
    4ede:	48 89 c7             	mov    %rax,%rdi
    4ee1:	e8 a0 29 02 00       	callq  27886 <_ZNSt13runtime_erroraSERKS_>
    4ee6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4eea:	48 89 c7             	mov    %rax,%rdi
    4eed:	e8 26 2a 02 00       	callq  27918 <_ZNKSt13runtime_error4whatEv>
    4ef2:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    4ef9:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
    4f00:	00 
    4f01:	75 1f                	jne    4f22 <ecall_exception+0x34b>
    4f03:	48 8d 0d a8 76 03 00 	lea    0x376a8(%rip),%rcx        # 3c5b2 <_ZNSt3__1L19piecewise_constructE+0x50>
    4f0a:	48 8d 15 6f 77 03 00 	lea    0x3776f(%rip),%rdx        # 3c680 <_ZZNSt3__1eqIcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EEPKS6_E8__func__>
    4f11:	be 17 0f 00 00       	mov    $0xf17,%esi
    4f16:	48 8d 3d 63 76 03 00 	lea    0x37663(%rip),%rdi        # 3c580 <_ZNSt3__1L19piecewise_constructE+0x1e>
    4f1d:	e8 73 65 00 00       	callq  b495 <__assert>
    4f22:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    4f29:	48 89 c7             	mov    %rax,%rdi
    4f2c:	e8 8c fc ff ff       	callq  4bbd <_ZNSt3__111char_traitsIcE6lengthEPKc>
    4f31:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    4f38:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4f3c:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    4f43:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    4f4a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    4f51:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    4f58:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    4f5f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    4f66:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    4f6d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    4f74:	0f b6 00             	movzbl (%rax),%eax
    4f77:	0f b6 c0             	movzbl %al,%eax
    4f7a:	83 e0 01             	and    $0x1,%eax
    4f7d:	85 c0                	test   %eax,%eax
    4f7f:	0f 95 c0             	setne  %al
    4f82:	84 c0                	test   %al,%al
    4f84:	74 25                	je     4fab <ecall_exception+0x3d4>
    4f86:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    4f8d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    4f91:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4f95:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    4f99:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4f9d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4fa1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    4fa5:	48 8b 40 08          	mov    0x8(%rax),%rax
    4fa9:	eb 29                	jmp    4fd4 <ecall_exception+0x3fd>
    4fab:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    4fb2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4fb6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4fba:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4fbe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4fc2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4fc6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4fca:	0f b6 00             	movzbl (%rax),%eax
    4fcd:	0f b6 c0             	movzbl %al,%eax
    4fd0:	d1 f8                	sar    %eax
    4fd2:	48 98                	cltq   
    4fd4:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)
    4fdb:	0f 95 c0             	setne  %al
    4fde:	84 c0                	test   %al,%al
    4fe0:	74 07                	je     4fe9 <ecall_exception+0x412>
    4fe2:	b8 00 00 00 00       	mov    $0x0,%eax
    4fe7:	eb 31                	jmp    501a <ecall_exception+0x443>
    4fe9:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
    4ff0:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    4ff7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ffb:	49 89 c8             	mov    %rcx,%r8
    4ffe:	48 89 d1             	mov    %rdx,%rcx
    5001:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    5008:	be 00 00 00 00       	mov    $0x0,%esi
    500d:	48 89 c7             	mov    %rax,%rdi
    5010:	e8 85 2c 02 00       	callq  27c9a <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    5015:	85 c0                	test   %eax,%eax
    5017:	0f 94 c0             	sete   %al
    501a:	84 c0                	test   %al,%al
    501c:	75 1f                	jne    503d <ecall_exception+0x466>
    501e:	48 8d 0d d6 75 03 00 	lea    0x375d6(%rip),%rcx        # 3c5fb <_ZNSt3__1L19piecewise_constructE+0x99>
    5025:	48 8d 15 34 76 03 00 	lea    0x37634(%rip),%rdx        # 3c660 <_ZZ15ecall_exceptionE8__func__>
    502c:	be 36 00 00 00       	mov    $0x36,%esi
    5031:	48 8d 3d a0 75 03 00 	lea    0x375a0(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    5038:	e8 58 64 00 00       	callq  b495 <__assert>
    503d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5041:	48 89 c7             	mov    %rax,%rdi
    5044:	e8 6f 28 02 00       	callq  278b8 <_ZNSt13runtime_errorD1Ev>
    5049:	e8 61 1c 02 00       	callq  26caf <__cxa_end_catch>
    504e:	e9 8a fc ff ff       	jmpq   4cdd <ecall_exception+0x106>
    5053:	48 89 c7             	mov    %rax,%rdi
    5056:	e8 7f 1b 02 00       	callq  26bda <__cxa_begin_catch>
    505b:	48 8d 0d ad 75 03 00 	lea    0x375ad(%rip),%rcx        # 3c60f <_ZNSt3__1L19piecewise_constructE+0xad>
    5062:	48 8d 15 f7 75 03 00 	lea    0x375f7(%rip),%rdx        # 3c660 <_ZZ15ecall_exceptionE8__func__>
    5069:	be 39 00 00 00       	mov    $0x39,%esi
    506e:	48 8d 3d 63 75 03 00 	lea    0x37563(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    5075:	e8 1b 64 00 00       	callq  b495 <__assert>
    507a:	e8 30 1c 02 00       	callq  26caf <__cxa_end_catch>
    507f:	e9 59 fc ff ff       	jmpq   4cdd <ecall_exception+0x106>
    5084:	48 89 c3             	mov    %rax,%rbx
    5087:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    508b:	48 89 c7             	mov    %rax,%rdi
    508e:	e8 25 28 02 00       	callq  278b8 <_ZNSt13runtime_errorD1Ev>
    5093:	eb 03                	jmp    5098 <ecall_exception+0x4c1>
    5095:	48 89 c3             	mov    %rax,%rbx
    5098:	e8 12 1c 02 00       	callq  26caf <__cxa_end_catch>
    509d:	eb 0d                	jmp    50ac <ecall_exception+0x4d5>
    509f:	48 89 c3             	mov    %rax,%rbx
    50a2:	e8 08 1c 02 00       	callq  26caf <__cxa_end_catch>
    50a7:	eb 03                	jmp    50ac <ecall_exception+0x4d5>
    50a9:	48 89 c3             	mov    %rax,%rbx
    50ac:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    50b0:	48 89 c7             	mov    %rax,%rdi
    50b3:	e8 e2 2a 02 00       	callq  27b9a <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    50b8:	48 89 d8             	mov    %rbx,%rax
    50bb:	48 89 c7             	mov    %rax,%rdi
    50be:	e8 50 bc 01 00       	callq  20d13 <_Unwind_Resume>
    50c3:	e8 c4 63 00 00       	callq  b48c <__stack_chk_fail>
    50c8:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    50cf:	5b                   	pop    %rbx
    50d0:	41 5c                	pop    %r12
    50d2:	41 5d                	pop    %r13
    50d4:	5d                   	pop    %rbp
    50d5:	c3                   	retq   

00000000000050d6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEED1Ev>:
    50d6:	55                   	push   %rbp
    50d7:	48 89 e5             	mov    %rsp,%rbp
    50da:	48 83 ec 10          	sub    $0x10,%rsp
    50de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e6:	48 89 c7             	mov    %rax,%rdi
    50e9:	e8 9e 06 00 00       	callq  578c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev>
    50ee:	90                   	nop
    50ef:	c9                   	leaveq 
    50f0:	c3                   	retq   

00000000000050f1 <ecall_map>:
    50f1:	55                   	push   %rbp
    50f2:	48 89 e5             	mov    %rsp,%rbp
    50f5:	53                   	push   %rbx
    50f6:	48 81 ec 28 02 00 00 	sub    $0x228,%rsp
    50fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5104:	00 00 
    5106:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    510a:	31 c0                	xor    %eax,%eax
    510c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5110:	88 95 d7 fd ff ff    	mov    %dl,-0x229(%rbp)
    5116:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    511a:	48 89 d6             	mov    %rdx,%rsi
    511d:	48 89 c7             	mov    %rax,%rdi
    5120:	e8 03 08 00 00       	callq  5928 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_>
    5125:	c7 85 f8 fd ff ff 01 	movl   $0x1,-0x208(%rbp)
    512c:	00 00 00 
    512f:	c6 85 f0 fd ff ff 61 	movb   $0x61,-0x210(%rbp)
    5136:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    513d:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    5144:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    514b:	0f b6 00             	movzbl (%rax),%eax
    514e:	88 45 a8             	mov    %al,-0x58(%rbp)
    5151:	48 8d 85 f8 fd ff ff 	lea    -0x208(%rbp),%rax
    5158:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
    515f:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    5166:	8b 00                	mov    (%rax),%eax
    5168:	89 45 ac             	mov    %eax,-0x54(%rbp)
    516b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    516f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    5173:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    517a:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
    5181:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    5188:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    518f:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
    5196:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    519d:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
    51a4:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
    51ab:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    51b2:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx
    51b9:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
    51c0:	48 89 ce             	mov    %rcx,%rsi
    51c3:	48 89 c7             	mov    %rax,%rdi
    51c6:	e8 db 0f 00 00       	callq  61a6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    51cb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    51cf:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    51d3:	48 c7 85 28 fe ff ff 	movq   $0x0,-0x1d8(%rbp)
    51da:	00 00 00 00 
    51de:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    51e2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    51e6:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    51ed:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    51f4:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    51fb:	48 8b 00             	mov    (%rax),%rax
    51fe:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
    5205:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    520c:	48 8b 95 e0 fd ff ff 	mov    -0x220(%rbp),%rdx
    5213:	48 89 10             	mov    %rdx,(%rax)
    5216:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    521a:	48 83 c0 08          	add    $0x8,%rax
    521e:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    5225:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    522c:	0f b6 00             	movzbl (%rax),%eax
    522f:	88 45 c8             	mov    %al,-0x38(%rbp)
    5232:	c7 85 f8 fd ff ff 02 	movl   $0x2,-0x208(%rbp)
    5239:	00 00 00 
    523c:	c6 85 f0 fd ff ff 62 	movb   $0x62,-0x210(%rbp)
    5243:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    524a:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    5251:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    5258:	0f b6 00             	movzbl (%rax),%eax
    525b:	88 45 a8             	mov    %al,-0x58(%rbp)
    525e:	48 8d 85 f8 fd ff ff 	lea    -0x208(%rbp),%rax
    5265:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    526c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    5273:	8b 00                	mov    (%rax),%eax
    5275:	89 45 ac             	mov    %eax,-0x54(%rbp)
    5278:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    527c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    5280:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
    5287:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    528e:	48 89 95 60 fe ff ff 	mov    %rdx,-0x1a0(%rbp)
    5295:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
    529c:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    52a3:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    52aa:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
    52b1:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    52b8:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
    52bf:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
    52c6:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    52cd:	48 89 ce             	mov    %rcx,%rsi
    52d0:	48 89 c7             	mov    %rax,%rdi
    52d3:	e8 ce 0e 00 00       	callq  61a6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    52d8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    52dc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    52e0:	48 c7 85 80 fe ff ff 	movq   $0x0,-0x180(%rbp)
    52e7:	00 00 00 00 
    52eb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    52ef:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    52f3:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    52fa:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
    5301:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
    5308:	48 8b 00             	mov    (%rax),%rax
    530b:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
    5312:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    5319:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
    5320:	48 89 10             	mov    %rdx,(%rax)
    5323:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5327:	48 83 c0 08          	add    $0x8,%rax
    532b:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    5332:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
    5339:	0f b6 00             	movzbl (%rax),%eax
    533c:	88 45 c8             	mov    %al,-0x38(%rbp)
    533f:	c7 85 f8 fd ff ff 03 	movl   $0x3,-0x208(%rbp)
    5346:	00 00 00 
    5349:	c6 85 d8 fd ff ff 63 	movb   $0x63,-0x228(%rbp)
    5350:	48 8d 85 d8 fd ff ff 	lea    -0x228(%rbp),%rax
    5357:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    535e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    5365:	0f b6 00             	movzbl (%rax),%eax
    5368:	88 45 a8             	mov    %al,-0x58(%rbp)
    536b:	48 8d 85 f8 fd ff ff 	lea    -0x208(%rbp),%rax
    5372:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    5379:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    5380:	8b 00                	mov    (%rax),%eax
    5382:	89 45 ac             	mov    %eax,-0x54(%rbp)
    5385:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5389:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    538d:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    5394:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    539b:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
    53a2:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    53a9:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    53b0:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    53b7:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    53be:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    53c5:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    53cc:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
    53d3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    53da:	48 89 ce             	mov    %rcx,%rsi
    53dd:	48 89 c7             	mov    %rax,%rdi
    53e0:	e8 c1 0d 00 00       	callq  61a6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    53e5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    53e9:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    53ed:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
    53f4:	00 00 00 00 
    53f8:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    53fc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5400:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    5407:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    540e:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
    5415:	48 8b 00             	mov    (%rax),%rax
    5418:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    541f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    5426:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
    542d:	48 89 10             	mov    %rdx,(%rax)
    5430:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5434:	48 83 c0 08          	add    $0x8,%rax
    5438:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    543f:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    5446:	0f b6 00             	movzbl (%rax),%eax
    5449:	88 45 c8             	mov    %al,-0x38(%rbp)
    544c:	c7 85 d8 fd ff ff 04 	movl   $0x4,-0x228(%rbp)
    5453:	00 00 00 
    5456:	c6 85 d6 fd ff ff 64 	movb   $0x64,-0x22a(%rbp)
    545d:	48 8d 85 d6 fd ff ff 	lea    -0x22a(%rbp),%rax
    5464:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    546b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    5472:	0f b6 00             	movzbl (%rax),%eax
    5475:	88 45 a8             	mov    %al,-0x58(%rbp)
    5478:	48 8d 85 d8 fd ff ff 	lea    -0x228(%rbp),%rax
    547f:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5486:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    548d:	8b 00                	mov    (%rax),%eax
    548f:	89 45 ac             	mov    %eax,-0x54(%rbp)
    5492:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5496:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    549a:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    54a1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    54a8:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
    54af:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    54b6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    54bd:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    54c4:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    54cb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    54d2:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    54d9:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
    54e0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    54e7:	48 89 ce             	mov    %rcx,%rsi
    54ea:	48 89 c7             	mov    %rax,%rdi
    54ed:	e8 b4 0c 00 00       	callq  61a6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    54f2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    54f6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    54fa:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
    5501:	00 00 00 00 
    5505:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5509:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    550d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    5514:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    551b:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    5522:	48 8b 00             	mov    (%rax),%rax
    5525:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
    552c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5533:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    553a:	48 89 10             	mov    %rdx,(%rax)
    553d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5541:	48 83 c0 08          	add    $0x8,%rax
    5545:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    554c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5553:	0f b6 00             	movzbl (%rax),%eax
    5556:	88 45 c8             	mov    %al,-0x38(%rbp)
    5559:	c6 45 c0 61          	movb   $0x61,-0x40(%rbp)
    555d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5561:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5565:	48 89 d6             	mov    %rdx,%rsi
    5568:	48 89 c7             	mov    %rax,%rdi
    556b:	e8 76 02 00 00       	callq  57e6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    5570:	8b 00                	mov    (%rax),%eax
    5572:	83 f8 01             	cmp    $0x1,%eax
    5575:	74 1f                	je     5596 <ecall_map+0x4a5>
    5577:	48 8d 0d 97 70 03 00 	lea    0x37097(%rip),%rcx        # 3c615 <_ZNSt3__1L19piecewise_constructE+0xb3>
    557e:	48 8d 15 0b 71 03 00 	lea    0x3710b(%rip),%rdx        # 3c690 <_ZZ9ecall_mapE8__func__>
    5585:	be 51 00 00 00       	mov    $0x51,%esi
    558a:	48 8d 3d 47 70 03 00 	lea    0x37047(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    5591:	e8 ff 5e 00 00       	callq  b495 <__assert>
    5596:	c6 45 c0 62          	movb   $0x62,-0x40(%rbp)
    559a:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    559e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    55a2:	48 89 d6             	mov    %rdx,%rsi
    55a5:	48 89 c7             	mov    %rax,%rdi
    55a8:	e8 39 02 00 00       	callq  57e6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    55ad:	8b 00                	mov    (%rax),%eax
    55af:	83 f8 02             	cmp    $0x2,%eax
    55b2:	74 1f                	je     55d3 <ecall_map+0x4e2>
    55b4:	48 8d 0d 66 70 03 00 	lea    0x37066(%rip),%rcx        # 3c621 <_ZNSt3__1L19piecewise_constructE+0xbf>
    55bb:	48 8d 15 ce 70 03 00 	lea    0x370ce(%rip),%rdx        # 3c690 <_ZZ9ecall_mapE8__func__>
    55c2:	be 52 00 00 00       	mov    $0x52,%esi
    55c7:	48 8d 3d 0a 70 03 00 	lea    0x3700a(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    55ce:	e8 c2 5e 00 00       	callq  b495 <__assert>
    55d3:	c6 45 c0 63          	movb   $0x63,-0x40(%rbp)
    55d7:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    55db:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    55df:	48 89 d6             	mov    %rdx,%rsi
    55e2:	48 89 c7             	mov    %rax,%rdi
    55e5:	e8 fc 01 00 00       	callq  57e6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    55ea:	8b 00                	mov    (%rax),%eax
    55ec:	83 f8 03             	cmp    $0x3,%eax
    55ef:	74 1f                	je     5610 <ecall_map+0x51f>
    55f1:	48 8d 0d 35 70 03 00 	lea    0x37035(%rip),%rcx        # 3c62d <_ZNSt3__1L19piecewise_constructE+0xcb>
    55f8:	48 8d 15 91 70 03 00 	lea    0x37091(%rip),%rdx        # 3c690 <_ZZ9ecall_mapE8__func__>
    55ff:	be 53 00 00 00       	mov    $0x53,%esi
    5604:	48 8d 3d cd 6f 03 00 	lea    0x36fcd(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    560b:	e8 85 5e 00 00       	callq  b495 <__assert>
    5610:	c6 45 c0 64          	movb   $0x64,-0x40(%rbp)
    5614:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5618:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    561c:	48 89 d6             	mov    %rdx,%rsi
    561f:	48 89 c7             	mov    %rax,%rdi
    5622:	e8 bf 01 00 00       	callq  57e6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    5627:	8b 00                	mov    (%rax),%eax
    5629:	83 f8 04             	cmp    $0x4,%eax
    562c:	74 1f                	je     564d <ecall_map+0x55c>
    562e:	48 8d 0d 04 70 03 00 	lea    0x37004(%rip),%rcx        # 3c639 <_ZNSt3__1L19piecewise_constructE+0xd7>
    5635:	48 8d 15 54 70 03 00 	lea    0x37054(%rip),%rdx        # 3c690 <_ZZ9ecall_mapE8__func__>
    563c:	be 54 00 00 00       	mov    $0x54,%esi
    5641:	48 8d 3d 90 6f 03 00 	lea    0x36f90(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    5648:	e8 48 5e 00 00       	callq  b495 <__assert>
    564d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5651:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    5658:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    565f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5666:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    566d:	48 83 c0 08          	add    $0x8,%rax
    5671:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    5678:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    567f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    5686:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    568d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    5691:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    5695:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    5699:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    569d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    56a1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    56a5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    56a9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56ad:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    56b1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    56b5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    56b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56bd:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
    56c4:	c6 85 d6 fd ff ff 65 	movb   $0x65,-0x22a(%rbp)
    56cb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    56cf:	48 8d 95 d6 fd ff ff 	lea    -0x22a(%rbp),%rdx
    56d6:	48 89 d6             	mov    %rdx,%rsi
    56d9:	48 89 c7             	mov    %rax,%rdi
    56dc:	e8 ff 07 00 00       	callq  5ee0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_>
    56e1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    56e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    56e9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    56ed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56f1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    56f5:	48 8d 85 d8 fd ff ff 	lea    -0x228(%rbp),%rax
    56fc:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5700:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    5704:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5708:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    570c:	48 8b 10             	mov    (%rax),%rdx
    570f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5713:	48 8b 00             	mov    (%rax),%rax
    5716:	48 39 c2             	cmp    %rax,%rdx
    5719:	0f 94 c0             	sete   %al
    571c:	84 c0                	test   %al,%al
    571e:	75 1f                	jne    573f <ecall_map+0x64e>
    5720:	48 8d 0d 1e 6f 03 00 	lea    0x36f1e(%rip),%rcx        # 3c645 <_ZNSt3__1L19piecewise_constructE+0xe3>
    5727:	48 8d 15 62 6f 03 00 	lea    0x36f62(%rip),%rdx        # 3c690 <_ZZ9ecall_mapE8__func__>
    572e:	be 56 00 00 00       	mov    $0x56,%esi
    5733:	48 8d 3d 9e 6e 03 00 	lea    0x36e9e(%rip),%rdi        # 3c5d8 <_ZNSt3__1L19piecewise_constructE+0x76>
    573a:	e8 56 5d 00 00       	callq  b495 <__assert>
    573f:	90                   	nop
    5740:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5744:	48 89 c7             	mov    %rax,%rdi
    5747:	e8 8a f9 ff ff       	callq  50d6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEED1Ev>
    574c:	90                   	nop
    574d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5751:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5758:	00 00 
    575a:	74 26                	je     5782 <ecall_map+0x691>
    575c:	eb 1f                	jmp    577d <ecall_map+0x68c>
    575e:	48 89 c3             	mov    %rax,%rbx
    5761:	eb 03                	jmp    5766 <ecall_map+0x675>
    5763:	48 89 c3             	mov    %rax,%rbx
    5766:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    576a:	48 89 c7             	mov    %rax,%rdi
    576d:	e8 64 f9 ff ff       	callq  50d6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEED1Ev>
    5772:	48 89 d8             	mov    %rbx,%rax
    5775:	48 89 c7             	mov    %rax,%rdi
    5778:	e8 96 b5 01 00       	callq  20d13 <_Unwind_Resume>
    577d:	e8 0a 5d 00 00       	callq  b48c <__stack_chk_fail>
    5782:	48 81 c4 28 02 00 00 	add    $0x228,%rsp
    5789:	5b                   	pop    %rbx
    578a:	5d                   	pop    %rbp
    578b:	c3                   	retq   

000000000000578c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev>:
    578c:	55                   	push   %rbp
    578d:	48 89 e5             	mov    %rsp,%rbp
    5790:	48 83 ec 40          	sub    $0x40,%rsp
    5794:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    5798:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    579c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    57a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    57a4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    57a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57ac:	48 83 c0 08          	add    $0x8,%rax
    57b0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    57b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    57bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57c0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    57c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    57cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57d0:	48 8b 10             	mov    (%rax),%rdx
    57d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    57d7:	48 89 d6             	mov    %rdx,%rsi
    57da:	48 89 c7             	mov    %rax,%rdi
    57dd:	e8 3a 02 00 00       	callq  5a1c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    57e2:	90                   	nop
    57e3:	c9                   	leaveq 
    57e4:	c3                   	retq   
    57e5:	90                   	nop

00000000000057e6 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>:
    57e6:	55                   	push   %rbp
    57e7:	48 89 e5             	mov    %rsp,%rbp
    57ea:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    57f1:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    57f8:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    57ff:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5806:	00 00 
    5808:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    580c:	31 c0                	xor    %eax,%eax
    580e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5815:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    581c:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    5820:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    5824:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    582b:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    5832:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    5839:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    5840:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
    5844:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    5848:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    584c:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    5850:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    5854:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    5858:	44 88 9d 67 ff ff ff 	mov    %r11b,-0x99(%rbp)
    585f:	44 88 95 66 ff ff ff 	mov    %r10b,-0x9a(%rbp)
    5866:	44 88 8d 65 ff ff ff 	mov    %r9b,-0x9b(%rbp)
    586d:	44 88 85 64 ff ff ff 	mov    %r8b,-0x9c(%rbp)
    5874:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    5878:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    587c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5880:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    5884:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    5888:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    588c:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    5890:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5894:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5898:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    589c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    58a0:	48 89 0a             	mov    %rcx,(%rdx)
    58a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    58a7:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    58ae:	48 8d 8d 63 ff ff ff 	lea    -0x9d(%rbp),%rcx
    58b5:	48 8d 95 68 ff ff ff 	lea    -0x98(%rbp),%rdx
    58bc:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
    58c3:	49 89 c8             	mov    %rcx,%r8
    58c6:	48 89 d1             	mov    %rdx,%rcx
    58c9:	48 8d 15 92 6c 03 00 	lea    0x36c92(%rip),%rdx        # 3c562 <_ZNSt3__1L19piecewise_constructE>
    58d0:	48 89 c7             	mov    %rax,%rdi
    58d3:	e8 9a 02 00 00       	callq  5b72 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    58d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    58dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    58e0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    58e4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    58e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    58ec:	48 8b 00             	mov    (%rax),%rax
    58ef:	48 83 c0 1c          	add    $0x1c,%rax
    58f3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    58f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    58fb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    58ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5903:	48 83 c0 04          	add    $0x4,%rax
    5907:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    590b:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    5912:	00 00 
    5914:	74 0f                	je     5925 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc+0x13f>
    5916:	eb 08                	jmp    5920 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc+0x13a>
    5918:	48 89 c7             	mov    %rax,%rdi
    591b:	e8 f3 b3 01 00       	callq  20d13 <_Unwind_Resume>
    5920:	e8 67 5b 00 00       	callq  b48c <__stack_chk_fail>
    5925:	c9                   	leaveq 
    5926:	c3                   	retq   
    5927:	90                   	nop

0000000000005928 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_>:
    5928:	55                   	push   %rbp
    5929:	48 89 e5             	mov    %rsp,%rbp
    592c:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    5933:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    593a:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    5941:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5948:	00 00 
    594a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    594e:	31 c0                	xor    %eax,%eax
    5950:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5957:	48 83 c0 08          	add    $0x8,%rax
    595b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    595f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5963:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5967:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    596b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    596f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5973:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5977:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    597b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5982:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5989:	48 83 c0 10          	add    $0x10,%rax
    598d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5991:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    5998:	00 
    5999:	88 55 86             	mov    %dl,-0x7a(%rbp)
    599c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    59a0:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    59a4:	48 8b 00             	mov    (%rax),%rax
    59a7:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    59ab:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    59af:	88 4d 87             	mov    %cl,-0x79(%rbp)
    59b2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    59b6:	48 8b 10             	mov    (%rax),%rdx
    59b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59bd:	48 89 10             	mov    %rdx,(%rax)
    59c0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    59c7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    59cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59cf:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    59d6:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    59da:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    59de:	48 83 c2 08          	add    $0x8,%rdx
    59e2:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    59e6:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    59ea:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    59ee:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    59f2:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    59f6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    59fa:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    59fe:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    5a02:	48 89 10             	mov    %rdx,(%rax)
    5a05:	90                   	nop
    5a06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a0a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5a11:	00 00 
    5a13:	74 05                	je     5a1a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_+0xf2>
    5a15:	e8 72 5a 00 00       	callq  b48c <__stack_chk_fail>
    5a1a:	c9                   	leaveq 
    5a1b:	c3                   	retq   

0000000000005a1c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>:
    5a1c:	55                   	push   %rbp
    5a1d:	48 89 e5             	mov    %rsp,%rbp
    5a20:	53                   	push   %rbx
    5a21:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    5a28:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    5a2f:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    5a36:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5a3d:	00 00 
    5a3f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5a43:	31 c0                	xor    %eax,%eax
    5a45:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
    5a4c:	00 
    5a4d:	0f 84 ff 00 00 00    	je     5b52 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x136>
    5a53:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5a5a:	48 8b 10             	mov    (%rax),%rdx
    5a5d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5a64:	48 89 d6             	mov    %rdx,%rsi
    5a67:	48 89 c7             	mov    %rax,%rdi
    5a6a:	e8 ad ff ff ff       	callq  5a1c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    5a6f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5a76:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5a7a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5a81:	48 89 d6             	mov    %rdx,%rsi
    5a84:	48 89 c7             	mov    %rax,%rdi
    5a87:	e8 90 ff ff ff       	callq  5a1c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    5a8c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5a93:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5a97:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5a9b:	48 83 c0 08          	add    $0x8,%rax
    5a9f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5aa7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5aab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5aaf:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    5ab6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5abd:	48 83 c0 1c          	add    $0x1c,%rax
    5ac1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5ac5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ac9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5acd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5ad1:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    5ad8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    5adc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5ae0:	88 9d 5e ff ff ff    	mov    %bl,-0xa2(%rbp)
    5ae6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5aea:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5aee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5af2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5af6:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5afd:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5b04:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5b0b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    5b12:	48 c7 85 78 ff ff ff 	movq   $0x1,-0x88(%rbp)
    5b19:	01 00 00 00 
    5b1d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5b24:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    5b28:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5b2f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    5b33:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5b3a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    5b3e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5b42:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5b46:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5b4a:	48 89 c7             	mov    %rax,%rdi
    5b4d:	e8 9c 17 02 00       	callq  272ee <_ZdlPv>
    5b52:	90                   	nop
    5b53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b57:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5b5e:	00 00 
    5b60:	74 05                	je     5b67 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x14b>
    5b62:	e8 25 59 00 00       	callq  b48c <__stack_chk_fail>
    5b67:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    5b6e:	5b                   	pop    %rbx
    5b6f:	5d                   	pop    %rbp
    5b70:	c3                   	retq   
    5b71:	90                   	nop

0000000000005b72 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    5b72:	55                   	push   %rbp
    5b73:	48 89 e5             	mov    %rsp,%rbp
    5b76:	53                   	push   %rbx
    5b77:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
    5b7e:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
    5b85:	48 89 b5 70 fe ff ff 	mov    %rsi,-0x190(%rbp)
    5b8c:	48 89 95 68 fe ff ff 	mov    %rdx,-0x198(%rbp)
    5b93:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
    5b9a:	4c 89 85 58 fe ff ff 	mov    %r8,-0x1a8(%rbp)
    5ba1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5ba8:	00 00 
    5baa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5bae:	31 c0                	xor    %eax,%eax
    5bb0:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
    5bb7:	48 8d 8d 88 fe ff ff 	lea    -0x178(%rbp),%rcx
    5bbe:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    5bc5:	48 89 ce             	mov    %rcx,%rsi
    5bc8:	48 89 c7             	mov    %rax,%rdi
    5bcb:	e8 0c 09 00 00       	callq  64dc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_>
    5bd0:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    5bd7:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    5bde:	48 8b 00             	mov    (%rax),%rax
    5be1:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    5be8:	c6 85 86 fe ff ff 00 	movb   $0x0,-0x17a(%rbp)
    5bef:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    5bf6:	48 8b 00             	mov    (%rax),%rax
    5bf9:	48 85 c0             	test   %rax,%rax
    5bfc:	0f 85 76 02 00 00    	jne    5e78 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x306>
    5c02:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    5c09:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    5c10:	48 8b bd b8 fe ff ff 	mov    -0x148(%rbp),%rdi
    5c17:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    5c1e:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    5c25:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    5c2c:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    5c33:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    5c3a:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    5c41:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c45:	48 8b b5 78 fe ff ff 	mov    -0x188(%rbp),%rsi
    5c4c:	49 89 f8             	mov    %rdi,%r8
    5c4f:	48 89 c7             	mov    %rax,%rdi
    5c52:	e8 63 0b 00 00       	callq  67ba <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_>
    5c57:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c5b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5c5f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5c63:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5c67:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5c6b:	48 8b 08             	mov    (%rax),%rcx
    5c6e:	48 8b b5 88 fe ff ff 	mov    -0x178(%rbp),%rsi
    5c75:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
    5c7c:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    5c83:	48 89 c7             	mov    %rax,%rdi
    5c86:	e8 0f 12 00 00       	callq  6e9a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_>
    5c8b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c8f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    5c93:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    5c97:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    5c9b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5c9f:	48 8b 00             	mov    (%rax),%rax
    5ca2:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    5ca6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5caa:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5cae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5cb2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5cb6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5cba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5cc1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5cc5:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    5ccc:	c6 85 86 fe ff ff 01 	movb   $0x1,-0x17a(%rbp)
    5cd3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5cd7:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    5cde:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
    5ce5:	00 00 00 00 
    5ce9:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    5cf0:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    5cf7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    5cfe:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    5d05:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    5d0c:	48 8b 00             	mov    (%rax),%rax
    5d0f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    5d16:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    5d1d:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    5d24:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    5d2b:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    5d32:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    5d39:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    5d40:	48 89 10             	mov    %rdx,(%rax)
    5d43:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    5d4a:	00 
    5d4b:	0f 84 27 01 00 00    	je     5e78 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x306>
    5d51:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    5d58:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    5d5f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    5d66:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    5d6d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    5d74:	48 83 c0 08          	add    $0x8,%rax
    5d78:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    5d7f:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5d86:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    5d8d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    5d94:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    5d98:	84 c0                	test   %al,%al
    5d9a:	74 61                	je     5dfd <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x28b>
    5d9c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    5da3:	48 83 c0 1c          	add    $0x1c,%rax
    5da7:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    5dae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    5db5:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    5dbc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    5dc3:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    5dca:	48 8b 12             	mov    (%rdx),%rdx
    5dcd:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    5dd4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    5ddb:	88 9d 87 fe ff ff    	mov    %bl,-0x179(%rbp)
    5de1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    5de8:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    5def:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    5df6:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    5dfd:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
    5e04:	00 
    5e05:	74 71                	je     5e78 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x306>
    5e07:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    5e0e:	48 8b 00             	mov    (%rax),%rax
    5e11:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    5e18:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    5e1f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    5e26:	48 c7 85 58 ff ff ff 	movq   $0x1,-0xa8(%rbp)
    5e2d:	01 00 00 00 
    5e31:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5e38:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    5e3f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    5e46:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5e4d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5e54:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    5e5b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5e62:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    5e69:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5e70:	48 89 c7             	mov    %rax,%rdi
    5e73:	e8 76 14 02 00       	callq  272ee <_ZdlPv>
    5e78:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
    5e7f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5e83:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5e87:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    5e8e:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    5e95:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5e99:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5e9d:	48 8b 00             	mov    (%rax),%rax
    5ea0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5ea4:	48 8d 85 86 fe ff ff 	lea    -0x17a(%rbp),%rax
    5eab:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5eaf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5eb3:	0f b6 00             	movzbl (%rax),%eax
    5eb6:	88 45 d8             	mov    %al,-0x28(%rbp)
    5eb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ebd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5ec1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5ec5:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    5ecc:	00 00 
    5ece:	74 05                	je     5ed5 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x363>
    5ed0:	e8 b7 55 00 00       	callq  b48c <__stack_chk_fail>
    5ed5:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
    5edc:	5b                   	pop    %rbx
    5edd:	5d                   	pop    %rbp
    5ede:	c3                   	retq   
    5edf:	90                   	nop

0000000000005ee0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_>:
    5ee0:	55                   	push   %rbp
    5ee1:	48 89 e5             	mov    %rsp,%rbp
    5ee4:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
    5eeb:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
    5ef2:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
    5ef9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5f00:	00 00 
    5f02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5f06:	31 c0                	xor    %eax,%eax
    5f08:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    5f0f:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    5f16:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    5f1d:	48 83 c0 08          	add    $0x8,%rax
    5f21:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    5f28:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    5f2f:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    5f36:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    5f3d:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    5f44:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    5f4b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    5f52:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    5f59:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    5f60:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    5f67:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    5f6e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    5f75:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    5f7c:	48 83 c0 08          	add    $0x8,%rax
    5f80:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    5f87:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5f8e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    5f95:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    5f9c:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    5fa3:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    5faa:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    5fb1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    5fb8:	48 8b 10             	mov    (%rax),%rdx
    5fbb:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
    5fc2:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    5fc9:	48 89 c7             	mov    %rax,%rdi
    5fcc:	e8 bf 0f 00 00       	callq  6f90 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE>
    5fd1:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    5fd8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    5fdf:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    5fe6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    5fed:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    5ff4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5ffb:	48 83 c0 08          	add    $0x8,%rax
    5fff:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6006:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    600d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    6014:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    601b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    6022:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6029:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6030:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    6037:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    603e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    6045:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    604c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    6053:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    605a:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    6061:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    6068:	48 8d 85 c8 fe ff ff 	lea    -0x138(%rbp),%rax
    606f:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    6076:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    607d:	48 8b 10             	mov    (%rax),%rdx
    6080:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6087:	48 8b 00             	mov    (%rax),%rax
    608a:	48 39 c2             	cmp    %rax,%rdx
    608d:	0f 94 c0             	sete   %al
    6090:	83 f0 01             	xor    $0x1,%eax
    6093:	84 c0                	test   %al,%al
    6095:	0f 84 91 00 00 00    	je     612c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x24c>
    609b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    60a2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    60a6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    60aa:	48 83 c0 10          	add    $0x10,%rax
    60ae:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    60b2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    60b6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    60ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    60be:	48 8d 95 c0 fe ff ff 	lea    -0x140(%rbp),%rdx
    60c5:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    60c9:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    60cd:	48 8b 12             	mov    (%rdx),%rdx
    60d0:	48 83 c2 1c          	add    $0x1c,%rdx
    60d4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    60db:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    60e2:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    60e9:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
    60ed:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    60f1:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    60f8:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    60fc:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6103:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    6107:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    610b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    610f:	0f b6 10             	movzbl (%rax),%edx
    6112:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6116:	0f b6 00             	movzbl (%rax),%eax
    6119:	38 c2                	cmp    %al,%dl
    611b:	0f 9c c0             	setl   %al
    611e:	83 f0 01             	xor    $0x1,%eax
    6121:	84 c0                	test   %al,%al
    6123:	74 07                	je     612c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x24c>
    6125:	b8 01 00 00 00       	mov    $0x1,%eax
    612a:	eb 05                	jmp    6131 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x251>
    612c:	b8 00 00 00 00       	mov    $0x0,%eax
    6131:	84 c0                	test   %al,%al
    6133:	74 09                	je     613e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x25e>
    6135:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    613c:	eb 52                	jmp    6190 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x2b0>
    613e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6145:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6149:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    614d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6151:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6155:	48 83 c0 08          	add    $0x8,%rax
    6159:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    615d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6161:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6169:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    616d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6171:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6179:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    617d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6181:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    6188:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    618f:	90                   	nop
    6190:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    6194:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    619b:	00 00 
    619d:	74 05                	je     61a4 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x2c4>
    619f:	e8 e8 52 00 00       	callq  b48c <__stack_chk_fail>
    61a4:	c9                   	leaveq 
    61a5:	c3                   	retq   

00000000000061a6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    61a6:	55                   	push   %rbp
    61a7:	48 89 e5             	mov    %rsp,%rbp
    61aa:	53                   	push   %rbx
    61ab:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
    61b2:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    61b9:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
    61c0:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    61c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    61ce:	00 00 
    61d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    61d4:	31 c0                	xor    %eax,%eax
    61d6:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
    61dd:	48 8d 8d 98 fe ff ff 	lea    -0x168(%rbp),%rcx
    61e4:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
    61eb:	48 89 ce             	mov    %rcx,%rsi
    61ee:	48 89 c7             	mov    %rax,%rdi
    61f1:	e8 e6 02 00 00       	callq  64dc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_>
    61f6:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    61fd:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    6204:	48 8b 00             	mov    (%rax),%rax
    6207:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    620e:	c6 85 96 fe ff ff 00 	movb   $0x0,-0x16a(%rbp)
    6215:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    621c:	48 8b 00             	mov    (%rax),%rax
    621f:	48 85 c0             	test   %rax,%rax
    6222:	0f 85 4c 02 00 00    	jne    6474 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x2ce>
    6228:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    622f:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    6236:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
    623d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6241:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
    6248:	48 89 ce             	mov    %rcx,%rsi
    624b:	48 89 c7             	mov    %rax,%rdi
    624e:	e8 2d 0e 00 00       	callq  7080 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_>
    6253:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6257:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    625b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    625f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6263:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6267:	48 8b 08             	mov    (%rax),%rcx
    626a:	48 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%rsi
    6271:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    6278:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
    627f:	48 89 c7             	mov    %rax,%rdi
    6282:	e8 13 0c 00 00       	callq  6e9a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_>
    6287:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    628b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    628f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6293:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6297:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    629b:	48 8b 00             	mov    (%rax),%rax
    629e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    62a2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    62a6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    62aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    62ae:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    62b2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    62b6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    62bd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    62c1:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    62c8:	c6 85 96 fe ff ff 01 	movb   $0x1,-0x16a(%rbp)
    62cf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    62d3:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    62da:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
    62e1:	00 00 00 00 
    62e5:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    62ec:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    62f3:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    62fa:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    6301:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6308:	48 8b 00             	mov    (%rax),%rax
    630b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    6312:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    6319:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    6320:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6327:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    632e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6335:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    633c:	48 89 10             	mov    %rdx,(%rax)
    633f:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    6346:	00 
    6347:	0f 84 27 01 00 00    	je     6474 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x2ce>
    634d:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    6354:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    635b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6362:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    6369:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6370:	48 83 c0 08          	add    $0x8,%rax
    6374:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    637b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    6382:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    6389:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6390:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6394:	84 c0                	test   %al,%al
    6396:	74 61                	je     63f9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x253>
    6398:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    639f:	48 83 c0 1c          	add    $0x1c,%rax
    63a3:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    63aa:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    63b1:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    63b8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    63bf:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    63c6:	48 8b 12             	mov    (%rdx),%rdx
    63c9:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    63d0:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    63d7:	88 9d 97 fe ff ff    	mov    %bl,-0x169(%rbp)
    63dd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    63e4:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    63eb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    63f2:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    63f9:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
    6400:	00 
    6401:	74 71                	je     6474 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x2ce>
    6403:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    640a:	48 8b 00             	mov    (%rax),%rax
    640d:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6414:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    641b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    6422:	48 c7 85 58 ff ff ff 	movq   $0x1,-0xa8(%rbp)
    6429:	01 00 00 00 
    642d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    6434:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    643b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    6442:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    6449:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6450:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6457:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    645e:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    6465:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    646c:	48 89 c7             	mov    %rax,%rdi
    646f:	e8 7a 0e 02 00       	callq  272ee <_ZdlPv>
    6474:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    647b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    647f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6483:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    648a:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    6491:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6495:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6499:	48 8b 00             	mov    (%rax),%rax
    649c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    64a0:	48 8d 85 96 fe ff ff 	lea    -0x16a(%rbp),%rax
    64a7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    64ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    64af:	0f b6 00             	movzbl (%rax),%eax
    64b2:	88 45 d8             	mov    %al,-0x28(%rbp)
    64b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    64bd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    64c1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    64c8:	00 00 
    64ca:	74 05                	je     64d1 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x32b>
    64cc:	e8 bb 4f 00 00       	callq  b48c <__stack_chk_fail>
    64d1:	48 81 c4 88 01 00 00 	add    $0x188,%rsp
    64d8:	5b                   	pop    %rbx
    64d9:	5d                   	pop    %rbp
    64da:	c3                   	retq   
    64db:	90                   	nop

00000000000064dc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_>:
    64dc:	55                   	push   %rbp
    64dd:	48 89 e5             	mov    %rsp,%rbp
    64e0:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
    64e7:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
    64ee:	48 89 b5 e0 fe ff ff 	mov    %rsi,-0x120(%rbp)
    64f5:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
    64fc:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6503:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    650a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6511:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    6518:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    651f:	48 83 c0 08          	add    $0x8,%rax
    6523:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    652a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6531:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    6538:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    653f:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    6546:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    654d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    6554:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    655b:	48 8b 00             	mov    (%rax),%rax
    655e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    6565:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    656c:	48 89 c7             	mov    %rax,%rdi
    656f:	e8 62 10 00 00       	callq  75d6 <_ZNKSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE10__root_ptrEv>
    6574:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    657b:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    6582:	00 
    6583:	0f 84 e7 01 00 00    	je     6770 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x294>
    6589:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6590:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    6597:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    659e:	48 83 c0 10          	add    $0x10,%rax
    65a2:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    65a9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    65b0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    65b7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    65be:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    65c5:	48 83 c2 1c          	add    $0x1c,%rdx
    65c9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    65d0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    65d7:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    65de:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    65e5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    65ec:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    65f3:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
    65fa:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    6601:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    6608:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    660f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6616:	0f b6 10             	movzbl (%rax),%edx
    6619:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    6620:	0f b6 00             	movzbl (%rax),%eax
    6623:	38 c2                	cmp    %al,%dl
    6625:	0f 9c c0             	setl   %al
    6628:	84 c0                	test   %al,%al
    662a:	74 5b                	je     6687 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x1ab>
    662c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6633:	48 8b 00             	mov    (%rax),%rax
    6636:	48 85 c0             	test   %rax,%rax
    6639:	74 2c                	je     6667 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x18b>
    663b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6642:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    6646:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    664a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    6651:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6658:	48 8b 00             	mov    (%rax),%rax
    665b:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    6662:	e9 22 ff ff ff       	jmpq   6589 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0xad>
    6667:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    666e:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    6675:	48 89 10             	mov    %rdx,(%rax)
    6678:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    667f:	48 8b 00             	mov    (%rax),%rax
    6682:	e9 30 01 00 00       	jmpq   67b7 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x2db>
    6687:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    668e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6692:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6696:	48 83 c0 10          	add    $0x10,%rax
    669a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    669e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    66a2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    66a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66aa:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    66b1:	48 83 c2 1c          	add    $0x1c,%rdx
    66b5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    66b9:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    66bd:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    66c4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    66c8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    66cc:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    66d0:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    66d4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    66d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    66dc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    66e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    66e4:	0f b6 10             	movzbl (%rax),%edx
    66e7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    66eb:	0f b6 00             	movzbl (%rax),%eax
    66ee:	38 c2                	cmp    %al,%dl
    66f0:	0f 9c c0             	setl   %al
    66f3:	84 c0                	test   %al,%al
    66f5:	74 5f                	je     6756 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x27a>
    66f7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    66fe:	48 8b 40 08          	mov    0x8(%rax),%rax
    6702:	48 85 c0             	test   %rax,%rax
    6705:	74 31                	je     6738 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x25c>
    6707:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    670e:	48 83 c0 08          	add    $0x8,%rax
    6712:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6716:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    671a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    6721:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6728:	48 8b 40 08          	mov    0x8(%rax),%rax
    672c:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    6733:	e9 51 fe ff ff       	jmpq   6589 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0xad>
    6738:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    673f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    6746:	48 89 10             	mov    %rdx,(%rax)
    6749:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6750:	48 83 c0 08          	add    $0x8,%rax
    6754:	eb 61                	jmp    67b7 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x2db>
    6756:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    675d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    6764:	48 89 10             	mov    %rdx,(%rax)
    6767:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    676e:	eb 47                	jmp    67b7 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x2db>
    6770:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6777:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    677b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    677f:	48 83 c0 08          	add    $0x8,%rax
    6783:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6787:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    678b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    678f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6793:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6797:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    679b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    679f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67a3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    67aa:	48 89 10             	mov    %rdx,(%rax)
    67ad:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    67b4:	48 8b 00             	mov    (%rax),%rax
    67b7:	c9                   	leaveq 
    67b8:	c3                   	retq   
    67b9:	90                   	nop

00000000000067ba <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_>:
    67ba:	55                   	push   %rbp
    67bb:	48 89 e5             	mov    %rsp,%rbp
    67be:	41 57                	push   %r15
    67c0:	41 56                	push   %r14
    67c2:	41 55                	push   %r13
    67c4:	41 54                	push   %r12
    67c6:	53                   	push   %rbx
    67c7:	48 81 ec 38 03 00 00 	sub    $0x338,%rsp
    67ce:	48 89 bd c8 fc ff ff 	mov    %rdi,-0x338(%rbp)
    67d5:	48 89 b5 c0 fc ff ff 	mov    %rsi,-0x340(%rbp)
    67dc:	48 89 95 b8 fc ff ff 	mov    %rdx,-0x348(%rbp)
    67e3:	48 89 8d b0 fc ff ff 	mov    %rcx,-0x350(%rbp)
    67ea:	4c 89 85 a8 fc ff ff 	mov    %r8,-0x358(%rbp)
    67f1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    67f8:	00 00 
    67fa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    67fe:	31 c0                	xor    %eax,%eax
    6800:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
    6807:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
    680e:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
    6815:	48 83 c0 08          	add    $0x8,%rax
    6819:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
    6820:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
    6827:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
    682e:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    6835:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
    683c:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
    6843:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
    684a:	c6 85 e7 fc ff ff 00 	movb   $0x0,-0x319(%rbp)
    6851:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
    6858:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    685c:	0f b6 85 e7 fc ff ff 	movzbl -0x319(%rbp),%eax
    6863:	88 45 98             	mov    %al,-0x68(%rbp)
    6866:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
    686d:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
    6874:	48 c7 85 10 fd ff ff 	movq   $0x1,-0x2f0(%rbp)
    687b:	01 00 00 00 
    687f:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
    6886:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
    688d:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
    6894:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
    689b:	48 c7 85 28 fd ff ff 	movq   $0x0,-0x2d8(%rbp)
    68a2:	00 00 00 00 
    68a6:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
    68ad:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
    68b4:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    68bb:	66 66 06 
    68be:	48 39 85 20 fd ff ff 	cmp    %rax,-0x2e0(%rbp)
    68c5:	0f 97 c0             	seta   %al
    68c8:	84 c0                	test   %al,%al
    68ca:	74 2e                	je     68fa <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x140>
    68cc:	bf 08 00 00 00       	mov    $0x8,%edi
    68d1:	e8 f9 f7 01 00       	callq  260cf <__cxa_allocate_exception>
    68d6:	48 89 c3             	mov    %rax,%rbx
    68d9:	48 89 df             	mov    %rbx,%rdi
    68dc:	e8 13 08 02 00       	callq  270f4 <_ZNSt9bad_allocC1Ev>
    68e1:	48 8d 05 36 08 02 00 	lea    0x20836(%rip),%rax        # 2711e <_ZNSt9bad_allocD1Ev>
    68e8:	48 89 c2             	mov    %rax,%rdx
    68eb:	48 8d 35 d6 03 04 00 	lea    0x403d6(%rip),%rsi        # 46cc8 <_ZTISt9bad_alloc>
    68f2:	48 89 df             	mov    %rbx,%rdi
    68f5:	e8 da fa 01 00       	callq  263d4 <__cxa_throw>
    68fa:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
    6901:	48 89 d0             	mov    %rdx,%rax
    6904:	48 c1 e0 02          	shl    $0x2,%rax
    6908:	48 01 d0             	add    %rdx,%rax
    690b:	48 c1 e0 03          	shl    $0x3,%rax
    690f:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
    6916:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
    691d:	48 89 c7             	mov    %rax,%rdi
    6920:	e8 ff 09 02 00       	callq  27324 <_Znwm>
    6925:	48 89 c2             	mov    %rax,%rdx
    6928:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
    692f:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    6936:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
    693d:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    6944:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6948:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    694f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
    6956:	48 89 95 a0 fe ff ff 	mov    %rdx,-0x160(%rbp)
    695d:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    6964:	48 89 95 f0 fc ff ff 	mov    %rdx,-0x310(%rbp)
    696b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    696f:	48 8b 00             	mov    (%rax),%rax
    6972:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6976:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    697a:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
    6981:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6985:	48 8d 95 f0 fc ff ff 	lea    -0x310(%rbp),%rdx
    698c:	48 8b 12             	mov    (%rdx),%rdx
    698f:	48 89 8d a8 fe ff ff 	mov    %rcx,-0x158(%rbp)
    6996:	48 89 95 f8 fc ff ff 	mov    %rdx,-0x308(%rbp)
    699d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    69a1:	48 8b 00             	mov    (%rax),%rax
    69a4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    69a8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    69ac:	48 8d 85 f8 fc ff ff 	lea    -0x308(%rbp),%rax
    69b3:	48 8b 10             	mov    (%rax),%rdx
    69b6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    69bd:	48 89 10             	mov    %rdx,(%rax)
    69c0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    69c4:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
    69cb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    69cf:	48 8b 00             	mov    (%rax),%rax
    69d2:	48 89 41 08          	mov    %rax,0x8(%rcx)
    69d6:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    69da:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
    69e1:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    69e8:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    69ef:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    69f6:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    69fd:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    6a04:	48 8b 8d b8 fc ff ff 	mov    -0x348(%rbp),%rcx
    6a0b:	48 89 8d 70 fe ff ff 	mov    %rcx,-0x190(%rbp)
    6a12:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
    6a19:	48 8b b5 c8 fc ff ff 	mov    -0x338(%rbp),%rsi
    6a20:	48 89 b5 58 fe ff ff 	mov    %rsi,-0x1a8(%rbp)
    6a27:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
    6a2e:	48 89 b5 60 fe ff ff 	mov    %rsi,-0x1a0(%rbp)
    6a35:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
    6a3c:	48 89 b5 68 fe ff ff 	mov    %rsi,-0x198(%rbp)
    6a43:	48 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%rsi
    6a4a:	48 8b 36             	mov    (%rsi),%rsi
    6a4d:	48 83 c6 1c          	add    $0x1c,%rsi
    6a51:	48 89 b5 48 fe ff ff 	mov    %rsi,-0x1b8(%rbp)
    6a58:	48 8b b5 48 fe ff ff 	mov    -0x1b8(%rbp),%rsi
    6a5f:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
    6a66:	48 8b b5 50 fe ff ff 	mov    -0x1b0(%rbp),%rsi
    6a6d:	48 8b bd 00 fd ff ff 	mov    -0x300(%rbp),%rdi
    6a74:	48 89 bd 60 fd ff ff 	mov    %rdi,-0x2a0(%rbp)
    6a7b:	48 89 b5 68 fd ff ff 	mov    %rsi,-0x298(%rbp)
    6a82:	48 89 8d 70 fd ff ff 	mov    %rcx,-0x290(%rbp)
    6a89:	48 89 95 78 fd ff ff 	mov    %rdx,-0x288(%rbp)
    6a90:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
    6a97:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
    6a9e:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
    6aa5:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
    6aac:	48 8b 95 78 fd ff ff 	mov    -0x288(%rbp),%rdx
    6ab3:	48 89 95 90 fd ff ff 	mov    %rdx,-0x270(%rbp)
    6aba:	48 8b 95 90 fd ff ff 	mov    -0x270(%rbp),%rdx
    6ac1:	48 8b 8d 70 fd ff ff 	mov    -0x290(%rbp),%rcx
    6ac8:	48 89 8d 98 fd ff ff 	mov    %rcx,-0x268(%rbp)
    6acf:	48 8b 8d 98 fd ff ff 	mov    -0x268(%rbp),%rcx
    6ad6:	44 88 bd de fc ff ff 	mov    %r15b,-0x322(%rbp)
    6add:	48 8b b5 60 fd ff ff 	mov    -0x2a0(%rbp),%rsi
    6ae4:	48 89 b5 a0 fd ff ff 	mov    %rsi,-0x260(%rbp)
    6aeb:	48 8b b5 68 fd ff ff 	mov    -0x298(%rbp),%rsi
    6af2:	48 89 b5 a8 fd ff ff 	mov    %rsi,-0x258(%rbp)
    6af9:	48 89 8d b0 fd ff ff 	mov    %rcx,-0x250(%rbp)
    6b00:	48 89 95 b8 fd ff ff 	mov    %rdx,-0x248(%rbp)
    6b07:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
    6b0e:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
    6b15:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
    6b1c:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    6b23:	48 8b 95 b8 fd ff ff 	mov    -0x248(%rbp),%rdx
    6b2a:	48 89 95 d0 fd ff ff 	mov    %rdx,-0x230(%rbp)
    6b31:	48 8b 95 d0 fd ff ff 	mov    -0x230(%rbp),%rdx
    6b38:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
    6b3f:	48 89 8d d8 fd ff ff 	mov    %rcx,-0x228(%rbp)
    6b46:	48 8b 8d d8 fd ff ff 	mov    -0x228(%rbp),%rcx
    6b4d:	48 8b b5 a0 fd ff ff 	mov    -0x260(%rbp),%rsi
    6b54:	48 89 b5 e0 fd ff ff 	mov    %rsi,-0x220(%rbp)
    6b5b:	48 8b b5 a8 fd ff ff 	mov    -0x258(%rbp),%rsi
    6b62:	48 89 b5 e8 fd ff ff 	mov    %rsi,-0x218(%rbp)
    6b69:	48 89 8d f0 fd ff ff 	mov    %rcx,-0x210(%rbp)
    6b70:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    6b77:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    6b7e:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
    6b85:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
    6b8c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    6b93:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    6b9a:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
    6ba1:	48 8b 00             	mov    (%rax),%rax
    6ba4:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    6ba8:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
    6baf:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    6bb6:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    6bbd:	48 89 c6             	mov    %rax,%rsi
    6bc0:	bf 08 00 00 00       	mov    $0x8,%edi
    6bc5:	e8 d7 07 02 00       	callq  273a1 <_ZnwmPv>
    6bca:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    6bd1:	0f b6 85 e5 fc ff ff 	movzbl -0x31b(%rbp),%eax
    6bd8:	88 85 e0 fc ff ff    	mov    %al,-0x320(%rbp)
    6bde:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6be2:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
    6be9:	0f b6 85 e4 fc ff ff 	movzbl -0x31c(%rbp),%eax
    6bf0:	88 85 df fc ff ff    	mov    %al,-0x321(%rbp)
    6bf6:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
    6bfd:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    6c04:	44 88 b5 e3 fc ff ff 	mov    %r14b,-0x31d(%rbp)
    6c0b:	44 88 ad e2 fc ff ff 	mov    %r13b,-0x31e(%rbp)
    6c12:	88 9d e1 fc ff ff    	mov    %bl,-0x31f(%rbp)
    6c18:	48 8d 85 e8 fc ff ff 	lea    -0x318(%rbp),%rax
    6c1f:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    6c26:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    6c2d:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
    6c34:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    6c3b:	48 8b 00             	mov    (%rax),%rax
    6c3e:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    6c45:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    6c4c:	0f b6 10             	movzbl (%rax),%edx
    6c4f:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
    6c56:	88 10                	mov    %dl,(%rax)
    6c58:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
    6c5f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    6c66:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
    6c6d:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    6c74:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    6c7b:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    6c82:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6c89:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    6c90:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    6c97:	48 83 c0 08          	add    $0x8,%rax
    6c9b:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    6c9f:	90                   	nop
    6ca0:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
    6ca7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    6cab:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    6cb2:	00 00 
    6cb4:	0f 84 ce 01 00 00    	je     6e88 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x6ce>
    6cba:	e9 c4 01 00 00       	jmpq   6e83 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x6c9>
    6cbf:	48 89 c7             	mov    %rax,%rdi
    6cc2:	e8 4c a0 01 00       	callq  20d13 <_Unwind_Resume>
    6cc7:	48 89 c3             	mov    %rax,%rbx
    6cca:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
    6cd1:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    6cd8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    6cdf:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    6ce6:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
    6ced:	00 00 00 00 
    6cf1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    6cf8:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    6cff:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    6d06:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    6d0d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6d14:	48 8b 00             	mov    (%rax),%rax
    6d17:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    6d1e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    6d25:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    6d2c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6d33:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    6d3a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6d41:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    6d48:	48 89 10             	mov    %rdx,(%rax)
    6d4b:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
    6d52:	00 
    6d53:	0f 84 1f 01 00 00    	je     6e78 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x6be>
    6d59:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    6d60:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    6d67:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6d6e:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    6d75:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6d7c:	48 83 c0 08          	add    $0x8,%rax
    6d80:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    6d87:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6d8e:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    6d95:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6d9c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6da0:	84 c0                	test   %al,%al
    6da2:	74 62                	je     6e06 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x64c>
    6da4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    6dab:	48 83 c0 1c          	add    $0x1c,%rax
    6daf:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    6db6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6dbd:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    6dc4:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6dcb:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    6dd2:	48 8b 12             	mov    (%rdx),%rdx
    6dd5:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    6ddc:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    6de3:	44 88 a5 e8 fc ff ff 	mov    %r12b,-0x318(%rbp)
    6dea:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6df1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6df8:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6dff:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    6e06:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
    6e0d:	00 
    6e0e:	74 68                	je     6e78 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x6be>
    6e10:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6e17:	48 8b 00             	mov    (%rax),%rax
    6e1a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    6e21:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    6e28:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6e2f:	48 c7 85 68 ff ff ff 	movq   $0x1,-0x98(%rbp)
    6e36:	01 00 00 00 
    6e3a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6e41:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6e48:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    6e4f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    6e56:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    6e5d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    6e61:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    6e68:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6e6c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6e70:	48 89 c7             	mov    %rax,%rdi
    6e73:	e8 76 04 02 00       	callq  272ee <_ZdlPv>
    6e78:	48 89 d8             	mov    %rbx,%rax
    6e7b:	48 89 c7             	mov    %rax,%rdi
    6e7e:	e8 90 9e 01 00       	callq  20d13 <_Unwind_Resume>
    6e83:	e8 04 46 00 00       	callq  b48c <__stack_chk_fail>
    6e88:	48 81 c4 38 03 00 00 	add    $0x338,%rsp
    6e8f:	5b                   	pop    %rbx
    6e90:	41 5c                	pop    %r12
    6e92:	41 5d                	pop    %r13
    6e94:	41 5e                	pop    %r14
    6e96:	41 5f                	pop    %r15
    6e98:	5d                   	pop    %rbp
    6e99:	c3                   	retq   

0000000000006e9a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_>:
    6e9a:	55                   	push   %rbp
    6e9b:	48 89 e5             	mov    %rsp,%rbp
    6e9e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6ea2:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    6ea6:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    6eaa:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    6eae:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    6eb2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6eb6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6ebd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6ec1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6ec8:	00 
    6ec9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6ecd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6ed1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    6ed5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6ed9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    6edd:	48 89 10             	mov    %rdx,(%rax)
    6ee0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6ee4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6ee8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6eec:	48 8b 00             	mov    (%rax),%rax
    6eef:	48 8b 00             	mov    (%rax),%rax
    6ef2:	48 85 c0             	test   %rax,%rax
    6ef5:	0f 95 c0             	setne  %al
    6ef8:	84 c0                	test   %al,%al
    6efa:	74 21                	je     6f1d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_+0x83>
    6efc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f00:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6f04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6f08:	48 8b 10             	mov    (%rax),%rdx
    6f0b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f0f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6f13:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6f17:	48 8b 12             	mov    (%rdx),%rdx
    6f1a:	48 89 10             	mov    %rdx,(%rax)
    6f1d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6f21:	48 8b 10             	mov    (%rax),%rdx
    6f24:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f28:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6f2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f30:	48 83 c0 08          	add    $0x8,%rax
    6f34:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6f38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6f3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6f48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f54:	48 8b 00             	mov    (%rax),%rax
    6f57:	48 89 d6             	mov    %rdx,%rsi
    6f5a:	48 89 c7             	mov    %rax,%rdi
    6f5d:	e8 b7 06 00 00       	callq  7619 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>
    6f62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f66:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6f6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6f6e:	48 83 c0 10          	add    $0x10,%rax
    6f72:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6f76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6f7a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6f7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f82:	48 8b 10             	mov    (%rax),%rdx
    6f85:	48 83 c2 01          	add    $0x1,%rdx
    6f89:	48 89 10             	mov    %rdx,(%rax)
    6f8c:	90                   	nop
    6f8d:	c9                   	leaveq 
    6f8e:	c3                   	retq   
    6f8f:	90                   	nop

0000000000006f90 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE>:
    6f90:	55                   	push   %rbp
    6f91:	48 89 e5             	mov    %rsp,%rbp
    6f94:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6f98:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    6f9c:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    6fa0:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    6fa4:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    6fa8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6faf:	00 00 
    6fb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6fb5:	31 c0                	xor    %eax,%eax
    6fb7:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    6fbc:	0f 84 93 00 00 00    	je     7055 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0xc5>
    6fc2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6fc6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6fca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fce:	48 83 c0 10          	add    $0x10,%rax
    6fd2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6fd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6fda:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6fde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fe2:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    6fe6:	48 83 c2 1c          	add    $0x1c,%rdx
    6fea:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6fee:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    6ff2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6ff6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6ffa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6ffe:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    7002:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    7006:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    700a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    700e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7012:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7016:	0f b6 10             	movzbl (%rax),%edx
    7019:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    701d:	0f b6 00             	movzbl (%rax),%eax
    7020:	38 c2                	cmp    %al,%dl
    7022:	0f 9c c0             	setl   %al
    7025:	83 f0 01             	xor    $0x1,%eax
    7028:	84 c0                	test   %al,%al
    702a:	74 18                	je     7044 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0xb4>
    702c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7030:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7034:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7038:	48 8b 00             	mov    (%rax),%rax
    703b:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    703f:	e9 73 ff ff ff       	jmpq   6fb7 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0x27>
    7044:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7048:	48 8b 40 08          	mov    0x8(%rax),%rax
    704c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    7050:	e9 62 ff ff ff       	jmpq   6fb7 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0x27>
    7055:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7059:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    705d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7061:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7065:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7069:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    706d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    7074:	00 00 
    7076:	74 05                	je     707d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0xed>
    7078:	e8 0f 44 00 00       	callq  b48c <__stack_chk_fail>
    707d:	c9                   	leaveq 
    707e:	c3                   	retq   
    707f:	90                   	nop

0000000000007080 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_>:
    7080:	55                   	push   %rbp
    7081:	48 89 e5             	mov    %rsp,%rbp
    7084:	41 54                	push   %r12
    7086:	53                   	push   %rbx
    7087:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
    708e:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
    7095:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
    709c:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
    70a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    70aa:	00 00 
    70ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    70b0:	31 c0                	xor    %eax,%eax
    70b2:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
    70b9:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    70c0:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
    70c7:	48 83 c0 08          	add    $0x8,%rax
    70cb:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
    70d2:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
    70d9:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    70e0:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
    70e7:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
    70ee:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
    70f5:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
    70fc:	c6 85 a7 fd ff ff 00 	movb   $0x0,-0x259(%rbp)
    7103:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    710a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    710e:	0f b6 85 a7 fd ff ff 	movzbl -0x259(%rbp),%eax
    7115:	88 45 b8             	mov    %al,-0x48(%rbp)
    7118:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
    711f:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
    7126:	48 c7 85 c8 fd ff ff 	movq   $0x1,-0x238(%rbp)
    712d:	01 00 00 00 
    7131:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
    7138:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
    713f:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    7146:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
    714d:	48 c7 85 e0 fd ff ff 	movq   $0x0,-0x220(%rbp)
    7154:	00 00 00 00 
    7158:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
    715f:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
    7166:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    716d:	66 66 06 
    7170:	48 39 85 d8 fd ff ff 	cmp    %rax,-0x228(%rbp)
    7177:	0f 97 c0             	seta   %al
    717a:	84 c0                	test   %al,%al
    717c:	74 2e                	je     71ac <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x12c>
    717e:	bf 08 00 00 00       	mov    $0x8,%edi
    7183:	e8 47 ef 01 00       	callq  260cf <__cxa_allocate_exception>
    7188:	48 89 c3             	mov    %rax,%rbx
    718b:	48 89 df             	mov    %rbx,%rdi
    718e:	e8 61 ff 01 00       	callq  270f4 <_ZNSt9bad_allocC1Ev>
    7193:	48 8d 05 84 ff 01 00 	lea    0x1ff84(%rip),%rax        # 2711e <_ZNSt9bad_allocD1Ev>
    719a:	48 89 c2             	mov    %rax,%rdx
    719d:	48 8d 35 24 fb 03 00 	lea    0x3fb24(%rip),%rsi        # 46cc8 <_ZTISt9bad_alloc>
    71a4:	48 89 df             	mov    %rbx,%rdi
    71a7:	e8 28 f2 01 00       	callq  263d4 <__cxa_throw>
    71ac:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
    71b3:	48 89 d0             	mov    %rdx,%rax
    71b6:	48 c1 e0 02          	shl    $0x2,%rax
    71ba:	48 01 d0             	add    %rdx,%rax
    71bd:	48 c1 e0 03          	shl    $0x3,%rax
    71c1:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    71c8:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
    71cf:	48 89 c7             	mov    %rax,%rdi
    71d2:	e8 4d 01 02 00       	callq  27324 <_Znwm>
    71d7:	48 89 c2             	mov    %rax,%rdx
    71da:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    71e1:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    71e8:	48 89 95 b0 fe ff ff 	mov    %rdx,-0x150(%rbp)
    71ef:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    71f6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    71fa:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    7201:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    7208:	48 89 95 c0 fe ff ff 	mov    %rdx,-0x140(%rbp)
    720f:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    7216:	48 89 95 a8 fd ff ff 	mov    %rdx,-0x258(%rbp)
    721d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7221:	48 8b 00             	mov    (%rax),%rax
    7224:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7228:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    722c:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    7233:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7237:	48 8d 95 a8 fd ff ff 	lea    -0x258(%rbp),%rdx
    723e:	48 8b 12             	mov    (%rdx),%rdx
    7241:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
    7248:	48 89 95 b0 fd ff ff 	mov    %rdx,-0x250(%rbp)
    724f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7253:	48 8b 00             	mov    (%rax),%rax
    7256:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    725a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    725e:	48 8d 85 b0 fd ff ff 	lea    -0x250(%rbp),%rax
    7265:	48 8b 10             	mov    (%rax),%rdx
    7268:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    726f:	48 89 10             	mov    %rdx,(%rax)
    7272:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7276:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
    727d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7281:	48 8b 00             	mov    (%rax),%rax
    7284:	48 89 41 08          	mov    %rax,0x8(%rcx)
    7288:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    728c:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
    7293:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    729a:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    72a1:	48 8b 95 98 fd ff ff 	mov    -0x268(%rbp),%rdx
    72a8:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
    72af:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    72b6:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
    72bd:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    72c4:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
    72cb:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    72d2:	48 8b 12             	mov    (%rdx),%rdx
    72d5:	48 83 c2 1c          	add    $0x1c,%rdx
    72d9:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    72e0:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    72e7:	48 89 95 80 fe ff ff 	mov    %rdx,-0x180(%rbp)
    72ee:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
    72f5:	48 8b 8d b8 fd ff ff 	mov    -0x248(%rbp),%rcx
    72fc:	48 89 8d 18 fe ff ff 	mov    %rcx,-0x1e8(%rbp)
    7303:	48 89 95 20 fe ff ff 	mov    %rdx,-0x1e0(%rbp)
    730a:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    7311:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
    7318:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    731f:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    7326:	88 9d a5 fd ff ff    	mov    %bl,-0x25b(%rbp)
    732c:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
    7333:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    733a:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
    7341:	48 89 95 40 fe ff ff 	mov    %rdx,-0x1c0(%rbp)
    7348:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    734f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    7356:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
    735d:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    7364:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
    736b:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
    7372:	48 8b 95 40 fe ff ff 	mov    -0x1c0(%rbp),%rdx
    7379:	48 89 95 60 fe ff ff 	mov    %rdx,-0x1a0(%rbp)
    7380:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
    7387:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    738e:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    7395:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    739c:	48 89 c3             	mov    %rax,%rbx
    739f:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    73a6:	48 89 c6             	mov    %rax,%rsi
    73a9:	bf 08 00 00 00       	mov    $0x8,%edi
    73ae:	e8 ee ff 01 00       	callq  273a1 <_ZnwmPv>
    73b3:	48 89 c2             	mov    %rax,%rdx
    73b6:	48 8b 03             	mov    (%rbx),%rax
    73b9:	48 89 02             	mov    %rax,(%rdx)
    73bc:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    73c3:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    73ca:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    73d1:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    73d8:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    73df:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    73e6:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    73ed:	48 83 c0 08          	add    $0x8,%rax
    73f1:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    73f5:	90                   	nop
    73f6:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    73fd:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    7401:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    7408:	00 00 
    740a:	0f 84 b9 01 00 00    	je     75c9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x549>
    7410:	e9 af 01 00 00       	jmpq   75c4 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x544>
    7415:	48 89 c7             	mov    %rax,%rdi
    7418:	e8 f6 98 01 00       	callq  20d13 <_Unwind_Resume>
    741d:	48 89 c3             	mov    %rax,%rbx
    7420:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    7427:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    742e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7435:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    743c:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    7443:	00 00 00 00 
    7447:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    744e:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    7455:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    745c:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    7463:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    746a:	48 8b 00             	mov    (%rax),%rax
    746d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    7474:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    747b:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    7482:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7489:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    7490:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    7497:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    749e:	48 89 10             	mov    %rdx,(%rax)
    74a1:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
    74a8:	00 
    74a9:	0f 84 0a 01 00 00    	je     75b9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x539>
    74af:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    74b6:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    74bd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    74c4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    74cb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    74d2:	48 83 c0 08          	add    $0x8,%rax
    74d6:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    74dd:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    74e4:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    74eb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    74f2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    74f6:	84 c0                	test   %al,%al
    74f8:	74 62                	je     755c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x4dc>
    74fa:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7501:	48 83 c0 1c          	add    $0x1c,%rax
    7505:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    750c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7513:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    751a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7521:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    7528:	48 8b 12             	mov    (%rdx),%rdx
    752b:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    7532:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7539:	44 88 a5 a6 fd ff ff 	mov    %r12b,-0x25a(%rbp)
    7540:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7547:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    754e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    7555:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    755c:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
    7563:	00 
    7564:	74 53                	je     75b9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x539>
    7566:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    756d:	48 8b 00             	mov    (%rax),%rax
    7570:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    7577:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    757e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7582:	48 c7 45 88 01 00 00 	movq   $0x1,-0x78(%rbp)
    7589:	00 
    758a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7591:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7595:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7599:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    759d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75a1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    75a5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    75a9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    75ad:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    75b1:	48 89 c7             	mov    %rax,%rdi
    75b4:	e8 35 fd 01 00       	callq  272ee <_ZdlPv>
    75b9:	48 89 d8             	mov    %rbx,%rax
    75bc:	48 89 c7             	mov    %rax,%rdi
    75bf:	e8 4f 97 01 00       	callq  20d13 <_Unwind_Resume>
    75c4:	e8 c3 3e 00 00       	callq  b48c <__stack_chk_fail>
    75c9:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
    75d0:	5b                   	pop    %rbx
    75d1:	41 5c                	pop    %r12
    75d3:	5d                   	pop    %rbp
    75d4:	c3                   	retq   
    75d5:	90                   	nop

00000000000075d6 <_ZNKSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE10__root_ptrEv>:
    75d6:	55                   	push   %rbp
    75d7:	48 89 e5             	mov    %rsp,%rbp
    75da:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    75de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    75e2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    75e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75ea:	48 83 c0 08          	add    $0x8,%rax
    75ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    75f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    75f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    75fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7602:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7606:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    760a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    760e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7612:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7616:	90                   	nop
    7617:	5d                   	pop    %rbp
    7618:	c3                   	retq   

0000000000007619 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>:
    7619:	55                   	push   %rbp
    761a:	48 89 e5             	mov    %rsp,%rbp
    761d:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    7624:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    762b:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    7632:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7639:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    7640:	0f 94 c2             	sete   %dl
    7643:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    764a:	88 50 18             	mov    %dl,0x18(%rax)
    764d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7654:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    765b:	74 2b                	je     7688 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x6f>
    765d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7664:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    766b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7672:	48 8b 40 10          	mov    0x10(%rax),%rax
    7676:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    767a:	83 f0 01             	xor    $0x1,%eax
    767d:	84 c0                	test   %al,%al
    767f:	74 07                	je     7688 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x6f>
    7681:	b8 01 00 00 00       	mov    $0x1,%eax
    7686:	eb 05                	jmp    768d <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x74>
    7688:	b8 00 00 00 00       	mov    $0x0,%eax
    768d:	84 c0                	test   %al,%al
    768f:	0f 84 e6 02 00 00    	je     797b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x362>
    7695:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    769c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    76a0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    76a4:	48 8b 40 10          	mov    0x10(%rax),%rax
    76a8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    76af:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    76b6:	48 8b 40 10          	mov    0x10(%rax),%rax
    76ba:	48 8b 00             	mov    (%rax),%rax
    76bd:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    76c4:	0f 94 c0             	sete   %al
    76c7:	84 c0                	test   %al,%al
    76c9:	0f 84 5b 01 00 00    	je     782a <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x211>
    76cf:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    76d6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    76da:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    76de:	48 8b 40 10          	mov    0x10(%rax),%rax
    76e2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    76e6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    76ea:	48 8b 40 10          	mov    0x10(%rax),%rax
    76ee:	48 8b 40 08          	mov    0x8(%rax),%rax
    76f2:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    76f9:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    7700:	00 
    7701:	74 7c                	je     777f <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x166>
    7703:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    770a:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    770e:	83 f0 01             	xor    $0x1,%eax
    7711:	84 c0                	test   %al,%al
    7713:	74 6a                	je     777f <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x166>
    7715:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    771c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7720:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7724:	48 8b 40 10          	mov    0x10(%rax),%rax
    7728:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    772f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7736:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    773a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7741:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    7745:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7749:	48 8b 40 10          	mov    0x10(%rax),%rax
    774d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7754:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    775b:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    7762:	0f 94 c2             	sete   %dl
    7765:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    776c:	88 50 18             	mov    %dl,0x18(%rax)
    776f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7776:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    777a:	e9 ce fe ff ff       	jmpq   764d <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x34>
    777f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7786:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    778a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    778e:	48 8b 40 10          	mov    0x10(%rax),%rax
    7792:	48 8b 00             	mov    (%rax),%rax
    7795:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    7799:	0f 94 c0             	sete   %al
    779c:	83 f0 01             	xor    $0x1,%eax
    779f:	84 c0                	test   %al,%al
    77a1:	74 29                	je     77cc <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x1b3>
    77a3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    77aa:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    77ae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    77b2:	48 8b 40 10          	mov    0x10(%rax),%rax
    77b6:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    77bd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    77c4:	48 89 c7             	mov    %rax,%rdi
    77c7:	e8 b2 01 00 00       	callq  797e <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    77cc:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    77d3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    77d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    77db:	48 8b 40 10          	mov    0x10(%rax),%rax
    77df:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    77e6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    77ed:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    77f1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    77f8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    77fc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7800:	48 8b 40 10          	mov    0x10(%rax),%rax
    7804:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    780b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7812:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    7816:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    781d:	48 89 c7             	mov    %rax,%rdi
    7820:	e8 2a 02 00 00       	callq  7a4f <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    7825:	e9 51 01 00 00       	jmpq   797b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x362>
    782a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7831:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7835:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7839:	48 8b 40 10          	mov    0x10(%rax),%rax
    783d:	48 8b 40 10          	mov    0x10(%rax),%rax
    7841:	48 8b 00             	mov    (%rax),%rax
    7844:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    784b:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    7852:	00 
    7853:	74 7c                	je     78d1 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x2b8>
    7855:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    785c:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    7860:	83 f0 01             	xor    $0x1,%eax
    7863:	84 c0                	test   %al,%al
    7865:	74 6a                	je     78d1 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x2b8>
    7867:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    786e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7876:	48 8b 40 10          	mov    0x10(%rax),%rax
    787a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7881:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7888:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    788c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7893:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7897:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    789b:	48 8b 40 10          	mov    0x10(%rax),%rax
    789f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    78a6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    78ad:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    78b4:	0f 94 c2             	sete   %dl
    78b7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    78be:	88 50 18             	mov    %dl,0x18(%rax)
    78c1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    78c8:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    78cc:	e9 a5 00 00 00       	jmpq   7976 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x35d>
    78d1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    78d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    78dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78e0:	48 8b 40 10          	mov    0x10(%rax),%rax
    78e4:	48 8b 00             	mov    (%rax),%rax
    78e7:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    78eb:	0f 94 c0             	sete   %al
    78ee:	84 c0                	test   %al,%al
    78f0:	74 29                	je     791b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x302>
    78f2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    78f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    78fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7901:	48 8b 40 10          	mov    0x10(%rax),%rax
    7905:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    790c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7913:	48 89 c7             	mov    %rax,%rdi
    7916:	e8 34 01 00 00       	callq  7a4f <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    791b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7922:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    792a:	48 8b 40 10          	mov    0x10(%rax),%rax
    792e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7935:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    793c:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    7940:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7947:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    794b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    794f:	48 8b 40 10          	mov    0x10(%rax),%rax
    7953:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    795a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7961:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    7965:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    796c:	48 89 c7             	mov    %rax,%rdi
    796f:	e8 0a 00 00 00       	callq  797e <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    7974:	eb 05                	jmp    797b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x362>
    7976:	e9 d2 fc ff ff       	jmpq   764d <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x34>
    797b:	90                   	nop
    797c:	c9                   	leaveq 
    797d:	c3                   	retq   

000000000000797e <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_>:
    797e:	55                   	push   %rbp
    797f:	48 89 e5             	mov    %rsp,%rbp
    7982:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    7986:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    798a:	48 8b 40 08          	mov    0x8(%rax),%rax
    798e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7992:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7996:	48 8b 10             	mov    (%rax),%rdx
    7999:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    799d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    79a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    79a5:	48 8b 40 08          	mov    0x8(%rax),%rax
    79a9:	48 85 c0             	test   %rax,%rax
    79ac:	74 20                	je     79ce <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x50>
    79ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    79b2:	48 8b 40 08          	mov    0x8(%rax),%rax
    79b6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    79ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    79be:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    79c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    79c6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    79ca:	48 89 50 10          	mov    %rdx,0x10(%rax)
    79ce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    79d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    79d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79da:	48 89 50 10          	mov    %rdx,0x10(%rax)
    79de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    79e2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    79e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79ea:	48 8b 40 10          	mov    0x10(%rax),%rax
    79ee:	48 8b 00             	mov    (%rax),%rax
    79f1:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    79f5:	0f 94 c0             	sete   %al
    79f8:	84 c0                	test   %al,%al
    79fa:	74 11                	je     7a0d <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x8f>
    79fc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a00:	48 8b 40 10          	mov    0x10(%rax),%rax
    7a04:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7a08:	48 89 10             	mov    %rdx,(%rax)
    7a0b:	eb 18                	jmp    7a25 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0xa7>
    7a0d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a11:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a19:	48 8b 40 10          	mov    0x10(%rax),%rax
    7a1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7a21:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7a25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a29:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7a2d:	48 89 10             	mov    %rdx,(%rax)
    7a30:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7a38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7a40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7a48:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7a4c:	90                   	nop
    7a4d:	5d                   	pop    %rbp
    7a4e:	c3                   	retq   

0000000000007a4f <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_>:
    7a4f:	55                   	push   %rbp
    7a50:	48 89 e5             	mov    %rsp,%rbp
    7a53:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    7a57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a5b:	48 8b 00             	mov    (%rax),%rax
    7a5e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7a62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a66:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7a6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a6e:	48 89 10             	mov    %rdx,(%rax)
    7a71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a75:	48 8b 00             	mov    (%rax),%rax
    7a78:	48 85 c0             	test   %rax,%rax
    7a7b:	74 1f                	je     7a9c <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x4d>
    7a7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a81:	48 8b 00             	mov    (%rax),%rax
    7a84:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7a88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7a8c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7a90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a94:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7a98:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7a9c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7aa0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7aa4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7aa8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7aac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7ab0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7ab4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ab8:	48 8b 40 10          	mov    0x10(%rax),%rax
    7abc:	48 8b 00             	mov    (%rax),%rax
    7abf:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    7ac3:	0f 94 c0             	sete   %al
    7ac6:	84 c0                	test   %al,%al
    7ac8:	74 11                	je     7adb <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x8c>
    7aca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7ace:	48 8b 40 10          	mov    0x10(%rax),%rax
    7ad2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7ad6:	48 89 10             	mov    %rdx,(%rax)
    7ad9:	eb 18                	jmp    7af3 <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0xa4>
    7adb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7adf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7ae3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ae7:	48 8b 40 10          	mov    0x10(%rax),%rax
    7aeb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7aef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7af3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7af7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7afb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7aff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7b03:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7b07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b0b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7b0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b13:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7b17:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7b1b:	90                   	nop
    7b1c:	5d                   	pop    %rbp
    7b1d:	c3                   	retq   

0000000000007b1e <ecall_increase_counter>:
    7b1e:	55                   	push   %rbp
    7b1f:	48 89 e5             	mov    %rsp,%rbp
    7b22:	48 83 ec 20          	sub    $0x20,%rsp
    7b26:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    7b2d:	00 
    7b2e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    7b35:	81 7d ec f3 01 00 00 	cmpl   $0x1f3,-0x14(%rbp)
    7b3c:	7f 53                	jg     7b91 <ecall_increase_counter+0x73>
    7b3e:	48 8d 3d db f4 03 00 	lea    0x3f4db(%rip),%rdi        # 47020 <_ZL12global_mutex>
    7b45:	e8 6a c6 00 00       	callq  141b4 <sgx_thread_mutex_lock>
    7b4a:	48 8b 05 4f 00 04 00 	mov    0x4004f(%rip),%rax        # 47ba0 <_ZL14global_counter>
    7b51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7b55:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    7b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b5e:	48 89 05 3b 00 04 00 	mov    %rax,0x4003b(%rip)        # 47ba0 <_ZL14global_counter>
    7b65:	48 8b 05 34 00 04 00 	mov    0x40034(%rip),%rax        # 47ba0 <_ZL14global_counter>
    7b6c:	48 3d d0 07 00 00    	cmp    $0x7d0,%rax
    7b72:	75 0b                	jne    7b7f <ecall_increase_counter+0x61>
    7b74:	48 8b 05 25 00 04 00 	mov    0x40025(%rip),%rax        # 47ba0 <_ZL14global_counter>
    7b7b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7b7f:	48 8d 3d 9a f4 03 00 	lea    0x3f49a(%rip),%rdi        # 47020 <_ZL12global_mutex>
    7b86:	e8 df c9 00 00       	callq  1456a <sgx_thread_mutex_unlock>
    7b8b:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    7b8f:	eb a4                	jmp    7b35 <ecall_increase_counter+0x17>
    7b91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b95:	c9                   	leaveq 
    7b96:	c3                   	retq   

0000000000007b97 <ecall_producer>:
    7b97:	55                   	push   %rbp
    7b98:	48 89 e5             	mov    %rsp,%rbp
    7b9b:	48 83 ec 10          	sub    $0x10,%rsp
    7b9f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    7ba6:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%rbp)
    7bad:	0f 8f f7 00 00 00    	jg     7caa <ecall_producer+0x113>
    7bb3:	48 8d 05 a6 f4 03 00 	lea    0x3f4a6(%rip),%rax        # 47060 <_ZL6buffer>
    7bba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bc2:	48 05 d8 00 00 00    	add    $0xd8,%rax
    7bc8:	48 89 c7             	mov    %rax,%rdi
    7bcb:	e8 e4 c5 00 00       	callq  141b4 <sgx_thread_mutex_lock>
    7bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bd4:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    7bda:	83 f8 31             	cmp    $0x31,%eax
    7bdd:	7e 22                	jle    7c01 <ecall_producer+0x6a>
    7bdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7be3:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    7bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bee:	48 05 18 01 00 00    	add    $0x118,%rax
    7bf4:	48 89 d6             	mov    %rdx,%rsi
    7bf7:	48 89 c7             	mov    %rax,%rdi
    7bfa:	e8 93 c2 00 00       	callq  13e92 <sgx_thread_cond_wait>
    7bff:	eb cf                	jmp    7bd0 <ecall_producer+0x39>
    7c01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c05:	8b 90 cc 00 00 00    	mov    0xcc(%rax),%edx
    7c0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c0f:	8b 88 cc 00 00 00    	mov    0xcc(%rax),%ecx
    7c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c19:	48 63 d2             	movslq %edx,%rdx
    7c1c:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    7c1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c23:	8b 80 cc 00 00 00    	mov    0xcc(%rax),%eax
    7c29:	8d 50 01             	lea    0x1(%rax),%edx
    7c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c30:	89 90 cc 00 00 00    	mov    %edx,0xcc(%rax)
    7c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c3a:	8b 88 cc 00 00 00    	mov    0xcc(%rax),%ecx
    7c40:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
    7c45:	89 c8                	mov    %ecx,%eax
    7c47:	f7 ea                	imul   %edx
    7c49:	c1 fa 04             	sar    $0x4,%edx
    7c4c:	89 c8                	mov    %ecx,%eax
    7c4e:	c1 f8 1f             	sar    $0x1f,%eax
    7c51:	29 c2                	sub    %eax,%edx
    7c53:	89 d0                	mov    %edx,%eax
    7c55:	6b c0 32             	imul   $0x32,%eax,%eax
    7c58:	29 c1                	sub    %eax,%ecx
    7c5a:	89 c8                	mov    %ecx,%eax
    7c5c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c60:	89 82 cc 00 00 00    	mov    %eax,0xcc(%rdx)
    7c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c6a:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    7c70:	8d 50 01             	lea    0x1(%rax),%edx
    7c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c77:	89 90 c8 00 00 00    	mov    %edx,0xc8(%rax)
    7c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c81:	48 05 00 01 00 00    	add    $0x100,%rax
    7c87:	48 89 c7             	mov    %rax,%rdi
    7c8a:	e8 12 c4 00 00       	callq  140a1 <sgx_thread_cond_signal>
    7c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c93:	48 05 d8 00 00 00    	add    $0xd8,%rax
    7c99:	48 89 c7             	mov    %rax,%rdi
    7c9c:	e8 c9 c8 00 00       	callq  1456a <sgx_thread_mutex_unlock>
    7ca1:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    7ca5:	e9 fc fe ff ff       	jmpq   7ba6 <ecall_producer+0xf>
    7caa:	90                   	nop
    7cab:	c9                   	leaveq 
    7cac:	c3                   	retq   

0000000000007cad <ecall_consumer>:
    7cad:	55                   	push   %rbp
    7cae:	48 89 e5             	mov    %rsp,%rbp
    7cb1:	48 83 ec 10          	sub    $0x10,%rsp
    7cb5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    7cbc:	81 7d f4 f3 01 00 00 	cmpl   $0x1f3,-0xc(%rbp)
    7cc3:	0f 8f e5 00 00 00    	jg     7dae <ecall_consumer+0x101>
    7cc9:	48 8d 05 90 f3 03 00 	lea    0x3f390(%rip),%rax        # 47060 <_ZL6buffer>
    7cd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cd8:	48 05 d8 00 00 00    	add    $0xd8,%rax
    7cde:	48 89 c7             	mov    %rax,%rdi
    7ce1:	e8 ce c4 00 00       	callq  141b4 <sgx_thread_mutex_lock>
    7ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cea:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    7cf0:	85 c0                	test   %eax,%eax
    7cf2:	7f 22                	jg     7d16 <ecall_consumer+0x69>
    7cf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cf8:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    7cff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d03:	48 05 00 01 00 00    	add    $0x100,%rax
    7d09:	48 89 d6             	mov    %rdx,%rsi
    7d0c:	48 89 c7             	mov    %rax,%rdi
    7d0f:	e8 7e c1 00 00       	callq  13e92 <sgx_thread_cond_wait>
    7d14:	eb d0                	jmp    7ce6 <ecall_consumer+0x39>
    7d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d1a:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax
    7d20:	8d 48 01             	lea    0x1(%rax),%ecx
    7d23:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d27:	89 8a d0 00 00 00    	mov    %ecx,0xd0(%rdx)
    7d2d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d31:	48 98                	cltq   
    7d33:	c7 04 82 00 00 00 00 	movl   $0x0,(%rdx,%rax,4)
    7d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d3e:	8b 88 d0 00 00 00    	mov    0xd0(%rax),%ecx
    7d44:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
    7d49:	89 c8                	mov    %ecx,%eax
    7d4b:	f7 ea                	imul   %edx
    7d4d:	c1 fa 04             	sar    $0x4,%edx
    7d50:	89 c8                	mov    %ecx,%eax
    7d52:	c1 f8 1f             	sar    $0x1f,%eax
    7d55:	29 c2                	sub    %eax,%edx
    7d57:	89 d0                	mov    %edx,%eax
    7d59:	6b c0 32             	imul   $0x32,%eax,%eax
    7d5c:	29 c1                	sub    %eax,%ecx
    7d5e:	89 c8                	mov    %ecx,%eax
    7d60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d64:	89 82 d0 00 00 00    	mov    %eax,0xd0(%rdx)
    7d6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d6e:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    7d74:	8d 50 ff             	lea    -0x1(%rax),%edx
    7d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7b:	89 90 c8 00 00 00    	mov    %edx,0xc8(%rax)
    7d81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d85:	48 05 18 01 00 00    	add    $0x118,%rax
    7d8b:	48 89 c7             	mov    %rax,%rdi
    7d8e:	e8 0e c3 00 00       	callq  140a1 <sgx_thread_cond_signal>
    7d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d97:	48 05 d8 00 00 00    	add    $0xd8,%rax
    7d9d:	48 89 c7             	mov    %rax,%rdi
    7da0:	e8 c5 c7 00 00       	callq  1456a <sgx_thread_mutex_unlock>
    7da5:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    7da9:	e9 0e ff ff ff       	jmpq   7cbc <ecall_consumer+0xf>
    7dae:	90                   	nop
    7daf:	c9                   	leaveq 
    7db0:	c3                   	retq   

0000000000007db1 <sgx_is_within_enclave>:
    7db1:	55                   	push   %rbp
    7db2:	48 89 e5             	mov    %rsp,%rbp
    7db5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7db9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7dbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dc1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7dc5:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    7dcc:	00 
    7dcd:	48 8d 05 2c 82 ff ff 	lea    -0x7dd4(%rip),%rax        # 0 <enclave.so>
    7dd4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7dd8:	48 8b 15 e1 f4 03 00 	mov    0x3f4e1(%rip),%rdx        # 472c0 <g_global_data>
    7ddf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7de3:	48 01 d0             	add    %rdx,%rax
    7de6:	48 83 e8 01          	sub    $0x1,%rax
    7dea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7dee:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    7df3:	74 15                	je     7e0a <sgx_is_within_enclave+0x59>
    7df5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7df9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7dfd:	48 01 d0             	add    %rdx,%rax
    7e00:	48 83 e8 01          	sub    $0x1,%rax
    7e04:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7e08:	eb 08                	jmp    7e12 <sgx_is_within_enclave+0x61>
    7e0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e0e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7e12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e16:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    7e1a:	77 1b                	ja     7e37 <sgx_is_within_enclave+0x86>
    7e1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e20:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7e24:	72 11                	jb     7e37 <sgx_is_within_enclave+0x86>
    7e26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e2a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    7e2e:	77 07                	ja     7e37 <sgx_is_within_enclave+0x86>
    7e30:	b8 01 00 00 00       	mov    $0x1,%eax
    7e35:	eb 05                	jmp    7e3c <sgx_is_within_enclave+0x8b>
    7e37:	b8 00 00 00 00       	mov    $0x0,%eax
    7e3c:	5d                   	pop    %rbp
    7e3d:	c3                   	retq   

0000000000007e3e <sgx_is_outside_enclave>:
    7e3e:	55                   	push   %rbp
    7e3f:	48 89 e5             	mov    %rsp,%rbp
    7e42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7e46:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7e4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e4e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7e52:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    7e59:	00 
    7e5a:	48 8d 05 9f 81 ff ff 	lea    -0x7e61(%rip),%rax        # 0 <enclave.so>
    7e61:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7e65:	48 8b 15 54 f4 03 00 	mov    0x3f454(%rip),%rdx        # 472c0 <g_global_data>
    7e6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7e70:	48 01 d0             	add    %rdx,%rax
    7e73:	48 83 e8 01          	sub    $0x1,%rax
    7e77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7e7b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    7e80:	74 15                	je     7e97 <sgx_is_outside_enclave+0x59>
    7e82:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7e8a:	48 01 d0             	add    %rdx,%rax
    7e8d:	48 83 e8 01          	sub    $0x1,%rax
    7e91:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7e95:	eb 08                	jmp    7e9f <sgx_is_outside_enclave+0x61>
    7e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e9b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7e9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ea3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    7ea7:	77 1b                	ja     7ec4 <sgx_is_outside_enclave+0x86>
    7ea9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ead:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7eb1:	72 0a                	jb     7ebd <sgx_is_outside_enclave+0x7f>
    7eb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7eb7:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    7ebb:	76 07                	jbe    7ec4 <sgx_is_outside_enclave+0x86>
    7ebd:	b8 01 00 00 00       	mov    $0x1,%eax
    7ec2:	eb 05                	jmp    7ec9 <sgx_is_outside_enclave+0x8b>
    7ec4:	b8 00 00 00 00       	mov    $0x0,%eax
    7ec9:	5d                   	pop    %rbp
    7eca:	c3                   	retq   

0000000000007ecb <sgx_ocalloc>:
    7ecb:	55                   	push   %rbp
    7ecc:	48 89 e5             	mov    %rsp,%rbp
    7ecf:	48 83 ec 40          	sub    $0x40,%rsp
    7ed3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7ed7:	e8 fa 32 03 00       	callq  3b1d6 <get_thread_data>
    7edc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7ee0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ee4:	48 8b 40 20          	mov    0x20(%rax),%rax
    7ee8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7eec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ef0:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    7ef7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7efb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7eff:	be 08 00 00 00       	mov    $0x8,%esi
    7f04:	48 89 c7             	mov    %rax,%rdi
    7f07:	e8 32 ff ff ff       	callq  7e3e <sgx_is_outside_enclave>
    7f0c:	85 c0                	test   %eax,%eax
    7f0e:	0f 94 c0             	sete   %al
    7f11:	84 c0                	test   %al,%al
    7f13:	74 05                	je     7f1a <sgx_ocalloc+0x4f>
    7f15:	e8 bf 36 03 00       	callq  3b5d9 <abort>
    7f1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f1e:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    7f22:	73 05                	jae    7f29 <sgx_ocalloc+0x5e>
    7f24:	e8 b0 36 03 00       	callq  3b5d9 <abort>
    7f29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f2d:	48 29 45 e8          	sub    %rax,-0x18(%rbp)
    7f31:	48 83 65 e8 f0       	andq   $0xfffffffffffffff0,-0x18(%rbp)
    7f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f3a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7f3e:	48 89 d6             	mov    %rdx,%rsi
    7f41:	48 89 c7             	mov    %rax,%rdi
    7f44:	e8 f5 fe ff ff       	callq  7e3e <sgx_is_outside_enclave>
    7f49:	85 c0                	test   %eax,%eax
    7f4b:	0f 94 c0             	sete   %al
    7f4e:	84 c0                	test   %al,%al
    7f50:	74 05                	je     7f57 <sgx_ocalloc+0x8c>
    7f52:	e8 82 36 03 00       	callq  3b5d9 <abort>
    7f57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f5b:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    7f62:	48 83 e8 01          	sub    $0x1,%rax
    7f66:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7f6c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f74:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7f7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7f7e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7f83:	75 05                	jne    7f8a <sgx_ocalloc+0xbf>
    7f85:	e8 4f 36 03 00       	callq  3b5d9 <abort>
    7f8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f8e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7f92:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f96:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    7f9a:	0f 96 c0             	setbe  %al
    7f9d:	84 c0                	test   %al,%al
    7f9f:	74 26                	je     7fc7 <sgx_ocalloc+0xfc>
    7fa1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fa9:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    7fb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7fb4:	c6 00 00             	movb   $0x0,(%rax)
    7fb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7fbb:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    7fc1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7fc5:	eb cb                	jmp    7f92 <sgx_ocalloc+0xc7>
    7fc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fcb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7fcf:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    7fd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fda:	c9                   	leaveq 
    7fdb:	c3                   	retq   

0000000000007fdc <sgx_ocfree>:
    7fdc:	55                   	push   %rbp
    7fdd:	48 89 e5             	mov    %rsp,%rbp
    7fe0:	48 83 ec 20          	sub    $0x20,%rsp
    7fe4:	e8 ed 31 03 00       	callq  3b1d6 <get_thread_data>
    7fe9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7fed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ff1:	48 8b 40 20          	mov    0x20(%rax),%rax
    7ff5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7ff9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ffd:	48 8b 40 08          	mov    0x8(%rax),%rax
    8001:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8005:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8009:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    800d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8015:	be 08 00 00 00       	mov    $0x8,%esi
    801a:	48 89 c7             	mov    %rax,%rdi
    801d:	e8 1c fe ff ff       	callq  7e3e <sgx_is_outside_enclave>
    8022:	85 c0                	test   %eax,%eax
    8024:	0f 94 c0             	sete   %al
    8027:	84 c0                	test   %al,%al
    8029:	74 05                	je     8030 <sgx_ocfree+0x54>
    802b:	e8 a9 35 03 00       	callq  3b5d9 <abort>
    8030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8034:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8038:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    803f:	90                   	nop
    8040:	c9                   	leaveq 
    8041:	c3                   	retq   

0000000000008042 <_ZL12get_rand_lcgv>:
    8042:	55                   	push   %rbp
    8043:	48 89 e5             	mov    %rsp,%rbp
    8046:	48 83 ec 10          	sub    $0x10,%rsp
    804a:	48 8d 3d 57 fb 03 00 	lea    0x3fb57(%rip),%rdi        # 47ba8 <_ZL11g_seed_lock>
    8051:	e8 9b bb 00 00       	callq  13bf1 <sgx_spin_lock>
    8056:	48 8d 05 9b fb 03 00 	lea    0x3fb9b(%rip),%rax        # 47bf8 <g_global_data_sim+0x18>
    805d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8065:	48 8b 10             	mov    (%rax),%rdx
    8068:	48 b8 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rax
    806f:	f4 51 58 
    8072:	48 0f af c2          	imul   %rdx,%rax
    8076:	48 8d 50 01          	lea    0x1(%rax),%rdx
    807a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    807e:	48 89 10             	mov    %rdx,(%rax)
    8081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8085:	48 8b 00             	mov    (%rax),%rax
    8088:	48 c1 e8 20          	shr    $0x20,%rax
    808c:	89 45 f4             	mov    %eax,-0xc(%rbp)
    808f:	48 8d 3d 12 fb 03 00 	lea    0x3fb12(%rip),%rdi        # 47ba8 <_ZL11g_seed_lock>
    8096:	e8 bd bb 00 00       	callq  13c58 <sgx_spin_unlock>
    809b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    809e:	c9                   	leaveq 
    809f:	c3                   	retq   

00000000000080a0 <_ZL15__do_get_rand32Pj>:
    80a0:	55                   	push   %rbp
    80a1:	48 89 e5             	mov    %rsp,%rbp
    80a4:	48 83 ec 10          	sub    $0x10,%rsp
    80a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80ac:	48 8b 05 bd eb 03 00 	mov    0x3ebbd(%rip),%rax        # 46c70 <g_cpu_feature_indicator>
    80b3:	25 00 00 02 00       	and    $0x20000,%eax
    80b8:	48 85 c0             	test   %rax,%rax
    80bb:	74 1c                	je     80d9 <_ZL15__do_get_rand32Pj+0x39>
    80bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80c1:	48 89 c7             	mov    %rax,%rdi
    80c4:	e8 f1 34 03 00       	callq  3b5ba <do_rdrand>
    80c9:	85 c0                	test   %eax,%eax
    80cb:	0f 94 c0             	sete   %al
    80ce:	84 c0                	test   %al,%al
    80d0:	74 14                	je     80e6 <_ZL15__do_get_rand32Pj+0x46>
    80d2:	b8 01 00 00 00       	mov    $0x1,%eax
    80d7:	eb 12                	jmp    80eb <_ZL15__do_get_rand32Pj+0x4b>
    80d9:	e8 64 ff ff ff       	callq  8042 <_ZL12get_rand_lcgv>
    80de:	89 c2                	mov    %eax,%edx
    80e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80e4:	89 10                	mov    %edx,(%rax)
    80e6:	b8 00 00 00 00       	mov    $0x0,%eax
    80eb:	c9                   	leaveq 
    80ec:	c3                   	retq   

00000000000080ed <sgx_read_rand>:
    80ed:	55                   	push   %rbp
    80ee:	48 89 e5             	mov    %rsp,%rbp
    80f1:	48 83 ec 30          	sub    $0x30,%rsp
    80f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    80f9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    80fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8104:	00 00 
    8106:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    810a:	31 c0                	xor    %eax,%eax
    810c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    8111:	74 07                	je     811a <sgx_read_rand+0x2d>
    8113:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    8118:	75 0a                	jne    8124 <sgx_read_rand+0x37>
    811a:	b8 02 00 00 00       	mov    $0x2,%eax
    811f:	e9 cc 00 00 00       	jmpq   81f0 <sgx_read_rand+0x103>
    8124:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8128:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    812c:	48 89 d6             	mov    %rdx,%rsi
    812f:	48 89 c7             	mov    %rax,%rdi
    8132:	e8 7a fc ff ff       	callq  7db1 <sgx_is_within_enclave>
    8137:	85 c0                	test   %eax,%eax
    8139:	75 1e                	jne    8159 <sgx_read_rand+0x6c>
    813b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    813f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8143:	48 89 d6             	mov    %rdx,%rsi
    8146:	48 89 c7             	mov    %rax,%rdi
    8149:	e8 f0 fc ff ff       	callq  7e3e <sgx_is_outside_enclave>
    814e:	85 c0                	test   %eax,%eax
    8150:	75 07                	jne    8159 <sgx_read_rand+0x6c>
    8152:	b8 01 00 00 00       	mov    $0x1,%eax
    8157:	eb 05                	jmp    815e <sgx_read_rand+0x71>
    8159:	b8 00 00 00 00       	mov    $0x0,%eax
    815e:	84 c0                	test   %al,%al
    8160:	74 0a                	je     816c <sgx_read_rand+0x7f>
    8162:	b8 02 00 00 00       	mov    $0x2,%eax
    8167:	e9 84 00 00 00       	jmpq   81f0 <sgx_read_rand+0x103>
    816c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    8173:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    8178:	74 56                	je     81d0 <sgx_read_rand+0xe3>
    817a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    817e:	48 89 c7             	mov    %rax,%rdi
    8181:	e8 1a ff ff ff       	callq  80a0 <_ZL15__do_get_rand32Pj>
    8186:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8189:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    818d:	74 05                	je     8194 <sgx_read_rand+0xa7>
    818f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8192:	eb 5c                	jmp    81f0 <sgx_read_rand+0x103>
    8194:	b8 04 00 00 00       	mov    $0x4,%eax
    8199:	48 83 7d d0 04       	cmpq   $0x4,-0x30(%rbp)
    819e:	48 0f 46 45 d0       	cmovbe -0x30(%rbp),%rax
    81a3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    81a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    81ab:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    81af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81b3:	48 89 ce             	mov    %rcx,%rsi
    81b6:	48 89 c7             	mov    %rax,%rdi
    81b9:	e8 09 b5 00 00       	callq  136c7 <memcpy>
    81be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    81c2:	48 01 45 d8          	add    %rax,-0x28(%rbp)
    81c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    81ca:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
    81ce:	eb a3                	jmp    8173 <sgx_read_rand+0x86>
    81d0:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    81d4:	b9 04 00 00 00       	mov    $0x4,%ecx
    81d9:	ba 00 00 00 00       	mov    $0x0,%edx
    81de:	be 04 00 00 00       	mov    $0x4,%esi
    81e3:	48 89 c7             	mov    %rax,%rdi
    81e6:	e8 74 b5 00 00       	callq  1375f <memset_s>
    81eb:	b8 00 00 00 00       	mov    $0x0,%eax
    81f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    81f4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    81fb:	00 00 
    81fd:	74 05                	je     8204 <sgx_read_rand+0x117>
    81ff:	e8 88 32 00 00       	callq  b48c <__stack_chk_fail>
    8204:	c9                   	leaveq 
    8205:	c3                   	retq   

0000000000008206 <check_static_stack_canary>:
    8206:	55                   	push   %rbp
    8207:	48 89 e5             	mov    %rsp,%rbp
    820a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    820e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8212:	48 2d a8 02 01 00    	sub    $0x102a8,%rax
    8218:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    821c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8220:	48 8b 10             	mov    (%rax),%rdx
    8223:	48 8b 05 5e ea 03 00 	mov    0x3ea5e(%rip),%rax        # 46c88 <__intel_security_cookie>
    822a:	48 39 c2             	cmp    %rax,%rdx
    822d:	74 07                	je     8236 <check_static_stack_canary+0x30>
    822f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8234:	eb 05                	jmp    823b <check_static_stack_canary+0x35>
    8236:	b8 00 00 00 00       	mov    $0x0,%eax
    823b:	5d                   	pop    %rbp
    823c:	c3                   	retq   

000000000000823d <memcpy_s>:
    823d:	55                   	push   %rbp
    823e:	48 89 e5             	mov    %rsp,%rbp
    8241:	48 83 ec 20          	sub    $0x20,%rsp
    8245:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8249:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    824d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    8251:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    8255:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8259:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    825d:	73 07                	jae    8266 <memcpy_s+0x29>
    825f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8264:	eb 1c                	jmp    8282 <memcpy_s+0x45>
    8266:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    826a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    826e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8272:	48 89 ce             	mov    %rcx,%rsi
    8275:	48 89 c7             	mov    %rax,%rdi
    8278:	e8 4a b4 00 00       	callq  136c7 <memcpy>
    827d:	b8 00 00 00 00       	mov    $0x0,%eax
    8282:	c9                   	leaveq 
    8283:	c3                   	retq   

0000000000008284 <_pthread_thread_run>:
    8284:	55                   	push   %rbp
    8285:	48 89 e5             	mov    %rsp,%rbp
    8288:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    828c:	b8 00 00 00 00       	mov    $0x0,%eax
    8291:	5d                   	pop    %rbp
    8292:	c3                   	retq   

0000000000008293 <_Z16_pthread_enabledv>:
    8293:	55                   	push   %rbp
    8294:	48 89 e5             	mov    %rsp,%rbp
    8297:	b8 00 00 00 00       	mov    $0x0,%eax
    829c:	5d                   	pop    %rbp
    829d:	c3                   	retq   

000000000000829e <_Z24_pthread_tls_store_state9_status_t>:
    829e:	55                   	push   %rbp
    829f:	48 89 e5             	mov    %rsp,%rbp
    82a2:	89 7d fc             	mov    %edi,-0x4(%rbp)
    82a5:	90                   	nop
    82a6:	5d                   	pop    %rbp
    82a7:	c3                   	retq   

00000000000082a8 <_Z22_pthread_tls_get_statev>:
    82a8:	55                   	push   %rbp
    82a9:	48 89 e5             	mov    %rsp,%rbp
    82ac:	b8 00 00 00 00       	mov    $0x0,%eax
    82b1:	5d                   	pop    %rbp
    82b2:	c3                   	retq   

00000000000082b3 <_Z26_pthread_tls_store_contextPv>:
    82b3:	55                   	push   %rbp
    82b4:	48 89 e5             	mov    %rsp,%rbp
    82b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82bb:	90                   	nop
    82bc:	5d                   	pop    %rbp
    82bd:	c3                   	retq   

00000000000082be <_Z20_pthread_wakeup_joinPv>:
    82be:	55                   	push   %rbp
    82bf:	48 89 e5             	mov    %rsp,%rbp
    82c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82c6:	90                   	nop
    82c7:	5d                   	pop    %rbp
    82c8:	c3                   	retq   

00000000000082c9 <_Z24_pthread_tls_destructorsv>:
    82c9:	55                   	push   %rbp
    82ca:	48 89 e5             	mov    %rsp,%rbp
    82cd:	90                   	nop
    82ce:	5d                   	pop    %rbp
    82cf:	c3                   	retq   

00000000000082d0 <_ZL16is_ecall_allowedj>:
    82d0:	55                   	push   %rbp
    82d1:	48 89 e5             	mov    %rsp,%rbp
    82d4:	48 83 ec 30          	sub    $0x30,%rsp
    82d8:	89 7d dc             	mov    %edi,-0x24(%rbp)
    82db:	8b 55 dc             	mov    -0x24(%rbp),%edx
    82de:	48 8b 05 bb e3 03 00 	mov    0x3e3bb(%rip),%rax        # 466a0 <g_ecall_table>
    82e5:	48 39 c2             	cmp    %rax,%rdx
    82e8:	72 0a                	jb     82f4 <_ZL16is_ecall_allowedj+0x24>
    82ea:	b8 01 10 00 00       	mov    $0x1001,%eax
    82ef:	e9 ba 00 00 00       	jmpq   83ae <_ZL16is_ecall_allowedj+0xde>
    82f4:	e8 dd 2e 03 00       	callq  3b1d6 <get_thread_data>
    82f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    82fd:	0f ae e8             	lfence 
    8300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8304:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8308:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    830c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8310:	48 39 c2             	cmp    %rax,%rdx
    8313:	75 27                	jne    833c <_ZL16is_ecall_allowedj+0x6c>
    8315:	8b 45 dc             	mov    -0x24(%rbp),%eax
    8318:	48 c1 e0 04          	shl    $0x4,%rax
    831c:	48 89 c2             	mov    %rax,%rdx
    831f:	48 8d 05 8a e3 03 00 	lea    0x3e38a(%rip),%rax        # 466b0 <g_ecall_table+0x10>
    8326:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
    832a:	84 c0                	test   %al,%al
    832c:	74 07                	je     8335 <_ZL16is_ecall_allowedj+0x65>
    832e:	b8 07 10 00 00       	mov    $0x1007,%eax
    8333:	eb 79                	jmp    83ae <_ZL16is_ecall_allowedj+0xde>
    8335:	b8 00 00 00 00       	mov    $0x0,%eax
    833a:	eb 72                	jmp    83ae <_ZL16is_ecall_allowedj+0xde>
    833c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8340:	48 8b 40 08          	mov    0x8(%rax),%rax
    8344:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8348:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    834c:	48 8b 40 20          	mov    0x20(%rax),%rax
    8350:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
    8356:	74 05                	je     835d <_ZL16is_ecall_allowedj+0x8d>
    8358:	e8 7c 32 03 00       	callq  3b5d9 <abort>
    835d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8361:	48 8b 40 28          	mov    0x28(%rax),%rax
    8365:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8369:	48 8b 05 90 3c 03 00 	mov    0x33c90(%rip),%rax        # 3c000 <g_dyn_entry_table>
    8370:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    8374:	72 07                	jb     837d <_ZL16is_ecall_allowedj+0xad>
    8376:	b8 01 10 00 00       	mov    $0x1001,%eax
    837b:	eb 31                	jmp    83ae <_ZL16is_ecall_allowedj+0xde>
    837d:	48 8b 05 1c e3 03 00 	mov    0x3e31c(%rip),%rax        # 466a0 <g_ecall_table>
    8384:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
    8389:	48 89 c2             	mov    %rax,%rdx
    838c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    838f:	48 01 c2             	add    %rax,%rdx
    8392:	48 8d 05 6f 3c 03 00 	lea    0x33c6f(%rip),%rax        # 3c008 <g_dyn_entry_table+0x8>
    8399:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
    839d:	84 c0                	test   %al,%al
    839f:	74 07                	je     83a8 <_ZL16is_ecall_allowedj+0xd8>
    83a1:	b8 00 00 00 00       	mov    $0x0,%eax
    83a6:	eb 05                	jmp    83ad <_ZL16is_ecall_allowedj+0xdd>
    83a8:	b8 07 10 00 00       	mov    $0x1007,%eax
    83ad:	90                   	nop
    83ae:	c9                   	leaveq 
    83af:	c3                   	retq   

00000000000083b0 <_ZL13get_func_addrjPPv>:
    83b0:	55                   	push   %rbp
    83b1:	48 89 e5             	mov    %rsp,%rbp
    83b4:	48 83 ec 20          	sub    $0x20,%rsp
    83b8:	89 7d ec             	mov    %edi,-0x14(%rbp)
    83bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    83bf:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
    83c3:	75 15                	jne    83da <_ZL13get_func_addrjPPv+0x2a>
    83c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83c9:	48 8d 15 b4 fe ff ff 	lea    -0x14c(%rip),%rdx        # 8284 <_pthread_thread_run>
    83d0:	48 89 10             	mov    %rdx,(%rax)
    83d3:	b8 00 00 00 00       	mov    $0x0,%eax
    83d8:	eb 5d                	jmp    8437 <_ZL13get_func_addrjPPv+0x87>
    83da:	8b 45 ec             	mov    -0x14(%rbp),%eax
    83dd:	89 c7                	mov    %eax,%edi
    83df:	e8 ec fe ff ff       	callq  82d0 <_ZL16is_ecall_allowedj>
    83e4:	89 45 fc             	mov    %eax,-0x4(%rbp)
    83e7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    83eb:	74 05                	je     83f2 <_ZL13get_func_addrjPPv+0x42>
    83ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
    83f0:	eb 45                	jmp    8437 <_ZL13get_func_addrjPPv+0x87>
    83f2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    83f5:	48 c1 e0 04          	shl    $0x4,%rax
    83f9:	48 89 c2             	mov    %rax,%rdx
    83fc:	48 8d 05 a5 e2 03 00 	lea    0x3e2a5(%rip),%rax        # 466a8 <g_ecall_table+0x8>
    8403:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
    8407:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    840b:	48 89 10             	mov    %rdx,(%rax)
    840e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8412:	48 8b 00             	mov    (%rax),%rax
    8415:	be 00 00 00 00       	mov    $0x0,%esi
    841a:	48 89 c7             	mov    %rax,%rdi
    841d:	e8 8f f9 ff ff       	callq  7db1 <sgx_is_within_enclave>
    8422:	85 c0                	test   %eax,%eax
    8424:	0f 94 c0             	sete   %al
    8427:	84 c0                	test   %al,%al
    8429:	74 07                	je     8432 <_ZL13get_func_addrjPPv+0x82>
    842b:	b8 01 00 00 00       	mov    $0x1,%eax
    8430:	eb 05                	jmp    8437 <_ZL13get_func_addrjPPv+0x87>
    8432:	b8 00 00 00 00       	mov    $0x0,%eax
    8437:	c9                   	leaveq 
    8438:	c3                   	retq   

0000000000008439 <_Z11do_save_tcsPv>:
    8439:	55                   	push   %rbp
    843a:	48 89 e5             	mov    %rsp,%rbp
    843d:	48 83 ec 30          	sub    $0x30,%rsp
    8441:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8445:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    844c:	00 00 
    844e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8452:	31 c0                	xor    %eax,%eax
    8454:	e8 60 0e 00 00       	callq  92b9 <is_utility_thread>
    8459:	83 f0 01             	xor    $0x1,%eax
    845c:	84 c0                	test   %al,%al
    845e:	74 0a                	je     846a <_Z11do_save_tcsPv+0x31>
    8460:	b8 01 00 00 00       	mov    $0x1,%eax
    8465:	e9 b0 00 00 00       	jmpq   851a <_Z11do_save_tcsPv+0xe1>
    846a:	48 8b 05 47 f7 03 00 	mov    0x3f747(%rip),%rax        # 47bb8 <_ZL12g_tcs_cookie>
    8471:	48 85 c0             	test   %rax,%rax
    8474:	0f 94 c0             	sete   %al
    8477:	0f b6 c0             	movzbl %al,%eax
    847a:	48 85 c0             	test   %rax,%rax
    847d:	74 4b                	je     84ca <_Z11do_save_tcsPv+0x91>
    847f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8486:	00 
    8487:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    848b:	be 08 00 00 00       	mov    $0x8,%esi
    8490:	48 89 c7             	mov    %rax,%rdi
    8493:	e8 55 fc ff ff       	callq  80ed <sgx_read_rand>
    8498:	85 c0                	test   %eax,%eax
    849a:	0f 95 c0             	setne  %al
    849d:	84 c0                	test   %al,%al
    849f:	74 07                	je     84a8 <_Z11do_save_tcsPv+0x6f>
    84a1:	b8 01 00 00 00       	mov    $0x1,%eax
    84a6:	eb 72                	jmp    851a <_Z11do_save_tcsPv+0xe1>
    84a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84ac:	48 85 c0             	test   %rax,%rax
    84af:	75 02                	jne    84b3 <_Z11do_save_tcsPv+0x7a>
    84b1:	eb d4                	jmp    8487 <_Z11do_save_tcsPv+0x4e>
    84b3:	48 8b 05 fe f6 03 00 	mov    0x3f6fe(%rip),%rax        # 47bb8 <_ZL12g_tcs_cookie>
    84ba:	48 85 c0             	test   %rax,%rax
    84bd:	75 0b                	jne    84ca <_Z11do_save_tcsPv+0x91>
    84bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c3:	48 89 05 ee f6 03 00 	mov    %rax,0x3f6ee(%rip)        # 47bb8 <_ZL12g_tcs_cookie>
    84ca:	bf 10 00 00 00       	mov    $0x10,%edi
    84cf:	e8 74 7f 00 00       	callq  10448 <dlmalloc>
    84d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    84d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    84dd:	75 07                	jne    84e6 <_Z11do_save_tcsPv+0xad>
    84df:	b8 01 00 00 00       	mov    $0x1,%eax
    84e4:	eb 34                	jmp    851a <_Z11do_save_tcsPv+0xe1>
    84e6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    84ea:	48 8b 05 c7 f6 03 00 	mov    0x3f6c7(%rip),%rax        # 47bb8 <_ZL12g_tcs_cookie>
    84f1:	48 31 c2             	xor    %rax,%rdx
    84f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84f8:	48 89 10             	mov    %rdx,(%rax)
    84fb:	48 8b 15 ae f6 03 00 	mov    0x3f6ae(%rip),%rdx        # 47bb0 <_ZL10g_tcs_node>
    8502:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8506:	48 89 50 08          	mov    %rdx,0x8(%rax)
    850a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    850e:	48 89 05 9b f6 03 00 	mov    %rax,0x3f69b(%rip)        # 47bb0 <_ZL10g_tcs_node>
    8515:	b8 00 00 00 00       	mov    $0x0,%eax
    851a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    851e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8525:	00 00 
    8527:	74 05                	je     852e <_Z11do_save_tcsPv+0xf5>
    8529:	e8 5e 2f 00 00       	callq  b48c <__stack_chk_fail>
    852e:	c9                   	leaveq 
    852f:	c3                   	retq   

0000000000008530 <_ZL10do_del_tcsPv>:
    8530:	55                   	push   %rbp
    8531:	48 89 e5             	mov    %rsp,%rbp
    8534:	48 83 ec 30          	sub    $0x30,%rsp
    8538:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    853c:	e8 78 0d 00 00       	callq  92b9 <is_utility_thread>
    8541:	83 f0 01             	xor    $0x1,%eax
    8544:	84 c0                	test   %al,%al
    8546:	0f 85 c1 00 00 00    	jne    860d <_ZL10do_del_tcsPv+0xdd>
    854c:	48 8b 05 5d f6 03 00 	mov    0x3f65d(%rip),%rax        # 47bb0 <_ZL10g_tcs_node>
    8553:	48 85 c0             	test   %rax,%rax
    8556:	0f 84 b2 00 00 00    	je     860e <_ZL10do_del_tcsPv+0xde>
    855c:	48 8b 05 4d f6 03 00 	mov    0x3f64d(%rip),%rax        # 47bb0 <_ZL10g_tcs_node>
    8563:	48 8b 10             	mov    (%rax),%rdx
    8566:	48 8b 05 4b f6 03 00 	mov    0x3f64b(%rip),%rax        # 47bb8 <_ZL12g_tcs_cookie>
    856d:	48 31 d0             	xor    %rdx,%rax
    8570:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    8574:	75 2b                	jne    85a1 <_ZL10do_del_tcsPv+0x71>
    8576:	48 8b 05 33 f6 03 00 	mov    0x3f633(%rip),%rax        # 47bb0 <_ZL10g_tcs_node>
    857d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8581:	48 8b 05 28 f6 03 00 	mov    0x3f628(%rip),%rax        # 47bb0 <_ZL10g_tcs_node>
    8588:	48 8b 40 08          	mov    0x8(%rax),%rax
    858c:	48 89 05 1d f6 03 00 	mov    %rax,0x3f61d(%rip)        # 47bb0 <_ZL10g_tcs_node>
    8593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8597:	48 89 c7             	mov    %rax,%rdi
    859a:	e8 a0 89 00 00       	callq  10f3f <dlfree>
    859f:	eb 6d                	jmp    860e <_ZL10do_del_tcsPv+0xde>
    85a1:	48 8b 05 08 f6 03 00 	mov    0x3f608(%rip),%rax        # 47bb0 <_ZL10g_tcs_node>
    85a8:	48 8b 40 08          	mov    0x8(%rax),%rax
    85ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    85b0:	48 8b 05 f9 f5 03 00 	mov    0x3f5f9(%rip),%rax        # 47bb0 <_ZL10g_tcs_node>
    85b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    85bb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    85c0:	74 4c                	je     860e <_ZL10do_del_tcsPv+0xde>
    85c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85c6:	48 8b 10             	mov    (%rax),%rdx
    85c9:	48 8b 05 e8 f5 03 00 	mov    0x3f5e8(%rip),%rax        # 47bb8 <_ZL12g_tcs_cookie>
    85d0:	48 31 d0             	xor    %rdx,%rax
    85d3:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    85d7:	75 1e                	jne    85f7 <_ZL10do_del_tcsPv+0xc7>
    85d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85dd:	48 8b 50 08          	mov    0x8(%rax),%rdx
    85e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    85e5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    85e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85ed:	48 89 c7             	mov    %rax,%rdi
    85f0:	e8 4a 89 00 00       	callq  10f3f <dlfree>
    85f5:	eb 17                	jmp    860e <_ZL10do_del_tcsPv+0xde>
    85f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    85ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8603:	48 8b 40 08          	mov    0x8(%rax),%rax
    8607:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    860b:	eb ae                	jmp    85bb <_ZL10do_del_tcsPv+0x8b>
    860d:	90                   	nop
    860e:	c9                   	leaveq 
    860f:	c3                   	retq   

0000000000008610 <_ZL10trts_ecalljPv>:
    8610:	55                   	push   %rbp
    8611:	48 89 e5             	mov    %rsp,%rbp
    8614:	48 83 ec 40          	sub    $0x40,%rsp
    8618:	89 7d cc             	mov    %edi,-0x34(%rbp)
    861b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    861f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8626:	00 00 
    8628:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    862c:	31 c0                	xor    %eax,%eax
    862e:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    8635:	0f b6 05 54 eb 03 00 	movzbl 0x3eb54(%rip),%eax        # 47190 <_ZL16g_is_first_ecall>
    863c:	0f b6 c0             	movzbl %al,%eax
    863f:	48 85 c0             	test   %rax,%rax
    8642:	0f 95 c0             	setne  %al
    8645:	84 c0                	test   %al,%al
    8647:	74 54                	je     869d <_ZL10trts_ecalljPv+0x8d>
    8649:	e8 88 2b 03 00       	callq  3b1d6 <get_thread_data>
    864e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8652:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8656:	48 8b 50 08          	mov    0x8(%rax),%rdx
    865a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    865e:	48 8b 40 10          	mov    0x10(%rax),%rax
    8662:	48 39 c2             	cmp    %rax,%rdx
    8665:	74 07                	je     866e <_ZL10trts_ecalljPv+0x5e>
    8667:	b8 07 10 00 00       	mov    $0x1007,%eax
    866c:	eb 6f                	jmp    86dd <_ZL10trts_ecalljPv+0xcd>
    866e:	48 8d 3d 4b f5 03 00 	lea    0x3f54b(%rip),%rdi        # 47bc0 <_ZL10g_ife_lock>
    8675:	e8 77 b5 00 00       	callq  13bf1 <sgx_spin_lock>
    867a:	0f b6 05 0f eb 03 00 	movzbl 0x3eb0f(%rip),%eax        # 47190 <_ZL16g_is_first_ecall>
    8681:	84 c0                	test   %al,%al
    8683:	74 0c                	je     8691 <_ZL10trts_ecalljPv+0x81>
    8685:	e8 f6 2d 00 00       	callq  b480 <init_global_object>
    868a:	c6 05 ff ea 03 00 00 	movb   $0x0,0x3eaff(%rip)        # 47190 <_ZL16g_is_first_ecall>
    8691:	48 8d 3d 28 f5 03 00 	lea    0x3f528(%rip),%rdi        # 47bc0 <_ZL10g_ife_lock>
    8698:	e8 bb b5 00 00       	callq  13c58 <sgx_spin_unlock>
    869d:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    86a4:	00 
    86a5:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    86a9:	8b 45 cc             	mov    -0x34(%rbp),%eax
    86ac:	48 89 d6             	mov    %rdx,%rsi
    86af:	89 c7                	mov    %eax,%edi
    86b1:	e8 fa fc ff ff       	callq  83b0 <_ZL13get_func_addrjPPv>
    86b6:	89 45 dc             	mov    %eax,-0x24(%rbp)
    86b9:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    86bd:	75 1b                	jne    86da <_ZL10trts_ecalljPv+0xca>
    86bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86c3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    86c7:	0f ae e8             	lfence 
    86ca:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    86ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86d2:	48 89 d7             	mov    %rdx,%rdi
    86d5:	ff d0                	callq  *%rax
    86d7:	89 45 dc             	mov    %eax,-0x24(%rbp)
    86da:	8b 45 dc             	mov    -0x24(%rbp),%eax
    86dd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    86e1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    86e8:	00 00 
    86ea:	74 05                	je     86f1 <_ZL10trts_ecalljPv+0xe1>
    86ec:	e8 9b 2d 00 00       	callq  b48c <__stack_chk_fail>
    86f1:	c9                   	leaveq 
    86f2:	c3                   	retq   

00000000000086f3 <_ZL24init_static_stack_canaryPv>:
    86f3:	55                   	push   %rbp
    86f4:	48 89 e5             	mov    %rsp,%rbp
    86f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    86fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86ff:	48 2d a8 02 01 00    	sub    $0x102a8,%rax
    8705:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8709:	48 8b 15 78 e5 03 00 	mov    0x3e578(%rip),%rdx        # 46c88 <__intel_security_cookie>
    8710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8714:	48 89 10             	mov    %rdx,(%rax)
    8717:	90                   	nop
    8718:	5d                   	pop    %rbp
    8719:	c3                   	retq   

000000000000871a <do_init_thread>:
    871a:	55                   	push   %rbp
    871b:	48 89 e5             	mov    %rsp,%rbp
    871e:	48 83 ec 40          	sub    $0x40,%rsp
    8722:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8726:	89 f0                	mov    %esi,%eax
    8728:	88 45 c4             	mov    %al,-0x3c(%rbp)
    872b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8732:	00 00 
    8734:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8738:	31 c0                	xor    %eax,%eax
    873a:	48 8b 15 bf eb 03 00 	mov    0x3ebbf(%rip),%rdx        # 47300 <g_global_data+0x40>
    8741:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8745:	48 01 d0             	add    %rdx,%rax
    8748:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    874c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8750:	48 8b 40 28          	mov    0x28(%rax),%rax
    8754:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8758:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    875c:	48 8b 40 30          	mov    0x30(%rax),%rax
    8760:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8764:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8768:	b9 a0 00 00 00       	mov    $0xa0,%ecx
    876d:	48 8d 15 8c eb 03 00 	lea    0x3eb8c(%rip),%rdx        # 47300 <g_global_data+0x40>
    8774:	be 00 10 00 00       	mov    $0x1000,%esi
    8779:	48 89 c7             	mov    %rax,%rdi
    877c:	e8 bc fa ff ff       	callq  823d <memcpy_s>
    8781:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8785:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8789:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    878d:	48 01 c2             	add    %rax,%rdx
    8790:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8794:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8798:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    879c:	48 8b 10             	mov    (%rax),%rdx
    879f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87a3:	48 01 c2             	add    %rax,%rdx
    87a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87aa:	48 89 10             	mov    %rdx,(%rax)
    87ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    87b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87b9:	48 01 c2             	add    %rax,%rdx
    87bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87c0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    87c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87c8:	48 8b 50 18          	mov    0x18(%rax),%rdx
    87cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87d0:	48 01 c2             	add    %rax,%rdx
    87d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87d7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    87db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    87e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87e7:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    87ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87f2:	48 8b 50 20          	mov    0x20(%rax),%rdx
    87f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87fa:	48 01 c2             	add    %rax,%rdx
    87fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8801:	48 89 50 20          	mov    %rdx,0x20(%rax)
    8805:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8809:	48 8b 50 58          	mov    0x58(%rax),%rdx
    880d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8811:	48 01 c2             	add    %rax,%rdx
    8814:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8818:	48 89 50 58          	mov    %rdx,0x58(%rax)
    881c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8820:	48 8b 50 50          	mov    0x50(%rax),%rdx
    8824:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8828:	48 01 c2             	add    %rax,%rdx
    882b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    882f:	48 89 50 50          	mov    %rdx,0x50(%rax)
    8833:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8837:	48 8b 40 08          	mov    0x8(%rax),%rax
    883b:	48 8d 90 50 fd ff ff 	lea    -0x2b0(%rax),%rdx
    8842:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8846:	48 89 50 08          	mov    %rdx,0x8(%rax)
    884a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    884e:	48 8b 40 10          	mov    0x10(%rax),%rax
    8852:	48 8d 90 50 fd ff ff 	lea    -0x2b0(%rax),%rdx
    8859:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    885d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8861:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8865:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8869:	48 89 50 28          	mov    %rdx,0x28(%rax)
    886d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8871:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8875:	48 89 50 30          	mov    %rdx,0x30(%rax)
    8879:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    887d:	48 89 c7             	mov    %rax,%rdi
    8880:	e8 6e fe ff ff       	callq  86f3 <_ZL24init_static_stack_canaryPv>
    8885:	8b 05 ed e3 03 00    	mov    0x3e3ed(%rip),%eax        # 46c78 <EDMM_supported>
    888b:	85 c0                	test   %eax,%eax
    888d:	74 12                	je     88a1 <do_init_thread+0x187>
    888f:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    8893:	74 0c                	je     88a1 <do_init_thread+0x187>
    8895:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8899:	48 c7 40 30 01 00 00 	movq   $0x1,0x30(%rax)
    88a0:	00 
    88a1:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    88a8:	00 
    88a9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    88b0:	00 
    88b1:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    88b5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    88b9:	48 89 c6             	mov    %rax,%rsi
    88bc:	48 8d 3d 3d 77 ff ff 	lea    -0x88c3(%rip),%rdi        # 0 <enclave.so>
    88c3:	e8 26 28 00 00       	callq  b0ee <elf_tls_info>
    88c8:	85 c0                	test   %eax,%eax
    88ca:	0f 95 c0             	setne  %al
    88cd:	84 c0                	test   %al,%al
    88cf:	74 0a                	je     88db <do_init_thread+0x1c1>
    88d1:	b8 01 00 00 00       	mov    $0x1,%eax
    88d6:	e9 83 00 00 00       	jmpq   895e <do_init_thread+0x244>
    88db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    88df:	48 85 c0             	test   %rax,%rax
    88e2:	74 75                	je     8959 <do_init_thread+0x23f>
    88e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88e8:	48 8b 10             	mov    (%rax),%rdx
    88eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88ef:	48 8b 40 50          	mov    0x50(%rax),%rax
    88f3:	48 29 c2             	sub    %rax,%rdx
    88f6:	48 89 d0             	mov    %rdx,%rax
    88f9:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    88ff:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    8905:	48 89 c2             	mov    %rax,%rdx
    8908:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    890c:	48 8b 40 50          	mov    0x50(%rax),%rax
    8910:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    8916:	be 00 00 00 00       	mov    $0x0,%esi
    891b:	48 89 c7             	mov    %rax,%rdi
    891e:	e8 12 ae 00 00       	callq  13735 <memset>
    8923:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8927:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    892b:	49 89 d0             	mov    %rdx,%r8
    892e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8932:	48 8b 0a             	mov    (%rdx),%rcx
    8935:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8939:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    893d:	48 29 d1             	sub    %rdx,%rcx
    8940:	48 89 ce             	mov    %rcx,%rsi
    8943:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8947:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    894b:	48 89 d7             	mov    %rdx,%rdi
    894e:	48 89 c1             	mov    %rax,%rcx
    8951:	4c 89 c2             	mov    %r8,%rdx
    8954:	e8 e4 f8 ff ff       	callq  823d <memcpy_s>
    8959:	b8 00 00 00 00       	mov    $0x0,%eax
    895e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8962:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8969:	00 00 
    896b:	74 05                	je     8972 <do_init_thread+0x258>
    896d:	e8 1a 2b 00 00       	callq  b48c <__stack_chk_fail>
    8972:	c9                   	leaveq 
    8973:	c3                   	retq   

0000000000008974 <do_ecall>:
    8974:	55                   	push   %rbp
    8975:	48 89 e5             	mov    %rsp,%rbp
    8978:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    897c:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    897f:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    8983:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    8987:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    898e:	00 00 
    8990:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8994:	31 c0                	xor    %eax,%eax
    8996:	c7 45 a4 01 00 00 00 	movl   $0x1,-0x5c(%rbp)
    899d:	e8 01 28 03 00       	callq  3b1a3 <get_enclave_state>
    89a2:	83 f8 02             	cmp    $0x2,%eax
    89a5:	0f 95 c0             	setne  %al
    89a8:	84 c0                	test   %al,%al
    89aa:	74 08                	je     89b4 <do_ecall+0x40>
    89ac:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    89af:	e9 88 01 00 00       	jmpq   8b3c <do_ecall+0x1c8>
    89b4:	e8 1d 28 03 00       	callq  3b1d6 <get_thread_data>
    89b9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    89bd:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    89c2:	74 33                	je     89f7 <do_ecall+0x83>
    89c4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    89c8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    89cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    89d0:	48 8b 40 08          	mov    0x8(%rax),%rax
    89d4:	48 39 c2             	cmp    %rax,%rdx
    89d7:	75 25                	jne    89fe <do_ecall+0x8a>
    89d9:	48 8b 05 10 e9 03 00 	mov    0x3e910(%rip),%rax        # 472f0 <g_global_data+0x30>
    89e0:	48 85 c0             	test   %rax,%rax
    89e3:	75 12                	jne    89f7 <do_ecall+0x83>
    89e5:	e8 be f8 ff ff       	callq  82a8 <_Z22_pthread_tls_get_statev>
    89ea:	83 f8 09             	cmp    $0x9,%eax
    89ed:	74 08                	je     89f7 <do_ecall+0x83>
    89ef:	8b 45 9c             	mov    -0x64(%rbp),%eax
    89f2:	83 f8 fa             	cmp    $0xfffffffa,%eax
    89f5:	75 07                	jne    89fe <do_ecall+0x8a>
    89f7:	b8 01 00 00 00       	mov    $0x1,%eax
    89fc:	eb 05                	jmp    8a03 <do_ecall+0x8f>
    89fe:	b8 00 00 00 00       	mov    $0x0,%eax
    8a03:	84 c0                	test   %al,%al
    8a05:	74 22                	je     8a29 <do_ecall+0xb5>
    8a07:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8a0b:	be 00 00 00 00       	mov    $0x0,%esi
    8a10:	48 89 c7             	mov    %rax,%rdi
    8a13:	e8 02 fd ff ff       	callq  871a <do_init_thread>
    8a18:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    8a1b:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    8a1f:	74 08                	je     8a29 <do_ecall+0xb5>
    8a21:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    8a24:	e9 13 01 00 00       	jmpq   8b3c <do_ecall+0x1c8>
    8a29:	e8 a8 27 03 00       	callq  3b1d6 <get_thread_data>
    8a2e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8a32:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8a36:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8a3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8a3e:	48 8b 40 08          	mov    0x8(%rax),%rax
    8a42:	48 39 c2             	cmp    %rax,%rdx
    8a45:	0f 85 da 00 00 00    	jne    8b25 <do_ecall+0x1b1>
    8a4b:	e8 43 f8 ff ff       	callq  8293 <_Z16_pthread_enabledv>
    8a50:	84 c0                	test   %al,%al
    8a52:	0f 84 b1 00 00 00    	je     8b09 <do_ecall+0x195>
    8a58:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    8a5f:	00 
    8a60:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    8a67:	00 
    8a68:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    8a6f:	00 
    8a70:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    8a77:	00 
    8a78:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    8a7f:	00 
    8a80:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    8a87:	00 
    8a88:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    8a8f:	00 
    8a90:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8a97:	00 
    8a98:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8a9c:	48 89 c7             	mov    %rax,%rdi
    8a9f:	e8 3b bc 00 00       	callq  146df <_setjmp>
    8aa4:	85 c0                	test   %eax,%eax
    8aa6:	0f 94 c0             	sete   %al
    8aa9:	84 c0                	test   %al,%al
    8aab:	74 28                	je     8ad5 <do_ecall+0x161>
    8aad:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8ab1:	48 89 c7             	mov    %rax,%rdi
    8ab4:	e8 fa f7 ff ff       	callq  82b3 <_Z26_pthread_tls_store_contextPv>
    8ab9:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    8abd:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
    8ac1:	48 89 c6             	mov    %rax,%rsi
    8ac4:	48 8d 3d 45 fb ff ff 	lea    -0x4bb(%rip),%rdi        # 8610 <_ZL10trts_ecalljPv>
    8acb:	e8 63 01 00 00       	callq  8c33 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>
    8ad0:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    8ad3:	eb 21                	jmp    8af6 <do_ecall+0x182>
    8ad5:	bf 09 00 00 00       	mov    $0x9,%edi
    8ada:	e8 bf f7 ff ff       	callq  829e <_Z24_pthread_tls_store_state9_status_t>
    8adf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8ae3:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8ae7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8aeb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8aef:	c7 45 a4 09 00 00 00 	movl   $0x9,-0x5c(%rbp)
    8af6:	e8 ce f7 ff ff       	callq  82c9 <_Z24_pthread_tls_destructorsv>
    8afb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8aff:	48 89 c7             	mov    %rax,%rdi
    8b02:	e8 b7 f7 ff ff       	callq  82be <_Z20_pthread_wakeup_joinPv>
    8b07:	eb 30                	jmp    8b39 <do_ecall+0x1c5>
    8b09:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    8b0d:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
    8b11:	48 89 c6             	mov    %rax,%rsi
    8b14:	48 8d 3d f5 fa ff ff 	lea    -0x50b(%rip),%rdi        # 8610 <_ZL10trts_ecalljPv>
    8b1b:	e8 13 01 00 00       	callq  8c33 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>
    8b20:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    8b23:	eb 14                	jmp    8b39 <do_ecall+0x1c5>
    8b25:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8b29:	8b 55 9c             	mov    -0x64(%rbp),%edx
    8b2c:	48 89 c6             	mov    %rax,%rsi
    8b2f:	89 d7                	mov    %edx,%edi
    8b31:	e8 da fa ff ff       	callq  8610 <_ZL10trts_ecalljPv>
    8b36:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    8b39:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    8b3c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8b40:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8b47:	00 00 
    8b49:	74 05                	je     8b50 <do_ecall+0x1dc>
    8b4b:	e8 3c 29 00 00       	callq  b48c <__stack_chk_fail>
    8b50:	c9                   	leaveq 
    8b51:	c3                   	retq   

0000000000008b52 <do_ecall_add_thread>:
    8b52:	55                   	push   %rbp
    8b53:	48 89 e5             	mov    %rsp,%rbp
    8b56:	48 83 ec 30          	sub    $0x30,%rsp
    8b5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8b5e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    8b65:	e8 4f 07 00 00       	callq  92b9 <is_utility_thread>
    8b6a:	83 f0 01             	xor    $0x1,%eax
    8b6d:	84 c0                	test   %al,%al
    8b6f:	74 08                	je     8b79 <do_ecall_add_thread+0x27>
    8b71:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8b74:	e9 9b 00 00 00       	jmpq   8c14 <do_ecall_add_thread+0xc2>
    8b79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b7d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8b81:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8b86:	75 08                	jne    8b90 <do_ecall_add_thread+0x3e>
    8b88:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8b8b:	e9 84 00 00 00       	jmpq   8c14 <do_ecall_add_thread+0xc2>
    8b90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b94:	be 08 00 00 00       	mov    $0x8,%esi
    8b99:	48 89 c7             	mov    %rax,%rdi
    8b9c:	e8 9d f2 ff ff       	callq  7e3e <sgx_is_outside_enclave>
    8ba1:	85 c0                	test   %eax,%eax
    8ba3:	0f 94 c0             	sete   %al
    8ba6:	84 c0                	test   %al,%al
    8ba8:	74 05                	je     8baf <do_ecall_add_thread+0x5d>
    8baa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8bad:	eb 65                	jmp    8c14 <do_ecall_add_thread+0xc2>
    8baf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bb3:	48 8b 00             	mov    (%rax),%rax
    8bb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8bc2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8bc7:	75 05                	jne    8bce <do_ecall_add_thread+0x7c>
    8bc9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8bcc:	eb 46                	jmp    8c14 <do_ecall_add_thread+0xc2>
    8bce:	0f ae e8             	lfence 
    8bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd5:	48 89 c7             	mov    %rax,%rdi
    8bd8:	e8 5c f8 ff ff       	callq  8439 <_Z11do_save_tcsPv>
    8bdd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    8be0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    8be4:	74 05                	je     8beb <do_ecall_add_thread+0x99>
    8be6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8be9:	eb 29                	jmp    8c14 <do_ecall_add_thread+0xc2>
    8beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bef:	48 89 c7             	mov    %rax,%rdi
    8bf2:	e8 75 10 00 00       	callq  9c6c <do_add_thread>
    8bf7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    8bfa:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    8bfe:	74 11                	je     8c11 <do_ecall_add_thread+0xbf>
    8c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c04:	48 89 c7             	mov    %rax,%rdi
    8c07:	e8 24 f9 ff ff       	callq  8530 <_ZL10do_del_tcsPv>
    8c0c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8c0f:	eb 03                	jmp    8c14 <do_ecall_add_thread+0xc2>
    8c11:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    8c14:	c9                   	leaveq 
    8c15:	c3                   	retq   

0000000000008c16 <do_uninit_enclave>:
    8c16:	55                   	push   %rbp
    8c17:	48 89 e5             	mov    %rsp,%rbp
    8c1a:	48 83 ec 10          	sub    $0x10,%rsp
    8c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c22:	bf 03 00 00 00       	mov    $0x3,%edi
    8c27:	e8 84 25 03 00       	callq  3b1b0 <set_enclave_state>
    8c2c:	b8 00 00 00 00       	mov    $0x0,%eax
    8c31:	c9                   	leaveq 
    8c32:	c3                   	retq   

0000000000008c33 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>:
    8c33:	55                   	push   %rbp
    8c34:	48 89 e5             	mov    %rsp,%rbp
    8c37:	41 57                	push   %r15
    8c39:	41 56                	push   %r14
    8c3b:	41 55                	push   %r13
    8c3d:	41 54                	push   %r12
    8c3f:	53                   	push   %rbx
    8c40:	48 83 ec 58          	sub    $0x58,%rsp
    8c44:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8c48:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    8c4c:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    8c50:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c57:	00 00 
    8c59:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8c5d:	31 c0                	xor    %eax,%eax
    8c5f:	48 89 e0             	mov    %rsp,%rax
    8c62:	48 89 c3             	mov    %rax,%rbx
    8c65:	e8 b2 00 00 00       	callq  8d1c <_Z6rdrandIjET_v>
    8c6a:	25 ff 07 00 00       	and    $0x7ff,%eax
    8c6f:	83 c0 01             	add    $0x1,%eax
    8c72:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    8c75:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    8c78:	48 83 e8 01          	sub    $0x1,%rax
    8c7c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8c80:	48 89 c2             	mov    %rax,%rdx
    8c83:	48 83 c2 01          	add    $0x1,%rdx
    8c87:	49 89 d6             	mov    %rdx,%r14
    8c8a:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    8c90:	48 89 c2             	mov    %rax,%rdx
    8c93:	48 83 c2 01          	add    $0x1,%rdx
    8c97:	49 89 d4             	mov    %rdx,%r12
    8c9a:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    8ca0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    8ca4:	b8 10 00 00 00       	mov    $0x10,%eax
    8ca9:	48 83 e8 01          	sub    $0x1,%rax
    8cad:	48 01 d0             	add    %rdx,%rax
    8cb0:	be 10 00 00 00       	mov    $0x10,%esi
    8cb5:	ba 00 00 00 00       	mov    $0x0,%edx
    8cba:	48 f7 f6             	div    %rsi
    8cbd:	48 6b c0 10          	imul   $0x10,%rax,%rax
    8cc1:	48 29 c4             	sub    %rax,%rsp
    8cc4:	48 89 e0             	mov    %rsp,%rax
    8cc7:	48 83 c0 00          	add    $0x0,%rax
    8ccb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    8ccf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8cd3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8cd7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    8cdb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8cdf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    8ce3:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    8ce7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8ceb:	48 89 ce             	mov    %rcx,%rsi
    8cee:	48 89 c7             	mov    %rax,%rdi
    8cf1:	e8 35 00 00 00       	callq  8d2b <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>
    8cf6:	48 89 dc             	mov    %rbx,%rsp
    8cf9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    8cfd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8d04:	00 00 
    8d06:	74 05                	je     8d0d <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xda>
    8d08:	e8 7f 27 00 00       	callq  b48c <__stack_chk_fail>
    8d0d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    8d11:	5b                   	pop    %rbx
    8d12:	41 5c                	pop    %r12
    8d14:	41 5d                	pop    %r13
    8d16:	41 5e                	pop    %r14
    8d18:	41 5f                	pop    %r15
    8d1a:	5d                   	pop    %rbp
    8d1b:	c3                   	retq   

0000000000008d1c <_Z6rdrandIjET_v>:
    8d1c:	55                   	push   %rbp
    8d1d:	48 89 e5             	mov    %rsp,%rbp
    8d20:	0f c7 f0             	rdrand %eax
    8d23:	89 45 fc             	mov    %eax,-0x4(%rbp)
    8d26:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8d29:	5d                   	pop    %rbp
    8d2a:	c3                   	retq   

0000000000008d2b <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>:
    8d2b:	55                   	push   %rbp
    8d2c:	48 89 e5             	mov    %rsp,%rbp
    8d2f:	48 83 ec 30          	sub    $0x30,%rsp
    8d33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d3b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8d3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d4b:	48 8b 10             	mov    (%rax),%rdx
    8d4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d52:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8d56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d5a:	8b 00                	mov    (%rax),%eax
    8d5c:	89 c1                	mov    %eax,%ecx
    8d5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d62:	48 89 d6             	mov    %rdx,%rsi
    8d65:	89 cf                	mov    %ecx,%edi
    8d67:	ff d0                	callq  *%rax
    8d69:	c9                   	leaveq 
    8d6a:	c3                   	retq   

0000000000008d6b <sgx_ocall>:
    8d6b:	55                   	push   %rbp
    8d6c:	48 89 e5             	mov    %rsp,%rbp
    8d6f:	48 83 ec 20          	sub    $0x20,%rsp
    8d73:	89 7d ec             	mov    %edi,-0x14(%rbp)
    8d76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d7a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8d7e:	74 26                	je     8da6 <sgx_ocall+0x3b>
    8d80:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8d83:	83 f8 fc             	cmp    $0xfffffffc,%eax
    8d86:	7c 08                	jl     8d90 <sgx_ocall+0x25>
    8d88:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8d8b:	83 f8 ff             	cmp    $0xffffffff,%eax
    8d8e:	7c 16                	jl     8da6 <sgx_ocall+0x3b>
    8d90:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8d93:	48 8b 05 66 32 03 00 	mov    0x33266(%rip),%rax        # 3c000 <g_dyn_entry_table>
    8d9a:	48 39 c2             	cmp    %rax,%rdx
    8d9d:	72 07                	jb     8da6 <sgx_ocall+0x3b>
    8d9f:	b8 01 10 00 00       	mov    $0x1001,%eax
    8da4:	eb 17                	jmp    8dbd <sgx_ocall+0x52>
    8da6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8daa:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8dad:	48 89 d6             	mov    %rdx,%rsi
    8db0:	89 c7                	mov    %eax,%edi
    8db2:	e8 b3 26 03 00       	callq  3b46a <__morestack>
    8db7:	89 45 fc             	mov    %eax,-0x4(%rbp)
    8dba:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8dbd:	c9                   	leaveq 
    8dbe:	c3                   	retq   

0000000000008dbf <update_ocall_lastsp>:
    8dbf:	55                   	push   %rbp
    8dc0:	48 89 e5             	mov    %rsp,%rbp
    8dc3:	48 83 ec 30          	sub    $0x30,%rsp
    8dc7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8dcb:	e8 06 24 03 00       	callq  3b1d6 <get_thread_data>
    8dd0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8dd4:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    8ddb:	00 
    8ddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8de0:	48 8b 40 08          	mov    0x8(%rax),%rax
    8de4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8de8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8dec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8df0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    8df4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8df8:	48 8b 50 30          	mov    0x30(%rax),%rdx
    8dfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e00:	48 8b 40 10          	mov    0x10(%rax),%rax
    8e04:	48 39 c2             	cmp    %rax,%rdx
    8e07:	75 11                	jne    8e1a <update_ocall_lastsp+0x5b>
    8e09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e0d:	48 c7 80 90 00 00 00 	movq   $0x1,0x90(%rax)
    8e14:	01 00 00 00 
    8e18:	eb 26                	jmp    8e40 <update_ocall_lastsp+0x81>
    8e1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e1e:	48 8b 40 30          	mov    0x30(%rax),%rax
    8e22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e2a:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    8e31:	48 8d 50 01          	lea    0x1(%rax),%rdx
    8e35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e39:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    8e40:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e48:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8e4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e50:	c9                   	leaveq 
    8e51:	c3                   	retq   

0000000000008e52 <do_oret>:
    8e52:	55                   	push   %rbp
    8e53:	48 89 e5             	mov    %rsp,%rbp
    8e56:	48 83 ec 30          	sub    $0x30,%rsp
    8e5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8e5e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8e65:	00 00 
    8e67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8e6b:	31 c0                	xor    %eax,%eax
    8e6d:	e8 64 23 03 00       	callq  3b1d6 <get_thread_data>
    8e72:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8e76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e7a:	48 8b 40 08          	mov    0x8(%rax),%rax
    8e7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8e82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e86:	48 8b 40 08          	mov    0x8(%rax),%rax
    8e8a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8e8e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e93:	74 0a                	je     8e9f <do_oret+0x4d>
    8e95:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8e99:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    8e9d:	77 0a                	ja     8ea9 <do_oret+0x57>
    8e9f:	b8 01 00 00 00       	mov    $0x1,%eax
    8ea4:	e9 87 00 00 00       	jmpq   8f30 <do_oret+0xde>
    8ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ead:	48 8b 40 10          	mov    0x10(%rax),%rax
    8eb1:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    8eb7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    8ebb:	76 07                	jbe    8ec4 <do_oret+0x72>
    8ebd:	b8 01 00 00 00       	mov    $0x1,%eax
    8ec2:	eb 6c                	jmp    8f30 <do_oret+0xde>
    8ec4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ec8:	48 8b 40 20          	mov    0x20(%rax),%rax
    8ecc:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
    8ed2:	74 07                	je     8edb <do_oret+0x89>
    8ed4:	b8 01 00 00 00       	mov    $0x1,%eax
    8ed9:	eb 55                	jmp    8f30 <do_oret+0xde>
    8edb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8edf:	48 8b 50 30          	mov    0x30(%rax),%rdx
    8ee3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ee7:	48 8b 40 10          	mov    0x10(%rax),%rax
    8eeb:	48 39 c2             	cmp    %rax,%rdx
    8eee:	77 11                	ja     8f01 <do_oret+0xaf>
    8ef0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ef4:	48 8b 40 30          	mov    0x30(%rax),%rax
    8ef8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8efc:	48 39 d0             	cmp    %rdx,%rax
    8eff:	77 07                	ja     8f08 <do_oret+0xb6>
    8f01:	b8 01 00 00 00       	mov    $0x1,%eax
    8f06:	eb 28                	jmp    8f30 <do_oret+0xde>
    8f08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8f0c:	48 8b 50 30          	mov    0x30(%rax),%rdx
    8f10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f14:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8f18:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f20:	48 89 d6             	mov    %rdx,%rsi
    8f23:	48 89 c7             	mov    %rax,%rdi
    8f26:	e8 4e 25 03 00       	callq  3b479 <asm_oret>
    8f2b:	b8 01 00 00 00       	mov    $0x1,%eax
    8f30:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8f34:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8f3b:	00 00 
    8f3d:	74 05                	je     8f44 <do_oret+0xf2>
    8f3f:	e8 48 25 00 00       	callq  b48c <__stack_chk_fail>
    8f44:	c9                   	leaveq 
    8f45:	c3                   	retq   

0000000000008f46 <get_heap_base>:
    8f46:	55                   	push   %rbp
    8f47:	48 89 e5             	mov    %rsp,%rbp
    8f4a:	48 8b 15 77 e3 03 00 	mov    0x3e377(%rip),%rdx        # 472c8 <g_global_data+0x8>
    8f51:	48 8d 05 a8 70 ff ff 	lea    -0x8f58(%rip),%rax        # 0 <enclave.so>
    8f58:	48 01 d0             	add    %rdx,%rax
    8f5b:	5d                   	pop    %rbp
    8f5c:	c3                   	retq   

0000000000008f5d <get_heap_size>:
    8f5d:	55                   	push   %rbp
    8f5e:	48 89 e5             	mov    %rsp,%rbp
    8f61:	48 8b 05 68 e3 03 00 	mov    0x3e368(%rip),%rax        # 472d0 <g_global_data+0x10>
    8f68:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8f6c:	8b 05 06 dd 03 00    	mov    0x3dd06(%rip),%eax        # 46c78 <EDMM_supported>
    8f72:	85 c0                	test   %eax,%eax
    8f74:	74 5b                	je     8fd1 <get_heap_size+0x74>
    8f76:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    8f7d:	8b 05 65 e4 03 00    	mov    0x3e465(%rip),%eax        # 473e8 <g_global_data+0x128>
    8f83:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    8f86:	0f 92 c0             	setb   %al
    8f89:	84 c0                	test   %al,%al
    8f8b:	74 44                	je     8fd1 <get_heap_size+0x74>
    8f8d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    8f90:	48 c1 e0 05          	shl    $0x5,%rax
    8f94:	48 89 c2             	mov    %rax,%rdx
    8f97:	48 8d 05 52 e4 03 00 	lea    0x3e452(%rip),%rax        # 473f0 <g_global_data+0x130>
    8f9e:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    8fa2:	66 83 f8 03          	cmp    $0x3,%ax
    8fa6:	0f 94 c0             	sete   %al
    8fa9:	84 c0                	test   %al,%al
    8fab:	74 1e                	je     8fcb <get_heap_size+0x6e>
    8fad:	8b 45 f4             	mov    -0xc(%rbp),%eax
    8fb0:	48 c1 e0 05          	shl    $0x5,%rax
    8fb4:	48 89 c2             	mov    %rax,%rdx
    8fb7:	48 8d 05 36 e4 03 00 	lea    0x3e436(%rip),%rax        # 473f4 <g_global_data+0x134>
    8fbe:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    8fc1:	89 c0                	mov    %eax,%eax
    8fc3:	48 c1 e0 0c          	shl    $0xc,%rax
    8fc7:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    8fcb:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    8fcf:	eb ac                	jmp    8f7d <get_heap_size+0x20>
    8fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd5:	5d                   	pop    %rbp
    8fd6:	c3                   	retq   

0000000000008fd7 <get_heap_min_size>:
    8fd7:	55                   	push   %rbp
    8fd8:	48 89 e5             	mov    %rsp,%rbp
    8fdb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8fe2:	00 
    8fe3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    8fea:	8b 05 f8 e3 03 00    	mov    0x3e3f8(%rip),%eax        # 473e8 <g_global_data+0x128>
    8ff0:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    8ff3:	0f 92 c0             	setb   %al
    8ff6:	84 c0                	test   %al,%al
    8ff8:	74 46                	je     9040 <get_heap_min_size+0x69>
    8ffa:	8b 45 f4             	mov    -0xc(%rbp),%eax
    8ffd:	48 c1 e0 05          	shl    $0x5,%rax
    9001:	48 89 c2             	mov    %rax,%rdx
    9004:	48 8d 05 e5 e3 03 00 	lea    0x3e3e5(%rip),%rax        # 473f0 <g_global_data+0x130>
    900b:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    900f:	66 83 f8 01          	cmp    $0x1,%ax
    9013:	0f 94 c0             	sete   %al
    9016:	84 c0                	test   %al,%al
    9018:	74 20                	je     903a <get_heap_min_size+0x63>
    901a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    901d:	48 c1 e0 05          	shl    $0x5,%rax
    9021:	48 89 c2             	mov    %rax,%rdx
    9024:	48 8d 05 c9 e3 03 00 	lea    0x3e3c9(%rip),%rax        # 473f4 <g_global_data+0x134>
    902b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    902e:	89 c0                	mov    %eax,%eax
    9030:	48 c1 e0 0c          	shl    $0xc,%rax
    9034:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9038:	eb 06                	jmp    9040 <get_heap_min_size+0x69>
    903a:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    903e:	eb aa                	jmp    8fea <get_heap_min_size+0x13>
    9040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9044:	5d                   	pop    %rbp
    9045:	c3                   	retq   

0000000000009046 <get_rsrv_base>:
    9046:	55                   	push   %rbp
    9047:	48 89 e5             	mov    %rsp,%rbp
    904a:	48 8b 15 87 e2 03 00 	mov    0x3e287(%rip),%rdx        # 472d8 <g_global_data+0x18>
    9051:	48 8d 05 a8 6f ff ff 	lea    -0x9058(%rip),%rax        # 0 <enclave.so>
    9058:	48 01 d0             	add    %rdx,%rax
    905b:	5d                   	pop    %rbp
    905c:	c3                   	retq   

000000000000905d <get_rsrv_size>:
    905d:	55                   	push   %rbp
    905e:	48 89 e5             	mov    %rsp,%rbp
    9061:	48 8b 05 78 e2 03 00 	mov    0x3e278(%rip),%rax        # 472e0 <g_global_data+0x20>
    9068:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    906c:	8b 05 06 dc 03 00    	mov    0x3dc06(%rip),%eax        # 46c78 <EDMM_supported>
    9072:	85 c0                	test   %eax,%eax
    9074:	74 5b                	je     90d1 <get_rsrv_size+0x74>
    9076:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    907d:	8b 05 65 e3 03 00    	mov    0x3e365(%rip),%eax        # 473e8 <g_global_data+0x128>
    9083:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    9086:	0f 92 c0             	setb   %al
    9089:	84 c0                	test   %al,%al
    908b:	74 44                	je     90d1 <get_rsrv_size+0x74>
    908d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    9090:	48 c1 e0 05          	shl    $0x5,%rax
    9094:	48 89 c2             	mov    %rax,%rdx
    9097:	48 8d 05 52 e3 03 00 	lea    0x3e352(%rip),%rax        # 473f0 <g_global_data+0x130>
    909e:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    90a2:	66 83 f8 16          	cmp    $0x16,%ax
    90a6:	0f 94 c0             	sete   %al
    90a9:	84 c0                	test   %al,%al
    90ab:	74 1e                	je     90cb <get_rsrv_size+0x6e>
    90ad:	8b 45 f4             	mov    -0xc(%rbp),%eax
    90b0:	48 c1 e0 05          	shl    $0x5,%rax
    90b4:	48 89 c2             	mov    %rax,%rdx
    90b7:	48 8d 05 36 e3 03 00 	lea    0x3e336(%rip),%rax        # 473f4 <g_global_data+0x134>
    90be:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    90c1:	89 c0                	mov    %eax,%eax
    90c3:	48 c1 e0 0c          	shl    $0xc,%rax
    90c7:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    90cb:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    90cf:	eb ac                	jmp    907d <get_rsrv_size+0x20>
    90d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90d5:	5d                   	pop    %rbp
    90d6:	c3                   	retq   

00000000000090d7 <get_rsrv_min_size>:
    90d7:	55                   	push   %rbp
    90d8:	48 89 e5             	mov    %rsp,%rbp
    90db:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    90e2:	00 
    90e3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    90ea:	8b 05 f8 e2 03 00    	mov    0x3e2f8(%rip),%eax        # 473e8 <g_global_data+0x128>
    90f0:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    90f3:	0f 92 c0             	setb   %al
    90f6:	84 c0                	test   %al,%al
    90f8:	74 46                	je     9140 <get_rsrv_min_size+0x69>
    90fa:	8b 45 f4             	mov    -0xc(%rbp),%eax
    90fd:	48 c1 e0 05          	shl    $0x5,%rax
    9101:	48 89 c2             	mov    %rax,%rdx
    9104:	48 8d 05 e5 e2 03 00 	lea    0x3e2e5(%rip),%rax        # 473f0 <g_global_data+0x130>
    910b:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    910f:	66 83 f8 14          	cmp    $0x14,%ax
    9113:	0f 94 c0             	sete   %al
    9116:	84 c0                	test   %al,%al
    9118:	74 20                	je     913a <get_rsrv_min_size+0x63>
    911a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    911d:	48 c1 e0 05          	shl    $0x5,%rax
    9121:	48 89 c2             	mov    %rax,%rdx
    9124:	48 8d 05 c9 e2 03 00 	lea    0x3e2c9(%rip),%rax        # 473f4 <g_global_data+0x134>
    912b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    912e:	89 c0                	mov    %eax,%eax
    9130:	48 c1 e0 0c          	shl    $0xc,%rax
    9134:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9138:	eb 06                	jmp    9140 <get_rsrv_min_size+0x69>
    913a:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    913e:	eb aa                	jmp    90ea <get_rsrv_min_size+0x13>
    9140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9144:	5d                   	pop    %rbp
    9145:	c3                   	retq   

0000000000009146 <get_errno_addr>:
    9146:	55                   	push   %rbp
    9147:	48 89 e5             	mov    %rsp,%rbp
    914a:	48 83 ec 10          	sub    $0x10,%rsp
    914e:	e8 83 20 03 00       	callq  3b1d6 <get_thread_data>
    9153:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    915b:	48 83 c0 40          	add    $0x40,%rax
    915f:	c9                   	leaveq 
    9160:	c3                   	retq   

0000000000009161 <feature_supported>:
    9161:	55                   	push   %rbp
    9162:	48 89 e5             	mov    %rsp,%rbp
    9165:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9169:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    916c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9170:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9174:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    917b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    9182:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9187:	75 07                	jne    9190 <feature_supported+0x2f>
    9189:	b8 00 00 00 00       	mov    $0x0,%eax
    918e:	eb 79                	jmp    9209 <feature_supported+0xa8>
    9190:	8b 45 f0             	mov    -0x10(%rbp),%eax
    9193:	83 c0 01             	add    $0x1,%eax
    9196:	c1 e0 06             	shl    $0x6,%eax
    9199:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    919c:	72 27                	jb     91c5 <feature_supported+0x64>
    919e:	8b 45 f0             	mov    -0x10(%rbp),%eax
    91a1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    91a8:	00 
    91a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91ad:	48 01 d0             	add    %rdx,%rax
    91b0:	48 8b 00             	mov    (%rax),%rax
    91b3:	48 85 c0             	test   %rax,%rax
    91b6:	79 07                	jns    91bf <feature_supported+0x5e>
    91b8:	b8 00 00 00 00       	mov    $0x0,%eax
    91bd:	eb 4a                	jmp    9209 <feature_supported+0xa8>
    91bf:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    91c3:	eb cb                	jmp    9190 <feature_supported+0x2f>
    91c5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    91c8:	c1 e0 06             	shl    $0x6,%eax
    91cb:	89 c2                	mov    %eax,%edx
    91cd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    91d0:	29 d0                	sub    %edx,%eax
    91d2:	89 45 f4             	mov    %eax,-0xc(%rbp)
    91d5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    91d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    91df:	00 
    91e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e4:	48 01 d0             	add    %rdx,%rax
    91e7:	48 8b 10             	mov    (%rax),%rdx
    91ea:	8b 45 f4             	mov    -0xc(%rbp),%eax
    91ed:	89 c1                	mov    %eax,%ecx
    91ef:	48 d3 ea             	shr    %cl,%rdx
    91f2:	48 89 d0             	mov    %rdx,%rax
    91f5:	83 e0 01             	and    $0x1,%eax
    91f8:	48 85 c0             	test   %rax,%rax
    91fb:	74 07                	je     9204 <feature_supported+0xa3>
    91fd:	b8 01 00 00 00       	mov    $0x1,%eax
    9202:	eb 05                	jmp    9209 <feature_supported+0xa8>
    9204:	b8 00 00 00 00       	mov    $0x0,%eax
    9209:	5d                   	pop    %rbp
    920a:	c3                   	retq   

000000000000920b <is_stack_addr>:
    920b:	55                   	push   %rbp
    920c:	48 89 e5             	mov    %rsp,%rbp
    920f:	48 83 ec 30          	sub    $0x30,%rsp
    9213:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9217:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    921b:	e8 b6 1f 03 00       	callq  3b1d6 <get_thread_data>
    9220:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9224:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9228:	48 8b 40 10          	mov    0x10(%rax),%rax
    922c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9230:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9234:	48 8b 40 18          	mov    0x18(%rax),%rax
    9238:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    923c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9240:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9244:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9248:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    924c:	48 01 d0             	add    %rdx,%rax
    924f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    9253:	77 22                	ja     9277 <is_stack_addr+0x6c>
    9255:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9259:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    925d:	48 01 d0             	add    %rdx,%rax
    9260:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9264:	72 11                	jb     9277 <is_stack_addr+0x6c>
    9266:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    926a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    926e:	77 07                	ja     9277 <is_stack_addr+0x6c>
    9270:	b8 01 00 00 00       	mov    $0x1,%eax
    9275:	eb 05                	jmp    927c <is_stack_addr+0x71>
    9277:	b8 00 00 00 00       	mov    $0x0,%eax
    927c:	c9                   	leaveq 
    927d:	c3                   	retq   

000000000000927e <is_valid_sp>:
    927e:	55                   	push   %rbp
    927f:	48 89 e5             	mov    %rsp,%rbp
    9282:	48 83 ec 10          	sub    $0x10,%rsp
    9286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    928a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    928e:	83 e0 07             	and    $0x7,%eax
    9291:	48 85 c0             	test   %rax,%rax
    9294:	75 1c                	jne    92b2 <is_valid_sp+0x34>
    9296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    929a:	be 00 00 00 00       	mov    $0x0,%esi
    929f:	48 89 c7             	mov    %rax,%rdi
    92a2:	e8 64 ff ff ff       	callq  920b <is_stack_addr>
    92a7:	84 c0                	test   %al,%al
    92a9:	74 07                	je     92b2 <is_valid_sp+0x34>
    92ab:	b8 01 00 00 00       	mov    $0x1,%eax
    92b0:	eb 05                	jmp    92b7 <is_valid_sp+0x39>
    92b2:	b8 00 00 00 00       	mov    $0x0,%eax
    92b7:	c9                   	leaveq 
    92b8:	c3                   	retq   

00000000000092b9 <is_utility_thread>:
    92b9:	55                   	push   %rbp
    92ba:	48 89 e5             	mov    %rsp,%rbp
    92bd:	48 83 ec 10          	sub    $0x10,%rsp
    92c1:	e8 10 1f 03 00       	callq  3b1d6 <get_thread_data>
    92c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    92ca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    92cf:	74 17                	je     92e8 <is_utility_thread+0x2f>
    92d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d5:	48 8b 40 30          	mov    0x30(%rax),%rax
    92d9:	83 e0 01             	and    $0x1,%eax
    92dc:	48 85 c0             	test   %rax,%rax
    92df:	74 07                	je     92e8 <is_utility_thread+0x2f>
    92e1:	b8 01 00 00 00       	mov    $0x1,%eax
    92e6:	eb 05                	jmp    92ed <is_utility_thread+0x34>
    92e8:	b8 00 00 00 00       	mov    $0x0,%eax
    92ed:	c9                   	leaveq 
    92ee:	c3                   	retq   

00000000000092ef <internal_handle_exception>:
    92ef:	55                   	push   %rbp
    92f0:	48 89 e5             	mov    %rsp,%rbp
    92f3:	48 83 ec 50          	sub    $0x50,%rsp
    92f7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    92fb:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    9302:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    9309:	00 
    930a:	e8 c7 1e 03 00       	callq  3b1d6 <get_thread_data>
    930f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9313:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    931a:	00 
    931b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9322:	00 
    9323:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    932a:	00 
    932b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    9332:	00 
    9333:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9337:	48 8b 40 60          	mov    0x60(%rax),%rax
    933b:	48 85 c0             	test   %rax,%rax
    933e:	0f 88 8c 01 00 00    	js     94d0 <internal_handle_exception+0x1e1>
    9344:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9348:	48 8b 40 60          	mov    0x60(%rax),%rax
    934c:	48 8d 50 01          	lea    0x1(%rax),%rdx
    9350:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9354:	48 89 50 60          	mov    %rdx,0x60(%rax)
    9358:	48 8d 3d 71 e8 03 00 	lea    0x3e871(%rip),%rdi        # 47bd0 <_ZL14g_handler_lock>
    935f:	e8 8d a8 00 00       	callq  13bf1 <sgx_spin_lock>
    9364:	48 8b 05 5d e8 03 00 	mov    0x3e85d(%rip),%rax        # 47bc8 <_ZL12g_first_node>
    936b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    936f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    9374:	74 13                	je     9389 <internal_handle_exception+0x9a>
    9376:	48 83 45 d0 08       	addq   $0x8,-0x30(%rbp)
    937b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    937f:	48 8b 40 08          	mov    0x8(%rax),%rax
    9383:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    9387:	eb e6                	jmp    936f <internal_handle_exception+0x80>
    9389:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    938e:	75 24                	jne    93b4 <internal_handle_exception+0xc5>
    9390:	48 8d 3d 39 e8 03 00 	lea    0x3e839(%rip),%rdi        # 47bd0 <_ZL14g_handler_lock>
    9397:	e8 bc a8 00 00       	callq  13c58 <sgx_spin_unlock>
    939c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    93a0:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    93a7:	ff 
    93a8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    93ac:	48 89 c7             	mov    %rax,%rdi
    93af:	e8 34 22 03 00       	callq  3b5e8 <continue_execution>
    93b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    93b8:	48 89 c7             	mov    %rax,%rdi
    93bb:	e8 88 70 00 00       	callq  10448 <dlmalloc>
    93c0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    93c4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    93c9:	0f 94 c0             	sete   %al
    93cc:	84 c0                	test   %al,%al
    93ce:	74 11                	je     93e1 <internal_handle_exception+0xf2>
    93d0:	48 8d 3d f9 e7 03 00 	lea    0x3e7f9(%rip),%rdi        # 47bd0 <_ZL14g_handler_lock>
    93d7:	e8 7c a8 00 00       	callq  13c58 <sgx_spin_unlock>
    93dc:	e9 f3 00 00 00       	jmpq   94d4 <internal_handle_exception+0x1e5>
    93e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    93e9:	48 8b 05 d8 e7 03 00 	mov    0x3e7d8(%rip),%rax        # 47bc8 <_ZL12g_first_node>
    93f0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    93f4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    93f9:	74 21                	je     941c <internal_handle_exception+0x12d>
    93fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    93ff:	48 8b 10             	mov    (%rax),%rdx
    9402:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9406:	48 89 10             	mov    %rdx,(%rax)
    9409:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    940e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9412:	48 8b 40 08          	mov    0x8(%rax),%rax
    9416:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    941a:	eb d8                	jmp    93f4 <internal_handle_exception+0x105>
    941c:	48 8d 3d ad e7 03 00 	lea    0x3e7ad(%rip),%rdi        # 47bd0 <_ZL14g_handler_lock>
    9423:	e8 30 a8 00 00       	callq  13c58 <sgx_spin_unlock>
    9428:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    942c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    9430:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    9435:	74 38                	je     946f <internal_handle_exception+0x180>
    9437:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    943b:	48 8b 10             	mov    (%rax),%rdx
    943e:	48 8b 05 93 e7 03 00 	mov    0x3e793(%rip),%rax        # 47bd8 <_ZL12g_veh_cookie>
    9445:	48 31 d0             	xor    %rdx,%rax
    9448:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    944c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9454:	48 89 d7             	mov    %rdx,%rdi
    9457:	ff d0                	callq  *%rax
    9459:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    945c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
    9460:	74 0c                	je     946e <internal_handle_exception+0x17f>
    9462:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    9467:	48 83 6d d0 08       	subq   $0x8,-0x30(%rbp)
    946c:	eb c2                	jmp    9430 <internal_handle_exception+0x141>
    946e:	90                   	nop
    946f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9473:	48 89 c7             	mov    %rax,%rdi
    9476:	e8 c4 7a 00 00       	callq  10f3f <dlfree>
    947b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    947f:	48 8b 40 20          	mov    0x20(%rax),%rax
    9483:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9487:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    948b:	48 89 c7             	mov    %rax,%rdi
    948e:	e8 eb fd ff ff       	callq  927e <is_valid_sp>
    9493:	83 f0 01             	xor    $0x1,%eax
    9496:	84 c0                	test   %al,%al
    9498:	75 39                	jne    94d3 <internal_handle_exception+0x1e4>
    949a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
    949e:	75 16                	jne    94b6 <internal_handle_exception+0x1c7>
    94a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94a4:	48 8b 40 60          	mov    0x60(%rax),%rax
    94a8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    94ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94b0:	48 89 50 60          	mov    %rdx,0x60(%rax)
    94b4:	eb 0c                	jmp    94c2 <internal_handle_exception+0x1d3>
    94b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94ba:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    94c1:	ff 
    94c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    94c6:	48 89 c7             	mov    %rax,%rdi
    94c9:	e8 1a 21 03 00       	callq  3b5e8 <continue_execution>
    94ce:	eb 04                	jmp    94d4 <internal_handle_exception+0x1e5>
    94d0:	90                   	nop
    94d1:	eb 01                	jmp    94d4 <internal_handle_exception+0x1e5>
    94d3:	90                   	nop
    94d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94d8:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    94df:	ff 
    94e0:	e8 f4 20 03 00       	callq  3b5d9 <abort>

00000000000094e5 <_ZL21expand_stack_by_pagesPvm>:
    94e5:	55                   	push   %rbp
    94e6:	48 89 e5             	mov    %rsp,%rbp
    94e9:	48 83 ec 20          	sub    $0x20,%rsp
    94ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    94f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    94f5:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
    94fc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    9501:	74 07                	je     950a <_ZL21expand_stack_by_pagesPvm+0x25>
    9503:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9508:	75 07                	jne    9511 <_ZL21expand_stack_by_pagesPvm+0x2c>
    950a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    950f:	eb 19                	jmp    952a <_ZL21expand_stack_by_pagesPvm+0x45>
    9511:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9519:	48 89 d6             	mov    %rdx,%rsi
    951c:	48 89 c7             	mov    %rax,%rdi
    951f:	e8 0f 07 00 00       	callq  9c33 <apply_pages_within_exception>
    9524:	89 45 fc             	mov    %eax,-0x4(%rbp)
    9527:	8b 45 fc             	mov    -0x4(%rbp),%eax
    952a:	c9                   	leaveq 
    952b:	c3                   	retq   

000000000000952c <trts_handle_exception>:
    952c:	55                   	push   %rbp
    952d:	48 89 e5             	mov    %rsp,%rbp
    9530:	48 83 ec 50          	sub    $0x50,%rsp
    9534:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    9538:	e8 99 1c 03 00       	callq  3b1d6 <get_thread_data>
    953d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    9541:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    9548:	00 
    9549:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    9550:	00 
    9551:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    9558:	00 
    9559:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9560:	00 
    9561:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    9566:	0f 84 7a 04 00 00    	je     99e6 <trts_handle_exception+0x4ba>
    956c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    9571:	0f 84 6f 04 00 00    	je     99e6 <trts_handle_exception+0x4ba>
    9577:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    957b:	48 89 c7             	mov    %rax,%rdi
    957e:	e8 83 ec ff ff       	callq  8206 <check_static_stack_canary>
    9583:	85 c0                	test   %eax,%eax
    9585:	0f 95 c0             	setne  %al
    9588:	84 c0                	test   %al,%al
    958a:	0f 85 59 04 00 00    	jne    99e9 <trts_handle_exception+0x4bd>
    9590:	e8 0e 1c 03 00       	callq  3b1a3 <get_enclave_state>
    9595:	83 f8 02             	cmp    $0x2,%eax
    9598:	0f 95 c0             	setne  %al
    959b:	84 c0                	test   %al,%al
    959d:	0f 85 49 04 00 00    	jne    99ec <trts_handle_exception+0x4c0>
    95a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95a7:	48 8b 40 60          	mov    0x60(%rax),%rax
    95ab:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    95af:	0f 84 3a 04 00 00    	je     99ef <trts_handle_exception+0x4c3>
    95b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95b9:	48 8b 40 10          	mov    0x10(%rax),%rax
    95bd:	48 05 b0 02 01 00    	add    $0x102b0,%rax
    95c3:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    95c7:	0f 85 19 04 00 00    	jne    99e6 <trts_handle_exception+0x4ba>
    95cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95d1:	48 8b 40 20          	mov    0x20(%rax),%rax
    95d5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    95db:	48 8d 90 00 f0 ff ff 	lea    -0x1000(%rax),%rdx
    95e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    95e6:	48 39 c2             	cmp    %rax,%rdx
    95e9:	0f 85 f7 03 00 00    	jne    99e6 <trts_handle_exception+0x4ba>
    95ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95f3:	48 8b 40 20          	mov    0x20(%rax),%rax
    95f7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    95fb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95ff:	48 8b 40 20          	mov    0x20(%rax),%rax
    9603:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9607:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    960b:	be 00 00 00 00       	mov    $0x0,%esi
    9610:	48 89 c7             	mov    %rax,%rdi
    9613:	e8 f3 fb ff ff       	callq  920b <is_stack_addr>
    9618:	83 f0 01             	xor    $0x1,%eax
    961b:	84 c0                	test   %al,%al
    961d:	74 14                	je     9633 <trts_handle_exception+0x107>
    961f:	c7 05 57 e5 03 00 03 	movl   $0x3,0x3e557(%rip)        # 47b80 <g_enclave_state>
    9626:	00 00 00 
    9629:	b8 09 10 00 00       	mov    $0x1009,%eax
    962e:	e9 cf 03 00 00       	jmpq   9a02 <trts_handle_exception+0x4d6>
    9633:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    963a:	00 
    963b:	48 83 6d e8 80       	subq   $0xffffffffffffff80,-0x18(%rbp)
    9640:	48 81 45 e8 98 00 00 	addq   $0x98,-0x18(%rbp)
    9647:	00 
    9648:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    964c:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    9650:	48 83 65 f0 f0       	andq   $0xfffffffffffffff0,-0x10(%rbp)
    9655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9659:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    965d:	48 89 d6             	mov    %rdx,%rsi
    9660:	48 89 c7             	mov    %rax,%rdi
    9663:	e8 a3 fb ff ff       	callq  920b <is_stack_addr>
    9668:	83 f0 01             	xor    $0x1,%eax
    966b:	84 c0                	test   %al,%al
    966d:	74 14                	je     9683 <trts_handle_exception+0x157>
    966f:	c7 05 07 e5 03 00 03 	movl   $0x3,0x3e507(%rip)        # 47b80 <g_enclave_state>
    9676:	00 00 00 
    9679:	b8 09 10 00 00       	mov    $0x1009,%eax
    967e:	e9 7f 03 00 00       	jmpq   9a02 <trts_handle_exception+0x4d6>
    9683:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9687:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    968b:	48 c7 45 e8 08 00 00 	movq   $0x8,-0x18(%rbp)
    9692:	00 
    9693:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9697:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    969b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    969f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96a3:	48 89 d6             	mov    %rdx,%rsi
    96a6:	48 89 c7             	mov    %rax,%rdi
    96a9:	e8 5d fb ff ff       	callq  920b <is_stack_addr>
    96ae:	83 f0 01             	xor    $0x1,%eax
    96b1:	84 c0                	test   %al,%al
    96b3:	74 14                	je     96c9 <trts_handle_exception+0x19d>
    96b5:	c7 05 c1 e4 03 00 03 	movl   $0x3,0x3e4c1(%rip)        # 47b80 <g_enclave_state>
    96bc:	00 00 00 
    96bf:	b8 09 10 00 00       	mov    $0x1009,%eax
    96c4:	e9 39 03 00 00       	jmpq   9a02 <trts_handle_exception+0x4d6>
    96c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    96cd:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    96d4:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    96d8:	0f 83 c7 00 00 00    	jae    97a5 <trts_handle_exception+0x279>
    96de:	c7 45 c4 ff ff ff ff 	movl   $0xffffffff,-0x3c(%rbp)
    96e5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    96ec:	00 
    96ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    96f1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    96f8:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    96fc:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    9702:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    9708:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    970c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9710:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    9717:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    971b:	73 47                	jae    9764 <trts_handle_exception+0x238>
    971d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9721:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    9728:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    972c:	48 89 c2             	mov    %rax,%rdx
    972f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9733:	48 8b 40 18          	mov    0x18(%rax),%rax
    9737:	48 39 c2             	cmp    %rax,%rdx
    973a:	72 28                	jb     9764 <trts_handle_exception+0x238>
    973c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9740:	48 c1 e8 0c          	shr    $0xc,%rax
    9744:	48 89 c2             	mov    %rax,%rdx
    9747:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    974b:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    9752:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    9756:	48 89 d6             	mov    %rdx,%rsi
    9759:	48 89 c7             	mov    %rax,%rdi
    975c:	e8 84 fd ff ff       	callq  94e5 <_ZL21expand_stack_by_pagesPvm>
    9761:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    9764:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    9768:	75 27                	jne    9791 <trts_handle_exception+0x265>
    976a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    976e:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    9775:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    9779:	48 89 c2             	mov    %rax,%rdx
    977c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9780:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    9787:	b8 00 00 00 00       	mov    $0x0,%eax
    978c:	e9 71 02 00 00       	jmpq   9a02 <trts_handle_exception+0x4d6>
    9791:	c7 05 e5 e3 03 00 03 	movl   $0x3,0x3e3e5(%rip)        # 47b80 <g_enclave_state>
    9798:	00 00 00 
    979b:	b8 09 10 00 00       	mov    $0x1009,%eax
    97a0:	e9 5d 02 00 00       	jmpq   9a02 <trts_handle_exception+0x4d6>
    97a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97a9:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    97b0:	48 8d 05 76 1d 03 00 	lea    0x31d76(%rip),%rax        # 3b52d <Lereport_inst>
    97b7:	48 39 c2             	cmp    %rax,%rdx
    97ba:	75 4d                	jne    9809 <trts_handle_exception+0x2dd>
    97bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97c0:	48 8b 00             	mov    (%rax),%rax
    97c3:	48 85 c0             	test   %rax,%rax
    97c6:	75 41                	jne    9809 <trts_handle_exception+0x2dd>
    97c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97cc:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    97d3:	48 8d 50 03          	lea    0x3(%rax),%rdx
    97d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97db:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    97e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97e6:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    97ed:	48 83 c8 01          	or     $0x1,%rax
    97f1:	48 89 c2             	mov    %rax,%rdx
    97f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97f8:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    97ff:	b8 00 00 00 00       	mov    $0x0,%eax
    9804:	e9 f9 01 00 00       	jmpq   9a02 <trts_handle_exception+0x4d6>
    9809:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    980d:	0f b6 80 a3 00 00 00 	movzbl 0xa3(%rax),%eax
    9814:	83 e0 80             	and    $0xffffff80,%eax
    9817:	84 c0                	test   %al,%al
    9819:	0f 84 d3 01 00 00    	je     99f2 <trts_handle_exception+0x4c6>
    981f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9823:	0f b6 80 a0 00 00 00 	movzbl 0xa0(%rax),%eax
    982a:	0f b6 d0             	movzbl %al,%edx
    982d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9831:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
    9837:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    983b:	0f b6 80 a1 00 00 00 	movzbl 0xa1(%rax),%eax
    9842:	83 e0 07             	and    $0x7,%eax
    9845:	0f b6 d0             	movzbl %al,%edx
    9848:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    984c:	89 90 94 00 00 00    	mov    %edx,0x94(%rax)
    9852:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9856:	48 8b 10             	mov    (%rax),%rdx
    9859:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    985d:	48 89 10             	mov    %rdx,(%rax)
    9860:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9864:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9868:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    986c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9870:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9874:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9878:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    987c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9880:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9884:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9888:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    988c:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9890:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9894:	48 8b 50 20          	mov    0x20(%rax),%rdx
    9898:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    989c:	48 89 50 20          	mov    %rdx,0x20(%rax)
    98a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98a4:	48 8b 50 28          	mov    0x28(%rax),%rdx
    98a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98ac:	48 89 50 28          	mov    %rdx,0x28(%rax)
    98b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98b4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    98b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98bc:	48 89 50 30          	mov    %rdx,0x30(%rax)
    98c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98c4:	48 8b 50 38          	mov    0x38(%rax),%rdx
    98c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98cc:	48 89 50 38          	mov    %rdx,0x38(%rax)
    98d0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98d4:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    98db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98df:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    98e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98ea:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    98f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98f5:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    98fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9900:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9904:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9908:	48 89 50 40          	mov    %rdx,0x40(%rax)
    990c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9910:	48 8b 50 48          	mov    0x48(%rax),%rdx
    9914:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9918:	48 89 50 48          	mov    %rdx,0x48(%rax)
    991c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9920:	48 8b 50 50          	mov    0x50(%rax),%rdx
    9924:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9928:	48 89 50 50          	mov    %rdx,0x50(%rax)
    992c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9930:	48 8b 50 58          	mov    0x58(%rax),%rdx
    9934:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9938:	48 89 50 58          	mov    %rdx,0x58(%rax)
    993c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9940:	48 8b 50 60          	mov    0x60(%rax),%rdx
    9944:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9948:	48 89 50 60          	mov    %rdx,0x60(%rax)
    994c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9950:	48 8b 50 68          	mov    0x68(%rax),%rdx
    9954:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9958:	48 89 50 68          	mov    %rdx,0x68(%rax)
    995c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9960:	48 8b 50 70          	mov    0x70(%rax),%rdx
    9964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9968:	48 89 50 70          	mov    %rdx,0x70(%rax)
    996c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9970:	48 8b 50 78          	mov    0x78(%rax),%rdx
    9974:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9978:	48 89 50 78          	mov    %rdx,0x78(%rax)
    997c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9980:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9984:	48 8d 15 64 f9 ff ff 	lea    -0x69c(%rip),%rdx        # 92ef <internal_handle_exception>
    998b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    998f:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    9996:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    999a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    999e:	48 89 50 20          	mov    %rdx,0x20(%rax)
    99a2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    99aa:	48 89 10             	mov    %rdx,(%rax)
    99ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    99b5:	48 89 50 38          	mov    %rdx,0x38(%rax)
    99b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99bd:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    99c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99c8:	48 89 10             	mov    %rdx,(%rax)
    99cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    99cf:	0f b6 90 a3 00 00 00 	movzbl 0xa3(%rax),%edx
    99d6:	83 e2 7f             	and    $0x7f,%edx
    99d9:	88 90 a3 00 00 00    	mov    %dl,0xa3(%rax)
    99df:	b8 00 00 00 00       	mov    $0x0,%eax
    99e4:	eb 1c                	jmp    9a02 <trts_handle_exception+0x4d6>
    99e6:	90                   	nop
    99e7:	eb 0a                	jmp    99f3 <trts_handle_exception+0x4c7>
    99e9:	90                   	nop
    99ea:	eb 07                	jmp    99f3 <trts_handle_exception+0x4c7>
    99ec:	90                   	nop
    99ed:	eb 04                	jmp    99f3 <trts_handle_exception+0x4c7>
    99ef:	90                   	nop
    99f0:	eb 01                	jmp    99f3 <trts_handle_exception+0x4c7>
    99f2:	90                   	nop
    99f3:	c7 05 83 e1 03 00 03 	movl   $0x3,0x3e183(%rip)        # 47b80 <g_enclave_state>
    99fa:	00 00 00 
    99fd:	b8 06 10 00 00       	mov    $0x1006,%eax
    9a02:	c9                   	leaveq 
    9a03:	c3                   	retq   

0000000000009a04 <get_xfeature_state>:
    9a04:	55                   	push   %rbp
    9a05:	48 89 e5             	mov    %rsp,%rbp
    9a08:	48 83 ec 10          	sub    $0x10,%rsp
    9a0c:	e8 42 0c 03 00       	callq  3a653 <sgx_self_report>
    9a11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9a15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a19:	48 8b 40 38          	mov    0x38(%rax),%rax
    9a1d:	48 83 f8 03          	cmp    $0x3,%rax
    9a21:	0f 95 c0             	setne  %al
    9a24:	0f b6 c0             	movzbl %al,%eax
    9a27:	89 05 57 e1 03 00    	mov    %eax,0x3e157(%rip)        # 47b84 <g_xsave_enabled>
    9a2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a31:	48 8b 40 38          	mov    0x38(%rax),%rax
    9a35:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a3d:	48 c1 e8 20          	shr    $0x20,%rax
    9a41:	89 05 41 e1 03 00    	mov    %eax,0x3e141(%rip)        # 47b88 <g_xsave_mask_high>
    9a47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a4b:	89 05 3b e1 03 00    	mov    %eax,0x3e13b(%rip)        # 47b8c <g_xsave_mask_low>
    9a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a55:	c9                   	leaveq 
    9a56:	c3                   	retq   

0000000000009a57 <_ZL28set_global_feature_indicatormm>:
    9a57:	55                   	push   %rbp
    9a58:	48 89 e5             	mov    %rsp,%rbp
    9a5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a63:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    9a6a:	00 00 ff 
    9a6d:	48 23 45 f8          	and    -0x8(%rbp),%rax
    9a71:	48 85 c0             	test   %rax,%rax
    9a74:	74 0e                	je     9a84 <_ZL28set_global_feature_indicatormm+0x2d>
    9a76:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    9a7d:	ff ff 00 
    9a80:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    9a84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a88:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
    9a8e:	48 85 c0             	test   %rax,%rax
    9a91:	75 0a                	jne    9a9d <_ZL28set_global_feature_indicatormm+0x46>
    9a93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9a98:	e9 ff 00 00 00       	jmpq   9b9c <_ZL28set_global_feature_indicatormm+0x145>
    9a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa1:	83 e0 20             	and    $0x20,%eax
    9aa4:	48 85 c0             	test   %rax,%rax
    9aa7:	74 11                	je     9aba <_ZL28set_global_feature_indicatormm+0x63>
    9aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aad:	83 e0 1f             	and    $0x1f,%eax
    9ab0:	48 83 f8 1f          	cmp    $0x1f,%rax
    9ab4:	0f 85 8f 00 00 00    	jne    9b49 <_ZL28set_global_feature_indicatormm+0xf2>
    9aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9abe:	83 e0 40             	and    $0x40,%eax
    9ac1:	48 85 c0             	test   %rax,%rax
    9ac4:	74 0d                	je     9ad3 <_ZL28set_global_feature_indicatormm+0x7c>
    9ac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aca:	83 e0 3f             	and    $0x3f,%eax
    9acd:	48 83 f8 3f          	cmp    $0x3f,%rax
    9ad1:	75 76                	jne    9b49 <_ZL28set_global_feature_indicatormm+0xf2>
    9ad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ad7:	25 80 00 00 00       	and    $0x80,%eax
    9adc:	48 85 c0             	test   %rax,%rax
    9adf:	74 0d                	je     9aee <_ZL28set_global_feature_indicatormm+0x97>
    9ae1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae5:	83 e0 7f             	and    $0x7f,%eax
    9ae8:	48 83 f8 7f          	cmp    $0x7f,%rax
    9aec:	75 5b                	jne    9b49 <_ZL28set_global_feature_indicatormm+0xf2>
    9aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af2:	25 00 01 00 00       	and    $0x100,%eax
    9af7:	48 85 c0             	test   %rax,%rax
    9afa:	74 0f                	je     9b0b <_ZL28set_global_feature_indicatormm+0xb4>
    9afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b00:	0f b6 c0             	movzbl %al,%eax
    9b03:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    9b09:	75 3e                	jne    9b49 <_ZL28set_global_feature_indicatormm+0xf2>
    9b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b0f:	25 00 02 00 00       	and    $0x200,%eax
    9b14:	48 85 c0             	test   %rax,%rax
    9b17:	74 11                	je     9b2a <_ZL28set_global_feature_indicatormm+0xd3>
    9b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1d:	25 ff 01 00 00       	and    $0x1ff,%eax
    9b22:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    9b28:	75 1f                	jne    9b49 <_ZL28set_global_feature_indicatormm+0xf2>
    9b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b2e:	25 00 04 00 00       	and    $0x400,%eax
    9b33:	48 85 c0             	test   %rax,%rax
    9b36:	74 18                	je     9b50 <_ZL28set_global_feature_indicatormm+0xf9>
    9b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b3c:	25 ff 03 00 00       	and    $0x3ff,%eax
    9b41:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    9b47:	74 07                	je     9b50 <_ZL28set_global_feature_indicatormm+0xf9>
    9b49:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9b4e:	eb 4c                	jmp    9b9c <_ZL28set_global_feature_indicatormm+0x145>
    9b50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b54:	83 e0 06             	and    $0x6,%eax
    9b57:	48 83 f8 06          	cmp    $0x6,%rax
    9b5b:	74 10                	je     9b6d <_ZL28set_global_feature_indicatormm+0x116>
    9b5d:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    9b64:	20 fe ff 
    9b67:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    9b6b:	eb 1f                	jmp    9b8c <_ZL28set_global_feature_indicatormm+0x135>
    9b6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b71:	25 e0 00 00 00       	and    $0xe0,%eax
    9b76:	48 3d e0 00 00 00    	cmp    $0xe0,%rax
    9b7c:	74 0e                	je     9b8c <_ZL28set_global_feature_indicatormm+0x135>
    9b7e:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    9b85:	e0 fe ff 
    9b88:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    9b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b90:	48 89 05 d9 d0 03 00 	mov    %rax,0x3d0d9(%rip)        # 46c70 <g_cpu_feature_indicator>
    9b97:	b8 00 00 00 00       	mov    $0x0,%eax
    9b9c:	5d                   	pop    %rbp
    9b9d:	c3                   	retq   

0000000000009b9e <init_optimized_libs>:
    9b9e:	55                   	push   %rbp
    9b9f:	48 89 e5             	mov    %rsp,%rbp
    9ba2:	48 83 ec 20          	sub    $0x20,%rsp
    9ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9baa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9bae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    9bb2:	8b 05 c8 df 03 00    	mov    0x3dfc8(%rip),%eax        # 47b80 <g_enclave_state>
    9bb8:	83 f8 01             	cmp    $0x1,%eax
    9bbb:	74 07                	je     9bc4 <init_optimized_libs+0x26>
    9bbd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9bc2:	eb 6d                	jmp    9c31 <init_optimized_libs+0x93>
    9bc4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bcc:	48 89 d6             	mov    %rdx,%rsi
    9bcf:	48 89 c7             	mov    %rax,%rdi
    9bd2:	e8 80 fe ff ff       	callq  9a57 <_ZL28set_global_feature_indicatormm>
    9bd7:	85 c0                	test   %eax,%eax
    9bd9:	0f 95 c0             	setne  %al
    9bdc:	84 c0                	test   %al,%al
    9bde:	74 07                	je     9be7 <init_optimized_libs+0x49>
    9be0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9be5:	eb 4a                	jmp    9c31 <init_optimized_libs+0x93>
    9be7:	48 8b 05 82 d0 03 00 	mov    0x3d082(%rip),%rax        # 46c70 <g_cpu_feature_indicator>
    9bee:	48 89 c7             	mov    %rax,%rdi
    9bf1:	e8 ec 9f 00 00       	callq  13be2 <sgx_init_string_lib>
    9bf6:	85 c0                	test   %eax,%eax
    9bf8:	0f 95 c0             	setne  %al
    9bfb:	84 c0                	test   %al,%al
    9bfd:	74 07                	je     9c06 <init_optimized_libs+0x68>
    9bff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9c04:	eb 2b                	jmp    9c31 <init_optimized_libs+0x93>
    9c06:	48 8b 05 63 d0 03 00 	mov    0x3d063(%rip),%rax        # 46c70 <g_cpu_feature_indicator>
    9c0d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c11:	48 89 d6             	mov    %rdx,%rsi
    9c14:	48 89 c7             	mov    %rax,%rdi
    9c17:	e8 73 4c 02 00       	callq  2e88f <sgx_init_crypto_lib>
    9c1c:	85 c0                	test   %eax,%eax
    9c1e:	0f 95 c0             	setne  %al
    9c21:	84 c0                	test   %al,%al
    9c23:	74 07                	je     9c2c <init_optimized_libs+0x8e>
    9c25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9c2a:	eb 05                	jmp    9c31 <init_optimized_libs+0x93>
    9c2c:	b8 00 00 00 00       	mov    $0x0,%eax
    9c31:	c9                   	leaveq 
    9c32:	c3                   	retq   

0000000000009c33 <apply_pages_within_exception>:
    9c33:	55                   	push   %rbp
    9c34:	48 89 e5             	mov    %rsp,%rbp
    9c37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c3f:	b8 00 00 00 00       	mov    $0x0,%eax
    9c44:	5d                   	pop    %rbp
    9c45:	c3                   	retq   

0000000000009c46 <apply_EPC_pages>:
    9c46:	55                   	push   %rbp
    9c47:	48 89 e5             	mov    %rsp,%rbp
    9c4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c52:	b8 00 00 00 00       	mov    $0x0,%eax
    9c57:	5d                   	pop    %rbp
    9c58:	c3                   	retq   

0000000000009c59 <trim_EPC_pages>:
    9c59:	55                   	push   %rbp
    9c5a:	48 89 e5             	mov    %rsp,%rbp
    9c5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c65:	b8 00 00 00 00       	mov    $0x0,%eax
    9c6a:	5d                   	pop    %rbp
    9c6b:	c3                   	retq   

0000000000009c6c <do_add_thread>:
    9c6c:	55                   	push   %rbp
    9c6d:	48 89 e5             	mov    %rsp,%rbp
    9c70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c74:	b8 00 00 00 00       	mov    $0x0,%eax
    9c79:	5d                   	pop    %rbp
    9c7a:	c3                   	retq   

0000000000009c7b <_ZL8_EGETKEYP14_key_request_tPh>:
    9c7b:	55                   	push   %rbp
    9c7c:	48 89 e5             	mov    %rsp,%rbp
    9c7f:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
    9c86:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    9c8d:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
    9c94:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9c9b:	00 00 
    9c9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9ca1:	31 c0                	xor    %eax,%eax
    9ca3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9caa:	25 ff 01 00 00       	and    $0x1ff,%eax
    9caf:	48 85 c0             	test   %rax,%rax
    9cb2:	0f 95 c0             	setne  %al
    9cb5:	0f b6 c0             	movzbl %al,%eax
    9cb8:	48 85 c0             	test   %rax,%rax
    9cbb:	74 05                	je     9cc2 <_ZL8_EGETKEYP14_key_request_tPh+0x47>
    9cbd:	e8 17 19 03 00       	callq  3b5d9 <abort>
    9cc2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9cc9:	be 00 02 00 00       	mov    $0x200,%esi
    9cce:	48 89 c7             	mov    %rax,%rdi
    9cd1:	e8 db e0 ff ff       	callq  7db1 <sgx_is_within_enclave>
    9cd6:	85 c0                	test   %eax,%eax
    9cd8:	0f 94 c0             	sete   %al
    9cdb:	0f b6 c0             	movzbl %al,%eax
    9cde:	48 85 c0             	test   %rax,%rax
    9ce1:	0f 95 c0             	setne  %al
    9ce4:	84 c0                	test   %al,%al
    9ce6:	74 05                	je     9ced <_ZL8_EGETKEYP14_key_request_tPh+0x72>
    9ce8:	e8 ec 18 03 00       	callq  3b5d9 <abort>
    9ced:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    9cf4:	83 e0 0f             	and    $0xf,%eax
    9cf7:	48 85 c0             	test   %rax,%rax
    9cfa:	0f 95 c0             	setne  %al
    9cfd:	0f b6 c0             	movzbl %al,%eax
    9d00:	48 85 c0             	test   %rax,%rax
    9d03:	74 05                	je     9d0a <_ZL8_EGETKEYP14_key_request_tPh+0x8f>
    9d05:	e8 cf 18 03 00       	callq  3b5d9 <abort>
    9d0a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    9d11:	be 10 00 00 00       	mov    $0x10,%esi
    9d16:	48 89 c7             	mov    %rax,%rdi
    9d19:	e8 93 e0 ff ff       	callq  7db1 <sgx_is_within_enclave>
    9d1e:	85 c0                	test   %eax,%eax
    9d20:	0f 94 c0             	sete   %al
    9d23:	0f b6 c0             	movzbl %al,%eax
    9d26:	48 85 c0             	test   %rax,%rax
    9d29:	0f 95 c0             	setne  %al
    9d2c:	84 c0                	test   %al,%al
    9d2e:	74 05                	je     9d35 <_ZL8_EGETKEYP14_key_request_tPh+0xba>
    9d30:	e8 a4 18 03 00       	callq  3b5d9 <abort>
    9d35:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9d3c:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    9d40:	0f b7 c0             	movzwl %ax,%eax
    9d43:	83 e0 fc             	and    $0xfffffffc,%eax
    9d46:	85 c0                	test   %eax,%eax
    9d48:	0f 95 c0             	setne  %al
    9d4b:	0f b6 c0             	movzbl %al,%eax
    9d4e:	48 85 c0             	test   %rax,%rax
    9d51:	74 05                	je     9d58 <_ZL8_EGETKEYP14_key_request_tPh+0xdd>
    9d53:	e8 81 18 03 00       	callq  3b5d9 <abort>
    9d58:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9d5f:	48 83 c0 06          	add    $0x6,%rax
    9d63:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    9d6a:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%rbp)
    9d71:	00 00 00 
    9d74:	83 bd 18 ff ff ff 01 	cmpl   $0x1,-0xe8(%rbp)
    9d7b:	77 2e                	ja     9dab <_ZL8_EGETKEYP14_key_request_tPh+0x130>
    9d7d:	8b 95 18 ff ff ff    	mov    -0xe8(%rbp),%edx
    9d83:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    9d8a:	48 01 d0             	add    %rdx,%rax
    9d8d:	0f b6 00             	movzbl (%rax),%eax
    9d90:	84 c0                	test   %al,%al
    9d92:	0f 95 c0             	setne  %al
    9d95:	0f b6 c0             	movzbl %al,%eax
    9d98:	48 85 c0             	test   %rax,%rax
    9d9b:	74 05                	je     9da2 <_ZL8_EGETKEYP14_key_request_tPh+0x127>
    9d9d:	e8 37 18 03 00       	callq  3b5d9 <abort>
    9da2:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%rbp)
    9da9:	eb c9                	jmp    9d74 <_ZL8_EGETKEYP14_key_request_tPh+0xf9>
    9dab:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9db2:	48 83 c0 4e          	add    $0x4e,%rax
    9db6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    9dbd:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%rbp)
    9dc4:	00 00 00 
    9dc7:	81 bd 1c ff ff ff b1 	cmpl   $0x1b1,-0xe4(%rbp)
    9dce:	01 00 00 
    9dd1:	77 2e                	ja     9e01 <_ZL8_EGETKEYP14_key_request_tPh+0x186>
    9dd3:	8b 95 1c ff ff ff    	mov    -0xe4(%rbp),%edx
    9dd9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    9de0:	48 01 d0             	add    %rdx,%rax
    9de3:	0f b6 00             	movzbl (%rax),%eax
    9de6:	84 c0                	test   %al,%al
    9de8:	0f 95 c0             	setne  %al
    9deb:	0f b6 c0             	movzbl %al,%eax
    9dee:	48 85 c0             	test   %rax,%rax
    9df1:	74 05                	je     9df8 <_ZL8_EGETKEYP14_key_request_tPh+0x17d>
    9df3:	e8 e1 17 03 00       	callq  3b5d9 <abort>
    9df8:	83 85 1c ff ff ff 01 	addl   $0x1,-0xe4(%rbp)
    9dff:	eb c6                	jmp    9dc7 <_ZL8_EGETKEYP14_key_request_tPh+0x14c>
    9e01:	48 8b 05 d8 dd 03 00 	mov    0x3ddd8(%rip),%rax        # 47be0 <g_global_data_sim>
    9e08:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    9e0f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    9e16:	ba b8 00 00 00       	mov    $0xb8,%edx
    9e1b:	be 00 00 00 00       	mov    $0x0,%esi
    9e20:	48 89 c7             	mov    %rax,%rdi
    9e23:	e8 0d 99 00 00       	callq  13735 <memset>
    9e28:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9e2f:	0f b7 00             	movzwl (%rax),%eax
    9e32:	66 89 85 48 ff ff ff 	mov    %ax,-0xb8(%rbp)
    9e39:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    9e40:	ba 10 00 00 00       	mov    $0x10,%edx
    9e45:	be 00 00 00 00       	mov    $0x0,%esi
    9e4a:	48 89 c7             	mov    %rax,%rdi
    9e4d:	e8 e3 98 00 00       	callq  13735 <memset>
    9e52:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9e59:	48 8b 40 18          	mov    0x18(%rax),%rax
    9e5d:	48 83 c8 03          	or     $0x3,%rax
    9e61:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    9e68:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    9e6f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    9e76:	48 8b 40 30          	mov    0x30(%rax),%rax
    9e7a:	48 21 d0             	and    %rdx,%rax
    9e7d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    9e84:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9e8b:	48 8b 50 20          	mov    0x20(%rax),%rdx
    9e8f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    9e96:	48 8b 40 38          	mov    0x38(%rax),%rax
    9e9a:	48 21 d0             	and    %rdx,%rax
    9e9d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    9ea4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9eab:	48 83 c0 08          	add    $0x8,%rax
    9eaf:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    9eb6:	48 8d 4a 30          	lea    0x30(%rdx),%rcx
    9eba:	ba 10 00 00 00       	mov    $0x10,%edx
    9ebf:	48 89 ce             	mov    %rcx,%rsi
    9ec2:	48 89 c7             	mov    %rax,%rdi
    9ec5:	e8 5f 96 00 00       	callq  13529 <memcmp>
    9eca:	85 c0                	test   %eax,%eax
    9ecc:	0f 94 c0             	sete   %al
    9ecf:	84 c0                	test   %al,%al
    9ed1:	74 1f                	je     9ef2 <_ZL8_EGETKEYP14_key_request_tPh+0x277>
    9ed3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9eda:	48 83 c0 08          	add    $0x8,%rax
    9ede:	ba 10 00 00 00       	mov    $0x10,%edx
    9ee3:	48 8d 35 26 28 03 00 	lea    0x32826(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    9eea:	48 89 c7             	mov    %rax,%rdi
    9eed:	e8 d5 97 00 00       	callq  136c7 <memcpy>
    9ef2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9ef9:	0f b7 00             	movzwl (%rax),%eax
    9efc:	0f b7 c0             	movzwl %ax,%eax
    9eff:	83 f8 04             	cmp    $0x4,%eax
    9f02:	0f 87 c8 07 00 00    	ja     a6d0 <_ZL8_EGETKEYP14_key_request_tPh+0xa55>
    9f08:	89 c0                	mov    %eax,%eax
    9f0a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9f11:	00 
    9f12:	48 8d 05 37 28 03 00 	lea    0x32837(%rip),%rax        # 3c750 <_ZL20SIMU_OWNER_EPOCH_MSR+0x10>
    9f19:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    9f1c:	48 63 d0             	movslq %eax,%rdx
    9f1f:	48 8d 05 2a 28 03 00 	lea    0x3282a(%rip),%rax        # 3c750 <_ZL20SIMU_OWNER_EPOCH_MSR+0x10>
    9f26:	48 01 d0             	add    %rdx,%rax
    9f29:	ff e0                	jmpq   *%rax
    9f2b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9f32:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    9f36:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    9f3d:	0f b7 80 02 01 00 00 	movzwl 0x102(%rax),%eax
    9f44:	66 39 c2             	cmp    %ax,%dx
    9f47:	76 0a                	jbe    9f53 <_ZL8_EGETKEYP14_key_request_tPh+0x2d8>
    9f49:	b8 40 00 00 00       	mov    $0x40,%eax
    9f4e:	e9 a2 07 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    9f53:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9f5a:	48 83 c0 08          	add    $0x8,%rax
    9f5e:	ba 10 00 00 00       	mov    $0x10,%edx
    9f63:	48 8d 35 b6 27 03 00 	lea    0x327b6(%rip),%rsi        # 3c720 <_ZL15UPGRADED_CPUSVN>
    9f6a:	48 89 c7             	mov    %rax,%rdi
    9f6d:	e8 b7 95 00 00       	callq  13529 <memcmp>
    9f72:	85 c0                	test   %eax,%eax
    9f74:	74 4d                	je     9fc3 <_ZL8_EGETKEYP14_key_request_tPh+0x348>
    9f76:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9f7d:	48 83 c0 08          	add    $0x8,%rax
    9f81:	ba 10 00 00 00       	mov    $0x10,%edx
    9f86:	48 8d 35 83 27 03 00 	lea    0x32783(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    9f8d:	48 89 c7             	mov    %rax,%rdi
    9f90:	e8 94 95 00 00       	callq  13529 <memcmp>
    9f95:	85 c0                	test   %eax,%eax
    9f97:	74 2a                	je     9fc3 <_ZL8_EGETKEYP14_key_request_tPh+0x348>
    9f99:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9fa0:	48 83 c0 08          	add    $0x8,%rax
    9fa4:	ba 10 00 00 00       	mov    $0x10,%edx
    9fa9:	48 8d 35 80 27 03 00 	lea    0x32780(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    9fb0:	48 89 c7             	mov    %rax,%rdi
    9fb3:	e8 71 95 00 00       	callq  13529 <memcmp>
    9fb8:	85 c0                	test   %eax,%eax
    9fba:	74 07                	je     9fc3 <_ZL8_EGETKEYP14_key_request_tPh+0x348>
    9fbc:	b8 01 00 00 00       	mov    $0x1,%eax
    9fc1:	eb 05                	jmp    9fc8 <_ZL8_EGETKEYP14_key_request_tPh+0x34d>
    9fc3:	b8 00 00 00 00       	mov    $0x0,%eax
    9fc8:	84 c0                	test   %al,%al
    9fca:	74 0a                	je     9fd6 <_ZL8_EGETKEYP14_key_request_tPh+0x35b>
    9fcc:	b8 20 00 00 00       	mov    $0x20,%eax
    9fd1:	e9 1f 07 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    9fd6:	ba 10 00 00 00       	mov    $0x10,%edx
    9fdb:	48 8d 35 2e 27 03 00 	lea    0x3272e(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    9fe2:	48 8d 3d ff db 03 00 	lea    0x3dbff(%rip),%rdi        # 47be8 <g_global_data_sim+0x8>
    9fe9:	e8 3b 95 00 00       	callq  13529 <memcmp>
    9fee:	85 c0                	test   %eax,%eax
    9ff0:	75 23                	jne    a015 <_ZL8_EGETKEYP14_key_request_tPh+0x39a>
    9ff2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9ff9:	48 83 c0 08          	add    $0x8,%rax
    9ffd:	ba 10 00 00 00       	mov    $0x10,%edx
    a002:	48 8d 35 17 27 03 00 	lea    0x32717(%rip),%rsi        # 3c720 <_ZL15UPGRADED_CPUSVN>
    a009:	48 89 c7             	mov    %rax,%rdi
    a00c:	e8 18 95 00 00       	callq  13529 <memcmp>
    a011:	85 c0                	test   %eax,%eax
    a013:	74 3f                	je     a054 <_ZL8_EGETKEYP14_key_request_tPh+0x3d9>
    a015:	ba 10 00 00 00       	mov    $0x10,%edx
    a01a:	48 8d 35 0f 27 03 00 	lea    0x3270f(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a021:	48 8d 3d c0 db 03 00 	lea    0x3dbc0(%rip),%rdi        # 47be8 <g_global_data_sim+0x8>
    a028:	e8 fc 94 00 00       	callq  13529 <memcmp>
    a02d:	85 c0                	test   %eax,%eax
    a02f:	75 2a                	jne    a05b <_ZL8_EGETKEYP14_key_request_tPh+0x3e0>
    a031:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a038:	48 83 c0 08          	add    $0x8,%rax
    a03c:	ba 10 00 00 00       	mov    $0x10,%edx
    a041:	48 8d 35 e8 26 03 00 	lea    0x326e8(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a048:	48 89 c7             	mov    %rax,%rdi
    a04b:	e8 d9 94 00 00       	callq  13529 <memcmp>
    a050:	85 c0                	test   %eax,%eax
    a052:	74 07                	je     a05b <_ZL8_EGETKEYP14_key_request_tPh+0x3e0>
    a054:	b8 01 00 00 00       	mov    $0x1,%eax
    a059:	eb 05                	jmp    a060 <_ZL8_EGETKEYP14_key_request_tPh+0x3e5>
    a05b:	b8 00 00 00 00       	mov    $0x0,%eax
    a060:	84 c0                	test   %al,%al
    a062:	74 0a                	je     a06e <_ZL8_EGETKEYP14_key_request_tPh+0x3f3>
    a064:	b8 20 00 00 00       	mov    $0x20,%eax
    a069:	e9 87 06 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a06e:	c7 85 40 ff ff ff b0 	movl   $0xb0,-0xc0(%rbp)
    a075:	00 00 00 
    a078:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a07f:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    a083:	0f b7 c0             	movzwl %ax,%eax
    a086:	83 e0 01             	and    $0x1,%eax
    a089:	85 c0                	test   %eax,%eax
    a08b:	74 26                	je     a0b3 <_ZL8_EGETKEYP14_key_request_tPh+0x438>
    a08d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a094:	48 8d 48 40          	lea    0x40(%rax),%rcx
    a098:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a09f:	48 83 c0 54          	add    $0x54,%rax
    a0a3:	ba 20 00 00 00       	mov    $0x20,%edx
    a0a8:	48 89 ce             	mov    %rcx,%rsi
    a0ab:	48 89 c7             	mov    %rax,%rdi
    a0ae:	e8 14 96 00 00       	callq  136c7 <memcpy>
    a0b3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a0ba:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    a0be:	0f b7 c0             	movzwl %ax,%eax
    a0c1:	83 e0 02             	and    $0x2,%eax
    a0c4:	85 c0                	test   %eax,%eax
    a0c6:	74 29                	je     a0f1 <_ZL8_EGETKEYP14_key_request_tPh+0x476>
    a0c8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a0cf:	48 8d 88 80 00 00 00 	lea    0x80(%rax),%rcx
    a0d6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a0dd:	48 83 c0 74          	add    $0x74,%rax
    a0e1:	ba 20 00 00 00       	mov    $0x20,%edx
    a0e6:	48 89 ce             	mov    %rcx,%rsi
    a0e9:	48 89 c7             	mov    %rax,%rdi
    a0ec:	e8 d6 95 00 00       	callq  136c7 <memcpy>
    a0f1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    a0f8:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    a0ff:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    a103:	ba 10 00 00 00       	mov    $0x10,%edx
    a108:	48 89 c6             	mov    %rax,%rsi
    a10b:	48 89 cf             	mov    %rcx,%rdi
    a10e:	e8 b4 95 00 00       	callq  136c7 <memcpy>
    a113:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a11a:	48 8d 48 18          	lea    0x18(%rax),%rcx
    a11e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a125:	48 83 c0 20          	add    $0x20,%rax
    a129:	ba 10 00 00 00       	mov    $0x10,%edx
    a12e:	48 89 ce             	mov    %rcx,%rsi
    a131:	48 89 c7             	mov    %rax,%rdi
    a134:	e8 8e 95 00 00       	callq  136c7 <memcpy>
    a139:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a140:	48 83 c0 30          	add    $0x30,%rax
    a144:	ba 10 00 00 00       	mov    $0x10,%edx
    a149:	48 8d 35 f0 25 03 00 	lea    0x325f0(%rip),%rsi        # 3c740 <_ZL20SIMU_OWNER_EPOCH_MSR>
    a150:	48 89 c7             	mov    %rax,%rdi
    a153:	e8 6f 95 00 00       	callq  136c7 <memcpy>
    a158:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a15f:	48 8d 48 08          	lea    0x8(%rax),%rcx
    a163:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a16a:	48 83 c0 40          	add    $0x40,%rax
    a16e:	ba 10 00 00 00       	mov    $0x10,%edx
    a173:	48 89 ce             	mov    %rcx,%rsi
    a176:	48 89 c7             	mov    %rax,%rdi
    a179:	e8 49 95 00 00       	callq  136c7 <memcpy>
    a17e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a185:	0f b7 40 04          	movzwl 0x4(%rax),%eax
    a189:	66 89 45 90          	mov    %ax,-0x70(%rbp)
    a18d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a194:	0f b7 80 00 01 00 00 	movzwl 0x100(%rax),%eax
    a19b:	66 89 45 92          	mov    %ax,-0x6e(%rbp)
    a19f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a1a6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    a1aa:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a1b1:	48 05 94 00 00 00    	add    $0x94,%rax
    a1b7:	ba 20 00 00 00       	mov    $0x20,%edx
    a1bc:	48 89 ce             	mov    %rcx,%rsi
    a1bf:	48 89 c7             	mov    %rax,%rdi
    a1c2:	e8 00 95 00 00       	callq  136c7 <memcpy>
    a1c7:	e9 0b 05 00 00       	jmpq   a6d7 <_ZL8_EGETKEYP14_key_request_tPh+0xa5c>
    a1cc:	c7 85 40 ff ff ff 78 	movl   $0x78,-0xc0(%rbp)
    a1d3:	00 00 00 
    a1d6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a1dd:	48 8d 48 30          	lea    0x30(%rax),%rcx
    a1e1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a1e8:	48 83 c0 10          	add    $0x10,%rax
    a1ec:	ba 10 00 00 00       	mov    $0x10,%edx
    a1f1:	48 89 ce             	mov    %rcx,%rsi
    a1f4:	48 89 c7             	mov    %rax,%rdi
    a1f7:	e8 cb 94 00 00       	callq  136c7 <memcpy>
    a1fc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a203:	48 83 c0 20          	add    $0x20,%rax
    a207:	ba 10 00 00 00       	mov    $0x10,%edx
    a20c:	48 8d 35 2d 25 03 00 	lea    0x3252d(%rip),%rsi        # 3c740 <_ZL20SIMU_OWNER_EPOCH_MSR>
    a213:	48 89 c7             	mov    %rax,%rdi
    a216:	e8 ac 94 00 00       	callq  136c7 <memcpy>
    a21b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a222:	48 83 c0 50          	add    $0x50,%rax
    a226:	ba 10 00 00 00       	mov    $0x10,%edx
    a22b:	48 8d 35 b6 d9 03 00 	lea    0x3d9b6(%rip),%rsi        # 47be8 <g_global_data_sim+0x8>
    a232:	48 89 c7             	mov    %rax,%rdi
    a235:	e8 8d 94 00 00       	callq  136c7 <memcpy>
    a23a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a241:	48 8d 48 40          	lea    0x40(%rax),%rcx
    a245:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a24c:	48 83 c0 30          	add    $0x30,%rax
    a250:	ba 20 00 00 00       	mov    $0x20,%edx
    a255:	48 89 ce             	mov    %rcx,%rsi
    a258:	48 89 c7             	mov    %rax,%rdi
    a25b:	e8 67 94 00 00       	callq  136c7 <memcpy>
    a260:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a267:	48 8d 48 28          	lea    0x28(%rax),%rcx
    a26b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a272:	48 83 c0 60          	add    $0x60,%rax
    a276:	ba 20 00 00 00       	mov    $0x20,%edx
    a27b:	48 89 ce             	mov    %rcx,%rsi
    a27e:	48 89 c7             	mov    %rax,%rdi
    a281:	e8 41 94 00 00       	callq  136c7 <memcpy>
    a286:	e9 4c 04 00 00       	jmpq   a6d7 <_ZL8_EGETKEYP14_key_request_tPh+0xa5c>
    a28b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a292:	48 8b 40 30          	mov    0x30(%rax),%rax
    a296:	83 e0 20             	and    $0x20,%eax
    a299:	48 85 c0             	test   %rax,%rax
    a29c:	75 0a                	jne    a2a8 <_ZL8_EGETKEYP14_key_request_tPh+0x62d>
    a29e:	b8 02 00 00 00       	mov    $0x2,%eax
    a2a3:	e9 4d 04 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a2a8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a2af:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    a2b3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a2ba:	0f b7 80 02 01 00 00 	movzwl 0x102(%rax),%eax
    a2c1:	66 39 c2             	cmp    %ax,%dx
    a2c4:	76 0a                	jbe    a2d0 <_ZL8_EGETKEYP14_key_request_tPh+0x655>
    a2c6:	b8 40 00 00 00       	mov    $0x40,%eax
    a2cb:	e9 25 04 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a2d0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a2d7:	48 83 c0 08          	add    $0x8,%rax
    a2db:	ba 10 00 00 00       	mov    $0x10,%edx
    a2e0:	48 8d 35 39 24 03 00 	lea    0x32439(%rip),%rsi        # 3c720 <_ZL15UPGRADED_CPUSVN>
    a2e7:	48 89 c7             	mov    %rax,%rdi
    a2ea:	e8 3a 92 00 00       	callq  13529 <memcmp>
    a2ef:	85 c0                	test   %eax,%eax
    a2f1:	74 4d                	je     a340 <_ZL8_EGETKEYP14_key_request_tPh+0x6c5>
    a2f3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a2fa:	48 83 c0 08          	add    $0x8,%rax
    a2fe:	ba 10 00 00 00       	mov    $0x10,%edx
    a303:	48 8d 35 06 24 03 00 	lea    0x32406(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    a30a:	48 89 c7             	mov    %rax,%rdi
    a30d:	e8 17 92 00 00       	callq  13529 <memcmp>
    a312:	85 c0                	test   %eax,%eax
    a314:	74 2a                	je     a340 <_ZL8_EGETKEYP14_key_request_tPh+0x6c5>
    a316:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a31d:	48 83 c0 08          	add    $0x8,%rax
    a321:	ba 10 00 00 00       	mov    $0x10,%edx
    a326:	48 8d 35 03 24 03 00 	lea    0x32403(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a32d:	48 89 c7             	mov    %rax,%rdi
    a330:	e8 f4 91 00 00       	callq  13529 <memcmp>
    a335:	85 c0                	test   %eax,%eax
    a337:	74 07                	je     a340 <_ZL8_EGETKEYP14_key_request_tPh+0x6c5>
    a339:	b8 01 00 00 00       	mov    $0x1,%eax
    a33e:	eb 05                	jmp    a345 <_ZL8_EGETKEYP14_key_request_tPh+0x6ca>
    a340:	b8 00 00 00 00       	mov    $0x0,%eax
    a345:	84 c0                	test   %al,%al
    a347:	74 0a                	je     a353 <_ZL8_EGETKEYP14_key_request_tPh+0x6d8>
    a349:	b8 20 00 00 00       	mov    $0x20,%eax
    a34e:	e9 a2 03 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a353:	ba 10 00 00 00       	mov    $0x10,%edx
    a358:	48 8d 35 b1 23 03 00 	lea    0x323b1(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    a35f:	48 8d 3d 82 d8 03 00 	lea    0x3d882(%rip),%rdi        # 47be8 <g_global_data_sim+0x8>
    a366:	e8 be 91 00 00       	callq  13529 <memcmp>
    a36b:	85 c0                	test   %eax,%eax
    a36d:	75 23                	jne    a392 <_ZL8_EGETKEYP14_key_request_tPh+0x717>
    a36f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a376:	48 83 c0 08          	add    $0x8,%rax
    a37a:	ba 10 00 00 00       	mov    $0x10,%edx
    a37f:	48 8d 35 9a 23 03 00 	lea    0x3239a(%rip),%rsi        # 3c720 <_ZL15UPGRADED_CPUSVN>
    a386:	48 89 c7             	mov    %rax,%rdi
    a389:	e8 9b 91 00 00       	callq  13529 <memcmp>
    a38e:	85 c0                	test   %eax,%eax
    a390:	74 3f                	je     a3d1 <_ZL8_EGETKEYP14_key_request_tPh+0x756>
    a392:	ba 10 00 00 00       	mov    $0x10,%edx
    a397:	48 8d 35 92 23 03 00 	lea    0x32392(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a39e:	48 8d 3d 43 d8 03 00 	lea    0x3d843(%rip),%rdi        # 47be8 <g_global_data_sim+0x8>
    a3a5:	e8 7f 91 00 00       	callq  13529 <memcmp>
    a3aa:	85 c0                	test   %eax,%eax
    a3ac:	75 2a                	jne    a3d8 <_ZL8_EGETKEYP14_key_request_tPh+0x75d>
    a3ae:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a3b5:	48 83 c0 08          	add    $0x8,%rax
    a3b9:	ba 10 00 00 00       	mov    $0x10,%edx
    a3be:	48 8d 35 6b 23 03 00 	lea    0x3236b(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a3c5:	48 89 c7             	mov    %rax,%rdi
    a3c8:	e8 5c 91 00 00       	callq  13529 <memcmp>
    a3cd:	85 c0                	test   %eax,%eax
    a3cf:	74 07                	je     a3d8 <_ZL8_EGETKEYP14_key_request_tPh+0x75d>
    a3d1:	b8 01 00 00 00       	mov    $0x1,%eax
    a3d6:	eb 05                	jmp    a3dd <_ZL8_EGETKEYP14_key_request_tPh+0x762>
    a3d8:	b8 00 00 00 00       	mov    $0x0,%eax
    a3dd:	84 c0                	test   %al,%al
    a3df:	74 0a                	je     a3eb <_ZL8_EGETKEYP14_key_request_tPh+0x770>
    a3e1:	b8 20 00 00 00       	mov    $0x20,%eax
    a3e6:	e9 0a 03 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a3eb:	c7 85 40 ff ff ff 60 	movl   $0x60,-0xc0(%rbp)
    a3f2:	00 00 00 
    a3f5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a3fc:	48 8d 48 30          	lea    0x30(%rax),%rcx
    a400:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a407:	48 83 c0 10          	add    $0x10,%rax
    a40b:	ba 10 00 00 00       	mov    $0x10,%edx
    a410:	48 89 ce             	mov    %rcx,%rsi
    a413:	48 89 c7             	mov    %rax,%rdi
    a416:	e8 ac 92 00 00       	callq  136c7 <memcpy>
    a41b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a422:	48 83 c0 20          	add    $0x20,%rax
    a426:	ba 10 00 00 00       	mov    $0x10,%edx
    a42b:	48 8d 35 0e 23 03 00 	lea    0x3230e(%rip),%rsi        # 3c740 <_ZL20SIMU_OWNER_EPOCH_MSR>
    a432:	48 89 c7             	mov    %rax,%rdi
    a435:	e8 8d 92 00 00       	callq  136c7 <memcpy>
    a43a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a441:	48 8d 48 08          	lea    0x8(%rax),%rcx
    a445:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a44c:	48 83 c0 30          	add    $0x30,%rax
    a450:	ba 10 00 00 00       	mov    $0x10,%edx
    a455:	48 89 ce             	mov    %rcx,%rsi
    a458:	48 89 c7             	mov    %rax,%rdi
    a45b:	e8 67 92 00 00       	callq  136c7 <memcpy>
    a460:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a467:	0f b7 40 04          	movzwl 0x4(%rax),%eax
    a46b:	66 89 45 80          	mov    %ax,-0x80(%rbp)
    a46f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a476:	0f b7 80 00 01 00 00 	movzwl 0x100(%rax),%eax
    a47d:	66 89 45 82          	mov    %ax,-0x7e(%rbp)
    a481:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a488:	48 8d 48 28          	lea    0x28(%rax),%rcx
    a48c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a493:	48 83 c0 44          	add    $0x44,%rax
    a497:	ba 20 00 00 00       	mov    $0x20,%edx
    a49c:	48 89 ce             	mov    %rcx,%rsi
    a49f:	48 89 c7             	mov    %rax,%rdi
    a4a2:	e8 20 92 00 00       	callq  136c7 <memcpy>
    a4a7:	e9 2b 02 00 00       	jmpq   a6d7 <_ZL8_EGETKEYP14_key_request_tPh+0xa5c>
    a4ac:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a4b3:	48 8b 40 30          	mov    0x30(%rax),%rax
    a4b7:	83 e0 10             	and    $0x10,%eax
    a4ba:	48 85 c0             	test   %rax,%rax
    a4bd:	75 0a                	jne    a4c9 <_ZL8_EGETKEYP14_key_request_tPh+0x84e>
    a4bf:	b8 02 00 00 00       	mov    $0x2,%eax
    a4c4:	e9 2c 02 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a4c9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a4d0:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    a4d4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a4db:	0f b7 80 02 01 00 00 	movzwl 0x102(%rax),%eax
    a4e2:	66 39 c2             	cmp    %ax,%dx
    a4e5:	76 0a                	jbe    a4f1 <_ZL8_EGETKEYP14_key_request_tPh+0x876>
    a4e7:	b8 40 00 00 00       	mov    $0x40,%eax
    a4ec:	e9 04 02 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a4f1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a4f8:	48 83 c0 08          	add    $0x8,%rax
    a4fc:	ba 10 00 00 00       	mov    $0x10,%edx
    a501:	48 8d 35 18 22 03 00 	lea    0x32218(%rip),%rsi        # 3c720 <_ZL15UPGRADED_CPUSVN>
    a508:	48 89 c7             	mov    %rax,%rdi
    a50b:	e8 19 90 00 00       	callq  13529 <memcmp>
    a510:	85 c0                	test   %eax,%eax
    a512:	74 4d                	je     a561 <_ZL8_EGETKEYP14_key_request_tPh+0x8e6>
    a514:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a51b:	48 83 c0 08          	add    $0x8,%rax
    a51f:	ba 10 00 00 00       	mov    $0x10,%edx
    a524:	48 8d 35 e5 21 03 00 	lea    0x321e5(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    a52b:	48 89 c7             	mov    %rax,%rdi
    a52e:	e8 f6 8f 00 00       	callq  13529 <memcmp>
    a533:	85 c0                	test   %eax,%eax
    a535:	74 2a                	je     a561 <_ZL8_EGETKEYP14_key_request_tPh+0x8e6>
    a537:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a53e:	48 83 c0 08          	add    $0x8,%rax
    a542:	ba 10 00 00 00       	mov    $0x10,%edx
    a547:	48 8d 35 e2 21 03 00 	lea    0x321e2(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a54e:	48 89 c7             	mov    %rax,%rdi
    a551:	e8 d3 8f 00 00       	callq  13529 <memcmp>
    a556:	85 c0                	test   %eax,%eax
    a558:	74 07                	je     a561 <_ZL8_EGETKEYP14_key_request_tPh+0x8e6>
    a55a:	b8 01 00 00 00       	mov    $0x1,%eax
    a55f:	eb 05                	jmp    a566 <_ZL8_EGETKEYP14_key_request_tPh+0x8eb>
    a561:	b8 00 00 00 00       	mov    $0x0,%eax
    a566:	84 c0                	test   %al,%al
    a568:	74 0a                	je     a574 <_ZL8_EGETKEYP14_key_request_tPh+0x8f9>
    a56a:	b8 20 00 00 00       	mov    $0x20,%eax
    a56f:	e9 81 01 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a574:	ba 10 00 00 00       	mov    $0x10,%edx
    a579:	48 8d 35 90 21 03 00 	lea    0x32190(%rip),%rsi        # 3c710 <_ZL14DEFAULT_CPUSVN>
    a580:	48 8d 3d 61 d6 03 00 	lea    0x3d661(%rip),%rdi        # 47be8 <g_global_data_sim+0x8>
    a587:	e8 9d 8f 00 00       	callq  13529 <memcmp>
    a58c:	85 c0                	test   %eax,%eax
    a58e:	75 23                	jne    a5b3 <_ZL8_EGETKEYP14_key_request_tPh+0x938>
    a590:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a597:	48 83 c0 08          	add    $0x8,%rax
    a59b:	ba 10 00 00 00       	mov    $0x10,%edx
    a5a0:	48 8d 35 79 21 03 00 	lea    0x32179(%rip),%rsi        # 3c720 <_ZL15UPGRADED_CPUSVN>
    a5a7:	48 89 c7             	mov    %rax,%rdi
    a5aa:	e8 7a 8f 00 00       	callq  13529 <memcmp>
    a5af:	85 c0                	test   %eax,%eax
    a5b1:	74 3f                	je     a5f2 <_ZL8_EGETKEYP14_key_request_tPh+0x977>
    a5b3:	ba 10 00 00 00       	mov    $0x10,%edx
    a5b8:	48 8d 35 71 21 03 00 	lea    0x32171(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a5bf:	48 8d 3d 22 d6 03 00 	lea    0x3d622(%rip),%rdi        # 47be8 <g_global_data_sim+0x8>
    a5c6:	e8 5e 8f 00 00       	callq  13529 <memcmp>
    a5cb:	85 c0                	test   %eax,%eax
    a5cd:	75 2a                	jne    a5f9 <_ZL8_EGETKEYP14_key_request_tPh+0x97e>
    a5cf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a5d6:	48 83 c0 08          	add    $0x8,%rax
    a5da:	ba 10 00 00 00       	mov    $0x10,%edx
    a5df:	48 8d 35 4a 21 03 00 	lea    0x3214a(%rip),%rsi        # 3c730 <_ZL17DOWNGRADED_CPUSVN>
    a5e6:	48 89 c7             	mov    %rax,%rdi
    a5e9:	e8 3b 8f 00 00       	callq  13529 <memcmp>
    a5ee:	85 c0                	test   %eax,%eax
    a5f0:	74 07                	je     a5f9 <_ZL8_EGETKEYP14_key_request_tPh+0x97e>
    a5f2:	b8 01 00 00 00       	mov    $0x1,%eax
    a5f7:	eb 05                	jmp    a5fe <_ZL8_EGETKEYP14_key_request_tPh+0x983>
    a5f9:	b8 00 00 00 00       	mov    $0x0,%eax
    a5fe:	84 c0                	test   %al,%al
    a600:	74 0a                	je     a60c <_ZL8_EGETKEYP14_key_request_tPh+0x991>
    a602:	b8 20 00 00 00       	mov    $0x20,%eax
    a607:	e9 e9 00 00 00       	jmpq   a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a60c:	c7 85 40 ff ff ff 60 	movl   $0x60,-0xc0(%rbp)
    a613:	00 00 00 
    a616:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    a61d:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    a624:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    a628:	ba 10 00 00 00       	mov    $0x10,%edx
    a62d:	48 89 c6             	mov    %rax,%rsi
    a630:	48 89 cf             	mov    %rcx,%rdi
    a633:	e8 8f 90 00 00       	callq  136c7 <memcpy>
    a638:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a63f:	48 8d 48 18          	lea    0x18(%rax),%rcx
    a643:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a64a:	48 83 c0 20          	add    $0x20,%rax
    a64e:	ba 10 00 00 00       	mov    $0x10,%edx
    a653:	48 89 ce             	mov    %rcx,%rsi
    a656:	48 89 c7             	mov    %rax,%rdi
    a659:	e8 69 90 00 00       	callq  136c7 <memcpy>
    a65e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a665:	48 8d 48 08          	lea    0x8(%rax),%rcx
    a669:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a670:	48 83 c0 30          	add    $0x30,%rax
    a674:	ba 10 00 00 00       	mov    $0x10,%edx
    a679:	48 89 ce             	mov    %rcx,%rsi
    a67c:	48 89 c7             	mov    %rax,%rdi
    a67f:	e8 43 90 00 00       	callq  136c7 <memcpy>
    a684:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    a68b:	0f b7 40 04          	movzwl 0x4(%rax),%eax
    a68f:	66 89 45 80          	mov    %ax,-0x80(%rbp)
    a693:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a69a:	0f b7 80 00 01 00 00 	movzwl 0x100(%rax),%eax
    a6a1:	66 89 45 82          	mov    %ax,-0x7e(%rbp)
    a6a5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    a6ac:	48 8d 88 80 00 00 00 	lea    0x80(%rax),%rcx
    a6b3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a6ba:	48 83 c0 44          	add    $0x44,%rax
    a6be:	ba 20 00 00 00       	mov    $0x20,%edx
    a6c3:	48 89 ce             	mov    %rcx,%rsi
    a6c6:	48 89 c7             	mov    %rax,%rdi
    a6c9:	e8 f9 8f 00 00       	callq  136c7 <memcpy>
    a6ce:	eb 07                	jmp    a6d7 <_ZL8_EGETKEYP14_key_request_tPh+0xa5c>
    a6d0:	b8 00 01 00 00       	mov    $0x100,%eax
    a6d5:	eb 1e                	jmp    a6f5 <_ZL8_EGETKEYP14_key_request_tPh+0xa7a>
    a6d7:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    a6de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a6e5:	48 89 d6             	mov    %rdx,%rsi
    a6e8:	48 89 c7             	mov    %rax,%rdi
    a6eb:	e8 53 04 00 00       	callq  ab43 <derive_key>
    a6f0:	b8 00 00 00 00       	mov    $0x0,%eax
    a6f5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a6f9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a700:	00 00 
    a702:	74 05                	je     a709 <_ZL8_EGETKEYP14_key_request_tPh+0xa8e>
    a704:	e8 83 0d 00 00       	callq  b48c <__stack_chk_fail>
    a709:	c9                   	leaveq 
    a70a:	c3                   	retq   

000000000000a70b <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t>:
    a70b:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    a710:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
    a717:	41 ff 72 f8          	pushq  -0x8(%r10)
    a71b:	55                   	push   %rbp
    a71c:	48 89 e5             	mov    %rsp,%rbp
    a71f:	41 52                	push   %r10
    a721:	48 81 ec e8 05 00 00 	sub    $0x5e8,%rsp
    a728:	48 89 bd 38 fb ff ff 	mov    %rdi,-0x4c8(%rbp)
    a72f:	48 89 b5 30 fb ff ff 	mov    %rsi,-0x4d0(%rbp)
    a736:	48 89 95 28 fb ff ff 	mov    %rdx,-0x4d8(%rbp)
    a73d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a744:	00 00 
    a746:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
    a74d:	31 c0                	xor    %eax,%eax
    a74f:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
    a756:	25 ff 01 00 00       	and    $0x1ff,%eax
    a75b:	48 85 c0             	test   %rax,%rax
    a75e:	0f 95 c0             	setne  %al
    a761:	0f b6 c0             	movzbl %al,%eax
    a764:	48 85 c0             	test   %rax,%rax
    a767:	74 05                	je     a76e <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0x63>
    a769:	e8 6b 0e 03 00       	callq  3b5d9 <abort>
    a76e:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
    a775:	be 00 02 00 00       	mov    $0x200,%esi
    a77a:	48 89 c7             	mov    %rax,%rdi
    a77d:	e8 2f d6 ff ff       	callq  7db1 <sgx_is_within_enclave>
    a782:	85 c0                	test   %eax,%eax
    a784:	0f 94 c0             	sete   %al
    a787:	0f b6 c0             	movzbl %al,%eax
    a78a:	48 85 c0             	test   %rax,%rax
    a78d:	0f 95 c0             	setne  %al
    a790:	84 c0                	test   %al,%al
    a792:	74 05                	je     a799 <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0x8e>
    a794:	e8 40 0e 03 00       	callq  3b5d9 <abort>
    a799:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    a7a0:	83 e0 7f             	and    $0x7f,%eax
    a7a3:	48 85 c0             	test   %rax,%rax
    a7a6:	0f 95 c0             	setne  %al
    a7a9:	0f b6 c0             	movzbl %al,%eax
    a7ac:	48 85 c0             	test   %rax,%rax
    a7af:	74 05                	je     a7b6 <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0xab>
    a7b1:	e8 23 0e 03 00       	callq  3b5d9 <abort>
    a7b6:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    a7bd:	be 40 00 00 00       	mov    $0x40,%esi
    a7c2:	48 89 c7             	mov    %rax,%rdi
    a7c5:	e8 e7 d5 ff ff       	callq  7db1 <sgx_is_within_enclave>
    a7ca:	85 c0                	test   %eax,%eax
    a7cc:	0f 94 c0             	sete   %al
    a7cf:	0f b6 c0             	movzbl %al,%eax
    a7d2:	48 85 c0             	test   %rax,%rax
    a7d5:	0f 95 c0             	setne  %al
    a7d8:	84 c0                	test   %al,%al
    a7da:	74 05                	je     a7e1 <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0xd6>
    a7dc:	e8 f8 0d 03 00       	callq  3b5d9 <abort>
    a7e1:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
    a7e8:	25 ff 01 00 00       	and    $0x1ff,%eax
    a7ed:	48 85 c0             	test   %rax,%rax
    a7f0:	0f 95 c0             	setne  %al
    a7f3:	0f b6 c0             	movzbl %al,%eax
    a7f6:	48 85 c0             	test   %rax,%rax
    a7f9:	74 05                	je     a800 <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0xf5>
    a7fb:	e8 d9 0d 03 00       	callq  3b5d9 <abort>
    a800:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
    a807:	be b0 01 00 00       	mov    $0x1b0,%esi
    a80c:	48 89 c7             	mov    %rax,%rdi
    a80f:	e8 9d d5 ff ff       	callq  7db1 <sgx_is_within_enclave>
    a814:	85 c0                	test   %eax,%eax
    a816:	0f 94 c0             	sete   %al
    a819:	0f b6 c0             	movzbl %al,%eax
    a81c:	48 85 c0             	test   %rax,%rax
    a81f:	0f 95 c0             	setne  %al
    a822:	84 c0                	test   %al,%al
    a824:	74 05                	je     a82b <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0x120>
    a826:	e8 ae 0d 03 00       	callq  3b5d9 <abort>
    a82b:	48 8b 05 ae d3 03 00 	mov    0x3d3ae(%rip),%rax        # 47be0 <g_global_data_sim>
    a832:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
    a839:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    a840:	ba b0 01 00 00       	mov    $0x1b0,%edx
    a845:	be 00 00 00 00       	mov    $0x0,%esi
    a84a:	48 89 c7             	mov    %rax,%rdi
    a84d:	e8 e3 8e 00 00       	callq  13735 <memset>
    a852:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    a859:	ba 10 00 00 00       	mov    $0x10,%edx
    a85e:	48 8d 35 83 d3 03 00 	lea    0x3d383(%rip),%rsi        # 47be8 <g_global_data_sim+0x8>
    a865:	48 89 c7             	mov    %rax,%rdi
    a868:	e8 5a 8e 00 00       	callq  136c7 <memcpy>
    a86d:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
    a874:	0f b7 80 00 01 00 00 	movzwl 0x100(%rax),%eax
    a87b:	66 89 85 10 fd ff ff 	mov    %ax,-0x2f0(%rbp)
    a882:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
    a889:	0f b7 80 02 01 00 00 	movzwl 0x102(%rax),%eax
    a890:	66 89 85 12 fd ff ff 	mov    %ax,-0x2ee(%rbp)
    a897:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
    a89e:	48 8d 48 30          	lea    0x30(%rax),%rcx
    a8a2:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    a8a9:	48 83 c0 30          	add    $0x30,%rax
    a8ad:	ba 10 00 00 00       	mov    $0x10,%edx
    a8b2:	48 89 ce             	mov    %rcx,%rsi
    a8b5:	48 89 c7             	mov    %rax,%rdi
    a8b8:	e8 0a 8e 00 00       	callq  136c7 <memcpy>
    a8bd:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    a8c4:	48 8d 95 10 fc ff ff 	lea    -0x3f0(%rbp),%rdx
    a8cb:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
    a8d2:	ba 40 00 00 00       	mov    $0x40,%edx
    a8d7:	48 89 c6             	mov    %rax,%rsi
    a8da:	48 89 cf             	mov    %rcx,%rdi
    a8dd:	e8 e5 8d 00 00       	callq  136c7 <memcpy>
    a8e2:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
    a8e9:	48 8d 48 40          	lea    0x40(%rax),%rcx
    a8ed:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    a8f4:	48 83 c0 40          	add    $0x40,%rax
    a8f8:	ba 20 00 00 00       	mov    $0x20,%edx
    a8fd:	48 89 ce             	mov    %rcx,%rsi
    a900:	48 89 c7             	mov    %rax,%rdi
    a903:	e8 bf 8d 00 00       	callq  136c7 <memcpy>
    a908:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
    a90f:	48 8d 88 80 00 00 00 	lea    0x80(%rax),%rcx
    a916:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    a91d:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    a921:	ba 20 00 00 00       	mov    $0x20,%edx
    a926:	48 89 ce             	mov    %rcx,%rsi
    a929:	48 89 c7             	mov    %rax,%rdi
    a92c:	e8 96 8d 00 00       	callq  136c7 <memcpy>
    a931:	bf 03 00 00 00       	mov    $0x3,%edi
    a936:	e8 9e 01 00 00       	callq  aad9 <get_base_key>
    a93b:	48 89 c1             	mov    %rax,%rcx
    a93e:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    a945:	48 05 80 01 00 00    	add    $0x180,%rax
    a94b:	ba 10 00 00 00       	mov    $0x10,%edx
    a950:	48 89 ce             	mov    %rcx,%rsi
    a953:	48 89 c7             	mov    %rax,%rdi
    a956:	e8 6c 8d 00 00       	callq  136c7 <memcpy>
    a95b:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    a962:	ba b8 00 00 00       	mov    $0xb8,%edx
    a967:	be 00 00 00 00       	mov    $0x0,%esi
    a96c:	48 89 c7             	mov    %rax,%rdi
    a96f:	e8 c1 8d 00 00       	callq  13735 <memset>
    a974:	c7 85 50 fb ff ff 78 	movl   $0x78,-0x4b0(%rbp)
    a97b:	00 00 00 
    a97e:	66 c7 85 58 fb ff ff 	movw   $0x3,-0x4a8(%rbp)
    a985:	03 00 
    a987:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
    a98e:	48 8d 95 50 fb ff ff 	lea    -0x4b0(%rbp),%rdx
    a995:	48 8d 4a 30          	lea    0x30(%rdx),%rcx
    a999:	ba 20 00 00 00       	mov    $0x20,%edx
    a99e:	48 89 c6             	mov    %rax,%rsi
    a9a1:	48 89 cf             	mov    %rcx,%rdi
    a9a4:	e8 1e 8d 00 00       	callq  136c7 <memcpy>
    a9a9:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
    a9b0:	48 8d 48 20          	lea    0x20(%rax),%rcx
    a9b4:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    a9bb:	48 83 c0 10          	add    $0x10,%rax
    a9bf:	ba 10 00 00 00       	mov    $0x10,%edx
    a9c4:	48 89 ce             	mov    %rcx,%rsi
    a9c7:	48 89 c7             	mov    %rax,%rdi
    a9ca:	e8 f8 8c 00 00       	callq  136c7 <memcpy>
    a9cf:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    a9d6:	48 83 c0 20          	add    $0x20,%rax
    a9da:	ba 10 00 00 00       	mov    $0x10,%edx
    a9df:	48 8d 35 5a 1d 03 00 	lea    0x31d5a(%rip),%rsi        # 3c740 <_ZL20SIMU_OWNER_EPOCH_MSR>
    a9e6:	48 89 c7             	mov    %rax,%rdi
    a9e9:	e8 d9 8c 00 00       	callq  136c7 <memcpy>
    a9ee:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    a9f5:	48 83 c0 50          	add    $0x50,%rax
    a9f9:	ba 10 00 00 00       	mov    $0x10,%edx
    a9fe:	48 8d 35 e3 d1 03 00 	lea    0x3d1e3(%rip),%rsi        # 47be8 <g_global_data_sim+0x8>
    aa05:	48 89 c7             	mov    %rax,%rdi
    aa08:	e8 ba 8c 00 00       	callq  136c7 <memcpy>
    aa0d:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    aa14:	48 8d 88 80 01 00 00 	lea    0x180(%rax),%rcx
    aa1b:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    aa22:	48 83 c0 60          	add    $0x60,%rax
    aa26:	ba 20 00 00 00       	mov    $0x20,%edx
    aa2b:	48 89 ce             	mov    %rcx,%rsi
    aa2e:	48 89 c7             	mov    %rax,%rdi
    aa31:	e8 91 8c 00 00       	callq  136c7 <memcpy>
    aa36:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    aa3d:	ba 10 00 00 00       	mov    $0x10,%edx
    aa42:	be 00 00 00 00       	mov    $0x0,%esi
    aa47:	48 89 c7             	mov    %rax,%rdi
    aa4a:	e8 e6 8c 00 00       	callq  13735 <memset>
    aa4f:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    aa56:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    aa5d:	48 89 d6             	mov    %rdx,%rsi
    aa60:	48 89 c7             	mov    %rax,%rdi
    aa63:	e8 db 00 00 00       	callq  ab43 <derive_key>
    aa68:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    aa6f:	48 8d 90 a0 01 00 00 	lea    0x1a0(%rax),%rdx
    aa76:	48 8d b5 10 fc ff ff 	lea    -0x3f0(%rbp),%rsi
    aa7d:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    aa84:	48 89 d1             	mov    %rdx,%rcx
    aa87:	ba 80 01 00 00       	mov    $0x180,%edx
    aa8c:	48 89 c7             	mov    %rax,%rdi
    aa8f:	e8 04 01 00 00       	callq  ab98 <cmac>
    aa94:	48 8d 8d 10 fc ff ff 	lea    -0x3f0(%rbp),%rcx
    aa9b:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
    aaa2:	ba b0 01 00 00       	mov    $0x1b0,%edx
    aaa7:	48 89 ce             	mov    %rcx,%rsi
    aaaa:	48 89 c7             	mov    %rax,%rdi
    aaad:	e8 15 8c 00 00       	callq  136c7 <memcpy>
    aab2:	90                   	nop
    aab3:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
    aaba:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    aac1:	00 00 
    aac3:	74 05                	je     aaca <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t+0x3bf>
    aac5:	e8 c2 09 00 00       	callq  b48c <__stack_chk_fail>
    aaca:	48 81 c4 e8 05 00 00 	add    $0x5e8,%rsp
    aad1:	41 5a                	pop    %r10
    aad3:	5d                   	pop    %rbp
    aad4:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    aad8:	c3                   	retq   

000000000000aad9 <get_base_key>:
    aad9:	55                   	push   %rbp
    aada:	48 89 e5             	mov    %rsp,%rbp
    aadd:	89 f8                	mov    %edi,%eax
    aadf:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
    aae3:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    aae7:	83 f8 04             	cmp    $0x4,%eax
    aaea:	77 50                	ja     ab3c <get_base_key+0x63>
    aaec:	89 c0                	mov    %eax,%eax
    aaee:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    aaf5:	00 
    aaf6:	48 8d 05 c3 1c 03 00 	lea    0x31cc3(%rip),%rax        # 3c7c0 <_ZL18BASE_PROV_SEAL_KEY+0x10>
    aafd:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    ab00:	48 63 d0             	movslq %eax,%rdx
    ab03:	48 8d 05 b6 1c 03 00 	lea    0x31cb6(%rip),%rax        # 3c7c0 <_ZL18BASE_PROV_SEAL_KEY+0x10>
    ab0a:	48 01 d0             	add    %rdx,%rax
    ab0d:	ff e0                	jmpq   *%rax
    ab0f:	48 8d 05 5a 1c 03 00 	lea    0x31c5a(%rip),%rax        # 3c770 <_ZL13BASE_SEAL_KEY>
    ab16:	eb 29                	jmp    ab41 <get_base_key+0x68>
    ab18:	48 8d 05 61 1c 03 00 	lea    0x31c61(%rip),%rax        # 3c780 <_ZL15BASE_REPORT_KEY>
    ab1f:	eb 20                	jmp    ab41 <get_base_key+0x68>
    ab21:	48 8d 05 68 1c 03 00 	lea    0x31c68(%rip),%rax        # 3c790 <_ZL19BASE_EINITTOKEN_KEY>
    ab28:	eb 17                	jmp    ab41 <get_base_key+0x68>
    ab2a:	48 8d 05 6f 1c 03 00 	lea    0x31c6f(%rip),%rax        # 3c7a0 <_ZL18BASE_PROVISION_KEY>
    ab31:	eb 0e                	jmp    ab41 <get_base_key+0x68>
    ab33:	48 8d 05 76 1c 03 00 	lea    0x31c76(%rip),%rax        # 3c7b0 <_ZL18BASE_PROV_SEAL_KEY>
    ab3a:	eb 05                	jmp    ab41 <get_base_key+0x68>
    ab3c:	b8 00 00 00 00       	mov    $0x0,%eax
    ab41:	5d                   	pop    %rbp
    ab42:	c3                   	retq   

000000000000ab43 <derive_key>:
    ab43:	55                   	push   %rbp
    ab44:	48 89 e5             	mov    %rsp,%rbp
    ab47:	41 54                	push   %r12
    ab49:	53                   	push   %rbx
    ab4a:	48 83 ec 10          	sub    $0x10,%rsp
    ab4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab52:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ab56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab5a:	8b 00                	mov    (%rax),%eax
    ab5c:	41 89 c4             	mov    %eax,%r12d
    ab5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab63:	48 8d 58 08          	lea    0x8(%rax),%rbx
    ab67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab6b:	0f b7 40 08          	movzwl 0x8(%rax),%eax
    ab6f:	0f b7 c0             	movzwl %ax,%eax
    ab72:	89 c7                	mov    %eax,%edi
    ab74:	e8 60 ff ff ff       	callq  aad9 <get_base_key>
    ab79:	48 89 c7             	mov    %rax,%rdi
    ab7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab80:	48 89 c1             	mov    %rax,%rcx
    ab83:	44 89 e2             	mov    %r12d,%edx
    ab86:	48 89 de             	mov    %rbx,%rsi
    ab89:	e8 1f 3d 02 00       	callq  2e8ad <sgx_rijndael128_cmac_msg>
    ab8e:	90                   	nop
    ab8f:	48 83 c4 10          	add    $0x10,%rsp
    ab93:	5b                   	pop    %rbx
    ab94:	41 5c                	pop    %r12
    ab96:	5d                   	pop    %rbp
    ab97:	c3                   	retq   

000000000000ab98 <cmac>:
    ab98:	55                   	push   %rbp
    ab99:	48 89 e5             	mov    %rsp,%rbp
    ab9c:	48 83 ec 20          	sub    $0x20,%rsp
    aba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aba4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aba8:	89 55 ec             	mov    %edx,-0x14(%rbp)
    abab:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    abaf:	8b 55 ec             	mov    -0x14(%rbp),%edx
    abb2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    abb6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    abba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abbe:	48 89 c7             	mov    %rax,%rdi
    abc1:	e8 e7 3c 02 00       	callq  2e8ad <sgx_rijndael128_cmac_msg>
    abc6:	90                   	nop
    abc7:	c9                   	leaveq 
    abc8:	c3                   	retq   

000000000000abc9 <get_phdr>:
    abc9:	55                   	push   %rbp
    abca:	48 89 e5             	mov    %rsp,%rbp
    abcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abd1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    abd6:	75 07                	jne    abdf <get_phdr+0x16>
    abd8:	b8 00 00 00 00       	mov    $0x0,%eax
    abdd:	eb 5a                	jmp    ac39 <get_phdr+0x70>
    abdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abe3:	0f b6 00             	movzbl (%rax),%eax
    abe6:	3c 7f                	cmp    $0x7f,%al
    abe8:	75 24                	jne    ac0e <get_phdr+0x45>
    abea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abee:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    abf2:	3c 45                	cmp    $0x45,%al
    abf4:	75 18                	jne    ac0e <get_phdr+0x45>
    abf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfa:	0f b6 40 02          	movzbl 0x2(%rax),%eax
    abfe:	3c 4c                	cmp    $0x4c,%al
    ac00:	75 0c                	jne    ac0e <get_phdr+0x45>
    ac02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac06:	0f b6 40 03          	movzbl 0x3(%rax),%eax
    ac0a:	3c 46                	cmp    $0x46,%al
    ac0c:	74 07                	je     ac15 <get_phdr+0x4c>
    ac0e:	b8 00 00 00 00       	mov    $0x0,%eax
    ac13:	eb 24                	jmp    ac39 <get_phdr+0x70>
    ac15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac19:	0f b7 40 10          	movzwl 0x10(%rax),%eax
    ac1d:	66 83 f8 03          	cmp    $0x3,%ax
    ac21:	74 07                	je     ac2a <get_phdr+0x61>
    ac23:	b8 00 00 00 00       	mov    $0x0,%eax
    ac28:	eb 0f                	jmp    ac39 <get_phdr+0x70>
    ac2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac2e:	48 8b 50 20          	mov    0x20(%rax),%rdx
    ac32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac36:	48 01 d0             	add    %rdx,%rax
    ac39:	5d                   	pop    %rbp
    ac3a:	c3                   	retq   

000000000000ac3b <get_sym>:
    ac3b:	55                   	push   %rbp
    ac3c:	48 89 e5             	mov    %rsp,%rbp
    ac3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac4b:	48 89 d0             	mov    %rdx,%rax
    ac4e:	48 01 c0             	add    %rax,%rax
    ac51:	48 01 d0             	add    %rdx,%rax
    ac54:	48 c1 e0 03          	shl    $0x3,%rax
    ac58:	48 89 c2             	mov    %rax,%rdx
    ac5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac5f:	48 01 d0             	add    %rdx,%rax
    ac62:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    ac66:	c0 e8 04             	shr    $0x4,%al
    ac69:	3c 02                	cmp    $0x2,%al
    ac6b:	75 2b                	jne    ac98 <get_sym+0x5d>
    ac6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac71:	48 89 d0             	mov    %rdx,%rax
    ac74:	48 01 c0             	add    %rax,%rax
    ac77:	48 01 d0             	add    %rdx,%rax
    ac7a:	48 c1 e0 03          	shl    $0x3,%rax
    ac7e:	48 89 c2             	mov    %rax,%rdx
    ac81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac85:	48 01 d0             	add    %rdx,%rax
    ac88:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac8c:	48 85 c0             	test   %rax,%rax
    ac8f:	75 07                	jne    ac98 <get_sym+0x5d>
    ac91:	b8 00 00 00 00       	mov    $0x0,%eax
    ac96:	eb 1b                	jmp    acb3 <get_sym+0x78>
    ac98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac9c:	48 89 d0             	mov    %rdx,%rax
    ac9f:	48 01 c0             	add    %rax,%rax
    aca2:	48 01 d0             	add    %rdx,%rax
    aca5:	48 c1 e0 03          	shl    $0x3,%rax
    aca9:	48 89 c2             	mov    %rax,%rdx
    acac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb0:	48 01 d0             	add    %rdx,%rax
    acb3:	5d                   	pop    %rbp
    acb4:	c3                   	retq   

000000000000acb5 <do_relocs>:
    acb5:	55                   	push   %rbp
    acb6:	48 89 e5             	mov    %rsp,%rbp
    acb9:	48 83 ec 60          	sub    $0x60,%rsp
    acbd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    acc1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    acc5:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    acc9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    accd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    acd4:	00 00 
    acd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    acda:	31 c0                	xor    %eax,%eax
    acdc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    ace0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ace4:	48 01 d0             	add    %rdx,%rax
    ace7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    aceb:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    acef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    acf3:	48 01 d0             	add    %rdx,%rax
    acf6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    acfa:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    ad01:	00 
    ad02:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    ad09:	00 
    ad0a:	e9 a2 01 00 00       	jmpq   aeb1 <do_relocs+0x1fc>
    ad0f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ad13:	48 8b 10             	mov    (%rax),%rdx
    ad16:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ad1a:	48 01 d0             	add    %rdx,%rax
    ad1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ad21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ad25:	48 8b 40 08          	mov    0x8(%rax),%rax
    ad29:	89 c0                	mov    %eax,%eax
    ad2b:	48 83 f8 12          	cmp    $0x12,%rax
    ad2f:	0f 87 61 01 00 00    	ja     ae96 <do_relocs+0x1e1>
    ad35:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ad3c:	00 
    ad3d:	48 8d 05 90 1a 03 00 	lea    0x31a90(%rip),%rax        # 3c7d4 <_ZL18BASE_PROV_SEAL_KEY+0x24>
    ad44:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    ad47:	48 63 d0             	movslq %eax,%rdx
    ad4a:	48 8d 05 83 1a 03 00 	lea    0x31a83(%rip),%rax        # 3c7d4 <_ZL18BASE_PROV_SEAL_KEY+0x24>
    ad51:	48 01 d0             	add    %rdx,%rax
    ad54:	ff e0                	jmpq   *%rax
    ad56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ad5a:	48 8b 40 10          	mov    0x10(%rax),%rax
    ad5e:	48 89 c2             	mov    %rax,%rdx
    ad61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ad65:	48 01 c2             	add    %rax,%rdx
    ad68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad6c:	48 89 10             	mov    %rdx,(%rax)
    ad6f:	e9 33 01 00 00       	jmpq   aea7 <do_relocs+0x1f2>
    ad74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ad78:	48 8b 40 08          	mov    0x8(%rax),%rax
    ad7c:	48 c1 e8 20          	shr    $0x20,%rax
    ad80:	48 89 c2             	mov    %rax,%rdx
    ad83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad87:	48 89 d6             	mov    %rdx,%rsi
    ad8a:	48 89 c7             	mov    %rax,%rdi
    ad8d:	e8 a9 fe ff ff       	callq  ac3b <get_sym>
    ad92:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ad96:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ad9b:	0f 84 ff 00 00 00    	je     aea0 <do_relocs+0x1eb>
    ada1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ada5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ada9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    adad:	48 01 c2             	add    %rax,%rdx
    adb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    adb4:	48 8b 40 10          	mov    0x10(%rax),%rax
    adb8:	48 01 c2             	add    %rax,%rdx
    adbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adbf:	48 89 10             	mov    %rdx,(%rax)
    adc2:	e9 e0 00 00 00       	jmpq   aea7 <do_relocs+0x1f2>
    adc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adcb:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
    add2:	e9 d0 00 00 00       	jmpq   aea7 <do_relocs+0x1f2>
    add7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    addb:	48 8b 40 08          	mov    0x8(%rax),%rax
    addf:	48 c1 e8 20          	shr    $0x20,%rax
    ade3:	48 89 c2             	mov    %rax,%rdx
    ade6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    adea:	48 89 d6             	mov    %rdx,%rsi
    aded:	48 89 c7             	mov    %rax,%rdi
    adf0:	e8 46 fe ff ff       	callq  ac3b <get_sym>
    adf5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    adf9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    adfe:	0f 84 9f 00 00 00    	je     aea3 <do_relocs+0x1ee>
    ae04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae08:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ae0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ae10:	48 8b 40 10          	mov    0x10(%rax),%rax
    ae14:	48 01 c2             	add    %rax,%rdx
    ae17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae1b:	48 89 10             	mov    %rdx,(%rax)
    ae1e:	e9 84 00 00 00       	jmpq   aea7 <do_relocs+0x1f2>
    ae23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ae27:	48 8b 40 08          	mov    0x8(%rax),%rax
    ae2b:	48 c1 e8 20          	shr    $0x20,%rax
    ae2f:	48 89 c2             	mov    %rax,%rdx
    ae32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ae36:	48 89 d6             	mov    %rdx,%rsi
    ae39:	48 89 c7             	mov    %rax,%rdi
    ae3c:	e8 fa fd ff ff       	callq  ac3b <get_sym>
    ae41:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ae45:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ae4a:	74 5a                	je     aea6 <do_relocs+0x1f1>
    ae4c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ae50:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    ae54:	48 89 d6             	mov    %rdx,%rsi
    ae57:	48 89 c7             	mov    %rax,%rdi
    ae5a:	e8 4f 03 00 00       	callq  b1ae <elf_tls_aligned_virtual_size>
    ae5f:	85 c0                	test   %eax,%eax
    ae61:	75 2c                	jne    ae8f <do_relocs+0x1da>
    ae63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ae67:	48 85 c0             	test   %rax,%rax
    ae6a:	74 23                	je     ae8f <do_relocs+0x1da>
    ae6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae70:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ae74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ae78:	48 8b 40 10          	mov    0x10(%rax),%rax
    ae7c:	48 01 c2             	add    %rax,%rdx
    ae7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ae83:	48 29 c2             	sub    %rax,%rdx
    ae86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae8a:	48 89 10             	mov    %rdx,(%rax)
    ae8d:	eb 18                	jmp    aea7 <do_relocs+0x1f2>
    ae8f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ae94:	eb 2e                	jmp    aec4 <do_relocs+0x20f>
    ae96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ae9b:	eb 27                	jmp    aec4 <do_relocs+0x20f>
    ae9d:	90                   	nop
    ae9e:	eb 07                	jmp    aea7 <do_relocs+0x1f2>
    aea0:	90                   	nop
    aea1:	eb 04                	jmp    aea7 <do_relocs+0x1f2>
    aea3:	90                   	nop
    aea4:	eb 01                	jmp    aea7 <do_relocs+0x1f2>
    aea6:	90                   	nop
    aea7:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    aeac:	48 83 45 d0 18       	addq   $0x18,-0x30(%rbp)
    aeb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aeb5:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    aeb9:	0f 82 50 fe ff ff    	jb     ad0f <do_relocs+0x5a>
    aebf:	b8 00 00 00 00       	mov    $0x0,%eax
    aec4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    aec8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    aecf:	00 00 
    aed1:	74 05                	je     aed8 <do_relocs+0x223>
    aed3:	e8 b4 05 00 00       	callq  b48c <__stack_chk_fail>
    aed8:	c9                   	leaveq 
    aed9:	c3                   	retq   

000000000000aeda <relocate_enclave>:
    aeda:	55                   	push   %rbp
    aedb:	48 89 e5             	mov    %rsp,%rbp
    aede:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    aee2:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    aee6:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    aeed:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aef1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    aef5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aef9:	48 89 c7             	mov    %rax,%rdi
    aefc:	e8 c8 fc ff ff       	callq  abc9 <get_phdr>
    af01:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    af05:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    af0a:	0f 85 c3 01 00 00    	jne    b0d3 <relocate_enclave+0x1f9>
    af10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    af15:	e9 d2 01 00 00       	jmpq   b0ec <relocate_enclave+0x212>
    af1a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    af1e:	8b 00                	mov    (%rax),%eax
    af20:	83 f8 02             	cmp    $0x2,%eax
    af23:	0f 85 a1 01 00 00    	jne    b0ca <relocate_enclave+0x1f0>
    af29:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    af2d:	48 8b 40 20          	mov    0x20(%rax),%rax
    af31:	48 c1 e8 04          	shr    $0x4,%rax
    af35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    af39:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    af3d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    af41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    af45:	48 01 d0             	add    %rdx,%rax
    af48:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    af4c:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    af53:	00 
    af54:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    af5b:	00 
    af5c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    af63:	00 
    af64:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    af6b:	00 
    af6c:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    af73:	00 
    af74:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    af7b:	00 
    af7c:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    af83:	00 
    af84:	e9 9b 00 00 00       	jmpq   b024 <relocate_enclave+0x14a>
    af89:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    af8d:	48 8b 00             	mov    (%rax),%rax
    af90:	48 85 c0             	test   %rax,%rax
    af93:	0f 84 9b 00 00 00    	je     b034 <relocate_enclave+0x15a>
    af99:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    af9d:	48 8b 00             	mov    (%rax),%rax
    afa0:	48 83 f8 17          	cmp    $0x17,%rax
    afa4:	77 74                	ja     b01a <relocate_enclave+0x140>
    afa6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    afad:	00 
    afae:	48 8d 05 6b 18 03 00 	lea    0x3186b(%rip),%rax        # 3c820 <_ZL18BASE_PROV_SEAL_KEY+0x70>
    afb5:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    afb8:	48 63 d0             	movslq %eax,%rdx
    afbb:	48 8d 05 5e 18 03 00 	lea    0x3185e(%rip),%rax        # 3c820 <_ZL18BASE_PROV_SEAL_KEY+0x70>
    afc2:	48 01 d0             	add    %rdx,%rax
    afc5:	ff e0                	jmpq   *%rax
    afc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    afcb:	48 8b 40 08          	mov    0x8(%rax),%rax
    afcf:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    afd3:	eb 45                	jmp    b01a <relocate_enclave+0x140>
    afd5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    afd9:	48 8b 40 08          	mov    0x8(%rax),%rax
    afdd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    afe1:	eb 37                	jmp    b01a <relocate_enclave+0x140>
    afe3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    afe7:	48 8b 40 08          	mov    0x8(%rax),%rax
    afeb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    afef:	eb 29                	jmp    b01a <relocate_enclave+0x140>
    aff1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aff5:	48 8b 40 08          	mov    0x8(%rax),%rax
    aff9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    affd:	eb 1b                	jmp    b01a <relocate_enclave+0x140>
    afff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b003:	48 8b 40 08          	mov    0x8(%rax),%rax
    b007:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    b00b:	eb 0d                	jmp    b01a <relocate_enclave+0x140>
    b00d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b011:	48 8b 40 08          	mov    0x8(%rax),%rax
    b015:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b019:	90                   	nop
    b01a:	48 83 45 a0 01       	addq   $0x1,-0x60(%rbp)
    b01f:	48 83 45 a8 10       	addq   $0x10,-0x58(%rbp)
    b024:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b028:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    b02c:	0f 82 57 ff ff ff    	jb     af89 <relocate_enclave+0xaf>
    b032:	eb 01                	jmp    b035 <relocate_enclave+0x15b>
    b034:	90                   	nop
    b035:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    b03a:	74 45                	je     b081 <relocate_enclave+0x1a7>
    b03c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    b041:	75 0a                	jne    b04d <relocate_enclave+0x173>
    b043:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b048:	e9 9f 00 00 00       	jmpq   b0ec <relocate_enclave+0x212>
    b04d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b051:	ba 00 00 00 00       	mov    $0x0,%edx
    b056:	48 f7 75 d0          	divq   -0x30(%rbp)
    b05a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b05e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b062:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b066:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b06a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    b06e:	48 89 c7             	mov    %rax,%rdi
    b071:	e8 3f fc ff ff       	callq  acb5 <do_relocs>
    b076:	85 c0                	test   %eax,%eax
    b078:	74 07                	je     b081 <relocate_enclave+0x1a7>
    b07a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b07f:	eb 6b                	jmp    b0ec <relocate_enclave+0x212>
    b081:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    b086:	74 42                	je     b0ca <relocate_enclave+0x1f0>
    b088:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    b08d:	75 07                	jne    b096 <relocate_enclave+0x1bc>
    b08f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b094:	eb 56                	jmp    b0ec <relocate_enclave+0x212>
    b096:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b09a:	ba 00 00 00 00       	mov    $0x0,%edx
    b09f:	48 f7 75 d0          	divq   -0x30(%rbp)
    b0a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b0a7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b0ab:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    b0af:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b0b3:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    b0b7:	48 89 c7             	mov    %rax,%rdi
    b0ba:	e8 f6 fb ff ff       	callq  acb5 <do_relocs>
    b0bf:	85 c0                	test   %eax,%eax
    b0c1:	74 07                	je     b0ca <relocate_enclave+0x1f0>
    b0c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b0c8:	eb 22                	jmp    b0ec <relocate_enclave+0x212>
    b0ca:	83 45 94 01          	addl   $0x1,-0x6c(%rbp)
    b0ce:	48 83 45 98 38       	addq   $0x38,-0x68(%rbp)
    b0d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0d7:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    b0db:	0f b7 c0             	movzwl %ax,%eax
    b0de:	39 45 94             	cmp    %eax,-0x6c(%rbp)
    b0e1:	0f 82 33 fe ff ff    	jb     af1a <relocate_enclave+0x40>
    b0e7:	b8 00 00 00 00       	mov    $0x0,%eax
    b0ec:	c9                   	leaveq 
    b0ed:	c3                   	retq   

000000000000b0ee <elf_tls_info>:
    b0ee:	55                   	push   %rbp
    b0ef:	48 89 e5             	mov    %rsp,%rbp
    b0f2:	48 83 ec 38          	sub    $0x38,%rsp
    b0f6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b0fa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b0fe:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b102:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b109:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b10d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b115:	48 89 c7             	mov    %rax,%rdi
    b118:	e8 ac fa ff ff       	callq  abc9 <get_phdr>
    b11d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b121:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    b126:	74 07                	je     b12f <elf_tls_info+0x41>
    b128:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    b12d:	75 07                	jne    b136 <elf_tls_info+0x48>
    b12f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b134:	eb 76                	jmp    b1ac <elf_tls_info+0xbe>
    b136:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b13b:	75 07                	jne    b144 <elf_tls_info+0x56>
    b13d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b142:	eb 68                	jmp    b1ac <elf_tls_info+0xbe>
    b144:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b148:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b14f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b153:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b15a:	eb 3b                	jmp    b197 <elf_tls_info+0xa9>
    b15c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b160:	8b 00                	mov    (%rax),%eax
    b162:	83 f8 07             	cmp    $0x7,%eax
    b165:	75 27                	jne    b18e <elf_tls_info+0xa0>
    b167:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b16b:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b16f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b173:	48 01 c2             	add    %rax,%rdx
    b176:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b17a:	48 89 10             	mov    %rdx,(%rax)
    b17d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b181:	48 8b 50 20          	mov    0x20(%rax),%rdx
    b185:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b189:	48 89 10             	mov    %rdx,(%rax)
    b18c:	eb 19                	jmp    b1a7 <elf_tls_info+0xb9>
    b18e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b192:	48 83 45 f0 38       	addq   $0x38,-0x10(%rbp)
    b197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b19b:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    b19f:	0f b7 c0             	movzwl %ax,%eax
    b1a2:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    b1a5:	72 b5                	jb     b15c <elf_tls_info+0x6e>
    b1a7:	b8 00 00 00 00       	mov    $0x0,%eax
    b1ac:	c9                   	leaveq 
    b1ad:	c3                   	retq   

000000000000b1ae <elf_tls_aligned_virtual_size>:
    b1ae:	55                   	push   %rbp
    b1af:	48 89 e5             	mov    %rsp,%rbp
    b1b2:	48 83 ec 40          	sub    $0x40,%rsp
    b1b6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b1ba:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    b1be:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    b1c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b1c9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b1cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1d1:	48 89 c7             	mov    %rax,%rdi
    b1d4:	e8 f0 f9 ff ff       	callq  abc9 <get_phdr>
    b1d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b1dd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    b1e4:	00 
    b1e5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    b1ec:	00 
    b1ed:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b1f2:	75 0a                	jne    b1fe <elf_tls_aligned_virtual_size+0x50>
    b1f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b1f9:	e9 9c 00 00 00       	jmpq   b29a <elf_tls_aligned_virtual_size+0xec>
    b1fe:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    b203:	75 0a                	jne    b20f <elf_tls_aligned_virtual_size+0x61>
    b205:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b20a:	e9 8b 00 00 00       	jmpq   b29a <elf_tls_aligned_virtual_size+0xec>
    b20f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b213:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b21a:	eb 69                	jmp    b285 <elf_tls_aligned_virtual_size+0xd7>
    b21c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b220:	8b 00                	mov    (%rax),%eax
    b222:	83 f8 07             	cmp    $0x7,%eax
    b225:	75 55                	jne    b27c <elf_tls_aligned_virtual_size+0xce>
    b227:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b22b:	48 8b 40 28          	mov    0x28(%rax),%rax
    b22f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b233:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b237:	48 8b 40 30          	mov    0x30(%rax),%rax
    b23b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b23f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b244:	74 07                	je     b24d <elf_tls_aligned_virtual_size+0x9f>
    b246:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
    b24b:	75 0d                	jne    b25a <elf_tls_aligned_virtual_size+0xac>
    b24d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b251:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b255:	48 89 10             	mov    %rdx,(%rax)
    b258:	eb 3b                	jmp    b295 <elf_tls_aligned_virtual_size+0xe7>
    b25a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b25e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b262:	48 01 d0             	add    %rdx,%rax
    b265:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    b269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b26d:	48 f7 d8             	neg    %rax
    b270:	48 21 c2             	and    %rax,%rdx
    b273:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b277:	48 89 10             	mov    %rdx,(%rax)
    b27a:	eb 19                	jmp    b295 <elf_tls_aligned_virtual_size+0xe7>
    b27c:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    b280:	48 83 45 e0 38       	addq   $0x38,-0x20(%rbp)
    b285:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b289:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    b28d:	0f b7 c0             	movzwl %ax,%eax
    b290:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    b293:	72 87                	jb     b21c <elf_tls_aligned_virtual_size+0x6e>
    b295:	b8 00 00 00 00       	mov    $0x0,%eax
    b29a:	c9                   	leaveq 
    b29b:	c3                   	retq   

000000000000b29c <elf_get_init_array>:
    b29c:	55                   	push   %rbp
    b29d:	48 89 e5             	mov    %rsp,%rbp
    b2a0:	48 83 ec 48          	sub    $0x48,%rsp
    b2a4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b2a8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    b2ac:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    b2b0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    b2b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b2bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b2bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b2c3:	48 89 c7             	mov    %rax,%rdi
    b2c6:	e8 fe f8 ff ff       	callq  abc9 <get_phdr>
    b2cb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b2cf:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    b2d4:	74 07                	je     b2dd <elf_get_init_array+0x41>
    b2d6:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    b2db:	75 0a                	jne    b2e7 <elf_get_init_array+0x4b>
    b2dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b2e2:	e9 d0 00 00 00       	jmpq   b3b7 <elf_get_init_array+0x11b>
    b2e7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    b2ec:	75 0a                	jne    b2f8 <elf_get_init_array+0x5c>
    b2ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b2f3:	e9 bf 00 00 00       	jmpq   b3b7 <elf_get_init_array+0x11b>
    b2f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b2fc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b303:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b307:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b30e:	e9 8b 00 00 00       	jmpq   b39e <elf_get_init_array+0x102>
    b313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b317:	8b 00                	mov    (%rax),%eax
    b319:	83 f8 02             	cmp    $0x2,%eax
    b31c:	75 77                	jne    b395 <elf_get_init_array+0xf9>
    b31e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b322:	48 8b 40 20          	mov    0x20(%rax),%rax
    b326:	48 c1 e8 04          	shr    $0x4,%rax
    b32a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b32e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b332:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b336:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b33a:	48 01 d0             	add    %rdx,%rax
    b33d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b341:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    b348:	00 
    b349:	eb 40                	jmp    b38b <elf_get_init_array+0xef>
    b34b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b34f:	48 8b 00             	mov    (%rax),%rax
    b352:	48 83 f8 19          	cmp    $0x19,%rax
    b356:	74 08                	je     b360 <elf_get_init_array+0xc4>
    b358:	48 83 f8 1b          	cmp    $0x1b,%rax
    b35c:	74 13                	je     b371 <elf_get_init_array+0xd5>
    b35e:	eb 21                	jmp    b381 <elf_get_init_array+0xe5>
    b360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b364:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b368:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b36c:	48 89 10             	mov    %rdx,(%rax)
    b36f:	eb 10                	jmp    b381 <elf_get_init_array+0xe5>
    b371:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b375:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b379:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b37d:	48 89 10             	mov    %rdx,(%rax)
    b380:	90                   	nop
    b381:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    b386:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
    b38b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b38f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    b393:	72 b6                	jb     b34b <elf_get_init_array+0xaf>
    b395:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    b399:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
    b39e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b3a2:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    b3a6:	0f b7 c0             	movzwl %ax,%eax
    b3a9:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    b3ac:	0f 82 61 ff ff ff    	jb     b313 <elf_get_init_array+0x77>
    b3b2:	b8 00 00 00 00       	mov    $0x0,%eax
    b3b7:	c9                   	leaveq 
    b3b8:	c3                   	retq   

000000000000b3b9 <do_ctors_aux>:
    b3b9:	55                   	push   %rbp
    b3ba:	48 89 e5             	mov    %rsp,%rbp
    b3bd:	48 83 ec 40          	sub    $0x40,%rsp
    b3c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b3c8:	00 00 
    b3ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b3ce:	31 c0                	xor    %eax,%eax
    b3d0:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    b3d7:	00 
    b3d8:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    b3df:	00 
    b3e0:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    b3e7:	00 
    b3e8:	48 8d 05 11 4c ff ff 	lea    -0xb3ef(%rip),%rax        # 0 <enclave.so>
    b3ef:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b3f3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    b3f7:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    b3fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b3ff:	48 89 ce             	mov    %rcx,%rsi
    b402:	48 89 c7             	mov    %rax,%rdi
    b405:	e8 92 fe ff ff       	callq  b29c <elf_get_init_array>
    b40a:	85 c0                	test   %eax,%eax
    b40c:	75 5b                	jne    b469 <do_ctors_aux+0xb0>
    b40e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b412:	48 85 c0             	test   %rax,%rax
    b415:	74 52                	je     b469 <do_ctors_aux+0xb0>
    b417:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b41b:	48 85 c0             	test   %rax,%rax
    b41e:	74 49                	je     b469 <do_ctors_aux+0xb0>
    b420:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b424:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b428:	48 01 d0             	add    %rdx,%rax
    b42b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b42f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b433:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b437:	48 89 c2             	mov    %rax,%rdx
    b43a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b43e:	48 01 d0             	add    %rdx,%rax
    b441:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b449:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b44d:	eb 0e                	jmp    b45d <do_ctors_aux+0xa4>
    b44f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b453:	48 8b 00             	mov    (%rax),%rax
    b456:	ff d0                	callq  *%rax
    b458:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    b45d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b461:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b465:	72 e8                	jb     b44f <do_ctors_aux+0x96>
    b467:	eb 01                	jmp    b46a <do_ctors_aux+0xb1>
    b469:	90                   	nop
    b46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b46e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b475:	00 00 
    b477:	74 05                	je     b47e <do_ctors_aux+0xc5>
    b479:	e8 0e 00 00 00       	callq  b48c <__stack_chk_fail>
    b47e:	c9                   	leaveq 
    b47f:	c3                   	retq   

000000000000b480 <init_global_object>:
    b480:	55                   	push   %rbp
    b481:	48 89 e5             	mov    %rsp,%rbp
    b484:	e8 30 ff ff ff       	callq  b3b9 <do_ctors_aux>
    b489:	90                   	nop
    b48a:	5d                   	pop    %rbp
    b48b:	c3                   	retq   

000000000000b48c <__stack_chk_fail>:
    b48c:	55                   	push   %rbp
    b48d:	48 89 e5             	mov    %rsp,%rbp
    b490:	e8 44 01 03 00       	callq  3b5d9 <abort>

000000000000b495 <__assert>:
    b495:	55                   	push   %rbp
    b496:	48 89 e5             	mov    %rsp,%rbp
    b499:	48 83 ec 20          	sub    $0x20,%rsp
    b49d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4a1:	89 75 f4             	mov    %esi,-0xc(%rbp)
    b4a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    b4a8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    b4ac:	e8 28 01 03 00       	callq  3b5d9 <abort>

000000000000b4b1 <spin_acquire_lock>:
    b4b1:	55                   	push   %rbp
    b4b2:	48 89 e5             	mov    %rsp,%rbp
    b4b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4b9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    b4c0:	eb 04                	jmp    b4c6 <spin_acquire_lock+0x15>
    b4c2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    b4c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4ca:	8b 00                	mov    (%rax),%eax
    b4cc:	85 c0                	test   %eax,%eax
    b4ce:	75 f2                	jne    b4c2 <spin_acquire_lock+0x11>
    b4d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b4d4:	b8 01 00 00 00       	mov    $0x1,%eax
    b4d9:	87 02                	xchg   %eax,(%rdx)
    b4db:	85 c0                	test   %eax,%eax
    b4dd:	75 e3                	jne    b4c2 <spin_acquire_lock+0x11>
    b4df:	b8 00 00 00 00       	mov    $0x0,%eax
    b4e4:	5d                   	pop    %rbp
    b4e5:	c3                   	retq   

000000000000b4e6 <segment_holding>:
    b4e6:	55                   	push   %rbp
    b4e7:	48 89 e5             	mov    %rsp,%rbp
    b4ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b4f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4f6:	48 05 78 03 00 00    	add    $0x378,%rax
    b4fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b504:	48 8b 00             	mov    (%rax),%rax
    b507:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    b50b:	72 1e                	jb     b52b <segment_holding+0x45>
    b50d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b511:	48 8b 10             	mov    (%rax),%rdx
    b514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b518:	48 8b 40 08          	mov    0x8(%rax),%rax
    b51c:	48 01 d0             	add    %rdx,%rax
    b51f:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    b523:	73 06                	jae    b52b <segment_holding+0x45>
    b525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b529:	eb 18                	jmp    b543 <segment_holding+0x5d>
    b52b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b52f:	48 8b 40 10          	mov    0x10(%rax),%rax
    b533:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b537:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b53c:	75 c2                	jne    b500 <segment_holding+0x1a>
    b53e:	b8 00 00 00 00       	mov    $0x0,%eax
    b543:	5d                   	pop    %rbp
    b544:	c3                   	retq   

000000000000b545 <init_mparams>:
    b545:	55                   	push   %rbp
    b546:	48 89 e5             	mov    %rsp,%rbp
    b549:	48 83 ec 20          	sub    $0x20,%rsp
    b54d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b554:	00 00 
    b556:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b55a:	31 c0                	xor    %eax,%eax
    b55c:	b8 01 00 00 00       	mov    $0x1,%eax
    b561:	87 05 99 c6 03 00    	xchg   %eax,0x3c699(%rip)        # 47c00 <malloc_global_mutex>
    b567:	85 c0                	test   %eax,%eax
    b569:	74 0c                	je     b577 <init_mparams+0x32>
    b56b:	48 8d 3d 8e c6 03 00 	lea    0x3c68e(%rip),%rdi        # 47c00 <malloc_global_mutex>
    b572:	e8 3a ff ff ff       	callq  b4b1 <spin_acquire_lock>
    b577:	48 8b 05 a2 c6 03 00 	mov    0x3c6a2(%rip),%rax        # 47c20 <mparams>
    b57e:	48 85 c0             	test   %rax,%rax
    b581:	0f 85 d1 00 00 00    	jne    b658 <init_mparams+0x113>
    b587:	48 c7 45 e8 00 10 00 	movq   $0x1000,-0x18(%rbp)
    b58e:	00 
    b58f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b593:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b597:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b59b:	48 83 e8 01          	sub    $0x1,%rax
    b59f:	48 23 45 f0          	and    -0x10(%rbp),%rax
    b5a3:	48 85 c0             	test   %rax,%rax
    b5a6:	75 11                	jne    b5b9 <init_mparams+0x74>
    b5a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5ac:	48 83 e8 01          	sub    $0x1,%rax
    b5b0:	48 23 45 e8          	and    -0x18(%rbp),%rax
    b5b4:	48 85 c0             	test   %rax,%rax
    b5b7:	74 05                	je     b5be <init_mparams+0x79>
    b5b9:	e8 1b 00 03 00       	callq  3b5d9 <abort>
    b5be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5c2:	48 89 05 67 c6 03 00 	mov    %rax,0x3c667(%rip)        # 47c30 <mparams+0x10>
    b5c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5cd:	48 89 05 54 c6 03 00 	mov    %rax,0x3c654(%rip)        # 47c28 <mparams+0x8>
    b5d4:	48 c7 05 59 c6 03 00 	movq   $0xffffffffffffffff,0x3c659(%rip)        # 47c38 <mparams+0x18>
    b5db:	ff ff ff ff 
    b5df:	48 c7 05 56 c6 03 00 	movq   $0x200000,0x3c656(%rip)        # 47c40 <mparams+0x20>
    b5e6:	00 00 20 00 
    b5ea:	c7 05 54 c6 03 00 02 	movl   $0x2,0x3c654(%rip)        # 47c48 <mparams+0x28>
    b5f1:	00 00 00 
    b5f4:	8b 05 4e c6 03 00    	mov    0x3c64e(%rip),%eax        # 47c48 <mparams+0x28>
    b5fa:	89 05 d0 c9 03 00    	mov    %eax,0x3c9d0(%rip)        # 47fd0 <_gm_+0x370>
    b600:	c7 05 ca c9 03 00 00 	movl   $0x0,0x3c9ca(%rip)        # 47fd4 <_gm_+0x374>
    b607:	00 00 00 
    b60a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    b60e:	be 08 00 00 00       	mov    $0x8,%esi
    b613:	48 89 c7             	mov    %rax,%rdi
    b616:	e8 d2 ca ff ff       	callq  80ed <sgx_read_rand>
    b61b:	85 c0                	test   %eax,%eax
    b61d:	74 05                	je     b624 <init_mparams+0xdf>
    b61f:	e8 b5 ff 02 00       	callq  3b5d9 <abort>
    b624:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b628:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    b62e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b632:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b636:	48 83 c8 08          	or     $0x8,%rax
    b63a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b63e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b642:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b646:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b64a:	48 8d 05 cf c5 03 00 	lea    0x3c5cf(%rip),%rax        # 47c20 <mparams>
    b651:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b655:	48 89 10             	mov    %rdx,(%rax)
    b658:	b8 00 00 00 00       	mov    $0x0,%eax
    b65d:	89 05 9d c5 03 00    	mov    %eax,0x3c59d(%rip)        # 47c00 <malloc_global_mutex>
    b663:	b8 01 00 00 00       	mov    $0x1,%eax
    b668:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    b66c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    b673:	00 00 
    b675:	74 05                	je     b67c <init_mparams+0x137>
    b677:	e8 10 fe ff ff       	callq  b48c <__stack_chk_fail>
    b67c:	c9                   	leaveq 
    b67d:	c3                   	retq   

000000000000b67e <do_check_any_chunk>:
    b67e:	55                   	push   %rbp
    b67f:	48 89 e5             	mov    %rsp,%rbp
    b682:	48 83 ec 10          	sub    $0x10,%rsp
    b686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b68a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b68e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b692:	48 83 c0 10          	add    $0x10,%rax
    b696:	83 e0 0f             	and    $0xf,%eax
    b699:	48 85 c0             	test   %rax,%rax
    b69c:	74 13                	je     b6b1 <do_check_any_chunk+0x33>
    b69e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b6a2:	48 8b 40 08          	mov    0x8(%rax),%rax
    b6a6:	48 83 f8 0b          	cmp    $0xb,%rax
    b6aa:	74 05                	je     b6b1 <do_check_any_chunk+0x33>
    b6ac:	e8 28 ff 02 00       	callq  3b5d9 <abort>
    b6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b5:	48 8b 40 18          	mov    0x18(%rax),%rax
    b6b9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    b6bd:	73 05                	jae    b6c4 <do_check_any_chunk+0x46>
    b6bf:	e8 15 ff 02 00       	callq  3b5d9 <abort>
    b6c4:	90                   	nop
    b6c5:	c9                   	leaveq 
    b6c6:	c3                   	retq   

000000000000b6c7 <do_check_top_chunk>:
    b6c7:	55                   	push   %rbp
    b6c8:	48 89 e5             	mov    %rsp,%rbp
    b6cb:	48 83 ec 20          	sub    $0x20,%rsp
    b6cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b6d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b6d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b6db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6df:	48 89 d6             	mov    %rdx,%rsi
    b6e2:	48 89 c7             	mov    %rax,%rdi
    b6e5:	e8 fc fd ff ff       	callq  b4e6 <segment_holding>
    b6ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b6ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b6f2:	48 8b 40 08          	mov    0x8(%rax),%rax
    b6f6:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    b6fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b6fe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b703:	75 05                	jne    b70a <do_check_top_chunk+0x43>
    b705:	e8 cf fe 02 00       	callq  3b5d9 <abort>
    b70a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b70e:	48 83 c0 10          	add    $0x10,%rax
    b712:	83 e0 0f             	and    $0xf,%eax
    b715:	48 85 c0             	test   %rax,%rax
    b718:	74 13                	je     b72d <do_check_top_chunk+0x66>
    b71a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b71e:	48 8b 40 08          	mov    0x8(%rax),%rax
    b722:	48 83 f8 0b          	cmp    $0xb,%rax
    b726:	74 05                	je     b72d <do_check_top_chunk+0x66>
    b728:	e8 ac fe 02 00       	callq  3b5d9 <abort>
    b72d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b731:	48 8b 40 18          	mov    0x18(%rax),%rax
    b735:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    b739:	73 05                	jae    b740 <do_check_top_chunk+0x79>
    b73b:	e8 99 fe 02 00       	callq  3b5d9 <abort>
    b740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b744:	48 8b 40 10          	mov    0x10(%rax),%rax
    b748:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    b74c:	74 05                	je     b753 <do_check_top_chunk+0x8c>
    b74e:	e8 86 fe 02 00       	callq  3b5d9 <abort>
    b753:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b758:	75 05                	jne    b75f <do_check_top_chunk+0x98>
    b75a:	e8 7a fe 02 00       	callq  3b5d9 <abort>
    b75f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b763:	48 8b 10             	mov    (%rax),%rdx
    b766:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b76a:	48 8b 40 08          	mov    0x8(%rax),%rax
    b76e:	48 01 d0             	add    %rdx,%rax
    b771:	48 89 c2             	mov    %rax,%rdx
    b774:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b778:	48 29 c2             	sub    %rax,%rdx
    b77b:	48 89 d0             	mov    %rdx,%rax
    b77e:	48 83 e8 50          	sub    $0x50,%rax
    b782:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    b786:	74 05                	je     b78d <do_check_top_chunk+0xc6>
    b788:	e8 4c fe 02 00       	callq  3b5d9 <abort>
    b78d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b791:	48 8b 40 08          	mov    0x8(%rax),%rax
    b795:	83 e0 01             	and    $0x1,%eax
    b798:	48 85 c0             	test   %rax,%rax
    b79b:	75 05                	jne    b7a2 <do_check_top_chunk+0xdb>
    b79d:	e8 37 fe 02 00       	callq  3b5d9 <abort>
    b7a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b7a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7aa:	48 01 d0             	add    %rdx,%rax
    b7ad:	48 8b 40 08          	mov    0x8(%rax),%rax
    b7b1:	83 e0 01             	and    $0x1,%eax
    b7b4:	48 85 c0             	test   %rax,%rax
    b7b7:	74 05                	je     b7be <do_check_top_chunk+0xf7>
    b7b9:	e8 1b fe 02 00       	callq  3b5d9 <abort>
    b7be:	90                   	nop
    b7bf:	c9                   	leaveq 
    b7c0:	c3                   	retq   

000000000000b7c1 <do_check_mmapped_chunk>:
    b7c1:	55                   	push   %rbp
    b7c2:	48 89 e5             	mov    %rsp,%rbp
    b7c5:	48 83 ec 20          	sub    $0x20,%rsp
    b7c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b7cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b7d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7d5:	48 8b 40 08          	mov    0x8(%rax),%rax
    b7d9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b7dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b7e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7e5:	48 8b 10             	mov    (%rax),%rdx
    b7e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7ec:	48 01 d0             	add    %rdx,%rax
    b7ef:	48 83 c0 20          	add    $0x20,%rax
    b7f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b7f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7fb:	48 8b 40 08          	mov    0x8(%rax),%rax
    b7ff:	83 e0 03             	and    $0x3,%eax
    b802:	48 85 c0             	test   %rax,%rax
    b805:	74 05                	je     b80c <do_check_mmapped_chunk+0x4b>
    b807:	e8 cd fd 02 00       	callq  3b5d9 <abort>
    b80c:	e8 c8 fd 02 00       	callq  3b5d9 <abort>

000000000000b811 <do_check_inuse_chunk>:
    b811:	55                   	push   %rbp
    b812:	48 89 e5             	mov    %rsp,%rbp
    b815:	48 83 ec 10          	sub    $0x10,%rsp
    b819:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b81d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b821:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b829:	48 89 d6             	mov    %rdx,%rsi
    b82c:	48 89 c7             	mov    %rax,%rdi
    b82f:	e8 4a fe ff ff       	callq  b67e <do_check_any_chunk>
    b834:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b838:	48 8b 40 08          	mov    0x8(%rax),%rax
    b83c:	83 e0 03             	and    $0x3,%eax
    b83f:	48 83 f8 01          	cmp    $0x1,%rax
    b843:	75 05                	jne    b84a <do_check_inuse_chunk+0x39>
    b845:	e8 8f fd 02 00       	callq  3b5d9 <abort>
    b84a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b84e:	48 8b 40 08          	mov    0x8(%rax),%rax
    b852:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b856:	48 89 c2             	mov    %rax,%rdx
    b859:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b85d:	48 01 d0             	add    %rdx,%rax
    b860:	48 8b 40 08          	mov    0x8(%rax),%rax
    b864:	83 e0 01             	and    $0x1,%eax
    b867:	48 85 c0             	test   %rax,%rax
    b86a:	75 05                	jne    b871 <do_check_inuse_chunk+0x60>
    b86c:	e8 68 fd 02 00       	callq  3b5d9 <abort>
    b871:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b875:	48 8b 40 08          	mov    0x8(%rax),%rax
    b879:	83 e0 03             	and    $0x3,%eax
    b87c:	48 85 c0             	test   %rax,%rax
    b87f:	74 40                	je     b8c1 <do_check_inuse_chunk+0xb0>
    b881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b885:	48 8b 40 08          	mov    0x8(%rax),%rax
    b889:	83 e0 01             	and    $0x1,%eax
    b88c:	48 85 c0             	test   %rax,%rax
    b88f:	75 30                	jne    b8c1 <do_check_inuse_chunk+0xb0>
    b891:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b895:	48 8b 00             	mov    (%rax),%rax
    b898:	48 f7 d8             	neg    %rax
    b89b:	48 89 c2             	mov    %rax,%rdx
    b89e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8a2:	48 01 d0             	add    %rdx,%rax
    b8a5:	48 8b 40 08          	mov    0x8(%rax),%rax
    b8a9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b8ad:	48 89 c2             	mov    %rax,%rdx
    b8b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8b4:	48 8b 00             	mov    (%rax),%rax
    b8b7:	48 39 c2             	cmp    %rax,%rdx
    b8ba:	74 05                	je     b8c1 <do_check_inuse_chunk+0xb0>
    b8bc:	e8 18 fd 02 00       	callq  3b5d9 <abort>
    b8c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8c5:	48 8b 40 08          	mov    0x8(%rax),%rax
    b8c9:	83 e0 03             	and    $0x3,%eax
    b8cc:	48 85 c0             	test   %rax,%rax
    b8cf:	75 13                	jne    b8e4 <do_check_inuse_chunk+0xd3>
    b8d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8d9:	48 89 d6             	mov    %rdx,%rsi
    b8dc:	48 89 c7             	mov    %rax,%rdi
    b8df:	e8 dd fe ff ff       	callq  b7c1 <do_check_mmapped_chunk>
    b8e4:	90                   	nop
    b8e5:	c9                   	leaveq 
    b8e6:	c3                   	retq   

000000000000b8e7 <do_check_free_chunk>:
    b8e7:	55                   	push   %rbp
    b8e8:	48 89 e5             	mov    %rsp,%rbp
    b8eb:	48 83 ec 20          	sub    $0x20,%rsp
    b8ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b8f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b8f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b8fb:	48 8b 40 08          	mov    0x8(%rax),%rax
    b8ff:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b903:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b907:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b90b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b90f:	48 01 d0             	add    %rdx,%rax
    b912:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b916:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b91a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b91e:	48 89 d6             	mov    %rdx,%rsi
    b921:	48 89 c7             	mov    %rax,%rdi
    b924:	e8 55 fd ff ff       	callq  b67e <do_check_any_chunk>
    b929:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b92d:	48 8b 40 08          	mov    0x8(%rax),%rax
    b931:	83 e0 03             	and    $0x3,%eax
    b934:	48 83 f8 01          	cmp    $0x1,%rax
    b938:	74 05                	je     b93f <do_check_free_chunk+0x58>
    b93a:	e8 9a fc 02 00       	callq  3b5d9 <abort>
    b93f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b943:	48 8b 40 08          	mov    0x8(%rax),%rax
    b947:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b94b:	48 89 c2             	mov    %rax,%rdx
    b94e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b952:	48 01 d0             	add    %rdx,%rax
    b955:	48 8b 40 08          	mov    0x8(%rax),%rax
    b959:	83 e0 01             	and    $0x1,%eax
    b95c:	48 85 c0             	test   %rax,%rax
    b95f:	74 05                	je     b966 <do_check_free_chunk+0x7f>
    b961:	e8 73 fc 02 00       	callq  3b5d9 <abort>
    b966:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b96a:	48 8b 40 08          	mov    0x8(%rax),%rax
    b96e:	83 e0 03             	and    $0x3,%eax
    b971:	48 85 c0             	test   %rax,%rax
    b974:	75 05                	jne    b97b <do_check_free_chunk+0x94>
    b976:	e8 5e fc 02 00       	callq  3b5d9 <abort>
    b97b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b97f:	48 8b 40 20          	mov    0x20(%rax),%rax
    b983:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    b987:	0f 84 c8 00 00 00    	je     ba55 <do_check_free_chunk+0x16e>
    b98d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b991:	48 8b 40 28          	mov    0x28(%rax),%rax
    b995:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    b999:	0f 84 b6 00 00 00    	je     ba55 <do_check_free_chunk+0x16e>
    b99f:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
    b9a4:	0f 86 9f 00 00 00    	jbe    ba49 <do_check_free_chunk+0x162>
    b9aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9ae:	83 e0 0f             	and    $0xf,%eax
    b9b1:	48 85 c0             	test   %rax,%rax
    b9b4:	74 05                	je     b9bb <do_check_free_chunk+0xd4>
    b9b6:	e8 1e fc 02 00       	callq  3b5d9 <abort>
    b9bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b9bf:	48 83 c0 10          	add    $0x10,%rax
    b9c3:	83 e0 0f             	and    $0xf,%eax
    b9c6:	48 85 c0             	test   %rax,%rax
    b9c9:	74 05                	je     b9d0 <do_check_free_chunk+0xe9>
    b9cb:	e8 09 fc 02 00       	callq  3b5d9 <abort>
    b9d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9d4:	48 8b 00             	mov    (%rax),%rax
    b9d7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    b9db:	74 05                	je     b9e2 <do_check_free_chunk+0xfb>
    b9dd:	e8 f7 fb 02 00       	callq  3b5d9 <abort>
    b9e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b9e6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b9ea:	83 e0 01             	and    $0x1,%eax
    b9ed:	48 85 c0             	test   %rax,%rax
    b9f0:	75 05                	jne    b9f7 <do_check_free_chunk+0x110>
    b9f2:	e8 e2 fb 02 00       	callq  3b5d9 <abort>
    b9f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b9fb:	48 8b 40 28          	mov    0x28(%rax),%rax
    b9ff:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ba03:	74 16                	je     ba1b <do_check_free_chunk+0x134>
    ba05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba09:	48 8b 40 08          	mov    0x8(%rax),%rax
    ba0d:	83 e0 03             	and    $0x3,%eax
    ba10:	48 83 f8 01          	cmp    $0x1,%rax
    ba14:	75 05                	jne    ba1b <do_check_free_chunk+0x134>
    ba16:	e8 be fb 02 00       	callq  3b5d9 <abort>
    ba1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ba1f:	48 8b 40 10          	mov    0x10(%rax),%rax
    ba23:	48 8b 40 18          	mov    0x18(%rax),%rax
    ba27:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    ba2b:	74 05                	je     ba32 <do_check_free_chunk+0x14b>
    ba2d:	e8 a7 fb 02 00       	callq  3b5d9 <abort>
    ba32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ba36:	48 8b 40 18          	mov    0x18(%rax),%rax
    ba3a:	48 8b 40 10          	mov    0x10(%rax),%rax
    ba3e:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    ba42:	74 11                	je     ba55 <do_check_free_chunk+0x16e>
    ba44:	e8 90 fb 02 00       	callq  3b5d9 <abort>
    ba49:	48 83 7d f0 08       	cmpq   $0x8,-0x10(%rbp)
    ba4e:	74 05                	je     ba55 <do_check_free_chunk+0x16e>
    ba50:	e8 84 fb 02 00       	callq  3b5d9 <abort>
    ba55:	90                   	nop
    ba56:	c9                   	leaveq 
    ba57:	c3                   	retq   

000000000000ba58 <do_check_malloced_chunk>:
    ba58:	55                   	push   %rbp
    ba59:	48 89 e5             	mov    %rsp,%rbp
    ba5c:	48 83 ec 30          	sub    $0x30,%rsp
    ba60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba64:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ba68:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ba6c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ba71:	74 7e                	je     baf1 <do_check_malloced_chunk+0x99>
    ba73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ba77:	48 83 e8 10          	sub    $0x10,%rax
    ba7b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ba7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba83:	48 8b 40 08          	mov    0x8(%rax),%rax
    ba87:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    ba8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ba8f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba97:	48 89 d6             	mov    %rdx,%rsi
    ba9a:	48 89 c7             	mov    %rax,%rdi
    ba9d:	e8 6f fd ff ff       	callq  b811 <do_check_inuse_chunk>
    baa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa6:	83 e0 0f             	and    $0xf,%eax
    baa9:	48 85 c0             	test   %rax,%rax
    baac:	74 05                	je     bab3 <do_check_malloced_chunk+0x5b>
    baae:	e8 26 fb 02 00       	callq  3b5d9 <abort>
    bab3:	48 83 7d f8 1f       	cmpq   $0x1f,-0x8(%rbp)
    bab8:	77 05                	ja     babf <do_check_malloced_chunk+0x67>
    baba:	e8 1a fb 02 00       	callq  3b5d9 <abort>
    babf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bac3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    bac7:	73 05                	jae    bace <do_check_malloced_chunk+0x76>
    bac9:	e8 0b fb 02 00       	callq  3b5d9 <abort>
    bace:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bad2:	48 8b 40 08          	mov    0x8(%rax),%rax
    bad6:	83 e0 03             	and    $0x3,%eax
    bad9:	48 85 c0             	test   %rax,%rax
    badc:	74 13                	je     baf1 <do_check_malloced_chunk+0x99>
    bade:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bae2:	48 83 c0 20          	add    $0x20,%rax
    bae6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    baea:	72 05                	jb     baf1 <do_check_malloced_chunk+0x99>
    baec:	e8 e8 fa 02 00       	callq  3b5d9 <abort>
    baf1:	90                   	nop
    baf2:	c9                   	leaveq 
    baf3:	c3                   	retq   

000000000000baf4 <mmap_resize>:
    baf4:	55                   	push   %rbp
    baf5:	48 89 e5             	mov    %rsp,%rbp
    baf8:	48 83 ec 60          	sub    $0x60,%rsp
    bafc:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    bb00:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    bb04:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    bb08:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
    bb0b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    bb0f:	48 8b 40 08          	mov    0x8(%rax),%rax
    bb13:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    bb17:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    bb1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bb1f:	48 c1 e8 03          	shr    $0x3,%rax
    bb23:	48 83 f8 1f          	cmp    $0x1f,%rax
    bb27:	77 0a                	ja     bb33 <mmap_resize+0x3f>
    bb29:	b8 00 00 00 00       	mov    $0x0,%eax
    bb2e:	e9 7d 01 00 00       	jmpq   bcb0 <mmap_resize+0x1bc>
    bb33:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bb37:	48 83 c0 08          	add    $0x8,%rax
    bb3b:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    bb3f:	72 20                	jb     bb61 <mmap_resize+0x6d>
    bb41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    bb45:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
    bb49:	48 8b 15 e0 c0 03 00 	mov    0x3c0e0(%rip),%rdx        # 47c30 <mparams+0x10>
    bb50:	48 01 d2             	add    %rdx,%rdx
    bb53:	48 39 d0             	cmp    %rdx,%rax
    bb56:	77 09                	ja     bb61 <mmap_resize+0x6d>
    bb58:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    bb5c:	e9 4f 01 00 00       	jmpq   bcb0 <mmap_resize+0x1bc>
    bb61:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    bb65:	48 8b 00             	mov    (%rax),%rax
    bb68:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    bb6c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    bb70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bb74:	48 01 d0             	add    %rdx,%rax
    bb77:	48 83 c0 20          	add    $0x20,%rax
    bb7b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bb7f:	48 8b 15 a2 c0 03 00 	mov    0x3c0a2(%rip),%rdx        # 47c28 <mparams+0x8>
    bb86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bb8a:	48 01 d0             	add    %rdx,%rax
    bb8d:	48 8d 50 3e          	lea    0x3e(%rax),%rdx
    bb91:	48 8b 05 90 c0 03 00 	mov    0x3c090(%rip),%rax        # 47c28 <mparams+0x8>
    bb98:	48 f7 d8             	neg    %rax
    bb9b:	48 21 d0             	and    %rdx,%rax
    bb9e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    bba2:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
    bba9:	ff 
    bbaa:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
    bbaf:	0f 84 f6 00 00 00    	je     bcab <mmap_resize+0x1b7>
    bbb5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bbbd:	48 01 d0             	add    %rdx,%rax
    bbc0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    bbc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bbc8:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    bbcc:	48 83 e8 20          	sub    $0x20,%rax
    bbd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bbd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbd8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bbdc:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bbe0:	48 8b 0d 39 c0 03 00 	mov    0x3c039(%rip),%rcx        # 47c20 <mparams>
    bbe7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    bbeb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bbef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf3:	48 01 f0             	add    %rsi,%rax
    bbf6:	48 31 ca             	xor    %rcx,%rdx
    bbf9:	48 89 10             	mov    %rdx,(%rax)
    bbfc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc04:	48 01 d0             	add    %rdx,%rax
    bc07:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
    bc0e:	00 
    bc0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc13:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bc17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc1b:	48 01 d0             	add    %rdx,%rax
    bc1e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bc25:	00 
    bc26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc2a:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc2e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    bc32:	73 0c                	jae    bc40 <mmap_resize+0x14c>
    bc34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc38:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc3c:	48 89 50 18          	mov    %rdx,0x18(%rax)
    bc40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc44:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    bc4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bc4f:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    bc53:	48 01 c2             	add    %rax,%rdx
    bc56:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc5a:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    bc61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc65:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    bc6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc70:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    bc77:	48 39 c2             	cmp    %rax,%rdx
    bc7a:	76 16                	jbe    bc92 <mmap_resize+0x19e>
    bc7c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc80:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    bc87:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc8b:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
    bc92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc96:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bc9a:	48 89 d6             	mov    %rdx,%rsi
    bc9d:	48 89 c7             	mov    %rax,%rdi
    bca0:	e8 1c fb ff ff       	callq  b7c1 <do_check_mmapped_chunk>
    bca5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bca9:	eb 05                	jmp    bcb0 <mmap_resize+0x1bc>
    bcab:	b8 00 00 00 00       	mov    $0x0,%eax
    bcb0:	c9                   	leaveq 
    bcb1:	c3                   	retq   

000000000000bcb2 <init_top>:
    bcb2:	55                   	push   %rbp
    bcb3:	48 89 e5             	mov    %rsp,%rbp
    bcb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bcba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bcbe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bcc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bcc6:	48 83 c0 10          	add    $0x10,%rax
    bcca:	83 e0 0f             	and    $0xf,%eax
    bccd:	48 85 c0             	test   %rax,%rax
    bcd0:	74 10                	je     bce2 <init_top+0x30>
    bcd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bcd6:	48 83 c0 10          	add    $0x10,%rax
    bcda:	48 f7 d8             	neg    %rax
    bcdd:	83 e0 0f             	and    $0xf,%eax
    bce0:	eb 05                	jmp    bce7 <init_top+0x35>
    bce2:	b8 00 00 00 00       	mov    $0x0,%eax
    bce7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bceb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcef:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    bcf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf7:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
    bcfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bd03:	48 89 50 28          	mov    %rdx,0x28(%rax)
    bd07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bd0f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bd13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd17:	48 83 c8 01          	or     $0x1,%rax
    bd1b:	48 89 c2             	mov    %rax,%rdx
    bd1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bd22:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bd26:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bd2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd2e:	48 01 d0             	add    %rdx,%rax
    bd31:	48 c7 40 08 50 00 00 	movq   $0x50,0x8(%rax)
    bd38:	00 
    bd39:	48 8b 15 00 bf 03 00 	mov    0x3bf00(%rip),%rdx        # 47c40 <mparams+0x20>
    bd40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd44:	48 89 50 30          	mov    %rdx,0x30(%rax)
    bd48:	90                   	nop
    bd49:	5d                   	pop    %rbp
    bd4a:	c3                   	retq   

000000000000bd4b <init_bins>:
    bd4b:	55                   	push   %rbp
    bd4c:	48 89 e5             	mov    %rsp,%rbp
    bd4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd53:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    bd5a:	eb 42                	jmp    bd9e <init_bins+0x53>
    bd5c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    bd5f:	01 c0                	add    %eax,%eax
    bd61:	89 c0                	mov    %eax,%eax
    bd63:	48 83 c0 08          	add    $0x8,%rax
    bd67:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bd6e:	00 
    bd6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd73:	48 01 d0             	add    %rdx,%rax
    bd76:	48 83 c0 08          	add    $0x8,%rax
    bd7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bd7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd82:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bd86:	48 89 50 18          	mov    %rdx,0x18(%rax)
    bd8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd8e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    bd92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd96:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bd9a:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    bd9e:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
    bda2:	76 b8                	jbe    bd5c <init_bins+0x11>
    bda4:	90                   	nop
    bda5:	5d                   	pop    %rbp
    bda6:	c3                   	retq   

000000000000bda7 <prepend_alloc>:
    bda7:	55                   	push   %rbp
    bda8:	48 89 e5             	mov    %rsp,%rbp
    bdab:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    bdb2:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    bdb9:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
    bdc0:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
    bdc7:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
    bdce:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    bdd5:	48 83 c0 10          	add    $0x10,%rax
    bdd9:	83 e0 0f             	and    $0xf,%eax
    bddc:	48 85 c0             	test   %rax,%rax
    bddf:	74 16                	je     bdf7 <prepend_alloc+0x50>
    bde1:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    bde8:	48 83 c0 10          	add    $0x10,%rax
    bdec:	48 f7 d8             	neg    %rax
    bdef:	83 e0 0f             	and    $0xf,%eax
    bdf2:	48 89 c2             	mov    %rax,%rdx
    bdf5:	eb 05                	jmp    bdfc <prepend_alloc+0x55>
    bdf7:	ba 00 00 00 00       	mov    $0x0,%edx
    bdfc:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    be03:	48 01 d0             	add    %rdx,%rax
    be06:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    be0d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    be14:	48 83 c0 10          	add    $0x10,%rax
    be18:	83 e0 0f             	and    $0xf,%eax
    be1b:	48 85 c0             	test   %rax,%rax
    be1e:	74 16                	je     be36 <prepend_alloc+0x8f>
    be20:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    be27:	48 83 c0 10          	add    $0x10,%rax
    be2b:	48 f7 d8             	neg    %rax
    be2e:	83 e0 0f             	and    $0xf,%eax
    be31:	48 89 c2             	mov    %rax,%rdx
    be34:	eb 05                	jmp    be3b <prepend_alloc+0x94>
    be36:	ba 00 00 00 00       	mov    $0x0,%edx
    be3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    be42:	48 01 d0             	add    %rdx,%rax
    be45:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    be4c:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    be53:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    be5a:	48 29 c2             	sub    %rax,%rdx
    be5d:	48 89 d0             	mov    %rdx,%rax
    be60:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    be67:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    be6e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    be75:	48 01 d0             	add    %rdx,%rax
    be78:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    be7f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    be86:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    be8d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    be94:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    be9b:	48 83 c8 03          	or     $0x3,%rax
    be9f:	48 89 c2             	mov    %rax,%rdx
    bea2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bea9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bead:	48 8b 0d 6c bd 03 00 	mov    0x3bd6c(%rip),%rcx        # 47c20 <mparams>
    beb4:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    bebb:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
    bec2:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    bec9:	48 01 f0             	add    %rsi,%rax
    becc:	48 31 ca             	xor    %rcx,%rdx
    becf:	48 89 10             	mov    %rdx,(%rax)
    bed2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    bed9:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    bee0:	77 05                	ja     bee7 <prepend_alloc+0x140>
    bee2:	e8 f2 f6 02 00       	callq  3b5d9 <abort>
    bee7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    beee:	48 8b 40 08          	mov    0x8(%rax),%rax
    bef2:	83 e0 01             	and    $0x1,%eax
    bef5:	48 85 c0             	test   %rax,%rax
    bef8:	75 05                	jne    beff <prepend_alloc+0x158>
    befa:	e8 da f6 02 00       	callq  3b5d9 <abort>
    beff:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
    bf06:	1f 
    bf07:	77 05                	ja     bf0e <prepend_alloc+0x167>
    bf09:	e8 cb f6 02 00       	callq  3b5d9 <abort>
    bf0e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf15:	48 8b 40 28          	mov    0x28(%rax),%rax
    bf19:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    bf20:	75 75                	jne    bf97 <prepend_alloc+0x1f0>
    bf22:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf29:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bf2d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    bf34:	48 01 c2             	add    %rax,%rdx
    bf37:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf3e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bf42:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf49:	48 8b 40 10          	mov    0x10(%rax),%rax
    bf4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bf51:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf58:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    bf5f:	48 89 50 28          	mov    %rdx,0x28(%rax)
    bf63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf67:	48 83 c8 01          	or     $0x1,%rax
    bf6b:	48 89 c2             	mov    %rax,%rdx
    bf6e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    bf75:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bf79:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    bf80:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf87:	48 89 d6             	mov    %rdx,%rsi
    bf8a:	48 89 c7             	mov    %rax,%rdi
    bf8d:	e8 35 f7 ff ff       	callq  b6c7 <do_check_top_chunk>
    bf92:	e9 95 0a 00 00       	jmpq   ca2c <prepend_alloc+0xc85>
    bf97:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bf9e:	48 8b 40 20          	mov    0x20(%rax),%rax
    bfa2:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    bfa9:	75 71                	jne    c01c <prepend_alloc+0x275>
    bfab:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bfb2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    bfb6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    bfbd:	48 01 c2             	add    %rax,%rdx
    bfc0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bfc7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bfcb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bfd2:	48 8b 40 08          	mov    0x8(%rax),%rax
    bfd6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    bfda:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    bfe1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    bfe8:	48 89 50 20          	mov    %rdx,0x20(%rax)
    bfec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bff0:	48 83 c8 01          	or     $0x1,%rax
    bff4:	48 89 c2             	mov    %rax,%rdx
    bff7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    bffe:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c002:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    c009:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c00d:	48 01 c2             	add    %rax,%rdx
    c010:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c014:	48 89 02             	mov    %rax,(%rdx)
    c017:	e9 10 0a 00 00       	jmpq   ca2c <prepend_alloc+0xc85>
    c01c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c023:	48 8b 40 08          	mov    0x8(%rax),%rax
    c027:	83 e0 03             	and    $0x3,%eax
    c02a:	48 83 f8 01          	cmp    $0x1,%rax
    c02e:	0f 85 70 05 00 00    	jne    c5a4 <prepend_alloc+0x7fd>
    c034:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c03b:	48 8b 40 08          	mov    0x8(%rax),%rax
    c03f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c043:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    c047:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c04b:	48 c1 e8 03          	shr    $0x3,%rax
    c04f:	48 83 f8 1f          	cmp    $0x1f,%rax
    c053:	0f 87 c6 01 00 00    	ja     c21f <prepend_alloc+0x478>
    c059:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c060:	48 8b 40 10          	mov    0x10(%rax),%rax
    c064:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    c068:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c06f:	48 8b 40 18          	mov    0x18(%rax),%rax
    c073:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c077:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c07b:	48 c1 e8 03          	shr    $0x3,%rax
    c07f:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    c085:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c08c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    c090:	75 05                	jne    c097 <prepend_alloc+0x2f0>
    c092:	e8 42 f5 02 00       	callq  3b5d9 <abort>
    c097:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c09e:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    c0a2:	75 05                	jne    c0a9 <prepend_alloc+0x302>
    c0a4:	e8 30 f5 02 00       	callq  3b5d9 <abort>
    c0a9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c0b0:	48 8b 40 08          	mov    0x8(%rax),%rax
    c0b4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c0b8:	48 89 c2             	mov    %rax,%rdx
    c0bb:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    c0c1:	c1 e0 03             	shl    $0x3,%eax
    c0c4:	89 c0                	mov    %eax,%eax
    c0c6:	48 39 c2             	cmp    %rax,%rdx
    c0c9:	74 05                	je     c0d0 <prepend_alloc+0x329>
    c0cb:	e8 09 f5 02 00       	callq  3b5d9 <abort>
    c0d0:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    c0d6:	01 c0                	add    %eax,%eax
    c0d8:	89 c0                	mov    %eax,%eax
    c0da:	48 83 c0 08          	add    $0x8,%rax
    c0de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c0e5:	00 
    c0e6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c0ed:	48 01 d0             	add    %rdx,%rax
    c0f0:	48 83 c0 08          	add    $0x8,%rax
    c0f4:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    c0f8:	0f 94 c0             	sete   %al
    c0fb:	0f b6 c0             	movzbl %al,%eax
    c0fe:	48 85 c0             	test   %rax,%rax
    c101:	75 48                	jne    c14b <prepend_alloc+0x3a4>
    c103:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c10a:	48 8b 40 18          	mov    0x18(%rax),%rax
    c10e:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    c112:	0f 93 c0             	setae  %al
    c115:	0f b6 c0             	movzbl %al,%eax
    c118:	48 85 c0             	test   %rax,%rax
    c11b:	74 21                	je     c13e <prepend_alloc+0x397>
    c11d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c121:	48 8b 40 18          	mov    0x18(%rax),%rax
    c125:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    c12c:	0f 94 c0             	sete   %al
    c12f:	0f b6 c0             	movzbl %al,%eax
    c132:	48 85 c0             	test   %rax,%rax
    c135:	74 07                	je     c13e <prepend_alloc+0x397>
    c137:	b8 01 00 00 00       	mov    $0x1,%eax
    c13c:	eb 05                	jmp    c143 <prepend_alloc+0x39c>
    c13e:	b8 00 00 00 00       	mov    $0x0,%eax
    c143:	85 c0                	test   %eax,%eax
    c145:	0f 84 cf 00 00 00    	je     c21a <prepend_alloc+0x473>
    c14b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c14f:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    c153:	75 2c                	jne    c181 <prepend_alloc+0x3da>
    c155:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c15c:	8b 10                	mov    (%rax),%edx
    c15e:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    c164:	be 01 00 00 00       	mov    $0x1,%esi
    c169:	89 c1                	mov    %eax,%ecx
    c16b:	d3 e6                	shl    %cl,%esi
    c16d:	89 f0                	mov    %esi,%eax
    c16f:	f7 d0                	not    %eax
    c171:	21 c2                	and    %eax,%edx
    c173:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c17a:	89 10                	mov    %edx,(%rax)
    c17c:	e9 0d 04 00 00       	jmpq   c58e <prepend_alloc+0x7e7>
    c181:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    c187:	01 c0                	add    %eax,%eax
    c189:	89 c0                	mov    %eax,%eax
    c18b:	48 83 c0 08          	add    $0x8,%rax
    c18f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c196:	00 
    c197:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c19e:	48 01 d0             	add    %rdx,%rax
    c1a1:	48 83 c0 08          	add    $0x8,%rax
    c1a5:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    c1a9:	0f 94 c0             	sete   %al
    c1ac:	0f b6 c0             	movzbl %al,%eax
    c1af:	48 85 c0             	test   %rax,%rax
    c1b2:	75 44                	jne    c1f8 <prepend_alloc+0x451>
    c1b4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c1bb:	48 8b 40 18          	mov    0x18(%rax),%rax
    c1bf:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    c1c3:	0f 93 c0             	setae  %al
    c1c6:	0f b6 c0             	movzbl %al,%eax
    c1c9:	48 85 c0             	test   %rax,%rax
    c1cc:	74 21                	je     c1ef <prepend_alloc+0x448>
    c1ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c1d2:	48 8b 40 10          	mov    0x10(%rax),%rax
    c1d6:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    c1dd:	0f 94 c0             	sete   %al
    c1e0:	0f b6 c0             	movzbl %al,%eax
    c1e3:	48 85 c0             	test   %rax,%rax
    c1e6:	74 07                	je     c1ef <prepend_alloc+0x448>
    c1e8:	b8 01 00 00 00       	mov    $0x1,%eax
    c1ed:	eb 05                	jmp    c1f4 <prepend_alloc+0x44d>
    c1ef:	b8 00 00 00 00       	mov    $0x0,%eax
    c1f4:	85 c0                	test   %eax,%eax
    c1f6:	74 1d                	je     c215 <prepend_alloc+0x46e>
    c1f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c1fc:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c200:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c204:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c208:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    c20c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c210:	e9 79 03 00 00       	jmpq   c58e <prepend_alloc+0x7e7>
    c215:	e8 bf f3 02 00       	callq  3b5d9 <abort>
    c21a:	e8 ba f3 02 00       	callq  3b5d9 <abort>
    c21f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c226:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    c22a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c22e:	48 8b 40 30          	mov    0x30(%rax),%rax
    c232:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    c236:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c23a:	48 8b 40 18          	mov    0x18(%rax),%rax
    c23e:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    c242:	0f 84 9e 00 00 00    	je     c2e6 <prepend_alloc+0x53f>
    c248:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c24c:	48 8b 40 10          	mov    0x10(%rax),%rax
    c250:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    c254:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c258:	48 8b 40 18          	mov    0x18(%rax),%rax
    c25c:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    c263:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c26a:	48 8b 40 18          	mov    0x18(%rax),%rax
    c26e:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    c272:	0f 93 c0             	setae  %al
    c275:	0f b6 c0             	movzbl %al,%eax
    c278:	48 85 c0             	test   %rax,%rax
    c27b:	74 1e                	je     c29b <prepend_alloc+0x4f4>
    c27d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c281:	48 8b 40 18          	mov    0x18(%rax),%rax
    c285:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    c289:	0f 94 c0             	sete   %al
    c28c:	0f b6 c0             	movzbl %al,%eax
    c28f:	48 85 c0             	test   %rax,%rax
    c292:	74 07                	je     c29b <prepend_alloc+0x4f4>
    c294:	b8 01 00 00 00       	mov    $0x1,%eax
    c299:	eb 05                	jmp    c2a0 <prepend_alloc+0x4f9>
    c29b:	b8 00 00 00 00       	mov    $0x0,%eax
    c2a0:	85 c0                	test   %eax,%eax
    c2a2:	74 3d                	je     c2e1 <prepend_alloc+0x53a>
    c2a4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c2ab:	48 8b 40 10          	mov    0x10(%rax),%rax
    c2af:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    c2b3:	0f 94 c0             	sete   %al
    c2b6:	0f b6 c0             	movzbl %al,%eax
    c2b9:	48 85 c0             	test   %rax,%rax
    c2bc:	74 23                	je     c2e1 <prepend_alloc+0x53a>
    c2be:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c2c2:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c2c9:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c2cd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c2d4:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    c2d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c2dc:	e9 f2 00 00 00       	jmpq   c3d3 <prepend_alloc+0x62c>
    c2e1:	e8 f3 f2 02 00       	callq  3b5d9 <abort>
    c2e6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c2ea:	48 83 c0 28          	add    $0x28,%rax
    c2ee:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    c2f5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    c2fc:	48 8b 00             	mov    (%rax),%rax
    c2ff:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    c306:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    c30d:	00 
    c30e:	75 4f                	jne    c35f <prepend_alloc+0x5b8>
    c310:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c314:	48 83 c0 20          	add    $0x20,%rax
    c318:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    c31f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    c326:	48 8b 00             	mov    (%rax),%rax
    c329:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    c330:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    c337:	00 
    c338:	0f 84 95 00 00 00    	je     c3d3 <prepend_alloc+0x62c>
    c33e:	eb 1f                	jmp    c35f <prepend_alloc+0x5b8>
    c340:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    c347:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    c34e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    c355:	48 8b 00             	mov    (%rax),%rax
    c358:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    c35f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c366:	48 83 c0 28          	add    $0x28,%rax
    c36a:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    c371:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    c378:	48 8b 00             	mov    (%rax),%rax
    c37b:	48 85 c0             	test   %rax,%rax
    c37e:	75 c0                	jne    c340 <prepend_alloc+0x599>
    c380:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c387:	48 83 c0 20          	add    $0x20,%rax
    c38b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    c392:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    c399:	48 8b 00             	mov    (%rax),%rax
    c39c:	48 85 c0             	test   %rax,%rax
    c39f:	75 9f                	jne    c340 <prepend_alloc+0x599>
    c3a1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c3a8:	48 8b 40 18          	mov    0x18(%rax),%rax
    c3ac:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    c3b3:	0f 93 c0             	setae  %al
    c3b6:	0f b6 c0             	movzbl %al,%eax
    c3b9:	48 85 c0             	test   %rax,%rax
    c3bc:	74 10                	je     c3ce <prepend_alloc+0x627>
    c3be:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    c3c5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c3cc:	eb 05                	jmp    c3d3 <prepend_alloc+0x62c>
    c3ce:	e8 06 f2 02 00       	callq  3b5d9 <abort>
    c3d3:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    c3d8:	0f 84 b0 01 00 00    	je     c58e <prepend_alloc+0x7e7>
    c3de:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c3e2:	8b 40 38             	mov    0x38(%rax),%eax
    c3e5:	89 c0                	mov    %eax,%eax
    c3e7:	48 83 c0 4a          	add    $0x4a,%rax
    c3eb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3f2:	00 
    c3f3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c3fa:	48 01 d0             	add    %rdx,%rax
    c3fd:	48 83 c0 08          	add    $0x8,%rax
    c401:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c405:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c409:	48 8b 00             	mov    (%rax),%rax
    c40c:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    c410:	75 46                	jne    c458 <prepend_alloc+0x6b1>
    c412:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c416:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c41d:	48 89 10             	mov    %rdx,(%rax)
    c420:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c424:	48 8b 00             	mov    (%rax),%rax
    c427:	48 85 c0             	test   %rax,%rax
    c42a:	75 7b                	jne    c4a7 <prepend_alloc+0x700>
    c42c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c433:	8b 50 04             	mov    0x4(%rax),%edx
    c436:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c43a:	8b 40 38             	mov    0x38(%rax),%eax
    c43d:	be 01 00 00 00       	mov    $0x1,%esi
    c442:	89 c1                	mov    %eax,%ecx
    c444:	d3 e6                	shl    %cl,%esi
    c446:	89 f0                	mov    %esi,%eax
    c448:	f7 d0                	not    %eax
    c44a:	21 c2                	and    %eax,%edx
    c44c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c453:	89 50 04             	mov    %edx,0x4(%rax)
    c456:	eb 4f                	jmp    c4a7 <prepend_alloc+0x700>
    c458:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c45f:	48 8b 40 18          	mov    0x18(%rax),%rax
    c463:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    c467:	0f 93 c0             	setae  %al
    c46a:	0f b6 c0             	movzbl %al,%eax
    c46d:	48 85 c0             	test   %rax,%rax
    c470:	74 30                	je     c4a2 <prepend_alloc+0x6fb>
    c472:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c476:	48 8b 40 20          	mov    0x20(%rax),%rax
    c47a:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    c47e:	75 11                	jne    c491 <prepend_alloc+0x6ea>
    c480:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c484:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c48b:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c48f:	eb 16                	jmp    c4a7 <prepend_alloc+0x700>
    c491:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c495:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c49c:	48 89 50 28          	mov    %rdx,0x28(%rax)
    c4a0:	eb 05                	jmp    c4a7 <prepend_alloc+0x700>
    c4a2:	e8 32 f1 02 00       	callq  3b5d9 <abort>
    c4a7:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    c4ae:	00 
    c4af:	0f 84 d9 00 00 00    	je     c58e <prepend_alloc+0x7e7>
    c4b5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c4bc:	48 8b 40 18          	mov    0x18(%rax),%rax
    c4c0:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    c4c7:	0f 93 c0             	setae  %al
    c4ca:	0f b6 c0             	movzbl %al,%eax
    c4cd:	48 85 c0             	test   %rax,%rax
    c4d0:	0f 84 b3 00 00 00    	je     c589 <prepend_alloc+0x7e2>
    c4d6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c4dd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    c4e1:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c4e5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c4e9:	48 8b 40 20          	mov    0x20(%rax),%rax
    c4ed:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c4f1:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    c4f6:	74 3f                	je     c537 <prepend_alloc+0x790>
    c4f8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c4ff:	48 8b 40 18          	mov    0x18(%rax),%rax
    c503:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    c507:	0f 93 c0             	setae  %al
    c50a:	0f b6 c0             	movzbl %al,%eax
    c50d:	48 85 c0             	test   %rax,%rax
    c510:	74 20                	je     c532 <prepend_alloc+0x78b>
    c512:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c519:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c51d:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c521:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c525:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c52c:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c530:	eb 05                	jmp    c537 <prepend_alloc+0x790>
    c532:	e8 a2 f0 02 00       	callq  3b5d9 <abort>
    c537:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c53b:	48 8b 40 28          	mov    0x28(%rax),%rax
    c53f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    c543:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    c548:	74 44                	je     c58e <prepend_alloc+0x7e7>
    c54a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c551:	48 8b 40 18          	mov    0x18(%rax),%rax
    c555:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    c559:	0f 93 c0             	setae  %al
    c55c:	0f b6 c0             	movzbl %al,%eax
    c55f:	48 85 c0             	test   %rax,%rax
    c562:	74 20                	je     c584 <prepend_alloc+0x7dd>
    c564:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c56b:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    c56f:	48 89 50 28          	mov    %rdx,0x28(%rax)
    c573:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c577:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c57e:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c582:	eb 0a                	jmp    c58e <prepend_alloc+0x7e7>
    c584:	e8 50 f0 02 00       	callq  3b5d9 <abort>
    c589:	e8 4b f0 02 00       	callq  3b5d9 <abort>
    c58e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c592:	48 01 85 28 ff ff ff 	add    %rax,-0xd8(%rbp)
    c599:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c59d:	48 01 85 30 ff ff ff 	add    %rax,-0xd0(%rbp)
    c5a4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c5ab:	48 8b 40 08          	mov    0x8(%rax),%rax
    c5af:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    c5b3:	48 89 c2             	mov    %rax,%rdx
    c5b6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c5bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c5c1:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    c5c8:	48 83 c8 01          	or     $0x1,%rax
    c5cc:	48 89 c2             	mov    %rax,%rdx
    c5cf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c5d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c5da:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    c5e1:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    c5e8:	48 01 c2             	add    %rax,%rdx
    c5eb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    c5f2:	48 89 02             	mov    %rax,(%rdx)
    c5f5:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    c5fc:	48 c1 e8 03          	shr    $0x3,%rax
    c600:	48 83 f8 1f          	cmp    $0x1f,%rax
    c604:	0f 87 18 01 00 00    	ja     c722 <prepend_alloc+0x97b>
    c60a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    c611:	48 c1 e8 03          	shr    $0x3,%rax
    c615:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    c61b:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    c621:	01 c0                	add    %eax,%eax
    c623:	89 c0                	mov    %eax,%eax
    c625:	48 83 c0 08          	add    $0x8,%rax
    c629:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c630:	00 
    c631:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c638:	48 01 d0             	add    %rdx,%rax
    c63b:	48 83 c0 08          	add    $0x8,%rax
    c63f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c643:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c647:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    c64e:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
    c655:	1f 
    c656:	77 05                	ja     c65d <prepend_alloc+0x8b6>
    c658:	e8 7c ef 02 00       	callq  3b5d9 <abort>
    c65d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c664:	8b 10                	mov    (%rax),%edx
    c666:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    c66c:	be 01 00 00 00       	mov    $0x1,%esi
    c671:	89 c1                	mov    %eax,%ecx
    c673:	d3 e6                	shl    %cl,%esi
    c675:	89 f0                	mov    %esi,%eax
    c677:	21 d0                	and    %edx,%eax
    c679:	85 c0                	test   %eax,%eax
    c67b:	75 27                	jne    c6a4 <prepend_alloc+0x8fd>
    c67d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c684:	8b 10                	mov    (%rax),%edx
    c686:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    c68c:	be 01 00 00 00       	mov    $0x1,%esi
    c691:	89 c1                	mov    %eax,%ecx
    c693:	d3 e6                	shl    %cl,%esi
    c695:	89 f0                	mov    %esi,%eax
    c697:	09 c2                	or     %eax,%edx
    c699:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c6a0:	89 10                	mov    %edx,(%rax)
    c6a2:	eb 37                	jmp    c6db <prepend_alloc+0x934>
    c6a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6a8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c6ac:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c6b3:	48 8b 40 18          	mov    0x18(%rax),%rax
    c6b7:	48 39 c2             	cmp    %rax,%rdx
    c6ba:	0f 93 c0             	setae  %al
    c6bd:	0f b6 c0             	movzbl %al,%eax
    c6c0:	48 85 c0             	test   %rax,%rax
    c6c3:	74 11                	je     c6d6 <prepend_alloc+0x92f>
    c6c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6c9:	48 8b 40 10          	mov    0x10(%rax),%rax
    c6cd:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    c6d4:	eb 05                	jmp    c6db <prepend_alloc+0x934>
    c6d6:	e8 fe ee 02 00       	callq  3b5d9 <abort>
    c6db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6df:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    c6e6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c6ea:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    c6f1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    c6f8:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c6fc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c703:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    c70a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c70e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c715:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c719:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c71d:	e9 f1 02 00 00       	jmpq   ca13 <prepend_alloc+0xc6c>
    c722:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c729:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c72d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    c734:	48 c1 e8 08          	shr    $0x8,%rax
    c738:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    c73e:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
    c745:	75 0c                	jne    c753 <prepend_alloc+0x9ac>
    c747:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
    c74e:	00 00 00 
    c751:	eb 5d                	jmp    c7b0 <prepend_alloc+0xa09>
    c753:	81 bd 1c ff ff ff ff 	cmpl   $0xffff,-0xe4(%rbp)
    c75a:	ff 00 00 
    c75d:	76 0c                	jbe    c76b <prepend_alloc+0x9c4>
    c75f:	c7 85 14 ff ff ff 1f 	movl   $0x1f,-0xec(%rbp)
    c766:	00 00 00 
    c769:	eb 45                	jmp    c7b0 <prepend_alloc+0xa09>
    c76b:	0f bd 85 1c ff ff ff 	bsr    -0xe4(%rbp),%eax
    c772:	83 f0 1f             	xor    $0x1f,%eax
    c775:	ba 1f 00 00 00       	mov    $0x1f,%edx
    c77a:	29 c2                	sub    %eax,%edx
    c77c:	89 d0                	mov    %edx,%eax
    c77e:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    c784:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
    c78a:	8d 34 00             	lea    (%rax,%rax,1),%esi
    c78d:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
    c793:	83 c0 07             	add    $0x7,%eax
    c796:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    c79d:	89 c1                	mov    %eax,%ecx
    c79f:	48 d3 ea             	shr    %cl,%rdx
    c7a2:	48 89 d0             	mov    %rdx,%rax
    c7a5:	83 e0 01             	and    $0x1,%eax
    c7a8:	01 f0                	add    %esi,%eax
    c7aa:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    c7b0:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    c7b6:	48 83 c0 4a          	add    $0x4a,%rax
    c7ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c7c1:	00 
    c7c2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c7c9:	48 01 d0             	add    %rdx,%rax
    c7cc:	48 83 c0 08          	add    $0x8,%rax
    c7d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c7d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c7d8:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
    c7de:	89 50 38             	mov    %edx,0x38(%rax)
    c7e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c7e5:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c7ec:	00 
    c7ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c7f1:	48 8b 50 28          	mov    0x28(%rax),%rdx
    c7f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c7f9:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c7fd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c804:	8b 50 04             	mov    0x4(%rax),%edx
    c807:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    c80d:	be 01 00 00 00       	mov    $0x1,%esi
    c812:	89 c1                	mov    %eax,%ecx
    c814:	d3 e6                	shl    %cl,%esi
    c816:	89 f0                	mov    %esi,%eax
    c818:	21 d0                	and    %edx,%eax
    c81a:	85 c0                	test   %eax,%eax
    c81c:	75 5f                	jne    c87d <prepend_alloc+0xad6>
    c81e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c825:	8b 50 04             	mov    0x4(%rax),%edx
    c828:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    c82e:	be 01 00 00 00       	mov    $0x1,%esi
    c833:	89 c1                	mov    %eax,%ecx
    c835:	d3 e6                	shl    %cl,%esi
    c837:	89 f0                	mov    %esi,%eax
    c839:	09 c2                	or     %eax,%edx
    c83b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c842:	89 50 04             	mov    %edx,0x4(%rax)
    c845:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c849:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c84d:	48 89 10             	mov    %rdx,(%rax)
    c850:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c854:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c858:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c85c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c860:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c864:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c868:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c86c:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c870:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c874:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c878:	e9 96 01 00 00       	jmpq   ca13 <prepend_alloc+0xc6c>
    c87d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c881:	48 8b 00             	mov    (%rax),%rax
    c884:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    c88b:	83 bd 14 ff ff ff 1f 	cmpl   $0x1f,-0xec(%rbp)
    c892:	74 13                	je     c8a7 <prepend_alloc+0xb00>
    c894:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    c89a:	d1 e8                	shr    %eax
    c89c:	ba 39 00 00 00       	mov    $0x39,%edx
    c8a1:	29 c2                	sub    %eax,%edx
    c8a3:	89 d0                	mov    %edx,%eax
    c8a5:	eb 05                	jmp    c8ac <prepend_alloc+0xb05>
    c8a7:	b8 00 00 00 00       	mov    $0x0,%eax
    c8ac:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    c8b3:	89 c1                	mov    %eax,%ecx
    c8b5:	48 d3 e2             	shl    %cl,%rdx
    c8b8:	48 89 d0             	mov    %rdx,%rax
    c8bb:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    c8c2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    c8c9:	48 8b 40 08          	mov    0x8(%rax),%rax
    c8cd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c8d1:	48 39 85 30 ff ff ff 	cmp    %rax,-0xd0(%rbp)
    c8d8:	0f 84 a2 00 00 00    	je     c980 <prepend_alloc+0xbd9>
    c8de:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    c8e5:	48 c1 e8 3f          	shr    $0x3f,%rax
    c8e9:	48 83 c0 04          	add    $0x4,%rax
    c8ed:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c8f4:	00 
    c8f5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    c8fc:	48 01 d0             	add    %rdx,%rax
    c8ff:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c903:	48 d1 a5 60 ff ff ff 	shlq   -0xa0(%rbp)
    c90a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c90e:	48 8b 00             	mov    (%rax),%rax
    c911:	48 85 c0             	test   %rax,%rax
    c914:	74 10                	je     c926 <prepend_alloc+0xb7f>
    c916:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c91a:	48 8b 00             	mov    (%rax),%rax
    c91d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    c924:	eb 9c                	jmp    c8c2 <prepend_alloc+0xb1b>
    c926:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c92d:	48 8b 40 18          	mov    0x18(%rax),%rax
    c931:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    c935:	0f 93 c0             	setae  %al
    c938:	0f b6 c0             	movzbl %al,%eax
    c93b:	48 85 c0             	test   %rax,%rax
    c93e:	74 3b                	je     c97b <prepend_alloc+0xbd4>
    c940:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c944:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c948:	48 89 10             	mov    %rdx,(%rax)
    c94b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c94f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    c956:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c95a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c95e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c962:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c966:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c96a:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c96e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c972:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c976:	e9 98 00 00 00       	jmpq   ca13 <prepend_alloc+0xc6c>
    c97b:	e8 59 ec 02 00       	callq  3b5d9 <abort>
    c980:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    c987:	48 8b 40 10          	mov    0x10(%rax),%rax
    c98b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c98f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c996:	48 8b 40 18          	mov    0x18(%rax),%rax
    c99a:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)
    c9a1:	0f 93 c0             	setae  %al
    c9a4:	0f b6 c0             	movzbl %al,%eax
    c9a7:	48 85 c0             	test   %rax,%rax
    c9aa:	74 62                	je     ca0e <prepend_alloc+0xc67>
    c9ac:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    c9b3:	48 8b 40 18          	mov    0x18(%rax),%rax
    c9b7:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    c9bb:	0f 93 c0             	setae  %al
    c9be:	0f b6 c0             	movzbl %al,%eax
    c9c1:	48 85 c0             	test   %rax,%rax
    c9c4:	74 48                	je     ca0e <prepend_alloc+0xc67>
    c9c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9ca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c9ce:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c9d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9d6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c9da:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    c9e1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c9e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c9e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c9ed:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c9f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c9f5:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    c9fc:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ca00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca04:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    ca0b:	00 
    ca0c:	eb 05                	jmp    ca13 <prepend_alloc+0xc6c>
    ca0e:	e8 c6 eb 02 00       	callq  3b5d9 <abort>
    ca13:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    ca1a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ca21:	48 89 d6             	mov    %rdx,%rsi
    ca24:	48 89 c7             	mov    %rax,%rdi
    ca27:	e8 bb ee ff ff       	callq  b8e7 <do_check_free_chunk>
    ca2c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ca33:	48 8d 48 10          	lea    0x10(%rax),%rcx
    ca37:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    ca3e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ca45:	48 89 ce             	mov    %rcx,%rsi
    ca48:	48 89 c7             	mov    %rax,%rdi
    ca4b:	e8 08 f0 ff ff       	callq  ba58 <do_check_malloced_chunk>
    ca50:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ca57:	48 83 c0 10          	add    $0x10,%rax
    ca5b:	c9                   	leaveq 
    ca5c:	c3                   	retq   

000000000000ca5d <add_segment>:
    ca5d:	55                   	push   %rbp
    ca5e:	48 89 e5             	mov    %rsp,%rbp
    ca61:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
    ca68:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    ca6f:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    ca76:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
    ca7d:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
    ca83:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ca8a:	48 8b 40 28          	mov    0x28(%rax),%rax
    ca8e:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    ca95:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    ca9c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    caa3:	48 89 d6             	mov    %rdx,%rsi
    caa6:	48 89 c7             	mov    %rax,%rdi
    caa9:	e8 38 ea ff ff       	callq  b4e6 <segment_holding>
    caae:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    cab5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    cabc:	48 8b 10             	mov    (%rax),%rdx
    cabf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    cac6:	48 8b 40 08          	mov    0x8(%rax),%rax
    caca:	48 01 d0             	add    %rdx,%rax
    cacd:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    cad4:	48 c7 85 78 ff ff ff 	movq   $0x30,-0x88(%rbp)
    cadb:	30 00 00 00 
    cadf:	48 c7 c0 d1 ff ff ff 	mov    $0xffffffffffffffd1,%rax
    cae6:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
    caed:	48 89 c2             	mov    %rax,%rdx
    caf0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    caf7:	48 01 d0             	add    %rdx,%rax
    cafa:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    cafe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    cb02:	48 83 c0 10          	add    $0x10,%rax
    cb06:	83 e0 0f             	and    $0xf,%eax
    cb09:	48 85 c0             	test   %rax,%rax
    cb0c:	74 10                	je     cb1e <add_segment+0xc1>
    cb0e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    cb12:	48 83 c0 10          	add    $0x10,%rax
    cb16:	48 f7 d8             	neg    %rax
    cb19:	83 e0 0f             	and    $0xf,%eax
    cb1c:	eb 05                	jmp    cb23 <add_segment+0xc6>
    cb1e:	b8 00 00 00 00       	mov    $0x0,%eax
    cb23:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    cb27:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    cb2b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    cb2f:	48 01 d0             	add    %rdx,%rax
    cb32:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    cb36:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    cb3d:	48 83 c0 20          	add    $0x20,%rax
    cb41:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    cb45:	73 09                	jae    cb50 <add_segment+0xf3>
    cb47:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    cb4e:	eb 04                	jmp    cb54 <add_segment+0xf7>
    cb50:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    cb54:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    cb58:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    cb5c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    cb60:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cb64:	48 83 c0 10          	add    $0x10,%rax
    cb68:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    cb6c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    cb70:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    cb77:	48 01 d0             	add    %rdx,%rax
    cb7a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    cb7e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    cb82:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    cb89:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
    cb90:	00 00 00 
    cb93:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cb9a:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
    cb9e:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
    cba5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cbac:	48 89 ce             	mov    %rcx,%rsi
    cbaf:	48 89 c7             	mov    %rax,%rdi
    cbb2:	e8 fb f0 ff ff       	callq  bcb2 <init_top>
    cbb7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cbbb:	83 e0 0f             	and    $0xf,%eax
    cbbe:	48 85 c0             	test   %rax,%rax
    cbc1:	74 05                	je     cbc8 <add_segment+0x16b>
    cbc3:	e8 11 ea 02 00       	callq  3b5d9 <abort>
    cbc8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    cbcf:	48 83 c8 03          	or     $0x3,%rax
    cbd3:	48 89 c2             	mov    %rax,%rdx
    cbd6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cbda:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cbde:	48 8b 0d 3b b0 03 00 	mov    0x3b03b(%rip),%rcx        # 47c20 <mparams>
    cbe5:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    cbec:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    cbf0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    cbf7:	48 01 f0             	add    %rsi,%rax
    cbfa:	48 31 ca             	xor    %rcx,%rdx
    cbfd:	48 89 10             	mov    %rdx,(%rax)
    cc00:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    cc04:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
    cc0b:	48 8b 86 78 03 00 00 	mov    0x378(%rsi),%rax
    cc12:	48 8b 96 80 03 00 00 	mov    0x380(%rsi),%rdx
    cc19:	48 89 01             	mov    %rax,(%rcx)
    cc1c:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    cc20:	48 8b 86 88 03 00 00 	mov    0x388(%rsi),%rax
    cc27:	48 8b 96 90 03 00 00 	mov    0x390(%rsi),%rdx
    cc2e:	48 89 41 10          	mov    %rax,0x10(%rcx)
    cc32:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    cc36:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cc3d:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    cc44:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
    cc4b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cc52:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    cc59:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
    cc60:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cc67:	8b 95 04 ff ff ff    	mov    -0xfc(%rbp),%edx
    cc6d:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
    cc73:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cc7a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    cc7e:	48 89 90 88 03 00 00 	mov    %rdx,0x388(%rax)
    cc85:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    cc8c:	48 83 c0 08          	add    $0x8,%rax
    cc90:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    cc94:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    cc9b:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
    cca2:	00 
    cca3:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
    ccaa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ccae:	48 83 c0 08          	add    $0x8,%rax
    ccb2:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
    ccb9:	76 0d                	jbe    ccc8 <add_segment+0x26b>
    ccbb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ccbf:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    ccc6:	eb bd                	jmp    cc85 <add_segment+0x228>
    ccc8:	90                   	nop
    ccc9:	83 bd 2c ff ff ff 01 	cmpl   $0x1,-0xd4(%rbp)
    ccd0:	7f 05                	jg     ccd7 <add_segment+0x27a>
    ccd2:	e8 02 e9 02 00       	callq  3b5d9 <abort>
    ccd7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ccdb:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    cce2:	0f 84 65 04 00 00    	je     d14d <add_segment+0x6f0>
    cce8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    ccef:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ccf3:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    ccf7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    ccfe:	48 29 c2             	sub    %rax,%rdx
    cd01:	48 89 d0             	mov    %rdx,%rax
    cd04:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    cd08:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    cd0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd10:	48 01 d0             	add    %rdx,%rax
    cd13:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cd17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cd1b:	48 8b 40 08          	mov    0x8(%rax),%rax
    cd1f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    cd23:	48 89 c2             	mov    %rax,%rdx
    cd26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cd2a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cd2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd32:	48 83 c8 01          	or     $0x1,%rax
    cd36:	48 89 c2             	mov    %rax,%rdx
    cd39:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cd3d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cd41:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    cd45:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd49:	48 01 c2             	add    %rax,%rdx
    cd4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd50:	48 89 02             	mov    %rax,(%rdx)
    cd53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd57:	48 c1 e8 03          	shr    $0x3,%rax
    cd5b:	48 83 f8 1f          	cmp    $0x1f,%rax
    cd5f:	0f 87 06 01 00 00    	ja     ce6b <add_segment+0x40e>
    cd65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd69:	48 c1 e8 03          	shr    $0x3,%rax
    cd6d:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    cd73:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    cd79:	01 c0                	add    %eax,%eax
    cd7b:	89 c0                	mov    %eax,%eax
    cd7d:	48 83 c0 08          	add    $0x8,%rax
    cd81:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cd88:	00 
    cd89:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cd90:	48 01 d0             	add    %rdx,%rax
    cd93:	48 83 c0 08          	add    $0x8,%rax
    cd97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cd9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd9f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    cda6:	48 83 7d c8 1f       	cmpq   $0x1f,-0x38(%rbp)
    cdab:	77 05                	ja     cdb2 <add_segment+0x355>
    cdad:	e8 27 e8 02 00       	callq  3b5d9 <abort>
    cdb2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cdb9:	8b 10                	mov    (%rax),%edx
    cdbb:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    cdc1:	be 01 00 00 00       	mov    $0x1,%esi
    cdc6:	89 c1                	mov    %eax,%ecx
    cdc8:	d3 e6                	shl    %cl,%esi
    cdca:	89 f0                	mov    %esi,%eax
    cdcc:	21 d0                	and    %edx,%eax
    cdce:	85 c0                	test   %eax,%eax
    cdd0:	75 27                	jne    cdf9 <add_segment+0x39c>
    cdd2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cdd9:	8b 10                	mov    (%rax),%edx
    cddb:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    cde1:	be 01 00 00 00       	mov    $0x1,%esi
    cde6:	89 c1                	mov    %eax,%ecx
    cde8:	d3 e6                	shl    %cl,%esi
    cdea:	89 f0                	mov    %esi,%eax
    cdec:	09 c2                	or     %eax,%edx
    cdee:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cdf5:	89 10                	mov    %edx,(%rax)
    cdf7:	eb 37                	jmp    ce30 <add_segment+0x3d3>
    cdf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdfd:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ce01:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ce08:	48 8b 40 18          	mov    0x18(%rax),%rax
    ce0c:	48 39 c2             	cmp    %rax,%rdx
    ce0f:	0f 93 c0             	setae  %al
    ce12:	0f b6 c0             	movzbl %al,%eax
    ce15:	48 85 c0             	test   %rax,%rax
    ce18:	74 11                	je     ce2b <add_segment+0x3ce>
    ce1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce1e:	48 8b 40 10          	mov    0x10(%rax),%rax
    ce22:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    ce29:	eb 05                	jmp    ce30 <add_segment+0x3d3>
    ce2b:	e8 a9 e7 02 00       	callq  3b5d9 <abort>
    ce30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce34:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ce38:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ce3c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    ce43:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ce47:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ce4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce4f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    ce56:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ce5a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce62:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ce66:	e9 e2 02 00 00       	jmpq   d14d <add_segment+0x6f0>
    ce6b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce6f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ce73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ce77:	48 c1 e8 08          	shr    $0x8,%rax
    ce7b:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    ce81:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
    ce88:	75 0c                	jne    ce96 <add_segment+0x439>
    ce8a:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
    ce91:	00 00 00 
    ce94:	eb 5a                	jmp    cef0 <add_segment+0x493>
    ce96:	81 bd 34 ff ff ff ff 	cmpl   $0xffff,-0xcc(%rbp)
    ce9d:	ff 00 00 
    cea0:	76 0c                	jbe    ceae <add_segment+0x451>
    cea2:	c7 85 30 ff ff ff 1f 	movl   $0x1f,-0xd0(%rbp)
    cea9:	00 00 00 
    ceac:	eb 42                	jmp    cef0 <add_segment+0x493>
    ceae:	0f bd 85 34 ff ff ff 	bsr    -0xcc(%rbp),%eax
    ceb5:	83 f0 1f             	xor    $0x1f,%eax
    ceb8:	ba 1f 00 00 00       	mov    $0x1f,%edx
    cebd:	29 c2                	sub    %eax,%edx
    cebf:	89 d0                	mov    %edx,%eax
    cec1:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
    cec7:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    cecd:	8d 34 00             	lea    (%rax,%rax,1),%esi
    ced0:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    ced6:	83 c0 07             	add    $0x7,%eax
    ced9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cedd:	89 c1                	mov    %eax,%ecx
    cedf:	48 d3 ea             	shr    %cl,%rdx
    cee2:	48 89 d0             	mov    %rdx,%rax
    cee5:	83 e0 01             	and    $0x1,%eax
    cee8:	01 f0                	add    %esi,%eax
    ceea:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    cef0:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    cef6:	48 83 c0 4a          	add    $0x4a,%rax
    cefa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cf01:	00 
    cf02:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cf09:	48 01 d0             	add    %rdx,%rax
    cf0c:	48 83 c0 08          	add    $0x8,%rax
    cf10:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    cf14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf18:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    cf1e:	89 50 38             	mov    %edx,0x38(%rax)
    cf21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf25:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    cf2c:	00 
    cf2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf31:	48 8b 50 28          	mov    0x28(%rax),%rdx
    cf35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf39:	48 89 50 20          	mov    %rdx,0x20(%rax)
    cf3d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cf44:	8b 50 04             	mov    0x4(%rax),%edx
    cf47:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    cf4d:	be 01 00 00 00       	mov    $0x1,%esi
    cf52:	89 c1                	mov    %eax,%ecx
    cf54:	d3 e6                	shl    %cl,%esi
    cf56:	89 f0                	mov    %esi,%eax
    cf58:	21 d0                	and    %edx,%eax
    cf5a:	85 c0                	test   %eax,%eax
    cf5c:	75 5f                	jne    cfbd <add_segment+0x560>
    cf5e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cf65:	8b 50 04             	mov    0x4(%rax),%edx
    cf68:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    cf6e:	be 01 00 00 00       	mov    $0x1,%esi
    cf73:	89 c1                	mov    %eax,%ecx
    cf75:	d3 e6                	shl    %cl,%esi
    cf77:	89 f0                	mov    %esi,%eax
    cf79:	09 c2                	or     %eax,%edx
    cf7b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cf82:	89 50 04             	mov    %edx,0x4(%rax)
    cf85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf89:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cf8d:	48 89 10             	mov    %rdx,(%rax)
    cf90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf94:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cf98:	48 89 50 30          	mov    %rdx,0x30(%rax)
    cf9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cfa0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cfa4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    cfa8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cfac:	48 8b 50 18          	mov    0x18(%rax),%rdx
    cfb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cfb4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cfb8:	e9 90 01 00 00       	jmpq   d14d <add_segment+0x6f0>
    cfbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfc1:	48 8b 00             	mov    (%rax),%rax
    cfc4:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    cfcb:	83 bd 30 ff ff ff 1f 	cmpl   $0x1f,-0xd0(%rbp)
    cfd2:	74 13                	je     cfe7 <add_segment+0x58a>
    cfd4:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    cfda:	d1 e8                	shr    %eax
    cfdc:	ba 39 00 00 00       	mov    $0x39,%edx
    cfe1:	29 c2                	sub    %eax,%edx
    cfe3:	89 d0                	mov    %edx,%eax
    cfe5:	eb 05                	jmp    cfec <add_segment+0x58f>
    cfe7:	b8 00 00 00 00       	mov    $0x0,%eax
    cfec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cff0:	89 c1                	mov    %eax,%ecx
    cff2:	48 d3 e2             	shl    %cl,%rdx
    cff5:	48 89 d0             	mov    %rdx,%rax
    cff8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    cfff:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d006:	48 8b 40 08          	mov    0x8(%rax),%rax
    d00a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d00e:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    d012:	0f 84 a2 00 00 00    	je     d0ba <add_segment+0x65d>
    d018:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d01f:	48 c1 e8 3f          	shr    $0x3f,%rax
    d023:	48 83 c0 04          	add    $0x4,%rax
    d027:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d02e:	00 
    d02f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d036:	48 01 d0             	add    %rdx,%rax
    d039:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d03d:	48 d1 a5 58 ff ff ff 	shlq   -0xa8(%rbp)
    d044:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d048:	48 8b 00             	mov    (%rax),%rax
    d04b:	48 85 c0             	test   %rax,%rax
    d04e:	74 10                	je     d060 <add_segment+0x603>
    d050:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d054:	48 8b 00             	mov    (%rax),%rax
    d057:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    d05e:	eb 9f                	jmp    cfff <add_segment+0x5a2>
    d060:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d067:	48 8b 40 18          	mov    0x18(%rax),%rax
    d06b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    d06f:	0f 93 c0             	setae  %al
    d072:	0f b6 c0             	movzbl %al,%eax
    d075:	48 85 c0             	test   %rax,%rax
    d078:	74 3b                	je     d0b5 <add_segment+0x658>
    d07a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d07e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d082:	48 89 10             	mov    %rdx,(%rax)
    d085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d089:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    d090:	48 89 50 30          	mov    %rdx,0x30(%rax)
    d094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d098:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d09c:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d0a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d0a4:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d0a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d0ac:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d0b0:	e9 98 00 00 00       	jmpq   d14d <add_segment+0x6f0>
    d0b5:	e8 1f e5 02 00       	callq  3b5d9 <abort>
    d0ba:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d0c1:	48 8b 40 10          	mov    0x10(%rax),%rax
    d0c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d0c9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d0d0:	48 8b 40 18          	mov    0x18(%rax),%rax
    d0d4:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
    d0db:	0f 93 c0             	setae  %al
    d0de:	0f b6 c0             	movzbl %al,%eax
    d0e1:	48 85 c0             	test   %rax,%rax
    d0e4:	74 62                	je     d148 <add_segment+0x6eb>
    d0e6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d0ed:	48 8b 40 18          	mov    0x18(%rax),%rax
    d0f1:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d0f5:	0f 93 c0             	setae  %al
    d0f8:	0f b6 c0             	movzbl %al,%eax
    d0fb:	48 85 c0             	test   %rax,%rax
    d0fe:	74 48                	je     d148 <add_segment+0x6eb>
    d100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d104:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d108:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d10c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d110:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d114:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d11b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d11f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d123:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d127:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d12b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d12f:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    d136:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d13a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d13e:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    d145:	00 
    d146:	eb 05                	jmp    d14d <add_segment+0x6f0>
    d148:	e8 8c e4 02 00       	callq  3b5d9 <abort>
    d14d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d154:	48 8b 50 28          	mov    0x28(%rax),%rdx
    d158:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d15f:	48 89 d6             	mov    %rdx,%rsi
    d162:	48 89 c7             	mov    %rax,%rdi
    d165:	e8 5d e5 ff ff       	callq  b6c7 <do_check_top_chunk>
    d16a:	90                   	nop
    d16b:	c9                   	leaveq 
    d16c:	c3                   	retq   

000000000000d16d <sys_alloc>:
    d16d:	55                   	push   %rbp
    d16e:	48 89 e5             	mov    %rsp,%rbp
    d171:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    d178:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    d17f:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    d186:	48 c7 85 60 ff ff ff 	movq   $0xffffffffffffffff,-0xa0(%rbp)
    d18d:	ff ff ff ff 
    d191:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d198:	00 00 00 00 
    d19c:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    d1a3:	00 00 00 
    d1a6:	48 8b 05 73 aa 03 00 	mov    0x3aa73(%rip),%rax        # 47c20 <mparams>
    d1ad:	48 85 c0             	test   %rax,%rax
    d1b0:	75 07                	jne    d1b9 <sys_alloc+0x4c>
    d1b2:	e8 8e e3 ff ff       	callq  b545 <init_mparams>
    d1b7:	85 c0                	test   %eax,%eax
    d1b9:	90                   	nop
    d1ba:	48 8b 15 6f aa 03 00 	mov    0x3aa6f(%rip),%rdx        # 47c30 <mparams+0x10>
    d1c1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d1c8:	48 01 d0             	add    %rdx,%rax
    d1cb:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
    d1cf:	48 8b 05 5a aa 03 00 	mov    0x3aa5a(%rip),%rax        # 47c30 <mparams+0x10>
    d1d6:	48 f7 d8             	neg    %rax
    d1d9:	48 21 d0             	and    %rdx,%rax
    d1dc:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    d1e0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d1e4:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    d1eb:	77 0a                	ja     d1f7 <sys_alloc+0x8a>
    d1ed:	b8 00 00 00 00       	mov    $0x0,%eax
    d1f2:	e9 50 09 00 00       	jmpq   db47 <sys_alloc+0x9da>
    d1f7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d1fe:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    d205:	48 85 c0             	test   %rax,%rax
    d208:	74 4b                	je     d255 <sys_alloc+0xe8>
    d20a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d211:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    d218:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d21c:	48 01 d0             	add    %rdx,%rax
    d21f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    d223:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d22a:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    d231:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    d235:	76 14                	jbe    d24b <sys_alloc+0xde>
    d237:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d23e:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    d245:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    d249:	76 0a                	jbe    d255 <sys_alloc+0xe8>
    d24b:	b8 00 00 00 00       	mov    $0x0,%eax
    d250:	e9 f2 08 00 00       	jmpq   db47 <sys_alloc+0x9da>
    d255:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d25c:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    d262:	83 e0 04             	and    $0x4,%eax
    d265:	85 c0                	test   %eax,%eax
    d267:	0f 85 37 03 00 00    	jne    d5a4 <sys_alloc+0x437>
    d26d:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
    d274:	ff ff ff ff 
    d278:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d27c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    d283:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d28a:	48 8b 40 28          	mov    0x28(%rax),%rax
    d28e:	48 85 c0             	test   %rax,%rax
    d291:	74 1f                	je     d2b2 <sys_alloc+0x145>
    d293:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d29a:	48 8b 50 28          	mov    0x28(%rax),%rdx
    d29e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d2a5:	48 89 d6             	mov    %rdx,%rsi
    d2a8:	48 89 c7             	mov    %rax,%rdi
    d2ab:	e8 36 e2 ff ff       	callq  b4e6 <segment_holding>
    d2b0:	eb 05                	jmp    d2b7 <sys_alloc+0x14a>
    d2b2:	b8 00 00 00 00       	mov    $0x0,%eax
    d2b7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    d2bb:	b8 01 00 00 00       	mov    $0x1,%eax
    d2c0:	87 05 3a a9 03 00    	xchg   %eax,0x3a93a(%rip)        # 47c00 <malloc_global_mutex>
    d2c6:	85 c0                	test   %eax,%eax
    d2c8:	74 0c                	je     d2d6 <sys_alloc+0x169>
    d2ca:	48 8d 3d 2f a9 03 00 	lea    0x3a92f(%rip),%rdi        # 47c00 <malloc_global_mutex>
    d2d1:	e8 db e1 ff ff       	callq  b4b1 <spin_acquire_lock>
    d2d6:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    d2db:	0f 85 2f 01 00 00    	jne    d410 <sys_alloc+0x2a3>
    d2e1:	bf 00 00 00 00       	mov    $0x0,%edi
    d2e6:	e8 a8 65 00 00       	callq  13893 <sbrk>
    d2eb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d2ef:	48 83 7d a0 ff       	cmpq   $0xffffffffffffffff,-0x60(%rbp)
    d2f4:	0f 84 ad 01 00 00    	je     d4a7 <sys_alloc+0x33a>
    d2fa:	48 8b 05 27 a9 03 00 	mov    0x3a927(%rip),%rax        # 47c28 <mparams+0x8>
    d301:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    d305:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d309:	48 21 d0             	and    %rdx,%rax
    d30c:	48 85 c0             	test   %rax,%rax
    d30f:	74 30                	je     d341 <sys_alloc+0x1d4>
    d311:	48 8b 15 10 a9 03 00 	mov    0x3a910(%rip),%rdx        # 47c28 <mparams+0x8>
    d318:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d31c:	48 01 d0             	add    %rdx,%rax
    d31f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    d323:	48 8b 05 fe a8 03 00 	mov    0x3a8fe(%rip),%rax        # 47c28 <mparams+0x8>
    d32a:	48 f7 d8             	neg    %rax
    d32d:	48 21 c2             	and    %rax,%rdx
    d330:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d334:	48 29 c2             	sub    %rax,%rdx
    d337:	48 89 d0             	mov    %rdx,%rax
    d33a:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
    d341:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d348:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    d34f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d356:	48 01 d0             	add    %rdx,%rax
    d359:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d35d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d364:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    d36b:	0f 86 36 01 00 00    	jbe    d4a7 <sys_alloc+0x33a>
    d371:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d378:	ff ff 7f 
    d37b:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    d382:	0f 87 1f 01 00 00    	ja     d4a7 <sys_alloc+0x33a>
    d388:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d38f:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    d396:	48 85 c0             	test   %rax,%rax
    d399:	74 30                	je     d3cb <sys_alloc+0x25e>
    d39b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d3a2:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    d3a9:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    d3ad:	0f 86 f4 00 00 00    	jbe    d4a7 <sys_alloc+0x33a>
    d3b3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d3ba:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    d3c1:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    d3c5:	0f 87 dc 00 00 00    	ja     d4a7 <sys_alloc+0x33a>
    d3cb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d3d2:	48 89 c7             	mov    %rax,%rdi
    d3d5:	e8 b9 64 00 00       	callq  13893 <sbrk>
    d3da:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    d3e1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d3e8:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    d3ec:	0f 85 b5 00 00 00    	jne    d4a7 <sys_alloc+0x33a>
    d3f2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d3f6:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    d3fd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d404:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    d40b:	e9 97 00 00 00       	jmpq   d4a7 <sys_alloc+0x33a>
    d410:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d417:	48 8b 40 10          	mov    0x10(%rax),%rax
    d41b:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    d422:	48 29 c2             	sub    %rax,%rdx
    d425:	48 8b 05 04 a8 03 00 	mov    0x3a804(%rip),%rax        # 47c30 <mparams+0x10>
    d42c:	48 01 d0             	add    %rdx,%rax
    d42f:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
    d433:	48 8b 05 f6 a7 03 00 	mov    0x3a7f6(%rip),%rax        # 47c30 <mparams+0x10>
    d43a:	48 f7 d8             	neg    %rax
    d43d:	48 21 d0             	and    %rdx,%rax
    d440:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    d447:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d44e:	ff ff 7f 
    d451:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    d458:	77 4d                	ja     d4a7 <sys_alloc+0x33a>
    d45a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d461:	48 89 c7             	mov    %rax,%rdi
    d464:	e8 2a 64 00 00       	callq  13893 <sbrk>
    d469:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    d470:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d474:	48 8b 10             	mov    (%rax),%rdx
    d477:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d47b:	48 8b 40 08          	mov    0x8(%rax),%rax
    d47f:	48 01 d0             	add    %rdx,%rax
    d482:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
    d489:	75 1c                	jne    d4a7 <sys_alloc+0x33a>
    d48b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d492:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    d499:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d4a0:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    d4a7:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
    d4ae:	ff 
    d4af:	0f 85 e4 00 00 00    	jne    d599 <sys_alloc+0x42c>
    d4b5:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
    d4bc:	ff 
    d4bd:	0f 84 b0 00 00 00    	je     d573 <sys_alloc+0x406>
    d4c3:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d4ca:	ff ff 7f 
    d4cd:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    d4d4:	0f 87 99 00 00 00    	ja     d573 <sys_alloc+0x406>
    d4da:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d4e1:	48 83 c0 60          	add    $0x60,%rax
    d4e5:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    d4ec:	0f 83 81 00 00 00    	jae    d573 <sys_alloc+0x406>
    d4f2:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d4f9:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
    d500:	48 89 c2             	mov    %rax,%rdx
    d503:	48 8b 05 26 a7 03 00 	mov    0x3a726(%rip),%rax        # 47c30 <mparams+0x10>
    d50a:	48 01 d0             	add    %rdx,%rax
    d50d:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
    d511:	48 8b 05 18 a7 03 00 	mov    0x3a718(%rip),%rax        # 47c30 <mparams+0x10>
    d518:	48 f7 d8             	neg    %rax
    d51b:	48 21 d0             	and    %rdx,%rax
    d51e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d522:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d529:	ff ff 7f 
    d52c:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    d530:	77 41                	ja     d573 <sys_alloc+0x406>
    d532:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d536:	48 89 c7             	mov    %rax,%rdi
    d539:	e8 55 63 00 00       	callq  13893 <sbrk>
    d53e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    d542:	48 83 7d b8 ff       	cmpq   $0xffffffffffffffff,-0x48(%rbp)
    d547:	74 0d                	je     d556 <sys_alloc+0x3e9>
    d549:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d54d:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
    d554:	eb 1d                	jmp    d573 <sys_alloc+0x406>
    d556:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d55d:	48 f7 d8             	neg    %rax
    d560:	48 89 c7             	mov    %rax,%rdi
    d563:	e8 2b 63 00 00       	callq  13893 <sbrk>
    d568:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
    d56f:	ff ff ff ff 
    d573:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
    d57a:	ff 
    d57b:	74 1c                	je     d599 <sys_alloc+0x42c>
    d57d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d584:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    d58b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d592:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    d599:	b8 00 00 00 00       	mov    $0x0,%eax
    d59e:	89 05 5c a6 03 00    	mov    %eax,0x3a65c(%rip)        # 47c00 <malloc_global_mutex>
    d5a4:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
    d5ab:	ff 
    d5ac:	0f 85 b9 00 00 00    	jne    d66b <sys_alloc+0x4fe>
    d5b2:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d5b9:	ff ff 7f 
    d5bc:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    d5c0:	0f 87 a5 00 00 00    	ja     d66b <sys_alloc+0x4fe>
    d5c6:	48 c7 45 c0 ff ff ff 	movq   $0xffffffffffffffff,-0x40(%rbp)
    d5cd:	ff 
    d5ce:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,-0x38(%rbp)
    d5d5:	ff 
    d5d6:	b8 01 00 00 00       	mov    $0x1,%eax
    d5db:	87 05 1f a6 03 00    	xchg   %eax,0x3a61f(%rip)        # 47c00 <malloc_global_mutex>
    d5e1:	85 c0                	test   %eax,%eax
    d5e3:	74 0c                	je     d5f1 <sys_alloc+0x484>
    d5e5:	48 8d 3d 14 a6 03 00 	lea    0x3a614(%rip),%rdi        # 47c00 <malloc_global_mutex>
    d5ec:	e8 c0 de ff ff       	callq  b4b1 <spin_acquire_lock>
    d5f1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d5f5:	48 89 c7             	mov    %rax,%rdi
    d5f8:	e8 96 62 00 00       	callq  13893 <sbrk>
    d5fd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d601:	bf 00 00 00 00       	mov    $0x0,%edi
    d606:	e8 88 62 00 00       	callq  13893 <sbrk>
    d60b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d60f:	b8 00 00 00 00       	mov    $0x0,%eax
    d614:	89 05 e6 a5 03 00    	mov    %eax,0x3a5e6(%rip)        # 47c00 <malloc_global_mutex>
    d61a:	48 83 7d c0 ff       	cmpq   $0xffffffffffffffff,-0x40(%rbp)
    d61f:	74 4a                	je     d66b <sys_alloc+0x4fe>
    d621:	48 83 7d c8 ff       	cmpq   $0xffffffffffffffff,-0x38(%rbp)
    d626:	74 43                	je     d66b <sys_alloc+0x4fe>
    d628:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d62c:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    d630:	73 39                	jae    d66b <sys_alloc+0x4fe>
    d632:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d636:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d63a:	48 29 c2             	sub    %rax,%rdx
    d63d:	48 89 d0             	mov    %rdx,%rax
    d640:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d644:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d64b:	48 83 c0 50          	add    $0x50,%rax
    d64f:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    d653:	76 16                	jbe    d66b <sys_alloc+0x4fe>
    d655:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d659:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    d660:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d664:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    d66b:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
    d672:	ff 
    d673:	0f 84 be 04 00 00    	je     db37 <sys_alloc+0x9ca>
    d679:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d680:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    d687:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d68e:	48 01 c2             	add    %rax,%rdx
    d691:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d698:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    d69f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6a6:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    d6ad:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6b4:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    d6bb:	48 39 c2             	cmp    %rax,%rdx
    d6be:	76 1c                	jbe    d6dc <sys_alloc+0x56f>
    d6c0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6c7:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    d6ce:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6d5:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
    d6dc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6e3:	48 8b 40 28          	mov    0x28(%rax),%rax
    d6e7:	48 85 c0             	test   %rax,%rax
    d6ea:	0f 85 3e 01 00 00    	jne    d82e <sys_alloc+0x6c1>
    d6f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6f7:	48 8b 40 18          	mov    0x18(%rax),%rax
    d6fb:	48 85 c0             	test   %rax,%rax
    d6fe:	74 14                	je     d714 <sys_alloc+0x5a7>
    d700:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d707:	48 8b 40 18          	mov    0x18(%rax),%rax
    d70b:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
    d712:	73 12                	jae    d726 <sys_alloc+0x5b9>
    d714:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d71b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    d722:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d726:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d72d:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    d734:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
    d73b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d742:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    d749:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
    d750:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d757:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
    d75d:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
    d763:	48 8b 15 b6 a4 03 00 	mov    0x3a4b6(%rip),%rdx        # 47c20 <mparams>
    d76a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d771:	48 89 50 40          	mov    %rdx,0x40(%rax)
    d775:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d77c:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
    d783:	ff 
    d784:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d78b:	48 89 c7             	mov    %rax,%rdi
    d78e:	e8 b8 e5 ff ff       	callq  bd4b <init_bins>
    d793:	48 8d 05 c6 a4 03 00 	lea    0x3a4c6(%rip),%rax        # 47c60 <_gm_>
    d79a:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
    d7a1:	75 29                	jne    d7cc <sys_alloc+0x65f>
    d7a3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d7aa:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
    d7ae:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
    d7b5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d7bc:	48 89 ce             	mov    %rcx,%rsi
    d7bf:	48 89 c7             	mov    %rax,%rdi
    d7c2:	e8 eb e4 ff ff       	callq  bcb2 <init_top>
    d7c7:	e9 5a 02 00 00       	jmpq   da26 <sys_alloc+0x8b9>
    d7cc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d7d3:	48 83 e8 10          	sub    $0x10,%rax
    d7d7:	48 8b 40 08          	mov    0x8(%rax),%rax
    d7db:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d7df:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    d7e3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d7ea:	48 01 d0             	add    %rdx,%rax
    d7ed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d7f1:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    d7f8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d7ff:	48 01 d0             	add    %rdx,%rax
    d802:	48 89 c2             	mov    %rax,%rdx
    d805:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d809:	48 29 c2             	sub    %rax,%rdx
    d80c:	48 89 d0             	mov    %rdx,%rax
    d80f:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
    d813:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d817:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d81e:	48 89 ce             	mov    %rcx,%rsi
    d821:	48 89 c7             	mov    %rax,%rdi
    d824:	e8 89 e4 ff ff       	callq  bcb2 <init_top>
    d829:	e9 f8 01 00 00       	jmpq   da26 <sys_alloc+0x8b9>
    d82e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d835:	48 05 78 03 00 00    	add    $0x378,%rax
    d83b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d83f:	eb 0c                	jmp    d84d <sys_alloc+0x6e0>
    d841:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d845:	48 8b 40 10          	mov    0x10(%rax),%rax
    d849:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d84d:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    d852:	74 1b                	je     d86f <sys_alloc+0x702>
    d854:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d858:	48 8b 10             	mov    (%rax),%rdx
    d85b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d85f:	48 8b 40 08          	mov    0x8(%rax),%rax
    d863:	48 01 d0             	add    %rdx,%rax
    d866:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
    d86d:	75 d2                	jne    d841 <sys_alloc+0x6d4>
    d86f:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    d874:	0f 84 a9 00 00 00    	je     d923 <sys_alloc+0x7b6>
    d87a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d87e:	8b 40 18             	mov    0x18(%rax),%eax
    d881:	83 e0 08             	and    $0x8,%eax
    d884:	85 c0                	test   %eax,%eax
    d886:	0f 85 97 00 00 00    	jne    d923 <sys_alloc+0x7b6>
    d88c:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
    d893:	0f 85 8a 00 00 00    	jne    d923 <sys_alloc+0x7b6>
    d899:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d8a0:	48 8b 50 28          	mov    0x28(%rax),%rdx
    d8a4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d8a8:	48 8b 00             	mov    (%rax),%rax
    d8ab:	48 39 c2             	cmp    %rax,%rdx
    d8ae:	72 73                	jb     d923 <sys_alloc+0x7b6>
    d8b0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d8b7:	48 8b 50 28          	mov    0x28(%rax),%rdx
    d8bb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d8bf:	48 8b 08             	mov    (%rax),%rcx
    d8c2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d8c6:	48 8b 40 08          	mov    0x8(%rax),%rax
    d8ca:	48 01 c8             	add    %rcx,%rax
    d8cd:	48 39 c2             	cmp    %rax,%rdx
    d8d0:	73 51                	jae    d923 <sys_alloc+0x7b6>
    d8d2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d8d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d8da:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d8e1:	48 01 c2             	add    %rax,%rdx
    d8e4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d8e8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d8ec:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d8f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d8f7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d8fe:	48 01 c2             	add    %rax,%rdx
    d901:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d908:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d90c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d913:	48 89 ce             	mov    %rcx,%rsi
    d916:	48 89 c7             	mov    %rax,%rdi
    d919:	e8 94 e3 ff ff       	callq  bcb2 <init_top>
    d91e:	e9 03 01 00 00       	jmpq   da26 <sys_alloc+0x8b9>
    d923:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d92a:	48 8b 40 18          	mov    0x18(%rax),%rax
    d92e:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
    d935:	73 12                	jae    d949 <sys_alloc+0x7dc>
    d937:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d93e:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    d945:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d949:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d950:	48 05 78 03 00 00    	add    $0x378,%rax
    d956:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d95a:	eb 0c                	jmp    d968 <sys_alloc+0x7fb>
    d95c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d960:	48 8b 40 10          	mov    0x10(%rax),%rax
    d964:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d968:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    d96d:	74 1d                	je     d98c <sys_alloc+0x81f>
    d96f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d973:	48 8b 00             	mov    (%rax),%rax
    d976:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
    d97d:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    d984:	48 01 ca             	add    %rcx,%rdx
    d987:	48 39 d0             	cmp    %rdx,%rax
    d98a:	75 d0                	jne    d95c <sys_alloc+0x7ef>
    d98c:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    d991:	74 70                	je     da03 <sys_alloc+0x896>
    d993:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d997:	8b 40 18             	mov    0x18(%rax),%eax
    d99a:	83 e0 08             	and    $0x8,%eax
    d99d:	85 c0                	test   %eax,%eax
    d99f:	75 62                	jne    da03 <sys_alloc+0x896>
    d9a1:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
    d9a8:	75 59                	jne    da03 <sys_alloc+0x896>
    d9aa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d9ae:	48 8b 00             	mov    (%rax),%rax
    d9b1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d9b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d9b9:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    d9c0:	48 89 10             	mov    %rdx,(%rax)
    d9c3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d9c7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d9cb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d9d2:	48 01 c2             	add    %rax,%rdx
    d9d5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d9d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d9dd:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    d9e4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d9e8:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
    d9ef:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d9f6:	48 89 c7             	mov    %rax,%rdi
    d9f9:	e8 a9 e3 ff ff       	callq  bda7 <prepend_alloc>
    d9fe:	e9 44 01 00 00       	jmpq   db47 <sys_alloc+0x9da>
    da03:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
    da09:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    da10:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
    da17:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da1e:	48 89 c7             	mov    %rax,%rdi
    da21:	e8 37 f0 ff ff       	callq  ca5d <add_segment>
    da26:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da2d:	48 8b 40 10          	mov    0x10(%rax),%rax
    da31:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    da38:	0f 83 f9 00 00 00    	jae    db37 <sys_alloc+0x9ca>
    da3e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da45:	48 8b 40 10          	mov    0x10(%rax),%rax
    da49:	48 2b 85 40 ff ff ff 	sub    -0xc0(%rbp),%rax
    da50:	48 89 c2             	mov    %rax,%rdx
    da53:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da5a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    da5e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da65:	48 8b 40 10          	mov    0x10(%rax),%rax
    da69:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    da6d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da74:	48 8b 40 28          	mov    0x28(%rax),%rax
    da78:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    da7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da80:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    da87:	48 01 c2             	add    %rax,%rdx
    da8a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da91:	48 89 50 28          	mov    %rdx,0x28(%rax)
    da95:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    da9c:	48 8b 40 28          	mov    0x28(%rax),%rax
    daa0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    daa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daa8:	48 83 c8 01          	or     $0x1,%rax
    daac:	48 89 c2             	mov    %rax,%rdx
    daaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dab3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    dab7:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    dabe:	48 83 c8 03          	or     $0x3,%rax
    dac2:	48 89 c2             	mov    %rax,%rdx
    dac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dac9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    dacd:	48 8b 0d 4c a1 03 00 	mov    0x3a14c(%rip),%rcx        # 47c20 <mparams>
    dad4:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    dadb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    dadf:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    dae6:	48 01 f0             	add    %rsi,%rax
    dae9:	48 31 ca             	xor    %rcx,%rdx
    daec:	48 89 10             	mov    %rdx,(%rax)
    daef:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    daf6:	48 8b 50 28          	mov    0x28(%rax),%rdx
    dafa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    db01:	48 89 d6             	mov    %rdx,%rsi
    db04:	48 89 c7             	mov    %rax,%rdi
    db07:	e8 bb db ff ff       	callq  b6c7 <do_check_top_chunk>
    db0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db10:	48 8d 48 10          	lea    0x10(%rax),%rcx
    db14:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    db1b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    db22:	48 89 ce             	mov    %rcx,%rsi
    db25:	48 89 c7             	mov    %rax,%rdi
    db28:	e8 2b df ff ff       	callq  ba58 <do_check_malloced_chunk>
    db2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db31:	48 83 c0 10          	add    $0x10,%rax
    db35:	eb 10                	jmp    db47 <sys_alloc+0x9da>
    db37:	e8 68 6d 00 00       	callq  148a4 <__errno>
    db3c:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    db42:	b8 00 00 00 00       	mov    $0x0,%eax
    db47:	c9                   	leaveq 
    db48:	c3                   	retq   

000000000000db49 <release_unused_segments>:
    db49:	55                   	push   %rbp
    db4a:	48 89 e5             	mov    %rsp,%rbp
    db4d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    db51:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    db58:	00 
    db59:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    db60:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    db64:	48 05 78 03 00 00    	add    $0x378,%rax
    db6a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    db6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db72:	48 8b 40 10          	mov    0x10(%rax),%rax
    db76:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    db7a:	eb 37                	jmp    dbb3 <release_unused_segments+0x6a>
    db7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    db80:	48 8b 00             	mov    (%rax),%rax
    db83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    db87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    db8b:	48 8b 40 08          	mov    0x8(%rax),%rax
    db8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    db93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    db97:	48 8b 40 10          	mov    0x10(%rax),%rax
    db9b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    db9f:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    dba3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dba7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    dbab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbaf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    dbb3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    dbb8:	75 c2                	jne    db7c <release_unused_segments+0x33>
    dbba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dbbe:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
    dbc5:	ff 
    dbc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbca:	5d                   	pop    %rbp
    dbcb:	c3                   	retq   

000000000000dbcc <sys_trim>:
    dbcc:	55                   	push   %rbp
    dbcd:	48 89 e5             	mov    %rsp,%rbp
    dbd0:	48 83 ec 50          	sub    $0x50,%rsp
    dbd4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    dbd8:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    dbdc:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    dbe3:	00 
    dbe4:	48 8b 05 35 a0 03 00 	mov    0x3a035(%rip),%rax        # 47c20 <mparams>
    dbeb:	48 85 c0             	test   %rax,%rax
    dbee:	75 07                	jne    dbf7 <sys_trim+0x2b>
    dbf0:	e8 50 d9 ff ff       	callq  b545 <init_mparams>
    dbf5:	85 c0                	test   %eax,%eax
    dbf7:	90                   	nop
    dbf8:	48 81 7d b0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x50(%rbp)
    dbff:	ff 
    dc00:	0f 87 e5 01 00 00    	ja     ddeb <sys_trim+0x21f>
    dc06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc0a:	48 8b 40 28          	mov    0x28(%rax),%rax
    dc0e:	48 85 c0             	test   %rax,%rax
    dc11:	0f 84 d4 01 00 00    	je     ddeb <sys_trim+0x21f>
    dc17:	48 83 45 b0 50       	addq   $0x50,-0x50(%rbp)
    dc1c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc20:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc24:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    dc28:	0f 83 95 01 00 00    	jae    ddc3 <sys_trim+0x1f7>
    dc2e:	48 8b 05 fb 9f 03 00 	mov    0x39ffb(%rip),%rax        # 47c30 <mparams+0x10>
    dc35:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    dc39:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc3d:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc41:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
    dc45:	48 89 c2             	mov    %rax,%rdx
    dc48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dc4c:	48 01 d0             	add    %rdx,%rax
    dc4f:	48 83 e8 01          	sub    $0x1,%rax
    dc53:	ba 00 00 00 00       	mov    $0x0,%edx
    dc58:	48 f7 75 d8          	divq   -0x28(%rbp)
    dc5c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    dc60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dc64:	48 0f af c2          	imul   %rdx,%rax
    dc68:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    dc6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc70:	48 8b 50 28          	mov    0x28(%rax),%rdx
    dc74:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc78:	48 89 d6             	mov    %rdx,%rsi
    dc7b:	48 89 c7             	mov    %rax,%rdi
    dc7e:	e8 63 d8 ff ff       	callq  b4e6 <segment_holding>
    dc83:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    dc87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dc8b:	8b 40 18             	mov    0x18(%rax),%eax
    dc8e:	83 e0 08             	and    $0x8,%eax
    dc91:	85 c0                	test   %eax,%eax
    dc93:	0f 85 b2 00 00 00    	jne    dd4b <sys_trim+0x17f>
    dc99:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    dca0:	ff ff 7f 
    dca3:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    dca7:	76 12                	jbe    dcbb <sys_trim+0xef>
    dca9:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    dcb0:	00 00 80 
    dcb3:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    dcb7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    dcbb:	b8 01 00 00 00       	mov    $0x1,%eax
    dcc0:	87 05 3a 9f 03 00    	xchg   %eax,0x39f3a(%rip)        # 47c00 <malloc_global_mutex>
    dcc6:	85 c0                	test   %eax,%eax
    dcc8:	74 0c                	je     dcd6 <sys_trim+0x10a>
    dcca:	48 8d 3d 2f 9f 03 00 	lea    0x39f2f(%rip),%rdi        # 47c00 <malloc_global_mutex>
    dcd1:	e8 db d7 ff ff       	callq  b4b1 <spin_acquire_lock>
    dcd6:	bf 00 00 00 00       	mov    $0x0,%edi
    dcdb:	e8 b3 5b 00 00       	callq  13893 <sbrk>
    dce0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dce4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dce8:	48 8b 10             	mov    (%rax),%rdx
    dceb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dcef:	48 8b 40 08          	mov    0x8(%rax),%rax
    dcf3:	48 01 d0             	add    %rdx,%rax
    dcf6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    dcfa:	75 44                	jne    dd40 <sys_trim+0x174>
    dcfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd00:	48 f7 d8             	neg    %rax
    dd03:	48 89 c7             	mov    %rax,%rdi
    dd06:	e8 88 5b 00 00       	callq  13893 <sbrk>
    dd0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dd0f:	bf 00 00 00 00       	mov    $0x0,%edi
    dd14:	e8 7a 5b 00 00       	callq  13893 <sbrk>
    dd19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dd1d:	48 83 7d f0 ff       	cmpq   $0xffffffffffffffff,-0x10(%rbp)
    dd22:	74 1c                	je     dd40 <sys_trim+0x174>
    dd24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd28:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    dd2c:	73 12                	jae    dd40 <sys_trim+0x174>
    dd2e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd36:	48 29 c2             	sub    %rax,%rdx
    dd39:	48 89 d0             	mov    %rdx,%rax
    dd3c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    dd40:	b8 00 00 00 00       	mov    $0x0,%eax
    dd45:	89 05 b5 9e 03 00    	mov    %eax,0x39eb5(%rip)        # 47c00 <malloc_global_mutex>
    dd4b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    dd50:	74 71                	je     ddc3 <sys_trim+0x1f7>
    dd52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd56:	48 8b 40 08          	mov    0x8(%rax),%rax
    dd5a:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    dd5e:	48 89 c2             	mov    %rax,%rdx
    dd61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd65:	48 89 50 08          	mov    %rdx,0x8(%rax)
    dd69:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd6d:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    dd74:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    dd78:	48 89 c2             	mov    %rax,%rdx
    dd7b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd7f:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    dd86:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd8a:	48 8b 40 10          	mov    0x10(%rax),%rax
    dd8e:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    dd92:	48 89 c2             	mov    %rax,%rdx
    dd95:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd99:	48 8b 48 28          	mov    0x28(%rax),%rcx
    dd9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dda1:	48 89 ce             	mov    %rcx,%rsi
    dda4:	48 89 c7             	mov    %rax,%rdi
    dda7:	e8 06 df ff ff       	callq  bcb2 <init_top>
    ddac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ddb0:	48 8b 50 28          	mov    0x28(%rax),%rdx
    ddb4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ddb8:	48 89 d6             	mov    %rdx,%rsi
    ddbb:	48 89 c7             	mov    %rax,%rdi
    ddbe:	e8 04 d9 ff ff       	callq  b6c7 <do_check_top_chunk>
    ddc3:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ddc8:	75 21                	jne    ddeb <sys_trim+0x21f>
    ddca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ddce:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ddd2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ddd6:	48 8b 40 30          	mov    0x30(%rax),%rax
    ddda:	48 39 c2             	cmp    %rax,%rdx
    dddd:	76 0c                	jbe    ddeb <sys_trim+0x21f>
    dddf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dde3:	48 c7 40 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rax)
    ddea:	ff 
    ddeb:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ddf0:	0f 95 c0             	setne  %al
    ddf3:	0f b6 c0             	movzbl %al,%eax
    ddf6:	c9                   	leaveq 
    ddf7:	c3                   	retq   

000000000000ddf8 <dispose_chunk>:
    ddf8:	55                   	push   %rbp
    ddf9:	48 89 e5             	mov    %rsp,%rbp
    ddfc:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
    de03:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
    de0a:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
    de11:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
    de18:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    de1f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    de26:	48 01 d0             	add    %rdx,%rax
    de29:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    de30:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    de37:	48 8b 40 08          	mov    0x8(%rax),%rax
    de3b:	83 e0 01             	and    $0x1,%eax
    de3e:	48 85 c0             	test   %rax,%rax
    de41:	0f 85 3f 07 00 00    	jne    e586 <dispose_chunk+0x78e>
    de47:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    de4e:	48 8b 00             	mov    (%rax),%rax
    de51:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    de58:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    de5f:	48 8b 40 08          	mov    0x8(%rax),%rax
    de63:	83 e0 03             	and    $0x3,%eax
    de66:	48 85 c0             	test   %rax,%rax
    de69:	75 21                	jne    de8c <dispose_chunk+0x94>
    de6b:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    de72:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    de79:	48 01 d0             	add    %rdx,%rax
    de7c:	48 83 c0 20          	add    $0x20,%rax
    de80:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    de87:	e9 9a 12 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    de8c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    de93:	48 f7 d8             	neg    %rax
    de96:	48 89 c2             	mov    %rax,%rdx
    de99:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    dea0:	48 01 d0             	add    %rdx,%rax
    dea3:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    deaa:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    deb1:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
    deb8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    debf:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    dec6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    decd:	48 8b 40 18          	mov    0x18(%rax),%rax
    ded1:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    ded8:	0f 93 c0             	setae  %al
    dedb:	0f b6 c0             	movzbl %al,%eax
    dede:	48 85 c0             	test   %rax,%rax
    dee1:	0f 84 9a 06 00 00    	je     e581 <dispose_chunk+0x789>
    dee7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    deee:	48 8b 40 20          	mov    0x20(%rax),%rax
    def2:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
    def9:	0f 84 06 06 00 00    	je     e505 <dispose_chunk+0x70d>
    deff:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    df06:	48 c1 e8 03          	shr    $0x3,%rax
    df0a:	48 83 f8 1f          	cmp    $0x1f,%rax
    df0e:	0f 87 f9 01 00 00    	ja     e10d <dispose_chunk+0x315>
    df14:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    df1b:	48 8b 40 10          	mov    0x10(%rax),%rax
    df1f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    df26:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    df2d:	48 8b 40 18          	mov    0x18(%rax),%rax
    df31:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    df38:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    df3f:	48 c1 e8 03          	shr    $0x3,%rax
    df43:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
    df49:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    df50:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    df57:	75 05                	jne    df5e <dispose_chunk+0x166>
    df59:	e8 7b d6 02 00       	callq  3b5d9 <abort>
    df5e:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    df65:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    df6c:	75 05                	jne    df73 <dispose_chunk+0x17b>
    df6e:	e8 66 d6 02 00       	callq  3b5d9 <abort>
    df73:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    df7a:	48 8b 40 08          	mov    0x8(%rax),%rax
    df7e:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    df82:	48 89 c2             	mov    %rax,%rdx
    df85:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    df8b:	c1 e0 03             	shl    $0x3,%eax
    df8e:	89 c0                	mov    %eax,%eax
    df90:	48 39 c2             	cmp    %rax,%rdx
    df93:	74 05                	je     df9a <dispose_chunk+0x1a2>
    df95:	e8 3f d6 02 00       	callq  3b5d9 <abort>
    df9a:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    dfa0:	01 c0                	add    %eax,%eax
    dfa2:	89 c0                	mov    %eax,%eax
    dfa4:	48 83 c0 08          	add    $0x8,%rax
    dfa8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dfaf:	00 
    dfb0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    dfb7:	48 01 d0             	add    %rdx,%rax
    dfba:	48 83 c0 08          	add    $0x8,%rax
    dfbe:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
    dfc5:	0f 94 c0             	sete   %al
    dfc8:	0f b6 c0             	movzbl %al,%eax
    dfcb:	48 85 c0             	test   %rax,%rax
    dfce:	75 4e                	jne    e01e <dispose_chunk+0x226>
    dfd0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    dfd7:	48 8b 40 18          	mov    0x18(%rax),%rax
    dfdb:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
    dfe2:	0f 93 c0             	setae  %al
    dfe5:	0f b6 c0             	movzbl %al,%eax
    dfe8:	48 85 c0             	test   %rax,%rax
    dfeb:	74 24                	je     e011 <dispose_chunk+0x219>
    dfed:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    dff4:	48 8b 40 18          	mov    0x18(%rax),%rax
    dff8:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
    dfff:	0f 94 c0             	sete   %al
    e002:	0f b6 c0             	movzbl %al,%eax
    e005:	48 85 c0             	test   %rax,%rax
    e008:	74 07                	je     e011 <dispose_chunk+0x219>
    e00a:	b8 01 00 00 00       	mov    $0x1,%eax
    e00f:	eb 05                	jmp    e016 <dispose_chunk+0x21e>
    e011:	b8 00 00 00 00       	mov    $0x0,%eax
    e016:	85 c0                	test   %eax,%eax
    e018:	0f 84 ea 00 00 00    	je     e108 <dispose_chunk+0x310>
    e01e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    e025:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    e02c:	75 2c                	jne    e05a <dispose_chunk+0x262>
    e02e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e035:	8b 10                	mov    (%rax),%edx
    e037:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    e03d:	be 01 00 00 00       	mov    $0x1,%esi
    e042:	89 c1                	mov    %eax,%ecx
    e044:	d3 e6                	shl    %cl,%esi
    e046:	89 f0                	mov    %esi,%eax
    e048:	f7 d0                	not    %eax
    e04a:	21 c2                	and    %eax,%edx
    e04c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e053:	89 10                	mov    %edx,(%rax)
    e055:	e9 2c 05 00 00       	jmpq   e586 <dispose_chunk+0x78e>
    e05a:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    e060:	01 c0                	add    %eax,%eax
    e062:	89 c0                	mov    %eax,%eax
    e064:	48 83 c0 08          	add    $0x8,%rax
    e068:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e06f:	00 
    e070:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e077:	48 01 d0             	add    %rdx,%rax
    e07a:	48 83 c0 08          	add    $0x8,%rax
    e07e:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    e085:	0f 94 c0             	sete   %al
    e088:	0f b6 c0             	movzbl %al,%eax
    e08b:	48 85 c0             	test   %rax,%rax
    e08e:	75 4a                	jne    e0da <dispose_chunk+0x2e2>
    e090:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e097:	48 8b 40 18          	mov    0x18(%rax),%rax
    e09b:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    e0a2:	0f 93 c0             	setae  %al
    e0a5:	0f b6 c0             	movzbl %al,%eax
    e0a8:	48 85 c0             	test   %rax,%rax
    e0ab:	74 24                	je     e0d1 <dispose_chunk+0x2d9>
    e0ad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    e0b4:	48 8b 40 10          	mov    0x10(%rax),%rax
    e0b8:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
    e0bf:	0f 94 c0             	sete   %al
    e0c2:	0f b6 c0             	movzbl %al,%eax
    e0c5:	48 85 c0             	test   %rax,%rax
    e0c8:	74 07                	je     e0d1 <dispose_chunk+0x2d9>
    e0ca:	b8 01 00 00 00       	mov    $0x1,%eax
    e0cf:	eb 05                	jmp    e0d6 <dispose_chunk+0x2de>
    e0d1:	b8 00 00 00 00       	mov    $0x0,%eax
    e0d6:	85 c0                	test   %eax,%eax
    e0d8:	74 29                	je     e103 <dispose_chunk+0x30b>
    e0da:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    e0e1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    e0e8:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e0ec:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    e0f3:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    e0fa:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e0fe:	e9 83 04 00 00       	jmpq   e586 <dispose_chunk+0x78e>
    e103:	e8 d1 d4 02 00       	callq  3b5d9 <abort>
    e108:	e8 cc d4 02 00       	callq  3b5d9 <abort>
    e10d:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e114:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    e11b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e122:	48 8b 40 30          	mov    0x30(%rax),%rax
    e126:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    e12d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e134:	48 8b 40 18          	mov    0x18(%rax),%rax
    e138:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    e13f:	0f 84 b9 00 00 00    	je     e1fe <dispose_chunk+0x406>
    e145:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e14c:	48 8b 40 10          	mov    0x10(%rax),%rax
    e150:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    e157:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e15e:	48 8b 40 18          	mov    0x18(%rax),%rax
    e162:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e169:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e170:	48 8b 40 18          	mov    0x18(%rax),%rax
    e174:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
    e17b:	0f 93 c0             	setae  %al
    e17e:	0f b6 c0             	movzbl %al,%eax
    e181:	48 85 c0             	test   %rax,%rax
    e184:	74 24                	je     e1aa <dispose_chunk+0x3b2>
    e186:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    e18d:	48 8b 40 18          	mov    0x18(%rax),%rax
    e191:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    e198:	0f 94 c0             	sete   %al
    e19b:	0f b6 c0             	movzbl %al,%eax
    e19e:	48 85 c0             	test   %rax,%rax
    e1a1:	74 07                	je     e1aa <dispose_chunk+0x3b2>
    e1a3:	b8 01 00 00 00       	mov    $0x1,%eax
    e1a8:	eb 05                	jmp    e1af <dispose_chunk+0x3b7>
    e1aa:	b8 00 00 00 00       	mov    $0x0,%eax
    e1af:	85 c0                	test   %eax,%eax
    e1b1:	74 46                	je     e1f9 <dispose_chunk+0x401>
    e1b3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e1ba:	48 8b 40 10          	mov    0x10(%rax),%rax
    e1be:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    e1c5:	0f 94 c0             	sete   %al
    e1c8:	0f b6 c0             	movzbl %al,%eax
    e1cb:	48 85 c0             	test   %rax,%rax
    e1ce:	74 29                	je     e1f9 <dispose_chunk+0x401>
    e1d0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    e1d7:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    e1de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e1e2:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e1e9:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    e1f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e1f4:	e9 f8 00 00 00       	jmpq   e2f1 <dispose_chunk+0x4f9>
    e1f9:	e8 db d3 02 00       	callq  3b5d9 <abort>
    e1fe:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e205:	48 83 c0 28          	add    $0x28,%rax
    e209:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e210:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    e217:	48 8b 00             	mov    (%rax),%rax
    e21a:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e221:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    e228:	00 
    e229:	75 52                	jne    e27d <dispose_chunk+0x485>
    e22b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e232:	48 83 c0 20          	add    $0x20,%rax
    e236:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e23d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    e244:	48 8b 00             	mov    (%rax),%rax
    e247:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e24e:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    e255:	00 
    e256:	0f 84 95 00 00 00    	je     e2f1 <dispose_chunk+0x4f9>
    e25c:	eb 1f                	jmp    e27d <dispose_chunk+0x485>
    e25e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    e265:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e26c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    e273:	48 8b 00             	mov    (%rax),%rax
    e276:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e27d:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e284:	48 83 c0 28          	add    $0x28,%rax
    e288:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    e28f:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    e296:	48 8b 00             	mov    (%rax),%rax
    e299:	48 85 c0             	test   %rax,%rax
    e29c:	75 c0                	jne    e25e <dispose_chunk+0x466>
    e29e:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e2a5:	48 83 c0 20          	add    $0x20,%rax
    e2a9:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    e2b0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    e2b7:	48 8b 00             	mov    (%rax),%rax
    e2ba:	48 85 c0             	test   %rax,%rax
    e2bd:	75 9f                	jne    e25e <dispose_chunk+0x466>
    e2bf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e2c6:	48 8b 40 18          	mov    0x18(%rax),%rax
    e2ca:	48 39 85 e8 fe ff ff 	cmp    %rax,-0x118(%rbp)
    e2d1:	0f 93 c0             	setae  %al
    e2d4:	0f b6 c0             	movzbl %al,%eax
    e2d7:	48 85 c0             	test   %rax,%rax
    e2da:	74 10                	je     e2ec <dispose_chunk+0x4f4>
    e2dc:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    e2e3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e2ea:	eb 05                	jmp    e2f1 <dispose_chunk+0x4f9>
    e2ec:	e8 e8 d2 02 00       	callq  3b5d9 <abort>
    e2f1:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    e2f8:	00 
    e2f9:	0f 84 87 02 00 00    	je     e586 <dispose_chunk+0x78e>
    e2ff:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e306:	8b 40 38             	mov    0x38(%rax),%eax
    e309:	89 c0                	mov    %eax,%eax
    e30b:	48 83 c0 4a          	add    $0x4a,%rax
    e30f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e316:	00 
    e317:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e31e:	48 01 d0             	add    %rdx,%rax
    e321:	48 83 c0 08          	add    $0x8,%rax
    e325:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    e32c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e333:	48 8b 00             	mov    (%rax),%rax
    e336:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    e33d:	75 53                	jne    e392 <dispose_chunk+0x59a>
    e33f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e346:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    e34d:	48 89 10             	mov    %rdx,(%rax)
    e350:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e357:	48 8b 00             	mov    (%rax),%rax
    e35a:	48 85 c0             	test   %rax,%rax
    e35d:	0f 85 8d 00 00 00    	jne    e3f0 <dispose_chunk+0x5f8>
    e363:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e36a:	8b 50 04             	mov    0x4(%rax),%edx
    e36d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e374:	8b 40 38             	mov    0x38(%rax),%eax
    e377:	be 01 00 00 00       	mov    $0x1,%esi
    e37c:	89 c1                	mov    %eax,%ecx
    e37e:	d3 e6                	shl    %cl,%esi
    e380:	89 f0                	mov    %esi,%eax
    e382:	f7 d0                	not    %eax
    e384:	21 c2                	and    %eax,%edx
    e386:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e38d:	89 50 04             	mov    %edx,0x4(%rax)
    e390:	eb 5e                	jmp    e3f0 <dispose_chunk+0x5f8>
    e392:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e399:	48 8b 40 18          	mov    0x18(%rax),%rax
    e39d:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
    e3a4:	0f 93 c0             	setae  %al
    e3a7:	0f b6 c0             	movzbl %al,%eax
    e3aa:	48 85 c0             	test   %rax,%rax
    e3ad:	74 3c                	je     e3eb <dispose_chunk+0x5f3>
    e3af:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    e3b6:	48 8b 40 20          	mov    0x20(%rax),%rax
    e3ba:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    e3c1:	75 14                	jne    e3d7 <dispose_chunk+0x5df>
    e3c3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    e3ca:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    e3d1:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e3d5:	eb 19                	jmp    e3f0 <dispose_chunk+0x5f8>
    e3d7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    e3de:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    e3e5:	48 89 50 28          	mov    %rdx,0x28(%rax)
    e3e9:	eb 05                	jmp    e3f0 <dispose_chunk+0x5f8>
    e3eb:	e8 e9 d1 02 00       	callq  3b5d9 <abort>
    e3f0:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    e3f7:	00 
    e3f8:	0f 84 88 01 00 00    	je     e586 <dispose_chunk+0x78e>
    e3fe:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e405:	48 8b 40 18          	mov    0x18(%rax),%rax
    e409:	48 39 85 e0 fe ff ff 	cmp    %rax,-0x120(%rbp)
    e410:	0f 93 c0             	setae  %al
    e413:	0f b6 c0             	movzbl %al,%eax
    e416:	48 85 c0             	test   %rax,%rax
    e419:	0f 84 e1 00 00 00    	je     e500 <dispose_chunk+0x708>
    e41f:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e426:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    e42d:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e431:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e438:	48 8b 40 20          	mov    0x20(%rax),%rax
    e43c:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    e443:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    e44a:	00 
    e44b:	74 48                	je     e495 <dispose_chunk+0x69d>
    e44d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e454:	48 8b 40 18          	mov    0x18(%rax),%rax
    e458:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
    e45f:	0f 93 c0             	setae  %al
    e462:	0f b6 c0             	movzbl %al,%eax
    e465:	48 85 c0             	test   %rax,%rax
    e468:	74 26                	je     e490 <dispose_chunk+0x698>
    e46a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e471:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    e478:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e47c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    e483:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    e48a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e48e:	eb 05                	jmp    e495 <dispose_chunk+0x69d>
    e490:	e8 44 d1 02 00       	callq  3b5d9 <abort>
    e495:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    e49c:	48 8b 40 28          	mov    0x28(%rax),%rax
    e4a0:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    e4a7:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    e4ae:	00 
    e4af:	0f 84 d1 00 00 00    	je     e586 <dispose_chunk+0x78e>
    e4b5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e4bc:	48 8b 40 18          	mov    0x18(%rax),%rax
    e4c0:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
    e4c7:	0f 93 c0             	setae  %al
    e4ca:	0f b6 c0             	movzbl %al,%eax
    e4cd:	48 85 c0             	test   %rax,%rax
    e4d0:	74 29                	je     e4fb <dispose_chunk+0x703>
    e4d2:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    e4d9:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    e4e0:	48 89 50 28          	mov    %rdx,0x28(%rax)
    e4e4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e4eb:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    e4f2:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e4f6:	e9 8b 00 00 00       	jmpq   e586 <dispose_chunk+0x78e>
    e4fb:	e8 d9 d0 02 00       	callq  3b5d9 <abort>
    e500:	e8 d4 d0 02 00       	callq  3b5d9 <abort>
    e505:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e50c:	48 8b 40 08          	mov    0x8(%rax),%rax
    e510:	83 e0 03             	and    $0x3,%eax
    e513:	48 83 f8 03          	cmp    $0x3,%rax
    e517:	75 6d                	jne    e586 <dispose_chunk+0x78e>
    e519:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e520:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e527:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e52b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e532:	48 8b 40 08          	mov    0x8(%rax),%rax
    e536:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    e53a:	48 89 c2             	mov    %rax,%rdx
    e53d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e544:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e548:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    e54f:	48 83 c8 01          	or     $0x1,%rax
    e553:	48 89 c2             	mov    %rax,%rdx
    e556:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e55d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e561:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    e568:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    e56f:	48 01 c2             	add    %rax,%rdx
    e572:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    e579:	48 89 02             	mov    %rax,(%rdx)
    e57c:	e9 a5 0b 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    e581:	e8 53 d0 02 00       	callq  3b5d9 <abort>
    e586:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e58d:	48 8b 40 18          	mov    0x18(%rax),%rax
    e591:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    e598:	0f 93 c0             	setae  %al
    e59b:	0f b6 c0             	movzbl %al,%eax
    e59e:	48 85 c0             	test   %rax,%rax
    e5a1:	0f 84 79 0b 00 00    	je     f120 <dispose_chunk+0x1328>
    e5a7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e5ae:	48 8b 40 08          	mov    0x8(%rax),%rax
    e5b2:	83 e0 02             	and    $0x2,%eax
    e5b5:	48 85 c0             	test   %rax,%rax
    e5b8:	0f 85 f3 06 00 00    	jne    ecb1 <dispose_chunk+0xeb9>
    e5be:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e5c5:	48 8b 40 28          	mov    0x28(%rax),%rax
    e5c9:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    e5d0:	0f 85 92 00 00 00    	jne    e668 <dispose_chunk+0x870>
    e5d6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e5dd:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e5e1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    e5e8:	48 01 c2             	add    %rax,%rdx
    e5eb:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e5f2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e5f6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e5fd:	48 8b 40 10          	mov    0x10(%rax),%rax
    e601:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e605:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e60c:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    e613:	48 89 50 28          	mov    %rdx,0x28(%rax)
    e617:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e61b:	48 83 c8 01          	or     $0x1,%rax
    e61f:	48 89 c2             	mov    %rax,%rdx
    e622:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e629:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e62d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e634:	48 8b 40 20          	mov    0x20(%rax),%rax
    e638:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
    e63f:	0f 85 e0 0a 00 00    	jne    f125 <dispose_chunk+0x132d>
    e645:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e64c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    e653:	00 
    e654:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e65b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e662:	00 
    e663:	e9 bd 0a 00 00       	jmpq   f125 <dispose_chunk+0x132d>
    e668:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e66f:	48 8b 40 20          	mov    0x20(%rax),%rax
    e673:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    e67a:	75 71                	jne    e6ed <dispose_chunk+0x8f5>
    e67c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e683:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e687:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    e68e:	48 01 c2             	add    %rax,%rdx
    e691:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e698:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e69c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e6a3:	48 8b 40 08          	mov    0x8(%rax),%rax
    e6a7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e6ab:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e6b2:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    e6b9:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e6bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6c1:	48 83 c8 01          	or     $0x1,%rax
    e6c5:	48 89 c2             	mov    %rax,%rdx
    e6c8:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e6cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e6d3:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    e6da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6de:	48 01 c2             	add    %rax,%rdx
    e6e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6e5:	48 89 02             	mov    %rax,(%rdx)
    e6e8:	e9 39 0a 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    e6ed:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e6f4:	48 8b 40 08          	mov    0x8(%rax),%rax
    e6f8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e6fc:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    e700:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e704:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
    e70b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e70f:	48 c1 e8 03          	shr    $0x3,%rax
    e713:	48 83 f8 1f          	cmp    $0x1f,%rax
    e717:	0f 87 c6 01 00 00    	ja     e8e3 <dispose_chunk+0xaeb>
    e71d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e724:	48 8b 40 10          	mov    0x10(%rax),%rax
    e728:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    e72c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e733:	48 8b 40 18          	mov    0x18(%rax),%rax
    e737:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    e73b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e73f:	48 c1 e8 03          	shr    $0x3,%rax
    e743:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
    e749:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e750:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    e754:	75 05                	jne    e75b <dispose_chunk+0x963>
    e756:	e8 7e ce 02 00       	callq  3b5d9 <abort>
    e75b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e762:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    e766:	75 05                	jne    e76d <dispose_chunk+0x975>
    e768:	e8 6c ce 02 00       	callq  3b5d9 <abort>
    e76d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e774:	48 8b 40 08          	mov    0x8(%rax),%rax
    e778:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e77c:	48 89 c2             	mov    %rax,%rdx
    e77f:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    e785:	c1 e0 03             	shl    $0x3,%eax
    e788:	89 c0                	mov    %eax,%eax
    e78a:	48 39 c2             	cmp    %rax,%rdx
    e78d:	74 05                	je     e794 <dispose_chunk+0x99c>
    e78f:	e8 45 ce 02 00       	callq  3b5d9 <abort>
    e794:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    e79a:	01 c0                	add    %eax,%eax
    e79c:	89 c0                	mov    %eax,%eax
    e79e:	48 83 c0 08          	add    $0x8,%rax
    e7a2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e7a9:	00 
    e7aa:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e7b1:	48 01 d0             	add    %rdx,%rax
    e7b4:	48 83 c0 08          	add    $0x8,%rax
    e7b8:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    e7bc:	0f 94 c0             	sete   %al
    e7bf:	0f b6 c0             	movzbl %al,%eax
    e7c2:	48 85 c0             	test   %rax,%rax
    e7c5:	75 48                	jne    e80f <dispose_chunk+0xa17>
    e7c7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e7ce:	48 8b 40 18          	mov    0x18(%rax),%rax
    e7d2:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    e7d6:	0f 93 c0             	setae  %al
    e7d9:	0f b6 c0             	movzbl %al,%eax
    e7dc:	48 85 c0             	test   %rax,%rax
    e7df:	74 21                	je     e802 <dispose_chunk+0xa0a>
    e7e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e7e5:	48 8b 40 18          	mov    0x18(%rax),%rax
    e7e9:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    e7f0:	0f 94 c0             	sete   %al
    e7f3:	0f b6 c0             	movzbl %al,%eax
    e7f6:	48 85 c0             	test   %rax,%rax
    e7f9:	74 07                	je     e802 <dispose_chunk+0xa0a>
    e7fb:	b8 01 00 00 00       	mov    $0x1,%eax
    e800:	eb 05                	jmp    e807 <dispose_chunk+0xa0f>
    e802:	b8 00 00 00 00       	mov    $0x0,%eax
    e807:	85 c0                	test   %eax,%eax
    e809:	0f 84 cf 00 00 00    	je     e8de <dispose_chunk+0xae6>
    e80f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e813:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    e817:	75 2c                	jne    e845 <dispose_chunk+0xa4d>
    e819:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e820:	8b 10                	mov    (%rax),%edx
    e822:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    e828:	be 01 00 00 00       	mov    $0x1,%esi
    e82d:	89 c1                	mov    %eax,%ecx
    e82f:	d3 e6                	shl    %cl,%esi
    e831:	89 f0                	mov    %esi,%eax
    e833:	f7 d0                	not    %eax
    e835:	21 c2                	and    %eax,%edx
    e837:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e83e:	89 10                	mov    %edx,(%rax)
    e840:	e9 0d 04 00 00       	jmpq   ec52 <dispose_chunk+0xe5a>
    e845:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    e84b:	01 c0                	add    %eax,%eax
    e84d:	89 c0                	mov    %eax,%eax
    e84f:	48 83 c0 08          	add    $0x8,%rax
    e853:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e85a:	00 
    e85b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e862:	48 01 d0             	add    %rdx,%rax
    e865:	48 83 c0 08          	add    $0x8,%rax
    e869:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    e86d:	0f 94 c0             	sete   %al
    e870:	0f b6 c0             	movzbl %al,%eax
    e873:	48 85 c0             	test   %rax,%rax
    e876:	75 44                	jne    e8bc <dispose_chunk+0xac4>
    e878:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e87f:	48 8b 40 18          	mov    0x18(%rax),%rax
    e883:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    e887:	0f 93 c0             	setae  %al
    e88a:	0f b6 c0             	movzbl %al,%eax
    e88d:	48 85 c0             	test   %rax,%rax
    e890:	74 21                	je     e8b3 <dispose_chunk+0xabb>
    e892:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e896:	48 8b 40 10          	mov    0x10(%rax),%rax
    e89a:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
    e8a1:	0f 94 c0             	sete   %al
    e8a4:	0f b6 c0             	movzbl %al,%eax
    e8a7:	48 85 c0             	test   %rax,%rax
    e8aa:	74 07                	je     e8b3 <dispose_chunk+0xabb>
    e8ac:	b8 01 00 00 00       	mov    $0x1,%eax
    e8b1:	eb 05                	jmp    e8b8 <dispose_chunk+0xac0>
    e8b3:	b8 00 00 00 00       	mov    $0x0,%eax
    e8b8:	85 c0                	test   %eax,%eax
    e8ba:	74 1d                	je     e8d9 <dispose_chunk+0xae1>
    e8bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e8c0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e8c4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e8c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e8cc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    e8d0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e8d4:	e9 79 03 00 00       	jmpq   ec52 <dispose_chunk+0xe5a>
    e8d9:	e8 fb cc 02 00       	callq  3b5d9 <abort>
    e8de:	e8 f6 cc 02 00       	callq  3b5d9 <abort>
    e8e3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e8ea:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    e8ee:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e8f2:	48 8b 40 30          	mov    0x30(%rax),%rax
    e8f6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    e8fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e8fe:	48 8b 40 18          	mov    0x18(%rax),%rax
    e902:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    e906:	0f 84 9e 00 00 00    	je     e9aa <dispose_chunk+0xbb2>
    e90c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e910:	48 8b 40 10          	mov    0x10(%rax),%rax
    e914:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    e918:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e91c:	48 8b 40 18          	mov    0x18(%rax),%rax
    e920:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    e927:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e92e:	48 8b 40 18          	mov    0x18(%rax),%rax
    e932:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    e936:	0f 93 c0             	setae  %al
    e939:	0f b6 c0             	movzbl %al,%eax
    e93c:	48 85 c0             	test   %rax,%rax
    e93f:	74 1e                	je     e95f <dispose_chunk+0xb67>
    e941:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    e945:	48 8b 40 18          	mov    0x18(%rax),%rax
    e949:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    e94d:	0f 94 c0             	sete   %al
    e950:	0f b6 c0             	movzbl %al,%eax
    e953:	48 85 c0             	test   %rax,%rax
    e956:	74 07                	je     e95f <dispose_chunk+0xb67>
    e958:	b8 01 00 00 00       	mov    $0x1,%eax
    e95d:	eb 05                	jmp    e964 <dispose_chunk+0xb6c>
    e95f:	b8 00 00 00 00       	mov    $0x0,%eax
    e964:	85 c0                	test   %eax,%eax
    e966:	74 3d                	je     e9a5 <dispose_chunk+0xbad>
    e968:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    e96f:	48 8b 40 10          	mov    0x10(%rax),%rax
    e973:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    e977:	0f 94 c0             	sete   %al
    e97a:	0f b6 c0             	movzbl %al,%eax
    e97d:	48 85 c0             	test   %rax,%rax
    e980:	74 23                	je     e9a5 <dispose_chunk+0xbad>
    e982:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    e986:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    e98d:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e991:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    e998:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    e99c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e9a0:	e9 f2 00 00 00       	jmpq   ea97 <dispose_chunk+0xc9f>
    e9a5:	e8 2f cc 02 00       	callq  3b5d9 <abort>
    e9aa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e9ae:	48 83 c0 28          	add    $0x28,%rax
    e9b2:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    e9b9:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    e9c0:	48 8b 00             	mov    (%rax),%rax
    e9c3:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    e9ca:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    e9d1:	00 
    e9d2:	75 4f                	jne    ea23 <dispose_chunk+0xc2b>
    e9d4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e9d8:	48 83 c0 20          	add    $0x20,%rax
    e9dc:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    e9e3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    e9ea:	48 8b 00             	mov    (%rax),%rax
    e9ed:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    e9f4:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    e9fb:	00 
    e9fc:	0f 84 95 00 00 00    	je     ea97 <dispose_chunk+0xc9f>
    ea02:	eb 1f                	jmp    ea23 <dispose_chunk+0xc2b>
    ea04:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ea0b:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    ea12:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    ea19:	48 8b 00             	mov    (%rax),%rax
    ea1c:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    ea23:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ea2a:	48 83 c0 28          	add    $0x28,%rax
    ea2e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    ea35:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ea3c:	48 8b 00             	mov    (%rax),%rax
    ea3f:	48 85 c0             	test   %rax,%rax
    ea42:	75 c0                	jne    ea04 <dispose_chunk+0xc0c>
    ea44:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ea4b:	48 83 c0 20          	add    $0x20,%rax
    ea4f:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    ea56:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ea5d:	48 8b 00             	mov    (%rax),%rax
    ea60:	48 85 c0             	test   %rax,%rax
    ea63:	75 9f                	jne    ea04 <dispose_chunk+0xc0c>
    ea65:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ea6c:	48 8b 40 18          	mov    0x18(%rax),%rax
    ea70:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
    ea77:	0f 93 c0             	setae  %al
    ea7a:	0f b6 c0             	movzbl %al,%eax
    ea7d:	48 85 c0             	test   %rax,%rax
    ea80:	74 10                	je     ea92 <dispose_chunk+0xc9a>
    ea82:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    ea89:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ea90:	eb 05                	jmp    ea97 <dispose_chunk+0xc9f>
    ea92:	e8 42 cb 02 00       	callq  3b5d9 <abort>
    ea97:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    ea9c:	0f 84 b0 01 00 00    	je     ec52 <dispose_chunk+0xe5a>
    eaa2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    eaa6:	8b 40 38             	mov    0x38(%rax),%eax
    eaa9:	89 c0                	mov    %eax,%eax
    eaab:	48 83 c0 4a          	add    $0x4a,%rax
    eaaf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    eab6:	00 
    eab7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eabe:	48 01 d0             	add    %rdx,%rax
    eac1:	48 83 c0 08          	add    $0x8,%rax
    eac5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    eac9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    eacd:	48 8b 00             	mov    (%rax),%rax
    ead0:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    ead4:	75 46                	jne    eb1c <dispose_chunk+0xd24>
    ead6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    eada:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    eae1:	48 89 10             	mov    %rdx,(%rax)
    eae4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    eae8:	48 8b 00             	mov    (%rax),%rax
    eaeb:	48 85 c0             	test   %rax,%rax
    eaee:	75 7b                	jne    eb6b <dispose_chunk+0xd73>
    eaf0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eaf7:	8b 50 04             	mov    0x4(%rax),%edx
    eafa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    eafe:	8b 40 38             	mov    0x38(%rax),%eax
    eb01:	be 01 00 00 00       	mov    $0x1,%esi
    eb06:	89 c1                	mov    %eax,%ecx
    eb08:	d3 e6                	shl    %cl,%esi
    eb0a:	89 f0                	mov    %esi,%eax
    eb0c:	f7 d0                	not    %eax
    eb0e:	21 c2                	and    %eax,%edx
    eb10:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eb17:	89 50 04             	mov    %edx,0x4(%rax)
    eb1a:	eb 4f                	jmp    eb6b <dispose_chunk+0xd73>
    eb1c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eb23:	48 8b 40 18          	mov    0x18(%rax),%rax
    eb27:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    eb2b:	0f 93 c0             	setae  %al
    eb2e:	0f b6 c0             	movzbl %al,%eax
    eb31:	48 85 c0             	test   %rax,%rax
    eb34:	74 30                	je     eb66 <dispose_chunk+0xd6e>
    eb36:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    eb3a:	48 8b 40 20          	mov    0x20(%rax),%rax
    eb3e:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    eb42:	75 11                	jne    eb55 <dispose_chunk+0xd5d>
    eb44:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    eb48:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    eb4f:	48 89 50 20          	mov    %rdx,0x20(%rax)
    eb53:	eb 16                	jmp    eb6b <dispose_chunk+0xd73>
    eb55:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    eb59:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    eb60:	48 89 50 28          	mov    %rdx,0x28(%rax)
    eb64:	eb 05                	jmp    eb6b <dispose_chunk+0xd73>
    eb66:	e8 6e ca 02 00       	callq  3b5d9 <abort>
    eb6b:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    eb72:	00 
    eb73:	0f 84 d9 00 00 00    	je     ec52 <dispose_chunk+0xe5a>
    eb79:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eb80:	48 8b 40 18          	mov    0x18(%rax),%rax
    eb84:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
    eb8b:	0f 93 c0             	setae  %al
    eb8e:	0f b6 c0             	movzbl %al,%eax
    eb91:	48 85 c0             	test   %rax,%rax
    eb94:	0f 84 b3 00 00 00    	je     ec4d <dispose_chunk+0xe55>
    eb9a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    eba1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    eba5:	48 89 50 30          	mov    %rdx,0x30(%rax)
    eba9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ebad:	48 8b 40 20          	mov    0x20(%rax),%rax
    ebb1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ebb5:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    ebba:	74 3f                	je     ebfb <dispose_chunk+0xe03>
    ebbc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ebc3:	48 8b 40 18          	mov    0x18(%rax),%rax
    ebc7:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    ebcb:	0f 93 c0             	setae  %al
    ebce:	0f b6 c0             	movzbl %al,%eax
    ebd1:	48 85 c0             	test   %rax,%rax
    ebd4:	74 20                	je     ebf6 <dispose_chunk+0xdfe>
    ebd6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ebdd:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ebe1:	48 89 50 20          	mov    %rdx,0x20(%rax)
    ebe5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ebe9:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    ebf0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ebf4:	eb 05                	jmp    ebfb <dispose_chunk+0xe03>
    ebf6:	e8 de c9 02 00       	callq  3b5d9 <abort>
    ebfb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ebff:	48 8b 40 28          	mov    0x28(%rax),%rax
    ec03:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    ec07:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    ec0c:	74 44                	je     ec52 <dispose_chunk+0xe5a>
    ec0e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ec15:	48 8b 40 18          	mov    0x18(%rax),%rax
    ec19:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    ec1d:	0f 93 c0             	setae  %al
    ec20:	0f b6 c0             	movzbl %al,%eax
    ec23:	48 85 c0             	test   %rax,%rax
    ec26:	74 20                	je     ec48 <dispose_chunk+0xe50>
    ec28:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ec2f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    ec33:	48 89 50 28          	mov    %rdx,0x28(%rax)
    ec37:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ec3b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    ec42:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ec46:	eb 0a                	jmp    ec52 <dispose_chunk+0xe5a>
    ec48:	e8 8c c9 02 00       	callq  3b5d9 <abort>
    ec4d:	e8 87 c9 02 00       	callq  3b5d9 <abort>
    ec52:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ec59:	48 83 c8 01          	or     $0x1,%rax
    ec5d:	48 89 c2             	mov    %rax,%rdx
    ec60:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    ec67:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ec6b:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    ec72:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ec79:	48 01 c2             	add    %rax,%rdx
    ec7c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ec83:	48 89 02             	mov    %rax,(%rdx)
    ec86:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ec8d:	48 8b 40 20          	mov    0x20(%rax),%rax
    ec91:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
    ec98:	75 68                	jne    ed02 <dispose_chunk+0xf0a>
    ec9a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eca1:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    eca8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ecac:	e9 75 04 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    ecb1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    ecb8:	48 8b 40 08          	mov    0x8(%rax),%rax
    ecbc:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ecc0:	48 89 c2             	mov    %rax,%rdx
    ecc3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    ecca:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ecce:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ecd5:	48 83 c8 01          	or     $0x1,%rax
    ecd9:	48 89 c2             	mov    %rax,%rdx
    ecdc:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    ece3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ece7:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    ecee:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ecf5:	48 01 c2             	add    %rax,%rdx
    ecf8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ecff:	48 89 02             	mov    %rax,(%rdx)
    ed02:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ed09:	48 c1 e8 03          	shr    $0x3,%rax
    ed0d:	48 83 f8 1f          	cmp    $0x1f,%rax
    ed11:	0f 87 18 01 00 00    	ja     ee2f <dispose_chunk+0x1037>
    ed17:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ed1e:	48 c1 e8 03          	shr    $0x3,%rax
    ed22:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
    ed28:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    ed2e:	01 c0                	add    %eax,%eax
    ed30:	89 c0                	mov    %eax,%eax
    ed32:	48 83 c0 08          	add    $0x8,%rax
    ed36:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ed3d:	00 
    ed3e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ed45:	48 01 d0             	add    %rdx,%rax
    ed48:	48 83 c0 08          	add    $0x8,%rax
    ed4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ed50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed54:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    ed5b:	48 83 bd a8 fe ff ff 	cmpq   $0x1f,-0x158(%rbp)
    ed62:	1f 
    ed63:	77 05                	ja     ed6a <dispose_chunk+0xf72>
    ed65:	e8 6f c8 02 00       	callq  3b5d9 <abort>
    ed6a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ed71:	8b 10                	mov    (%rax),%edx
    ed73:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    ed79:	be 01 00 00 00       	mov    $0x1,%esi
    ed7e:	89 c1                	mov    %eax,%ecx
    ed80:	d3 e6                	shl    %cl,%esi
    ed82:	89 f0                	mov    %esi,%eax
    ed84:	21 d0                	and    %edx,%eax
    ed86:	85 c0                	test   %eax,%eax
    ed88:	75 27                	jne    edb1 <dispose_chunk+0xfb9>
    ed8a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ed91:	8b 10                	mov    (%rax),%edx
    ed93:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    ed99:	be 01 00 00 00       	mov    $0x1,%esi
    ed9e:	89 c1                	mov    %eax,%ecx
    eda0:	d3 e6                	shl    %cl,%esi
    eda2:	89 f0                	mov    %esi,%eax
    eda4:	09 c2                	or     %eax,%edx
    eda6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    edad:	89 10                	mov    %edx,(%rax)
    edaf:	eb 37                	jmp    ede8 <dispose_chunk+0xff0>
    edb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edb5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    edb9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    edc0:	48 8b 40 18          	mov    0x18(%rax),%rax
    edc4:	48 39 c2             	cmp    %rax,%rdx
    edc7:	0f 93 c0             	setae  %al
    edca:	0f b6 c0             	movzbl %al,%eax
    edcd:	48 85 c0             	test   %rax,%rax
    edd0:	74 11                	je     ede3 <dispose_chunk+0xfeb>
    edd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edd6:	48 8b 40 10          	mov    0x10(%rax),%rax
    edda:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    ede1:	eb 05                	jmp    ede8 <dispose_chunk+0xff0>
    ede3:	e8 f1 c7 02 00       	callq  3b5d9 <abort>
    ede8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edec:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    edf3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    edf7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    edfe:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    ee05:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ee09:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    ee10:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    ee17:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ee1b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    ee22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ee26:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ee2a:	e9 f7 02 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    ee2f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    ee36:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ee3a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ee41:	48 c1 e8 08          	shr    $0x8,%rax
    ee45:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
    ee4b:	83 bd d4 fe ff ff 00 	cmpl   $0x0,-0x12c(%rbp)
    ee52:	75 0c                	jne    ee60 <dispose_chunk+0x1068>
    ee54:	c7 85 c8 fe ff ff 00 	movl   $0x0,-0x138(%rbp)
    ee5b:	00 00 00 
    ee5e:	eb 5d                	jmp    eebd <dispose_chunk+0x10c5>
    ee60:	81 bd d4 fe ff ff ff 	cmpl   $0xffff,-0x12c(%rbp)
    ee67:	ff 00 00 
    ee6a:	76 0c                	jbe    ee78 <dispose_chunk+0x1080>
    ee6c:	c7 85 c8 fe ff ff 1f 	movl   $0x1f,-0x138(%rbp)
    ee73:	00 00 00 
    ee76:	eb 45                	jmp    eebd <dispose_chunk+0x10c5>
    ee78:	0f bd 85 d4 fe ff ff 	bsr    -0x12c(%rbp),%eax
    ee7f:	83 f0 1f             	xor    $0x1f,%eax
    ee82:	ba 1f 00 00 00       	mov    $0x1f,%edx
    ee87:	29 c2                	sub    %eax,%edx
    ee89:	89 d0                	mov    %edx,%eax
    ee8b:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
    ee91:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
    ee97:	8d 34 00             	lea    (%rax,%rax,1),%esi
    ee9a:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
    eea0:	83 c0 07             	add    $0x7,%eax
    eea3:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    eeaa:	89 c1                	mov    %eax,%ecx
    eeac:	48 d3 ea             	shr    %cl,%rdx
    eeaf:	48 89 d0             	mov    %rdx,%rax
    eeb2:	83 e0 01             	and    $0x1,%eax
    eeb5:	01 f0                	add    %esi,%eax
    eeb7:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
    eebd:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    eec3:	48 83 c0 4a          	add    $0x4a,%rax
    eec7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    eece:	00 
    eecf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    eed6:	48 01 d0             	add    %rdx,%rax
    eed9:	48 83 c0 08          	add    $0x8,%rax
    eedd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    eee1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eee5:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
    eeeb:	89 50 38             	mov    %edx,0x38(%rax)
    eeee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eef2:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    eef9:	00 
    eefa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eefe:	48 8b 50 28          	mov    0x28(%rax),%rdx
    ef02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef06:	48 89 50 20          	mov    %rdx,0x20(%rax)
    ef0a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ef11:	8b 50 04             	mov    0x4(%rax),%edx
    ef14:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    ef1a:	be 01 00 00 00       	mov    $0x1,%esi
    ef1f:	89 c1                	mov    %eax,%ecx
    ef21:	d3 e6                	shl    %cl,%esi
    ef23:	89 f0                	mov    %esi,%eax
    ef25:	21 d0                	and    %edx,%eax
    ef27:	85 c0                	test   %eax,%eax
    ef29:	75 5f                	jne    ef8a <dispose_chunk+0x1192>
    ef2b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ef32:	8b 50 04             	mov    0x4(%rax),%edx
    ef35:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    ef3b:	be 01 00 00 00       	mov    $0x1,%esi
    ef40:	89 c1                	mov    %eax,%ecx
    ef42:	d3 e6                	shl    %cl,%esi
    ef44:	89 f0                	mov    %esi,%eax
    ef46:	09 c2                	or     %eax,%edx
    ef48:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    ef4f:	89 50 04             	mov    %edx,0x4(%rax)
    ef52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ef56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ef5a:	48 89 10             	mov    %rdx,(%rax)
    ef5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef61:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ef65:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ef69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef6d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ef71:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ef75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef79:	48 8b 50 18          	mov    0x18(%rax),%rdx
    ef7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef81:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ef85:	e9 9c 01 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    ef8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ef8e:	48 8b 00             	mov    (%rax),%rax
    ef91:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    ef98:	83 bd c8 fe ff ff 1f 	cmpl   $0x1f,-0x138(%rbp)
    ef9f:	74 13                	je     efb4 <dispose_chunk+0x11bc>
    efa1:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    efa7:	d1 e8                	shr    %eax
    efa9:	ba 39 00 00 00       	mov    $0x39,%edx
    efae:	29 c2                	sub    %eax,%edx
    efb0:	89 d0                	mov    %edx,%eax
    efb2:	eb 05                	jmp    efb9 <dispose_chunk+0x11c1>
    efb4:	b8 00 00 00 00       	mov    $0x0,%eax
    efb9:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    efc0:	89 c1                	mov    %eax,%ecx
    efc2:	48 d3 e2             	shl    %cl,%rdx
    efc5:	48 89 d0             	mov    %rdx,%rax
    efc8:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    efcf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    efd6:	48 8b 40 08          	mov    0x8(%rax),%rax
    efda:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    efde:	48 39 85 a8 fe ff ff 	cmp    %rax,-0x158(%rbp)
    efe5:	0f 84 a2 00 00 00    	je     f08d <dispose_chunk+0x1295>
    efeb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    eff2:	48 c1 e8 3f          	shr    $0x3f,%rax
    eff6:	48 83 c0 04          	add    $0x4,%rax
    effa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f001:	00 
    f002:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f009:	48 01 d0             	add    %rdx,%rax
    f00c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f010:	48 d1 a5 20 ff ff ff 	shlq   -0xe0(%rbp)
    f017:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f01b:	48 8b 00             	mov    (%rax),%rax
    f01e:	48 85 c0             	test   %rax,%rax
    f021:	74 10                	je     f033 <dispose_chunk+0x123b>
    f023:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f027:	48 8b 00             	mov    (%rax),%rax
    f02a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    f031:	eb 9c                	jmp    efcf <dispose_chunk+0x11d7>
    f033:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    f03a:	48 8b 40 18          	mov    0x18(%rax),%rax
    f03e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    f042:	0f 93 c0             	setae  %al
    f045:	0f b6 c0             	movzbl %al,%eax
    f048:	48 85 c0             	test   %rax,%rax
    f04b:	74 3b                	je     f088 <dispose_chunk+0x1290>
    f04d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f051:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f055:	48 89 10             	mov    %rdx,(%rax)
    f058:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f05c:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    f063:	48 89 50 30          	mov    %rdx,0x30(%rax)
    f067:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f06b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f06f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f073:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f077:	48 8b 50 18          	mov    0x18(%rax),%rdx
    f07b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f07f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    f083:	e9 9e 00 00 00       	jmpq   f126 <dispose_chunk+0x132e>
    f088:	e8 4c c5 02 00       	callq  3b5d9 <abort>
    f08d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f094:	48 8b 40 10          	mov    0x10(%rax),%rax
    f098:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f09c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    f0a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    f0a7:	48 39 85 18 ff ff ff 	cmp    %rax,-0xe8(%rbp)
    f0ae:	0f 93 c0             	setae  %al
    f0b1:	0f b6 c0             	movzbl %al,%eax
    f0b4:	48 85 c0             	test   %rax,%rax
    f0b7:	74 62                	je     f11b <dispose_chunk+0x1323>
    f0b9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    f0c0:	48 8b 40 18          	mov    0x18(%rax),%rax
    f0c4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    f0c8:	0f 93 c0             	setae  %al
    f0cb:	0f b6 c0             	movzbl %al,%eax
    f0ce:	48 85 c0             	test   %rax,%rax
    f0d1:	74 48                	je     f11b <dispose_chunk+0x1323>
    f0d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f0d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f0db:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f0df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f0e3:	48 8b 50 18          	mov    0x18(%rax),%rdx
    f0e7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f0ee:	48 89 50 10          	mov    %rdx,0x10(%rax)
    f0f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f0fa:	48 89 50 10          	mov    %rdx,0x10(%rax)
    f0fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f102:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    f109:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f10d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f111:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    f118:	00 
    f119:	eb 0b                	jmp    f126 <dispose_chunk+0x132e>
    f11b:	e8 b9 c4 02 00       	callq  3b5d9 <abort>
    f120:	e8 b4 c4 02 00       	callq  3b5d9 <abort>
    f125:	90                   	nop
    f126:	c9                   	leaveq 
    f127:	c3                   	retq   

000000000000f128 <tmalloc_large>:
    f128:	55                   	push   %rbp
    f129:	48 89 e5             	mov    %rsp,%rbp
    f12c:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    f133:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    f13a:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    f141:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    f148:	00 00 00 00 
    f14c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f153:	48 f7 d8             	neg    %rax
    f156:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    f15d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f164:	48 c1 e8 08          	shr    $0x8,%rax
    f168:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    f16e:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
    f175:	75 0c                	jne    f183 <tmalloc_large+0x5b>
    f177:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%rbp)
    f17e:	00 00 00 
    f181:	eb 5d                	jmp    f1e0 <tmalloc_large+0xb8>
    f183:	81 bd 14 ff ff ff ff 	cmpl   $0xffff,-0xec(%rbp)
    f18a:	ff 00 00 
    f18d:	76 0c                	jbe    f19b <tmalloc_large+0x73>
    f18f:	c7 85 0c ff ff ff 1f 	movl   $0x1f,-0xf4(%rbp)
    f196:	00 00 00 
    f199:	eb 45                	jmp    f1e0 <tmalloc_large+0xb8>
    f19b:	0f bd 85 14 ff ff ff 	bsr    -0xec(%rbp),%eax
    f1a2:	83 f0 1f             	xor    $0x1f,%eax
    f1a5:	ba 1f 00 00 00       	mov    $0x1f,%edx
    f1aa:	29 c2                	sub    %eax,%edx
    f1ac:	89 d0                	mov    %edx,%eax
    f1ae:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    f1b4:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    f1ba:	8d 34 00             	lea    (%rax,%rax,1),%esi
    f1bd:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    f1c3:	83 c0 07             	add    $0x7,%eax
    f1c6:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    f1cd:	89 c1                	mov    %eax,%ecx
    f1cf:	48 d3 ea             	shr    %cl,%rdx
    f1d2:	48 89 d0             	mov    %rdx,%rax
    f1d5:	83 e0 01             	and    $0x1,%eax
    f1d8:	01 f0                	add    %esi,%eax
    f1da:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
    f1e0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f1e7:	8b 95 0c ff ff ff    	mov    -0xf4(%rbp),%edx
    f1ed:	48 83 c2 4a          	add    $0x4a,%rdx
    f1f1:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    f1f6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    f1fd:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    f204:	00 
    f205:	0f 84 05 01 00 00    	je     f310 <tmalloc_large+0x1e8>
    f20b:	83 bd 0c ff ff ff 1f 	cmpl   $0x1f,-0xf4(%rbp)
    f212:	74 13                	je     f227 <tmalloc_large+0xff>
    f214:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    f21a:	d1 e8                	shr    %eax
    f21c:	ba 39 00 00 00       	mov    $0x39,%edx
    f221:	29 c2                	sub    %eax,%edx
    f223:	89 d0                	mov    %edx,%eax
    f225:	eb 05                	jmp    f22c <tmalloc_large+0x104>
    f227:	b8 00 00 00 00       	mov    $0x0,%eax
    f22c:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    f233:	89 c1                	mov    %eax,%ecx
    f235:	48 d3 e2             	shl    %cl,%rdx
    f238:	48 89 d0             	mov    %rdx,%rax
    f23b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    f242:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    f249:	00 00 00 00 
    f24d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f254:	48 8b 40 08          	mov    0x8(%rax),%rax
    f258:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f25c:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    f263:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    f267:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f26b:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    f272:	73 23                	jae    f297 <tmalloc_large+0x16f>
    f274:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f27b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    f282:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f286:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    f28d:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
    f294:	00 
    f295:	74 78                	je     f30f <tmalloc_large+0x1e7>
    f297:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f29e:	48 8b 40 28          	mov    0x28(%rax),%rax
    f2a2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    f2a6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    f2ad:	48 c1 e8 3f          	shr    $0x3f,%rax
    f2b1:	48 89 c2             	mov    %rax,%rdx
    f2b4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f2bb:	48 83 c2 04          	add    $0x4,%rdx
    f2bf:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    f2c3:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    f2ca:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    f2cf:	74 18                	je     f2e9 <tmalloc_large+0x1c1>
    f2d1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f2d5:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    f2dc:	74 0b                	je     f2e9 <tmalloc_large+0x1c1>
    f2de:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f2e2:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    f2e9:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    f2f0:	00 
    f2f1:	75 10                	jne    f303 <tmalloc_large+0x1db>
    f2f3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    f2fa:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    f301:	eb 0d                	jmp    f310 <tmalloc_large+0x1e8>
    f303:	48 d1 a5 50 ff ff ff 	shlq   -0xb0(%rbp)
    f30a:	e9 3e ff ff ff       	jmpq   f24d <tmalloc_large+0x125>
    f30f:	90                   	nop
    f310:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    f317:	00 
    f318:	0f 85 14 01 00 00    	jne    f432 <tmalloc_large+0x30a>
    f31e:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    f325:	00 
    f326:	0f 85 06 01 00 00    	jne    f432 <tmalloc_large+0x30a>
    f32c:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    f332:	ba 01 00 00 00       	mov    $0x1,%edx
    f337:	89 c1                	mov    %eax,%ecx
    f339:	d3 e2                	shl    %cl,%edx
    f33b:	89 d0                	mov    %edx,%eax
    f33d:	8d 14 00             	lea    (%rax,%rax,1),%edx
    f340:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    f346:	be 01 00 00 00       	mov    $0x1,%esi
    f34b:	89 c1                	mov    %eax,%ecx
    f34d:	d3 e6                	shl    %cl,%esi
    f34f:	89 f0                	mov    %esi,%eax
    f351:	01 c0                	add    %eax,%eax
    f353:	f7 d8                	neg    %eax
    f355:	09 c2                	or     %eax,%edx
    f357:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f35e:	8b 40 04             	mov    0x4(%rax),%eax
    f361:	21 d0                	and    %edx,%eax
    f363:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    f369:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
    f370:	0f 84 bc 00 00 00    	je     f432 <tmalloc_large+0x30a>
    f376:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    f37c:	f7 d8                	neg    %eax
    f37e:	23 85 1c ff ff ff    	and    -0xe4(%rbp),%eax
    f384:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    f38a:	f3 0f bc 85 20 ff ff 	tzcnt  -0xe0(%rbp),%eax
    f391:	ff 
    f392:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    f398:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    f39e:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
    f3a4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f3ab:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
    f3b1:	48 83 c2 4a          	add    $0x4a,%rdx
    f3b5:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    f3ba:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    f3c1:	eb 6f                	jmp    f432 <tmalloc_large+0x30a>
    f3c3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f3ca:	48 8b 40 08          	mov    0x8(%rax),%rax
    f3ce:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f3d2:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    f3d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3e1:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    f3e8:	73 19                	jae    f403 <tmalloc_large+0x2db>
    f3ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3ee:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    f3f5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f3fc:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    f403:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f40a:	48 8b 40 20          	mov    0x20(%rax),%rax
    f40e:	48 85 c0             	test   %rax,%rax
    f411:	74 0d                	je     f420 <tmalloc_large+0x2f8>
    f413:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f41a:	48 8b 40 20          	mov    0x20(%rax),%rax
    f41e:	eb 0b                	jmp    f42b <tmalloc_large+0x303>
    f420:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f427:	48 8b 40 28          	mov    0x28(%rax),%rax
    f42b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    f432:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    f439:	00 
    f43a:	75 87                	jne    f3c3 <tmalloc_large+0x29b>
    f43c:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    f443:	00 
    f444:	0f 84 41 09 00 00    	je     fd8b <tmalloc_large+0xc63>
    f44a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f451:	48 8b 40 08          	mov    0x8(%rax),%rax
    f455:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    f45c:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    f463:	0f 83 22 09 00 00    	jae    fd8b <tmalloc_large+0xc63>
    f469:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f470:	48 8b 40 18          	mov    0x18(%rax),%rax
    f474:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    f47b:	0f 93 c0             	setae  %al
    f47e:	0f b6 c0             	movzbl %al,%eax
    f481:	48 85 c0             	test   %rax,%rax
    f484:	0f 84 fc 08 00 00    	je     fd86 <tmalloc_large+0xc5e>
    f48a:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    f491:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f498:	48 01 d0             	add    %rdx,%rax
    f49b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f49f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f4a6:	48 8b 40 08          	mov    0x8(%rax),%rax
    f4aa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f4ae:	48 89 c1             	mov    %rax,%rcx
    f4b1:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    f4b8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f4bf:	48 01 d0             	add    %rdx,%rax
    f4c2:	48 39 c1             	cmp    %rax,%rcx
    f4c5:	74 05                	je     f4cc <tmalloc_large+0x3a4>
    f4c7:	e8 0d c1 02 00       	callq  3b5d9 <abort>
    f4cc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f4d3:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    f4d7:	0f 92 c0             	setb   %al
    f4da:	0f b6 c0             	movzbl %al,%eax
    f4dd:	48 85 c0             	test   %rax,%rax
    f4e0:	0f 84 a0 08 00 00    	je     fd86 <tmalloc_large+0xc5e>
    f4e6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f4ed:	48 8b 40 30          	mov    0x30(%rax),%rax
    f4f1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f4f5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f4fc:	48 8b 40 18          	mov    0x18(%rax),%rax
    f500:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    f507:	0f 84 aa 00 00 00    	je     f5b7 <tmalloc_large+0x48f>
    f50d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f514:	48 8b 40 10          	mov    0x10(%rax),%rax
    f518:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f51c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f523:	48 8b 40 18          	mov    0x18(%rax),%rax
    f527:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f52e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f535:	48 8b 40 18          	mov    0x18(%rax),%rax
    f539:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    f53d:	0f 93 c0             	setae  %al
    f540:	0f b6 c0             	movzbl %al,%eax
    f543:	48 85 c0             	test   %rax,%rax
    f546:	74 21                	je     f569 <tmalloc_large+0x441>
    f548:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f54c:	48 8b 40 18          	mov    0x18(%rax),%rax
    f550:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    f557:	0f 94 c0             	sete   %al
    f55a:	0f b6 c0             	movzbl %al,%eax
    f55d:	48 85 c0             	test   %rax,%rax
    f560:	74 07                	je     f569 <tmalloc_large+0x441>
    f562:	b8 01 00 00 00       	mov    $0x1,%eax
    f567:	eb 05                	jmp    f56e <tmalloc_large+0x446>
    f569:	b8 00 00 00 00       	mov    $0x0,%eax
    f56e:	85 c0                	test   %eax,%eax
    f570:	74 40                	je     f5b2 <tmalloc_large+0x48a>
    f572:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f579:	48 8b 40 10          	mov    0x10(%rax),%rax
    f57d:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    f584:	0f 94 c0             	sete   %al
    f587:	0f b6 c0             	movzbl %al,%eax
    f58a:	48 85 c0             	test   %rax,%rax
    f58d:	74 23                	je     f5b2 <tmalloc_large+0x48a>
    f58f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f593:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    f59a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f59e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f5a5:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    f5a9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    f5ad:	e9 f8 00 00 00       	jmpq   f6aa <tmalloc_large+0x582>
    f5b2:	e8 22 c0 02 00       	callq  3b5d9 <abort>
    f5b7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f5be:	48 83 c0 28          	add    $0x28,%rax
    f5c2:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f5c9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f5d0:	48 8b 00             	mov    (%rax),%rax
    f5d3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f5da:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f5e1:	00 
    f5e2:	75 52                	jne    f636 <tmalloc_large+0x50e>
    f5e4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f5eb:	48 83 c0 20          	add    $0x20,%rax
    f5ef:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f5f6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f5fd:	48 8b 00             	mov    (%rax),%rax
    f600:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f607:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f60e:	00 
    f60f:	0f 84 95 00 00 00    	je     f6aa <tmalloc_large+0x582>
    f615:	eb 1f                	jmp    f636 <tmalloc_large+0x50e>
    f617:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f61e:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f625:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f62c:	48 8b 00             	mov    (%rax),%rax
    f62f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f636:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f63d:	48 83 c0 28          	add    $0x28,%rax
    f641:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    f648:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f64f:	48 8b 00             	mov    (%rax),%rax
    f652:	48 85 c0             	test   %rax,%rax
    f655:	75 c0                	jne    f617 <tmalloc_large+0x4ef>
    f657:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f65e:	48 83 c0 20          	add    $0x20,%rax
    f662:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    f669:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f670:	48 8b 00             	mov    (%rax),%rax
    f673:	48 85 c0             	test   %rax,%rax
    f676:	75 9f                	jne    f617 <tmalloc_large+0x4ef>
    f678:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f67f:	48 8b 40 18          	mov    0x18(%rax),%rax
    f683:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
    f68a:	0f 93 c0             	setae  %al
    f68d:	0f b6 c0             	movzbl %al,%eax
    f690:	48 85 c0             	test   %rax,%rax
    f693:	74 10                	je     f6a5 <tmalloc_large+0x57d>
    f695:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f69c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f6a3:	eb 05                	jmp    f6aa <tmalloc_large+0x582>
    f6a5:	e8 2f bf 02 00       	callq  3b5d9 <abort>
    f6aa:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    f6af:	0f 84 c6 01 00 00    	je     f87b <tmalloc_large+0x753>
    f6b5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f6bc:	8b 40 38             	mov    0x38(%rax),%eax
    f6bf:	89 c0                	mov    %eax,%eax
    f6c1:	48 83 c0 4a          	add    $0x4a,%rax
    f6c5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f6cc:	00 
    f6cd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f6d4:	48 01 d0             	add    %rdx,%rax
    f6d7:	48 83 c0 08          	add    $0x8,%rax
    f6db:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f6df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6e3:	48 8b 00             	mov    (%rax),%rax
    f6e6:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    f6ed:	75 4d                	jne    f73c <tmalloc_large+0x614>
    f6ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6f3:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    f6fa:	48 89 10             	mov    %rdx,(%rax)
    f6fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f701:	48 8b 00             	mov    (%rax),%rax
    f704:	48 85 c0             	test   %rax,%rax
    f707:	0f 85 81 00 00 00    	jne    f78e <tmalloc_large+0x666>
    f70d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f714:	8b 50 04             	mov    0x4(%rax),%edx
    f717:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f71e:	8b 40 38             	mov    0x38(%rax),%eax
    f721:	be 01 00 00 00       	mov    $0x1,%esi
    f726:	89 c1                	mov    %eax,%ecx
    f728:	d3 e6                	shl    %cl,%esi
    f72a:	89 f0                	mov    %esi,%eax
    f72c:	f7 d0                	not    %eax
    f72e:	21 c2                	and    %eax,%edx
    f730:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f737:	89 50 04             	mov    %edx,0x4(%rax)
    f73a:	eb 52                	jmp    f78e <tmalloc_large+0x666>
    f73c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f743:	48 8b 40 18          	mov    0x18(%rax),%rax
    f747:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    f74b:	0f 93 c0             	setae  %al
    f74e:	0f b6 c0             	movzbl %al,%eax
    f751:	48 85 c0             	test   %rax,%rax
    f754:	74 33                	je     f789 <tmalloc_large+0x661>
    f756:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f75a:	48 8b 40 20          	mov    0x20(%rax),%rax
    f75e:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
    f765:	75 11                	jne    f778 <tmalloc_large+0x650>
    f767:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f76b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    f772:	48 89 50 20          	mov    %rdx,0x20(%rax)
    f776:	eb 16                	jmp    f78e <tmalloc_large+0x666>
    f778:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f77c:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    f783:	48 89 50 28          	mov    %rdx,0x28(%rax)
    f787:	eb 05                	jmp    f78e <tmalloc_large+0x666>
    f789:	e8 4b be 02 00       	callq  3b5d9 <abort>
    f78e:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f795:	00 
    f796:	0f 84 df 00 00 00    	je     f87b <tmalloc_large+0x753>
    f79c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f7a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    f7a7:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
    f7ae:	0f 93 c0             	setae  %al
    f7b1:	0f b6 c0             	movzbl %al,%eax
    f7b4:	48 85 c0             	test   %rax,%rax
    f7b7:	0f 84 b9 00 00 00    	je     f876 <tmalloc_large+0x74e>
    f7bd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f7c4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    f7c8:	48 89 50 30          	mov    %rdx,0x30(%rax)
    f7cc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f7d3:	48 8b 40 20          	mov    0x20(%rax),%rax
    f7d7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f7db:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    f7e0:	74 3f                	je     f821 <tmalloc_large+0x6f9>
    f7e2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f7e9:	48 8b 40 18          	mov    0x18(%rax),%rax
    f7ed:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    f7f1:	0f 93 c0             	setae  %al
    f7f4:	0f b6 c0             	movzbl %al,%eax
    f7f7:	48 85 c0             	test   %rax,%rax
    f7fa:	74 20                	je     f81c <tmalloc_large+0x6f4>
    f7fc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f803:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f807:	48 89 50 20          	mov    %rdx,0x20(%rax)
    f80b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f80f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    f816:	48 89 50 30          	mov    %rdx,0x30(%rax)
    f81a:	eb 05                	jmp    f821 <tmalloc_large+0x6f9>
    f81c:	e8 b8 bd 02 00       	callq  3b5d9 <abort>
    f821:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f828:	48 8b 40 28          	mov    0x28(%rax),%rax
    f82c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f830:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    f835:	74 44                	je     f87b <tmalloc_large+0x753>
    f837:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f83e:	48 8b 40 18          	mov    0x18(%rax),%rax
    f842:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    f846:	0f 93 c0             	setae  %al
    f849:	0f b6 c0             	movzbl %al,%eax
    f84c:	48 85 c0             	test   %rax,%rax
    f84f:	74 20                	je     f871 <tmalloc_large+0x749>
    f851:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f858:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f85c:	48 89 50 28          	mov    %rdx,0x28(%rax)
    f860:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f864:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    f86b:	48 89 50 30          	mov    %rdx,0x30(%rax)
    f86f:	eb 0a                	jmp    f87b <tmalloc_large+0x753>
    f871:	e8 63 bd 02 00       	callq  3b5d9 <abort>
    f876:	e8 5e bd 02 00       	callq  3b5d9 <abort>
    f87b:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
    f882:	1f 
    f883:	0f 87 99 00 00 00    	ja     f922 <tmalloc_large+0x7fa>
    f889:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    f890:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f897:	48 01 d0             	add    %rdx,%rax
    f89a:	48 83 c8 03          	or     $0x3,%rax
    f89e:	48 89 c2             	mov    %rax,%rdx
    f8a1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f8a8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f8ac:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    f8b3:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f8ba:	48 01 c2             	add    %rax,%rdx
    f8bd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f8c4:	48 01 d0             	add    %rdx,%rax
    f8c7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f8cb:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    f8d2:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f8d9:	48 01 c1             	add    %rax,%rcx
    f8dc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f8e3:	48 01 c8             	add    %rcx,%rax
    f8e6:	48 83 ca 01          	or     $0x1,%rdx
    f8ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f8ee:	48 8b 0d 2b 83 03 00 	mov    0x3832b(%rip),%rcx        # 47c20 <mparams>
    f8f5:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    f8fc:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
    f903:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f90a:	48 01 c6             	add    %rax,%rsi
    f90d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f914:	48 01 f0             	add    %rsi,%rax
    f917:	48 31 ca             	xor    %rcx,%rdx
    f91a:	48 89 10             	mov    %rdx,(%rax)
    f91d:	e9 57 04 00 00       	jmpq   fd79 <tmalloc_large+0xc51>
    f922:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f929:	48 83 c8 03          	or     $0x3,%rax
    f92d:	48 89 c2             	mov    %rax,%rdx
    f930:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    f937:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f93b:	48 8b 0d de 82 03 00 	mov    0x382de(%rip),%rcx        # 47c20 <mparams>
    f942:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    f949:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
    f950:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    f957:	48 01 f0             	add    %rsi,%rax
    f95a:	48 31 ca             	xor    %rcx,%rdx
    f95d:	48 89 10             	mov    %rdx,(%rax)
    f960:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    f967:	48 83 c8 01          	or     $0x1,%rax
    f96b:	48 89 c2             	mov    %rax,%rdx
    f96e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f972:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f976:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    f97a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    f981:	48 01 c2             	add    %rax,%rdx
    f984:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    f98b:	48 89 02             	mov    %rax,(%rdx)
    f98e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    f995:	48 c1 e8 03          	shr    $0x3,%rax
    f999:	48 83 f8 1f          	cmp    $0x1f,%rax
    f99d:	0f 87 0c 01 00 00    	ja     faaf <tmalloc_large+0x987>
    f9a3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    f9aa:	48 c1 e8 03          	shr    $0x3,%rax
    f9ae:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    f9b4:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    f9ba:	01 c0                	add    %eax,%eax
    f9bc:	89 c0                	mov    %eax,%eax
    f9be:	48 83 c0 08          	add    $0x8,%rax
    f9c2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f9c9:	00 
    f9ca:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f9d1:	48 01 d0             	add    %rdx,%rax
    f9d4:	48 83 c0 08          	add    $0x8,%rax
    f9d8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f9dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9e0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    f9e7:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
    f9ee:	1f 
    f9ef:	77 05                	ja     f9f6 <tmalloc_large+0x8ce>
    f9f1:	e8 e3 bb 02 00       	callq  3b5d9 <abort>
    f9f6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f9fd:	8b 10                	mov    (%rax),%edx
    f9ff:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    fa05:	be 01 00 00 00       	mov    $0x1,%esi
    fa0a:	89 c1                	mov    %eax,%ecx
    fa0c:	d3 e6                	shl    %cl,%esi
    fa0e:	89 f0                	mov    %esi,%eax
    fa10:	21 d0                	and    %edx,%eax
    fa12:	85 c0                	test   %eax,%eax
    fa14:	75 27                	jne    fa3d <tmalloc_large+0x915>
    fa16:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fa1d:	8b 10                	mov    (%rax),%edx
    fa1f:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    fa25:	be 01 00 00 00       	mov    $0x1,%esi
    fa2a:	89 c1                	mov    %eax,%ecx
    fa2c:	d3 e6                	shl    %cl,%esi
    fa2e:	89 f0                	mov    %esi,%eax
    fa30:	09 c2                	or     %eax,%edx
    fa32:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fa39:	89 10                	mov    %edx,(%rax)
    fa3b:	eb 37                	jmp    fa74 <tmalloc_large+0x94c>
    fa3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa41:	48 8b 50 10          	mov    0x10(%rax),%rdx
    fa45:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fa4c:	48 8b 40 18          	mov    0x18(%rax),%rax
    fa50:	48 39 c2             	cmp    %rax,%rdx
    fa53:	0f 93 c0             	setae  %al
    fa56:	0f b6 c0             	movzbl %al,%eax
    fa59:	48 85 c0             	test   %rax,%rax
    fa5c:	74 11                	je     fa6f <tmalloc_large+0x947>
    fa5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa62:	48 8b 40 10          	mov    0x10(%rax),%rax
    fa66:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fa6d:	eb 05                	jmp    fa74 <tmalloc_large+0x94c>
    fa6f:	e8 65 bb 02 00       	callq  3b5d9 <abort>
    fa74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa78:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    fa7c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fa80:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fa87:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    fa8b:	48 89 50 18          	mov    %rdx,0x18(%rax)
    fa8f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fa93:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    fa9a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fa9e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    faa2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    faa6:	48 89 50 18          	mov    %rdx,0x18(%rax)
    faaa:	e9 ca 02 00 00       	jmpq   fd79 <tmalloc_large+0xc51>
    faaf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fab3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fab7:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    fabe:	48 c1 e8 08          	shr    $0x8,%rax
    fac2:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    fac8:	83 bd 2c ff ff ff 00 	cmpl   $0x0,-0xd4(%rbp)
    facf:	75 0c                	jne    fadd <tmalloc_large+0x9b5>
    fad1:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
    fad8:	00 00 00 
    fadb:	eb 5d                	jmp    fb3a <tmalloc_large+0xa12>
    fadd:	81 bd 2c ff ff ff ff 	cmpl   $0xffff,-0xd4(%rbp)
    fae4:	ff 00 00 
    fae7:	76 0c                	jbe    faf5 <tmalloc_large+0x9cd>
    fae9:	c7 85 10 ff ff ff 1f 	movl   $0x1f,-0xf0(%rbp)
    faf0:	00 00 00 
    faf3:	eb 45                	jmp    fb3a <tmalloc_large+0xa12>
    faf5:	0f bd 85 2c ff ff ff 	bsr    -0xd4(%rbp),%eax
    fafc:	83 f0 1f             	xor    $0x1f,%eax
    faff:	ba 1f 00 00 00       	mov    $0x1f,%edx
    fb04:	29 c2                	sub    %eax,%edx
    fb06:	89 d0                	mov    %edx,%eax
    fb08:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    fb0e:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    fb14:	8d 34 00             	lea    (%rax,%rax,1),%esi
    fb17:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    fb1d:	83 c0 07             	add    $0x7,%eax
    fb20:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    fb27:	89 c1                	mov    %eax,%ecx
    fb29:	48 d3 ea             	shr    %cl,%rdx
    fb2c:	48 89 d0             	mov    %rdx,%rax
    fb2f:	83 e0 01             	and    $0x1,%eax
    fb32:	01 f0                	add    %esi,%eax
    fb34:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
    fb3a:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    fb40:	48 83 c0 4a          	add    $0x4a,%rax
    fb44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fb4b:	00 
    fb4c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fb53:	48 01 d0             	add    %rdx,%rax
    fb56:	48 83 c0 08          	add    $0x8,%rax
    fb5a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    fb5e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fb62:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
    fb68:	89 50 38             	mov    %edx,0x38(%rax)
    fb6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fb6f:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    fb76:	00 
    fb77:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fb7b:	48 8b 50 28          	mov    0x28(%rax),%rdx
    fb7f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fb83:	48 89 50 20          	mov    %rdx,0x20(%rax)
    fb87:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fb8e:	8b 50 04             	mov    0x4(%rax),%edx
    fb91:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    fb97:	be 01 00 00 00       	mov    $0x1,%esi
    fb9c:	89 c1                	mov    %eax,%ecx
    fb9e:	d3 e6                	shl    %cl,%esi
    fba0:	89 f0                	mov    %esi,%eax
    fba2:	21 d0                	and    %edx,%eax
    fba4:	85 c0                	test   %eax,%eax
    fba6:	75 5f                	jne    fc07 <tmalloc_large+0xadf>
    fba8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fbaf:	8b 50 04             	mov    0x4(%rax),%edx
    fbb2:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    fbb8:	be 01 00 00 00       	mov    $0x1,%esi
    fbbd:	89 c1                	mov    %eax,%ecx
    fbbf:	d3 e6                	shl    %cl,%esi
    fbc1:	89 f0                	mov    %esi,%eax
    fbc3:	09 c2                	or     %eax,%edx
    fbc5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fbcc:	89 50 04             	mov    %edx,0x4(%rax)
    fbcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fbd3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fbd7:	48 89 10             	mov    %rdx,(%rax)
    fbda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fbde:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fbe2:	48 89 50 30          	mov    %rdx,0x30(%rax)
    fbe6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fbea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fbee:	48 89 50 18          	mov    %rdx,0x18(%rax)
    fbf2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fbf6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    fbfa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fbfe:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fc02:	e9 72 01 00 00       	jmpq   fd79 <tmalloc_large+0xc51>
    fc07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fc0b:	48 8b 00             	mov    (%rax),%rax
    fc0e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fc12:	83 bd 10 ff ff ff 1f 	cmpl   $0x1f,-0xf0(%rbp)
    fc19:	74 13                	je     fc2e <tmalloc_large+0xb06>
    fc1b:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    fc21:	d1 e8                	shr    %eax
    fc23:	ba 39 00 00 00       	mov    $0x39,%edx
    fc28:	29 c2                	sub    %eax,%edx
    fc2a:	89 d0                	mov    %edx,%eax
    fc2c:	eb 05                	jmp    fc33 <tmalloc_large+0xb0b>
    fc2e:	b8 00 00 00 00       	mov    $0x0,%eax
    fc33:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    fc3a:	89 c1                	mov    %eax,%ecx
    fc3c:	48 d3 e2             	shl    %cl,%rdx
    fc3f:	48 89 d0             	mov    %rdx,%rax
    fc42:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fc46:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fc4a:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc4e:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    fc52:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
    fc59:	0f 84 93 00 00 00    	je     fcf2 <tmalloc_large+0xbca>
    fc5f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    fc63:	48 c1 e8 3f          	shr    $0x3f,%rax
    fc67:	48 83 c0 04          	add    $0x4,%rax
    fc6b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fc72:	00 
    fc73:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fc77:	48 01 d0             	add    %rdx,%rax
    fc7a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fc7e:	48 d1 65 88          	shlq   -0x78(%rbp)
    fc82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc86:	48 8b 00             	mov    (%rax),%rax
    fc89:	48 85 c0             	test   %rax,%rax
    fc8c:	74 0d                	je     fc9b <tmalloc_large+0xb73>
    fc8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc92:	48 8b 00             	mov    (%rax),%rax
    fc95:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fc99:	eb ab                	jmp    fc46 <tmalloc_large+0xb1e>
    fc9b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fca2:	48 8b 40 18          	mov    0x18(%rax),%rax
    fca6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    fcaa:	0f 93 c0             	setae  %al
    fcad:	0f b6 c0             	movzbl %al,%eax
    fcb0:	48 85 c0             	test   %rax,%rax
    fcb3:	74 38                	je     fced <tmalloc_large+0xbc5>
    fcb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcb9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fcbd:	48 89 10             	mov    %rdx,(%rax)
    fcc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcc4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    fcc8:	48 89 50 30          	mov    %rdx,0x30(%rax)
    fccc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcd0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fcd4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    fcd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcdc:	48 8b 50 18          	mov    0x18(%rax),%rdx
    fce0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fce4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fce8:	e9 8c 00 00 00       	jmpq   fd79 <tmalloc_large+0xc51>
    fced:	e8 e7 b8 02 00       	callq  3b5d9 <abort>
    fcf2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fcf6:	48 8b 40 10          	mov    0x10(%rax),%rax
    fcfa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fcfe:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd05:	48 8b 40 18          	mov    0x18(%rax),%rax
    fd09:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
    fd0d:	0f 93 c0             	setae  %al
    fd10:	0f b6 c0             	movzbl %al,%eax
    fd13:	48 85 c0             	test   %rax,%rax
    fd16:	74 5c                	je     fd74 <tmalloc_large+0xc4c>
    fd18:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd1f:	48 8b 40 18          	mov    0x18(%rax),%rax
    fd23:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    fd27:	0f 93 c0             	setae  %al
    fd2a:	0f b6 c0             	movzbl %al,%eax
    fd2d:	48 85 c0             	test   %rax,%rax
    fd30:	74 42                	je     fd74 <tmalloc_large+0xc4c>
    fd32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd36:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fd3a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    fd3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd42:	48 8b 50 18          	mov    0x18(%rax),%rdx
    fd46:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fd4a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fd4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd52:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fd56:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fd5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd5e:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    fd62:	48 89 50 18          	mov    %rdx,0x18(%rax)
    fd66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd6a:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    fd71:	00 
    fd72:	eb 05                	jmp    fd79 <tmalloc_large+0xc51>
    fd74:	e8 60 b8 02 00       	callq  3b5d9 <abort>
    fd79:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    fd80:	48 83 c0 10          	add    $0x10,%rax
    fd84:	eb 0a                	jmp    fd90 <tmalloc_large+0xc68>
    fd86:	e8 4e b8 02 00       	callq  3b5d9 <abort>
    fd8b:	b8 00 00 00 00       	mov    $0x0,%eax
    fd90:	c9                   	leaveq 
    fd91:	c3                   	retq   

000000000000fd92 <tmalloc_small>:
    fd92:	55                   	push   %rbp
    fd93:	48 89 e5             	mov    %rsp,%rbp
    fd96:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    fd9d:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    fda4:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    fdab:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fdb2:	8b 50 04             	mov    0x4(%rax),%edx
    fdb5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fdbc:	8b 40 04             	mov    0x4(%rax),%eax
    fdbf:	f7 d8                	neg    %eax
    fdc1:	21 d0                	and    %edx,%eax
    fdc3:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
    fdc9:	f3 0f bc 85 68 ff ff 	tzcnt  -0x98(%rbp),%eax
    fdd0:	ff 
    fdd1:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
    fdd7:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    fddd:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
    fde3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fdea:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
    fdf0:	48 83 c2 4a          	add    $0x4a,%rdx
    fdf4:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    fdf9:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fe00:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe07:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fe0b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe12:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe16:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    fe1a:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    fe21:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fe25:	eb 37                	jmp    fe5e <tmalloc_small+0xcc>
    fe27:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe2e:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe32:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    fe36:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    fe3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fe41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe45:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    fe49:	73 13                	jae    fe5e <tmalloc_small+0xcc>
    fe4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe4f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fe53:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe5a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fe5e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe65:	48 8b 40 20          	mov    0x20(%rax),%rax
    fe69:	48 85 c0             	test   %rax,%rax
    fe6c:	74 0d                	je     fe7b <tmalloc_small+0xe9>
    fe6e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe75:	48 8b 40 20          	mov    0x20(%rax),%rax
    fe79:	eb 0b                	jmp    fe86 <tmalloc_small+0xf4>
    fe7b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fe82:	48 8b 40 28          	mov    0x28(%rax),%rax
    fe86:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fe8d:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    fe94:	00 
    fe95:	75 90                	jne    fe27 <tmalloc_small+0x95>
    fe97:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fe9e:	48 8b 40 18          	mov    0x18(%rax),%rax
    fea2:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
    fea6:	0f 93 c0             	setae  %al
    fea9:	0f b6 c0             	movzbl %al,%eax
    feac:	48 85 c0             	test   %rax,%rax
    feaf:	0f 84 8c 05 00 00    	je     10441 <tmalloc_small+0x6af>
    feb5:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    feb9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    fec0:	48 01 d0             	add    %rdx,%rax
    fec3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    fec7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fecb:	48 8b 40 08          	mov    0x8(%rax),%rax
    fecf:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    fed3:	48 89 c1             	mov    %rax,%rcx
    fed6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    feda:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    fee1:	48 01 d0             	add    %rdx,%rax
    fee4:	48 39 c1             	cmp    %rax,%rcx
    fee7:	74 05                	je     feee <tmalloc_small+0x15c>
    fee9:	e8 eb b6 02 00       	callq  3b5d9 <abort>
    feee:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fef2:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    fef6:	0f 92 c0             	setb   %al
    fef9:	0f b6 c0             	movzbl %al,%eax
    fefc:	48 85 c0             	test   %rax,%rax
    feff:	0f 84 3c 05 00 00    	je     10441 <tmalloc_small+0x6af>
    ff05:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ff09:	48 8b 40 30          	mov    0x30(%rax),%rax
    ff0d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    ff11:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ff15:	48 8b 40 18          	mov    0x18(%rax),%rax
    ff19:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
    ff1d:	0f 84 92 00 00 00    	je     ffb5 <tmalloc_small+0x223>
    ff23:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ff27:	48 8b 40 10          	mov    0x10(%rax),%rax
    ff2b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ff2f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ff33:	48 8b 40 18          	mov    0x18(%rax),%rax
    ff37:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ff3b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ff42:	48 8b 40 18          	mov    0x18(%rax),%rax
    ff46:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    ff4a:	0f 93 c0             	setae  %al
    ff4d:	0f b6 c0             	movzbl %al,%eax
    ff50:	48 85 c0             	test   %rax,%rax
    ff53:	74 1e                	je     ff73 <tmalloc_small+0x1e1>
    ff55:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ff59:	48 8b 40 18          	mov    0x18(%rax),%rax
    ff5d:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
    ff61:	0f 94 c0             	sete   %al
    ff64:	0f b6 c0             	movzbl %al,%eax
    ff67:	48 85 c0             	test   %rax,%rax
    ff6a:	74 07                	je     ff73 <tmalloc_small+0x1e1>
    ff6c:	b8 01 00 00 00       	mov    $0x1,%eax
    ff71:	eb 05                	jmp    ff78 <tmalloc_small+0x1e6>
    ff73:	b8 00 00 00 00       	mov    $0x0,%eax
    ff78:	85 c0                	test   %eax,%eax
    ff7a:	74 34                	je     ffb0 <tmalloc_small+0x21e>
    ff7c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ff80:	48 8b 40 10          	mov    0x10(%rax),%rax
    ff84:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
    ff88:	0f 94 c0             	sete   %al
    ff8b:	0f b6 c0             	movzbl %al,%eax
    ff8e:	48 85 c0             	test   %rax,%rax
    ff91:	74 1d                	je     ffb0 <tmalloc_small+0x21e>
    ff93:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ff97:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    ff9b:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ff9f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ffa3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ffa7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ffab:	e9 b2 00 00 00       	jmpq   10062 <tmalloc_small+0x2d0>
    ffb0:	e8 24 b6 02 00       	callq  3b5d9 <abort>
    ffb5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ffb9:	48 83 c0 28          	add    $0x28,%rax
    ffbd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    ffc1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ffc5:	48 8b 00             	mov    (%rax),%rax
    ffc8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ffcc:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    ffd1:	75 33                	jne    10006 <tmalloc_small+0x274>
    ffd3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ffd7:	48 83 c0 20          	add    $0x20,%rax
    ffdb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    ffdf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ffe3:	48 8b 00             	mov    (%rax),%rax
    ffe6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ffea:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    ffef:	74 71                	je     10062 <tmalloc_small+0x2d0>
    fff1:	eb 13                	jmp    10006 <tmalloc_small+0x274>
    fff3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fff7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    fffb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ffff:	48 8b 00             	mov    (%rax),%rax
   10002:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10006:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1000a:	48 83 c0 28          	add    $0x28,%rax
   1000e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10012:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10016:	48 8b 00             	mov    (%rax),%rax
   10019:	48 85 c0             	test   %rax,%rax
   1001c:	75 d5                	jne    fff3 <tmalloc_small+0x261>
   1001e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10022:	48 83 c0 20          	add    $0x20,%rax
   10026:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1002a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1002e:	48 8b 00             	mov    (%rax),%rax
   10031:	48 85 c0             	test   %rax,%rax
   10034:	75 bd                	jne    fff3 <tmalloc_small+0x261>
   10036:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1003d:	48 8b 40 18          	mov    0x18(%rax),%rax
   10041:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   10045:	0f 93 c0             	setae  %al
   10048:	0f b6 c0             	movzbl %al,%eax
   1004b:	48 85 c0             	test   %rax,%rax
   1004e:	74 0d                	je     1005d <tmalloc_small+0x2cb>
   10050:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10054:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1005b:	eb 05                	jmp    10062 <tmalloc_small+0x2d0>
   1005d:	e8 77 b5 02 00       	callq  3b5d9 <abort>
   10062:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   10067:	0f 84 92 01 00 00    	je     101ff <tmalloc_small+0x46d>
   1006d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10071:	8b 40 38             	mov    0x38(%rax),%eax
   10074:	89 c0                	mov    %eax,%eax
   10076:	48 83 c0 4a          	add    $0x4a,%rax
   1007a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10081:	00 
   10082:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10089:	48 01 d0             	add    %rdx,%rax
   1008c:	48 83 c0 08          	add    $0x8,%rax
   10090:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10094:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10098:	48 8b 00             	mov    (%rax),%rax
   1009b:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1009f:	75 43                	jne    100e4 <tmalloc_small+0x352>
   100a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   100a5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   100a9:	48 89 10             	mov    %rdx,(%rax)
   100ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   100b0:	48 8b 00             	mov    (%rax),%rax
   100b3:	48 85 c0             	test   %rax,%rax
   100b6:	75 75                	jne    1012d <tmalloc_small+0x39b>
   100b8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   100bf:	8b 50 04             	mov    0x4(%rax),%edx
   100c2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   100c6:	8b 40 38             	mov    0x38(%rax),%eax
   100c9:	be 01 00 00 00       	mov    $0x1,%esi
   100ce:	89 c1                	mov    %eax,%ecx
   100d0:	d3 e6                	shl    %cl,%esi
   100d2:	89 f0                	mov    %esi,%eax
   100d4:	f7 d0                	not    %eax
   100d6:	21 c2                	and    %eax,%edx
   100d8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   100df:	89 50 04             	mov    %edx,0x4(%rax)
   100e2:	eb 49                	jmp    1012d <tmalloc_small+0x39b>
   100e4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   100eb:	48 8b 40 18          	mov    0x18(%rax),%rax
   100ef:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   100f3:	0f 93 c0             	setae  %al
   100f6:	0f b6 c0             	movzbl %al,%eax
   100f9:	48 85 c0             	test   %rax,%rax
   100fc:	74 2a                	je     10128 <tmalloc_small+0x396>
   100fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10102:	48 8b 40 20          	mov    0x20(%rax),%rax
   10106:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1010a:	75 0e                	jne    1011a <tmalloc_small+0x388>
   1010c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10110:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10114:	48 89 50 20          	mov    %rdx,0x20(%rax)
   10118:	eb 13                	jmp    1012d <tmalloc_small+0x39b>
   1011a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1011e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10122:	48 89 50 28          	mov    %rdx,0x28(%rax)
   10126:	eb 05                	jmp    1012d <tmalloc_small+0x39b>
   10128:	e8 ac b4 02 00       	callq  3b5d9 <abort>
   1012d:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   10132:	0f 84 c7 00 00 00    	je     101ff <tmalloc_small+0x46d>
   10138:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1013f:	48 8b 40 18          	mov    0x18(%rax),%rax
   10143:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   10147:	0f 93 c0             	setae  %al
   1014a:	0f b6 c0             	movzbl %al,%eax
   1014d:	48 85 c0             	test   %rax,%rax
   10150:	0f 84 a4 00 00 00    	je     101fa <tmalloc_small+0x468>
   10156:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1015a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1015e:	48 89 50 30          	mov    %rdx,0x30(%rax)
   10162:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10166:	48 8b 40 20          	mov    0x20(%rax),%rax
   1016a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1016e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   10173:	74 39                	je     101ae <tmalloc_small+0x41c>
   10175:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1017c:	48 8b 40 18          	mov    0x18(%rax),%rax
   10180:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   10184:	0f 93 c0             	setae  %al
   10187:	0f b6 c0             	movzbl %al,%eax
   1018a:	48 85 c0             	test   %rax,%rax
   1018d:	74 1a                	je     101a9 <tmalloc_small+0x417>
   1018f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10193:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10197:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1019b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1019f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   101a3:	48 89 50 30          	mov    %rdx,0x30(%rax)
   101a7:	eb 05                	jmp    101ae <tmalloc_small+0x41c>
   101a9:	e8 2b b4 02 00       	callq  3b5d9 <abort>
   101ae:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   101b2:	48 8b 40 28          	mov    0x28(%rax),%rax
   101b6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   101ba:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   101bf:	74 3e                	je     101ff <tmalloc_small+0x46d>
   101c1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   101c8:	48 8b 40 18          	mov    0x18(%rax),%rax
   101cc:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   101d0:	0f 93 c0             	setae  %al
   101d3:	0f b6 c0             	movzbl %al,%eax
   101d6:	48 85 c0             	test   %rax,%rax
   101d9:	74 1a                	je     101f5 <tmalloc_small+0x463>
   101db:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   101df:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   101e3:	48 89 50 28          	mov    %rdx,0x28(%rax)
   101e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   101eb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   101ef:	48 89 50 30          	mov    %rdx,0x30(%rax)
   101f3:	eb 0a                	jmp    101ff <tmalloc_small+0x46d>
   101f5:	e8 df b3 02 00       	callq  3b5d9 <abort>
   101fa:	e8 da b3 02 00       	callq  3b5d9 <abort>
   101ff:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
   10204:	0f 87 81 00 00 00    	ja     1028b <tmalloc_small+0x4f9>
   1020a:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1020e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10215:	48 01 d0             	add    %rdx,%rax
   10218:	48 83 c8 03          	or     $0x3,%rax
   1021c:	48 89 c2             	mov    %rax,%rdx
   1021f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10223:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10227:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1022b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10232:	48 01 c2             	add    %rax,%rdx
   10235:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10239:	48 01 d0             	add    %rdx,%rax
   1023c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10240:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   10244:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1024b:	48 01 c1             	add    %rax,%rcx
   1024e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10252:	48 01 c8             	add    %rcx,%rax
   10255:	48 83 ca 01          	or     $0x1,%rdx
   10259:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1025d:	48 8b 0d bc 79 03 00 	mov    0x379bc(%rip),%rcx        # 47c20 <mparams>
   10264:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1026b:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
   1026f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10276:	48 01 c6             	add    %rax,%rsi
   10279:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1027d:	48 01 f0             	add    %rsi,%rax
   10280:	48 31 ca             	xor    %rcx,%rdx
   10283:	48 89 10             	mov    %rdx,(%rax)
   10286:	e9 ac 01 00 00       	jmpq   10437 <tmalloc_small+0x6a5>
   1028b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10292:	48 83 c8 03          	or     $0x3,%rax
   10296:	48 89 c2             	mov    %rax,%rdx
   10299:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1029d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   102a1:	48 8b 0d 78 79 03 00 	mov    0x37978(%rip),%rcx        # 47c20 <mparams>
   102a8:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   102af:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   102b3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   102ba:	48 01 f0             	add    %rsi,%rax
   102bd:	48 31 ca             	xor    %rcx,%rdx
   102c0:	48 89 10             	mov    %rdx,(%rax)
   102c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   102c7:	48 83 c8 01          	or     $0x1,%rax
   102cb:	48 89 c2             	mov    %rax,%rdx
   102ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   102d2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   102d6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   102da:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   102de:	48 01 c2             	add    %rax,%rdx
   102e1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   102e5:	48 89 02             	mov    %rax,(%rdx)
   102e8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   102ef:	48 8b 40 08          	mov    0x8(%rax),%rax
   102f3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   102f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   102fb:	48 c1 e8 03          	shr    $0x3,%rax
   102ff:	48 83 f8 1f          	cmp    $0x1f,%rax
   10303:	76 05                	jbe    1030a <tmalloc_small+0x578>
   10305:	e8 cf b2 02 00       	callq  3b5d9 <abort>
   1030a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1030f:	0f 84 04 01 00 00    	je     10419 <tmalloc_small+0x687>
   10315:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1031c:	48 8b 40 20          	mov    0x20(%rax),%rax
   10320:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10324:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10328:	48 c1 e8 03          	shr    $0x3,%rax
   1032c:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   10332:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   10338:	01 c0                	add    %eax,%eax
   1033a:	89 c0                	mov    %eax,%eax
   1033c:	48 83 c0 08          	add    $0x8,%rax
   10340:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10347:	00 
   10348:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1034f:	48 01 d0             	add    %rdx,%rax
   10352:	48 83 c0 08          	add    $0x8,%rax
   10356:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1035a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1035e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10362:	48 83 7d e0 1f       	cmpq   $0x1f,-0x20(%rbp)
   10367:	77 05                	ja     1036e <tmalloc_small+0x5dc>
   10369:	e8 6b b2 02 00       	callq  3b5d9 <abort>
   1036e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10375:	8b 10                	mov    (%rax),%edx
   10377:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1037d:	be 01 00 00 00       	mov    $0x1,%esi
   10382:	89 c1                	mov    %eax,%ecx
   10384:	d3 e6                	shl    %cl,%esi
   10386:	89 f0                	mov    %esi,%eax
   10388:	21 d0                	and    %edx,%eax
   1038a:	85 c0                	test   %eax,%eax
   1038c:	75 27                	jne    103b5 <tmalloc_small+0x623>
   1038e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10395:	8b 10                	mov    (%rax),%edx
   10397:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1039d:	be 01 00 00 00       	mov    $0x1,%esi
   103a2:	89 c1                	mov    %eax,%ecx
   103a4:	d3 e6                	shl    %cl,%esi
   103a6:	89 f0                	mov    %esi,%eax
   103a8:	09 c2                	or     %eax,%edx
   103aa:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   103b1:	89 10                	mov    %edx,(%rax)
   103b3:	eb 34                	jmp    103e9 <tmalloc_small+0x657>
   103b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103b9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   103bd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   103c4:	48 8b 40 18          	mov    0x18(%rax),%rax
   103c8:	48 39 c2             	cmp    %rax,%rdx
   103cb:	0f 93 c0             	setae  %al
   103ce:	0f b6 c0             	movzbl %al,%eax
   103d1:	48 85 c0             	test   %rax,%rax
   103d4:	74 0e                	je     103e4 <tmalloc_small+0x652>
   103d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103da:	48 8b 40 10          	mov    0x10(%rax),%rax
   103de:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   103e2:	eb 05                	jmp    103e9 <tmalloc_small+0x657>
   103e4:	e8 f0 b1 02 00       	callq  3b5d9 <abort>
   103e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   103f1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   103f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   103fd:	48 89 50 18          	mov    %rdx,0x18(%rax)
   10401:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10405:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   10409:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1040d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10411:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10415:	48 89 50 18          	mov    %rdx,0x18(%rax)
   10419:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10420:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10424:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10428:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1042f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   10433:	48 89 50 20          	mov    %rdx,0x20(%rax)
   10437:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1043b:	48 83 c0 10          	add    $0x10,%rax
   1043f:	eb 05                	jmp    10446 <tmalloc_small+0x6b4>
   10441:	e8 93 b1 02 00       	callq  3b5d9 <abort>
   10446:	c9                   	leaveq 
   10447:	c3                   	retq   

0000000000010448 <dlmalloc>:
   10448:	55                   	push   %rbp
   10449:	48 89 e5             	mov    %rsp,%rbp
   1044c:	53                   	push   %rbx
   1044d:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   10454:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   1045b:	48 8b 05 be 77 03 00 	mov    0x377be(%rip),%rax        # 47c20 <mparams>
   10462:	48 85 c0             	test   %rax,%rax
   10465:	75 07                	jne    1046e <dlmalloc+0x26>
   10467:	e8 d9 b0 ff ff       	callq  b545 <init_mparams>
   1046c:	85 c0                	test   %eax,%eax
   1046e:	90                   	nop
   1046f:	8b 05 5b 7b 03 00    	mov    0x37b5b(%rip),%eax        # 47fd0 <_gm_+0x370>
   10475:	83 e0 02             	and    $0x2,%eax
   10478:	85 c0                	test   %eax,%eax
   1047a:	74 23                	je     1049f <dlmalloc+0x57>
   1047c:	b8 01 00 00 00       	mov    $0x1,%eax
   10481:	87 05 4d 7b 03 00    	xchg   %eax,0x37b4d(%rip)        # 47fd4 <_gm_+0x374>
   10487:	85 c0                	test   %eax,%eax
   10489:	74 14                	je     1049f <dlmalloc+0x57>
   1048b:	48 8d 3d 42 7b 03 00 	lea    0x37b42(%rip),%rdi        # 47fd4 <_gm_+0x374>
   10492:	e8 1a b0 ff ff       	callq  b4b1 <spin_acquire_lock>
   10497:	85 c0                	test   %eax,%eax
   10499:	0f 85 91 0a 00 00    	jne    10f30 <dlmalloc+0xae8>
   1049f:	48 81 bd 18 ff ff ff 	cmpq   $0xe0,-0xe8(%rbp)
   104a6:	e0 00 00 00 
   104aa:	0f 87 12 07 00 00    	ja     10bc2 <dlmalloc+0x77a>
   104b0:	48 83 bd 18 ff ff ff 	cmpq   $0xe,-0xe8(%rbp)
   104b7:	0e 
   104b8:	76 11                	jbe    104cb <dlmalloc+0x83>
   104ba:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   104c1:	48 83 c0 1f          	add    $0x1f,%rax
   104c5:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   104c9:	eb 05                	jmp    104d0 <dlmalloc+0x88>
   104cb:	b8 20 00 00 00       	mov    $0x20,%eax
   104d0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   104d7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   104de:	48 c1 e8 03          	shr    $0x3,%rax
   104e2:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   104e8:	8b 15 72 77 03 00    	mov    0x37772(%rip),%edx        # 47c60 <_gm_>
   104ee:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   104f4:	89 c1                	mov    %eax,%ecx
   104f6:	d3 ea                	shr    %cl,%edx
   104f8:	89 d0                	mov    %edx,%eax
   104fa:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   10500:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   10506:	83 e0 03             	and    $0x3,%eax
   10509:	85 c0                	test   %eax,%eax
   1050b:	0f 84 d3 01 00 00    	je     106e4 <dlmalloc+0x29c>
   10511:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   10517:	83 e0 01             	and    $0x1,%eax
   1051a:	85 c0                	test   %eax,%eax
   1051c:	0f 94 c0             	sete   %al
   1051f:	0f b6 c0             	movzbl %al,%eax
   10522:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   10528:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1052e:	01 c0                	add    %eax,%eax
   10530:	89 c0                	mov    %eax,%eax
   10532:	48 83 c0 08          	add    $0x8,%rax
   10536:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1053d:	00 
   1053e:	48 8d 05 1b 77 03 00 	lea    0x3771b(%rip),%rax        # 47c60 <_gm_>
   10545:	48 01 d0             	add    %rdx,%rax
   10548:	48 83 c0 08          	add    $0x8,%rax
   1054c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10550:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10554:	48 8b 40 10          	mov    0x10(%rax),%rax
   10558:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1055c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10560:	48 8b 40 08          	mov    0x8(%rax),%rax
   10564:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   10568:	48 89 c2             	mov    %rax,%rdx
   1056b:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   10571:	c1 e0 03             	shl    $0x3,%eax
   10574:	89 c0                	mov    %eax,%eax
   10576:	48 39 c2             	cmp    %rax,%rdx
   10579:	74 05                	je     10580 <dlmalloc+0x138>
   1057b:	e8 59 b0 02 00       	callq  3b5d9 <abort>
   10580:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10584:	48 8b 40 10          	mov    0x10(%rax),%rax
   10588:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1058c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10590:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   10594:	75 05                	jne    1059b <dlmalloc+0x153>
   10596:	e8 3e b0 02 00       	callq  3b5d9 <abort>
   1059b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1059f:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   105a3:	75 05                	jne    105aa <dlmalloc+0x162>
   105a5:	e8 2f b0 02 00       	callq  3b5d9 <abort>
   105aa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105ae:	48 8b 40 08          	mov    0x8(%rax),%rax
   105b2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   105b6:	48 89 c2             	mov    %rax,%rdx
   105b9:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   105bf:	c1 e0 03             	shl    $0x3,%eax
   105c2:	89 c0                	mov    %eax,%eax
   105c4:	48 39 c2             	cmp    %rax,%rdx
   105c7:	74 05                	je     105ce <dlmalloc+0x186>
   105c9:	e8 0b b0 02 00       	callq  3b5d9 <abort>
   105ce:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   105d2:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   105d6:	75 23                	jne    105fb <dlmalloc+0x1b3>
   105d8:	8b 15 82 76 03 00    	mov    0x37682(%rip),%edx        # 47c60 <_gm_>
   105de:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   105e4:	be 01 00 00 00       	mov    $0x1,%esi
   105e9:	89 c1                	mov    %eax,%ecx
   105eb:	d3 e6                	shl    %cl,%esi
   105ed:	89 f0                	mov    %esi,%eax
   105ef:	f7 d0                	not    %eax
   105f1:	21 d0                	and    %edx,%eax
   105f3:	89 05 67 76 03 00    	mov    %eax,0x37667(%rip)        # 47c60 <_gm_>
   105f9:	eb 4c                	jmp    10647 <dlmalloc+0x1ff>
   105fb:	48 8b 05 76 76 03 00 	mov    0x37676(%rip),%rax        # 47c78 <_gm_+0x18>
   10602:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   10606:	0f 93 c0             	setae  %al
   10609:	0f b6 c0             	movzbl %al,%eax
   1060c:	48 85 c0             	test   %rax,%rax
   1060f:	74 31                	je     10642 <dlmalloc+0x1fa>
   10611:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10615:	48 8b 40 18          	mov    0x18(%rax),%rax
   10619:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1061d:	0f 94 c0             	sete   %al
   10620:	0f b6 c0             	movzbl %al,%eax
   10623:	48 85 c0             	test   %rax,%rax
   10626:	74 1a                	je     10642 <dlmalloc+0x1fa>
   10628:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1062c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   10630:	48 89 50 18          	mov    %rdx,0x18(%rax)
   10634:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10638:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1063c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   10640:	eb 05                	jmp    10647 <dlmalloc+0x1ff>
   10642:	e8 92 af 02 00       	callq  3b5d9 <abort>
   10647:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1064d:	c1 e0 03             	shl    $0x3,%eax
   10650:	83 c8 03             	or     $0x3,%eax
   10653:	89 c2                	mov    %eax,%edx
   10655:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10659:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1065d:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   10663:	c1 e0 03             	shl    $0x3,%eax
   10666:	89 c2                	mov    %eax,%edx
   10668:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1066c:	48 01 d0             	add    %rdx,%rax
   1066f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10673:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   10679:	c1 e0 03             	shl    $0x3,%eax
   1067c:	89 c1                	mov    %eax,%ecx
   1067e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10682:	48 01 c8             	add    %rcx,%rax
   10685:	48 83 ca 01          	or     $0x1,%rdx
   10689:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1068d:	48 8b 0d 8c 75 03 00 	mov    0x3758c(%rip),%rcx        # 47c20 <mparams>
   10694:	48 8d 15 c5 75 03 00 	lea    0x375c5(%rip),%rdx        # 47c60 <_gm_>
   1069b:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   106a1:	c1 e0 03             	shl    $0x3,%eax
   106a4:	89 c6                	mov    %eax,%esi
   106a6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106aa:	48 01 f0             	add    %rsi,%rax
   106ad:	48 31 ca             	xor    %rcx,%rdx
   106b0:	48 89 10             	mov    %rdx,(%rax)
   106b3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106b7:	48 83 c0 10          	add    $0x10,%rax
   106bb:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   106c2:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   106c9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   106d0:	48 89 c6             	mov    %rax,%rsi
   106d3:	48 8d 3d 86 75 03 00 	lea    0x37586(%rip),%rdi        # 47c60 <_gm_>
   106da:	e8 79 b3 ff ff       	callq  ba58 <do_check_malloced_chunk>
   106df:	e9 d8 07 00 00       	jmpq   10ebc <dlmalloc+0xa74>
   106e4:	48 8b 05 7d 75 03 00 	mov    0x3757d(%rip),%rax        # 47c68 <_gm_+0x8>
   106eb:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   106f2:	0f 86 4d 05 00 00    	jbe    10c45 <dlmalloc+0x7fd>
   106f8:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
   106ff:	0f 84 62 04 00 00    	je     10b67 <dlmalloc+0x71f>
   10705:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1070b:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   10711:	89 c1                	mov    %eax,%ecx
   10713:	d3 e2                	shl    %cl,%edx
   10715:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1071b:	be 01 00 00 00       	mov    $0x1,%esi
   10720:	89 c1                	mov    %eax,%ecx
   10722:	d3 e6                	shl    %cl,%esi
   10724:	89 f0                	mov    %esi,%eax
   10726:	8d 34 00             	lea    (%rax,%rax,1),%esi
   10729:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1072f:	bf 01 00 00 00       	mov    $0x1,%edi
   10734:	89 c1                	mov    %eax,%ecx
   10736:	d3 e7                	shl    %cl,%edi
   10738:	89 f8                	mov    %edi,%eax
   1073a:	01 c0                	add    %eax,%eax
   1073c:	f7 d8                	neg    %eax
   1073e:	09 f0                	or     %esi,%eax
   10740:	21 d0                	and    %edx,%eax
   10742:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   10748:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1074e:	f7 d8                	neg    %eax
   10750:	23 85 34 ff ff ff    	and    -0xcc(%rbp),%eax
   10756:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
   1075c:	f3 0f bc 85 38 ff ff 	tzcnt  -0xc8(%rbp),%eax
   10763:	ff 
   10764:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1076a:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   10770:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   10776:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1077c:	01 c0                	add    %eax,%eax
   1077e:	89 c0                	mov    %eax,%eax
   10780:	48 83 c0 08          	add    $0x8,%rax
   10784:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1078b:	00 
   1078c:	48 8d 05 cd 74 03 00 	lea    0x374cd(%rip),%rax        # 47c60 <_gm_>
   10793:	48 01 d0             	add    %rdx,%rax
   10796:	48 83 c0 08          	add    $0x8,%rax
   1079a:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   107a1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   107a8:	48 8b 40 10          	mov    0x10(%rax),%rax
   107ac:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   107b3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107ba:	48 8b 40 08          	mov    0x8(%rax),%rax
   107be:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   107c2:	48 89 c2             	mov    %rax,%rdx
   107c5:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   107cb:	c1 e0 03             	shl    $0x3,%eax
   107ce:	89 c0                	mov    %eax,%eax
   107d0:	48 39 c2             	cmp    %rax,%rdx
   107d3:	74 05                	je     107da <dlmalloc+0x392>
   107d5:	e8 ff ad 02 00       	callq  3b5d9 <abort>
   107da:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107e1:	48 8b 40 10          	mov    0x10(%rax),%rax
   107e5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   107ec:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107f3:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
   107fa:	75 05                	jne    10801 <dlmalloc+0x3b9>
   107fc:	e8 d8 ad 02 00       	callq  3b5d9 <abort>
   10801:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10808:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1080f:	75 05                	jne    10816 <dlmalloc+0x3ce>
   10811:	e8 c3 ad 02 00       	callq  3b5d9 <abort>
   10816:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1081d:	48 8b 40 08          	mov    0x8(%rax),%rax
   10821:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   10825:	48 89 c2             	mov    %rax,%rdx
   10828:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1082e:	c1 e0 03             	shl    $0x3,%eax
   10831:	89 c0                	mov    %eax,%eax
   10833:	48 39 c2             	cmp    %rax,%rdx
   10836:	74 05                	je     1083d <dlmalloc+0x3f5>
   10838:	e8 9c ad 02 00       	callq  3b5d9 <abort>
   1083d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10844:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1084b:	75 23                	jne    10870 <dlmalloc+0x428>
   1084d:	8b 15 0d 74 03 00    	mov    0x3740d(%rip),%edx        # 47c60 <_gm_>
   10853:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   10859:	be 01 00 00 00       	mov    $0x1,%esi
   1085e:	89 c1                	mov    %eax,%ecx
   10860:	d3 e6                	shl    %cl,%esi
   10862:	89 f0                	mov    %esi,%eax
   10864:	f7 d0                	not    %eax
   10866:	21 d0                	and    %edx,%eax
   10868:	89 05 f2 73 03 00    	mov    %eax,0x373f2(%rip)        # 47c60 <_gm_>
   1086e:	eb 61                	jmp    108d1 <dlmalloc+0x489>
   10870:	48 8b 05 01 74 03 00 	mov    0x37401(%rip),%rax        # 47c78 <_gm_+0x18>
   10877:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1087e:	0f 93 c0             	setae  %al
   10881:	0f b6 c0             	movzbl %al,%eax
   10884:	48 85 c0             	test   %rax,%rax
   10887:	74 43                	je     108cc <dlmalloc+0x484>
   10889:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10890:	48 8b 40 18          	mov    0x18(%rax),%rax
   10894:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1089b:	0f 94 c0             	sete   %al
   1089e:	0f b6 c0             	movzbl %al,%eax
   108a1:	48 85 c0             	test   %rax,%rax
   108a4:	74 26                	je     108cc <dlmalloc+0x484>
   108a6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   108ad:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   108b4:	48 89 50 18          	mov    %rdx,0x18(%rax)
   108b8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   108bf:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   108c6:	48 89 50 10          	mov    %rdx,0x10(%rax)
   108ca:	eb 05                	jmp    108d1 <dlmalloc+0x489>
   108cc:	e8 08 ad 02 00       	callq  3b5d9 <abort>
   108d1:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   108d7:	c1 e0 03             	shl    $0x3,%eax
   108da:	89 c0                	mov    %eax,%eax
   108dc:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   108e3:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   108ea:	48 83 bd 78 ff ff ff 	cmpq   $0x1f,-0x88(%rbp)
   108f1:	1f 
   108f2:	77 7d                	ja     10971 <dlmalloc+0x529>
   108f4:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   108fa:	c1 e0 03             	shl    $0x3,%eax
   108fd:	83 c8 03             	or     $0x3,%eax
   10900:	89 c2                	mov    %eax,%edx
   10902:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10909:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1090d:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   10913:	c1 e0 03             	shl    $0x3,%eax
   10916:	89 c2                	mov    %eax,%edx
   10918:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1091f:	48 01 d0             	add    %rdx,%rax
   10922:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10926:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1092c:	c1 e0 03             	shl    $0x3,%eax
   1092f:	89 c1                	mov    %eax,%ecx
   10931:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10938:	48 01 c8             	add    %rcx,%rax
   1093b:	48 83 ca 01          	or     $0x1,%rdx
   1093f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10943:	48 8b 0d d6 72 03 00 	mov    0x372d6(%rip),%rcx        # 47c20 <mparams>
   1094a:	48 8d 15 0f 73 03 00 	lea    0x3730f(%rip),%rdx        # 47c60 <_gm_>
   10951:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   10957:	c1 e0 03             	shl    $0x3,%eax
   1095a:	89 c6                	mov    %eax,%esi
   1095c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10963:	48 01 f0             	add    %rsi,%rax
   10966:	48 31 ca             	xor    %rcx,%rdx
   10969:	48 89 10             	mov    %rdx,(%rax)
   1096c:	e9 c2 01 00 00       	jmpq   10b33 <dlmalloc+0x6eb>
   10971:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10978:	48 83 c8 03          	or     $0x3,%rax
   1097c:	48 89 c2             	mov    %rax,%rdx
   1097f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10986:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1098a:	48 8b 0d 8f 72 03 00 	mov    0x3728f(%rip),%rcx        # 47c20 <mparams>
   10991:	48 8d 15 c8 72 03 00 	lea    0x372c8(%rip),%rdx        # 47c60 <_gm_>
   10998:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
   1099f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   109a6:	48 01 f0             	add    %rsi,%rax
   109a9:	48 31 ca             	xor    %rcx,%rdx
   109ac:	48 89 10             	mov    %rdx,(%rax)
   109af:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   109b6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   109bd:	48 01 d0             	add    %rdx,%rax
   109c0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   109c4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   109cb:	48 83 c8 01          	or     $0x1,%rax
   109cf:	48 89 c2             	mov    %rax,%rdx
   109d2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   109d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   109da:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   109de:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   109e5:	48 01 c2             	add    %rax,%rdx
   109e8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   109ef:	48 89 02             	mov    %rax,(%rdx)
   109f2:	48 8b 05 6f 72 03 00 	mov    0x3726f(%rip),%rax        # 47c68 <_gm_+0x8>
   109f9:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   109fd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10a01:	48 c1 e8 03          	shr    $0x3,%rax
   10a05:	48 83 f8 1f          	cmp    $0x1f,%rax
   10a09:	76 05                	jbe    10a10 <dlmalloc+0x5c8>
   10a0b:	e8 c9 ab 02 00       	callq  3b5d9 <abort>
   10a10:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   10a15:	0f 84 ff 00 00 00    	je     10b1a <dlmalloc+0x6d2>
   10a1b:	48 8b 05 5e 72 03 00 	mov    0x3725e(%rip),%rax        # 47c80 <_gm_+0x20>
   10a22:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10a26:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10a2a:	48 c1 e8 03          	shr    $0x3,%rax
   10a2e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   10a34:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   10a3a:	01 c0                	add    %eax,%eax
   10a3c:	89 c0                	mov    %eax,%eax
   10a3e:	48 83 c0 08          	add    $0x8,%rax
   10a42:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10a49:	00 
   10a4a:	48 8d 05 0f 72 03 00 	lea    0x3720f(%rip),%rax        # 47c60 <_gm_>
   10a51:	48 01 d0             	add    %rdx,%rax
   10a54:	48 83 c0 08          	add    $0x8,%rax
   10a58:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   10a5c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10a60:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   10a67:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
   10a6c:	77 05                	ja     10a73 <dlmalloc+0x62b>
   10a6e:	e8 66 ab 02 00       	callq  3b5d9 <abort>
   10a73:	8b 15 e7 71 03 00    	mov    0x371e7(%rip),%edx        # 47c60 <_gm_>
   10a79:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   10a7f:	be 01 00 00 00       	mov    $0x1,%esi
   10a84:	89 c1                	mov    %eax,%ecx
   10a86:	d3 e6                	shl    %cl,%esi
   10a88:	89 f0                	mov    %esi,%eax
   10a8a:	21 d0                	and    %edx,%eax
   10a8c:	85 c0                	test   %eax,%eax
   10a8e:	75 21                	jne    10ab1 <dlmalloc+0x669>
   10a90:	8b 15 ca 71 03 00    	mov    0x371ca(%rip),%edx        # 47c60 <_gm_>
   10a96:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   10a9c:	be 01 00 00 00       	mov    $0x1,%esi
   10aa1:	89 c1                	mov    %eax,%ecx
   10aa3:	d3 e6                	shl    %cl,%esi
   10aa5:	89 f0                	mov    %esi,%eax
   10aa7:	09 d0                	or     %edx,%eax
   10aa9:	89 05 b1 71 03 00    	mov    %eax,0x371b1(%rip)        # 47c60 <_gm_>
   10aaf:	eb 33                	jmp    10ae4 <dlmalloc+0x69c>
   10ab1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10ab5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10ab9:	48 8b 05 b8 71 03 00 	mov    0x371b8(%rip),%rax        # 47c78 <_gm_+0x18>
   10ac0:	48 39 c2             	cmp    %rax,%rdx
   10ac3:	0f 93 c0             	setae  %al
   10ac6:	0f b6 c0             	movzbl %al,%eax
   10ac9:	48 85 c0             	test   %rax,%rax
   10acc:	74 11                	je     10adf <dlmalloc+0x697>
   10ace:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10ad2:	48 8b 40 10          	mov    0x10(%rax),%rax
   10ad6:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   10add:	eb 05                	jmp    10ae4 <dlmalloc+0x69c>
   10adf:	e8 f5 aa 02 00       	callq  3b5d9 <abort>
   10ae4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10ae8:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10aec:	48 89 50 10          	mov    %rdx,0x10(%rax)
   10af0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10af7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10afb:	48 89 50 18          	mov    %rdx,0x18(%rax)
   10aff:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10b03:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   10b0a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   10b0e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10b12:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   10b16:	48 89 50 18          	mov    %rdx,0x18(%rax)
   10b1a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10b21:	48 89 05 40 71 03 00 	mov    %rax,0x37140(%rip)        # 47c68 <_gm_+0x8>
   10b28:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10b2c:	48 89 05 4d 71 03 00 	mov    %rax,0x3714d(%rip)        # 47c80 <_gm_+0x20>
   10b33:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10b3a:	48 83 c0 10          	add    $0x10,%rax
   10b3e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   10b45:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10b4c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10b53:	48 89 c6             	mov    %rax,%rsi
   10b56:	48 8d 3d 03 71 03 00 	lea    0x37103(%rip),%rdi        # 47c60 <_gm_>
   10b5d:	e8 f6 ae ff ff       	callq  ba58 <do_check_malloced_chunk>
   10b62:	e9 55 03 00 00       	jmpq   10ebc <dlmalloc+0xa74>
   10b67:	8b 05 f7 70 03 00    	mov    0x370f7(%rip),%eax        # 47c64 <_gm_+0x4>
   10b6d:	85 c0                	test   %eax,%eax
   10b6f:	0f 84 d0 00 00 00    	je     10c45 <dlmalloc+0x7fd>
   10b75:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10b7c:	48 89 c6             	mov    %rax,%rsi
   10b7f:	48 8d 3d da 70 03 00 	lea    0x370da(%rip),%rdi        # 47c60 <_gm_>
   10b86:	e8 07 f2 ff ff       	callq  fd92 <tmalloc_small>
   10b8b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   10b92:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   10b99:	00 
   10b9a:	0f 84 a5 00 00 00    	je     10c45 <dlmalloc+0x7fd>
   10ba0:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10ba7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10bae:	48 89 c6             	mov    %rax,%rsi
   10bb1:	48 8d 3d a8 70 03 00 	lea    0x370a8(%rip),%rdi        # 47c60 <_gm_>
   10bb8:	e8 9b ae ff ff       	callq  ba58 <do_check_malloced_chunk>
   10bbd:	e9 fa 02 00 00       	jmpq   10ebc <dlmalloc+0xa74>
   10bc2:	48 81 bd 18 ff ff ff 	cmpq   $0xffffffffffffff7f,-0xe8(%rbp)
   10bc9:	7f ff ff ff 
   10bcd:	76 0d                	jbe    10bdc <dlmalloc+0x794>
   10bcf:	48 c7 85 50 ff ff ff 	movq   $0xffffffffffffffff,-0xb0(%rbp)
   10bd6:	ff ff ff ff 
   10bda:	eb 69                	jmp    10c45 <dlmalloc+0x7fd>
   10bdc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10be3:	48 83 c0 1f          	add    $0x1f,%rax
   10be7:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   10beb:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   10bf2:	8b 05 6c 70 03 00    	mov    0x3706c(%rip),%eax        # 47c64 <_gm_+0x4>
   10bf8:	85 c0                	test   %eax,%eax
   10bfa:	74 49                	je     10c45 <dlmalloc+0x7fd>
   10bfc:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10c03:	48 89 c6             	mov    %rax,%rsi
   10c06:	48 8d 3d 53 70 03 00 	lea    0x37053(%rip),%rdi        # 47c60 <_gm_>
   10c0d:	e8 16 e5 ff ff       	callq  f128 <tmalloc_large>
   10c12:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   10c19:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   10c20:	00 
   10c21:	74 22                	je     10c45 <dlmalloc+0x7fd>
   10c23:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10c2a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10c31:	48 89 c6             	mov    %rax,%rsi
   10c34:	48 8d 3d 25 70 03 00 	lea    0x37025(%rip),%rdi        # 47c60 <_gm_>
   10c3b:	e8 18 ae ff ff       	callq  ba58 <do_check_malloced_chunk>
   10c40:	e9 77 02 00 00       	jmpq   10ebc <dlmalloc+0xa74>
   10c45:	48 8b 05 1c 70 03 00 	mov    0x3701c(%rip),%rax        # 47c68 <_gm_+0x8>
   10c4c:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   10c53:	0f 87 58 01 00 00    	ja     10db1 <dlmalloc+0x969>
   10c59:	48 8b 05 08 70 03 00 	mov    0x37008(%rip),%rax        # 47c68 <_gm_+0x8>
   10c60:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   10c67:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10c6b:	48 8b 05 0e 70 03 00 	mov    0x3700e(%rip),%rax        # 47c80 <_gm_+0x20>
   10c72:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10c76:	48 83 7d d0 1f       	cmpq   $0x1f,-0x30(%rbp)
   10c7b:	0f 86 8a 00 00 00    	jbe    10d0b <dlmalloc+0x8c3>
   10c81:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10c85:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10c8c:	48 01 d0             	add    %rdx,%rax
   10c8f:	48 89 05 ea 6f 03 00 	mov    %rax,0x36fea(%rip)        # 47c80 <_gm_+0x20>
   10c96:	48 8b 05 e3 6f 03 00 	mov    0x36fe3(%rip),%rax        # 47c80 <_gm_+0x20>
   10c9d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10ca1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ca5:	48 89 05 bc 6f 03 00 	mov    %rax,0x36fbc(%rip)        # 47c68 <_gm_+0x8>
   10cac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10cb0:	48 83 c8 01          	or     $0x1,%rax
   10cb4:	48 89 c2             	mov    %rax,%rdx
   10cb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cbb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10cbf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10cc3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10cc7:	48 01 c2             	add    %rax,%rdx
   10cca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10cce:	48 89 02             	mov    %rax,(%rdx)
   10cd1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10cd8:	48 83 c8 03          	or     $0x3,%rax
   10cdc:	48 89 c2             	mov    %rax,%rdx
   10cdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ce3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10ce7:	48 8b 0d 32 6f 03 00 	mov    0x36f32(%rip),%rcx        # 47c20 <mparams>
   10cee:	48 8d 15 6b 6f 03 00 	lea    0x36f6b(%rip),%rdx        # 47c60 <_gm_>
   10cf5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   10cf9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10d00:	48 01 f0             	add    %rsi,%rax
   10d03:	48 31 ca             	xor    %rcx,%rdx
   10d06:	48 89 10             	mov    %rdx,(%rax)
   10d09:	eb 75                	jmp    10d80 <dlmalloc+0x938>
   10d0b:	48 8b 05 56 6f 03 00 	mov    0x36f56(%rip),%rax        # 47c68 <_gm_+0x8>
   10d12:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10d16:	48 c7 05 47 6f 03 00 	movq   $0x0,0x36f47(%rip)        # 47c68 <_gm_+0x8>
   10d1d:	00 00 00 00 
   10d21:	48 c7 05 54 6f 03 00 	movq   $0x0,0x36f54(%rip)        # 47c80 <_gm_+0x20>
   10d28:	00 00 00 00 
   10d2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d30:	48 83 c8 03          	or     $0x3,%rax
   10d34:	48 89 c2             	mov    %rax,%rdx
   10d37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d3b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10d3f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10d43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d47:	48 01 d0             	add    %rdx,%rax
   10d4a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10d4e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   10d52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d56:	48 01 c8             	add    %rcx,%rax
   10d59:	48 83 ca 01          	or     $0x1,%rdx
   10d5d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10d61:	48 8b 0d b8 6e 03 00 	mov    0x36eb8(%rip),%rcx        # 47c20 <mparams>
   10d68:	48 8d 15 f1 6e 03 00 	lea    0x36ef1(%rip),%rdx        # 47c60 <_gm_>
   10d6f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   10d73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d77:	48 01 f0             	add    %rsi,%rax
   10d7a:	48 31 ca             	xor    %rcx,%rdx
   10d7d:	48 89 10             	mov    %rdx,(%rax)
   10d80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d84:	48 83 c0 10          	add    $0x10,%rax
   10d88:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   10d8f:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10d96:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10d9d:	48 89 c6             	mov    %rax,%rsi
   10da0:	48 8d 3d b9 6e 03 00 	lea    0x36eb9(%rip),%rdi        # 47c60 <_gm_>
   10da7:	e8 ac ac ff ff       	callq  ba58 <do_check_malloced_chunk>
   10dac:	e9 0b 01 00 00       	jmpq   10ebc <dlmalloc+0xa74>
   10db1:	48 8b 05 b8 6e 03 00 	mov    0x36eb8(%rip),%rax        # 47c70 <_gm_+0x10>
   10db8:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   10dbf:	0f 83 da 00 00 00    	jae    10e9f <dlmalloc+0xa57>
   10dc5:	48 8b 05 a4 6e 03 00 	mov    0x36ea4(%rip),%rax        # 47c70 <_gm_+0x10>
   10dcc:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   10dd3:	48 89 05 96 6e 03 00 	mov    %rax,0x36e96(%rip)        # 47c70 <_gm_+0x10>
   10dda:	48 8b 05 8f 6e 03 00 	mov    0x36e8f(%rip),%rax        # 47c70 <_gm_+0x10>
   10de1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10de5:	48 8b 05 9c 6e 03 00 	mov    0x36e9c(%rip),%rax        # 47c88 <_gm_+0x28>
   10dec:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10df0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10df4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10dfb:	48 01 d0             	add    %rdx,%rax
   10dfe:	48 89 05 83 6e 03 00 	mov    %rax,0x36e83(%rip)        # 47c88 <_gm_+0x28>
   10e05:	48 8b 05 7c 6e 03 00 	mov    0x36e7c(%rip),%rax        # 47c88 <_gm_+0x28>
   10e0c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10e10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e14:	48 83 c8 01          	or     $0x1,%rax
   10e18:	48 89 c2             	mov    %rax,%rdx
   10e1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e1f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10e23:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10e2a:	48 83 c8 03          	or     $0x3,%rax
   10e2e:	48 89 c2             	mov    %rax,%rdx
   10e31:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10e35:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10e39:	48 8b 0d e0 6d 03 00 	mov    0x36de0(%rip),%rcx        # 47c20 <mparams>
   10e40:	48 8d 15 19 6e 03 00 	lea    0x36e19(%rip),%rdx        # 47c60 <_gm_>
   10e47:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   10e4b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10e52:	48 01 f0             	add    %rsi,%rax
   10e55:	48 31 ca             	xor    %rcx,%rdx
   10e58:	48 89 10             	mov    %rdx,(%rax)
   10e5b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10e5f:	48 83 c0 10          	add    $0x10,%rax
   10e63:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   10e6a:	48 8b 05 17 6e 03 00 	mov    0x36e17(%rip),%rax        # 47c88 <_gm_+0x28>
   10e71:	48 89 c6             	mov    %rax,%rsi
   10e74:	48 8d 3d e5 6d 03 00 	lea    0x36de5(%rip),%rdi        # 47c60 <_gm_>
   10e7b:	e8 47 a8 ff ff       	callq  b6c7 <do_check_top_chunk>
   10e80:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10e87:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10e8e:	48 89 c6             	mov    %rax,%rsi
   10e91:	48 8d 3d c8 6d 03 00 	lea    0x36dc8(%rip),%rdi        # 47c60 <_gm_>
   10e98:	e8 bb ab ff ff       	callq  ba58 <do_check_malloced_chunk>
   10e9d:	eb 1d                	jmp    10ebc <dlmalloc+0xa74>
   10e9f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10ea6:	48 89 c6             	mov    %rax,%rsi
   10ea9:	48 8d 3d b0 6d 03 00 	lea    0x36db0(%rip),%rdi        # 47c60 <_gm_>
   10eb0:	e8 b8 c2 ff ff       	callq  d16d <sys_alloc>
   10eb5:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   10ebc:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   10ec3:	00 
   10ec4:	74 49                	je     10f0f <dlmalloc+0xac7>
   10ec6:	e8 7b 80 ff ff       	callq  8f46 <get_heap_base>
   10ecb:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   10ed2:	72 36                	jb     10f0a <dlmalloc+0xac2>
   10ed4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10edb:	48 f7 d0             	not    %rax
   10ede:	48 39 85 18 ff ff ff 	cmp    %rax,-0xe8(%rbp)
   10ee5:	77 23                	ja     10f0a <dlmalloc+0xac2>
   10ee7:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10eee:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10ef5:	48 01 d0             	add    %rdx,%rax
   10ef8:	48 89 c3             	mov    %rax,%rbx
   10efb:	bf 00 00 00 00       	mov    $0x0,%edi
   10f00:	e8 8e 29 00 00       	callq  13893 <sbrk>
   10f05:	48 39 c3             	cmp    %rax,%rbx
   10f08:	76 05                	jbe    10f0f <dlmalloc+0xac7>
   10f0a:	e8 ca a6 02 00       	callq  3b5d9 <abort>
   10f0f:	8b 05 bb 70 03 00    	mov    0x370bb(%rip),%eax        # 47fd0 <_gm_+0x370>
   10f15:	83 e0 02             	and    $0x2,%eax
   10f18:	85 c0                	test   %eax,%eax
   10f1a:	74 0b                	je     10f27 <dlmalloc+0xadf>
   10f1c:	b8 00 00 00 00       	mov    $0x0,%eax
   10f21:	89 05 ad 70 03 00    	mov    %eax,0x370ad(%rip)        # 47fd4 <_gm_+0x374>
   10f27:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10f2e:	eb 05                	jmp    10f35 <dlmalloc+0xaed>
   10f30:	b8 00 00 00 00       	mov    $0x0,%eax
   10f35:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   10f3c:	5b                   	pop    %rbx
   10f3d:	5d                   	pop    %rbp
   10f3e:	c3                   	retq   

0000000000010f3f <dlfree>:
   10f3f:	55                   	push   %rbp
   10f40:	48 89 e5             	mov    %rsp,%rbp
   10f43:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
   10f4a:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   10f51:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
   10f58:	00 
   10f59:	0f 84 ff 14 00 00    	je     1245e <dlfree+0x151f>
   10f5f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10f66:	48 83 e8 10          	sub    $0x10,%rax
   10f6a:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   10f71:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   10f78:	48 8b 40 08          	mov    0x8(%rax),%rax
   10f7c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   10f80:	48 89 c2             	mov    %rax,%rdx
   10f83:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   10f8a:	48 01 d0             	add    %rdx,%rax
   10f8d:	48 8b 10             	mov    (%rax),%rdx
   10f90:	48 8b 05 89 6c 03 00 	mov    0x36c89(%rip),%rax        # 47c20 <mparams>
   10f97:	48 31 d0             	xor    %rdx,%rax
   10f9a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   10fa1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   10fa8:	48 8b 50 40          	mov    0x40(%rax),%rdx
   10fac:	48 8b 05 6d 6c 03 00 	mov    0x36c6d(%rip),%rax        # 47c20 <mparams>
   10fb3:	48 39 c2             	cmp    %rax,%rdx
   10fb6:	74 05                	je     10fbd <dlfree+0x7e>
   10fb8:	e8 1c a6 02 00       	callq  3b5d9 <abort>
   10fbd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   10fc4:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   10fca:	83 e0 02             	and    $0x2,%eax
   10fcd:	85 c0                	test   %eax,%eax
   10fcf:	74 36                	je     11007 <dlfree+0xc8>
   10fd1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   10fd8:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   10fdf:	b8 01 00 00 00       	mov    $0x1,%eax
   10fe4:	87 02                	xchg   %eax,(%rdx)
   10fe6:	85 c0                	test   %eax,%eax
   10fe8:	74 1d                	je     11007 <dlfree+0xc8>
   10fea:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   10ff1:	48 05 74 03 00 00    	add    $0x374,%rax
   10ff7:	48 89 c7             	mov    %rax,%rdi
   10ffa:	e8 b2 a4 ff ff       	callq  b4b1 <spin_acquire_lock>
   10fff:	85 c0                	test   %eax,%eax
   11001:	0f 85 57 14 00 00    	jne    1245e <dlfree+0x151f>
   11007:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1100e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11015:	48 89 d6             	mov    %rdx,%rsi
   11018:	48 89 c7             	mov    %rax,%rdi
   1101b:	e8 f1 a7 ff ff       	callq  b811 <do_check_inuse_chunk>
   11020:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11027:	48 8b 40 18          	mov    0x18(%rax),%rax
   1102b:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   11032:	0f 93 c0             	setae  %al
   11035:	0f b6 c0             	movzbl %al,%eax
   11038:	48 85 c0             	test   %rax,%rax
   1103b:	0f 84 e8 13 00 00    	je     12429 <dlfree+0x14ea>
   11041:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11048:	48 8b 40 08          	mov    0x8(%rax),%rax
   1104c:	83 e0 03             	and    $0x3,%eax
   1104f:	48 83 f8 01          	cmp    $0x1,%rax
   11053:	0f 95 c0             	setne  %al
   11056:	0f b6 c0             	movzbl %al,%eax
   11059:	48 85 c0             	test   %rax,%rax
   1105c:	0f 84 c7 13 00 00    	je     12429 <dlfree+0x14ea>
   11062:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11069:	48 8b 40 08          	mov    0x8(%rax),%rax
   1106d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11071:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   11078:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1107f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11086:	48 01 d0             	add    %rdx,%rax
   11089:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   11090:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11097:	48 8b 40 08          	mov    0x8(%rax),%rax
   1109b:	83 e0 01             	and    $0x1,%eax
   1109e:	48 85 c0             	test   %rax,%rax
   110a1:	0f 85 3a 07 00 00    	jne    117e1 <dlfree+0x8a2>
   110a7:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   110ae:	48 8b 00             	mov    (%rax),%rax
   110b1:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   110b8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   110bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   110c3:	83 e0 03             	and    $0x3,%eax
   110c6:	48 85 c0             	test   %rax,%rax
   110c9:	75 21                	jne    110ec <dlfree+0x1ad>
   110cb:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   110d2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   110d9:	48 01 d0             	add    %rdx,%rax
   110dc:	48 83 c0 20          	add    $0x20,%rax
   110e0:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   110e7:	e9 4a 13 00 00       	jmpq   12436 <dlfree+0x14f7>
   110ec:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   110f3:	48 f7 d8             	neg    %rax
   110f6:	48 89 c2             	mov    %rax,%rdx
   110f9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11100:	48 01 d0             	add    %rdx,%rax
   11103:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1110a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   11111:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
   11118:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1111f:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   11126:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1112d:	48 8b 40 18          	mov    0x18(%rax),%rax
   11131:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   11138:	0f 93 c0             	setae  %al
   1113b:	0f b6 c0             	movzbl %al,%eax
   1113e:	48 85 c0             	test   %rax,%rax
   11141:	0f 84 e5 12 00 00    	je     1242c <dlfree+0x14ed>
   11147:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1114e:	48 8b 40 20          	mov    0x20(%rax),%rax
   11152:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   11159:	0f 84 06 06 00 00    	je     11765 <dlfree+0x826>
   1115f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   11166:	48 c1 e8 03          	shr    $0x3,%rax
   1116a:	48 83 f8 1f          	cmp    $0x1f,%rax
   1116e:	0f 87 f9 01 00 00    	ja     1136d <dlfree+0x42e>
   11174:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1117b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1117f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11186:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1118d:	48 8b 40 18          	mov    0x18(%rax),%rax
   11191:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11198:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1119f:	48 c1 e8 03          	shr    $0x3,%rax
   111a3:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
   111a9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   111b0:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   111b7:	75 05                	jne    111be <dlfree+0x27f>
   111b9:	e8 1b a4 02 00       	callq  3b5d9 <abort>
   111be:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   111c5:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   111cc:	75 05                	jne    111d3 <dlfree+0x294>
   111ce:	e8 06 a4 02 00       	callq  3b5d9 <abort>
   111d3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   111da:	48 8b 40 08          	mov    0x8(%rax),%rax
   111de:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   111e2:	48 89 c2             	mov    %rax,%rdx
   111e5:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   111eb:	c1 e0 03             	shl    $0x3,%eax
   111ee:	89 c0                	mov    %eax,%eax
   111f0:	48 39 c2             	cmp    %rax,%rdx
   111f3:	74 05                	je     111fa <dlfree+0x2bb>
   111f5:	e8 df a3 02 00       	callq  3b5d9 <abort>
   111fa:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   11200:	01 c0                	add    %eax,%eax
   11202:	89 c0                	mov    %eax,%eax
   11204:	48 83 c0 08          	add    $0x8,%rax
   11208:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1120f:	00 
   11210:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11217:	48 01 d0             	add    %rdx,%rax
   1121a:	48 83 c0 08          	add    $0x8,%rax
   1121e:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   11225:	0f 94 c0             	sete   %al
   11228:	0f b6 c0             	movzbl %al,%eax
   1122b:	48 85 c0             	test   %rax,%rax
   1122e:	75 4e                	jne    1127e <dlfree+0x33f>
   11230:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11237:	48 8b 40 18          	mov    0x18(%rax),%rax
   1123b:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   11242:	0f 93 c0             	setae  %al
   11245:	0f b6 c0             	movzbl %al,%eax
   11248:	48 85 c0             	test   %rax,%rax
   1124b:	74 24                	je     11271 <dlfree+0x332>
   1124d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11254:	48 8b 40 18          	mov    0x18(%rax),%rax
   11258:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1125f:	0f 94 c0             	sete   %al
   11262:	0f b6 c0             	movzbl %al,%eax
   11265:	48 85 c0             	test   %rax,%rax
   11268:	74 07                	je     11271 <dlfree+0x332>
   1126a:	b8 01 00 00 00       	mov    $0x1,%eax
   1126f:	eb 05                	jmp    11276 <dlfree+0x337>
   11271:	b8 00 00 00 00       	mov    $0x0,%eax
   11276:	85 c0                	test   %eax,%eax
   11278:	0f 84 ea 00 00 00    	je     11368 <dlfree+0x429>
   1127e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11285:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1128c:	75 2c                	jne    112ba <dlfree+0x37b>
   1128e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11295:	8b 10                	mov    (%rax),%edx
   11297:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   1129d:	be 01 00 00 00       	mov    $0x1,%esi
   112a2:	89 c1                	mov    %eax,%ecx
   112a4:	d3 e6                	shl    %cl,%esi
   112a6:	89 f0                	mov    %esi,%eax
   112a8:	f7 d0                	not    %eax
   112aa:	21 c2                	and    %eax,%edx
   112ac:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   112b3:	89 10                	mov    %edx,(%rax)
   112b5:	e9 27 05 00 00       	jmpq   117e1 <dlfree+0x8a2>
   112ba:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   112c0:	01 c0                	add    %eax,%eax
   112c2:	89 c0                	mov    %eax,%eax
   112c4:	48 83 c0 08          	add    $0x8,%rax
   112c8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   112cf:	00 
   112d0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   112d7:	48 01 d0             	add    %rdx,%rax
   112da:	48 83 c0 08          	add    $0x8,%rax
   112de:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   112e5:	0f 94 c0             	sete   %al
   112e8:	0f b6 c0             	movzbl %al,%eax
   112eb:	48 85 c0             	test   %rax,%rax
   112ee:	75 4a                	jne    1133a <dlfree+0x3fb>
   112f0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   112f7:	48 8b 40 18          	mov    0x18(%rax),%rax
   112fb:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   11302:	0f 93 c0             	setae  %al
   11305:	0f b6 c0             	movzbl %al,%eax
   11308:	48 85 c0             	test   %rax,%rax
   1130b:	74 24                	je     11331 <dlfree+0x3f2>
   1130d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11314:	48 8b 40 10          	mov    0x10(%rax),%rax
   11318:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1131f:	0f 94 c0             	sete   %al
   11322:	0f b6 c0             	movzbl %al,%eax
   11325:	48 85 c0             	test   %rax,%rax
   11328:	74 07                	je     11331 <dlfree+0x3f2>
   1132a:	b8 01 00 00 00       	mov    $0x1,%eax
   1132f:	eb 05                	jmp    11336 <dlfree+0x3f7>
   11331:	b8 00 00 00 00       	mov    $0x0,%eax
   11336:	85 c0                	test   %eax,%eax
   11338:	74 29                	je     11363 <dlfree+0x424>
   1133a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11341:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   11348:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1134c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11353:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1135a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1135e:	e9 7e 04 00 00       	jmpq   117e1 <dlfree+0x8a2>
   11363:	e8 71 a2 02 00       	callq  3b5d9 <abort>
   11368:	e8 6c a2 02 00       	callq  3b5d9 <abort>
   1136d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11374:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1137b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11382:	48 8b 40 30          	mov    0x30(%rax),%rax
   11386:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1138d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11394:	48 8b 40 18          	mov    0x18(%rax),%rax
   11398:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1139f:	0f 84 b9 00 00 00    	je     1145e <dlfree+0x51f>
   113a5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   113ac:	48 8b 40 10          	mov    0x10(%rax),%rax
   113b0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   113b7:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   113be:	48 8b 40 18          	mov    0x18(%rax),%rax
   113c2:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   113c9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   113d0:	48 8b 40 18          	mov    0x18(%rax),%rax
   113d4:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   113db:	0f 93 c0             	setae  %al
   113de:	0f b6 c0             	movzbl %al,%eax
   113e1:	48 85 c0             	test   %rax,%rax
   113e4:	74 24                	je     1140a <dlfree+0x4cb>
   113e6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   113ed:	48 8b 40 18          	mov    0x18(%rax),%rax
   113f1:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   113f8:	0f 94 c0             	sete   %al
   113fb:	0f b6 c0             	movzbl %al,%eax
   113fe:	48 85 c0             	test   %rax,%rax
   11401:	74 07                	je     1140a <dlfree+0x4cb>
   11403:	b8 01 00 00 00       	mov    $0x1,%eax
   11408:	eb 05                	jmp    1140f <dlfree+0x4d0>
   1140a:	b8 00 00 00 00       	mov    $0x0,%eax
   1140f:	85 c0                	test   %eax,%eax
   11411:	74 46                	je     11459 <dlfree+0x51a>
   11413:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1141a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1141e:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   11425:	0f 94 c0             	sete   %al
   11428:	0f b6 c0             	movzbl %al,%eax
   1142b:	48 85 c0             	test   %rax,%rax
   1142e:	74 29                	je     11459 <dlfree+0x51a>
   11430:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11437:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1143e:	48 89 50 18          	mov    %rdx,0x18(%rax)
   11442:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11449:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   11450:	48 89 50 10          	mov    %rdx,0x10(%rax)
   11454:	e9 f8 00 00 00       	jmpq   11551 <dlfree+0x612>
   11459:	e8 7b a1 02 00       	callq  3b5d9 <abort>
   1145e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11465:	48 83 c0 28          	add    $0x28,%rax
   11469:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   11470:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   11477:	48 8b 00             	mov    (%rax),%rax
   1147a:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   11481:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   11488:	00 
   11489:	75 52                	jne    114dd <dlfree+0x59e>
   1148b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11492:	48 83 c0 20          	add    $0x20,%rax
   11496:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1149d:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   114a4:	48 8b 00             	mov    (%rax),%rax
   114a7:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   114ae:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   114b5:	00 
   114b6:	0f 84 95 00 00 00    	je     11551 <dlfree+0x612>
   114bc:	eb 1f                	jmp    114dd <dlfree+0x59e>
   114be:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   114c5:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   114cc:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   114d3:	48 8b 00             	mov    (%rax),%rax
   114d6:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   114dd:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   114e4:	48 83 c0 28          	add    $0x28,%rax
   114e8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   114ef:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   114f6:	48 8b 00             	mov    (%rax),%rax
   114f9:	48 85 c0             	test   %rax,%rax
   114fc:	75 c0                	jne    114be <dlfree+0x57f>
   114fe:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11505:	48 83 c0 20          	add    $0x20,%rax
   11509:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   11510:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   11517:	48 8b 00             	mov    (%rax),%rax
   1151a:	48 85 c0             	test   %rax,%rax
   1151d:	75 9f                	jne    114be <dlfree+0x57f>
   1151f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11526:	48 8b 40 18          	mov    0x18(%rax),%rax
   1152a:	48 39 85 e0 fe ff ff 	cmp    %rax,-0x120(%rbp)
   11531:	0f 93 c0             	setae  %al
   11534:	0f b6 c0             	movzbl %al,%eax
   11537:	48 85 c0             	test   %rax,%rax
   1153a:	74 10                	je     1154c <dlfree+0x60d>
   1153c:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   11543:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1154a:	eb 05                	jmp    11551 <dlfree+0x612>
   1154c:	e8 88 a0 02 00       	callq  3b5d9 <abort>
   11551:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   11558:	00 
   11559:	0f 84 82 02 00 00    	je     117e1 <dlfree+0x8a2>
   1155f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11566:	8b 40 38             	mov    0x38(%rax),%eax
   11569:	89 c0                	mov    %eax,%eax
   1156b:	48 83 c0 4a          	add    $0x4a,%rax
   1156f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11576:	00 
   11577:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1157e:	48 01 d0             	add    %rdx,%rax
   11581:	48 83 c0 08          	add    $0x8,%rax
   11585:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1158c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11593:	48 8b 00             	mov    (%rax),%rax
   11596:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1159d:	75 53                	jne    115f2 <dlfree+0x6b3>
   1159f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   115a6:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   115ad:	48 89 10             	mov    %rdx,(%rax)
   115b0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   115b7:	48 8b 00             	mov    (%rax),%rax
   115ba:	48 85 c0             	test   %rax,%rax
   115bd:	0f 85 8d 00 00 00    	jne    11650 <dlfree+0x711>
   115c3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   115ca:	8b 50 04             	mov    0x4(%rax),%edx
   115cd:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   115d4:	8b 40 38             	mov    0x38(%rax),%eax
   115d7:	be 01 00 00 00       	mov    $0x1,%esi
   115dc:	89 c1                	mov    %eax,%ecx
   115de:	d3 e6                	shl    %cl,%esi
   115e0:	89 f0                	mov    %esi,%eax
   115e2:	f7 d0                	not    %eax
   115e4:	21 c2                	and    %eax,%edx
   115e6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   115ed:	89 50 04             	mov    %edx,0x4(%rax)
   115f0:	eb 5e                	jmp    11650 <dlfree+0x711>
   115f2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   115f9:	48 8b 40 18          	mov    0x18(%rax),%rax
   115fd:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   11604:	0f 93 c0             	setae  %al
   11607:	0f b6 c0             	movzbl %al,%eax
   1160a:	48 85 c0             	test   %rax,%rax
   1160d:	74 3c                	je     1164b <dlfree+0x70c>
   1160f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   11616:	48 8b 40 20          	mov    0x20(%rax),%rax
   1161a:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   11621:	75 14                	jne    11637 <dlfree+0x6f8>
   11623:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1162a:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   11631:	48 89 50 20          	mov    %rdx,0x20(%rax)
   11635:	eb 19                	jmp    11650 <dlfree+0x711>
   11637:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1163e:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   11645:	48 89 50 28          	mov    %rdx,0x28(%rax)
   11649:	eb 05                	jmp    11650 <dlfree+0x711>
   1164b:	e8 89 9f 02 00       	callq  3b5d9 <abort>
   11650:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   11657:	00 
   11658:	0f 84 83 01 00 00    	je     117e1 <dlfree+0x8a2>
   1165e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11665:	48 8b 40 18          	mov    0x18(%rax),%rax
   11669:	48 39 85 d8 fe ff ff 	cmp    %rax,-0x128(%rbp)
   11670:	0f 93 c0             	setae  %al
   11673:	0f b6 c0             	movzbl %al,%eax
   11676:	48 85 c0             	test   %rax,%rax
   11679:	0f 84 e1 00 00 00    	je     11760 <dlfree+0x821>
   1167f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11686:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1168d:	48 89 50 30          	mov    %rdx,0x30(%rax)
   11691:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11698:	48 8b 40 20          	mov    0x20(%rax),%rax
   1169c:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   116a3:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   116aa:	00 
   116ab:	74 48                	je     116f5 <dlfree+0x7b6>
   116ad:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   116b4:	48 8b 40 18          	mov    0x18(%rax),%rax
   116b8:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   116bf:	0f 93 c0             	setae  %al
   116c2:	0f b6 c0             	movzbl %al,%eax
   116c5:	48 85 c0             	test   %rax,%rax
   116c8:	74 26                	je     116f0 <dlfree+0x7b1>
   116ca:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   116d1:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   116d8:	48 89 50 20          	mov    %rdx,0x20(%rax)
   116dc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   116e3:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   116ea:	48 89 50 30          	mov    %rdx,0x30(%rax)
   116ee:	eb 05                	jmp    116f5 <dlfree+0x7b6>
   116f0:	e8 e4 9e 02 00       	callq  3b5d9 <abort>
   116f5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   116fc:	48 8b 40 28          	mov    0x28(%rax),%rax
   11700:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   11707:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1170e:	00 
   1170f:	0f 84 cc 00 00 00    	je     117e1 <dlfree+0x8a2>
   11715:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1171c:	48 8b 40 18          	mov    0x18(%rax),%rax
   11720:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   11727:	0f 93 c0             	setae  %al
   1172a:	0f b6 c0             	movzbl %al,%eax
   1172d:	48 85 c0             	test   %rax,%rax
   11730:	74 29                	je     1175b <dlfree+0x81c>
   11732:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11739:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11740:	48 89 50 28          	mov    %rdx,0x28(%rax)
   11744:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1174b:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   11752:	48 89 50 30          	mov    %rdx,0x30(%rax)
   11756:	e9 86 00 00 00       	jmpq   117e1 <dlfree+0x8a2>
   1175b:	e8 79 9e 02 00       	callq  3b5d9 <abort>
   11760:	e8 74 9e 02 00       	callq  3b5d9 <abort>
   11765:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1176c:	48 8b 40 08          	mov    0x8(%rax),%rax
   11770:	83 e0 03             	and    $0x3,%eax
   11773:	48 83 f8 03          	cmp    $0x3,%rax
   11777:	75 68                	jne    117e1 <dlfree+0x8a2>
   11779:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11780:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   11787:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1178b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11792:	48 8b 40 08          	mov    0x8(%rax),%rax
   11796:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1179a:	48 89 c2             	mov    %rax,%rdx
   1179d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   117a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   117a8:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   117af:	48 83 c8 01          	or     $0x1,%rax
   117b3:	48 89 c2             	mov    %rax,%rdx
   117b6:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   117bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   117c1:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   117c8:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   117cf:	48 01 c2             	add    %rax,%rdx
   117d2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   117d9:	48 89 02             	mov    %rax,(%rdx)
   117dc:	e9 55 0c 00 00       	jmpq   12436 <dlfree+0x14f7>
   117e1:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   117e8:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
   117ef:	0f 92 c0             	setb   %al
   117f2:	0f b6 c0             	movzbl %al,%eax
   117f5:	48 85 c0             	test   %rax,%rax
   117f8:	0f 84 2b 0c 00 00    	je     12429 <dlfree+0x14ea>
   117fe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11805:	48 8b 40 08          	mov    0x8(%rax),%rax
   11809:	83 e0 01             	and    $0x1,%eax
   1180c:	48 85 c0             	test   %rax,%rax
   1180f:	0f 95 c0             	setne  %al
   11812:	0f b6 c0             	movzbl %al,%eax
   11815:	48 85 c0             	test   %rax,%rax
   11818:	0f 84 0b 0c 00 00    	je     12429 <dlfree+0x14ea>
   1181e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11825:	48 8b 40 08          	mov    0x8(%rax),%rax
   11829:	83 e0 02             	and    $0x2,%eax
   1182c:	48 85 c0             	test   %rax,%rax
   1182f:	0f 85 18 07 00 00    	jne    11f4d <dlfree+0x100e>
   11835:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1183c:	48 8b 40 28          	mov    0x28(%rax),%rax
   11840:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   11847:	0f 85 b7 00 00 00    	jne    11904 <dlfree+0x9c5>
   1184d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11854:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11858:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1185f:	48 01 c2             	add    %rax,%rdx
   11862:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11869:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1186d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11874:	48 8b 40 10          	mov    0x10(%rax),%rax
   11878:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1187c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11883:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1188a:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1188e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11892:	48 83 c8 01          	or     $0x1,%rax
   11896:	48 89 c2             	mov    %rax,%rdx
   11899:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   118a0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   118a4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   118ab:	48 8b 40 20          	mov    0x20(%rax),%rax
   118af:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   118b6:	75 1e                	jne    118d6 <dlfree+0x997>
   118b8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   118bf:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   118c6:	00 
   118c7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   118ce:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   118d5:	00 
   118d6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   118dd:	48 8b 40 30          	mov    0x30(%rax),%rax
   118e1:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   118e5:	0f 86 47 0b 00 00    	jbe    12432 <dlfree+0x14f3>
   118eb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   118f2:	be 00 00 00 00       	mov    $0x0,%esi
   118f7:	48 89 c7             	mov    %rax,%rdi
   118fa:	e8 cd c2 ff ff       	callq  dbcc <sys_trim>
   118ff:	e9 2e 0b 00 00       	jmpq   12432 <dlfree+0x14f3>
   11904:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1190b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1190f:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   11916:	75 71                	jne    11989 <dlfree+0xa4a>
   11918:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1191f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11923:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1192a:	48 01 c2             	add    %rax,%rdx
   1192d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11934:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11938:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1193f:	48 8b 40 08          	mov    0x8(%rax),%rax
   11943:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11947:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1194e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   11955:	48 89 50 20          	mov    %rdx,0x20(%rax)
   11959:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1195d:	48 83 c8 01          	or     $0x1,%rax
   11961:	48 89 c2             	mov    %rax,%rdx
   11964:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1196b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1196f:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   11976:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1197a:	48 01 c2             	add    %rax,%rdx
   1197d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11981:	48 89 02             	mov    %rax,(%rdx)
   11984:	e9 ad 0a 00 00       	jmpq   12436 <dlfree+0x14f7>
   11989:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11990:	48 8b 40 08          	mov    0x8(%rax),%rax
   11994:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11998:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1199c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   119a0:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
   119a7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   119ab:	48 c1 e8 03          	shr    $0x3,%rax
   119af:	48 83 f8 1f          	cmp    $0x1f,%rax
   119b3:	0f 87 c6 01 00 00    	ja     11b7f <dlfree+0xc40>
   119b9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   119c0:	48 8b 40 10          	mov    0x10(%rax),%rax
   119c4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   119c8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   119cf:	48 8b 40 18          	mov    0x18(%rax),%rax
   119d3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   119d7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   119db:	48 c1 e8 03          	shr    $0x3,%rax
   119df:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
   119e5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   119ec:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   119f0:	75 05                	jne    119f7 <dlfree+0xab8>
   119f2:	e8 e2 9b 02 00       	callq  3b5d9 <abort>
   119f7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   119fe:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   11a02:	75 05                	jne    11a09 <dlfree+0xaca>
   11a04:	e8 d0 9b 02 00       	callq  3b5d9 <abort>
   11a09:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11a10:	48 8b 40 08          	mov    0x8(%rax),%rax
   11a14:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11a18:	48 89 c2             	mov    %rax,%rdx
   11a1b:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   11a21:	c1 e0 03             	shl    $0x3,%eax
   11a24:	89 c0                	mov    %eax,%eax
   11a26:	48 39 c2             	cmp    %rax,%rdx
   11a29:	74 05                	je     11a30 <dlfree+0xaf1>
   11a2b:	e8 a9 9b 02 00       	callq  3b5d9 <abort>
   11a30:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   11a36:	01 c0                	add    %eax,%eax
   11a38:	89 c0                	mov    %eax,%eax
   11a3a:	48 83 c0 08          	add    $0x8,%rax
   11a3e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11a45:	00 
   11a46:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11a4d:	48 01 d0             	add    %rdx,%rax
   11a50:	48 83 c0 08          	add    $0x8,%rax
   11a54:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   11a58:	0f 94 c0             	sete   %al
   11a5b:	0f b6 c0             	movzbl %al,%eax
   11a5e:	48 85 c0             	test   %rax,%rax
   11a61:	75 48                	jne    11aab <dlfree+0xb6c>
   11a63:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11a6a:	48 8b 40 18          	mov    0x18(%rax),%rax
   11a6e:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   11a72:	0f 93 c0             	setae  %al
   11a75:	0f b6 c0             	movzbl %al,%eax
   11a78:	48 85 c0             	test   %rax,%rax
   11a7b:	74 21                	je     11a9e <dlfree+0xb5f>
   11a7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11a81:	48 8b 40 18          	mov    0x18(%rax),%rax
   11a85:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   11a8c:	0f 94 c0             	sete   %al
   11a8f:	0f b6 c0             	movzbl %al,%eax
   11a92:	48 85 c0             	test   %rax,%rax
   11a95:	74 07                	je     11a9e <dlfree+0xb5f>
   11a97:	b8 01 00 00 00       	mov    $0x1,%eax
   11a9c:	eb 05                	jmp    11aa3 <dlfree+0xb64>
   11a9e:	b8 00 00 00 00       	mov    $0x0,%eax
   11aa3:	85 c0                	test   %eax,%eax
   11aa5:	0f 84 cf 00 00 00    	je     11b7a <dlfree+0xc3b>
   11aab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11aaf:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   11ab3:	75 2c                	jne    11ae1 <dlfree+0xba2>
   11ab5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11abc:	8b 10                	mov    (%rax),%edx
   11abe:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   11ac4:	be 01 00 00 00       	mov    $0x1,%esi
   11ac9:	89 c1                	mov    %eax,%ecx
   11acb:	d3 e6                	shl    %cl,%esi
   11acd:	89 f0                	mov    %esi,%eax
   11acf:	f7 d0                	not    %eax
   11ad1:	21 c2                	and    %eax,%edx
   11ad3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11ada:	89 10                	mov    %edx,(%rax)
   11adc:	e9 0d 04 00 00       	jmpq   11eee <dlfree+0xfaf>
   11ae1:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   11ae7:	01 c0                	add    %eax,%eax
   11ae9:	89 c0                	mov    %eax,%eax
   11aeb:	48 83 c0 08          	add    $0x8,%rax
   11aef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11af6:	00 
   11af7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11afe:	48 01 d0             	add    %rdx,%rax
   11b01:	48 83 c0 08          	add    $0x8,%rax
   11b05:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   11b09:	0f 94 c0             	sete   %al
   11b0c:	0f b6 c0             	movzbl %al,%eax
   11b0f:	48 85 c0             	test   %rax,%rax
   11b12:	75 44                	jne    11b58 <dlfree+0xc19>
   11b14:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11b1b:	48 8b 40 18          	mov    0x18(%rax),%rax
   11b1f:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   11b23:	0f 93 c0             	setae  %al
   11b26:	0f b6 c0             	movzbl %al,%eax
   11b29:	48 85 c0             	test   %rax,%rax
   11b2c:	74 21                	je     11b4f <dlfree+0xc10>
   11b2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11b32:	48 8b 40 10          	mov    0x10(%rax),%rax
   11b36:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   11b3d:	0f 94 c0             	sete   %al
   11b40:	0f b6 c0             	movzbl %al,%eax
   11b43:	48 85 c0             	test   %rax,%rax
   11b46:	74 07                	je     11b4f <dlfree+0xc10>
   11b48:	b8 01 00 00 00       	mov    $0x1,%eax
   11b4d:	eb 05                	jmp    11b54 <dlfree+0xc15>
   11b4f:	b8 00 00 00 00       	mov    $0x0,%eax
   11b54:	85 c0                	test   %eax,%eax
   11b56:	74 1d                	je     11b75 <dlfree+0xc36>
   11b58:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11b5c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11b60:	48 89 50 18          	mov    %rdx,0x18(%rax)
   11b64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11b68:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   11b6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   11b70:	e9 79 03 00 00       	jmpq   11eee <dlfree+0xfaf>
   11b75:	e8 5f 9a 02 00       	callq  3b5d9 <abort>
   11b7a:	e8 5a 9a 02 00       	callq  3b5d9 <abort>
   11b7f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11b86:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   11b8a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11b8e:	48 8b 40 30          	mov    0x30(%rax),%rax
   11b92:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   11b96:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11b9a:	48 8b 40 18          	mov    0x18(%rax),%rax
   11b9e:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   11ba2:	0f 84 9e 00 00 00    	je     11c46 <dlfree+0xd07>
   11ba8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11bac:	48 8b 40 10          	mov    0x10(%rax),%rax
   11bb0:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   11bb4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11bb8:	48 8b 40 18          	mov    0x18(%rax),%rax
   11bbc:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   11bc3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11bca:	48 8b 40 18          	mov    0x18(%rax),%rax
   11bce:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   11bd2:	0f 93 c0             	setae  %al
   11bd5:	0f b6 c0             	movzbl %al,%eax
   11bd8:	48 85 c0             	test   %rax,%rax
   11bdb:	74 1e                	je     11bfb <dlfree+0xcbc>
   11bdd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11be1:	48 8b 40 18          	mov    0x18(%rax),%rax
   11be5:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   11be9:	0f 94 c0             	sete   %al
   11bec:	0f b6 c0             	movzbl %al,%eax
   11bef:	48 85 c0             	test   %rax,%rax
   11bf2:	74 07                	je     11bfb <dlfree+0xcbc>
   11bf4:	b8 01 00 00 00       	mov    $0x1,%eax
   11bf9:	eb 05                	jmp    11c00 <dlfree+0xcc1>
   11bfb:	b8 00 00 00 00       	mov    $0x0,%eax
   11c00:	85 c0                	test   %eax,%eax
   11c02:	74 3d                	je     11c41 <dlfree+0xd02>
   11c04:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11c0b:	48 8b 40 10          	mov    0x10(%rax),%rax
   11c0f:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   11c13:	0f 94 c0             	sete   %al
   11c16:	0f b6 c0             	movzbl %al,%eax
   11c19:	48 85 c0             	test   %rax,%rax
   11c1c:	74 23                	je     11c41 <dlfree+0xd02>
   11c1e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11c22:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   11c29:	48 89 50 18          	mov    %rdx,0x18(%rax)
   11c2d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11c34:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   11c38:	48 89 50 10          	mov    %rdx,0x10(%rax)
   11c3c:	e9 f2 00 00 00       	jmpq   11d33 <dlfree+0xdf4>
   11c41:	e8 93 99 02 00       	callq  3b5d9 <abort>
   11c46:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11c4a:	48 83 c0 28          	add    $0x28,%rax
   11c4e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   11c55:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11c5c:	48 8b 00             	mov    (%rax),%rax
   11c5f:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   11c66:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   11c6d:	00 
   11c6e:	75 4f                	jne    11cbf <dlfree+0xd80>
   11c70:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11c74:	48 83 c0 20          	add    $0x20,%rax
   11c78:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   11c7f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11c86:	48 8b 00             	mov    (%rax),%rax
   11c89:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   11c90:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   11c97:	00 
   11c98:	0f 84 95 00 00 00    	je     11d33 <dlfree+0xdf4>
   11c9e:	eb 1f                	jmp    11cbf <dlfree+0xd80>
   11ca0:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   11ca7:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   11cae:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11cb5:	48 8b 00             	mov    (%rax),%rax
   11cb8:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   11cbf:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11cc6:	48 83 c0 28          	add    $0x28,%rax
   11cca:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   11cd1:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   11cd8:	48 8b 00             	mov    (%rax),%rax
   11cdb:	48 85 c0             	test   %rax,%rax
   11cde:	75 c0                	jne    11ca0 <dlfree+0xd61>
   11ce0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11ce7:	48 83 c0 20          	add    $0x20,%rax
   11ceb:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   11cf2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   11cf9:	48 8b 00             	mov    (%rax),%rax
   11cfc:	48 85 c0             	test   %rax,%rax
   11cff:	75 9f                	jne    11ca0 <dlfree+0xd61>
   11d01:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11d08:	48 8b 40 18          	mov    0x18(%rax),%rax
   11d0c:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   11d13:	0f 93 c0             	setae  %al
   11d16:	0f b6 c0             	movzbl %al,%eax
   11d19:	48 85 c0             	test   %rax,%rax
   11d1c:	74 10                	je     11d2e <dlfree+0xdef>
   11d1e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11d25:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   11d2c:	eb 05                	jmp    11d33 <dlfree+0xdf4>
   11d2e:	e8 a6 98 02 00       	callq  3b5d9 <abort>
   11d33:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   11d38:	0f 84 b0 01 00 00    	je     11eee <dlfree+0xfaf>
   11d3e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11d42:	8b 40 38             	mov    0x38(%rax),%eax
   11d45:	89 c0                	mov    %eax,%eax
   11d47:	48 83 c0 4a          	add    $0x4a,%rax
   11d4b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11d52:	00 
   11d53:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11d5a:	48 01 d0             	add    %rdx,%rax
   11d5d:	48 83 c0 08          	add    $0x8,%rax
   11d61:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11d65:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11d69:	48 8b 00             	mov    (%rax),%rax
   11d6c:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   11d70:	75 46                	jne    11db8 <dlfree+0xe79>
   11d72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11d76:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   11d7d:	48 89 10             	mov    %rdx,(%rax)
   11d80:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11d84:	48 8b 00             	mov    (%rax),%rax
   11d87:	48 85 c0             	test   %rax,%rax
   11d8a:	75 7b                	jne    11e07 <dlfree+0xec8>
   11d8c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11d93:	8b 50 04             	mov    0x4(%rax),%edx
   11d96:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11d9a:	8b 40 38             	mov    0x38(%rax),%eax
   11d9d:	be 01 00 00 00       	mov    $0x1,%esi
   11da2:	89 c1                	mov    %eax,%ecx
   11da4:	d3 e6                	shl    %cl,%esi
   11da6:	89 f0                	mov    %esi,%eax
   11da8:	f7 d0                	not    %eax
   11daa:	21 c2                	and    %eax,%edx
   11dac:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11db3:	89 50 04             	mov    %edx,0x4(%rax)
   11db6:	eb 4f                	jmp    11e07 <dlfree+0xec8>
   11db8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11dbf:	48 8b 40 18          	mov    0x18(%rax),%rax
   11dc3:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   11dc7:	0f 93 c0             	setae  %al
   11dca:	0f b6 c0             	movzbl %al,%eax
   11dcd:	48 85 c0             	test   %rax,%rax
   11dd0:	74 30                	je     11e02 <dlfree+0xec3>
   11dd2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11dd6:	48 8b 40 20          	mov    0x20(%rax),%rax
   11dda:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   11dde:	75 11                	jne    11df1 <dlfree+0xeb2>
   11de0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11de4:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   11deb:	48 89 50 20          	mov    %rdx,0x20(%rax)
   11def:	eb 16                	jmp    11e07 <dlfree+0xec8>
   11df1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11df5:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   11dfc:	48 89 50 28          	mov    %rdx,0x28(%rax)
   11e00:	eb 05                	jmp    11e07 <dlfree+0xec8>
   11e02:	e8 d2 97 02 00       	callq  3b5d9 <abort>
   11e07:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   11e0e:	00 
   11e0f:	0f 84 d9 00 00 00    	je     11eee <dlfree+0xfaf>
   11e15:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11e1c:	48 8b 40 18          	mov    0x18(%rax),%rax
   11e20:	48 39 85 f0 fe ff ff 	cmp    %rax,-0x110(%rbp)
   11e27:	0f 93 c0             	setae  %al
   11e2a:	0f b6 c0             	movzbl %al,%eax
   11e2d:	48 85 c0             	test   %rax,%rax
   11e30:	0f 84 b3 00 00 00    	je     11ee9 <dlfree+0xfaa>
   11e36:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11e3d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   11e41:	48 89 50 30          	mov    %rdx,0x30(%rax)
   11e45:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11e49:	48 8b 40 20          	mov    0x20(%rax),%rax
   11e4d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   11e51:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   11e56:	74 3f                	je     11e97 <dlfree+0xf58>
   11e58:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11e5f:	48 8b 40 18          	mov    0x18(%rax),%rax
   11e63:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   11e67:	0f 93 c0             	setae  %al
   11e6a:	0f b6 c0             	movzbl %al,%eax
   11e6d:	48 85 c0             	test   %rax,%rax
   11e70:	74 20                	je     11e92 <dlfree+0xf53>
   11e72:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11e79:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   11e7d:	48 89 50 20          	mov    %rdx,0x20(%rax)
   11e81:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e85:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   11e8c:	48 89 50 30          	mov    %rdx,0x30(%rax)
   11e90:	eb 05                	jmp    11e97 <dlfree+0xf58>
   11e92:	e8 42 97 02 00       	callq  3b5d9 <abort>
   11e97:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11e9b:	48 8b 40 28          	mov    0x28(%rax),%rax
   11e9f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   11ea3:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   11ea8:	74 44                	je     11eee <dlfree+0xfaf>
   11eaa:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11eb1:	48 8b 40 18          	mov    0x18(%rax),%rax
   11eb5:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   11eb9:	0f 93 c0             	setae  %al
   11ebc:	0f b6 c0             	movzbl %al,%eax
   11ebf:	48 85 c0             	test   %rax,%rax
   11ec2:	74 20                	je     11ee4 <dlfree+0xfa5>
   11ec4:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   11ecb:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   11ecf:	48 89 50 28          	mov    %rdx,0x28(%rax)
   11ed3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ed7:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   11ede:	48 89 50 30          	mov    %rdx,0x30(%rax)
   11ee2:	eb 0a                	jmp    11eee <dlfree+0xfaf>
   11ee4:	e8 f0 96 02 00       	callq  3b5d9 <abort>
   11ee9:	e8 eb 96 02 00       	callq  3b5d9 <abort>
   11eee:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11ef5:	48 83 c8 01          	or     $0x1,%rax
   11ef9:	48 89 c2             	mov    %rax,%rdx
   11efc:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11f03:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11f07:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   11f0e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11f15:	48 01 c2             	add    %rax,%rdx
   11f18:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11f1f:	48 89 02             	mov    %rax,(%rdx)
   11f22:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11f29:	48 8b 40 20          	mov    0x20(%rax),%rax
   11f2d:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   11f34:	75 68                	jne    11f9e <dlfree+0x105f>
   11f36:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11f3d:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   11f44:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11f48:	e9 e9 04 00 00       	jmpq   12436 <dlfree+0x14f7>
   11f4d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11f54:	48 8b 40 08          	mov    0x8(%rax),%rax
   11f58:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   11f5c:	48 89 c2             	mov    %rax,%rdx
   11f5f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11f66:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11f6a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11f71:	48 83 c8 01          	or     $0x1,%rax
   11f75:	48 89 c2             	mov    %rax,%rdx
   11f78:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   11f7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11f83:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   11f8a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11f91:	48 01 c2             	add    %rax,%rdx
   11f94:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11f9b:	48 89 02             	mov    %rax,(%rdx)
   11f9e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11fa5:	48 c1 e8 03          	shr    $0x3,%rax
   11fa9:	48 83 f8 1f          	cmp    $0x1f,%rax
   11fad:	0f 87 31 01 00 00    	ja     120e4 <dlfree+0x11a5>
   11fb3:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11fba:	48 c1 e8 03          	shr    $0x3,%rax
   11fbe:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
   11fc4:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   11fca:	01 c0                	add    %eax,%eax
   11fcc:	89 c0                	mov    %eax,%eax
   11fce:	48 83 c0 08          	add    $0x8,%rax
   11fd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11fd9:	00 
   11fda:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11fe1:	48 01 d0             	add    %rdx,%rax
   11fe4:	48 83 c0 08          	add    $0x8,%rax
   11fe8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ff0:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   11ff7:	48 83 bd d0 fe ff ff 	cmpq   $0x1f,-0x130(%rbp)
   11ffe:	1f 
   11fff:	77 05                	ja     12006 <dlfree+0x10c7>
   12001:	e8 d3 95 02 00       	callq  3b5d9 <abort>
   12006:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1200d:	8b 10                	mov    (%rax),%edx
   1200f:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   12015:	be 01 00 00 00       	mov    $0x1,%esi
   1201a:	89 c1                	mov    %eax,%ecx
   1201c:	d3 e6                	shl    %cl,%esi
   1201e:	89 f0                	mov    %esi,%eax
   12020:	21 d0                	and    %edx,%eax
   12022:	85 c0                	test   %eax,%eax
   12024:	75 27                	jne    1204d <dlfree+0x110e>
   12026:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1202d:	8b 10                	mov    (%rax),%edx
   1202f:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   12035:	be 01 00 00 00       	mov    $0x1,%esi
   1203a:	89 c1                	mov    %eax,%ecx
   1203c:	d3 e6                	shl    %cl,%esi
   1203e:	89 f0                	mov    %esi,%eax
   12040:	09 c2                	or     %eax,%edx
   12042:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12049:	89 10                	mov    %edx,(%rax)
   1204b:	eb 37                	jmp    12084 <dlfree+0x1145>
   1204d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12051:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12055:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1205c:	48 8b 40 18          	mov    0x18(%rax),%rax
   12060:	48 39 c2             	cmp    %rax,%rdx
   12063:	0f 93 c0             	setae  %al
   12066:	0f b6 c0             	movzbl %al,%eax
   12069:	48 85 c0             	test   %rax,%rax
   1206c:	74 11                	je     1207f <dlfree+0x1140>
   1206e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12072:	48 8b 40 10          	mov    0x10(%rax),%rax
   12076:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1207d:	eb 05                	jmp    12084 <dlfree+0x1145>
   1207f:	e8 55 95 02 00       	callq  3b5d9 <abort>
   12084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12088:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1208f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12093:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1209a:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   120a1:	48 89 50 18          	mov    %rdx,0x18(%rax)
   120a5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   120ac:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   120b3:	48 89 50 10          	mov    %rdx,0x10(%rax)
   120b7:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   120be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   120c2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   120c6:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   120cd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   120d4:	48 89 d6             	mov    %rdx,%rsi
   120d7:	48 89 c7             	mov    %rax,%rdi
   120da:	e8 08 98 ff ff       	callq  b8e7 <do_check_free_chunk>
   120df:	e9 51 03 00 00       	jmpq   12435 <dlfree+0x14f6>
   120e4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   120eb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   120ef:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   120f6:	48 c1 e8 08          	shr    $0x8,%rax
   120fa:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
   12100:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
   12107:	75 0c                	jne    12115 <dlfree+0x11d6>
   12109:	c7 85 b0 fe ff ff 00 	movl   $0x0,-0x150(%rbp)
   12110:	00 00 00 
   12113:	eb 5d                	jmp    12172 <dlfree+0x1233>
   12115:	81 bd bc fe ff ff ff 	cmpl   $0xffff,-0x144(%rbp)
   1211c:	ff 00 00 
   1211f:	76 0c                	jbe    1212d <dlfree+0x11ee>
   12121:	c7 85 b0 fe ff ff 1f 	movl   $0x1f,-0x150(%rbp)
   12128:	00 00 00 
   1212b:	eb 45                	jmp    12172 <dlfree+0x1233>
   1212d:	0f bd 85 bc fe ff ff 	bsr    -0x144(%rbp),%eax
   12134:	83 f0 1f             	xor    $0x1f,%eax
   12137:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1213c:	29 c2                	sub    %eax,%edx
   1213e:	89 d0                	mov    %edx,%eax
   12140:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   12146:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
   1214c:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1214f:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
   12155:	83 c0 07             	add    $0x7,%eax
   12158:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   1215f:	89 c1                	mov    %eax,%ecx
   12161:	48 d3 ea             	shr    %cl,%rdx
   12164:	48 89 d0             	mov    %rdx,%rax
   12167:	83 e0 01             	and    $0x1,%eax
   1216a:	01 f0                	add    %esi,%eax
   1216c:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
   12172:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   12178:	48 83 c0 4a          	add    $0x4a,%rax
   1217c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12183:	00 
   12184:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1218b:	48 01 d0             	add    %rdx,%rax
   1218e:	48 83 c0 08          	add    $0x8,%rax
   12192:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1219a:	8b 95 b0 fe ff ff    	mov    -0x150(%rbp),%edx
   121a0:	89 50 38             	mov    %edx,0x38(%rax)
   121a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   121a7:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   121ae:	00 
   121af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   121b3:	48 8b 50 28          	mov    0x28(%rax),%rdx
   121b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   121bb:	48 89 50 20          	mov    %rdx,0x20(%rax)
   121bf:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   121c6:	8b 50 04             	mov    0x4(%rax),%edx
   121c9:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   121cf:	be 01 00 00 00       	mov    $0x1,%esi
   121d4:	89 c1                	mov    %eax,%ecx
   121d6:	d3 e6                	shl    %cl,%esi
   121d8:	89 f0                	mov    %esi,%eax
   121da:	21 d0                	and    %edx,%eax
   121dc:	85 c0                	test   %eax,%eax
   121de:	75 5f                	jne    1223f <dlfree+0x1300>
   121e0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   121e7:	8b 50 04             	mov    0x4(%rax),%edx
   121ea:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   121f0:	be 01 00 00 00       	mov    $0x1,%esi
   121f5:	89 c1                	mov    %eax,%ecx
   121f7:	d3 e6                	shl    %cl,%esi
   121f9:	89 f0                	mov    %esi,%eax
   121fb:	09 c2                	or     %eax,%edx
   121fd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12204:	89 50 04             	mov    %edx,0x4(%rax)
   12207:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1220b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1220f:	48 89 10             	mov    %rdx,(%rax)
   12212:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12216:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1221a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1221e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12222:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12226:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1222a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1222e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12232:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12236:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1223a:	e9 96 01 00 00       	jmpq   123d5 <dlfree+0x1496>
   1223f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12243:	48 8b 00             	mov    (%rax),%rax
   12246:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1224d:	83 bd b0 fe ff ff 1f 	cmpl   $0x1f,-0x150(%rbp)
   12254:	74 13                	je     12269 <dlfree+0x132a>
   12256:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   1225c:	d1 e8                	shr    %eax
   1225e:	ba 39 00 00 00       	mov    $0x39,%edx
   12263:	29 c2                	sub    %eax,%edx
   12265:	89 d0                	mov    %edx,%eax
   12267:	eb 05                	jmp    1226e <dlfree+0x132f>
   12269:	b8 00 00 00 00       	mov    $0x0,%eax
   1226e:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   12275:	89 c1                	mov    %eax,%ecx
   12277:	48 d3 e2             	shl    %cl,%rdx
   1227a:	48 89 d0             	mov    %rdx,%rax
   1227d:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   12284:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1228b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1228f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   12293:	48 39 85 d0 fe ff ff 	cmp    %rax,-0x130(%rbp)
   1229a:	0f 84 a2 00 00 00    	je     12342 <dlfree+0x1403>
   122a0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   122a7:	48 c1 e8 3f          	shr    $0x3f,%rax
   122ab:	48 83 c0 04          	add    $0x4,%rax
   122af:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   122b6:	00 
   122b7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   122be:	48 01 d0             	add    %rdx,%rax
   122c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   122c5:	48 d1 a5 18 ff ff ff 	shlq   -0xe8(%rbp)
   122cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   122d0:	48 8b 00             	mov    (%rax),%rax
   122d3:	48 85 c0             	test   %rax,%rax
   122d6:	74 10                	je     122e8 <dlfree+0x13a9>
   122d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   122dc:	48 8b 00             	mov    (%rax),%rax
   122df:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   122e6:	eb 9c                	jmp    12284 <dlfree+0x1345>
   122e8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   122ef:	48 8b 40 18          	mov    0x18(%rax),%rax
   122f3:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   122f7:	0f 93 c0             	setae  %al
   122fa:	0f b6 c0             	movzbl %al,%eax
   122fd:	48 85 c0             	test   %rax,%rax
   12300:	74 3b                	je     1233d <dlfree+0x13fe>
   12302:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12306:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1230a:	48 89 10             	mov    %rdx,(%rax)
   1230d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12311:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   12318:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1231c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12320:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12324:	48 89 50 18          	mov    %rdx,0x18(%rax)
   12328:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1232c:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12330:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12334:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12338:	e9 98 00 00 00       	jmpq   123d5 <dlfree+0x1496>
   1233d:	e8 97 92 02 00       	callq  3b5d9 <abort>
   12342:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   12349:	48 8b 40 10          	mov    0x10(%rax),%rax
   1234d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12351:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12358:	48 8b 40 18          	mov    0x18(%rax),%rax
   1235c:	48 39 85 10 ff ff ff 	cmp    %rax,-0xf0(%rbp)
   12363:	0f 93 c0             	setae  %al
   12366:	0f b6 c0             	movzbl %al,%eax
   12369:	48 85 c0             	test   %rax,%rax
   1236c:	74 62                	je     123d0 <dlfree+0x1491>
   1236e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12375:	48 8b 40 18          	mov    0x18(%rax),%rax
   12379:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1237d:	0f 93 c0             	setae  %al
   12380:	0f b6 c0             	movzbl %al,%eax
   12383:	48 85 c0             	test   %rax,%rax
   12386:	74 48                	je     123d0 <dlfree+0x1491>
   12388:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1238c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12390:	48 89 50 18          	mov    %rdx,0x18(%rax)
   12394:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12398:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1239c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   123a3:	48 89 50 10          	mov    %rdx,0x10(%rax)
   123a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   123af:	48 89 50 10          	mov    %rdx,0x10(%rax)
   123b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123b7:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   123be:	48 89 50 18          	mov    %rdx,0x18(%rax)
   123c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123c6:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   123cd:	00 
   123ce:	eb 05                	jmp    123d5 <dlfree+0x1496>
   123d0:	e8 04 92 02 00       	callq  3b5d9 <abort>
   123d5:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   123dc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   123e3:	48 89 d6             	mov    %rdx,%rsi
   123e6:	48 89 c7             	mov    %rax,%rdi
   123e9:	e8 f9 94 ff ff       	callq  b8e7 <do_check_free_chunk>
   123ee:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   123f5:	48 8b 40 38          	mov    0x38(%rax),%rax
   123f9:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   123fd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12404:	48 89 50 38          	mov    %rdx,0x38(%rax)
   12408:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1240f:	48 8b 40 38          	mov    0x38(%rax),%rax
   12413:	48 85 c0             	test   %rax,%rax
   12416:	75 1d                	jne    12435 <dlfree+0x14f6>
   12418:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1241f:	48 89 c7             	mov    %rax,%rdi
   12422:	e8 22 b7 ff ff       	callq  db49 <release_unused_segments>
   12427:	eb 0c                	jmp    12435 <dlfree+0x14f6>
   12429:	90                   	nop
   1242a:	eb 01                	jmp    1242d <dlfree+0x14ee>
   1242c:	90                   	nop
   1242d:	e8 a7 91 02 00       	callq  3b5d9 <abort>
   12432:	90                   	nop
   12433:	eb 01                	jmp    12436 <dlfree+0x14f7>
   12435:	90                   	nop
   12436:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1243d:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   12443:	83 e0 02             	and    $0x2,%eax
   12446:	85 c0                	test   %eax,%eax
   12448:	74 14                	je     1245e <dlfree+0x151f>
   1244a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12451:	48 05 74 03 00 00    	add    $0x374,%rax
   12457:	ba 00 00 00 00       	mov    $0x0,%edx
   1245c:	89 10                	mov    %edx,(%rax)
   1245e:	90                   	nop
   1245f:	c9                   	leaveq 
   12460:	c3                   	retq   

0000000000012461 <calloc>:
   12461:	55                   	push   %rbp
   12462:	48 89 e5             	mov    %rsp,%rbp
   12465:	48 83 ec 20          	sub    $0x20,%rsp
   12469:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1246d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12471:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12478:	00 
   12479:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1247e:	74 39                	je     124b9 <calloc+0x58>
   12480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12484:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
   12489:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1248d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12491:	48 0b 45 e0          	or     -0x20(%rbp),%rax
   12495:	66 b8 00 00          	mov    $0x0,%ax
   12499:	48 85 c0             	test   %rax,%rax
   1249c:	74 1b                	je     124b9 <calloc+0x58>
   1249e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124a2:	ba 00 00 00 00       	mov    $0x0,%edx
   124a7:	48 f7 75 e8          	divq   -0x18(%rbp)
   124ab:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   124af:	74 08                	je     124b9 <calloc+0x58>
   124b1:	48 c7 45 f0 ff ff ff 	movq   $0xffffffffffffffff,-0x10(%rbp)
   124b8:	ff 
   124b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124bd:	48 89 c7             	mov    %rax,%rdi
   124c0:	e8 83 df ff ff       	callq  10448 <dlmalloc>
   124c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   124c9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   124ce:	74 15                	je     124e5 <calloc+0x84>
   124d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   124d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124d8:	be 00 00 00 00       	mov    $0x0,%esi
   124dd:	48 89 c7             	mov    %rax,%rdi
   124e0:	e8 50 12 00 00       	callq  13735 <memset>
   124e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e9:	c9                   	leaveq 
   124ea:	c3                   	retq   

00000000000124eb <try_realloc_chunk>:
   124eb:	55                   	push   %rbp
   124ec:	48 89 e5             	mov    %rsp,%rbp
   124ef:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   124f6:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
   124fd:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
   12504:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   1250b:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%rbp)
   12511:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
   12518:	00 00 00 00 
   1251c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12523:	48 8b 40 08          	mov    0x8(%rax),%rax
   12527:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1252b:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   12532:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   12539:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   12540:	48 01 d0             	add    %rdx,%rax
   12543:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1254a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12551:	48 8b 40 18          	mov    0x18(%rax),%rax
   12555:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   1255c:	0f 93 c0             	setae  %al
   1255f:	0f b6 c0             	movzbl %al,%eax
   12562:	48 85 c0             	test   %rax,%rax
   12565:	74 24                	je     1258b <try_realloc_chunk+0xa0>
   12567:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1256e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12572:	83 e0 03             	and    $0x3,%eax
   12575:	48 83 f8 01          	cmp    $0x1,%rax
   12579:	0f 95 c0             	setne  %al
   1257c:	0f b6 c0             	movzbl %al,%eax
   1257f:	48 85 c0             	test   %rax,%rax
   12582:	74 07                	je     1258b <try_realloc_chunk+0xa0>
   12584:	b8 01 00 00 00       	mov    $0x1,%eax
   12589:	eb 05                	jmp    12590 <try_realloc_chunk+0xa5>
   1258b:	b8 00 00 00 00       	mov    $0x0,%eax
   12590:	85 c0                	test   %eax,%eax
   12592:	74 20                	je     125b4 <try_realloc_chunk+0xc9>
   12594:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1259b:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
   125a2:	0f 92 c0             	setb   %al
   125a5:	0f b6 c0             	movzbl %al,%eax
   125a8:	48 85 c0             	test   %rax,%rax
   125ab:	74 07                	je     125b4 <try_realloc_chunk+0xc9>
   125ad:	b8 01 00 00 00       	mov    $0x1,%eax
   125b2:	eb 05                	jmp    125b9 <try_realloc_chunk+0xce>
   125b4:	b8 00 00 00 00       	mov    $0x0,%eax
   125b9:	85 c0                	test   %eax,%eax
   125bb:	0f 84 ec 0c 00 00    	je     132ad <try_realloc_chunk+0xdc2>
   125c1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   125c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   125cc:	83 e0 01             	and    $0x1,%eax
   125cf:	48 85 c0             	test   %rax,%rax
   125d2:	0f 95 c0             	setne  %al
   125d5:	0f b6 c0             	movzbl %al,%eax
   125d8:	48 85 c0             	test   %rax,%rax
   125db:	0f 84 cc 0c 00 00    	je     132ad <try_realloc_chunk+0xdc2>
   125e1:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   125e8:	48 8b 40 08          	mov    0x8(%rax),%rax
   125ec:	83 e0 03             	and    $0x3,%eax
   125ef:	48 85 c0             	test   %rax,%rax
   125f2:	75 2f                	jne    12623 <try_realloc_chunk+0x138>
   125f4:	8b 8d f4 fe ff ff    	mov    -0x10c(%rbp),%ecx
   125fa:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   12601:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   12608:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1260f:	48 89 c7             	mov    %rax,%rdi
   12612:	e8 dd 94 ff ff       	callq  baf4 <mmap_resize>
   12617:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1261e:	e9 8f 0c 00 00       	jmpq   132b2 <try_realloc_chunk+0xdc7>
   12623:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1262a:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
   12631:	0f 82 55 01 00 00    	jb     1278c <try_realloc_chunk+0x2a1>
   12637:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1263e:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   12645:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12649:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
   1264e:	0f 86 25 01 00 00    	jbe    12779 <try_realloc_chunk+0x28e>
   12654:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1265b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12662:	48 01 d0             	add    %rdx,%rax
   12665:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12669:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12670:	48 8b 40 08          	mov    0x8(%rax),%rax
   12674:	83 e0 01             	and    $0x1,%eax
   12677:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   1267e:	48 83 c8 02          	or     $0x2,%rax
   12682:	48 89 c2             	mov    %rax,%rdx
   12685:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1268c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12690:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   12697:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1269e:	48 01 d0             	add    %rdx,%rax
   126a1:	48 8b 50 08          	mov    0x8(%rax),%rdx
   126a5:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   126ac:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   126b3:	48 01 c8             	add    %rcx,%rax
   126b6:	48 83 ca 01          	or     $0x1,%rdx
   126ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
   126be:	48 8b 0d 5b 55 03 00 	mov    0x3555b(%rip),%rcx        # 47c20 <mparams>
   126c5:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   126cc:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   126d3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   126da:	48 01 f0             	add    %rsi,%rax
   126dd:	48 31 ca             	xor    %rcx,%rdx
   126e0:	48 89 10             	mov    %rdx,(%rax)
   126e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126e7:	48 8b 40 08          	mov    0x8(%rax),%rax
   126eb:	83 e0 01             	and    $0x1,%eax
   126ee:	48 0b 45 f0          	or     -0x10(%rbp),%rax
   126f2:	48 83 c8 02          	or     $0x2,%rax
   126f6:	48 89 c2             	mov    %rax,%rdx
   126f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12701:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12705:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12709:	48 01 d0             	add    %rdx,%rax
   1270c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12710:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12714:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12718:	48 01 c8             	add    %rcx,%rax
   1271b:	48 83 ca 01          	or     $0x1,%rdx
   1271f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12723:	48 8b 0d f6 54 03 00 	mov    0x354f6(%rip),%rcx        # 47c20 <mparams>
   1272a:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   12731:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   12735:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12739:	48 01 f0             	add    %rsi,%rax
   1273c:	48 31 ca             	xor    %rcx,%rdx
   1273f:	48 89 10             	mov    %rdx,(%rax)
   12742:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12746:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   1274a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1274e:	48 83 c0 10          	add    $0x10,%rax
   12752:	be 00 00 00 00       	mov    $0x0,%esi
   12757:	48 89 c7             	mov    %rax,%rdi
   1275a:	e8 d6 0f 00 00       	callq  13735 <memset>
   1275f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12763:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12767:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1276e:	48 89 ce             	mov    %rcx,%rsi
   12771:	48 89 c7             	mov    %rax,%rdi
   12774:	e8 7f b6 ff ff       	callq  ddf8 <dispose_chunk>
   12779:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12780:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   12787:	e9 26 0b 00 00       	jmpq   132b2 <try_realloc_chunk+0xdc7>
   1278c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12793:	48 8b 40 28          	mov    0x28(%rax),%rax
   12797:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1279e:	0f 85 1d 01 00 00    	jne    128c1 <try_realloc_chunk+0x3d6>
   127a4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   127ab:	48 8b 50 10          	mov    0x10(%rax),%rdx
   127af:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   127b6:	48 01 d0             	add    %rdx,%rax
   127b9:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   127c0:	0f 83 ec 0a 00 00    	jae    132b2 <try_realloc_chunk+0xdc7>
   127c6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   127cd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   127d1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   127d8:	48 01 d0             	add    %rdx,%rax
   127db:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   127df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127e3:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   127ea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   127ee:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   127f5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   127fc:	48 01 d0             	add    %rdx,%rax
   127ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12803:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1280a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1280e:	83 e0 01             	and    $0x1,%eax
   12811:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   12818:	48 83 c8 02          	or     $0x2,%rax
   1281c:	48 89 c2             	mov    %rax,%rdx
   1281f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12826:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1282a:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   12831:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12838:	48 01 d0             	add    %rdx,%rax
   1283b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1283f:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   12846:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1284d:	48 01 c8             	add    %rcx,%rax
   12850:	48 83 ca 01          	or     $0x1,%rdx
   12854:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12858:	48 8b 0d c1 53 03 00 	mov    0x353c1(%rip),%rcx        # 47c20 <mparams>
   1285f:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   12866:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   1286d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12874:	48 01 f0             	add    %rsi,%rax
   12877:	48 31 ca             	xor    %rcx,%rdx
   1287a:	48 89 10             	mov    %rdx,(%rax)
   1287d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12881:	48 83 c8 01          	or     $0x1,%rax
   12885:	48 89 c2             	mov    %rax,%rdx
   12888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1288c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12890:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12897:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1289b:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1289f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   128a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   128aa:	48 89 50 10          	mov    %rdx,0x10(%rax)
   128ae:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   128b5:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   128bc:	e9 f1 09 00 00       	jmpq   132b2 <try_realloc_chunk+0xdc7>
   128c1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   128c8:	48 8b 40 20          	mov    0x20(%rax),%rax
   128cc:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   128d3:	0f 85 fc 01 00 00    	jne    12ad5 <try_realloc_chunk+0x5ea>
   128d9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   128e0:	48 8b 40 08          	mov    0x8(%rax),%rax
   128e4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   128e8:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   128ef:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   128f3:	48 01 d0             	add    %rdx,%rax
   128f6:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   128fd:	0f 87 af 09 00 00    	ja     132b2 <try_realloc_chunk+0xdc7>
   12903:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1290a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1290e:	48 01 d0             	add    %rdx,%rax
   12911:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   12918:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1291c:	48 83 7d b8 1f       	cmpq   $0x1f,-0x48(%rbp)
   12921:	0f 86 fd 00 00 00    	jbe    12a24 <try_realloc_chunk+0x539>
   12927:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1292e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12935:	48 01 d0             	add    %rdx,%rax
   12938:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1293c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12940:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12944:	48 01 d0             	add    %rdx,%rax
   12947:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1294b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12952:	48 8b 40 08          	mov    0x8(%rax),%rax
   12956:	83 e0 01             	and    $0x1,%eax
   12959:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   12960:	48 83 c8 02          	or     $0x2,%rax
   12964:	48 89 c2             	mov    %rax,%rdx
   12967:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1296e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12972:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   12979:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12980:	48 01 d0             	add    %rdx,%rax
   12983:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12987:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   1298e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12995:	48 01 c8             	add    %rcx,%rax
   12998:	48 83 ca 01          	or     $0x1,%rdx
   1299c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   129a0:	48 8b 0d 79 52 03 00 	mov    0x35279(%rip),%rcx        # 47c20 <mparams>
   129a7:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   129ae:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   129b5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   129bc:	48 01 f0             	add    %rsi,%rax
   129bf:	48 31 ca             	xor    %rcx,%rdx
   129c2:	48 89 10             	mov    %rdx,(%rax)
   129c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   129c9:	48 83 c8 01          	or     $0x1,%rax
   129cd:	48 89 c2             	mov    %rax,%rdx
   129d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   129d4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   129d8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   129dc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   129e0:	48 01 c2             	add    %rax,%rdx
   129e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   129e7:	48 89 02             	mov    %rax,(%rdx)
   129ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   129ee:	48 8b 40 08          	mov    0x8(%rax),%rax
   129f2:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   129f6:	48 89 c2             	mov    %rax,%rdx
   129f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   129fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12a01:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12a08:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   12a0c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12a10:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12a17:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12a1b:	48 89 50 20          	mov    %rdx,0x20(%rax)
   12a1f:	e9 9e 00 00 00       	jmpq   12ac2 <try_realloc_chunk+0x5d7>
   12a24:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   12a2b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12a2f:	48 01 d0             	add    %rdx,%rax
   12a32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12a36:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12a3d:	48 8b 40 08          	mov    0x8(%rax),%rax
   12a41:	83 e0 01             	and    $0x1,%eax
   12a44:	48 0b 45 c0          	or     -0x40(%rbp),%rax
   12a48:	48 83 c8 02          	or     $0x2,%rax
   12a4c:	48 89 c2             	mov    %rax,%rdx
   12a4f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12a56:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12a5a:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   12a61:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12a65:	48 01 d0             	add    %rdx,%rax
   12a68:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12a6c:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   12a73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12a77:	48 01 c8             	add    %rcx,%rax
   12a7a:	48 83 ca 01          	or     $0x1,%rdx
   12a7e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12a82:	48 8b 0d 97 51 03 00 	mov    0x35197(%rip),%rcx        # 47c20 <mparams>
   12a89:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   12a90:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   12a97:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12a9b:	48 01 f0             	add    %rsi,%rax
   12a9e:	48 31 ca             	xor    %rcx,%rdx
   12aa1:	48 89 10             	mov    %rdx,(%rax)
   12aa4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12aab:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12ab2:	00 
   12ab3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12aba:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   12ac1:	00 
   12ac2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   12ac9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   12ad0:	e9 dd 07 00 00       	jmpq   132b2 <try_realloc_chunk+0xdc7>
   12ad5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12adc:	48 8b 40 08          	mov    0x8(%rax),%rax
   12ae0:	83 e0 02             	and    $0x2,%eax
   12ae3:	48 85 c0             	test   %rax,%rax
   12ae6:	0f 85 c6 07 00 00    	jne    132b2 <try_realloc_chunk+0xdc7>
   12aec:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12af3:	48 8b 40 08          	mov    0x8(%rax),%rax
   12af7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   12afb:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   12b02:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   12b09:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12b10:	48 01 d0             	add    %rdx,%rax
   12b13:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   12b1a:	0f 87 92 07 00 00    	ja     132b2 <try_realloc_chunk+0xdc7>
   12b20:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   12b27:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12b2e:	48 01 d0             	add    %rdx,%rax
   12b31:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   12b38:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   12b3f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12b46:	48 c1 e8 03          	shr    $0x3,%rax
   12b4a:	48 83 f8 1f          	cmp    $0x1f,%rax
   12b4e:	0f 87 c9 01 00 00    	ja     12d1d <try_realloc_chunk+0x832>
   12b54:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12b5b:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b5f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   12b63:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12b6a:	48 8b 40 18          	mov    0x18(%rax),%rax
   12b6e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   12b72:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12b79:	48 c1 e8 03          	shr    $0x3,%rax
   12b7d:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   12b83:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12b8a:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
   12b8e:	75 05                	jne    12b95 <try_realloc_chunk+0x6aa>
   12b90:	e8 44 8a 02 00       	callq  3b5d9 <abort>
   12b95:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12b9c:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
   12ba0:	75 05                	jne    12ba7 <try_realloc_chunk+0x6bc>
   12ba2:	e8 32 8a 02 00       	callq  3b5d9 <abort>
   12ba7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12bae:	48 8b 40 08          	mov    0x8(%rax),%rax
   12bb2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   12bb6:	48 89 c2             	mov    %rax,%rdx
   12bb9:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   12bbf:	c1 e0 03             	shl    $0x3,%eax
   12bc2:	89 c0                	mov    %eax,%eax
   12bc4:	48 39 c2             	cmp    %rax,%rdx
   12bc7:	74 05                	je     12bce <try_realloc_chunk+0x6e3>
   12bc9:	e8 0b 8a 02 00       	callq  3b5d9 <abort>
   12bce:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   12bd4:	01 c0                	add    %eax,%eax
   12bd6:	89 c0                	mov    %eax,%eax
   12bd8:	48 83 c0 08          	add    $0x8,%rax
   12bdc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12be3:	00 
   12be4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12beb:	48 01 d0             	add    %rdx,%rax
   12bee:	48 83 c0 08          	add    $0x8,%rax
   12bf2:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   12bf6:	0f 94 c0             	sete   %al
   12bf9:	0f b6 c0             	movzbl %al,%eax
   12bfc:	48 85 c0             	test   %rax,%rax
   12bff:	75 48                	jne    12c49 <try_realloc_chunk+0x75e>
   12c01:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12c08:	48 8b 40 18          	mov    0x18(%rax),%rax
   12c0c:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   12c10:	0f 93 c0             	setae  %al
   12c13:	0f b6 c0             	movzbl %al,%eax
   12c16:	48 85 c0             	test   %rax,%rax
   12c19:	74 21                	je     12c3c <try_realloc_chunk+0x751>
   12c1b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12c1f:	48 8b 40 18          	mov    0x18(%rax),%rax
   12c23:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   12c2a:	0f 94 c0             	sete   %al
   12c2d:	0f b6 c0             	movzbl %al,%eax
   12c30:	48 85 c0             	test   %rax,%rax
   12c33:	74 07                	je     12c3c <try_realloc_chunk+0x751>
   12c35:	b8 01 00 00 00       	mov    $0x1,%eax
   12c3a:	eb 05                	jmp    12c41 <try_realloc_chunk+0x756>
   12c3c:	b8 00 00 00 00       	mov    $0x0,%eax
   12c41:	85 c0                	test   %eax,%eax
   12c43:	0f 84 cf 00 00 00    	je     12d18 <try_realloc_chunk+0x82d>
   12c49:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c4d:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
   12c51:	75 2c                	jne    12c7f <try_realloc_chunk+0x794>
   12c53:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12c5a:	8b 10                	mov    (%rax),%edx
   12c5c:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   12c62:	be 01 00 00 00       	mov    $0x1,%esi
   12c67:	89 c1                	mov    %eax,%ecx
   12c69:	d3 e6                	shl    %cl,%esi
   12c6b:	89 f0                	mov    %esi,%eax
   12c6d:	f7 d0                	not    %eax
   12c6f:	21 c2                	and    %eax,%edx
   12c71:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12c78:	89 10                	mov    %edx,(%rax)
   12c7a:	e9 71 04 00 00       	jmpq   130f0 <try_realloc_chunk+0xc05>
   12c7f:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   12c85:	01 c0                	add    %eax,%eax
   12c87:	89 c0                	mov    %eax,%eax
   12c89:	48 83 c0 08          	add    $0x8,%rax
   12c8d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12c94:	00 
   12c95:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12c9c:	48 01 d0             	add    %rdx,%rax
   12c9f:	48 83 c0 08          	add    $0x8,%rax
   12ca3:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   12ca7:	0f 94 c0             	sete   %al
   12caa:	0f b6 c0             	movzbl %al,%eax
   12cad:	48 85 c0             	test   %rax,%rax
   12cb0:	75 44                	jne    12cf6 <try_realloc_chunk+0x80b>
   12cb2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12cb9:	48 8b 40 18          	mov    0x18(%rax),%rax
   12cbd:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   12cc1:	0f 93 c0             	setae  %al
   12cc4:	0f b6 c0             	movzbl %al,%eax
   12cc7:	48 85 c0             	test   %rax,%rax
   12cca:	74 21                	je     12ced <try_realloc_chunk+0x802>
   12ccc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12cd0:	48 8b 40 10          	mov    0x10(%rax),%rax
   12cd4:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   12cdb:	0f 94 c0             	sete   %al
   12cde:	0f b6 c0             	movzbl %al,%eax
   12ce1:	48 85 c0             	test   %rax,%rax
   12ce4:	74 07                	je     12ced <try_realloc_chunk+0x802>
   12ce6:	b8 01 00 00 00       	mov    $0x1,%eax
   12ceb:	eb 05                	jmp    12cf2 <try_realloc_chunk+0x807>
   12ced:	b8 00 00 00 00       	mov    $0x0,%eax
   12cf2:	85 c0                	test   %eax,%eax
   12cf4:	74 1d                	je     12d13 <try_realloc_chunk+0x828>
   12cf6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12cfa:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12cfe:	48 89 50 18          	mov    %rdx,0x18(%rax)
   12d02:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d06:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   12d0a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12d0e:	e9 dd 03 00 00       	jmpq   130f0 <try_realloc_chunk+0xc05>
   12d13:	e8 c1 88 02 00       	callq  3b5d9 <abort>
   12d18:	e8 bc 88 02 00       	callq  3b5d9 <abort>
   12d1d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   12d24:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   12d2b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12d32:	48 8b 40 30          	mov    0x30(%rax),%rax
   12d36:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   12d3d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12d44:	48 8b 40 18          	mov    0x18(%rax),%rax
   12d48:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   12d4f:	0f 84 b9 00 00 00    	je     12e0e <try_realloc_chunk+0x923>
   12d55:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12d5c:	48 8b 40 10          	mov    0x10(%rax),%rax
   12d60:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   12d67:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12d6e:	48 8b 40 18          	mov    0x18(%rax),%rax
   12d72:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   12d79:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12d80:	48 8b 40 18          	mov    0x18(%rax),%rax
   12d84:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   12d8b:	0f 93 c0             	setae  %al
   12d8e:	0f b6 c0             	movzbl %al,%eax
   12d91:	48 85 c0             	test   %rax,%rax
   12d94:	74 24                	je     12dba <try_realloc_chunk+0x8cf>
   12d96:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12d9d:	48 8b 40 18          	mov    0x18(%rax),%rax
   12da1:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   12da8:	0f 94 c0             	sete   %al
   12dab:	0f b6 c0             	movzbl %al,%eax
   12dae:	48 85 c0             	test   %rax,%rax
   12db1:	74 07                	je     12dba <try_realloc_chunk+0x8cf>
   12db3:	b8 01 00 00 00       	mov    $0x1,%eax
   12db8:	eb 05                	jmp    12dbf <try_realloc_chunk+0x8d4>
   12dba:	b8 00 00 00 00       	mov    $0x0,%eax
   12dbf:	85 c0                	test   %eax,%eax
   12dc1:	74 46                	je     12e09 <try_realloc_chunk+0x91e>
   12dc3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   12dca:	48 8b 40 10          	mov    0x10(%rax),%rax
   12dce:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   12dd5:	0f 94 c0             	sete   %al
   12dd8:	0f b6 c0             	movzbl %al,%eax
   12ddb:	48 85 c0             	test   %rax,%rax
   12dde:	74 29                	je     12e09 <try_realloc_chunk+0x91e>
   12de0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12de7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12dee:	48 89 50 18          	mov    %rdx,0x18(%rax)
   12df2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   12df9:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   12e00:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12e04:	e9 f8 00 00 00       	jmpq   12f01 <try_realloc_chunk+0xa16>
   12e09:	e8 cb 87 02 00       	callq  3b5d9 <abort>
   12e0e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12e15:	48 83 c0 28          	add    $0x28,%rax
   12e19:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   12e20:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   12e27:	48 8b 00             	mov    (%rax),%rax
   12e2a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   12e31:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   12e38:	00 
   12e39:	75 52                	jne    12e8d <try_realloc_chunk+0x9a2>
   12e3b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12e42:	48 83 c0 20          	add    $0x20,%rax
   12e46:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   12e4d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   12e54:	48 8b 00             	mov    (%rax),%rax
   12e57:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   12e5e:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   12e65:	00 
   12e66:	0f 84 95 00 00 00    	je     12f01 <try_realloc_chunk+0xa16>
   12e6c:	eb 1f                	jmp    12e8d <try_realloc_chunk+0x9a2>
   12e6e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   12e75:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   12e7c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   12e83:	48 8b 00             	mov    (%rax),%rax
   12e86:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   12e8d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   12e94:	48 83 c0 28          	add    $0x28,%rax
   12e98:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   12e9f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   12ea6:	48 8b 00             	mov    (%rax),%rax
   12ea9:	48 85 c0             	test   %rax,%rax
   12eac:	75 c0                	jne    12e6e <try_realloc_chunk+0x983>
   12eae:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   12eb5:	48 83 c0 20          	add    $0x20,%rax
   12eb9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   12ec0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   12ec7:	48 8b 00             	mov    (%rax),%rax
   12eca:	48 85 c0             	test   %rax,%rax
   12ecd:	75 9f                	jne    12e6e <try_realloc_chunk+0x983>
   12ecf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12ed6:	48 8b 40 18          	mov    0x18(%rax),%rax
   12eda:	48 39 85 30 ff ff ff 	cmp    %rax,-0xd0(%rbp)
   12ee1:	0f 93 c0             	setae  %al
   12ee4:	0f b6 c0             	movzbl %al,%eax
   12ee7:	48 85 c0             	test   %rax,%rax
   12eea:	74 10                	je     12efc <try_realloc_chunk+0xa11>
   12eec:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   12ef3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12efa:	eb 05                	jmp    12f01 <try_realloc_chunk+0xa16>
   12efc:	e8 d8 86 02 00       	callq  3b5d9 <abort>
   12f01:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   12f08:	00 
   12f09:	0f 84 e1 01 00 00    	je     130f0 <try_realloc_chunk+0xc05>
   12f0f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12f16:	8b 40 38             	mov    0x38(%rax),%eax
   12f19:	89 c0                	mov    %eax,%eax
   12f1b:	48 83 c0 4a          	add    $0x4a,%rax
   12f1f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12f26:	00 
   12f27:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12f2e:	48 01 d0             	add    %rdx,%rax
   12f31:	48 83 c0 08          	add    $0x8,%rax
   12f35:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   12f3c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   12f43:	48 8b 00             	mov    (%rax),%rax
   12f46:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   12f4d:	75 53                	jne    12fa2 <try_realloc_chunk+0xab7>
   12f4f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   12f56:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12f5d:	48 89 10             	mov    %rdx,(%rax)
   12f60:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   12f67:	48 8b 00             	mov    (%rax),%rax
   12f6a:	48 85 c0             	test   %rax,%rax
   12f6d:	0f 85 8d 00 00 00    	jne    13000 <try_realloc_chunk+0xb15>
   12f73:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12f7a:	8b 50 04             	mov    0x4(%rax),%edx
   12f7d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   12f84:	8b 40 38             	mov    0x38(%rax),%eax
   12f87:	be 01 00 00 00       	mov    $0x1,%esi
   12f8c:	89 c1                	mov    %eax,%ecx
   12f8e:	d3 e6                	shl    %cl,%esi
   12f90:	89 f0                	mov    %esi,%eax
   12f92:	f7 d0                	not    %eax
   12f94:	21 c2                	and    %eax,%edx
   12f96:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12f9d:	89 50 04             	mov    %edx,0x4(%rax)
   12fa0:	eb 5e                	jmp    13000 <try_realloc_chunk+0xb15>
   12fa2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   12fa9:	48 8b 40 18          	mov    0x18(%rax),%rax
   12fad:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   12fb4:	0f 93 c0             	setae  %al
   12fb7:	0f b6 c0             	movzbl %al,%eax
   12fba:	48 85 c0             	test   %rax,%rax
   12fbd:	74 3c                	je     12ffb <try_realloc_chunk+0xb10>
   12fbf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   12fc6:	48 8b 40 20          	mov    0x20(%rax),%rax
   12fca:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   12fd1:	75 14                	jne    12fe7 <try_realloc_chunk+0xafc>
   12fd3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   12fda:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12fe1:	48 89 50 20          	mov    %rdx,0x20(%rax)
   12fe5:	eb 19                	jmp    13000 <try_realloc_chunk+0xb15>
   12fe7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   12fee:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12ff5:	48 89 50 28          	mov    %rdx,0x28(%rax)
   12ff9:	eb 05                	jmp    13000 <try_realloc_chunk+0xb15>
   12ffb:	e8 d9 85 02 00       	callq  3b5d9 <abort>
   13000:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   13007:	00 
   13008:	0f 84 e2 00 00 00    	je     130f0 <try_realloc_chunk+0xc05>
   1300e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   13015:	48 8b 40 18          	mov    0x18(%rax),%rax
   13019:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   13020:	0f 93 c0             	setae  %al
   13023:	0f b6 c0             	movzbl %al,%eax
   13026:	48 85 c0             	test   %rax,%rax
   13029:	0f 84 bc 00 00 00    	je     130eb <try_realloc_chunk+0xc00>
   1302f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   13036:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1303d:	48 89 50 30          	mov    %rdx,0x30(%rax)
   13041:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   13048:	48 8b 40 20          	mov    0x20(%rax),%rax
   1304c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   13050:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   13055:	74 3f                	je     13096 <try_realloc_chunk+0xbab>
   13057:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1305e:	48 8b 40 18          	mov    0x18(%rax),%rax
   13062:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   13066:	0f 93 c0             	setae  %al
   13069:	0f b6 c0             	movzbl %al,%eax
   1306c:	48 85 c0             	test   %rax,%rax
   1306f:	74 20                	je     13091 <try_realloc_chunk+0xba6>
   13071:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   13078:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1307c:	48 89 50 20          	mov    %rdx,0x20(%rax)
   13080:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13084:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1308b:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1308f:	eb 05                	jmp    13096 <try_realloc_chunk+0xbab>
   13091:	e8 43 85 02 00       	callq  3b5d9 <abort>
   13096:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1309d:	48 8b 40 28          	mov    0x28(%rax),%rax
   130a1:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   130a5:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   130aa:	74 44                	je     130f0 <try_realloc_chunk+0xc05>
   130ac:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   130b3:	48 8b 40 18          	mov    0x18(%rax),%rax
   130b7:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   130bb:	0f 93 c0             	setae  %al
   130be:	0f b6 c0             	movzbl %al,%eax
   130c1:	48 85 c0             	test   %rax,%rax
   130c4:	74 20                	je     130e6 <try_realloc_chunk+0xbfb>
   130c6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   130cd:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   130d1:	48 89 50 28          	mov    %rdx,0x28(%rax)
   130d5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   130d9:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   130e0:	48 89 50 30          	mov    %rdx,0x30(%rax)
   130e4:	eb 0a                	jmp    130f0 <try_realloc_chunk+0xc05>
   130e6:	e8 ee 84 02 00       	callq  3b5d9 <abort>
   130eb:	e8 e9 84 02 00       	callq  3b5d9 <abort>
   130f0:	48 83 bd 58 ff ff ff 	cmpq   $0x1f,-0xa8(%rbp)
   130f7:	1f 
   130f8:	0f 87 88 00 00 00    	ja     13186 <try_realloc_chunk+0xc9b>
   130fe:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   13105:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1310c:	48 01 d0             	add    %rdx,%rax
   1310f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   13113:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1311a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1311e:	83 e0 01             	and    $0x1,%eax
   13121:	48 0b 45 a8          	or     -0x58(%rbp),%rax
   13125:	48 83 c8 02          	or     $0x2,%rax
   13129:	48 89 c2             	mov    %rax,%rdx
   1312c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   13133:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13137:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1313e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13142:	48 01 d0             	add    %rdx,%rax
   13145:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13149:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   13150:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13154:	48 01 c8             	add    %rcx,%rax
   13157:	48 83 ca 01          	or     $0x1,%rdx
   1315b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1315f:	48 8b 0d ba 4a 03 00 	mov    0x34aba(%rip),%rcx        # 47c20 <mparams>
   13166:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1316d:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   13174:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13178:	48 01 f0             	add    %rsi,%rax
   1317b:	48 31 ca             	xor    %rcx,%rdx
   1317e:	48 89 10             	mov    %rdx,(%rax)
   13181:	e9 17 01 00 00       	jmpq   1329d <try_realloc_chunk+0xdb2>
   13186:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1318d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13194:	48 01 d0             	add    %rdx,%rax
   13197:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1319b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   131a2:	48 8b 40 08          	mov    0x8(%rax),%rax
   131a6:	83 e0 01             	and    $0x1,%eax
   131a9:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   131b0:	48 83 c8 02          	or     $0x2,%rax
   131b4:	48 89 c2             	mov    %rax,%rdx
   131b7:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   131be:	48 89 50 08          	mov    %rdx,0x8(%rax)
   131c2:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   131c9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   131d0:	48 01 d0             	add    %rdx,%rax
   131d3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   131d7:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   131de:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   131e5:	48 01 c8             	add    %rcx,%rax
   131e8:	48 83 ca 01          	or     $0x1,%rdx
   131ec:	48 89 50 08          	mov    %rdx,0x8(%rax)
   131f0:	48 8b 0d 29 4a 03 00 	mov    0x34a29(%rip),%rcx        # 47c20 <mparams>
   131f7:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   131fe:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   13205:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1320c:	48 01 f0             	add    %rsi,%rax
   1320f:	48 31 ca             	xor    %rcx,%rdx
   13212:	48 89 10             	mov    %rdx,(%rax)
   13215:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13219:	48 8b 40 08          	mov    0x8(%rax),%rax
   1321d:	83 e0 01             	and    $0x1,%eax
   13220:	48 0b 85 58 ff ff ff 	or     -0xa8(%rbp),%rax
   13227:	48 83 c8 02          	or     $0x2,%rax
   1322b:	48 89 c2             	mov    %rax,%rdx
   1322e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13232:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13236:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1323a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   13241:	48 01 d0             	add    %rdx,%rax
   13244:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13248:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1324c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   13253:	48 01 c8             	add    %rcx,%rax
   13256:	48 83 ca 01          	or     $0x1,%rdx
   1325a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1325e:	48 8b 0d bb 49 03 00 	mov    0x349bb(%rip),%rcx        # 47c20 <mparams>
   13265:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1326c:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   13270:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   13277:	48 01 f0             	add    %rsi,%rax
   1327a:	48 31 ca             	xor    %rcx,%rdx
   1327d:	48 89 10             	mov    %rdx,(%rax)
   13280:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   13287:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1328b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   13292:	48 89 ce             	mov    %rcx,%rsi
   13295:	48 89 c7             	mov    %rax,%rdi
   13298:	e8 5b ab ff ff       	callq  ddf8 <dispose_chunk>
   1329d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   132a4:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   132ab:	eb 05                	jmp    132b2 <try_realloc_chunk+0xdc7>
   132ad:	e8 27 83 02 00       	callq  3b5d9 <abort>
   132b2:	90                   	nop
   132b3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   132ba:	c9                   	leaveq 
   132bb:	c3                   	retq   

00000000000132bc <dlrealloc>:
   132bc:	55                   	push   %rbp
   132bd:	48 89 e5             	mov    %rsp,%rbp
   132c0:	48 83 ec 40          	sub    $0x40,%rsp
   132c4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   132c8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   132cc:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   132d3:	00 
   132d4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   132d9:	75 15                	jne    132f0 <dlrealloc+0x34>
   132db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   132df:	48 89 c7             	mov    %rax,%rdi
   132e2:	e8 61 d1 ff ff       	callq  10448 <dlmalloc>
   132e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   132eb:	e9 b3 01 00 00       	jmpq   134a3 <dlrealloc+0x1e7>
   132f0:	48 81 7d c0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x40(%rbp)
   132f7:	ff 
   132f8:	76 10                	jbe    1330a <dlrealloc+0x4e>
   132fa:	e8 a5 15 00 00       	callq  148a4 <__errno>
   132ff:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   13305:	e9 99 01 00 00       	jmpq   134a3 <dlrealloc+0x1e7>
   1330a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1330f:	75 11                	jne    13322 <dlrealloc+0x66>
   13311:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13315:	48 89 c7             	mov    %rax,%rdi
   13318:	e8 22 dc ff ff       	callq  10f3f <dlfree>
   1331d:	e9 81 01 00 00       	jmpq   134a3 <dlrealloc+0x1e7>
   13322:	48 83 7d c0 0e       	cmpq   $0xe,-0x40(%rbp)
   13327:	76 0e                	jbe    13337 <dlrealloc+0x7b>
   13329:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1332d:	48 83 c0 1f          	add    $0x1f,%rax
   13331:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   13335:	eb 05                	jmp    1333c <dlrealloc+0x80>
   13337:	b8 20 00 00 00       	mov    $0x20,%eax
   1333c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13340:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13344:	48 83 e8 10          	sub    $0x10,%rax
   13348:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1334c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13350:	48 8b 40 08          	mov    0x8(%rax),%rax
   13354:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   13358:	48 89 c2             	mov    %rax,%rdx
   1335b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1335f:	48 01 d0             	add    %rdx,%rax
   13362:	48 8b 10             	mov    (%rax),%rdx
   13365:	48 8b 05 b4 48 03 00 	mov    0x348b4(%rip),%rax        # 47c20 <mparams>
   1336c:	48 31 d0             	xor    %rdx,%rax
   1336f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13377:	48 8b 50 40          	mov    0x40(%rax),%rdx
   1337b:	48 8b 05 9e 48 03 00 	mov    0x3489e(%rip),%rax        # 47c20 <mparams>
   13382:	48 39 c2             	cmp    %rax,%rdx
   13385:	74 05                	je     1338c <dlrealloc+0xd0>
   13387:	e8 4d 82 02 00       	callq  3b5d9 <abort>
   1338c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13390:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   13396:	83 e0 02             	and    $0x2,%eax
   13399:	85 c0                	test   %eax,%eax
   1339b:	74 30                	je     133cd <dlrealloc+0x111>
   1339d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133a1:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   133a8:	b8 01 00 00 00       	mov    $0x1,%eax
   133ad:	87 02                	xchg   %eax,(%rdx)
   133af:	85 c0                	test   %eax,%eax
   133b1:	74 1a                	je     133cd <dlrealloc+0x111>
   133b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133b7:	48 05 74 03 00 00    	add    $0x374,%rax
   133bd:	48 89 c7             	mov    %rax,%rdi
   133c0:	e8 ec 80 ff ff       	callq  b4b1 <spin_acquire_lock>
   133c5:	85 c0                	test   %eax,%eax
   133c7:	0f 85 d6 00 00 00    	jne    134a3 <dlrealloc+0x1e7>
   133cd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   133d1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   133d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133d9:	b9 01 00 00 00       	mov    $0x1,%ecx
   133de:	48 89 c7             	mov    %rax,%rdi
   133e1:	e8 05 f1 ff ff       	callq  124eb <try_realloc_chunk>
   133e6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   133ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133ee:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   133f4:	83 e0 02             	and    $0x2,%eax
   133f7:	85 c0                	test   %eax,%eax
   133f9:	74 11                	je     1340c <dlrealloc+0x150>
   133fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133ff:	48 05 74 03 00 00    	add    $0x374,%rax
   13405:	ba 00 00 00 00       	mov    $0x0,%edx
   1340a:	89 10                	mov    %edx,(%rax)
   1340c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13411:	74 21                	je     13434 <dlrealloc+0x178>
   13413:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13417:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1341b:	48 89 d6             	mov    %rdx,%rsi
   1341e:	48 89 c7             	mov    %rax,%rdi
   13421:	e8 eb 83 ff ff       	callq  b811 <do_check_inuse_chunk>
   13426:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1342a:	48 83 c0 10          	add    $0x10,%rax
   1342e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13432:	eb 6f                	jmp    134a3 <dlrealloc+0x1e7>
   13434:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13438:	48 89 c7             	mov    %rax,%rdi
   1343b:	e8 08 d0 ff ff       	callq  10448 <dlmalloc>
   13440:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13444:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13449:	74 58                	je     134a3 <dlrealloc+0x1e7>
   1344b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1344f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13453:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   13457:	48 83 e8 10          	sub    $0x10,%rax
   1345b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1345f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13463:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   13467:	48 0f 46 45 c0       	cmovbe -0x40(%rbp),%rax
   1346c:	48 89 c2             	mov    %rax,%rdx
   1346f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   13473:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13477:	48 89 ce             	mov    %rcx,%rsi
   1347a:	48 89 c7             	mov    %rax,%rdi
   1347d:	e8 45 02 00 00       	callq  136c7 <memcpy>
   13482:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13486:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1348a:	be 00 00 00 00       	mov    $0x0,%esi
   1348f:	48 89 c7             	mov    %rax,%rdi
   13492:	e8 9e 02 00 00       	callq  13735 <memset>
   13497:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1349b:	48 89 c7             	mov    %rax,%rdi
   1349e:	e8 9c da ff ff       	callq  10f3f <dlfree>
   134a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   134a7:	c9                   	leaveq 
   134a8:	c3                   	retq   

00000000000134a9 <__memcmp>:
   134a9:	55                   	push   %rbp
   134aa:	48 89 e5             	mov    %rsp,%rbp
   134ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   134b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   134b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   134b9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   134be:	74 62                	je     13522 <__memcmp+0x79>
   134c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   134c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   134cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   134d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   134d4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   134d8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   134dc:	0f b6 08             	movzbl (%rax),%ecx
   134df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134e3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   134e7:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   134eb:	0f b6 00             	movzbl (%rax),%eax
   134ee:	38 c1                	cmp    %al,%cl
   134f0:	74 24                	je     13516 <__memcmp+0x6d>
   134f2:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   134f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   134fb:	0f b6 00             	movzbl (%rax),%eax
   134fe:	0f b6 d0             	movzbl %al,%edx
   13501:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   13506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1350a:	0f b6 00             	movzbl (%rax),%eax
   1350d:	0f b6 c0             	movzbl %al,%eax
   13510:	29 c2                	sub    %eax,%edx
   13512:	89 d0                	mov    %edx,%eax
   13514:	eb 11                	jmp    13527 <__memcmp+0x7e>
   13516:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   1351b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   13520:	75 ae                	jne    134d0 <__memcmp+0x27>
   13522:	b8 00 00 00 00       	mov    $0x0,%eax
   13527:	5d                   	pop    %rbp
   13528:	c3                   	retq   

0000000000013529 <memcmp>:
   13529:	55                   	push   %rbp
   1352a:	48 89 e5             	mov    %rsp,%rbp
   1352d:	48 83 ec 18          	sub    $0x18,%rsp
   13531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13535:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13539:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1353d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13541:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13549:	48 89 ce             	mov    %rcx,%rsi
   1354c:	48 89 c7             	mov    %rax,%rdi
   1354f:	e8 55 ff ff ff       	callq  134a9 <__memcmp>
   13554:	c9                   	leaveq 
   13555:	c3                   	retq   

0000000000013556 <__memcpy>:
   13556:	55                   	push   %rbp
   13557:	48 89 e5             	mov    %rsp,%rbp
   1355a:	48 83 ec 40          	sub    $0x40,%rsp
   1355e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13562:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13566:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1356a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1356e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13572:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13576:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1357a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1357f:	0f 84 3b 01 00 00    	je     136c0 <__memcpy+0x16a>
   13585:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13589:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1358d:	0f 84 2d 01 00 00    	je     136c0 <__memcpy+0x16a>
   13593:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13597:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1359b:	73 11                	jae    135ae <__memcpy+0x58>
   1359d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   135a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   135a5:	48 01 d0             	add    %rdx,%rax
   135a8:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   135ac:	72 1b                	jb     135c9 <__memcpy+0x73>
   135ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135b2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   135b6:	73 16                	jae    135ce <__memcpy+0x78>
   135b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   135c0:	48 01 d0             	add    %rdx,%rax
   135c3:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   135c7:	73 05                	jae    135ce <__memcpy+0x78>
   135c9:	e8 0b 80 02 00       	callq  3b5d9 <abort>
   135ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   135d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135da:	48 0b 45 f8          	or     -0x8(%rbp),%rax
   135de:	83 e0 07             	and    $0x7,%eax
   135e1:	48 85 c0             	test   %rax,%rax
   135e4:	74 68                	je     1364e <__memcpy+0xf8>
   135e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135ea:	48 33 45 f8          	xor    -0x8(%rbp),%rax
   135ee:	83 e0 07             	and    $0x7,%eax
   135f1:	48 85 c0             	test   %rax,%rax
   135f4:	75 07                	jne    135fd <__memcpy+0xa7>
   135f6:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   135fb:	77 0a                	ja     13607 <__memcpy+0xb1>
   135fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13601:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13605:	eb 16                	jmp    1361d <__memcpy+0xc7>
   13607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1360b:	83 e0 07             	and    $0x7,%eax
   1360e:	ba 08 00 00 00       	mov    $0x8,%edx
   13613:	48 29 c2             	sub    %rax,%rdx
   13616:	48 89 d0             	mov    %rdx,%rax
   13619:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1361d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13621:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   13625:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13629:	48 8d 42 01          	lea    0x1(%rdx),%rax
   1362d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13635:	48 8d 48 01          	lea    0x1(%rax),%rcx
   13639:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   1363d:	0f b6 12             	movzbl (%rdx),%edx
   13640:	88 10                	mov    %dl,(%rax)
   13642:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   13647:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1364c:	75 d7                	jne    13625 <__memcpy+0xcf>
   1364e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13652:	48 c1 e8 03          	shr    $0x3,%rax
   13656:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1365a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1365f:	74 24                	je     13685 <__memcpy+0x12f>
   13661:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13665:	48 8b 10             	mov    (%rax),%rdx
   13668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1366c:	48 89 10             	mov    %rdx,(%rax)
   1366f:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
   13674:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   13679:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1367e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13683:	75 dc                	jne    13661 <__memcpy+0x10b>
   13685:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13689:	83 e0 07             	and    $0x7,%eax
   1368c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13690:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13695:	74 29                	je     136c0 <__memcpy+0x16a>
   13697:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1369b:	48 8d 42 01          	lea    0x1(%rdx),%rax
   1369f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   136a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136a7:	48 8d 48 01          	lea    0x1(%rax),%rcx
   136ab:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   136af:	0f b6 12             	movzbl (%rdx),%edx
   136b2:	88 10                	mov    %dl,(%rax)
   136b4:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   136b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   136be:	75 d7                	jne    13697 <__memcpy+0x141>
   136c0:	90                   	nop
   136c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136c5:	c9                   	leaveq 
   136c6:	c3                   	retq   

00000000000136c7 <memcpy>:
   136c7:	55                   	push   %rbp
   136c8:	48 89 e5             	mov    %rsp,%rbp
   136cb:	48 83 ec 20          	sub    $0x20,%rsp
   136cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   136d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   136db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   136df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   136e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136e7:	48 89 ce             	mov    %rcx,%rsi
   136ea:	48 89 c7             	mov    %rax,%rdi
   136ed:	e8 64 fe ff ff       	callq  13556 <__memcpy>
   136f2:	c9                   	leaveq 
   136f3:	c3                   	retq   

00000000000136f4 <__memset>:
   136f4:	55                   	push   %rbp
   136f5:	48 89 e5             	mov    %rsp,%rbp
   136f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136fc:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   136ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13703:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   13708:	74 25                	je     1372f <__memset+0x3b>
   1370a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1370e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13716:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1371a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1371e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   13721:	88 10                	mov    %dl,(%rax)
   13723:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   13728:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1372d:	75 e3                	jne    13712 <__memset+0x1e>
   1372f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13733:	5d                   	pop    %rbp
   13734:	c3                   	retq   

0000000000013735 <memset>:
   13735:	55                   	push   %rbp
   13736:	48 89 e5             	mov    %rsp,%rbp
   13739:	48 83 ec 18          	sub    $0x18,%rsp
   1373d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13741:	89 75 f4             	mov    %esi,-0xc(%rbp)
   13744:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13748:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1374c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   1374f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13753:	89 ce                	mov    %ecx,%esi
   13755:	48 89 c7             	mov    %rax,%rdi
   13758:	e8 97 ff ff ff       	callq  136f4 <__memset>
   1375d:	c9                   	leaveq 
   1375e:	c3                   	retq   

000000000001375f <memset_s>:
   1375f:	55                   	push   %rbp
   13760:	48 89 e5             	mov    %rsp,%rbp
   13763:	48 83 ec 30          	sub    $0x30,%rsp
   13767:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1376b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1376f:	89 55 dc             	mov    %edx,-0x24(%rbp)
   13772:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   13776:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1377d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13782:	75 09                	jne    1378d <memset_s+0x2e>
   13784:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
   1378b:	eb 30                	jmp    137bd <memset_s+0x5e>
   1378d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13791:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   13795:	76 0f                	jbe    137a6 <memset_s+0x47>
   13797:	c7 45 fc 4b 00 00 00 	movl   $0x4b,-0x4(%rbp)
   1379e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   137a2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   137a6:	48 8b 05 eb 39 03 00 	mov    0x339eb(%rip),%rax        # 47198 <__memset_vp>
   137ad:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   137b1:	8b 75 dc             	mov    -0x24(%rbp),%esi
   137b4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   137b8:	48 89 cf             	mov    %rcx,%rdi
   137bb:	ff d0                	callq  *%rax
   137bd:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   137c1:	75 07                	jne    137ca <memset_s+0x6b>
   137c3:	b8 00 00 00 00       	mov    $0x0,%eax
   137c8:	eb 10                	jmp    137da <memset_s+0x7b>
   137ca:	e8 d5 10 00 00       	callq  148a4 <__errno>
   137cf:	48 89 c2             	mov    %rax,%rdx
   137d2:	8b 45 fc             	mov    -0x4(%rbp),%eax
   137d5:	89 02                	mov    %eax,(%rdx)
   137d7:	8b 45 fc             	mov    -0x4(%rbp),%eax
   137da:	c9                   	leaveq 
   137db:	c3                   	retq   

00000000000137dc <heap_init>:
   137dc:	55                   	push   %rbp
   137dd:	48 89 e5             	mov    %rsp,%rbp
   137e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   137ec:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   137ef:	48 8b 05 9a 34 03 00 	mov    0x3349a(%rip),%rax        # 46c90 <heap_base>
   137f6:	48 85 c0             	test   %rax,%rax
   137f9:	74 0a                	je     13805 <heap_init+0x29>
   137fb:	b8 01 00 00 00       	mov    $0x1,%eax
   13800:	e9 8c 00 00 00       	jmpq   13891 <heap_init+0xb5>
   13805:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1380a:	74 0e                	je     1381a <heap_init+0x3e>
   1380c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13810:	25 ff 0f 00 00       	and    $0xfff,%eax
   13815:	48 85 c0             	test   %rax,%rax
   13818:	74 07                	je     13821 <heap_init+0x45>
   1381a:	b8 01 00 00 00       	mov    $0x1,%eax
   1381f:	eb 70                	jmp    13891 <heap_init+0xb5>
   13821:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13825:	25 ff 0f 00 00       	and    $0xfff,%eax
   1382a:	48 85 c0             	test   %rax,%rax
   1382d:	74 07                	je     13836 <heap_init+0x5a>
   1382f:	b8 01 00 00 00       	mov    $0x1,%eax
   13834:	eb 5b                	jmp    13891 <heap_init+0xb5>
   13836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1383a:	25 ff 0f 00 00       	and    $0xfff,%eax
   1383f:	48 85 c0             	test   %rax,%rax
   13842:	74 07                	je     1384b <heap_init+0x6f>
   13844:	b8 01 00 00 00       	mov    $0x1,%eax
   13849:	eb 46                	jmp    13891 <heap_init+0xb5>
   1384b:	48 8b 05 3e 34 03 00 	mov    0x3343e(%rip),%rax        # 46c90 <heap_base>
   13852:	48 f7 d0             	not    %rax
   13855:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   13859:	76 07                	jbe    13862 <heap_init+0x86>
   1385b:	b8 01 00 00 00       	mov    $0x1,%eax
   13860:	eb 2f                	jmp    13891 <heap_init+0xb5>
   13862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13866:	48 89 05 23 34 03 00 	mov    %rax,0x33423(%rip)        # 46c90 <heap_base>
   1386d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13871:	48 89 05 20 34 03 00 	mov    %rax,0x33420(%rip)        # 46c98 <heap_size>
   13878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1387c:	48 89 05 25 34 03 00 	mov    %rax,0x33425(%rip)        # 46ca8 <heap_min_size>
   13883:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   13886:	89 05 14 34 03 00    	mov    %eax,0x33414(%rip)        # 46ca0 <is_edmm_supported>
   1388c:	b8 00 00 00 00       	mov    $0x0,%eax
   13891:	5d                   	pop    %rbp
   13892:	c3                   	retq   

0000000000013893 <sbrk>:
   13893:	55                   	push   %rbp
   13894:	48 89 e5             	mov    %rsp,%rbp
   13897:	48 83 ec 40          	sub    $0x40,%rsp
   1389b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1389f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   138a6:	00 
   138a7:	48 8b 05 62 47 03 00 	mov    0x34762(%rip),%rax        # 48010 <heap_used.2393>
   138ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   138b2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   138b9:	00 
   138ba:	48 8b 05 cf 33 03 00 	mov    0x333cf(%rip),%rax        # 46c90 <heap_base>
   138c1:	48 85 c0             	test   %rax,%rax
   138c4:	75 0c                	jne    138d2 <sbrk+0x3f>
   138c6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   138cd:	e9 9d 02 00 00       	jmpq   13b6f <sbrk+0x2dc>
   138d2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   138d7:	0f 89 31 01 00 00    	jns    13a0e <sbrk+0x17b>
   138dd:	48 f7 5d c8          	negq   -0x38(%rbp)
   138e1:	48 8b 15 28 47 03 00 	mov    0x34728(%rip),%rdx        # 48010 <heap_used.2393>
   138e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138ec:	48 39 c2             	cmp    %rax,%rdx
   138ef:	73 0c                	jae    138fd <sbrk+0x6a>
   138f1:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   138f8:	e9 72 02 00 00       	jmpq   13b6f <sbrk+0x2dc>
   138fd:	48 8b 15 0c 47 03 00 	mov    0x3470c(%rip),%rdx        # 48010 <heap_used.2393>
   13904:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13908:	48 29 c2             	sub    %rax,%rdx
   1390b:	48 89 d0             	mov    %rdx,%rax
   1390e:	48 89 05 fb 46 03 00 	mov    %rax,0x346fb(%rip)        # 48010 <heap_used.2393>
   13915:	48 8b 05 74 33 03 00 	mov    0x33374(%rip),%rax        # 46c90 <heap_base>
   1391c:	48 89 c2             	mov    %rax,%rdx
   1391f:	48 8b 05 ea 46 03 00 	mov    0x346ea(%rip),%rax        # 48010 <heap_used.2393>
   13926:	48 01 d0             	add    %rdx,%rax
   13929:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1392d:	8b 05 6d 33 03 00    	mov    0x3336d(%rip),%eax        # 46ca0 <is_edmm_supported>
   13933:	85 c0                	test   %eax,%eax
   13935:	0f 84 ca 00 00 00    	je     13a05 <sbrk+0x172>
   1393b:	48 8b 05 66 33 03 00 	mov    0x33366(%rip),%rax        # 46ca8 <heap_min_size>
   13942:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   13946:	0f 86 b9 00 00 00    	jbe    13a05 <sbrk+0x172>
   1394c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13950:	25 ff 0f 00 00       	and    $0xfff,%eax
   13955:	48 85 c0             	test   %rax,%rax
   13958:	74 1f                	je     13979 <sbrk+0xe6>
   1395a:	48 8d 0d 1f 8f 02 00 	lea    0x28f1f(%rip),%rcx        # 3c880 <_ZL18BASE_PROV_SEAL_KEY+0xd0>
   13961:	48 8d 15 41 8f 02 00 	lea    0x28f41(%rip),%rdx        # 3c8a9 <__func__.2398>
   13968:	be 65 00 00 00       	mov    $0x65,%esi
   1396d:	48 8d 3d 2a 8f 02 00 	lea    0x28f2a(%rip),%rdi        # 3c89e <_ZL18BASE_PROV_SEAL_KEY+0xee>
   13974:	e8 1c 7b ff ff       	callq  b495 <__assert>
   13979:	48 8b 15 90 46 03 00 	mov    0x34690(%rip),%rdx        # 48010 <heap_used.2393>
   13980:	48 8b 05 21 33 03 00 	mov    0x33321(%rip),%rax        # 46ca8 <heap_min_size>
   13987:	48 39 c2             	cmp    %rax,%rdx
   1398a:	76 12                	jbe    1399e <sbrk+0x10b>
   1398c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13990:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13994:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13998:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1399c:	eb 2d                	jmp    139cb <sbrk+0x138>
   1399e:	48 8b 05 eb 32 03 00 	mov    0x332eb(%rip),%rax        # 46c90 <heap_base>
   139a5:	48 89 c2             	mov    %rax,%rdx
   139a8:	48 8b 05 f9 32 03 00 	mov    0x332f9(%rip),%rax        # 46ca8 <heap_min_size>
   139af:	48 01 d0             	add    %rdx,%rax
   139b2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   139b6:	48 8b 05 eb 32 03 00 	mov    0x332eb(%rip),%rax        # 46ca8 <heap_min_size>
   139bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139c1:	48 29 c2             	sub    %rax,%rdx
   139c4:	48 89 d0             	mov    %rdx,%rax
   139c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   139cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139cf:	48 c1 e8 0c          	shr    $0xc,%rax
   139d3:	48 89 c2             	mov    %rax,%rdx
   139d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   139da:	48 89 d6             	mov    %rdx,%rsi
   139dd:	48 89 c7             	mov    %rax,%rdi
   139e0:	e8 74 62 ff ff       	callq  9c59 <trim_EPC_pages>
   139e5:	89 45 dc             	mov    %eax,-0x24(%rbp)
   139e8:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   139ec:	74 17                	je     13a05 <sbrk+0x172>
   139ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139f2:	48 89 05 17 46 03 00 	mov    %rax,0x34617(%rip)        # 48010 <heap_used.2393>
   139f9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   13a00:	e9 6a 01 00 00       	jmpq   13b6f <sbrk+0x2dc>
   13a05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13a09:	e9 61 01 00 00       	jmpq   13b6f <sbrk+0x2dc>
   13a0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a12:	48 f7 d0             	not    %rax
   13a15:	48 89 c2             	mov    %rax,%rdx
   13a18:	48 8b 05 f1 45 03 00 	mov    0x345f1(%rip),%rax        # 48010 <heap_used.2393>
   13a1f:	48 39 c2             	cmp    %rax,%rdx
   13a22:	72 1a                	jb     13a3e <sbrk+0x1ab>
   13a24:	48 8b 15 e5 45 03 00 	mov    0x345e5(%rip),%rdx        # 48010 <heap_used.2393>
   13a2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a2f:	48 01 c2             	add    %rax,%rdx
   13a32:	48 8b 05 5f 32 03 00 	mov    0x3325f(%rip),%rax        # 46c98 <heap_size>
   13a39:	48 39 c2             	cmp    %rax,%rdx
   13a3c:	76 0c                	jbe    13a4a <sbrk+0x1b7>
   13a3e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   13a45:	e9 25 01 00 00       	jmpq   13b6f <sbrk+0x2dc>
   13a4a:	48 8b 05 3f 32 03 00 	mov    0x3323f(%rip),%rax        # 46c90 <heap_base>
   13a51:	48 89 c2             	mov    %rax,%rdx
   13a54:	48 8b 05 b5 45 03 00 	mov    0x345b5(%rip),%rax        # 48010 <heap_used.2393>
   13a5b:	48 01 d0             	add    %rdx,%rax
   13a5e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13a62:	48 8b 15 a7 45 03 00 	mov    0x345a7(%rip),%rdx        # 48010 <heap_used.2393>
   13a69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a6d:	48 01 d0             	add    %rdx,%rax
   13a70:	48 89 05 99 45 03 00 	mov    %rax,0x34599(%rip)        # 48010 <heap_used.2393>
   13a77:	48 8b 15 8a 45 03 00 	mov    0x3458a(%rip),%rdx        # 48008 <g_peak_heap_used>
   13a7e:	48 8b 05 8b 45 03 00 	mov    0x3458b(%rip),%rax        # 48010 <heap_used.2393>
   13a85:	48 39 c2             	cmp    %rax,%rdx
   13a88:	48 0f 43 c2          	cmovae %rdx,%rax
   13a8c:	48 89 05 75 45 03 00 	mov    %rax,0x34575(%rip)        # 48008 <g_peak_heap_used>
   13a93:	8b 05 07 32 03 00    	mov    0x33207(%rip),%eax        # 46ca0 <is_edmm_supported>
   13a99:	85 c0                	test   %eax,%eax
   13a9b:	0f 84 ca 00 00 00    	je     13b6b <sbrk+0x2d8>
   13aa1:	48 8b 15 68 45 03 00 	mov    0x34568(%rip),%rdx        # 48010 <heap_used.2393>
   13aa8:	48 8b 05 f9 31 03 00 	mov    0x331f9(%rip),%rax        # 46ca8 <heap_min_size>
   13aaf:	48 39 c2             	cmp    %rax,%rdx
   13ab2:	0f 86 b3 00 00 00    	jbe    13b6b <sbrk+0x2d8>
   13ab8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13abc:	25 ff 0f 00 00       	and    $0xfff,%eax
   13ac1:	48 85 c0             	test   %rax,%rax
   13ac4:	74 1f                	je     13ae5 <sbrk+0x252>
   13ac6:	48 8d 0d b3 8d 02 00 	lea    0x28db3(%rip),%rcx        # 3c880 <_ZL18BASE_PROV_SEAL_KEY+0xd0>
   13acd:	48 8d 15 d5 8d 02 00 	lea    0x28dd5(%rip),%rdx        # 3c8a9 <__func__.2398>
   13ad4:	be 8d 00 00 00       	mov    $0x8d,%esi
   13ad9:	48 8d 3d be 8d 02 00 	lea    0x28dbe(%rip),%rdi        # 3c89e <_ZL18BASE_PROV_SEAL_KEY+0xee>
   13ae0:	e8 b0 79 ff ff       	callq  b495 <__assert>
   13ae5:	48 8b 05 bc 31 03 00 	mov    0x331bc(%rip),%rax        # 46ca8 <heap_min_size>
   13aec:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   13af0:	76 12                	jbe    13b04 <sbrk+0x271>
   13af2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13af6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13afa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13afe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13b02:	eb 30                	jmp    13b34 <sbrk+0x2a1>
   13b04:	48 8b 05 85 31 03 00 	mov    0x33185(%rip),%rax        # 46c90 <heap_base>
   13b0b:	48 89 c2             	mov    %rax,%rdx
   13b0e:	48 8b 05 93 31 03 00 	mov    0x33193(%rip),%rax        # 46ca8 <heap_min_size>
   13b15:	48 01 d0             	add    %rdx,%rax
   13b18:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13b1c:	48 8b 15 ed 44 03 00 	mov    0x344ed(%rip),%rdx        # 48010 <heap_used.2393>
   13b23:	48 8b 05 7e 31 03 00 	mov    0x3317e(%rip),%rax        # 46ca8 <heap_min_size>
   13b2a:	48 29 c2             	sub    %rax,%rdx
   13b2d:	48 89 d0             	mov    %rdx,%rax
   13b30:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b38:	48 c1 e8 0c          	shr    $0xc,%rax
   13b3c:	48 89 c2             	mov    %rax,%rdx
   13b3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b43:	48 89 d6             	mov    %rdx,%rsi
   13b46:	48 89 c7             	mov    %rax,%rdi
   13b49:	e8 f8 60 ff ff       	callq  9c46 <apply_EPC_pages>
   13b4e:	89 45 d8             	mov    %eax,-0x28(%rbp)
   13b51:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   13b55:	74 14                	je     13b6b <sbrk+0x2d8>
   13b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b5b:	48 89 05 ae 44 03 00 	mov    %rax,0x344ae(%rip)        # 48010 <heap_used.2393>
   13b62:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   13b69:	eb 04                	jmp    13b6f <sbrk+0x2dc>
   13b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b6f:	c9                   	leaveq 
   13b70:	c3                   	retq   

0000000000013b71 <sgx_cpuidex>:
   13b71:	55                   	push   %rbp
   13b72:	48 89 e5             	mov    %rsp,%rbp
   13b75:	48 83 ec 10          	sub    $0x10,%rsp
   13b79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b7d:	89 75 f4             	mov    %esi,-0xc(%rbp)
   13b80:	89 55 f0             	mov    %edx,-0x10(%rbp)
   13b83:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13b88:	75 07                	jne    13b91 <sgx_cpuidex+0x20>
   13b8a:	b8 02 00 00 00       	mov    $0x2,%eax
   13b8f:	eb 14                	jmp    13ba5 <sgx_cpuidex+0x34>
   13b91:	8b 55 f0             	mov    -0x10(%rbp),%edx
   13b94:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   13b97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b9b:	89 ce                	mov    %ecx,%esi
   13b9d:	48 89 c7             	mov    %rax,%rdi
   13ba0:	e8 0e 00 ff ff       	callq  3bb3 <sgx_oc_cpuidex>
   13ba5:	c9                   	leaveq 
   13ba6:	c3                   	retq   

0000000000013ba7 <sgx_cpuid>:
   13ba7:	55                   	push   %rbp
   13ba8:	48 89 e5             	mov    %rsp,%rbp
   13bab:	48 83 ec 10          	sub    $0x10,%rsp
   13baf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13bb3:	89 75 f4             	mov    %esi,-0xc(%rbp)
   13bb6:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   13bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bbd:	ba 00 00 00 00       	mov    $0x0,%edx
   13bc2:	89 ce                	mov    %ecx,%esi
   13bc4:	48 89 c7             	mov    %rax,%rdi
   13bc7:	e8 a5 ff ff ff       	callq  13b71 <sgx_cpuidex>
   13bcc:	c9                   	leaveq 
   13bcd:	c3                   	retq   

0000000000013bce <tstdc_access_version_dummy1>:
   13bce:	55                   	push   %rbp
   13bcf:	48 89 e5             	mov    %rsp,%rbp
   13bd2:	c6 05 c7 35 03 00 73 	movb   $0x73,0x335c7(%rip)        # 471a0 <sgx_tstdc_version>
   13bd9:	48 8d 05 c0 35 03 00 	lea    0x335c0(%rip),%rax        # 471a0 <sgx_tstdc_version>
   13be0:	5d                   	pop    %rbp
   13be1:	c3                   	retq   

0000000000013be2 <sgx_init_string_lib>:
   13be2:	55                   	push   %rbp
   13be3:	48 89 e5             	mov    %rsp,%rbp
   13be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13bea:	b8 00 00 00 00       	mov    $0x0,%eax
   13bef:	5d                   	pop    %rbp
   13bf0:	c3                   	retq   

0000000000013bf1 <sgx_spin_lock>:
   13bf1:	55                   	push   %rbp
   13bf2:	48 89 e5             	mov    %rsp,%rbp
   13bf5:	48 83 ec 30          	sub    $0x30,%rsp
   13bf9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13bfd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13c04:	00 00 
   13c06:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13c0a:	31 c0                	xor    %eax,%eax
   13c0c:	eb 0c                	jmp    13c1a <sgx_spin_lock+0x29>
   13c0e:	f3 90                	pause  
   13c10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c14:	8b 00                	mov    (%rax),%eax
   13c16:	85 c0                	test   %eax,%eax
   13c18:	75 f4                	jne    13c0e <sgx_spin_lock+0x1d>
   13c1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c1e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13c22:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   13c29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c2d:	8b 55 ec             	mov    -0x14(%rbp),%edx
   13c30:	f0 87 10             	lock xchg %edx,(%rax)
   13c33:	89 55 e8             	mov    %edx,-0x18(%rbp)
   13c36:	8b 45 e8             	mov    -0x18(%rbp),%eax
   13c39:	85 c0                	test   %eax,%eax
   13c3b:	75 d3                	jne    13c10 <sgx_spin_lock+0x1f>
   13c3d:	b8 00 00 00 00       	mov    $0x0,%eax
   13c42:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   13c46:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13c4d:	00 00 
   13c4f:	74 05                	je     13c56 <sgx_spin_lock+0x65>
   13c51:	e8 36 78 ff ff       	callq  b48c <__stack_chk_fail>
   13c56:	c9                   	leaveq 
   13c57:	c3                   	retq   

0000000000013c58 <sgx_spin_unlock>:
   13c58:	55                   	push   %rbp
   13c59:	48 89 e5             	mov    %rsp,%rbp
   13c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c64:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   13c6a:	b8 00 00 00 00       	mov    $0x0,%eax
   13c6f:	5d                   	pop    %rbp
   13c70:	c3                   	retq   

0000000000013c71 <strlen>:
   13c71:	55                   	push   %rbp
   13c72:	48 89 e5             	mov    %rsp,%rbp
   13c75:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c7d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13c81:	eb 05                	jmp    13c88 <strlen+0x17>
   13c83:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   13c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c8c:	0f b6 00             	movzbl (%rax),%eax
   13c8f:	84 c0                	test   %al,%al
   13c91:	75 f0                	jne    13c83 <strlen+0x12>
   13c93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13c97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c9b:	48 29 c2             	sub    %rax,%rdx
   13c9e:	48 89 d0             	mov    %rdx,%rax
   13ca1:	5d                   	pop    %rbp
   13ca2:	c3                   	retq   

0000000000013ca3 <strncpy>:
   13ca3:	55                   	push   %rbp
   13ca4:	48 89 e5             	mov    %rsp,%rbp
   13ca7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13cab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13caf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13cb3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   13cb8:	74 5f                	je     13d19 <strncpy+0x76>
   13cba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13cbe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13cc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13cc6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13cca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13cce:	48 8d 42 01          	lea    0x1(%rdx),%rax
   13cd2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13cd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13cda:	48 8d 48 01          	lea    0x1(%rax),%rcx
   13cde:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   13ce2:	0f b6 12             	movzbl (%rdx),%edx
   13ce5:	88 10                	mov    %dl,(%rax)
   13ce7:	0f b6 00             	movzbl (%rax),%eax
   13cea:	84 c0                	test   %al,%al
   13cec:	75 1f                	jne    13d0d <strncpy+0x6a>
   13cee:	eb 0f                	jmp    13cff <strncpy+0x5c>
   13cf0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13cf4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   13cf8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   13cfc:	c6 00 00             	movb   $0x0,(%rax)
   13cff:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   13d04:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   13d09:	75 e5                	jne    13cf0 <strncpy+0x4d>
   13d0b:	eb 0c                	jmp    13d19 <strncpy+0x76>
   13d0d:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   13d12:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   13d17:	75 b1                	jne    13cca <strncpy+0x27>
   13d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d1d:	5d                   	pop    %rbp
   13d1e:	c3                   	retq   

0000000000013d1f <strnlen>:
   13d1f:	55                   	push   %rbp
   13d20:	48 89 e5             	mov    %rsp,%rbp
   13d23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13d2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13d33:	eb 0a                	jmp    13d3f <strnlen+0x20>
   13d35:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   13d3a:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   13d3f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   13d44:	74 0b                	je     13d51 <strnlen+0x32>
   13d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d4a:	0f b6 00             	movzbl (%rax),%eax
   13d4d:	84 c0                	test   %al,%al
   13d4f:	75 e4                	jne    13d35 <strnlen+0x16>
   13d51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d59:	48 29 c2             	sub    %rax,%rdx
   13d5c:	48 89 d0             	mov    %rdx,%rax
   13d5f:	5d                   	pop    %rbp
   13d60:	c3                   	retq   

0000000000013d61 <vsnprintf>:
   13d61:	55                   	push   %rbp
   13d62:	48 89 e5             	mov    %rsp,%rbp
   13d65:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   13d6c:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   13d73:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   13d7a:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   13d81:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   13d88:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13d8f:	00 00 
   13d91:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13d95:	31 c0                	xor    %eax,%eax
   13d97:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13d9b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13d9f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13da3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13daa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13dae:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   13db5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13db9:	48 85 c0             	test   %rax,%rax
   13dbc:	74 0a                	je     13dc8 <vsnprintf+0x67>
   13dbe:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13dc2:	48 83 c0 10          	add    $0x10,%rax
   13dc6:	eb 05                	jmp    13dcd <vsnprintf+0x6c>
   13dc8:	b8 00 00 00 00       	mov    $0x0,%eax
   13dcd:	ba 28 00 00 00       	mov    $0x28,%edx
   13dd2:	be 00 00 00 00       	mov    $0x0,%esi
   13dd7:	48 89 c7             	mov    %rax,%rdi
   13dda:	e8 56 f9 ff ff       	callq  13735 <memset>
   13ddf:	48 81 bd 60 ff ff ff 	cmpq   $0x7fffffff,-0xa0(%rbp)
   13de6:	ff ff ff 7f 
   13dea:	76 0b                	jbe    13df7 <vsnprintf+0x96>
   13dec:	48 c7 85 60 ff ff ff 	movq   $0x7fffffff,-0xa0(%rbp)
   13df3:	ff ff ff 7f 
   13df7:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   13dfe:	00 
   13dff:	75 19                	jne    13e1a <vsnprintf+0xb9>
   13e01:	48 8d 85 7b ff ff ff 	lea    -0x85(%rbp),%rax
   13e08:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   13e0f:	48 c7 85 60 ff ff ff 	movq   $0x1,-0xa0(%rbp)
   13e16:	01 00 00 00 
   13e1a:	66 c7 45 92 ff ff    	movw   $0xffff,-0x6e(%rbp)
   13e20:	66 c7 45 90 08 02    	movw   $0x208,-0x70(%rbp)
   13e26:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   13e2d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   13e31:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13e35:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13e39:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   13e40:	83 e8 01             	sub    $0x1,%eax
   13e43:	89 45 8c             	mov    %eax,-0x74(%rbp)
   13e46:	8b 45 8c             	mov    -0x74(%rbp),%eax
   13e49:	89 45 a0             	mov    %eax,-0x60(%rbp)
   13e4c:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   13e53:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
   13e5a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   13e5e:	48 89 ce             	mov    %rcx,%rsi
   13e61:	48 89 c7             	mov    %rax,%rdi
   13e64:	e8 77 0c 00 00       	callq  14ae0 <__vfprintf>
   13e69:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   13e6f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13e73:	c6 00 00             	movb   $0x0,(%rax)
   13e76:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   13e7c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   13e80:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13e87:	00 00 
   13e89:	74 05                	je     13e90 <vsnprintf+0x12f>
   13e8b:	e8 fc 75 ff ff       	callq  b48c <__stack_chk_fail>
   13e90:	c9                   	leaveq 
   13e91:	c3                   	retq   

0000000000013e92 <sgx_thread_cond_wait>:
   13e92:	55                   	push   %rbp
   13e93:	48 89 e5             	mov    %rsp,%rbp
   13e96:	48 83 ec 40          	sub    $0x40,%rsp
   13e9a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13e9e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13ea2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13ea9:	00 00 
   13eab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13eaf:	31 c0                	xor    %eax,%eax
   13eb1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   13eb6:	74 15                	je     13ecd <sgx_thread_cond_wait+0x3b>
   13eb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ebc:	be 18 00 00 00       	mov    $0x18,%esi
   13ec1:	48 89 c7             	mov    %rax,%rdi
   13ec4:	e8 e8 3e ff ff       	callq  7db1 <sgx_is_within_enclave>
   13ec9:	85 c0                	test   %eax,%eax
   13ecb:	75 07                	jne    13ed4 <sgx_thread_cond_wait+0x42>
   13ecd:	b8 01 00 00 00       	mov    $0x1,%eax
   13ed2:	eb 05                	jmp    13ed9 <sgx_thread_cond_wait+0x47>
   13ed4:	b8 00 00 00 00       	mov    $0x0,%eax
   13ed9:	84 c0                	test   %al,%al
   13edb:	74 0a                	je     13ee7 <sgx_thread_cond_wait+0x55>
   13edd:	b8 16 00 00 00       	mov    $0x16,%eax
   13ee2:	e9 a4 01 00 00       	jmpq   1408b <sgx_thread_cond_wait+0x1f9>
   13ee7:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   13eec:	74 15                	je     13f03 <sgx_thread_cond_wait+0x71>
   13eee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13ef2:	be 28 00 00 00       	mov    $0x28,%esi
   13ef7:	48 89 c7             	mov    %rax,%rdi
   13efa:	e8 b2 3e ff ff       	callq  7db1 <sgx_is_within_enclave>
   13eff:	85 c0                	test   %eax,%eax
   13f01:	75 07                	jne    13f0a <sgx_thread_cond_wait+0x78>
   13f03:	b8 01 00 00 00       	mov    $0x1,%eax
   13f08:	eb 05                	jmp    13f0f <sgx_thread_cond_wait+0x7d>
   13f0a:	b8 00 00 00 00       	mov    $0x0,%eax
   13f0f:	84 c0                	test   %al,%al
   13f11:	74 0a                	je     13f1d <sgx_thread_cond_wait+0x8b>
   13f13:	b8 16 00 00 00       	mov    $0x16,%eax
   13f18:	e9 6e 01 00 00       	jmpq   1408b <sgx_thread_cond_wait+0x1f9>
   13f1d:	e8 b4 72 02 00       	callq  3b1d6 <get_thread_data>
   13f22:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13f26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f2a:	48 89 c7             	mov    %rax,%rdi
   13f2d:	e8 bf fc ff ff       	callq  13bf1 <sgx_spin_lock>
   13f32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f36:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   13f3d:	00 
   13f3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f42:	48 8b 40 08          	mov    0x8(%rax),%rax
   13f46:	48 85 c0             	test   %rax,%rax
   13f49:	74 15                	je     13f60 <sgx_thread_cond_wait+0xce>
   13f4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f4f:	48 8b 40 10          	mov    0x10(%rax),%rax
   13f53:	48 89 c2             	mov    %rax,%rdx
   13f56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f5a:	48 89 42 48          	mov    %rax,0x48(%rdx)
   13f5e:	eb 0c                	jmp    13f6c <sgx_thread_cond_wait+0xda>
   13f60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f68:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13f6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f74:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13f78:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   13f7f:	00 
   13f80:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13f84:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13f88:	48 89 d6             	mov    %rdx,%rsi
   13f8b:	48 89 c7             	mov    %rax,%rdi
   13f8e:	e8 7d 04 00 00       	callq  14410 <sgx_thread_mutex_unlock_lazy>
   13f93:	89 45 dc             	mov    %eax,-0x24(%rbp)
   13f96:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13f99:	85 c0                	test   %eax,%eax
   13f9b:	74 14                	je     13fb1 <sgx_thread_cond_wait+0x11f>
   13f9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13fa1:	48 89 c7             	mov    %rax,%rdi
   13fa4:	e8 af fc ff ff       	callq  13c58 <sgx_spin_unlock>
   13fa9:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13fac:	e9 da 00 00 00       	jmpq   1408b <sgx_thread_cond_wait+0x1f9>
   13fb1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   13fb8:	00 
   13fb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13fbd:	48 89 c7             	mov    %rax,%rdi
   13fc0:	e8 93 fc ff ff       	callq  13c58 <sgx_spin_unlock>
   13fc5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13fc9:	48 85 c0             	test   %rax,%rax
   13fcc:	75 22                	jne    13ff0 <sgx_thread_cond_wait+0x15e>
   13fce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13fd2:	48 8b 40 10          	mov    0x10(%rax),%rax
   13fd6:	48 05 b0 02 01 00    	add    $0x102b0,%rax
   13fdc:	48 89 c2             	mov    %rax,%rdx
   13fdf:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
   13fe3:	48 89 d6             	mov    %rdx,%rsi
   13fe6:	48 89 c7             	mov    %rax,%rdi
   13fe9:	e8 7a fd fe ff       	callq  3d68 <sgx_thread_wait_untrusted_event_ocall>
   13fee:	eb 39                	jmp    14029 <sgx_thread_cond_wait+0x197>
   13ff0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ff4:	48 8b 40 10          	mov    0x10(%rax),%rax
   13ff8:	48 05 b0 02 01 00    	add    $0x102b0,%rax
   13ffe:	48 89 c2             	mov    %rax,%rdx
   14001:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14005:	48 8b 40 10          	mov    0x10(%rax),%rax
   14009:	48 05 b0 02 01 00    	add    $0x102b0,%rax
   1400f:	48 89 c1             	mov    %rax,%rcx
   14012:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
   14016:	48 89 ce             	mov    %rcx,%rsi
   14019:	48 89 c7             	mov    %rax,%rdi
   1401c:	e8 a3 fe fe ff       	callq  3ec4 <sgx_thread_setwait_untrusted_events_ocall>
   14021:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   14028:	00 
   14029:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1402d:	48 89 c7             	mov    %rax,%rdi
   14030:	e8 bc fb ff ff       	callq  13bf1 <sgx_spin_lock>
   14035:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14039:	48 8b 40 08          	mov    0x8(%rax),%rax
   1403d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14041:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14046:	74 19                	je     14061 <sgx_thread_cond_wait+0x1cf>
   14048:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1404c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14050:	74 0e                	je     14060 <sgx_thread_cond_wait+0x1ce>
   14052:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14056:	48 8b 40 48          	mov    0x48(%rax),%rax
   1405a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1405e:	eb e1                	jmp    14041 <sgx_thread_cond_wait+0x1af>
   14060:	90                   	nop
   14061:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14066:	74 05                	je     1406d <sgx_thread_cond_wait+0x1db>
   14068:	e9 44 ff ff ff       	jmpq   13fb1 <sgx_thread_cond_wait+0x11f>
   1406d:	90                   	nop
   1406e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14072:	48 89 c7             	mov    %rax,%rdi
   14075:	e8 de fb ff ff       	callq  13c58 <sgx_spin_unlock>
   1407a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1407e:	48 89 c7             	mov    %rax,%rdi
   14081:	e8 2e 01 00 00       	callq  141b4 <sgx_thread_mutex_lock>
   14086:	b8 00 00 00 00       	mov    $0x0,%eax
   1408b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1408f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   14096:	00 00 
   14098:	74 05                	je     1409f <sgx_thread_cond_wait+0x20d>
   1409a:	e8 ed 73 ff ff       	callq  b48c <__stack_chk_fail>
   1409f:	c9                   	leaveq 
   140a0:	c3                   	retq   

00000000000140a1 <sgx_thread_cond_signal>:
   140a1:	55                   	push   %rbp
   140a2:	48 89 e5             	mov    %rsp,%rbp
   140a5:	48 83 ec 30          	sub    $0x30,%rsp
   140a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   140ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   140b4:	00 00 
   140b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   140ba:	31 c0                	xor    %eax,%eax
   140bc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   140c3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   140ca:	00 
   140cb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   140d0:	74 15                	je     140e7 <sgx_thread_cond_signal+0x46>
   140d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140d6:	be 18 00 00 00       	mov    $0x18,%esi
   140db:	48 89 c7             	mov    %rax,%rdi
   140de:	e8 ce 3c ff ff       	callq  7db1 <sgx_is_within_enclave>
   140e3:	85 c0                	test   %eax,%eax
   140e5:	75 07                	jne    140ee <sgx_thread_cond_signal+0x4d>
   140e7:	b8 01 00 00 00       	mov    $0x1,%eax
   140ec:	eb 05                	jmp    140f3 <sgx_thread_cond_signal+0x52>
   140ee:	b8 00 00 00 00       	mov    $0x0,%eax
   140f3:	84 c0                	test   %al,%al
   140f5:	74 0a                	je     14101 <sgx_thread_cond_signal+0x60>
   140f7:	b8 16 00 00 00       	mov    $0x16,%eax
   140fc:	e9 9d 00 00 00       	jmpq   1419e <sgx_thread_cond_signal+0xfd>
   14101:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14105:	48 89 c7             	mov    %rax,%rdi
   14108:	e8 e4 fa ff ff       	callq  13bf1 <sgx_spin_lock>
   1410d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14111:	48 8b 40 08          	mov    0x8(%rax),%rax
   14115:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14119:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1411e:	0f 94 c0             	sete   %al
   14121:	84 c0                	test   %al,%al
   14123:	74 13                	je     14138 <sgx_thread_cond_signal+0x97>
   14125:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14129:	48 89 c7             	mov    %rax,%rdi
   1412c:	e8 27 fb ff ff       	callq  13c58 <sgx_spin_unlock>
   14131:	b8 00 00 00 00       	mov    $0x0,%eax
   14136:	eb 66                	jmp    1419e <sgx_thread_cond_signal+0xfd>
   14138:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1413c:	48 8b 40 08          	mov    0x8(%rax),%rax
   14140:	48 8b 40 48          	mov    0x48(%rax),%rax
   14144:	48 89 c2             	mov    %rax,%rdx
   14147:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1414b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1414f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14153:	48 8b 40 08          	mov    0x8(%rax),%rax
   14157:	48 85 c0             	test   %rax,%rax
   1415a:	0f 94 c0             	sete   %al
   1415d:	84 c0                	test   %al,%al
   1415f:	74 0c                	je     1416d <sgx_thread_cond_signal+0xcc>
   14161:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14165:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1416c:	00 
   1416d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14171:	48 89 c7             	mov    %rax,%rdi
   14174:	e8 df fa ff ff       	callq  13c58 <sgx_spin_unlock>
   14179:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1417d:	48 8b 40 10          	mov    0x10(%rax),%rax
   14181:	48 05 b0 02 01 00    	add    $0x102b0,%rax
   14187:	48 89 c2             	mov    %rax,%rdx
   1418a:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   1418e:	48 89 d6             	mov    %rdx,%rsi
   14191:	48 89 c7             	mov    %rax,%rdi
   14194:	e8 7d fc fe ff       	callq  3e16 <sgx_thread_set_untrusted_event_ocall>
   14199:	b8 00 00 00 00       	mov    $0x0,%eax
   1419e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   141a2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   141a9:	00 00 
   141ab:	74 05                	je     141b2 <sgx_thread_cond_signal+0x111>
   141ad:	e8 da 72 ff ff       	callq  b48c <__stack_chk_fail>
   141b2:	c9                   	leaveq 
   141b3:	c3                   	retq   

00000000000141b4 <sgx_thread_mutex_lock>:
   141b4:	55                   	push   %rbp
   141b5:	48 89 e5             	mov    %rsp,%rbp
   141b8:	48 83 ec 30          	sub    $0x30,%rsp
   141bc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   141c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   141c7:	00 00 
   141c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   141cd:	31 c0                	xor    %eax,%eax
   141cf:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   141d4:	74 15                	je     141eb <sgx_thread_mutex_lock+0x37>
   141d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141da:	be 28 00 00 00       	mov    $0x28,%esi
   141df:	48 89 c7             	mov    %rax,%rdi
   141e2:	e8 ca 3b ff ff       	callq  7db1 <sgx_is_within_enclave>
   141e7:	85 c0                	test   %eax,%eax
   141e9:	75 07                	jne    141f2 <sgx_thread_mutex_lock+0x3e>
   141eb:	b8 01 00 00 00       	mov    $0x1,%eax
   141f0:	eb 05                	jmp    141f7 <sgx_thread_mutex_lock+0x43>
   141f2:	b8 00 00 00 00       	mov    $0x0,%eax
   141f7:	84 c0                	test   %al,%al
   141f9:	74 0a                	je     14205 <sgx_thread_mutex_lock+0x51>
   141fb:	b8 16 00 00 00       	mov    $0x16,%eax
   14200:	e9 f5 01 00 00       	jmpq   143fa <sgx_thread_mutex_lock+0x246>
   14205:	e8 cc 6f 02 00       	callq  3b1d6 <get_thread_data>
   1420a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1420e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14212:	48 83 c0 0c          	add    $0xc,%rax
   14216:	48 89 c7             	mov    %rax,%rdi
   14219:	e8 d3 f9 ff ff       	callq  13bf1 <sgx_spin_lock>
   1421e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14222:	8b 40 08             	mov    0x8(%rax),%eax
   14225:	83 f8 02             	cmp    $0x2,%eax
   14228:	74 26                	je     14250 <sgx_thread_mutex_lock+0x9c>
   1422a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1422e:	8b 40 08             	mov    0x8(%rax),%eax
   14231:	83 f8 01             	cmp    $0x1,%eax
   14234:	74 1a                	je     14250 <sgx_thread_mutex_lock+0x9c>
   14236:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1423a:	48 83 c0 0c          	add    $0xc,%rax
   1423e:	48 89 c7             	mov    %rax,%rdi
   14241:	e8 12 fa ff ff       	callq  13c58 <sgx_spin_unlock>
   14246:	b8 16 00 00 00       	mov    $0x16,%eax
   1424b:	e9 aa 01 00 00       	jmpq   143fa <sgx_thread_mutex_lock+0x246>
   14250:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14254:	8b 40 08             	mov    0x8(%rax),%eax
   14257:	83 f8 02             	cmp    $0x2,%eax
   1425a:	75 3a                	jne    14296 <sgx_thread_mutex_lock+0xe2>
   1425c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14260:	48 8b 40 10          	mov    0x10(%rax),%rax
   14264:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14268:	75 2c                	jne    14296 <sgx_thread_mutex_lock+0xe2>
   1426a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1426e:	48 8b 00             	mov    (%rax),%rax
   14271:	48 8d 50 01          	lea    0x1(%rax),%rdx
   14275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14279:	48 89 10             	mov    %rdx,(%rax)
   1427c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14280:	48 83 c0 0c          	add    $0xc,%rax
   14284:	48 89 c7             	mov    %rax,%rdi
   14287:	e8 cc f9 ff ff       	callq  13c58 <sgx_spin_unlock>
   1428c:	b8 00 00 00 00       	mov    $0x0,%eax
   14291:	e9 64 01 00 00       	jmpq   143fa <sgx_thread_mutex_lock+0x246>
   14296:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1429a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1429e:	48 85 c0             	test   %rax,%rax
   142a1:	0f 85 96 00 00 00    	jne    1433d <sgx_thread_mutex_lock+0x189>
   142a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142ab:	48 8b 40 18          	mov    0x18(%rax),%rax
   142af:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   142b3:	74 0d                	je     142c2 <sgx_thread_mutex_lock+0x10e>
   142b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142b9:	48 8b 40 18          	mov    0x18(%rax),%rax
   142bd:	48 85 c0             	test   %rax,%rax
   142c0:	75 7b                	jne    1433d <sgx_thread_mutex_lock+0x189>
   142c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142c6:	48 8b 40 18          	mov    0x18(%rax),%rax
   142ca:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   142ce:	75 35                	jne    14305 <sgx_thread_mutex_lock+0x151>
   142d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142d4:	48 8b 40 18          	mov    0x18(%rax),%rax
   142d8:	48 8b 40 48          	mov    0x48(%rax),%rax
   142dc:	48 89 c2             	mov    %rax,%rdx
   142df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142e3:	48 89 50 18          	mov    %rdx,0x18(%rax)
   142e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142eb:	48 8b 40 18          	mov    0x18(%rax),%rax
   142ef:	48 85 c0             	test   %rax,%rax
   142f2:	0f 94 c0             	sete   %al
   142f5:	84 c0                	test   %al,%al
   142f7:	74 0c                	je     14305 <sgx_thread_mutex_lock+0x151>
   142f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142fd:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   14304:	00 
   14305:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14309:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1430d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   14311:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14315:	48 8b 00             	mov    (%rax),%rax
   14318:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1431c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14320:	48 89 10             	mov    %rdx,(%rax)
   14323:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14327:	48 83 c0 0c          	add    $0xc,%rax
   1432b:	48 89 c7             	mov    %rax,%rdi
   1432e:	e8 25 f9 ff ff       	callq  13c58 <sgx_spin_unlock>
   14333:	b8 00 00 00 00       	mov    $0x0,%eax
   14338:	e9 bd 00 00 00       	jmpq   143fa <sgx_thread_mutex_lock+0x246>
   1433d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   14344:	00 
   14345:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14349:	48 8b 40 18          	mov    0x18(%rax),%rax
   1434d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14351:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14356:	74 19                	je     14371 <sgx_thread_mutex_lock+0x1bd>
   14358:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1435c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14360:	74 0e                	je     14370 <sgx_thread_mutex_lock+0x1bc>
   14362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14366:	48 8b 40 48          	mov    0x48(%rax),%rax
   1436a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1436e:	eb e1                	jmp    14351 <sgx_thread_mutex_lock+0x19d>
   14370:	90                   	nop
   14371:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14376:	75 46                	jne    143be <sgx_thread_mutex_lock+0x20a>
   14378:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1437c:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   14383:	00 
   14384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14388:	48 8b 40 18          	mov    0x18(%rax),%rax
   1438c:	48 85 c0             	test   %rax,%rax
   1438f:	74 15                	je     143a6 <sgx_thread_mutex_lock+0x1f2>
   14391:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14395:	48 8b 40 20          	mov    0x20(%rax),%rax
   14399:	48 89 c2             	mov    %rax,%rdx
   1439c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   143a0:	48 89 42 48          	mov    %rax,0x48(%rdx)
   143a4:	eb 0c                	jmp    143b2 <sgx_thread_mutex_lock+0x1fe>
   143a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143ae:	48 89 50 18          	mov    %rdx,0x18(%rax)
   143b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143ba:	48 89 50 20          	mov    %rdx,0x20(%rax)
   143be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143c2:	48 83 c0 0c          	add    $0xc,%rax
   143c6:	48 89 c7             	mov    %rax,%rdi
   143c9:	e8 8a f8 ff ff       	callq  13c58 <sgx_spin_unlock>
   143ce:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   143d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   143d9:	48 8b 40 10          	mov    0x10(%rax),%rax
   143dd:	48 05 b0 02 01 00    	add    $0x102b0,%rax
   143e3:	48 89 c2             	mov    %rax,%rdx
   143e6:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
   143ea:	48 89 d6             	mov    %rdx,%rsi
   143ed:	48 89 c7             	mov    %rax,%rdi
   143f0:	e8 73 f9 fe ff       	callq  3d68 <sgx_thread_wait_untrusted_event_ocall>
   143f5:	e9 14 fe ff ff       	jmpq   1420e <sgx_thread_mutex_lock+0x5a>
   143fa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   143fe:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   14405:	00 00 
   14407:	74 05                	je     1440e <sgx_thread_mutex_lock+0x25a>
   14409:	e8 7e 70 ff ff       	callq  b48c <__stack_chk_fail>
   1440e:	c9                   	leaveq 
   1440f:	c3                   	retq   

0000000000014410 <sgx_thread_mutex_unlock_lazy>:
   14410:	55                   	push   %rbp
   14411:	48 89 e5             	mov    %rsp,%rbp
   14414:	48 83 ec 20          	sub    $0x20,%rsp
   14418:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1441c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14420:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14425:	74 15                	je     1443c <sgx_thread_mutex_unlock_lazy+0x2c>
   14427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1442b:	be 28 00 00 00       	mov    $0x28,%esi
   14430:	48 89 c7             	mov    %rax,%rdi
   14433:	e8 79 39 ff ff       	callq  7db1 <sgx_is_within_enclave>
   14438:	85 c0                	test   %eax,%eax
   1443a:	75 07                	jne    14443 <sgx_thread_mutex_unlock_lazy+0x33>
   1443c:	b8 01 00 00 00       	mov    $0x1,%eax
   14441:	eb 05                	jmp    14448 <sgx_thread_mutex_unlock_lazy+0x38>
   14443:	b8 00 00 00 00       	mov    $0x0,%eax
   14448:	84 c0                	test   %al,%al
   1444a:	74 0a                	je     14456 <sgx_thread_mutex_unlock_lazy+0x46>
   1444c:	b8 16 00 00 00       	mov    $0x16,%eax
   14451:	e9 12 01 00 00       	jmpq   14568 <sgx_thread_mutex_unlock_lazy+0x158>
   14456:	e8 7b 6d 02 00       	callq  3b1d6 <get_thread_data>
   1445b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1445f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14463:	48 83 c0 0c          	add    $0xc,%rax
   14467:	48 89 c7             	mov    %rax,%rdi
   1446a:	e8 82 f7 ff ff       	callq  13bf1 <sgx_spin_lock>
   1446f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14473:	8b 40 08             	mov    0x8(%rax),%eax
   14476:	83 f8 02             	cmp    $0x2,%eax
   14479:	74 26                	je     144a1 <sgx_thread_mutex_unlock_lazy+0x91>
   1447b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1447f:	8b 40 08             	mov    0x8(%rax),%eax
   14482:	83 f8 01             	cmp    $0x1,%eax
   14485:	74 1a                	je     144a1 <sgx_thread_mutex_unlock_lazy+0x91>
   14487:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1448b:	48 83 c0 0c          	add    $0xc,%rax
   1448f:	48 89 c7             	mov    %rax,%rdi
   14492:	e8 c1 f7 ff ff       	callq  13c58 <sgx_spin_unlock>
   14497:	b8 16 00 00 00       	mov    $0x16,%eax
   1449c:	e9 c7 00 00 00       	jmpq   14568 <sgx_thread_mutex_unlock_lazy+0x158>
   144a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144a5:	48 8b 40 10          	mov    0x10(%rax),%rax
   144a9:	48 85 c0             	test   %rax,%rax
   144ac:	75 1a                	jne    144c8 <sgx_thread_mutex_unlock_lazy+0xb8>
   144ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144b2:	48 83 c0 0c          	add    $0xc,%rax
   144b6:	48 89 c7             	mov    %rax,%rdi
   144b9:	e8 9a f7 ff ff       	callq  13c58 <sgx_spin_unlock>
   144be:	b8 01 00 00 00       	mov    $0x1,%eax
   144c3:	e9 a0 00 00 00       	jmpq   14568 <sgx_thread_mutex_unlock_lazy+0x158>
   144c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144cc:	48 8b 40 10          	mov    0x10(%rax),%rax
   144d0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   144d4:	74 17                	je     144ed <sgx_thread_mutex_unlock_lazy+0xdd>
   144d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144da:	48 83 c0 0c          	add    $0xc,%rax
   144de:	48 89 c7             	mov    %rax,%rdi
   144e1:	e8 72 f7 ff ff       	callq  13c58 <sgx_spin_unlock>
   144e6:	b8 01 00 00 00       	mov    $0x1,%eax
   144eb:	eb 7b                	jmp    14568 <sgx_thread_mutex_unlock_lazy+0x158>
   144ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144f1:	48 8b 00             	mov    (%rax),%rax
   144f4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   144f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144fc:	48 89 10             	mov    %rdx,(%rax)
   144ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14503:	48 8b 00             	mov    (%rax),%rax
   14506:	48 85 c0             	test   %rax,%rax
   14509:	0f 94 c0             	sete   %al
   1450c:	84 c0                	test   %al,%al
   1450e:	74 31                	je     14541 <sgx_thread_mutex_unlock_lazy+0x131>
   14510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14514:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1451b:	00 
   1451c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14520:	48 8b 40 18          	mov    0x18(%rax),%rax
   14524:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1452c:	48 83 c0 0c          	add    $0xc,%rax
   14530:	48 89 c7             	mov    %rax,%rdi
   14533:	e8 20 f7 ff ff       	callq  13c58 <sgx_spin_unlock>
   14538:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1453d:	74 24                	je     14563 <sgx_thread_mutex_unlock_lazy+0x153>
   1453f:	eb 17                	jmp    14558 <sgx_thread_mutex_unlock_lazy+0x148>
   14541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14545:	48 83 c0 0c          	add    $0xc,%rax
   14549:	48 89 c7             	mov    %rax,%rdi
   1454c:	e8 07 f7 ff ff       	callq  13c58 <sgx_spin_unlock>
   14551:	b8 00 00 00 00       	mov    $0x0,%eax
   14556:	eb 10                	jmp    14568 <sgx_thread_mutex_unlock_lazy+0x158>
   14558:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1455c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14560:	48 89 10             	mov    %rdx,(%rax)
   14563:	b8 00 00 00 00       	mov    $0x0,%eax
   14568:	c9                   	leaveq 
   14569:	c3                   	retq   

000000000001456a <sgx_thread_mutex_unlock>:
   1456a:	55                   	push   %rbp
   1456b:	48 89 e5             	mov    %rsp,%rbp
   1456e:	48 83 ec 30          	sub    $0x30,%rsp
   14572:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14576:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1457d:	00 00 
   1457f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14583:	31 c0                	xor    %eax,%eax
   14585:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1458c:	00 
   1458d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14591:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14595:	48 89 d6             	mov    %rdx,%rsi
   14598:	48 89 c7             	mov    %rax,%rdi
   1459b:	e8 70 fe ff ff       	callq  14410 <sgx_thread_mutex_unlock_lazy>
   145a0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   145a3:	8b 45 ec             	mov    -0x14(%rbp),%eax
   145a6:	85 c0                	test   %eax,%eax
   145a8:	74 05                	je     145af <sgx_thread_mutex_unlock+0x45>
   145aa:	8b 45 ec             	mov    -0x14(%rbp),%eax
   145ad:	eb 2e                	jmp    145dd <sgx_thread_mutex_unlock+0x73>
   145af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145b3:	48 85 c0             	test   %rax,%rax
   145b6:	74 20                	je     145d8 <sgx_thread_mutex_unlock+0x6e>
   145b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145bc:	48 8b 40 10          	mov    0x10(%rax),%rax
   145c0:	48 05 b0 02 01 00    	add    $0x102b0,%rax
   145c6:	48 89 c2             	mov    %rax,%rdx
   145c9:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   145cd:	48 89 d6             	mov    %rdx,%rsi
   145d0:	48 89 c7             	mov    %rax,%rdi
   145d3:	e8 3e f8 fe ff       	callq  3e16 <sgx_thread_set_untrusted_event_ocall>
   145d8:	b8 00 00 00 00       	mov    $0x0,%eax
   145dd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   145e1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   145e8:	00 00 
   145ea:	74 05                	je     145f1 <sgx_thread_mutex_unlock+0x87>
   145ec:	e8 9b 6e ff ff       	callq  b48c <__stack_chk_fail>
   145f1:	c9                   	leaveq 
   145f2:	c3                   	retq   

00000000000145f3 <memcpy_s>:
   145f3:	55                   	push   %rbp
   145f4:	48 89 e5             	mov    %rsp,%rbp
   145f7:	48 83 ec 30          	sub    $0x30,%rsp
   145fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   145ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14603:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14607:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1460b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   14610:	75 0a                	jne    1461c <memcpy_s+0x29>
   14612:	b8 00 00 00 00       	mov    $0x0,%eax
   14617:	e9 c1 00 00 00       	jmpq   146dd <memcpy_s+0xea>
   1461c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14621:	0f 95 c0             	setne  %al
   14624:	0f b6 c0             	movzbl %al,%eax
   14627:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1462a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   1462e:	75 15                	jne    14645 <memcpy_s+0x52>
   14630:	e8 6f 02 00 00       	callq  148a4 <__errno>
   14635:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1463b:	b8 16 00 00 00       	mov    $0x16,%eax
   14640:	e9 98 00 00 00       	jmpq   146dd <memcpy_s+0xea>
   14645:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1464a:	74 0a                	je     14656 <memcpy_s+0x63>
   1464c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14650:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   14654:	73 6b                	jae    146c1 <memcpy_s+0xce>
   14656:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1465a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1465e:	be 00 00 00 00       	mov    $0x0,%esi
   14663:	48 89 c7             	mov    %rax,%rdi
   14666:	e8 ca f0 ff ff       	callq  13735 <memset>
   1466b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   14670:	0f 95 c0             	setne  %al
   14673:	0f b6 c0             	movzbl %al,%eax
   14676:	89 45 f8             	mov    %eax,-0x8(%rbp)
   14679:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   1467d:	75 12                	jne    14691 <memcpy_s+0x9e>
   1467f:	e8 20 02 00 00       	callq  148a4 <__errno>
   14684:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1468a:	b8 16 00 00 00       	mov    $0x16,%eax
   1468f:	eb 4c                	jmp    146dd <memcpy_s+0xea>
   14691:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14695:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   14699:	0f 93 c0             	setae  %al
   1469c:	0f b6 c0             	movzbl %al,%eax
   1469f:	89 45 fc             	mov    %eax,-0x4(%rbp)
   146a2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   146a6:	75 12                	jne    146ba <memcpy_s+0xc7>
   146a8:	e8 f7 01 00 00       	callq  148a4 <__errno>
   146ad:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   146b3:	b8 22 00 00 00       	mov    $0x22,%eax
   146b8:	eb 23                	jmp    146dd <memcpy_s+0xea>
   146ba:	b8 16 00 00 00       	mov    $0x16,%eax
   146bf:	eb 1c                	jmp    146dd <memcpy_s+0xea>
   146c1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   146c5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   146c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146cd:	48 89 ce             	mov    %rcx,%rsi
   146d0:	48 89 c7             	mov    %rax,%rdi
   146d3:	e8 ef ef ff ff       	callq  136c7 <memcpy>
   146d8:	b8 00 00 00 00       	mov    $0x0,%eax
   146dd:	c9                   	leaveq 
   146de:	c3                   	retq   

00000000000146df <_setjmp>:
   146df:	50                   	push   %rax
   146e0:	53                   	push   %rbx
   146e1:	51                   	push   %rcx
   146e2:	52                   	push   %rdx
   146e3:	56                   	push   %rsi
   146e4:	57                   	push   %rdi
   146e5:	41 50                	push   %r8
   146e7:	41 51                	push   %r9
   146e9:	41 52                	push   %r10
   146eb:	41 53                	push   %r11
   146ed:	41 54                	push   %r12
   146ef:	41 55                	push   %r13
   146f1:	41 56                	push   %r14
   146f3:	41 57                	push   %r15
   146f5:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   146fc:	e8 b0 36 ff ff       	callq  7db1 <sgx_is_within_enclave>
   14701:	83 f8 00             	cmp    $0x0,%eax
   14704:	74 60                	je     14766 <.crash>
   14706:	41 5f                	pop    %r15
   14708:	41 5e                	pop    %r14
   1470a:	41 5d                	pop    %r13
   1470c:	41 5c                	pop    %r12
   1470e:	41 5b                	pop    %r11
   14710:	41 5a                	pop    %r10
   14712:	41 59                	pop    %r9
   14714:	41 58                	pop    %r8
   14716:	5f                   	pop    %rdi
   14717:	5e                   	pop    %rsi
   14718:	5a                   	pop    %rdx
   14719:	59                   	pop    %rcx
   1471a:	5b                   	pop    %rbx
   1471b:	58                   	pop    %rax
   1471c:	4c 8b 1c 24          	mov    (%rsp),%r11
   14720:	48 89 1f             	mov    %rbx,(%rdi)
   14723:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   14727:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   1472b:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   1472f:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   14733:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   14737:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   1473b:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   1473f:	e8 a2 6a 02 00       	callq  3b1e6 <get_stack_guard>
   14744:	48 31 07             	xor    %rax,(%rdi)
   14747:	48 31 47 08          	xor    %rax,0x8(%rdi)
   1474b:	48 31 47 10          	xor    %rax,0x10(%rdi)
   1474f:	48 31 47 18          	xor    %rax,0x18(%rdi)
   14753:	48 31 47 20          	xor    %rax,0x20(%rdi)
   14757:	48 31 47 28          	xor    %rax,0x28(%rdi)
   1475b:	48 31 47 30          	xor    %rax,0x30(%rdi)
   1475f:	48 31 47 38          	xor    %rax,0x38(%rdi)
   14763:	31 c0                	xor    %eax,%eax
   14765:	c3                   	retq   

0000000000014766 <.crash>:
   14766:	0f 0b                	ud2    

0000000000014768 <_longjmp>:
   14768:	50                   	push   %rax
   14769:	53                   	push   %rbx
   1476a:	51                   	push   %rcx
   1476b:	52                   	push   %rdx
   1476c:	56                   	push   %rsi
   1476d:	57                   	push   %rdi
   1476e:	41 50                	push   %r8
   14770:	41 51                	push   %r9
   14772:	41 52                	push   %r10
   14774:	41 53                	push   %r11
   14776:	41 54                	push   %r12
   14778:	41 55                	push   %r13
   1477a:	41 56                	push   %r14
   1477c:	41 57                	push   %r15
   1477e:	57                   	push   %rdi
   1477f:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   14786:	e8 26 36 ff ff       	callq  7db1 <sgx_is_within_enclave>
   1478b:	83 f8 00             	cmp    $0x0,%eax
   1478e:	74 d6                	je     14766 <.crash>
   14790:	5f                   	pop    %rdi
   14791:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   14795:	e8 4c 6a 02 00       	callq  3b1e6 <get_stack_guard>
   1479a:	48 31 c2             	xor    %rax,%rdx
   1479d:	52                   	push   %rdx
   1479e:	5f                   	pop    %rdi
   1479f:	e8 da 4a ff ff       	callq  927e <is_valid_sp>
   147a4:	83 f8 00             	cmp    $0x0,%eax
   147a7:	74 bd                	je     14766 <.crash>
   147a9:	41 5f                	pop    %r15
   147ab:	41 5e                	pop    %r14
   147ad:	41 5d                	pop    %r13
   147af:	41 5c                	pop    %r12
   147b1:	41 5b                	pop    %r11
   147b3:	41 5a                	pop    %r10
   147b5:	41 59                	pop    %r9
   147b7:	41 58                	pop    %r8
   147b9:	5f                   	pop    %rdi
   147ba:	5e                   	pop    %rsi
   147bb:	5a                   	pop    %rdx
   147bc:	59                   	pop    %rcx
   147bd:	5b                   	pop    %rbx
   147be:	58                   	pop    %rax
   147bf:	89 f0                	mov    %esi,%eax
   147c1:	48 8b 1f             	mov    (%rdi),%rbx
   147c4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   147c8:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   147cc:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   147d0:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   147d4:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   147d8:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   147dc:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   147e0:	50                   	push   %rax
   147e1:	e8 00 6a 02 00       	callq  3b1e6 <get_stack_guard>
   147e6:	48 31 c3             	xor    %rax,%rbx
   147e9:	48 31 c6             	xor    %rax,%rsi
   147ec:	49 31 c4             	xor    %rax,%r12
   147ef:	49 31 c5             	xor    %rax,%r13
   147f2:	49 31 c6             	xor    %rax,%r14
   147f5:	49 31 c7             	xor    %rax,%r15
   147f8:	48 31 c2             	xor    %rax,%rdx
   147fb:	48 31 c1             	xor    %rax,%rcx
   147fe:	58                   	pop    %rax
   147ff:	48 89 f5             	mov    %rsi,%rbp
   14802:	48 89 0a             	mov    %rcx,(%rdx)
   14805:	48 89 d4             	mov    %rdx,%rsp
   14808:	85 c0                	test   %eax,%eax
   1480a:	75 02                	jne    1480e <_longjmp+0xa6>
   1480c:	ff c0                	inc    %eax
   1480e:	c3                   	retq   

000000000001480f <rsrv_mem_init>:
   1480f:	55                   	push   %rbp
   14810:	48 89 e5             	mov    %rsp,%rbp
   14813:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14817:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1481b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1481f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14824:	74 0e                	je     14834 <rsrv_mem_init+0x25>
   14826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1482a:	25 ff 0f 00 00       	and    $0xfff,%eax
   1482f:	48 85 c0             	test   %rax,%rax
   14832:	74 07                	je     1483b <rsrv_mem_init+0x2c>
   14834:	b8 01 00 00 00       	mov    $0x1,%eax
   14839:	eb 67                	jmp    148a2 <rsrv_mem_init+0x93>
   1483b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1483f:	25 ff 0f 00 00       	and    $0xfff,%eax
   14844:	48 85 c0             	test   %rax,%rax
   14847:	74 07                	je     14850 <rsrv_mem_init+0x41>
   14849:	b8 01 00 00 00       	mov    $0x1,%eax
   1484e:	eb 52                	jmp    148a2 <rsrv_mem_init+0x93>
   14850:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14854:	25 ff 0f 00 00       	and    $0xfff,%eax
   14859:	48 85 c0             	test   %rax,%rax
   1485c:	74 07                	je     14865 <rsrv_mem_init+0x56>
   1485e:	b8 01 00 00 00       	mov    $0x1,%eax
   14863:	eb 3d                	jmp    148a2 <rsrv_mem_init+0x93>
   14865:	48 8b 05 44 24 03 00 	mov    0x32444(%rip),%rax        # 46cb0 <rsrv_mem_base>
   1486c:	48 f7 d0             	not    %rax
   1486f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14873:	76 07                	jbe    1487c <rsrv_mem_init+0x6d>
   14875:	b8 01 00 00 00       	mov    $0x1,%eax
   1487a:	eb 26                	jmp    148a2 <rsrv_mem_init+0x93>
   1487c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14880:	48 89 05 29 24 03 00 	mov    %rax,0x32429(%rip)        # 46cb0 <rsrv_mem_base>
   14887:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1488b:	48 89 05 26 24 03 00 	mov    %rax,0x32426(%rip)        # 46cb8 <rsrv_mem_size>
   14892:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14896:	48 89 05 23 24 03 00 	mov    %rax,0x32423(%rip)        # 46cc0 <rsrv_mem_min_size>
   1489d:	b8 00 00 00 00       	mov    $0x0,%eax
   148a2:	5d                   	pop    %rbp
   148a3:	c3                   	retq   

00000000000148a4 <__errno>:
   148a4:	55                   	push   %rbp
   148a5:	48 89 e5             	mov    %rsp,%rbp
   148a8:	e8 99 48 ff ff       	callq  9146 <get_errno_addr>
   148ad:	5d                   	pop    %rbp
   148ae:	c3                   	retq   

00000000000148af <__sprint>:
   148af:	55                   	push   %rbp
   148b0:	48 89 e5             	mov    %rsp,%rbp
   148b3:	48 83 ec 20          	sub    $0x20,%rsp
   148b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   148bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   148bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148c3:	8b 40 0c             	mov    0xc(%rax),%eax
   148c6:	85 c0                	test   %eax,%eax
   148c8:	75 12                	jne    148dc <__sprint+0x2d>
   148ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148ce:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   148d5:	b8 00 00 00 00       	mov    $0x0,%eax
   148da:	eb 2f                	jmp    1490b <__sprint+0x5c>
   148dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   148e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148e4:	48 89 d6             	mov    %rdx,%rsi
   148e7:	48 89 c7             	mov    %rax,%rdi
   148ea:	e8 a6 80 00 00       	callq  1c995 <__sfvwrite>
   148ef:	89 45 fc             	mov    %eax,-0x4(%rbp)
   148f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148f6:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   148fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14901:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   14908:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1490b:	c9                   	leaveq 
   1490c:	c3                   	retq   

000000000001490d <__wcsconv>:
   1490d:	55                   	push   %rbp
   1490e:	48 89 e5             	mov    %rsp,%rbp
   14911:	48 83 ec 50          	sub    $0x50,%rsp
   14915:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   14919:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   1491c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14923:	00 00 
   14925:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14929:	31 c0                	xor    %eax,%eax
   1492b:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   1492f:	79 5f                	jns    14990 <__wcsconv+0x83>
   14931:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   14935:	ba 08 00 00 00       	mov    $0x8,%edx
   1493a:	be 00 00 00 00       	mov    $0x0,%esi
   1493f:	48 89 c7             	mov    %rax,%rdi
   14942:	e8 ee ed ff ff       	callq  13735 <memset>
   14947:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1494b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1494f:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   14953:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   14957:	48 89 d1             	mov    %rdx,%rcx
   1495a:	ba 00 00 00 00       	mov    $0x0,%edx
   1495f:	48 89 c6             	mov    %rax,%rsi
   14962:	bf 00 00 00 00       	mov    $0x0,%edi
   14967:	e8 9b a2 00 00       	callq  1ec07 <wcsrtombs>
   1496c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14970:	48 83 7d d0 ff       	cmpq   $0xffffffffffffffff,-0x30(%rbp)
   14975:	0f 85 bc 00 00 00    	jne    14a37 <__wcsconv+0x12a>
   1497b:	e8 24 ff ff ff       	callq  148a4 <__errno>
   14980:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   14986:	b8 00 00 00 00       	mov    $0x0,%eax
   1498b:	e9 3a 01 00 00       	jmpq   14aca <__wcsconv+0x1bd>
   14990:	83 7d b4 7f          	cmpl   $0x7f,-0x4c(%rbp)
   14994:	7f 0e                	jg     149a4 <__wcsconv+0x97>
   14996:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   14999:	48 98                	cltq   
   1499b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1499f:	e9 93 00 00 00       	jmpq   14a37 <__wcsconv+0x12a>
   149a4:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   149ab:	00 
   149ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   149b0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   149b4:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   149b8:	ba 08 00 00 00       	mov    $0x8,%edx
   149bd:	be 00 00 00 00       	mov    $0x0,%esi
   149c2:	48 89 c7             	mov    %rax,%rdi
   149c5:	e8 6b ed ff ff       	callq  13735 <memset>
   149ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149ce:	48 8d 50 04          	lea    0x4(%rax),%rdx
   149d2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   149d6:	8b 08                	mov    (%rax),%ecx
   149d8:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   149dc:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
   149e0:	89 ce                	mov    %ecx,%esi
   149e2:	48 89 c7             	mov    %rax,%rdi
   149e5:	e8 bd a1 00 00       	callq  1eba7 <wcrtomb>
   149ea:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   149ee:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   149f3:	74 26                	je     14a1b <__wcsconv+0x10e>
   149f5:	48 83 7d d8 ff       	cmpq   $0xffffffffffffffff,-0x28(%rbp)
   149fa:	74 1f                	je     14a1b <__wcsconv+0x10e>
   149fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14a00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a04:	48 01 c2             	add    %rax,%rdx
   14a07:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   14a0a:	48 98                	cltq   
   14a0c:	48 39 c2             	cmp    %rax,%rdx
   14a0f:	77 0a                	ja     14a1b <__wcsconv+0x10e>
   14a11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a15:	48 01 45 d0          	add    %rax,-0x30(%rbp)
   14a19:	eb af                	jmp    149ca <__wcsconv+0xbd>
   14a1b:	48 83 7d d8 ff       	cmpq   $0xffffffffffffffff,-0x28(%rbp)
   14a20:	75 15                	jne    14a37 <__wcsconv+0x12a>
   14a22:	e8 7d fe ff ff       	callq  148a4 <__errno>
   14a27:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   14a2d:	b8 00 00 00 00       	mov    $0x0,%eax
   14a32:	e9 93 00 00 00       	jmpq   14aca <__wcsconv+0x1bd>
   14a37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a3b:	48 83 c0 01          	add    $0x1,%rax
   14a3f:	48 89 c7             	mov    %rax,%rdi
   14a42:	e8 01 ba ff ff       	callq  10448 <dlmalloc>
   14a47:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14a4b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14a50:	75 07                	jne    14a59 <__wcsconv+0x14c>
   14a52:	b8 00 00 00 00       	mov    $0x0,%eax
   14a57:	eb 71                	jmp    14aca <__wcsconv+0x1bd>
   14a59:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14a5d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   14a61:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   14a65:	ba 08 00 00 00       	mov    $0x8,%edx
   14a6a:	be 00 00 00 00       	mov    $0x0,%esi
   14a6f:	48 89 c7             	mov    %rax,%rdi
   14a72:	e8 be ec ff ff       	callq  13735 <memset>
   14a77:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
   14a7b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14a7f:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
   14a83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a87:	48 89 c7             	mov    %rax,%rdi
   14a8a:	e8 78 a1 00 00       	callq  1ec07 <wcsrtombs>
   14a8f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14a93:	48 83 7d d0 ff       	cmpq   $0xffffffffffffffff,-0x30(%rbp)
   14a98:	75 1e                	jne    14ab8 <__wcsconv+0x1ab>
   14a9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a9e:	48 89 c7             	mov    %rax,%rdi
   14aa1:	e8 99 c4 ff ff       	callq  10f3f <dlfree>
   14aa6:	e8 f9 fd ff ff       	callq  148a4 <__errno>
   14aab:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   14ab1:	b8 00 00 00 00       	mov    $0x0,%eax
   14ab6:	eb 12                	jmp    14aca <__wcsconv+0x1bd>
   14ab8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14abc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ac0:	48 01 d0             	add    %rdx,%rax
   14ac3:	c6 00 00             	movb   $0x0,(%rax)
   14ac6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14aca:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   14ace:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   14ad5:	00 00 
   14ad7:	74 05                	je     14ade <__wcsconv+0x1d1>
   14ad9:	e8 ae 69 ff ff       	callq  b48c <__stack_chk_fail>
   14ade:	c9                   	leaveq 
   14adf:	c3                   	retq   

0000000000014ae0 <__vfprintf>:
   14ae0:	55                   	push   %rbp
   14ae1:	48 89 e5             	mov    %rsp,%rbp
   14ae4:	48 81 ec d0 02 00 00 	sub    $0x2d0,%rsp
   14aeb:	48 89 bd 48 fd ff ff 	mov    %rdi,-0x2b8(%rbp)
   14af2:	48 89 b5 40 fd ff ff 	mov    %rsi,-0x2c0(%rbp)
   14af9:	48 89 95 38 fd ff ff 	mov    %rdx,-0x2c8(%rbp)
   14b00:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14b07:	00 00 
   14b09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14b0d:	31 c0                	xor    %eax,%eax
   14b0f:	48 8d 05 98 7d 02 00 	lea    0x27d98(%rip),%rax        # 3c8ae <__func__.2398+0x5>
   14b16:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
   14b1d:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
   14b24:	00 00 00 00 
   14b28:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   14b2f:	48 8b 40 30          	mov    0x30(%rax),%rax
   14b33:	48 85 c0             	test   %rax,%rax
   14b36:	74 11                	je     14b49 <__vfprintf+0x69>
   14b38:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   14b3f:	48 8b 40 30          	mov    0x30(%rax),%rax
   14b43:	48 83 c0 10          	add    $0x10,%rax
   14b47:	eb 05                	jmp    14b4e <__vfprintf+0x6e>
   14b49:	b8 00 00 00 00       	mov    $0x0,%eax
   14b4e:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
   14b55:	48 83 bd 00 fe ff ff 	cmpq   $0x0,-0x200(%rbp)
   14b5c:	00 
   14b5d:	74 1c                	je     14b7b <__vfprintf+0x9b>
   14b5f:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
   14b66:	8b 40 20             	mov    0x20(%rax),%eax
   14b69:	85 c0                	test   %eax,%eax
   14b6b:	75 0e                	jne    14b7b <__vfprintf+0x9b>
   14b6d:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
   14b74:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rax)
   14b7b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   14b82:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   14b86:	98                   	cwtl   
   14b87:	83 e0 1a             	and    $0x1a,%eax
   14b8a:	83 f8 0a             	cmp    $0xa,%eax
   14b8d:	75 25                	jne    14bb4 <__vfprintf+0xd4>
   14b8f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   14b96:	0f b7 40 12          	movzwl 0x12(%rax),%eax
   14b9a:	66 85 c0             	test   %ax,%ax
   14b9d:	78 15                	js     14bb4 <__vfprintf+0xd4>
   14b9f:	e8 00 fd ff ff       	callq  148a4 <__errno>
   14ba4:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   14baa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   14baf:	e9 94 43 00 00       	jmpq   18f48 <__vfprintf+0x4468>
   14bb4:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   14bbb:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   14bc2:	48 c7 85 b0 fd ff ff 	movq   $0x0,-0x250(%rbp)
   14bc9:	00 00 00 00 
   14bcd:	c7 85 9c fd ff ff 01 	movl   $0x1,-0x264(%rbp)
   14bd4:	00 00 00 
   14bd7:	48 8d 8d 68 fe ff ff 	lea    -0x198(%rbp),%rcx
   14bde:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
   14be5:	48 8b 06             	mov    (%rsi),%rax
   14be8:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   14bec:	48 89 01             	mov    %rax,(%rcx)
   14bef:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   14bf3:	48 8b 46 10          	mov    0x10(%rsi),%rax
   14bf7:	48 89 41 10          	mov    %rax,0x10(%rcx)
   14bfb:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   14c02:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   14c09:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   14c10:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
   14c17:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%rbp)
   14c1e:	00 00 00 
   14c21:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   14c28:	00 00 00 
   14c2b:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
   14c32:	00 00 00 
   14c35:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
   14c3c:	00 00 00 00 
   14c40:	48 8d 85 58 fe ff ff 	lea    -0x1a8(%rbp),%rax
   14c47:	ba 08 00 00 00       	mov    $0x8,%edx
   14c4c:	be 00 00 00 00       	mov    $0x0,%esi
   14c51:	48 89 c7             	mov    %rax,%rdi
   14c54:	e8 dc ea ff ff       	callq  13735 <memset>
   14c59:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   14c60:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   14c67:	eb 24                	jmp    14c8d <__vfprintf+0x1ad>
   14c69:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   14c6f:	48 98                	cltq   
   14c71:	48 01 85 c0 fd ff ff 	add    %rax,-0x240(%rbp)
   14c78:	8b 85 58 fd ff ff    	mov    -0x2a8(%rbp),%eax
   14c7e:	83 f8 25             	cmp    $0x25,%eax
   14c81:	75 0a                	jne    14c8d <__vfprintf+0x1ad>
   14c83:	48 83 ad c0 fd ff ff 	subq   $0x1,-0x240(%rbp)
   14c8a:	01 
   14c8b:	eb 34                	jmp    14cc1 <__vfprintf+0x1e1>
   14c8d:	48 8d 95 58 fe ff ff 	lea    -0x1a8(%rbp),%rdx
   14c94:	48 8b b5 c0 fd ff ff 	mov    -0x240(%rbp),%rsi
   14c9b:	48 8d 85 58 fd ff ff 	lea    -0x2a8(%rbp),%rax
   14ca2:	48 89 d1             	mov    %rdx,%rcx
   14ca5:	ba 01 00 00 00       	mov    $0x1,%edx
   14caa:	48 89 c7             	mov    %rax,%rdi
   14cad:	e8 9b 9e 00 00       	callq  1eb4d <mbrtowc>
   14cb2:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   14cb8:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   14cbf:	7f a8                	jg     14c69 <__vfprintf+0x189>
   14cc1:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   14cc8:	48 3b 85 c8 fd ff ff 	cmp    -0x238(%rbp),%rax
   14ccf:	0f 84 e5 00 00 00    	je     14dba <__vfprintf+0x2da>
   14cd5:	48 8b 95 c0 fd ff ff 	mov    -0x240(%rbp),%rdx
   14cdc:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   14ce3:	48 29 c2             	sub    %rax,%rdx
   14ce6:	48 89 d0             	mov    %rdx,%rax
   14ce9:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
   14cf0:	48 83 bd 08 fe ff ff 	cmpq   $0x0,-0x1f8(%rbp)
   14cf7:	00 
   14cf8:	0f 88 9f 41 00 00    	js     18e9d <__vfprintf+0x43bd>
   14cfe:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   14d03:	2b 85 74 fd ff ff    	sub    -0x28c(%rbp),%eax
   14d09:	48 98                	cltq   
   14d0b:	48 39 85 08 fe ff ff 	cmp    %rax,-0x1f8(%rbp)
   14d12:	0f 8f 85 41 00 00    	jg     18e9d <__vfprintf+0x43bd>
   14d18:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   14d1f:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   14d26:	48 89 10             	mov    %rdx,(%rax)
   14d29:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
   14d30:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   14d37:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14d3b:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   14d41:	89 c2                	mov    %eax,%edx
   14d43:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
   14d4a:	01 d0                	add    %edx,%eax
   14d4c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   14d52:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   14d59:	10 
   14d5a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   14d60:	83 c0 01             	add    $0x1,%eax
   14d63:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   14d69:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   14d6f:	83 f8 07             	cmp    $0x7,%eax
   14d72:	7e 2f                	jle    14da3 <__vfprintf+0x2c3>
   14d74:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   14d7b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   14d82:	48 89 d6             	mov    %rdx,%rsi
   14d85:	48 89 c7             	mov    %rax,%rdi
   14d88:	e8 22 fb ff ff       	callq  148af <__sprint>
   14d8d:	85 c0                	test   %eax,%eax
   14d8f:	0f 85 8e 40 00 00    	jne    18e23 <__vfprintf+0x4343>
   14d95:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   14d9c:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   14da3:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
   14daa:	89 c2                	mov    %eax,%edx
   14dac:	8b 85 74 fd ff ff    	mov    -0x28c(%rbp),%eax
   14db2:	01 d0                	add    %edx,%eax
   14db4:	89 85 74 fd ff ff    	mov    %eax,-0x28c(%rbp)
   14dba:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   14dc1:	0f 8e 17 40 00 00    	jle    18dde <__vfprintf+0x42fe>
   14dc7:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   14dce:	01 
   14dcf:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
   14dd6:	00 00 00 
   14dd9:	c7 85 90 fd ff ff 00 	movl   $0x0,-0x270(%rbp)
   14de0:	00 00 00 
   14de3:	c7 85 78 fd ff ff 00 	movl   $0x0,-0x288(%rbp)
   14dea:	00 00 00 
   14ded:	c7 85 7c fd ff ff ff 	movl   $0xffffffff,-0x284(%rbp)
   14df4:	ff ff ff 
   14df7:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   14dfe:	c6 45 87 00          	movb   $0x0,-0x79(%rbp)
   14e02:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   14e09:	48 8d 50 01          	lea    0x1(%rax),%rdx
   14e0d:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   14e14:	0f b6 00             	movzbl (%rax),%eax
   14e17:	0f be c0             	movsbl %al,%eax
   14e1a:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   14e20:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   14e26:	83 e8 20             	sub    $0x20,%eax
   14e29:	83 f8 5a             	cmp    $0x5a,%eax
   14e2c:	0f 87 93 2c 00 00    	ja     17ac5 <__vfprintf+0x2fe5>
   14e32:	89 c0                	mov    %eax,%eax
   14e34:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14e3b:	00 
   14e3c:	48 8d 05 a1 7a 02 00 	lea    0x27aa1(%rip),%rax        # 3c8e4 <__func__.2398+0x3b>
   14e43:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   14e46:	48 63 d0             	movslq %eax,%rdx
   14e49:	48 8d 05 94 7a 02 00 	lea    0x27a94(%rip),%rax        # 3c8e4 <__func__.2398+0x3b>
   14e50:	48 01 d0             	add    %rdx,%rax
   14e53:	ff e0                	jmpq   *%rax
   14e55:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   14e5c:	84 c0                	test   %al,%al
   14e5e:	75 a2                	jne    14e02 <__vfprintf+0x322>
   14e60:	c6 85 56 fd ff ff 20 	movb   $0x20,-0x2aa(%rbp)
   14e67:	eb 99                	jmp    14e02 <__vfprintf+0x322>
   14e69:	83 8d 70 fd ff ff 01 	orl    $0x1,-0x290(%rbp)
   14e70:	eb 90                	jmp    14e02 <__vfprintf+0x322>
   14e72:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
   14e79:	00 00 00 
   14e7c:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   14e83:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   14e8a:	eb 68                	jmp    14ef4 <__vfprintf+0x414>
   14e8c:	81 bd 6c fd ff ff cc 	cmpl   $0xccccccc,-0x294(%rbp)
   14e93:	cc cc 0c 
   14e96:	0f 8f 04 40 00 00    	jg     18ea0 <__vfprintf+0x43c0>
   14e9c:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
   14ea2:	89 d0                	mov    %edx,%eax
   14ea4:	c1 e0 02             	shl    $0x2,%eax
   14ea7:	01 d0                	add    %edx,%eax
   14ea9:	01 c0                	add    %eax,%eax
   14eab:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   14eb1:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   14eb8:	0f b6 00             	movzbl (%rax),%eax
   14ebb:	0f be c0             	movsbl %al,%eax
   14ebe:	83 e8 30             	sub    $0x30,%eax
   14ec1:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   14ec6:	29 c2                	sub    %eax,%edx
   14ec8:	89 d0                	mov    %edx,%eax
   14eca:	39 85 6c fd ff ff    	cmp    %eax,-0x294(%rbp)
   14ed0:	0f 8f cd 3f 00 00    	jg     18ea3 <__vfprintf+0x43c3>
   14ed6:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   14edd:	0f b6 00             	movzbl (%rax),%eax
   14ee0:	0f be c0             	movsbl %al,%eax
   14ee3:	83 e8 30             	sub    $0x30,%eax
   14ee6:	01 85 6c fd ff ff    	add    %eax,-0x294(%rbp)
   14eec:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   14ef3:	01 
   14ef4:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   14efb:	0f b6 00             	movzbl (%rax),%eax
   14efe:	0f be c0             	movsbl %al,%eax
   14f01:	83 e8 30             	sub    $0x30,%eax
   14f04:	83 f8 09             	cmp    $0x9,%eax
   14f07:	76 83                	jbe    14e8c <__vfprintf+0x3ac>
   14f09:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   14f10:	0f b6 00             	movzbl (%rax),%eax
   14f13:	3c 24                	cmp    $0x24,%al
   14f15:	0f 85 13 01 00 00    	jne    1502e <__vfprintf+0x54e>
   14f1b:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   14f21:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%rbp)
   14f27:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   14f2e:	48 85 c0             	test   %rax,%rax
   14f31:	75 32                	jne    14f65 <__vfprintf+0x485>
   14f33:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   14f3a:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   14f41:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   14f48:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   14f4f:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   14f56:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   14f5d:	48 89 c7             	mov    %rax,%rdi
   14f60:	e8 f9 3f 00 00       	callq  18f5e <__find_arguments>
   14f65:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   14f6b:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   14f71:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   14f78:	48 85 c0             	test   %rax,%rax
   14f7b:	74 23                	je     14fa0 <__vfprintf+0x4c0>
   14f7d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   14f84:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   14f8a:	8d 50 01             	lea    0x1(%rax),%edx
   14f8d:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   14f93:	48 98                	cltq   
   14f95:	48 c1 e0 04          	shl    $0x4,%rax
   14f99:	48 01 c8             	add    %rcx,%rax
   14f9c:	8b 00                	mov    (%rax),%eax
   14f9e:	eb 61                	jmp    15001 <__vfprintf+0x521>
   14fa0:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   14fa7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   14fae:	8b 00                	mov    (%rax),%eax
   14fb0:	83 f8 2f             	cmp    $0x2f,%eax
   14fb3:	77 30                	ja     14fe5 <__vfprintf+0x505>
   14fb5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   14fbc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14fc0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   14fc7:	8b 00                	mov    (%rax),%eax
   14fc9:	89 c0                	mov    %eax,%eax
   14fcb:	48 01 d0             	add    %rdx,%rax
   14fce:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   14fd5:	8b 12                	mov    (%rdx),%edx
   14fd7:	8d 4a 08             	lea    0x8(%rdx),%ecx
   14fda:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   14fe1:	89 0a                	mov    %ecx,(%rdx)
   14fe3:	eb 1a                	jmp    14fff <__vfprintf+0x51f>
   14fe5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   14fec:	48 8b 40 08          	mov    0x8(%rax),%rax
   14ff0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   14ff4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   14ffb:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   14fff:	8b 00                	mov    (%rax),%eax
   15001:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   15007:	8b 85 a4 fd ff ff    	mov    -0x25c(%rbp),%eax
   1500d:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   15013:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   1501a:	01 
   1501b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   15022:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   15029:	e9 96 00 00 00       	jmpq   150c4 <__vfprintf+0x5e4>
   1502e:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15035:	48 85 c0             	test   %rax,%rax
   15038:	74 23                	je     1505d <__vfprintf+0x57d>
   1503a:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15041:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15047:	8d 50 01             	lea    0x1(%rax),%edx
   1504a:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15050:	48 98                	cltq   
   15052:	48 c1 e0 04          	shl    $0x4,%rax
   15056:	48 01 c8             	add    %rcx,%rax
   15059:	8b 00                	mov    (%rax),%eax
   1505b:	eb 61                	jmp    150be <__vfprintf+0x5de>
   1505d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15064:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1506b:	8b 00                	mov    (%rax),%eax
   1506d:	83 f8 2f             	cmp    $0x2f,%eax
   15070:	77 30                	ja     150a2 <__vfprintf+0x5c2>
   15072:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15079:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1507d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15084:	8b 00                	mov    (%rax),%eax
   15086:	89 c0                	mov    %eax,%eax
   15088:	48 01 d0             	add    %rdx,%rax
   1508b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15092:	8b 12                	mov    (%rdx),%edx
   15094:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15097:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1509e:	89 0a                	mov    %ecx,(%rdx)
   150a0:	eb 1a                	jmp    150bc <__vfprintf+0x5dc>
   150a2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   150a9:	48 8b 40 08          	mov    0x8(%rax),%rax
   150ad:	48 8d 48 08          	lea    0x8(%rax),%rcx
   150b1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   150b8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   150bc:	8b 00                	mov    (%rax),%eax
   150be:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   150c4:	83 bd 78 fd ff ff 00 	cmpl   $0x0,-0x288(%rbp)
   150cb:	78 05                	js     150d2 <__vfprintf+0x5f2>
   150cd:	e9 30 fd ff ff       	jmpq   14e02 <__vfprintf+0x322>
   150d2:	81 bd 78 fd ff ff 00 	cmpl   $0x80000000,-0x288(%rbp)
   150d9:	00 00 80 
   150dc:	0f 84 c4 3d 00 00    	je     18ea6 <__vfprintf+0x43c6>
   150e2:	f7 9d 78 fd ff ff    	negl   -0x288(%rbp)
   150e8:	83 8d 70 fd ff ff 04 	orl    $0x4,-0x290(%rbp)
   150ef:	e9 0e fd ff ff       	jmpq   14e02 <__vfprintf+0x322>
   150f4:	c6 85 56 fd ff ff 2b 	movb   $0x2b,-0x2aa(%rbp)
   150fb:	e9 02 fd ff ff       	jmpq   14e02 <__vfprintf+0x322>
   15100:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   15107:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1510b:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   15112:	0f b6 00             	movzbl (%rax),%eax
   15115:	0f be c0             	movsbl %al,%eax
   15118:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   1511e:	83 bd 64 fd ff ff 2a 	cmpl   $0x2a,-0x29c(%rbp)
   15125:	0f 85 70 02 00 00    	jne    1539b <__vfprintf+0x8bb>
   1512b:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
   15132:	00 00 00 
   15135:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   1513c:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   15143:	eb 68                	jmp    151ad <__vfprintf+0x6cd>
   15145:	81 bd 6c fd ff ff cc 	cmpl   $0xccccccc,-0x294(%rbp)
   1514c:	cc cc 0c 
   1514f:	0f 8f 54 3d 00 00    	jg     18ea9 <__vfprintf+0x43c9>
   15155:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
   1515b:	89 d0                	mov    %edx,%eax
   1515d:	c1 e0 02             	shl    $0x2,%eax
   15160:	01 d0                	add    %edx,%eax
   15162:	01 c0                	add    %eax,%eax
   15164:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   1516a:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   15171:	0f b6 00             	movzbl (%rax),%eax
   15174:	0f be c0             	movsbl %al,%eax
   15177:	83 e8 30             	sub    $0x30,%eax
   1517a:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   1517f:	29 c2                	sub    %eax,%edx
   15181:	89 d0                	mov    %edx,%eax
   15183:	39 85 6c fd ff ff    	cmp    %eax,-0x294(%rbp)
   15189:	0f 8f 1d 3d 00 00    	jg     18eac <__vfprintf+0x43cc>
   1518f:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   15196:	0f b6 00             	movzbl (%rax),%eax
   15199:	0f be c0             	movsbl %al,%eax
   1519c:	83 e8 30             	sub    $0x30,%eax
   1519f:	01 85 6c fd ff ff    	add    %eax,-0x294(%rbp)
   151a5:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   151ac:	01 
   151ad:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   151b4:	0f b6 00             	movzbl (%rax),%eax
   151b7:	0f be c0             	movsbl %al,%eax
   151ba:	83 e8 30             	sub    $0x30,%eax
   151bd:	83 f8 09             	cmp    $0x9,%eax
   151c0:	76 83                	jbe    15145 <__vfprintf+0x665>
   151c2:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   151c9:	0f b6 00             	movzbl (%rax),%eax
   151cc:	3c 24                	cmp    $0x24,%al
   151ce:	0f 85 13 01 00 00    	jne    152e7 <__vfprintf+0x807>
   151d4:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   151da:	89 85 a0 fd ff ff    	mov    %eax,-0x260(%rbp)
   151e0:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   151e7:	48 85 c0             	test   %rax,%rax
   151ea:	75 32                	jne    1521e <__vfprintf+0x73e>
   151ec:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   151f3:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   151fa:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   15201:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   15208:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   1520f:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   15216:	48 89 c7             	mov    %rax,%rdi
   15219:	e8 40 3d 00 00       	callq  18f5e <__find_arguments>
   1521e:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   15224:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   1522a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15231:	48 85 c0             	test   %rax,%rax
   15234:	74 23                	je     15259 <__vfprintf+0x779>
   15236:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1523d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15243:	8d 50 01             	lea    0x1(%rax),%edx
   15246:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1524c:	48 98                	cltq   
   1524e:	48 c1 e0 04          	shl    $0x4,%rax
   15252:	48 01 c8             	add    %rcx,%rax
   15255:	8b 00                	mov    (%rax),%eax
   15257:	eb 61                	jmp    152ba <__vfprintf+0x7da>
   15259:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15260:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15267:	8b 00                	mov    (%rax),%eax
   15269:	83 f8 2f             	cmp    $0x2f,%eax
   1526c:	77 30                	ja     1529e <__vfprintf+0x7be>
   1526e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15275:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15279:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15280:	8b 00                	mov    (%rax),%eax
   15282:	89 c0                	mov    %eax,%eax
   15284:	48 01 d0             	add    %rdx,%rax
   15287:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1528e:	8b 12                	mov    (%rdx),%edx
   15290:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15293:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1529a:	89 0a                	mov    %ecx,(%rdx)
   1529c:	eb 1a                	jmp    152b8 <__vfprintf+0x7d8>
   1529e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   152a5:	48 8b 40 08          	mov    0x8(%rax),%rax
   152a9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   152ad:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   152b4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   152b8:	8b 00                	mov    (%rax),%eax
   152ba:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   152c0:	8b 85 a0 fd ff ff    	mov    -0x260(%rbp),%eax
   152c6:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   152cc:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   152d3:	01 
   152d4:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   152db:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   152e2:	e9 96 00 00 00       	jmpq   1537d <__vfprintf+0x89d>
   152e7:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   152ee:	48 85 c0             	test   %rax,%rax
   152f1:	74 23                	je     15316 <__vfprintf+0x836>
   152f3:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   152fa:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15300:	8d 50 01             	lea    0x1(%rax),%edx
   15303:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15309:	48 98                	cltq   
   1530b:	48 c1 e0 04          	shl    $0x4,%rax
   1530f:	48 01 c8             	add    %rcx,%rax
   15312:	8b 00                	mov    (%rax),%eax
   15314:	eb 61                	jmp    15377 <__vfprintf+0x897>
   15316:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   1531d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15324:	8b 00                	mov    (%rax),%eax
   15326:	83 f8 2f             	cmp    $0x2f,%eax
   15329:	77 30                	ja     1535b <__vfprintf+0x87b>
   1532b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15332:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15336:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1533d:	8b 00                	mov    (%rax),%eax
   1533f:	89 c0                	mov    %eax,%eax
   15341:	48 01 d0             	add    %rdx,%rax
   15344:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1534b:	8b 12                	mov    (%rdx),%edx
   1534d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15350:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15357:	89 0a                	mov    %ecx,(%rdx)
   15359:	eb 1a                	jmp    15375 <__vfprintf+0x895>
   1535b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15362:	48 8b 40 08          	mov    0x8(%rax),%rax
   15366:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1536a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15371:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15375:	8b 00                	mov    (%rax),%eax
   15377:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   1537d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   15382:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   15389:	0f 49 85 68 fd ff ff 	cmovns -0x298(%rbp),%eax
   15390:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   15396:	e9 67 fa ff ff       	jmpq   14e02 <__vfprintf+0x322>
   1539b:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
   153a2:	00 00 00 
   153a5:	eb 70                	jmp    15417 <__vfprintf+0x937>
   153a7:	81 bd 68 fd ff ff cc 	cmpl   $0xccccccc,-0x298(%rbp)
   153ae:	cc cc 0c 
   153b1:	0f 8f f8 3a 00 00    	jg     18eaf <__vfprintf+0x43cf>
   153b7:	8b 95 68 fd ff ff    	mov    -0x298(%rbp),%edx
   153bd:	89 d0                	mov    %edx,%eax
   153bf:	c1 e0 02             	shl    $0x2,%eax
   153c2:	01 d0                	add    %edx,%eax
   153c4:	01 c0                	add    %eax,%eax
   153c6:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   153cc:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   153d2:	83 e8 30             	sub    $0x30,%eax
   153d5:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   153da:	29 c2                	sub    %eax,%edx
   153dc:	89 d0                	mov    %edx,%eax
   153de:	39 85 68 fd ff ff    	cmp    %eax,-0x298(%rbp)
   153e4:	0f 8f c8 3a 00 00    	jg     18eb2 <__vfprintf+0x43d2>
   153ea:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   153f0:	83 e8 30             	sub    $0x30,%eax
   153f3:	01 85 68 fd ff ff    	add    %eax,-0x298(%rbp)
   153f9:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   15400:	48 8d 50 01          	lea    0x1(%rax),%rdx
   15404:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   1540b:	0f b6 00             	movzbl (%rax),%eax
   1540e:	0f be c0             	movsbl %al,%eax
   15411:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   15417:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   1541d:	83 e8 30             	sub    $0x30,%eax
   15420:	83 f8 09             	cmp    $0x9,%eax
   15423:	76 82                	jbe    153a7 <__vfprintf+0x8c7>
   15425:	83 bd 64 fd ff ff 24 	cmpl   $0x24,-0x29c(%rbp)
   1542c:	75 53                	jne    15481 <__vfprintf+0x9a1>
   1542e:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   15434:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   1543a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15441:	48 85 c0             	test   %rax,%rax
   15444:	0f 85 b8 f9 ff ff    	jne    14e02 <__vfprintf+0x322>
   1544a:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   15451:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   15458:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   1545f:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   15466:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   1546d:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   15474:	48 89 c7             	mov    %rax,%rdi
   15477:	e8 e2 3a 00 00       	callq  18f5e <__find_arguments>
   1547c:	e9 81 f9 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   15481:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   15487:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   1548d:	e9 8e f9 ff ff       	jmpq   14e20 <__vfprintf+0x340>
   15492:	81 8d 70 fd ff ff 80 	orl    $0x80,-0x290(%rbp)
   15499:	00 00 00 
   1549c:	e9 61 f9 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   154a1:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
   154a8:	00 00 00 
   154ab:	81 bd 68 fd ff ff cc 	cmpl   $0xccccccc,-0x298(%rbp)
   154b2:	cc cc 0c 
   154b5:	0f 8f fa 39 00 00    	jg     18eb5 <__vfprintf+0x43d5>
   154bb:	8b 95 68 fd ff ff    	mov    -0x298(%rbp),%edx
   154c1:	89 d0                	mov    %edx,%eax
   154c3:	c1 e0 02             	shl    $0x2,%eax
   154c6:	01 d0                	add    %edx,%eax
   154c8:	01 c0                	add    %eax,%eax
   154ca:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   154d0:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   154d6:	83 e8 30             	sub    $0x30,%eax
   154d9:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   154de:	29 c2                	sub    %eax,%edx
   154e0:	89 d0                	mov    %edx,%eax
   154e2:	39 85 68 fd ff ff    	cmp    %eax,-0x298(%rbp)
   154e8:	0f 8f ca 39 00 00    	jg     18eb8 <__vfprintf+0x43d8>
   154ee:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   154f4:	83 e8 30             	sub    $0x30,%eax
   154f7:	01 85 68 fd ff ff    	add    %eax,-0x298(%rbp)
   154fd:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   15504:	48 8d 50 01          	lea    0x1(%rax),%rdx
   15508:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   1550f:	0f b6 00             	movzbl (%rax),%eax
   15512:	0f be c0             	movsbl %al,%eax
   15515:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   1551b:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   15521:	83 e8 30             	sub    $0x30,%eax
   15524:	83 f8 09             	cmp    $0x9,%eax
   15527:	76 82                	jbe    154ab <__vfprintf+0x9cb>
   15529:	83 bd 64 fd ff ff 24 	cmpl   $0x24,-0x29c(%rbp)
   15530:	75 53                	jne    15585 <__vfprintf+0xaa5>
   15532:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   15538:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   1553e:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15545:	48 85 c0             	test   %rax,%rax
   15548:	0f 85 b4 f8 ff ff    	jne    14e02 <__vfprintf+0x322>
   1554e:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   15555:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   1555c:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   15563:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   1556a:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   15571:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   15578:	48 89 c7             	mov    %rax,%rdi
   1557b:	e8 de 39 00 00       	callq  18f5e <__find_arguments>
   15580:	e9 7d f8 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   15585:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   1558b:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   15591:	e9 8a f8 ff ff       	jmpq   14e20 <__vfprintf+0x340>
   15596:	83 8d 70 fd ff ff 08 	orl    $0x8,-0x290(%rbp)
   1559d:	e9 60 f8 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   155a2:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   155a9:	0f b6 00             	movzbl (%rax),%eax
   155ac:	3c 68                	cmp    $0x68,%al
   155ae:	75 17                	jne    155c7 <__vfprintf+0xae7>
   155b0:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   155b7:	01 
   155b8:	81 8d 70 fd ff ff 00 	orl    $0x800,-0x290(%rbp)
   155bf:	08 00 00 
   155c2:	e9 3b f8 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   155c7:	83 8d 70 fd ff ff 40 	orl    $0x40,-0x290(%rbp)
   155ce:	e9 2f f8 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   155d3:	81 8d 70 fd ff ff 00 	orl    $0x1000,-0x290(%rbp)
   155da:	10 00 00 
   155dd:	e9 20 f8 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   155e2:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   155e9:	0f b6 00             	movzbl (%rax),%eax
   155ec:	3c 6c                	cmp    $0x6c,%al
   155ee:	75 14                	jne    15604 <__vfprintf+0xb24>
   155f0:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   155f7:	01 
   155f8:	83 8d 70 fd ff ff 20 	orl    $0x20,-0x290(%rbp)
   155ff:	e9 fe f7 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   15604:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   1560b:	e9 f2 f7 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   15610:	83 8d 70 fd ff ff 20 	orl    $0x20,-0x290(%rbp)
   15617:	e9 e6 f7 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   1561c:	81 8d 70 fd ff ff 00 	orl    $0x200,-0x290(%rbp)
   15623:	02 00 00 
   15626:	e9 d7 f7 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   1562b:	81 8d 70 fd ff ff 00 	orl    $0x400,-0x290(%rbp)
   15632:	04 00 00 
   15635:	e9 c8 f7 ff ff       	jmpq   14e02 <__vfprintf+0x322>
   1563a:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15640:	83 e0 10             	and    $0x10,%eax
   15643:	85 c0                	test   %eax,%eax
   15645:	0f 84 1b 01 00 00    	je     15766 <__vfprintf+0xc86>
   1564b:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   15652:	ba 08 00 00 00       	mov    $0x8,%edx
   15657:	be 00 00 00 00       	mov    $0x0,%esi
   1565c:	48 89 c7             	mov    %rax,%rdi
   1565f:	e8 d1 e0 ff ff       	callq  13735 <memset>
   15664:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   1566b:	48 85 c0             	test   %rax,%rax
   1566e:	74 25                	je     15695 <__vfprintf+0xbb5>
   15670:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15677:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1567d:	8d 50 01             	lea    0x1(%rax),%edx
   15680:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15686:	48 98                	cltq   
   15688:	48 c1 e0 04          	shl    $0x4,%rax
   1568c:	48 01 c8             	add    %rcx,%rax
   1568f:	8b 00                	mov    (%rax),%eax
   15691:	89 c1                	mov    %eax,%ecx
   15693:	eb 63                	jmp    156f8 <__vfprintf+0xc18>
   15695:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   1569c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   156a3:	8b 00                	mov    (%rax),%eax
   156a5:	83 f8 2f             	cmp    $0x2f,%eax
   156a8:	77 30                	ja     156da <__vfprintf+0xbfa>
   156aa:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   156b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   156b5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   156bc:	8b 00                	mov    (%rax),%eax
   156be:	89 c0                	mov    %eax,%eax
   156c0:	48 01 d0             	add    %rdx,%rax
   156c3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   156ca:	8b 12                	mov    (%rdx),%edx
   156cc:	8d 4a 08             	lea    0x8(%rdx),%ecx
   156cf:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   156d6:	89 0a                	mov    %ecx,(%rdx)
   156d8:	eb 1a                	jmp    156f4 <__vfprintf+0xc14>
   156da:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   156e1:	48 8b 40 08          	mov    0x8(%rax),%rax
   156e5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   156e9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   156f0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   156f4:	8b 00                	mov    (%rax),%eax
   156f6:	89 c1                	mov    %eax,%ecx
   156f8:	48 8d 95 60 fe ff ff 	lea    -0x1a0(%rbp),%rdx
   156ff:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15703:	89 ce                	mov    %ecx,%esi
   15705:	48 89 c7             	mov    %rax,%rdi
   15708:	e8 9a 94 00 00       	callq  1eba7 <wcrtomb>
   1570d:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
   15714:	48 83 bd 28 fe ff ff 	cmpq   $0xffffffffffffffff,-0x1d8(%rbp)
   1571b:	ff 
   1571c:	75 2b                	jne    15749 <__vfprintf+0xc69>
   1571e:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   15725:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   15729:	83 c8 40             	or     $0x40,%eax
   1572c:	89 c2                	mov    %eax,%edx
   1572e:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   15735:	66 89 50 10          	mov    %dx,0x10(%rax)
   15739:	e8 66 f1 ff ff       	callq  148a4 <__errno>
   1573e:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   15744:	e9 35 37 00 00       	jmpq   18e7e <__vfprintf+0x439e>
   15749:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1574d:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   15754:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   1575b:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   15761:	e9 b2 00 00 00       	jmpq   15818 <__vfprintf+0xd38>
   15766:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   1576d:	48 85 c0             	test   %rax,%rax
   15770:	74 25                	je     15797 <__vfprintf+0xcb7>
   15772:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15779:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1577f:	8d 50 01             	lea    0x1(%rax),%edx
   15782:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15788:	48 98                	cltq   
   1578a:	48 c1 e0 04          	shl    $0x4,%rax
   1578e:	48 01 c8             	add    %rcx,%rax
   15791:	8b 00                	mov    (%rax),%eax
   15793:	89 c2                	mov    %eax,%edx
   15795:	eb 63                	jmp    157fa <__vfprintf+0xd1a>
   15797:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   1579e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   157a5:	8b 00                	mov    (%rax),%eax
   157a7:	83 f8 2f             	cmp    $0x2f,%eax
   157aa:	77 30                	ja     157dc <__vfprintf+0xcfc>
   157ac:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   157b3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   157b7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   157be:	8b 00                	mov    (%rax),%eax
   157c0:	89 c0                	mov    %eax,%eax
   157c2:	48 01 d0             	add    %rdx,%rax
   157c5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   157cc:	8b 12                	mov    (%rdx),%edx
   157ce:	8d 4a 08             	lea    0x8(%rdx),%ecx
   157d1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   157d8:	89 0a                	mov    %ecx,(%rdx)
   157da:	eb 1a                	jmp    157f6 <__vfprintf+0xd16>
   157dc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   157e3:	48 8b 40 08          	mov    0x8(%rax),%rax
   157e7:	48 8d 48 08          	lea    0x8(%rax),%rcx
   157eb:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   157f2:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   157f6:	8b 00                	mov    (%rax),%eax
   157f8:	89 c2                	mov    %eax,%edx
   157fa:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   157fe:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   15805:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1580c:	88 10                	mov    %dl,(%rax)
   1580e:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   15815:	00 00 00 
   15818:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   1581f:	e9 de 22 00 00       	jmpq   17b02 <__vfprintf+0x3022>
   15824:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   1582b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15831:	25 00 10 00 00       	and    $0x1000,%eax
   15836:	85 c0                	test   %eax,%eax
   15838:	0f 84 9a 00 00 00    	je     158d8 <__vfprintf+0xdf8>
   1583e:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15845:	48 85 c0             	test   %rax,%rax
   15848:	74 27                	je     15871 <__vfprintf+0xd91>
   1584a:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15851:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15857:	8d 50 01             	lea    0x1(%rax),%edx
   1585a:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15860:	48 98                	cltq   
   15862:	48 c1 e0 04          	shl    $0x4,%rax
   15866:	48 01 c8             	add    %rcx,%rax
   15869:	48 8b 00             	mov    (%rax),%rax
   1586c:	e9 0f 05 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15871:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15878:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1587f:	8b 00                	mov    (%rax),%eax
   15881:	83 f8 2f             	cmp    $0x2f,%eax
   15884:	77 30                	ja     158b6 <__vfprintf+0xdd6>
   15886:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1588d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15891:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15898:	8b 00                	mov    (%rax),%eax
   1589a:	89 c0                	mov    %eax,%eax
   1589c:	48 01 d0             	add    %rdx,%rax
   1589f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   158a6:	8b 12                	mov    (%rdx),%edx
   158a8:	8d 4a 08             	lea    0x8(%rdx),%ecx
   158ab:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   158b2:	89 0a                	mov    %ecx,(%rdx)
   158b4:	eb 1a                	jmp    158d0 <__vfprintf+0xdf0>
   158b6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   158bd:	48 8b 40 08          	mov    0x8(%rax),%rax
   158c1:	48 8d 48 08          	lea    0x8(%rax),%rcx
   158c5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   158cc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   158d0:	48 8b 00             	mov    (%rax),%rax
   158d3:	e9 a8 04 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   158d8:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   158de:	83 e0 20             	and    $0x20,%eax
   158e1:	85 c0                	test   %eax,%eax
   158e3:	0f 84 9a 00 00 00    	je     15983 <__vfprintf+0xea3>
   158e9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   158f0:	48 85 c0             	test   %rax,%rax
   158f3:	74 27                	je     1591c <__vfprintf+0xe3c>
   158f5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   158fc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15902:	8d 50 01             	lea    0x1(%rax),%edx
   15905:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1590b:	48 98                	cltq   
   1590d:	48 c1 e0 04          	shl    $0x4,%rax
   15911:	48 01 c8             	add    %rcx,%rax
   15914:	48 8b 00             	mov    (%rax),%rax
   15917:	e9 64 04 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   1591c:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15923:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1592a:	8b 00                	mov    (%rax),%eax
   1592c:	83 f8 2f             	cmp    $0x2f,%eax
   1592f:	77 30                	ja     15961 <__vfprintf+0xe81>
   15931:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15938:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1593c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15943:	8b 00                	mov    (%rax),%eax
   15945:	89 c0                	mov    %eax,%eax
   15947:	48 01 d0             	add    %rdx,%rax
   1594a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15951:	8b 12                	mov    (%rdx),%edx
   15953:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15956:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1595d:	89 0a                	mov    %ecx,(%rdx)
   1595f:	eb 1a                	jmp    1597b <__vfprintf+0xe9b>
   15961:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15968:	48 8b 40 08          	mov    0x8(%rax),%rax
   1596c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15970:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15977:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1597b:	48 8b 00             	mov    (%rax),%rax
   1597e:	e9 fd 03 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15983:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15989:	83 e0 10             	and    $0x10,%eax
   1598c:	85 c0                	test   %eax,%eax
   1598e:	0f 84 9a 00 00 00    	je     15a2e <__vfprintf+0xf4e>
   15994:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   1599b:	48 85 c0             	test   %rax,%rax
   1599e:	74 27                	je     159c7 <__vfprintf+0xee7>
   159a0:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   159a7:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   159ad:	8d 50 01             	lea    0x1(%rax),%edx
   159b0:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   159b6:	48 98                	cltq   
   159b8:	48 c1 e0 04          	shl    $0x4,%rax
   159bc:	48 01 c8             	add    %rcx,%rax
   159bf:	48 8b 00             	mov    (%rax),%rax
   159c2:	e9 b9 03 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   159c7:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   159ce:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   159d5:	8b 00                	mov    (%rax),%eax
   159d7:	83 f8 2f             	cmp    $0x2f,%eax
   159da:	77 30                	ja     15a0c <__vfprintf+0xf2c>
   159dc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   159e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   159e7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   159ee:	8b 00                	mov    (%rax),%eax
   159f0:	89 c0                	mov    %eax,%eax
   159f2:	48 01 d0             	add    %rdx,%rax
   159f5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   159fc:	8b 12                	mov    (%rdx),%edx
   159fe:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15a01:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15a08:	89 0a                	mov    %ecx,(%rdx)
   15a0a:	eb 1a                	jmp    15a26 <__vfprintf+0xf46>
   15a0c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15a13:	48 8b 40 08          	mov    0x8(%rax),%rax
   15a17:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15a1b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15a22:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15a26:	48 8b 00             	mov    (%rax),%rax
   15a29:	e9 52 03 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15a2e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15a34:	25 00 02 00 00       	and    $0x200,%eax
   15a39:	85 c0                	test   %eax,%eax
   15a3b:	0f 84 9a 00 00 00    	je     15adb <__vfprintf+0xffb>
   15a41:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15a48:	48 85 c0             	test   %rax,%rax
   15a4b:	74 27                	je     15a74 <__vfprintf+0xf94>
   15a4d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15a54:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15a5a:	8d 50 01             	lea    0x1(%rax),%edx
   15a5d:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15a63:	48 98                	cltq   
   15a65:	48 c1 e0 04          	shl    $0x4,%rax
   15a69:	48 01 c8             	add    %rcx,%rax
   15a6c:	48 8b 00             	mov    (%rax),%rax
   15a6f:	e9 0c 03 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15a74:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15a7b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15a82:	8b 00                	mov    (%rax),%eax
   15a84:	83 f8 2f             	cmp    $0x2f,%eax
   15a87:	77 30                	ja     15ab9 <__vfprintf+0xfd9>
   15a89:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15a90:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15a94:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15a9b:	8b 00                	mov    (%rax),%eax
   15a9d:	89 c0                	mov    %eax,%eax
   15a9f:	48 01 d0             	add    %rdx,%rax
   15aa2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15aa9:	8b 12                	mov    (%rdx),%edx
   15aab:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15aae:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15ab5:	89 0a                	mov    %ecx,(%rdx)
   15ab7:	eb 1a                	jmp    15ad3 <__vfprintf+0xff3>
   15ab9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15ac0:	48 8b 40 08          	mov    0x8(%rax),%rax
   15ac4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15ac8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15acf:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15ad3:	48 8b 00             	mov    (%rax),%rax
   15ad6:	e9 a5 02 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15adb:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15ae1:	25 00 04 00 00       	and    $0x400,%eax
   15ae6:	85 c0                	test   %eax,%eax
   15ae8:	0f 84 9a 00 00 00    	je     15b88 <__vfprintf+0x10a8>
   15aee:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15af5:	48 85 c0             	test   %rax,%rax
   15af8:	74 27                	je     15b21 <__vfprintf+0x1041>
   15afa:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15b01:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15b07:	8d 50 01             	lea    0x1(%rax),%edx
   15b0a:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15b10:	48 98                	cltq   
   15b12:	48 c1 e0 04          	shl    $0x4,%rax
   15b16:	48 01 c8             	add    %rcx,%rax
   15b19:	48 8b 00             	mov    (%rax),%rax
   15b1c:	e9 5f 02 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15b21:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15b28:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15b2f:	8b 00                	mov    (%rax),%eax
   15b31:	83 f8 2f             	cmp    $0x2f,%eax
   15b34:	77 30                	ja     15b66 <__vfprintf+0x1086>
   15b36:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15b3d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15b41:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15b48:	8b 00                	mov    (%rax),%eax
   15b4a:	89 c0                	mov    %eax,%eax
   15b4c:	48 01 d0             	add    %rdx,%rax
   15b4f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15b56:	8b 12                	mov    (%rdx),%edx
   15b58:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15b5b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15b62:	89 0a                	mov    %ecx,(%rdx)
   15b64:	eb 1a                	jmp    15b80 <__vfprintf+0x10a0>
   15b66:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15b6d:	48 8b 40 08          	mov    0x8(%rax),%rax
   15b71:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15b75:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15b7c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15b80:	48 8b 00             	mov    (%rax),%rax
   15b83:	e9 f8 01 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15b88:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15b8e:	83 e0 40             	and    $0x40,%eax
   15b91:	85 c0                	test   %eax,%eax
   15b93:	0f 84 a0 00 00 00    	je     15c39 <__vfprintf+0x1159>
   15b99:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15ba0:	48 85 c0             	test   %rax,%rax
   15ba3:	74 2a                	je     15bcf <__vfprintf+0x10ef>
   15ba5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15bac:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15bb2:	8d 50 01             	lea    0x1(%rax),%edx
   15bb5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15bbb:	48 98                	cltq   
   15bbd:	48 c1 e0 04          	shl    $0x4,%rax
   15bc1:	48 01 c8             	add    %rcx,%rax
   15bc4:	8b 00                	mov    (%rax),%eax
   15bc6:	48 0f bf c0          	movswq %ax,%rax
   15bca:	e9 b1 01 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15bcf:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15bd6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15bdd:	8b 00                	mov    (%rax),%eax
   15bdf:	83 f8 2f             	cmp    $0x2f,%eax
   15be2:	77 30                	ja     15c14 <__vfprintf+0x1134>
   15be4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15beb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15bef:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15bf6:	8b 00                	mov    (%rax),%eax
   15bf8:	89 c0                	mov    %eax,%eax
   15bfa:	48 01 d0             	add    %rdx,%rax
   15bfd:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15c04:	8b 12                	mov    (%rdx),%edx
   15c06:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15c09:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15c10:	89 0a                	mov    %ecx,(%rdx)
   15c12:	eb 1a                	jmp    15c2e <__vfprintf+0x114e>
   15c14:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15c1b:	48 8b 40 08          	mov    0x8(%rax),%rax
   15c1f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15c23:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15c2a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15c2e:	8b 00                	mov    (%rax),%eax
   15c30:	48 0f bf c0          	movswq %ax,%rax
   15c34:	e9 47 01 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15c39:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15c3f:	25 00 08 00 00       	and    $0x800,%eax
   15c44:	85 c0                	test   %eax,%eax
   15c46:	0f 84 a0 00 00 00    	je     15cec <__vfprintf+0x120c>
   15c4c:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15c53:	48 85 c0             	test   %rax,%rax
   15c56:	74 2a                	je     15c82 <__vfprintf+0x11a2>
   15c58:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15c5f:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15c65:	8d 50 01             	lea    0x1(%rax),%edx
   15c68:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15c6e:	48 98                	cltq   
   15c70:	48 c1 e0 04          	shl    $0x4,%rax
   15c74:	48 01 c8             	add    %rcx,%rax
   15c77:	8b 00                	mov    (%rax),%eax
   15c79:	48 0f be c0          	movsbq %al,%rax
   15c7d:	e9 fe 00 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15c82:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15c89:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15c90:	8b 00                	mov    (%rax),%eax
   15c92:	83 f8 2f             	cmp    $0x2f,%eax
   15c95:	77 30                	ja     15cc7 <__vfprintf+0x11e7>
   15c97:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15c9e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15ca2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15ca9:	8b 00                	mov    (%rax),%eax
   15cab:	89 c0                	mov    %eax,%eax
   15cad:	48 01 d0             	add    %rdx,%rax
   15cb0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15cb7:	8b 12                	mov    (%rdx),%edx
   15cb9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15cbc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15cc3:	89 0a                	mov    %ecx,(%rdx)
   15cc5:	eb 1a                	jmp    15ce1 <__vfprintf+0x1201>
   15cc7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15cce:	48 8b 40 08          	mov    0x8(%rax),%rax
   15cd2:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15cd6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15cdd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15ce1:	8b 00                	mov    (%rax),%eax
   15ce3:	48 0f be c0          	movsbq %al,%rax
   15ce7:	e9 94 00 00 00       	jmpq   15d80 <__vfprintf+0x12a0>
   15cec:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15cf3:	48 85 c0             	test   %rax,%rax
   15cf6:	74 25                	je     15d1d <__vfprintf+0x123d>
   15cf8:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15cff:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15d05:	8d 50 01             	lea    0x1(%rax),%edx
   15d08:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15d0e:	48 98                	cltq   
   15d10:	48 c1 e0 04          	shl    $0x4,%rax
   15d14:	48 01 c8             	add    %rcx,%rax
   15d17:	8b 00                	mov    (%rax),%eax
   15d19:	48 98                	cltq   
   15d1b:	eb 63                	jmp    15d80 <__vfprintf+0x12a0>
   15d1d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15d24:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15d2b:	8b 00                	mov    (%rax),%eax
   15d2d:	83 f8 2f             	cmp    $0x2f,%eax
   15d30:	77 30                	ja     15d62 <__vfprintf+0x1282>
   15d32:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15d39:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15d3d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15d44:	8b 00                	mov    (%rax),%eax
   15d46:	89 c0                	mov    %eax,%eax
   15d48:	48 01 d0             	add    %rdx,%rax
   15d4b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15d52:	8b 12                	mov    (%rdx),%edx
   15d54:	8d 4a 08             	lea    0x8(%rdx),%ecx
   15d57:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15d5e:	89 0a                	mov    %ecx,(%rdx)
   15d60:	eb 1a                	jmp    15d7c <__vfprintf+0x129c>
   15d62:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15d69:	48 8b 40 08          	mov    0x8(%rax),%rax
   15d6d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15d71:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15d78:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15d7c:	8b 00                	mov    (%rax),%eax
   15d7e:	48 98                	cltq   
   15d80:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   15d87:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   15d8e:	48 85 c0             	test   %rax,%rax
   15d91:	79 0e                	jns    15da1 <__vfprintf+0x12c1>
   15d93:	48 f7 9d e0 fd ff ff 	negq   -0x220(%rbp)
   15d9a:	c6 85 56 fd ff ff 2d 	movb   $0x2d,-0x2aa(%rbp)
   15da1:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
   15da8:	00 00 00 
   15dab:	e9 18 1b 00 00       	jmpq   178c8 <__vfprintf+0x2de8>
   15db0:	83 bd 64 fd ff ff 61 	cmpl   $0x61,-0x29c(%rbp)
   15db7:	75 1b                	jne    15dd4 <__vfprintf+0x12f4>
   15db9:	c6 45 87 78          	movb   $0x78,-0x79(%rbp)
   15dbd:	48 8d 05 6c 6e 02 00 	lea    0x26e6c(%rip),%rax        # 3cc30 <xdigs_lower.3166>
   15dc4:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   15dcb:	c6 85 57 fd ff ff 70 	movb   $0x70,-0x2a9(%rbp)
   15dd2:	eb 19                	jmp    15ded <__vfprintf+0x130d>
   15dd4:	c6 45 87 58          	movb   $0x58,-0x79(%rbp)
   15dd8:	48 8d 05 61 6e 02 00 	lea    0x26e61(%rip),%rax        # 3cc40 <xdigs_upper.3167>
   15ddf:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   15de6:	c6 85 57 fd ff ff 50 	movb   $0x50,-0x2a9(%rbp)
   15ded:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   15df4:	78 07                	js     15dfd <__vfprintf+0x131d>
   15df6:	83 85 7c fd ff ff 01 	addl   $0x1,-0x284(%rbp)
   15dfd:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   15e04:	00 
   15e05:	74 0f                	je     15e16 <__vfprintf+0x1336>
   15e07:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   15e0e:	48 89 c7             	mov    %rax,%rdi
   15e11:	e8 81 51 00 00       	callq  1af97 <__freedtoa>
   15e16:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   15e1c:	83 e0 08             	and    $0x8,%eax
   15e1f:	85 c0                	test   %eax,%eax
   15e21:	0f 84 d2 00 00 00    	je     15ef9 <__vfprintf+0x1419>
   15e27:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15e2e:	48 85 c0             	test   %rax,%rax
   15e31:	74 23                	je     15e56 <__vfprintf+0x1376>
   15e33:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15e3a:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15e40:	8d 50 01             	lea    0x1(%rax),%edx
   15e43:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15e49:	48 98                	cltq   
   15e4b:	48 c1 e0 04          	shl    $0x4,%rax
   15e4f:	48 01 c8             	add    %rcx,%rax
   15e52:	db 28                	fldt   (%rax)
   15e54:	eb 2b                	jmp    15e81 <__vfprintf+0x13a1>
   15e56:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15e5d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15e64:	48 8b 40 08          	mov    0x8(%rax),%rax
   15e68:	48 83 c0 0f          	add    $0xf,%rax
   15e6c:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   15e70:	48 8d 48 10          	lea    0x10(%rax),%rcx
   15e74:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15e7b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15e7f:	db 28                	fldt   (%rax)
   15e81:	db bd 30 fe ff ff    	fstpt  -0x1d0(%rbp)
   15e87:	db ad 30 fe ff ff    	fldt   -0x1d0(%rbp)
   15e8d:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   15e94:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   15e9b:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   15ea2:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   15ea8:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   15eaf:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   15eb4:	db 3c 24             	fstpt  (%rsp)
   15eb7:	49 89 f8             	mov    %rdi,%r8
   15eba:	48 89 c7             	mov    %rax,%rdi
   15ebd:	e8 82 73 00 00       	callq  1d244 <__hldtoa>
   15ec2:	48 83 c4 10          	add    $0x10,%rsp
   15ec6:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   15ecd:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   15ed4:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   15edb:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   15ee2:	00 
   15ee3:	0f 85 1e 01 00 00    	jne    16007 <__vfprintf+0x1527>
   15ee9:	e8 b6 e9 ff ff       	callq  148a4 <__errno>
   15eee:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   15ef4:	e9 85 2f 00 00       	jmpq   18e7e <__vfprintf+0x439e>
   15ef9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   15f00:	48 85 c0             	test   %rax,%rax
   15f03:	74 25                	je     15f2a <__vfprintf+0x144a>
   15f05:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   15f0c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   15f12:	8d 50 01             	lea    0x1(%rax),%edx
   15f15:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   15f1b:	48 98                	cltq   
   15f1d:	48 c1 e0 04          	shl    $0x4,%rax
   15f21:	48 01 c8             	add    %rcx,%rax
   15f24:	f2 0f 10 00          	movsd  (%rax),%xmm0
   15f28:	eb 69                	jmp    15f93 <__vfprintf+0x14b3>
   15f2a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   15f31:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15f38:	8b 40 04             	mov    0x4(%rax),%eax
   15f3b:	3d af 00 00 00       	cmp    $0xaf,%eax
   15f40:	77 33                	ja     15f75 <__vfprintf+0x1495>
   15f42:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15f49:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15f4d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15f54:	8b 40 04             	mov    0x4(%rax),%eax
   15f57:	89 c0                	mov    %eax,%eax
   15f59:	48 01 d0             	add    %rdx,%rax
   15f5c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15f63:	8b 52 04             	mov    0x4(%rdx),%edx
   15f66:	8d 4a 10             	lea    0x10(%rdx),%ecx
   15f69:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15f70:	89 4a 04             	mov    %ecx,0x4(%rdx)
   15f73:	eb 1a                	jmp    15f8f <__vfprintf+0x14af>
   15f75:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   15f7c:	48 8b 40 08          	mov    0x8(%rax),%rax
   15f80:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15f84:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   15f8b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   15f8f:	f2 0f 10 00          	movsd  (%rax),%xmm0
   15f93:	f2 0f 11 85 30 fe ff 	movsd  %xmm0,-0x1d0(%rbp)
   15f9a:	ff 
   15f9b:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   15fa2:	4c 8d 85 a8 fd ff ff 	lea    -0x258(%rbp),%r8
   15fa9:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   15fb0:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   15fb7:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   15fbd:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   15fc4:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
   15fcb:	f2 0f 10 85 30 fd ff 	movsd  -0x2d0(%rbp),%xmm0
   15fd2:	ff 
   15fd3:	e8 1a 6f 00 00       	callq  1cef2 <__hdtoa>
   15fd8:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   15fdf:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   15fe6:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   15fed:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   15ff4:	00 
   15ff5:	75 10                	jne    16007 <__vfprintf+0x1527>
   15ff7:	e8 a8 e8 ff ff       	callq  148a4 <__errno>
   15ffc:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   16002:	e9 77 2e 00 00       	jmpq   18e7e <__vfprintf+0x439e>
   16007:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   1600e:	79 1d                	jns    1602d <__vfprintf+0x154d>
   16010:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   16017:	48 89 c2             	mov    %rax,%rdx
   1601a:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   16021:	48 29 c2             	sub    %rax,%rdx
   16024:	48 89 d0             	mov    %rdx,%rax
   16027:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   1602d:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   16033:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
   16038:	0f 85 b8 02 00 00    	jne    162f6 <__vfprintf+0x1816>
   1603e:	c6 45 87 00          	movb   $0x0,-0x79(%rbp)
   16042:	e9 af 02 00 00       	jmpq   162f6 <__vfprintf+0x1816>
   16047:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   1604d:	88 85 57 fd ff ff    	mov    %al,-0x2a9(%rbp)
   16053:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   1605a:	79 0c                	jns    16068 <__vfprintf+0x1588>
   1605c:	c7 85 7c fd ff ff 07 	movl   $0x7,-0x284(%rbp)
   16063:	00 00 00 
   16066:	eb 37                	jmp    1609f <__vfprintf+0x15bf>
   16068:	83 85 7c fd ff ff 01 	addl   $0x1,-0x284(%rbp)
   1606f:	eb 2e                	jmp    1609f <__vfprintf+0x15bf>
   16071:	c6 85 57 fd ff ff 00 	movb   $0x0,-0x2a9(%rbp)
   16078:	eb 25                	jmp    1609f <__vfprintf+0x15bf>
   1607a:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   16080:	83 e8 02             	sub    $0x2,%eax
   16083:	88 85 57 fd ff ff    	mov    %al,-0x2a9(%rbp)
   16089:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   16090:	75 0c                	jne    1609e <__vfprintf+0x15be>
   16092:	c7 85 7c fd ff ff 01 	movl   $0x1,-0x284(%rbp)
   16099:	00 00 00 
   1609c:	eb 01                	jmp    1609f <__vfprintf+0x15bf>
   1609e:	90                   	nop
   1609f:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   160a6:	79 0a                	jns    160b2 <__vfprintf+0x15d2>
   160a8:	c7 85 7c fd ff ff 06 	movl   $0x6,-0x284(%rbp)
   160af:	00 00 00 
   160b2:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   160b9:	00 
   160ba:	74 0f                	je     160cb <__vfprintf+0x15eb>
   160bc:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   160c3:	48 89 c7             	mov    %rax,%rdi
   160c6:	e8 cc 4e 00 00       	callq  1af97 <__freedtoa>
   160cb:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   160d1:	83 e0 08             	and    $0x8,%eax
   160d4:	85 c0                	test   %eax,%eax
   160d6:	0f 84 dd 00 00 00    	je     161b9 <__vfprintf+0x16d9>
   160dc:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   160e3:	48 85 c0             	test   %rax,%rax
   160e6:	74 23                	je     1610b <__vfprintf+0x162b>
   160e8:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   160ef:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   160f5:	8d 50 01             	lea    0x1(%rax),%edx
   160f8:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   160fe:	48 98                	cltq   
   16100:	48 c1 e0 04          	shl    $0x4,%rax
   16104:	48 01 c8             	add    %rcx,%rax
   16107:	db 28                	fldt   (%rax)
   16109:	eb 2b                	jmp    16136 <__vfprintf+0x1656>
   1610b:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16112:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16119:	48 8b 40 08          	mov    0x8(%rax),%rax
   1611d:	48 83 c0 0f          	add    $0xf,%rax
   16121:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   16125:	48 8d 48 10          	lea    0x10(%rax),%rcx
   16129:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16130:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16134:	db 28                	fldt   (%rax)
   16136:	db bd 30 fe ff ff    	fstpt  -0x1d0(%rbp)
   1613c:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   16143:	74 08                	je     1614d <__vfprintf+0x166d>
   16145:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   1614b:	eb 06                	jmp    16153 <__vfprintf+0x1673>
   1614d:	41 ba 03 00 00 00    	mov    $0x3,%r10d
   16153:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   1615a:	48 8d b5 5c fd ff ff 	lea    -0x2a4(%rbp),%rsi
   16161:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
   16168:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   1616e:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
   16175:	49 89 f9             	mov    %rdi,%r9
   16178:	49 89 f0             	mov    %rsi,%r8
   1617b:	44 89 d6             	mov    %r10d,%esi
   1617e:	48 89 c7             	mov    %rax,%rdi
   16181:	e8 d6 73 00 00       	callq  1d55c <__ldtoa>
   16186:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   1618d:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   16194:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   1619b:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   161a2:	00 
   161a3:	0f 85 51 01 00 00    	jne    162fa <__vfprintf+0x181a>
   161a9:	e8 f6 e6 ff ff       	callq  148a4 <__errno>
   161ae:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   161b4:	e9 c5 2c 00 00       	jmpq   18e7e <__vfprintf+0x439e>
   161b9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   161c0:	48 85 c0             	test   %rax,%rax
   161c3:	74 25                	je     161ea <__vfprintf+0x170a>
   161c5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   161cc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   161d2:	8d 50 01             	lea    0x1(%rax),%edx
   161d5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   161db:	48 98                	cltq   
   161dd:	48 c1 e0 04          	shl    $0x4,%rax
   161e1:	48 01 c8             	add    %rcx,%rax
   161e4:	f2 0f 10 00          	movsd  (%rax),%xmm0
   161e8:	eb 69                	jmp    16253 <__vfprintf+0x1773>
   161ea:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   161f1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   161f8:	8b 40 04             	mov    0x4(%rax),%eax
   161fb:	3d af 00 00 00       	cmp    $0xaf,%eax
   16200:	77 33                	ja     16235 <__vfprintf+0x1755>
   16202:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16209:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1620d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16214:	8b 40 04             	mov    0x4(%rax),%eax
   16217:	89 c0                	mov    %eax,%eax
   16219:	48 01 d0             	add    %rdx,%rax
   1621c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16223:	8b 52 04             	mov    0x4(%rdx),%edx
   16226:	8d 4a 10             	lea    0x10(%rdx),%ecx
   16229:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16230:	89 4a 04             	mov    %ecx,0x4(%rdx)
   16233:	eb 1a                	jmp    1624f <__vfprintf+0x176f>
   16235:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1623c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16240:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16244:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1624b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1624f:	f2 0f 10 00          	movsd  (%rax),%xmm0
   16253:	f2 0f 11 85 30 fe ff 	movsd  %xmm0,-0x1d0(%rbp)
   1625a:	ff 
   1625b:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   16262:	74 08                	je     1626c <__vfprintf+0x178c>
   16264:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   1626a:	eb 06                	jmp    16272 <__vfprintf+0x1792>
   1626c:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   16272:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   16279:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   16280:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   16287:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   1628e:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   16294:	49 89 f8             	mov    %rdi,%r8
   16297:	44 89 cf             	mov    %r9d,%edi
   1629a:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
   162a1:	f2 0f 10 85 30 fd ff 	movsd  -0x2d0(%rbp),%xmm0
   162a8:	ff 
   162a9:	e8 31 50 00 00       	callq  1b2df <__dtoa>
   162ae:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   162b5:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   162bc:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   162c3:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   162ca:	00 
   162cb:	75 10                	jne    162dd <__vfprintf+0x17fd>
   162cd:	e8 d2 e5 ff ff       	callq  148a4 <__errno>
   162d2:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   162d8:	e9 a1 2b 00 00       	jmpq   18e7e <__vfprintf+0x439e>
   162dd:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   162e3:	3d 0f 27 00 00       	cmp    $0x270f,%eax
   162e8:	75 0f                	jne    162f9 <__vfprintf+0x1819>
   162ea:	c7 85 60 fd ff ff ff 	movl   $0x7fffffff,-0x2a0(%rbp)
   162f1:	ff ff 7f 
   162f4:	eb 04                	jmp    162fa <__vfprintf+0x181a>
   162f6:	90                   	nop
   162f7:	eb 01                	jmp    162fa <__vfprintf+0x181a>
   162f9:	90                   	nop
   162fa:	8b 85 5c fd ff ff    	mov    -0x2a4(%rbp),%eax
   16300:	85 c0                	test   %eax,%eax
   16302:	74 07                	je     1630b <__vfprintf+0x182b>
   16304:	c6 85 56 fd ff ff 2d 	movb   $0x2d,-0x2aa(%rbp)
   1630b:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   16311:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
   16316:	75 70                	jne    16388 <__vfprintf+0x18a8>
   16318:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1631f:	0f b6 00             	movzbl (%rax),%eax
   16322:	3c 4e                	cmp    $0x4e,%al
   16324:	75 29                	jne    1634f <__vfprintf+0x186f>
   16326:	83 bd 64 fd ff ff 60 	cmpl   $0x60,-0x29c(%rbp)
   1632d:	7e 09                	jle    16338 <__vfprintf+0x1858>
   1632f:	48 8d 05 7a 65 02 00 	lea    0x2657a(%rip),%rax        # 3c8b0 <__func__.2398+0x7>
   16336:	eb 07                	jmp    1633f <__vfprintf+0x185f>
   16338:	48 8d 05 75 65 02 00 	lea    0x26575(%rip),%rax        # 3c8b4 <__func__.2398+0xb>
   1633f:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   16346:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   1634d:	eb 20                	jmp    1636f <__vfprintf+0x188f>
   1634f:	83 bd 64 fd ff ff 60 	cmpl   $0x60,-0x29c(%rbp)
   16356:	7e 09                	jle    16361 <__vfprintf+0x1881>
   16358:	48 8d 05 59 65 02 00 	lea    0x26559(%rip),%rax        # 3c8b8 <__func__.2398+0xf>
   1635f:	eb 07                	jmp    16368 <__vfprintf+0x1888>
   16361:	48 8d 05 54 65 02 00 	lea    0x26554(%rip),%rax        # 3c8bc <__func__.2398+0x13>
   16368:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   1636f:	c7 85 98 fd ff ff 03 	movl   $0x3,-0x268(%rbp)
   16376:	00 00 00 
   16379:	81 a5 70 fd ff ff 7f 	andl   $0xffffff7f,-0x290(%rbp)
   16380:	ff ff ff 
   16383:	e9 7a 17 00 00       	jmpq   17b02 <__vfprintf+0x3022>
   16388:	81 8d 70 fd ff ff 00 	orl    $0x100,-0x290(%rbp)
   1638f:	01 00 00 
   16392:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   16399:	48 89 c2             	mov    %rax,%rdx
   1639c:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   163a3:	48 29 c2             	sub    %rax,%rdx
   163a6:	48 89 d0             	mov    %rdx,%rax
   163a9:	89 85 88 fd ff ff    	mov    %eax,-0x278(%rbp)
   163af:	83 bd 64 fd ff ff 67 	cmpl   $0x67,-0x29c(%rbp)
   163b6:	74 09                	je     163c1 <__vfprintf+0x18e1>
   163b8:	83 bd 64 fd ff ff 47 	cmpl   $0x47,-0x29c(%rbp)
   163bf:	75 7f                	jne    16440 <__vfprintf+0x1960>
   163c1:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   163c7:	83 f8 fd             	cmp    $0xfffffffd,%eax
   163ca:	7c 5b                	jl     16427 <__vfprintf+0x1947>
   163cc:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   163d2:	39 85 7c fd ff ff    	cmp    %eax,-0x284(%rbp)
   163d8:	7c 4d                	jl     16427 <__vfprintf+0x1947>
   163da:	c6 85 57 fd ff ff 00 	movb   $0x0,-0x2a9(%rbp)
   163e1:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   163e7:	83 e0 01             	and    $0x1,%eax
   163ea:	85 c0                	test   %eax,%eax
   163ec:	74 0e                	je     163fc <__vfprintf+0x191c>
   163ee:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   163f4:	29 85 7c fd ff ff    	sub    %eax,-0x284(%rbp)
   163fa:	eb 16                	jmp    16412 <__vfprintf+0x1932>
   163fc:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   16402:	8b 95 88 fd ff ff    	mov    -0x278(%rbp),%edx
   16408:	29 c2                	sub    %eax,%edx
   1640a:	89 d0                	mov    %edx,%eax
   1640c:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   16412:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   16419:	79 25                	jns    16440 <__vfprintf+0x1960>
   1641b:	c7 85 7c fd ff ff 00 	movl   $0x0,-0x284(%rbp)
   16422:	00 00 00 
   16425:	eb 19                	jmp    16440 <__vfprintf+0x1960>
   16427:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1642d:	83 e0 01             	and    $0x1,%eax
   16430:	85 c0                	test   %eax,%eax
   16432:	75 0c                	jne    16440 <__vfprintf+0x1960>
   16434:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   1643a:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   16440:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   16447:	74 5e                	je     164a7 <__vfprintf+0x19c7>
   16449:	0f be 95 57 fd ff ff 	movsbl -0x2a9(%rbp),%edx
   16450:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   16456:	8d 48 ff             	lea    -0x1(%rax),%ecx
   16459:	48 8d 45 88          	lea    -0x78(%rbp),%rax
   1645d:	89 ce                	mov    %ecx,%esi
   1645f:	48 89 c7             	mov    %rax,%rdi
   16462:	e8 f2 48 00 00       	callq  1ad59 <exponent>
   16467:	89 85 80 fd ff ff    	mov    %eax,-0x280(%rbp)
   1646d:	8b 95 80 fd ff ff    	mov    -0x280(%rbp),%edx
   16473:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   16479:	01 d0                	add    %edx,%eax
   1647b:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   16481:	83 bd 7c fd ff ff 01 	cmpl   $0x1,-0x284(%rbp)
   16488:	7f 11                	jg     1649b <__vfprintf+0x19bb>
   1648a:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16490:	83 e0 01             	and    $0x1,%eax
   16493:	85 c0                	test   %eax,%eax
   16495:	0f 84 66 16 00 00    	je     17b01 <__vfprintf+0x3021>
   1649b:	83 85 98 fd ff ff 01 	addl   $0x1,-0x268(%rbp)
   164a2:	e9 5a 16 00 00       	jmpq   17b01 <__vfprintf+0x3021>
   164a7:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   164ad:	85 c0                	test   %eax,%eax
   164af:	7e 0e                	jle    164bf <__vfprintf+0x19df>
   164b1:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   164b7:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   164bd:	eb 0a                	jmp    164c9 <__vfprintf+0x19e9>
   164bf:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   164c6:	00 00 00 
   164c9:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   164d0:	75 0d                	jne    164df <__vfprintf+0x19ff>
   164d2:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   164d8:	83 e0 01             	and    $0x1,%eax
   164db:	85 c0                	test   %eax,%eax
   164dd:	74 0f                	je     164ee <__vfprintf+0x1a0e>
   164df:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   164e5:	83 c0 01             	add    $0x1,%eax
   164e8:	01 85 98 fd ff ff    	add    %eax,-0x268(%rbp)
   164ee:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   164f4:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%rbp)
   164fa:	e9 02 16 00 00       	jmpq   17b01 <__vfprintf+0x3021>
   164ff:	e8 d5 50 02 00       	callq  3b5d9 <abort>
   16504:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   1650b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16511:	25 00 10 00 00       	and    $0x1000,%eax
   16516:	85 c0                	test   %eax,%eax
   16518:	0f 84 9a 00 00 00    	je     165b8 <__vfprintf+0x1ad8>
   1651e:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16525:	48 85 c0             	test   %rax,%rax
   16528:	74 27                	je     16551 <__vfprintf+0x1a71>
   1652a:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16531:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16537:	8d 50 01             	lea    0x1(%rax),%edx
   1653a:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16540:	48 98                	cltq   
   16542:	48 c1 e0 04          	shl    $0x4,%rax
   16546:	48 01 c8             	add    %rcx,%rax
   16549:	48 8b 00             	mov    (%rax),%rax
   1654c:	e9 0b 05 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   16551:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16558:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1655f:	8b 00                	mov    (%rax),%eax
   16561:	83 f8 2f             	cmp    $0x2f,%eax
   16564:	77 30                	ja     16596 <__vfprintf+0x1ab6>
   16566:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1656d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16571:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16578:	8b 00                	mov    (%rax),%eax
   1657a:	89 c0                	mov    %eax,%eax
   1657c:	48 01 d0             	add    %rdx,%rax
   1657f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16586:	8b 12                	mov    (%rdx),%edx
   16588:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1658b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16592:	89 0a                	mov    %ecx,(%rdx)
   16594:	eb 1a                	jmp    165b0 <__vfprintf+0x1ad0>
   16596:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1659d:	48 8b 40 08          	mov    0x8(%rax),%rax
   165a1:	48 8d 48 08          	lea    0x8(%rax),%rcx
   165a5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   165ac:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   165b0:	48 8b 00             	mov    (%rax),%rax
   165b3:	e9 a4 04 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   165b8:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   165be:	83 e0 20             	and    $0x20,%eax
   165c1:	85 c0                	test   %eax,%eax
   165c3:	0f 84 9a 00 00 00    	je     16663 <__vfprintf+0x1b83>
   165c9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   165d0:	48 85 c0             	test   %rax,%rax
   165d3:	74 27                	je     165fc <__vfprintf+0x1b1c>
   165d5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   165dc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   165e2:	8d 50 01             	lea    0x1(%rax),%edx
   165e5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   165eb:	48 98                	cltq   
   165ed:	48 c1 e0 04          	shl    $0x4,%rax
   165f1:	48 01 c8             	add    %rcx,%rax
   165f4:	48 8b 00             	mov    (%rax),%rax
   165f7:	e9 60 04 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   165fc:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16603:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1660a:	8b 00                	mov    (%rax),%eax
   1660c:	83 f8 2f             	cmp    $0x2f,%eax
   1660f:	77 30                	ja     16641 <__vfprintf+0x1b61>
   16611:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16618:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1661c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16623:	8b 00                	mov    (%rax),%eax
   16625:	89 c0                	mov    %eax,%eax
   16627:	48 01 d0             	add    %rdx,%rax
   1662a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16631:	8b 12                	mov    (%rdx),%edx
   16633:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16636:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1663d:	89 0a                	mov    %ecx,(%rdx)
   1663f:	eb 1a                	jmp    1665b <__vfprintf+0x1b7b>
   16641:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16648:	48 8b 40 08          	mov    0x8(%rax),%rax
   1664c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16650:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16657:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1665b:	48 8b 00             	mov    (%rax),%rax
   1665e:	e9 f9 03 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   16663:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16669:	83 e0 10             	and    $0x10,%eax
   1666c:	85 c0                	test   %eax,%eax
   1666e:	0f 84 9a 00 00 00    	je     1670e <__vfprintf+0x1c2e>
   16674:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   1667b:	48 85 c0             	test   %rax,%rax
   1667e:	74 27                	je     166a7 <__vfprintf+0x1bc7>
   16680:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16687:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1668d:	8d 50 01             	lea    0x1(%rax),%edx
   16690:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16696:	48 98                	cltq   
   16698:	48 c1 e0 04          	shl    $0x4,%rax
   1669c:	48 01 c8             	add    %rcx,%rax
   1669f:	48 8b 00             	mov    (%rax),%rax
   166a2:	e9 b5 03 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   166a7:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   166ae:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   166b5:	8b 00                	mov    (%rax),%eax
   166b7:	83 f8 2f             	cmp    $0x2f,%eax
   166ba:	77 30                	ja     166ec <__vfprintf+0x1c0c>
   166bc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   166c3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   166c7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   166ce:	8b 00                	mov    (%rax),%eax
   166d0:	89 c0                	mov    %eax,%eax
   166d2:	48 01 d0             	add    %rdx,%rax
   166d5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   166dc:	8b 12                	mov    (%rdx),%edx
   166de:	8d 4a 08             	lea    0x8(%rdx),%ecx
   166e1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   166e8:	89 0a                	mov    %ecx,(%rdx)
   166ea:	eb 1a                	jmp    16706 <__vfprintf+0x1c26>
   166ec:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   166f3:	48 8b 40 08          	mov    0x8(%rax),%rax
   166f7:	48 8d 48 08          	lea    0x8(%rax),%rcx
   166fb:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16702:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16706:	48 8b 00             	mov    (%rax),%rax
   16709:	e9 4e 03 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   1670e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16714:	25 00 02 00 00       	and    $0x200,%eax
   16719:	85 c0                	test   %eax,%eax
   1671b:	0f 84 9a 00 00 00    	je     167bb <__vfprintf+0x1cdb>
   16721:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16728:	48 85 c0             	test   %rax,%rax
   1672b:	74 27                	je     16754 <__vfprintf+0x1c74>
   1672d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16734:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1673a:	8d 50 01             	lea    0x1(%rax),%edx
   1673d:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16743:	48 98                	cltq   
   16745:	48 c1 e0 04          	shl    $0x4,%rax
   16749:	48 01 c8             	add    %rcx,%rax
   1674c:	48 8b 00             	mov    (%rax),%rax
   1674f:	e9 08 03 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   16754:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   1675b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16762:	8b 00                	mov    (%rax),%eax
   16764:	83 f8 2f             	cmp    $0x2f,%eax
   16767:	77 30                	ja     16799 <__vfprintf+0x1cb9>
   16769:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16770:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16774:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1677b:	8b 00                	mov    (%rax),%eax
   1677d:	89 c0                	mov    %eax,%eax
   1677f:	48 01 d0             	add    %rdx,%rax
   16782:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16789:	8b 12                	mov    (%rdx),%edx
   1678b:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1678e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16795:	89 0a                	mov    %ecx,(%rdx)
   16797:	eb 1a                	jmp    167b3 <__vfprintf+0x1cd3>
   16799:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   167a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   167a4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   167a8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   167af:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   167b3:	48 8b 00             	mov    (%rax),%rax
   167b6:	e9 a1 02 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   167bb:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   167c1:	25 00 04 00 00       	and    $0x400,%eax
   167c6:	85 c0                	test   %eax,%eax
   167c8:	0f 84 9a 00 00 00    	je     16868 <__vfprintf+0x1d88>
   167ce:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   167d5:	48 85 c0             	test   %rax,%rax
   167d8:	74 27                	je     16801 <__vfprintf+0x1d21>
   167da:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   167e1:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   167e7:	8d 50 01             	lea    0x1(%rax),%edx
   167ea:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   167f0:	48 98                	cltq   
   167f2:	48 c1 e0 04          	shl    $0x4,%rax
   167f6:	48 01 c8             	add    %rcx,%rax
   167f9:	48 8b 00             	mov    (%rax),%rax
   167fc:	e9 5b 02 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   16801:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16808:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1680f:	8b 00                	mov    (%rax),%eax
   16811:	83 f8 2f             	cmp    $0x2f,%eax
   16814:	77 30                	ja     16846 <__vfprintf+0x1d66>
   16816:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1681d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16821:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16828:	8b 00                	mov    (%rax),%eax
   1682a:	89 c0                	mov    %eax,%eax
   1682c:	48 01 d0             	add    %rdx,%rax
   1682f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16836:	8b 12                	mov    (%rdx),%edx
   16838:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1683b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16842:	89 0a                	mov    %ecx,(%rdx)
   16844:	eb 1a                	jmp    16860 <__vfprintf+0x1d80>
   16846:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1684d:	48 8b 40 08          	mov    0x8(%rax),%rax
   16851:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16855:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1685c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16860:	48 8b 00             	mov    (%rax),%rax
   16863:	e9 f4 01 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   16868:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1686e:	83 e0 40             	and    $0x40,%eax
   16871:	85 c0                	test   %eax,%eax
   16873:	0f 84 9e 00 00 00    	je     16917 <__vfprintf+0x1e37>
   16879:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16880:	48 85 c0             	test   %rax,%rax
   16883:	74 29                	je     168ae <__vfprintf+0x1dce>
   16885:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1688c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16892:	8d 50 01             	lea    0x1(%rax),%edx
   16895:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1689b:	48 98                	cltq   
   1689d:	48 c1 e0 04          	shl    $0x4,%rax
   168a1:	48 01 c8             	add    %rcx,%rax
   168a4:	8b 00                	mov    (%rax),%eax
   168a6:	0f b7 c0             	movzwl %ax,%eax
   168a9:	e9 ae 01 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   168ae:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   168b5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   168bc:	8b 00                	mov    (%rax),%eax
   168be:	83 f8 2f             	cmp    $0x2f,%eax
   168c1:	77 30                	ja     168f3 <__vfprintf+0x1e13>
   168c3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   168ca:	48 8b 50 10          	mov    0x10(%rax),%rdx
   168ce:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   168d5:	8b 00                	mov    (%rax),%eax
   168d7:	89 c0                	mov    %eax,%eax
   168d9:	48 01 d0             	add    %rdx,%rax
   168dc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   168e3:	8b 12                	mov    (%rdx),%edx
   168e5:	8d 4a 08             	lea    0x8(%rdx),%ecx
   168e8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   168ef:	89 0a                	mov    %ecx,(%rdx)
   168f1:	eb 1a                	jmp    1690d <__vfprintf+0x1e2d>
   168f3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   168fa:	48 8b 40 08          	mov    0x8(%rax),%rax
   168fe:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16902:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16909:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1690d:	8b 00                	mov    (%rax),%eax
   1690f:	0f b7 c0             	movzwl %ax,%eax
   16912:	e9 45 01 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   16917:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1691d:	25 00 08 00 00       	and    $0x800,%eax
   16922:	85 c0                	test   %eax,%eax
   16924:	0f 84 9e 00 00 00    	je     169c8 <__vfprintf+0x1ee8>
   1692a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16931:	48 85 c0             	test   %rax,%rax
   16934:	74 29                	je     1695f <__vfprintf+0x1e7f>
   16936:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1693d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16943:	8d 50 01             	lea    0x1(%rax),%edx
   16946:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1694c:	48 98                	cltq   
   1694e:	48 c1 e0 04          	shl    $0x4,%rax
   16952:	48 01 c8             	add    %rcx,%rax
   16955:	8b 00                	mov    (%rax),%eax
   16957:	0f b6 c0             	movzbl %al,%eax
   1695a:	e9 fd 00 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   1695f:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16966:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1696d:	8b 00                	mov    (%rax),%eax
   1696f:	83 f8 2f             	cmp    $0x2f,%eax
   16972:	77 30                	ja     169a4 <__vfprintf+0x1ec4>
   16974:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1697b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1697f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16986:	8b 00                	mov    (%rax),%eax
   16988:	89 c0                	mov    %eax,%eax
   1698a:	48 01 d0             	add    %rdx,%rax
   1698d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16994:	8b 12                	mov    (%rdx),%edx
   16996:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16999:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   169a0:	89 0a                	mov    %ecx,(%rdx)
   169a2:	eb 1a                	jmp    169be <__vfprintf+0x1ede>
   169a4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   169ab:	48 8b 40 08          	mov    0x8(%rax),%rax
   169af:	48 8d 48 08          	lea    0x8(%rax),%rcx
   169b3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   169ba:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   169be:	8b 00                	mov    (%rax),%eax
   169c0:	0f b6 c0             	movzbl %al,%eax
   169c3:	e9 94 00 00 00       	jmpq   16a5c <__vfprintf+0x1f7c>
   169c8:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   169cf:	48 85 c0             	test   %rax,%rax
   169d2:	74 25                	je     169f9 <__vfprintf+0x1f19>
   169d4:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   169db:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   169e1:	8d 50 01             	lea    0x1(%rax),%edx
   169e4:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   169ea:	48 98                	cltq   
   169ec:	48 c1 e0 04          	shl    $0x4,%rax
   169f0:	48 01 c8             	add    %rcx,%rax
   169f3:	8b 00                	mov    (%rax),%eax
   169f5:	89 c0                	mov    %eax,%eax
   169f7:	eb 63                	jmp    16a5c <__vfprintf+0x1f7c>
   169f9:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16a00:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16a07:	8b 00                	mov    (%rax),%eax
   16a09:	83 f8 2f             	cmp    $0x2f,%eax
   16a0c:	77 30                	ja     16a3e <__vfprintf+0x1f5e>
   16a0e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16a15:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16a19:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16a20:	8b 00                	mov    (%rax),%eax
   16a22:	89 c0                	mov    %eax,%eax
   16a24:	48 01 d0             	add    %rdx,%rax
   16a27:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16a2e:	8b 12                	mov    (%rdx),%edx
   16a30:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16a33:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16a3a:	89 0a                	mov    %ecx,(%rdx)
   16a3c:	eb 1a                	jmp    16a58 <__vfprintf+0x1f78>
   16a3e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16a45:	48 8b 40 08          	mov    0x8(%rax),%rax
   16a49:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16a4d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16a54:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16a58:	8b 00                	mov    (%rax),%eax
   16a5a:	89 c0                	mov    %eax,%eax
   16a5c:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   16a63:	c7 85 8c fd ff ff 00 	movl   $0x0,-0x274(%rbp)
   16a6a:	00 00 00 
   16a6d:	e9 4f 0e 00 00       	jmpq   178c1 <__vfprintf+0x2de1>
   16a72:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16a79:	48 85 c0             	test   %rax,%rax
   16a7c:	74 24                	je     16aa2 <__vfprintf+0x1fc2>
   16a7e:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16a85:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16a8b:	8d 50 01             	lea    0x1(%rax),%edx
   16a8e:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16a94:	48 98                	cltq   
   16a96:	48 c1 e0 04          	shl    $0x4,%rax
   16a9a:	48 01 c8             	add    %rcx,%rax
   16a9d:	48 8b 00             	mov    (%rax),%rax
   16aa0:	eb 62                	jmp    16b04 <__vfprintf+0x2024>
   16aa2:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16aa9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ab0:	8b 00                	mov    (%rax),%eax
   16ab2:	83 f8 2f             	cmp    $0x2f,%eax
   16ab5:	77 30                	ja     16ae7 <__vfprintf+0x2007>
   16ab7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16abe:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ac2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ac9:	8b 00                	mov    (%rax),%eax
   16acb:	89 c0                	mov    %eax,%eax
   16acd:	48 01 d0             	add    %rdx,%rax
   16ad0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16ad7:	8b 12                	mov    (%rdx),%edx
   16ad9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16adc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16ae3:	89 0a                	mov    %ecx,(%rdx)
   16ae5:	eb 1a                	jmp    16b01 <__vfprintf+0x2021>
   16ae7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16aee:	48 8b 40 08          	mov    0x8(%rax),%rax
   16af2:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16af6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16afd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16b01:	48 8b 00             	mov    (%rax),%rax
   16b04:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   16b0b:	c7 85 8c fd ff ff 02 	movl   $0x2,-0x274(%rbp)
   16b12:	00 00 00 
   16b15:	48 8d 05 14 61 02 00 	lea    0x26114(%rip),%rax        # 3cc30 <xdigs_lower.3166>
   16b1c:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   16b23:	c6 45 87 78          	movb   $0x78,-0x79(%rbp)
   16b27:	e9 95 0d 00 00       	jmpq   178c1 <__vfprintf+0x2de1>
   16b2c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16b32:	83 e0 10             	and    $0x10,%eax
   16b35:	85 c0                	test   %eax,%eax
   16b37:	0f 84 27 01 00 00    	je     16c64 <__vfprintf+0x2184>
   16b3d:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   16b44:	00 
   16b45:	74 1a                	je     16b61 <__vfprintf+0x2081>
   16b47:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   16b4e:	48 89 c7             	mov    %rax,%rdi
   16b51:	e8 e9 a3 ff ff       	callq  10f3f <dlfree>
   16b56:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
   16b5d:	00 00 00 00 
   16b61:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16b68:	48 85 c0             	test   %rax,%rax
   16b6b:	74 24                	je     16b91 <__vfprintf+0x20b1>
   16b6d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16b74:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16b7a:	8d 50 01             	lea    0x1(%rax),%edx
   16b7d:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16b83:	48 98                	cltq   
   16b85:	48 c1 e0 04          	shl    $0x4,%rax
   16b89:	48 01 c8             	add    %rcx,%rax
   16b8c:	48 8b 00             	mov    (%rax),%rax
   16b8f:	eb 62                	jmp    16bf3 <__vfprintf+0x2113>
   16b91:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16b98:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16b9f:	8b 00                	mov    (%rax),%eax
   16ba1:	83 f8 2f             	cmp    $0x2f,%eax
   16ba4:	77 30                	ja     16bd6 <__vfprintf+0x20f6>
   16ba6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16bad:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16bb1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16bb8:	8b 00                	mov    (%rax),%eax
   16bba:	89 c0                	mov    %eax,%eax
   16bbc:	48 01 d0             	add    %rdx,%rax
   16bbf:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16bc6:	8b 12                	mov    (%rdx),%edx
   16bc8:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16bcb:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16bd2:	89 0a                	mov    %ecx,(%rdx)
   16bd4:	eb 1a                	jmp    16bf0 <__vfprintf+0x2110>
   16bd6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16bdd:	48 8b 40 08          	mov    0x8(%rax),%rax
   16be1:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16be5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16bec:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16bf0:	48 8b 00             	mov    (%rax),%rax
   16bf3:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
   16bfa:	48 83 bd 10 fe ff ff 	cmpq   $0x0,-0x1f0(%rbp)
   16c01:	00 
   16c02:	75 13                	jne    16c17 <__vfprintf+0x2137>
   16c04:	48 8d 05 b5 5c 02 00 	lea    0x25cb5(%rip),%rax        # 3c8c0 <__func__.2398+0x17>
   16c0b:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   16c12:	e9 fe 00 00 00       	jmpq   16d15 <__vfprintf+0x2235>
   16c17:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   16c1d:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
   16c24:	89 d6                	mov    %edx,%esi
   16c26:	48 89 c7             	mov    %rax,%rdi
   16c29:	e8 df dc ff ff       	callq  1490d <__wcsconv>
   16c2e:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
   16c35:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   16c3c:	00 
   16c3d:	75 12                	jne    16c51 <__vfprintf+0x2171>
   16c3f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   16c46:	66 c7 40 10 40 00    	movw   $0x40,0x10(%rax)
   16c4c:	e9 2d 22 00 00       	jmpq   18e7e <__vfprintf+0x439e>
   16c51:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   16c58:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   16c5f:	e9 b1 00 00 00       	jmpq   16d15 <__vfprintf+0x2235>
   16c64:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16c6b:	48 85 c0             	test   %rax,%rax
   16c6e:	74 24                	je     16c94 <__vfprintf+0x21b4>
   16c70:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16c77:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16c7d:	8d 50 01             	lea    0x1(%rax),%edx
   16c80:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16c86:	48 98                	cltq   
   16c88:	48 c1 e0 04          	shl    $0x4,%rax
   16c8c:	48 01 c8             	add    %rcx,%rax
   16c8f:	48 8b 00             	mov    (%rax),%rax
   16c92:	eb 62                	jmp    16cf6 <__vfprintf+0x2216>
   16c94:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16c9b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ca2:	8b 00                	mov    (%rax),%eax
   16ca4:	83 f8 2f             	cmp    $0x2f,%eax
   16ca7:	77 30                	ja     16cd9 <__vfprintf+0x21f9>
   16ca9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16cb0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16cb4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16cbb:	8b 00                	mov    (%rax),%eax
   16cbd:	89 c0                	mov    %eax,%eax
   16cbf:	48 01 d0             	add    %rdx,%rax
   16cc2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16cc9:	8b 12                	mov    (%rdx),%edx
   16ccb:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16cce:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16cd5:	89 0a                	mov    %ecx,(%rdx)
   16cd7:	eb 1a                	jmp    16cf3 <__vfprintf+0x2213>
   16cd9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ce0:	48 8b 40 08          	mov    0x8(%rax),%rax
   16ce4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16ce8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16cef:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16cf3:	48 8b 00             	mov    (%rax),%rax
   16cf6:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   16cfd:	48 83 bd c8 fd ff ff 	cmpq   $0x0,-0x238(%rbp)
   16d04:	00 
   16d05:	75 0e                	jne    16d15 <__vfprintf+0x2235>
   16d07:	48 8d 05 b2 5b 02 00 	lea    0x25bb2(%rip),%rax        # 3c8c0 <__func__.2398+0x17>
   16d0e:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   16d15:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   16d1c:	78 52                	js     16d70 <__vfprintf+0x2290>
   16d1e:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   16d24:	48 63 d0             	movslq %eax,%rdx
   16d27:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   16d2e:	be 00 00 00 00       	mov    $0x0,%esi
   16d33:	48 89 c7             	mov    %rax,%rdi
   16d36:	e8 b6 69 00 00       	callq  1d6f1 <memchr>
   16d3b:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
   16d42:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
   16d49:	00 
   16d4a:	74 16                	je     16d62 <__vfprintf+0x2282>
   16d4c:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
   16d53:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   16d5a:	48 29 c2             	sub    %rax,%rdx
   16d5d:	48 89 d0             	mov    %rdx,%rax
   16d60:	eb 06                	jmp    16d68 <__vfprintf+0x2288>
   16d62:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   16d68:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   16d6e:	eb 34                	jmp    16da4 <__vfprintf+0x22c4>
   16d70:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   16d77:	48 89 c7             	mov    %rax,%rdi
   16d7a:	e8 f2 ce ff ff       	callq  13c71 <strlen>
   16d7f:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
   16d86:	48 81 bd 18 fe ff ff 	cmpq   $0x7fffffff,-0x1e8(%rbp)
   16d8d:	ff ff ff 7f 
   16d91:	0f 87 24 21 00 00    	ja     18ebb <__vfprintf+0x43db>
   16d97:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
   16d9e:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   16da4:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   16dab:	e9 52 0d 00 00       	jmpq   17b02 <__vfprintf+0x3022>
   16db0:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   16db7:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16dbd:	25 00 10 00 00       	and    $0x1000,%eax
   16dc2:	85 c0                	test   %eax,%eax
   16dc4:	0f 84 9a 00 00 00    	je     16e64 <__vfprintf+0x2384>
   16dca:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16dd1:	48 85 c0             	test   %rax,%rax
   16dd4:	74 27                	je     16dfd <__vfprintf+0x231d>
   16dd6:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16ddd:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16de3:	8d 50 01             	lea    0x1(%rax),%edx
   16de6:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16dec:	48 98                	cltq   
   16dee:	48 c1 e0 04          	shl    $0x4,%rax
   16df2:	48 01 c8             	add    %rcx,%rax
   16df5:	48 8b 00             	mov    (%rax),%rax
   16df8:	e9 0b 05 00 00       	jmpq   17308 <__vfprintf+0x2828>
   16dfd:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16e04:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16e0b:	8b 00                	mov    (%rax),%eax
   16e0d:	83 f8 2f             	cmp    $0x2f,%eax
   16e10:	77 30                	ja     16e42 <__vfprintf+0x2362>
   16e12:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16e19:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16e1d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16e24:	8b 00                	mov    (%rax),%eax
   16e26:	89 c0                	mov    %eax,%eax
   16e28:	48 01 d0             	add    %rdx,%rax
   16e2b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16e32:	8b 12                	mov    (%rdx),%edx
   16e34:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16e37:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16e3e:	89 0a                	mov    %ecx,(%rdx)
   16e40:	eb 1a                	jmp    16e5c <__vfprintf+0x237c>
   16e42:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16e49:	48 8b 40 08          	mov    0x8(%rax),%rax
   16e4d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16e51:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16e58:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16e5c:	48 8b 00             	mov    (%rax),%rax
   16e5f:	e9 a4 04 00 00       	jmpq   17308 <__vfprintf+0x2828>
   16e64:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16e6a:	83 e0 20             	and    $0x20,%eax
   16e6d:	85 c0                	test   %eax,%eax
   16e6f:	0f 84 9a 00 00 00    	je     16f0f <__vfprintf+0x242f>
   16e75:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16e7c:	48 85 c0             	test   %rax,%rax
   16e7f:	74 27                	je     16ea8 <__vfprintf+0x23c8>
   16e81:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16e88:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16e8e:	8d 50 01             	lea    0x1(%rax),%edx
   16e91:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16e97:	48 98                	cltq   
   16e99:	48 c1 e0 04          	shl    $0x4,%rax
   16e9d:	48 01 c8             	add    %rcx,%rax
   16ea0:	48 8b 00             	mov    (%rax),%rax
   16ea3:	e9 60 04 00 00       	jmpq   17308 <__vfprintf+0x2828>
   16ea8:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16eaf:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16eb6:	8b 00                	mov    (%rax),%eax
   16eb8:	83 f8 2f             	cmp    $0x2f,%eax
   16ebb:	77 30                	ja     16eed <__vfprintf+0x240d>
   16ebd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ec4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ec8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ecf:	8b 00                	mov    (%rax),%eax
   16ed1:	89 c0                	mov    %eax,%eax
   16ed3:	48 01 d0             	add    %rdx,%rax
   16ed6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16edd:	8b 12                	mov    (%rdx),%edx
   16edf:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16ee2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16ee9:	89 0a                	mov    %ecx,(%rdx)
   16eeb:	eb 1a                	jmp    16f07 <__vfprintf+0x2427>
   16eed:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16ef4:	48 8b 40 08          	mov    0x8(%rax),%rax
   16ef8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16efc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16f03:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16f07:	48 8b 00             	mov    (%rax),%rax
   16f0a:	e9 f9 03 00 00       	jmpq   17308 <__vfprintf+0x2828>
   16f0f:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16f15:	83 e0 10             	and    $0x10,%eax
   16f18:	85 c0                	test   %eax,%eax
   16f1a:	0f 84 9a 00 00 00    	je     16fba <__vfprintf+0x24da>
   16f20:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16f27:	48 85 c0             	test   %rax,%rax
   16f2a:	74 27                	je     16f53 <__vfprintf+0x2473>
   16f2c:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16f33:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16f39:	8d 50 01             	lea    0x1(%rax),%edx
   16f3c:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16f42:	48 98                	cltq   
   16f44:	48 c1 e0 04          	shl    $0x4,%rax
   16f48:	48 01 c8             	add    %rcx,%rax
   16f4b:	48 8b 00             	mov    (%rax),%rax
   16f4e:	e9 b5 03 00 00       	jmpq   17308 <__vfprintf+0x2828>
   16f53:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   16f5a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16f61:	8b 00                	mov    (%rax),%eax
   16f63:	83 f8 2f             	cmp    $0x2f,%eax
   16f66:	77 30                	ja     16f98 <__vfprintf+0x24b8>
   16f68:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16f6f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16f73:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16f7a:	8b 00                	mov    (%rax),%eax
   16f7c:	89 c0                	mov    %eax,%eax
   16f7e:	48 01 d0             	add    %rdx,%rax
   16f81:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16f88:	8b 12                	mov    (%rdx),%edx
   16f8a:	8d 4a 08             	lea    0x8(%rdx),%ecx
   16f8d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16f94:	89 0a                	mov    %ecx,(%rdx)
   16f96:	eb 1a                	jmp    16fb2 <__vfprintf+0x24d2>
   16f98:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   16f9f:	48 8b 40 08          	mov    0x8(%rax),%rax
   16fa3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16fa7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   16fae:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   16fb2:	48 8b 00             	mov    (%rax),%rax
   16fb5:	e9 4e 03 00 00       	jmpq   17308 <__vfprintf+0x2828>
   16fba:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   16fc0:	25 00 02 00 00       	and    $0x200,%eax
   16fc5:	85 c0                	test   %eax,%eax
   16fc7:	0f 84 9a 00 00 00    	je     17067 <__vfprintf+0x2587>
   16fcd:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   16fd4:	48 85 c0             	test   %rax,%rax
   16fd7:	74 27                	je     17000 <__vfprintf+0x2520>
   16fd9:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   16fe0:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   16fe6:	8d 50 01             	lea    0x1(%rax),%edx
   16fe9:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   16fef:	48 98                	cltq   
   16ff1:	48 c1 e0 04          	shl    $0x4,%rax
   16ff5:	48 01 c8             	add    %rcx,%rax
   16ff8:	48 8b 00             	mov    (%rax),%rax
   16ffb:	e9 08 03 00 00       	jmpq   17308 <__vfprintf+0x2828>
   17000:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17007:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1700e:	8b 00                	mov    (%rax),%eax
   17010:	83 f8 2f             	cmp    $0x2f,%eax
   17013:	77 30                	ja     17045 <__vfprintf+0x2565>
   17015:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1701c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17020:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17027:	8b 00                	mov    (%rax),%eax
   17029:	89 c0                	mov    %eax,%eax
   1702b:	48 01 d0             	add    %rdx,%rax
   1702e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17035:	8b 12                	mov    (%rdx),%edx
   17037:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1703a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17041:	89 0a                	mov    %ecx,(%rdx)
   17043:	eb 1a                	jmp    1705f <__vfprintf+0x257f>
   17045:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1704c:	48 8b 40 08          	mov    0x8(%rax),%rax
   17050:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17054:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1705b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1705f:	48 8b 00             	mov    (%rax),%rax
   17062:	e9 a1 02 00 00       	jmpq   17308 <__vfprintf+0x2828>
   17067:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1706d:	25 00 04 00 00       	and    $0x400,%eax
   17072:	85 c0                	test   %eax,%eax
   17074:	0f 84 9a 00 00 00    	je     17114 <__vfprintf+0x2634>
   1707a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17081:	48 85 c0             	test   %rax,%rax
   17084:	74 27                	je     170ad <__vfprintf+0x25cd>
   17086:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1708d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   17093:	8d 50 01             	lea    0x1(%rax),%edx
   17096:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1709c:	48 98                	cltq   
   1709e:	48 c1 e0 04          	shl    $0x4,%rax
   170a2:	48 01 c8             	add    %rcx,%rax
   170a5:	48 8b 00             	mov    (%rax),%rax
   170a8:	e9 5b 02 00 00       	jmpq   17308 <__vfprintf+0x2828>
   170ad:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   170b4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   170bb:	8b 00                	mov    (%rax),%eax
   170bd:	83 f8 2f             	cmp    $0x2f,%eax
   170c0:	77 30                	ja     170f2 <__vfprintf+0x2612>
   170c2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   170c9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   170cd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   170d4:	8b 00                	mov    (%rax),%eax
   170d6:	89 c0                	mov    %eax,%eax
   170d8:	48 01 d0             	add    %rdx,%rax
   170db:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   170e2:	8b 12                	mov    (%rdx),%edx
   170e4:	8d 4a 08             	lea    0x8(%rdx),%ecx
   170e7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   170ee:	89 0a                	mov    %ecx,(%rdx)
   170f0:	eb 1a                	jmp    1710c <__vfprintf+0x262c>
   170f2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   170f9:	48 8b 40 08          	mov    0x8(%rax),%rax
   170fd:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17101:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17108:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1710c:	48 8b 00             	mov    (%rax),%rax
   1710f:	e9 f4 01 00 00       	jmpq   17308 <__vfprintf+0x2828>
   17114:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1711a:	83 e0 40             	and    $0x40,%eax
   1711d:	85 c0                	test   %eax,%eax
   1711f:	0f 84 9e 00 00 00    	je     171c3 <__vfprintf+0x26e3>
   17125:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   1712c:	48 85 c0             	test   %rax,%rax
   1712f:	74 29                	je     1715a <__vfprintf+0x267a>
   17131:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   17138:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1713e:	8d 50 01             	lea    0x1(%rax),%edx
   17141:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   17147:	48 98                	cltq   
   17149:	48 c1 e0 04          	shl    $0x4,%rax
   1714d:	48 01 c8             	add    %rcx,%rax
   17150:	8b 00                	mov    (%rax),%eax
   17152:	0f b7 c0             	movzwl %ax,%eax
   17155:	e9 ae 01 00 00       	jmpq   17308 <__vfprintf+0x2828>
   1715a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17161:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17168:	8b 00                	mov    (%rax),%eax
   1716a:	83 f8 2f             	cmp    $0x2f,%eax
   1716d:	77 30                	ja     1719f <__vfprintf+0x26bf>
   1716f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17176:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1717a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17181:	8b 00                	mov    (%rax),%eax
   17183:	89 c0                	mov    %eax,%eax
   17185:	48 01 d0             	add    %rdx,%rax
   17188:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1718f:	8b 12                	mov    (%rdx),%edx
   17191:	8d 4a 08             	lea    0x8(%rdx),%ecx
   17194:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1719b:	89 0a                	mov    %ecx,(%rdx)
   1719d:	eb 1a                	jmp    171b9 <__vfprintf+0x26d9>
   1719f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   171a6:	48 8b 40 08          	mov    0x8(%rax),%rax
   171aa:	48 8d 48 08          	lea    0x8(%rax),%rcx
   171ae:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   171b5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   171b9:	8b 00                	mov    (%rax),%eax
   171bb:	0f b7 c0             	movzwl %ax,%eax
   171be:	e9 45 01 00 00       	jmpq   17308 <__vfprintf+0x2828>
   171c3:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   171c9:	25 00 08 00 00       	and    $0x800,%eax
   171ce:	85 c0                	test   %eax,%eax
   171d0:	0f 84 9e 00 00 00    	je     17274 <__vfprintf+0x2794>
   171d6:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   171dd:	48 85 c0             	test   %rax,%rax
   171e0:	74 29                	je     1720b <__vfprintf+0x272b>
   171e2:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   171e9:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   171ef:	8d 50 01             	lea    0x1(%rax),%edx
   171f2:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   171f8:	48 98                	cltq   
   171fa:	48 c1 e0 04          	shl    $0x4,%rax
   171fe:	48 01 c8             	add    %rcx,%rax
   17201:	8b 00                	mov    (%rax),%eax
   17203:	0f b6 c0             	movzbl %al,%eax
   17206:	e9 fd 00 00 00       	jmpq   17308 <__vfprintf+0x2828>
   1720b:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17212:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17219:	8b 00                	mov    (%rax),%eax
   1721b:	83 f8 2f             	cmp    $0x2f,%eax
   1721e:	77 30                	ja     17250 <__vfprintf+0x2770>
   17220:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17227:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1722b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17232:	8b 00                	mov    (%rax),%eax
   17234:	89 c0                	mov    %eax,%eax
   17236:	48 01 d0             	add    %rdx,%rax
   17239:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17240:	8b 12                	mov    (%rdx),%edx
   17242:	8d 4a 08             	lea    0x8(%rdx),%ecx
   17245:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1724c:	89 0a                	mov    %ecx,(%rdx)
   1724e:	eb 1a                	jmp    1726a <__vfprintf+0x278a>
   17250:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17257:	48 8b 40 08          	mov    0x8(%rax),%rax
   1725b:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1725f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17266:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1726a:	8b 00                	mov    (%rax),%eax
   1726c:	0f b6 c0             	movzbl %al,%eax
   1726f:	e9 94 00 00 00       	jmpq   17308 <__vfprintf+0x2828>
   17274:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   1727b:	48 85 c0             	test   %rax,%rax
   1727e:	74 25                	je     172a5 <__vfprintf+0x27c5>
   17280:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   17287:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1728d:	8d 50 01             	lea    0x1(%rax),%edx
   17290:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   17296:	48 98                	cltq   
   17298:	48 c1 e0 04          	shl    $0x4,%rax
   1729c:	48 01 c8             	add    %rcx,%rax
   1729f:	8b 00                	mov    (%rax),%eax
   172a1:	89 c0                	mov    %eax,%eax
   172a3:	eb 63                	jmp    17308 <__vfprintf+0x2828>
   172a5:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   172ac:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   172b3:	8b 00                	mov    (%rax),%eax
   172b5:	83 f8 2f             	cmp    $0x2f,%eax
   172b8:	77 30                	ja     172ea <__vfprintf+0x280a>
   172ba:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   172c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   172c5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   172cc:	8b 00                	mov    (%rax),%eax
   172ce:	89 c0                	mov    %eax,%eax
   172d0:	48 01 d0             	add    %rdx,%rax
   172d3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   172da:	8b 12                	mov    (%rdx),%edx
   172dc:	8d 4a 08             	lea    0x8(%rdx),%ecx
   172df:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   172e6:	89 0a                	mov    %ecx,(%rdx)
   172e8:	eb 1a                	jmp    17304 <__vfprintf+0x2824>
   172ea:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   172f1:	48 8b 40 08          	mov    0x8(%rax),%rax
   172f5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   172f9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17300:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   17304:	8b 00                	mov    (%rax),%eax
   17306:	89 c0                	mov    %eax,%eax
   17308:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   1730f:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
   17316:	00 00 00 
   17319:	e9 a3 05 00 00       	jmpq   178c1 <__vfprintf+0x2de1>
   1731e:	48 8d 05 1b 59 02 00 	lea    0x2591b(%rip),%rax        # 3cc40 <xdigs_upper.3167>
   17325:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   1732c:	eb 0e                	jmp    1733c <__vfprintf+0x285c>
   1732e:	48 8d 05 fb 58 02 00 	lea    0x258fb(%rip),%rax        # 3cc30 <xdigs_lower.3166>
   17335:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   1733c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   17342:	25 00 10 00 00       	and    $0x1000,%eax
   17347:	85 c0                	test   %eax,%eax
   17349:	0f 84 9a 00 00 00    	je     173e9 <__vfprintf+0x2909>
   1734f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17356:	48 85 c0             	test   %rax,%rax
   17359:	74 27                	je     17382 <__vfprintf+0x28a2>
   1735b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   17362:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   17368:	8d 50 01             	lea    0x1(%rax),%edx
   1736b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   17371:	48 98                	cltq   
   17373:	48 c1 e0 04          	shl    $0x4,%rax
   17377:	48 01 c8             	add    %rcx,%rax
   1737a:	48 8b 00             	mov    (%rax),%rax
   1737d:	e9 0b 05 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17382:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17389:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17390:	8b 00                	mov    (%rax),%eax
   17392:	83 f8 2f             	cmp    $0x2f,%eax
   17395:	77 30                	ja     173c7 <__vfprintf+0x28e7>
   17397:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1739e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   173a2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   173a9:	8b 00                	mov    (%rax),%eax
   173ab:	89 c0                	mov    %eax,%eax
   173ad:	48 01 d0             	add    %rdx,%rax
   173b0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   173b7:	8b 12                	mov    (%rdx),%edx
   173b9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   173bc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   173c3:	89 0a                	mov    %ecx,(%rdx)
   173c5:	eb 1a                	jmp    173e1 <__vfprintf+0x2901>
   173c7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   173ce:	48 8b 40 08          	mov    0x8(%rax),%rax
   173d2:	48 8d 48 08          	lea    0x8(%rax),%rcx
   173d6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   173dd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   173e1:	48 8b 00             	mov    (%rax),%rax
   173e4:	e9 a4 04 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   173e9:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   173ef:	83 e0 20             	and    $0x20,%eax
   173f2:	85 c0                	test   %eax,%eax
   173f4:	0f 84 9a 00 00 00    	je     17494 <__vfprintf+0x29b4>
   173fa:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17401:	48 85 c0             	test   %rax,%rax
   17404:	74 27                	je     1742d <__vfprintf+0x294d>
   17406:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1740d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   17413:	8d 50 01             	lea    0x1(%rax),%edx
   17416:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1741c:	48 98                	cltq   
   1741e:	48 c1 e0 04          	shl    $0x4,%rax
   17422:	48 01 c8             	add    %rcx,%rax
   17425:	48 8b 00             	mov    (%rax),%rax
   17428:	e9 60 04 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   1742d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17434:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1743b:	8b 00                	mov    (%rax),%eax
   1743d:	83 f8 2f             	cmp    $0x2f,%eax
   17440:	77 30                	ja     17472 <__vfprintf+0x2992>
   17442:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17449:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1744d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17454:	8b 00                	mov    (%rax),%eax
   17456:	89 c0                	mov    %eax,%eax
   17458:	48 01 d0             	add    %rdx,%rax
   1745b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17462:	8b 12                	mov    (%rdx),%edx
   17464:	8d 4a 08             	lea    0x8(%rdx),%ecx
   17467:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1746e:	89 0a                	mov    %ecx,(%rdx)
   17470:	eb 1a                	jmp    1748c <__vfprintf+0x29ac>
   17472:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17479:	48 8b 40 08          	mov    0x8(%rax),%rax
   1747d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17481:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17488:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1748c:	48 8b 00             	mov    (%rax),%rax
   1748f:	e9 f9 03 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17494:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1749a:	83 e0 10             	and    $0x10,%eax
   1749d:	85 c0                	test   %eax,%eax
   1749f:	0f 84 9a 00 00 00    	je     1753f <__vfprintf+0x2a5f>
   174a5:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   174ac:	48 85 c0             	test   %rax,%rax
   174af:	74 27                	je     174d8 <__vfprintf+0x29f8>
   174b1:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   174b8:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   174be:	8d 50 01             	lea    0x1(%rax),%edx
   174c1:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   174c7:	48 98                	cltq   
   174c9:	48 c1 e0 04          	shl    $0x4,%rax
   174cd:	48 01 c8             	add    %rcx,%rax
   174d0:	48 8b 00             	mov    (%rax),%rax
   174d3:	e9 b5 03 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   174d8:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   174df:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   174e6:	8b 00                	mov    (%rax),%eax
   174e8:	83 f8 2f             	cmp    $0x2f,%eax
   174eb:	77 30                	ja     1751d <__vfprintf+0x2a3d>
   174ed:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   174f4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   174f8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   174ff:	8b 00                	mov    (%rax),%eax
   17501:	89 c0                	mov    %eax,%eax
   17503:	48 01 d0             	add    %rdx,%rax
   17506:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1750d:	8b 12                	mov    (%rdx),%edx
   1750f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   17512:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17519:	89 0a                	mov    %ecx,(%rdx)
   1751b:	eb 1a                	jmp    17537 <__vfprintf+0x2a57>
   1751d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17524:	48 8b 40 08          	mov    0x8(%rax),%rax
   17528:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1752c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17533:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   17537:	48 8b 00             	mov    (%rax),%rax
   1753a:	e9 4e 03 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   1753f:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   17545:	25 00 02 00 00       	and    $0x200,%eax
   1754a:	85 c0                	test   %eax,%eax
   1754c:	0f 84 9a 00 00 00    	je     175ec <__vfprintf+0x2b0c>
   17552:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17559:	48 85 c0             	test   %rax,%rax
   1755c:	74 27                	je     17585 <__vfprintf+0x2aa5>
   1755e:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   17565:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   1756b:	8d 50 01             	lea    0x1(%rax),%edx
   1756e:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   17574:	48 98                	cltq   
   17576:	48 c1 e0 04          	shl    $0x4,%rax
   1757a:	48 01 c8             	add    %rcx,%rax
   1757d:	48 8b 00             	mov    (%rax),%rax
   17580:	e9 08 03 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17585:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   1758c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17593:	8b 00                	mov    (%rax),%eax
   17595:	83 f8 2f             	cmp    $0x2f,%eax
   17598:	77 30                	ja     175ca <__vfprintf+0x2aea>
   1759a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   175a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   175a5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   175ac:	8b 00                	mov    (%rax),%eax
   175ae:	89 c0                	mov    %eax,%eax
   175b0:	48 01 d0             	add    %rdx,%rax
   175b3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   175ba:	8b 12                	mov    (%rdx),%edx
   175bc:	8d 4a 08             	lea    0x8(%rdx),%ecx
   175bf:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   175c6:	89 0a                	mov    %ecx,(%rdx)
   175c8:	eb 1a                	jmp    175e4 <__vfprintf+0x2b04>
   175ca:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   175d1:	48 8b 40 08          	mov    0x8(%rax),%rax
   175d5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   175d9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   175e0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   175e4:	48 8b 00             	mov    (%rax),%rax
   175e7:	e9 a1 02 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   175ec:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   175f2:	25 00 04 00 00       	and    $0x400,%eax
   175f7:	85 c0                	test   %eax,%eax
   175f9:	0f 84 9a 00 00 00    	je     17699 <__vfprintf+0x2bb9>
   175ff:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17606:	48 85 c0             	test   %rax,%rax
   17609:	74 27                	je     17632 <__vfprintf+0x2b52>
   1760b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   17612:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   17618:	8d 50 01             	lea    0x1(%rax),%edx
   1761b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   17621:	48 98                	cltq   
   17623:	48 c1 e0 04          	shl    $0x4,%rax
   17627:	48 01 c8             	add    %rcx,%rax
   1762a:	48 8b 00             	mov    (%rax),%rax
   1762d:	e9 5b 02 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17632:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17639:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17640:	8b 00                	mov    (%rax),%eax
   17642:	83 f8 2f             	cmp    $0x2f,%eax
   17645:	77 30                	ja     17677 <__vfprintf+0x2b97>
   17647:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1764e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17652:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17659:	8b 00                	mov    (%rax),%eax
   1765b:	89 c0                	mov    %eax,%eax
   1765d:	48 01 d0             	add    %rdx,%rax
   17660:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17667:	8b 12                	mov    (%rdx),%edx
   17669:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1766c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17673:	89 0a                	mov    %ecx,(%rdx)
   17675:	eb 1a                	jmp    17691 <__vfprintf+0x2bb1>
   17677:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1767e:	48 8b 40 08          	mov    0x8(%rax),%rax
   17682:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17686:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1768d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   17691:	48 8b 00             	mov    (%rax),%rax
   17694:	e9 f4 01 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17699:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1769f:	83 e0 40             	and    $0x40,%eax
   176a2:	85 c0                	test   %eax,%eax
   176a4:	0f 84 9e 00 00 00    	je     17748 <__vfprintf+0x2c68>
   176aa:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   176b1:	48 85 c0             	test   %rax,%rax
   176b4:	74 29                	je     176df <__vfprintf+0x2bff>
   176b6:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   176bd:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   176c3:	8d 50 01             	lea    0x1(%rax),%edx
   176c6:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   176cc:	48 98                	cltq   
   176ce:	48 c1 e0 04          	shl    $0x4,%rax
   176d2:	48 01 c8             	add    %rcx,%rax
   176d5:	8b 00                	mov    (%rax),%eax
   176d7:	0f b7 c0             	movzwl %ax,%eax
   176da:	e9 ae 01 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   176df:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   176e6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   176ed:	8b 00                	mov    (%rax),%eax
   176ef:	83 f8 2f             	cmp    $0x2f,%eax
   176f2:	77 30                	ja     17724 <__vfprintf+0x2c44>
   176f4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   176fb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   176ff:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17706:	8b 00                	mov    (%rax),%eax
   17708:	89 c0                	mov    %eax,%eax
   1770a:	48 01 d0             	add    %rdx,%rax
   1770d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17714:	8b 12                	mov    (%rdx),%edx
   17716:	8d 4a 08             	lea    0x8(%rdx),%ecx
   17719:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17720:	89 0a                	mov    %ecx,(%rdx)
   17722:	eb 1a                	jmp    1773e <__vfprintf+0x2c5e>
   17724:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1772b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1772f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17733:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1773a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1773e:	8b 00                	mov    (%rax),%eax
   17740:	0f b7 c0             	movzwl %ax,%eax
   17743:	e9 45 01 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17748:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1774e:	25 00 08 00 00       	and    $0x800,%eax
   17753:	85 c0                	test   %eax,%eax
   17755:	0f 84 9e 00 00 00    	je     177f9 <__vfprintf+0x2d19>
   1775b:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17762:	48 85 c0             	test   %rax,%rax
   17765:	74 29                	je     17790 <__vfprintf+0x2cb0>
   17767:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1776e:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   17774:	8d 50 01             	lea    0x1(%rax),%edx
   17777:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1777d:	48 98                	cltq   
   1777f:	48 c1 e0 04          	shl    $0x4,%rax
   17783:	48 01 c8             	add    %rcx,%rax
   17786:	8b 00                	mov    (%rax),%eax
   17788:	0f b6 c0             	movzbl %al,%eax
   1778b:	e9 fd 00 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   17790:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17797:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   1779e:	8b 00                	mov    (%rax),%eax
   177a0:	83 f8 2f             	cmp    $0x2f,%eax
   177a3:	77 30                	ja     177d5 <__vfprintf+0x2cf5>
   177a5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   177ac:	48 8b 50 10          	mov    0x10(%rax),%rdx
   177b0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   177b7:	8b 00                	mov    (%rax),%eax
   177b9:	89 c0                	mov    %eax,%eax
   177bb:	48 01 d0             	add    %rdx,%rax
   177be:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   177c5:	8b 12                	mov    (%rdx),%edx
   177c7:	8d 4a 08             	lea    0x8(%rdx),%ecx
   177ca:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   177d1:	89 0a                	mov    %ecx,(%rdx)
   177d3:	eb 1a                	jmp    177ef <__vfprintf+0x2d0f>
   177d5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   177dc:	48 8b 40 08          	mov    0x8(%rax),%rax
   177e0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   177e4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   177eb:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   177ef:	8b 00                	mov    (%rax),%eax
   177f1:	0f b6 c0             	movzbl %al,%eax
   177f4:	e9 94 00 00 00       	jmpq   1788d <__vfprintf+0x2dad>
   177f9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   17800:	48 85 c0             	test   %rax,%rax
   17803:	74 25                	je     1782a <__vfprintf+0x2d4a>
   17805:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   1780c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   17812:	8d 50 01             	lea    0x1(%rax),%edx
   17815:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   1781b:	48 98                	cltq   
   1781d:	48 c1 e0 04          	shl    $0x4,%rax
   17821:	48 01 c8             	add    %rcx,%rax
   17824:	8b 00                	mov    (%rax),%eax
   17826:	89 c0                	mov    %eax,%eax
   17828:	eb 63                	jmp    1788d <__vfprintf+0x2dad>
   1782a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   17831:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17838:	8b 00                	mov    (%rax),%eax
   1783a:	83 f8 2f             	cmp    $0x2f,%eax
   1783d:	77 30                	ja     1786f <__vfprintf+0x2d8f>
   1783f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17846:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1784a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17851:	8b 00                	mov    (%rax),%eax
   17853:	89 c0                	mov    %eax,%eax
   17855:	48 01 d0             	add    %rdx,%rax
   17858:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1785f:	8b 12                	mov    (%rdx),%edx
   17861:	8d 4a 08             	lea    0x8(%rdx),%ecx
   17864:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   1786b:	89 0a                	mov    %ecx,(%rdx)
   1786d:	eb 1a                	jmp    17889 <__vfprintf+0x2da9>
   1786f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   17876:	48 8b 40 08          	mov    0x8(%rax),%rax
   1787a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1787e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   17885:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   17889:	8b 00                	mov    (%rax),%eax
   1788b:	89 c0                	mov    %eax,%eax
   1788d:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   17894:	c7 85 8c fd ff ff 02 	movl   $0x2,-0x274(%rbp)
   1789b:	00 00 00 
   1789e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   178a4:	83 e0 01             	and    $0x1,%eax
   178a7:	85 c0                	test   %eax,%eax
   178a9:	74 15                	je     178c0 <__vfprintf+0x2de0>
   178ab:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   178b2:	00 
   178b3:	74 0b                	je     178c0 <__vfprintf+0x2de0>
   178b5:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   178bb:	88 45 87             	mov    %al,-0x79(%rbp)
   178be:	eb 01                	jmp    178c1 <__vfprintf+0x2de1>
   178c0:	90                   	nop
   178c1:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   178c8:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   178ce:	89 85 90 fd ff ff    	mov    %eax,-0x270(%rbp)
   178d4:	83 bd 90 fd ff ff 00 	cmpl   $0x0,-0x270(%rbp)
   178db:	78 0a                	js     178e7 <__vfprintf+0x2e07>
   178dd:	81 a5 70 fd ff ff 7f 	andl   $0xffffff7f,-0x290(%rbp)
   178e4:	ff ff ff 
   178e7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   178eb:	48 83 c0 64          	add    $0x64,%rax
   178ef:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   178f6:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   178fd:	00 
   178fe:	75 0d                	jne    1790d <__vfprintf+0x2e2d>
   17900:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   17907:	0f 84 85 01 00 00    	je     17a92 <__vfprintf+0x2fb2>
   1790d:	8b 85 8c fd ff ff    	mov    -0x274(%rbp),%eax
   17913:	83 f8 01             	cmp    $0x1,%eax
   17916:	0f 84 e8 00 00 00    	je     17a04 <__vfprintf+0x2f24>
   1791c:	83 f8 01             	cmp    $0x1,%eax
   1791f:	72 0f                	jb     17930 <__vfprintf+0x2e50>
   17921:	83 f8 02             	cmp    $0x2,%eax
   17924:	0f 84 04 01 00 00    	je     17a2e <__vfprintf+0x2f4e>
   1792a:	e9 3e 01 00 00       	jmpq   17a6d <__vfprintf+0x2f8d>
   1792f:	90                   	nop
   17930:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   17937:	83 e0 07             	and    $0x7,%eax
   1793a:	83 c0 30             	add    $0x30,%eax
   1793d:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   17944:	01 
   17945:	89 c2                	mov    %eax,%edx
   17947:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1794e:	88 10                	mov    %dl,(%rax)
   17950:	48 c1 ad e0 fd ff ff 	shrq   $0x3,-0x220(%rbp)
   17957:	03 
   17958:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   1795f:	00 
   17960:	75 cd                	jne    1792f <__vfprintf+0x2e4f>
   17962:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   17968:	83 e0 01             	and    $0x1,%eax
   1796b:	85 c0                	test   %eax,%eax
   1796d:	0f 84 22 01 00 00    	je     17a95 <__vfprintf+0x2fb5>
   17973:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1797a:	0f b6 00             	movzbl (%rax),%eax
   1797d:	3c 30                	cmp    $0x30,%al
   1797f:	0f 84 10 01 00 00    	je     17a95 <__vfprintf+0x2fb5>
   17985:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   1798c:	01 
   1798d:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   17994:	c6 00 30             	movb   $0x30,(%rax)
   17997:	e9 f9 00 00 00       	jmpq   17a95 <__vfprintf+0x2fb5>
   1799c:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
   179a3:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   179aa:	cc cc cc 
   179ad:	48 89 c8             	mov    %rcx,%rax
   179b0:	48 f7 e2             	mul    %rdx
   179b3:	48 c1 ea 03          	shr    $0x3,%rdx
   179b7:	48 89 d0             	mov    %rdx,%rax
   179ba:	48 c1 e0 02          	shl    $0x2,%rax
   179be:	48 01 d0             	add    %rdx,%rax
   179c1:	48 01 c0             	add    %rax,%rax
   179c4:	48 29 c1             	sub    %rax,%rcx
   179c7:	48 89 ca             	mov    %rcx,%rdx
   179ca:	89 d0                	mov    %edx,%eax
   179cc:	83 c0 30             	add    $0x30,%eax
   179cf:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   179d6:	01 
   179d7:	89 c2                	mov    %eax,%edx
   179d9:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   179e0:	88 10                	mov    %dl,(%rax)
   179e2:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   179e9:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   179f0:	cc cc cc 
   179f3:	48 f7 e2             	mul    %rdx
   179f6:	48 89 d0             	mov    %rdx,%rax
   179f9:	48 c1 e8 03          	shr    $0x3,%rax
   179fd:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   17a04:	48 83 bd e0 fd ff ff 	cmpq   $0x9,-0x220(%rbp)
   17a0b:	09 
   17a0c:	77 8e                	ja     1799c <__vfprintf+0x2ebc>
   17a0e:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   17a15:	83 c0 30             	add    $0x30,%eax
   17a18:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   17a1f:	01 
   17a20:	89 c2                	mov    %eax,%edx
   17a22:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   17a29:	88 10                	mov    %dl,(%rax)
   17a2b:	eb 69                	jmp    17a96 <__vfprintf+0x2fb6>
   17a2d:	90                   	nop
   17a2e:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   17a35:	83 e0 0f             	and    $0xf,%eax
   17a38:	48 89 c2             	mov    %rax,%rdx
   17a3b:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   17a42:	48 01 d0             	add    %rdx,%rax
   17a45:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   17a4c:	01 
   17a4d:	0f b6 10             	movzbl (%rax),%edx
   17a50:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   17a57:	88 10                	mov    %dl,(%rax)
   17a59:	48 c1 ad e0 fd ff ff 	shrq   $0x4,-0x220(%rbp)
   17a60:	04 
   17a61:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   17a68:	00 
   17a69:	75 c2                	jne    17a2d <__vfprintf+0x2f4d>
   17a6b:	eb 29                	jmp    17a96 <__vfprintf+0x2fb6>
   17a6d:	48 8d 05 53 4e 02 00 	lea    0x24e53(%rip),%rax        # 3c8c7 <__func__.2398+0x1e>
   17a74:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   17a7b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   17a82:	48 89 c7             	mov    %rax,%rdi
   17a85:	e8 e7 c1 ff ff       	callq  13c71 <strlen>
   17a8a:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   17a90:	eb 31                	jmp    17ac3 <__vfprintf+0x2fe3>
   17a92:	90                   	nop
   17a93:	eb 01                	jmp    17a96 <__vfprintf+0x2fb6>
   17a95:	90                   	nop
   17a96:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17a9a:	48 83 c0 64          	add    $0x64,%rax
   17a9e:	48 89 c2             	mov    %rax,%rdx
   17aa1:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   17aa8:	48 29 c2             	sub    %rax,%rdx
   17aab:	48 89 d0             	mov    %rdx,%rax
   17aae:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   17ab4:	83 bd 98 fd ff ff 64 	cmpl   $0x64,-0x268(%rbp)
   17abb:	7e 05                	jle    17ac2 <__vfprintf+0x2fe2>
   17abd:	e8 17 3b 02 00       	callq  3b5d9 <abort>
   17ac2:	90                   	nop
   17ac3:	eb 3d                	jmp    17b02 <__vfprintf+0x3022>
   17ac5:	83 bd 64 fd ff ff 00 	cmpl   $0x0,-0x29c(%rbp)
   17acc:	0f 84 0f 13 00 00    	je     18de1 <__vfprintf+0x4301>
   17ad2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17ad6:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   17add:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   17ae3:	89 c2                	mov    %eax,%edx
   17ae5:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   17aec:	88 10                	mov    %dl,(%rax)
   17aee:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   17af5:	00 00 00 
   17af8:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   17aff:	eb 01                	jmp    17b02 <__vfprintf+0x3022>
   17b01:	90                   	nop
   17b02:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
   17b08:	39 85 98 fd ff ff    	cmp    %eax,-0x268(%rbp)
   17b0e:	0f 4d 85 98 fd ff ff 	cmovge -0x268(%rbp),%eax
   17b15:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
   17b1b:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   17b22:	84 c0                	test   %al,%al
   17b24:	74 07                	je     17b2d <__vfprintf+0x304d>
   17b26:	83 85 94 fd ff ff 01 	addl   $0x1,-0x26c(%rbp)
   17b2d:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   17b31:	84 c0                	test   %al,%al
   17b33:	74 07                	je     17b3c <__vfprintf+0x305c>
   17b35:	83 85 94 fd ff ff 02 	addl   $0x2,-0x26c(%rbp)
   17b3c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   17b42:	25 84 00 00 00       	and    $0x84,%eax
   17b47:	85 c0                	test   %eax,%eax
   17b49:	0f 85 42 01 00 00    	jne    17c91 <__vfprintf+0x31b1>
   17b4f:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   17b55:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   17b5b:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   17b61:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   17b68:	0f 8e 23 01 00 00    	jle    17c91 <__vfprintf+0x31b1>
   17b6e:	e9 87 00 00 00       	jmpq   17bfa <__vfprintf+0x311a>
   17b73:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17b7a:	48 8d 15 3f f6 02 00 	lea    0x2f63f(%rip),%rdx        # 471c0 <blanks.3164>
   17b81:	48 89 10             	mov    %rdx,(%rax)
   17b84:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17b8b:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   17b92:	00 
   17b93:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   17b99:	83 c0 10             	add    $0x10,%eax
   17b9c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17ba2:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17ba9:	10 
   17baa:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17bb0:	83 c0 01             	add    $0x1,%eax
   17bb3:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17bb9:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17bbf:	83 f8 07             	cmp    $0x7,%eax
   17bc2:	7e 2f                	jle    17bf3 <__vfprintf+0x3113>
   17bc4:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17bcb:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17bd2:	48 89 d6             	mov    %rdx,%rsi
   17bd5:	48 89 c7             	mov    %rax,%rdi
   17bd8:	e8 d2 cc ff ff       	callq  148af <__sprint>
   17bdd:	85 c0                	test   %eax,%eax
   17bdf:	0f 85 41 12 00 00    	jne    18e26 <__vfprintf+0x4346>
   17be5:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17bec:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17bf3:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   17bfa:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   17c01:	0f 8f 6c ff ff ff    	jg     17b73 <__vfprintf+0x3093>
   17c07:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17c0e:	48 8d 15 ab f5 02 00 	lea    0x2f5ab(%rip),%rdx        # 471c0 <blanks.3164>
   17c15:	48 89 10             	mov    %rdx,(%rax)
   17c18:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   17c1e:	48 63 d0             	movslq %eax,%rdx
   17c21:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17c28:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17c2c:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   17c32:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   17c38:	01 d0                	add    %edx,%eax
   17c3a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17c40:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17c47:	10 
   17c48:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17c4e:	83 c0 01             	add    $0x1,%eax
   17c51:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17c57:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17c5d:	83 f8 07             	cmp    $0x7,%eax
   17c60:	7e 2f                	jle    17c91 <__vfprintf+0x31b1>
   17c62:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17c69:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17c70:	48 89 d6             	mov    %rdx,%rsi
   17c73:	48 89 c7             	mov    %rax,%rdi
   17c76:	e8 34 cc ff ff       	callq  148af <__sprint>
   17c7b:	85 c0                	test   %eax,%eax
   17c7d:	0f 85 a6 11 00 00    	jne    18e29 <__vfprintf+0x4349>
   17c83:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17c8a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17c91:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   17c98:	84 c0                	test   %al,%al
   17c9a:	0f 84 80 00 00 00    	je     17d20 <__vfprintf+0x3240>
   17ca0:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17ca7:	48 8d 95 56 fd ff ff 	lea    -0x2aa(%rbp),%rdx
   17cae:	48 89 10             	mov    %rdx,(%rax)
   17cb1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17cb8:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   17cbf:	00 
   17cc0:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   17cc6:	83 c0 01             	add    $0x1,%eax
   17cc9:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17ccf:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17cd6:	10 
   17cd7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17cdd:	83 c0 01             	add    $0x1,%eax
   17ce0:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17ce6:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17cec:	83 f8 07             	cmp    $0x7,%eax
   17cef:	7e 2f                	jle    17d20 <__vfprintf+0x3240>
   17cf1:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17cf8:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17cff:	48 89 d6             	mov    %rdx,%rsi
   17d02:	48 89 c7             	mov    %rax,%rdi
   17d05:	e8 a5 cb ff ff       	callq  148af <__sprint>
   17d0a:	85 c0                	test   %eax,%eax
   17d0c:	0f 85 1a 11 00 00    	jne    18e2c <__vfprintf+0x434c>
   17d12:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17d19:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17d20:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   17d24:	84 c0                	test   %al,%al
   17d26:	0f 84 81 00 00 00    	je     17dad <__vfprintf+0x32cd>
   17d2c:	c6 45 86 30          	movb   $0x30,-0x7a(%rbp)
   17d30:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17d37:	48 8d 55 86          	lea    -0x7a(%rbp),%rdx
   17d3b:	48 89 10             	mov    %rdx,(%rax)
   17d3e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17d45:	48 c7 40 08 02 00 00 	movq   $0x2,0x8(%rax)
   17d4c:	00 
   17d4d:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   17d53:	83 c0 02             	add    $0x2,%eax
   17d56:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17d5c:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17d63:	10 
   17d64:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17d6a:	83 c0 01             	add    $0x1,%eax
   17d6d:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17d73:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17d79:	83 f8 07             	cmp    $0x7,%eax
   17d7c:	7e 2f                	jle    17dad <__vfprintf+0x32cd>
   17d7e:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17d85:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17d8c:	48 89 d6             	mov    %rdx,%rsi
   17d8f:	48 89 c7             	mov    %rax,%rdi
   17d92:	e8 18 cb ff ff       	callq  148af <__sprint>
   17d97:	85 c0                	test   %eax,%eax
   17d99:	0f 85 90 10 00 00    	jne    18e2f <__vfprintf+0x434f>
   17d9f:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17da6:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17dad:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   17db3:	25 84 00 00 00       	and    $0x84,%eax
   17db8:	3d 80 00 00 00       	cmp    $0x80,%eax
   17dbd:	0f 85 42 01 00 00    	jne    17f05 <__vfprintf+0x3425>
   17dc3:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   17dc9:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   17dcf:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   17dd5:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   17ddc:	0f 8e 23 01 00 00    	jle    17f05 <__vfprintf+0x3425>
   17de2:	e9 87 00 00 00       	jmpq   17e6e <__vfprintf+0x338e>
   17de7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17dee:	48 8d 15 db f3 02 00 	lea    0x2f3db(%rip),%rdx        # 471d0 <zeroes.3165>
   17df5:	48 89 10             	mov    %rdx,(%rax)
   17df8:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17dff:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   17e06:	00 
   17e07:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   17e0d:	83 c0 10             	add    $0x10,%eax
   17e10:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17e16:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17e1d:	10 
   17e1e:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17e24:	83 c0 01             	add    $0x1,%eax
   17e27:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17e2d:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17e33:	83 f8 07             	cmp    $0x7,%eax
   17e36:	7e 2f                	jle    17e67 <__vfprintf+0x3387>
   17e38:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17e3f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17e46:	48 89 d6             	mov    %rdx,%rsi
   17e49:	48 89 c7             	mov    %rax,%rdi
   17e4c:	e8 5e ca ff ff       	callq  148af <__sprint>
   17e51:	85 c0                	test   %eax,%eax
   17e53:	0f 85 d9 0f 00 00    	jne    18e32 <__vfprintf+0x4352>
   17e59:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17e60:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17e67:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   17e6e:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   17e75:	0f 8f 6c ff ff ff    	jg     17de7 <__vfprintf+0x3307>
   17e7b:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17e82:	48 8d 15 47 f3 02 00 	lea    0x2f347(%rip),%rdx        # 471d0 <zeroes.3165>
   17e89:	48 89 10             	mov    %rdx,(%rax)
   17e8c:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   17e92:	48 63 d0             	movslq %eax,%rdx
   17e95:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17e9c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17ea0:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   17ea6:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   17eac:	01 d0                	add    %edx,%eax
   17eae:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17eb4:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17ebb:	10 
   17ebc:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17ec2:	83 c0 01             	add    $0x1,%eax
   17ec5:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17ecb:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17ed1:	83 f8 07             	cmp    $0x7,%eax
   17ed4:	7e 2f                	jle    17f05 <__vfprintf+0x3425>
   17ed6:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17edd:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17ee4:	48 89 d6             	mov    %rdx,%rsi
   17ee7:	48 89 c7             	mov    %rax,%rdi
   17eea:	e8 c0 c9 ff ff       	callq  148af <__sprint>
   17eef:	85 c0                	test   %eax,%eax
   17ef1:	0f 85 3e 0f 00 00    	jne    18e35 <__vfprintf+0x4355>
   17ef7:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17efe:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17f05:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
   17f0b:	2b 85 98 fd ff ff    	sub    -0x268(%rbp),%eax
   17f11:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   17f17:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   17f1e:	0f 8e 23 01 00 00    	jle    18047 <__vfprintf+0x3567>
   17f24:	e9 87 00 00 00       	jmpq   17fb0 <__vfprintf+0x34d0>
   17f29:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17f30:	48 8d 15 99 f2 02 00 	lea    0x2f299(%rip),%rdx        # 471d0 <zeroes.3165>
   17f37:	48 89 10             	mov    %rdx,(%rax)
   17f3a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17f41:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   17f48:	00 
   17f49:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   17f4f:	83 c0 10             	add    $0x10,%eax
   17f52:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17f58:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17f5f:	10 
   17f60:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17f66:	83 c0 01             	add    $0x1,%eax
   17f69:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   17f6f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   17f75:	83 f8 07             	cmp    $0x7,%eax
   17f78:	7e 2f                	jle    17fa9 <__vfprintf+0x34c9>
   17f7a:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   17f81:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   17f88:	48 89 d6             	mov    %rdx,%rsi
   17f8b:	48 89 c7             	mov    %rax,%rdi
   17f8e:	e8 1c c9 ff ff       	callq  148af <__sprint>
   17f93:	85 c0                	test   %eax,%eax
   17f95:	0f 85 9d 0e 00 00    	jne    18e38 <__vfprintf+0x4358>
   17f9b:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   17fa2:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   17fa9:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   17fb0:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   17fb7:	0f 8f 6c ff ff ff    	jg     17f29 <__vfprintf+0x3449>
   17fbd:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17fc4:	48 8d 15 05 f2 02 00 	lea    0x2f205(%rip),%rdx        # 471d0 <zeroes.3165>
   17fcb:	48 89 10             	mov    %rdx,(%rax)
   17fce:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   17fd4:	48 63 d0             	movslq %eax,%rdx
   17fd7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   17fde:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17fe2:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   17fe8:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   17fee:	01 d0                	add    %edx,%eax
   17ff0:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   17ff6:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   17ffd:	10 
   17ffe:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18004:	83 c0 01             	add    $0x1,%eax
   18007:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   1800d:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18013:	83 f8 07             	cmp    $0x7,%eax
   18016:	7e 2f                	jle    18047 <__vfprintf+0x3567>
   18018:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   1801f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18026:	48 89 d6             	mov    %rdx,%rsi
   18029:	48 89 c7             	mov    %rax,%rdi
   1802c:	e8 7e c8 ff ff       	callq  148af <__sprint>
   18031:	85 c0                	test   %eax,%eax
   18033:	0f 85 02 0e 00 00    	jne    18e3b <__vfprintf+0x435b>
   18039:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18040:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18047:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   1804d:	25 00 01 00 00       	and    $0x100,%eax
   18052:	85 c0                	test   %eax,%eax
   18054:	0f 85 93 00 00 00    	jne    180ed <__vfprintf+0x360d>
   1805a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18061:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   18068:	48 89 10             	mov    %rdx,(%rax)
   1806b:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   18071:	48 63 d0             	movslq %eax,%rdx
   18074:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1807b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1807f:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   18085:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   1808b:	01 d0                	add    %edx,%eax
   1808d:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18093:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   1809a:	10 
   1809b:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   180a1:	83 c0 01             	add    $0x1,%eax
   180a4:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   180aa:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   180b0:	83 f8 07             	cmp    $0x7,%eax
   180b3:	0f 8e 4d 0b 00 00    	jle    18c06 <__vfprintf+0x4126>
   180b9:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   180c0:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   180c7:	48 89 d6             	mov    %rdx,%rsi
   180ca:	48 89 c7             	mov    %rax,%rdi
   180cd:	e8 dd c7 ff ff       	callq  148af <__sprint>
   180d2:	85 c0                	test   %eax,%eax
   180d4:	0f 85 64 0d 00 00    	jne    18e3e <__vfprintf+0x435e>
   180da:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   180e1:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   180e8:	e9 19 0b 00 00       	jmpq   18c06 <__vfprintf+0x4126>
   180ed:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   180f4:	0f 85 6b 07 00 00    	jne    18865 <__vfprintf+0x3d85>
   180fa:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   18100:	85 c0                	test   %eax,%eax
   18102:	0f 8f 69 02 00 00    	jg     18371 <__vfprintf+0x3891>
   18108:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1810f:	48 8d 15 ba f0 02 00 	lea    0x2f0ba(%rip),%rdx        # 471d0 <zeroes.3165>
   18116:	48 89 10             	mov    %rdx,(%rax)
   18119:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18120:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   18127:	00 
   18128:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   1812e:	83 c0 01             	add    $0x1,%eax
   18131:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18137:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   1813e:	10 
   1813f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18145:	83 c0 01             	add    $0x1,%eax
   18148:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   1814e:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18154:	83 f8 07             	cmp    $0x7,%eax
   18157:	7e 2f                	jle    18188 <__vfprintf+0x36a8>
   18159:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18160:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18167:	48 89 d6             	mov    %rdx,%rsi
   1816a:	48 89 c7             	mov    %rax,%rdi
   1816d:	e8 3d c7 ff ff       	callq  148af <__sprint>
   18172:	85 c0                	test   %eax,%eax
   18174:	0f 85 c7 0c 00 00    	jne    18e41 <__vfprintf+0x4361>
   1817a:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18181:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18188:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   1818f:	75 11                	jne    181a2 <__vfprintf+0x36c2>
   18191:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   18197:	83 e0 01             	and    $0x1,%eax
   1819a:	85 c0                	test   %eax,%eax
   1819c:	0f 84 80 00 00 00    	je     18222 <__vfprintf+0x3742>
   181a2:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   181a9:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   181b0:	48 89 10             	mov    %rdx,(%rax)
   181b3:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   181ba:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   181c1:	00 
   181c2:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   181c8:	83 c0 01             	add    $0x1,%eax
   181cb:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   181d1:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   181d8:	10 
   181d9:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   181df:	83 c0 01             	add    $0x1,%eax
   181e2:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   181e8:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   181ee:	83 f8 07             	cmp    $0x7,%eax
   181f1:	7e 2f                	jle    18222 <__vfprintf+0x3742>
   181f3:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   181fa:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18201:	48 89 d6             	mov    %rdx,%rsi
   18204:	48 89 c7             	mov    %rax,%rdi
   18207:	e8 a3 c6 ff ff       	callq  148af <__sprint>
   1820c:	85 c0                	test   %eax,%eax
   1820e:	0f 85 30 0c 00 00    	jne    18e44 <__vfprintf+0x4364>
   18214:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   1821b:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18222:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   18228:	f7 d8                	neg    %eax
   1822a:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   18230:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   18237:	0f 8e 23 01 00 00    	jle    18360 <__vfprintf+0x3880>
   1823d:	e9 87 00 00 00       	jmpq   182c9 <__vfprintf+0x37e9>
   18242:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18249:	48 8d 15 80 ef 02 00 	lea    0x2ef80(%rip),%rdx        # 471d0 <zeroes.3165>
   18250:	48 89 10             	mov    %rdx,(%rax)
   18253:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1825a:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   18261:	00 
   18262:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   18268:	83 c0 10             	add    $0x10,%eax
   1826b:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18271:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18278:	10 
   18279:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1827f:	83 c0 01             	add    $0x1,%eax
   18282:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18288:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1828e:	83 f8 07             	cmp    $0x7,%eax
   18291:	7e 2f                	jle    182c2 <__vfprintf+0x37e2>
   18293:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   1829a:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   182a1:	48 89 d6             	mov    %rdx,%rsi
   182a4:	48 89 c7             	mov    %rax,%rdi
   182a7:	e8 03 c6 ff ff       	callq  148af <__sprint>
   182ac:	85 c0                	test   %eax,%eax
   182ae:	0f 85 93 0b 00 00    	jne    18e47 <__vfprintf+0x4367>
   182b4:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   182bb:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   182c2:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   182c9:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   182d0:	0f 8f 6c ff ff ff    	jg     18242 <__vfprintf+0x3762>
   182d6:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   182dd:	48 8d 15 ec ee 02 00 	lea    0x2eeec(%rip),%rdx        # 471d0 <zeroes.3165>
   182e4:	48 89 10             	mov    %rdx,(%rax)
   182e7:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   182ed:	48 63 d0             	movslq %eax,%rdx
   182f0:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   182f7:	48 89 50 08          	mov    %rdx,0x8(%rax)
   182fb:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   18301:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18307:	01 d0                	add    %edx,%eax
   18309:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   1830f:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18316:	10 
   18317:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1831d:	83 c0 01             	add    $0x1,%eax
   18320:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18326:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1832c:	83 f8 07             	cmp    $0x7,%eax
   1832f:	7e 2f                	jle    18360 <__vfprintf+0x3880>
   18331:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18338:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   1833f:	48 89 d6             	mov    %rdx,%rsi
   18342:	48 89 c7             	mov    %rax,%rdi
   18345:	e8 65 c5 ff ff       	callq  148af <__sprint>
   1834a:	85 c0                	test   %eax,%eax
   1834c:	0f 85 f8 0a 00 00    	jne    18e4a <__vfprintf+0x436a>
   18352:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18359:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18360:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   18366:	01 85 7c fd ff ff    	add    %eax,-0x284(%rbp)
   1836c:	e9 ca 02 00 00       	jmpq   1863b <__vfprintf+0x3b5b>
   18371:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   18378:	48 89 c2             	mov    %rax,%rdx
   1837b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   18382:	48 29 c2             	sub    %rax,%rdx
   18385:	48 89 d0             	mov    %rdx,%rax
   18388:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   1838e:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   18394:	3b 85 84 fd ff ff    	cmp    -0x27c(%rbp),%eax
   1839a:	7e 0c                	jle    183a8 <__vfprintf+0x38c8>
   1839c:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
   183a2:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   183a8:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   183af:	0f 8e 8a 00 00 00    	jle    1843f <__vfprintf+0x395f>
   183b5:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   183bc:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   183c3:	48 89 10             	mov    %rdx,(%rax)
   183c6:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   183cc:	48 63 d0             	movslq %eax,%rdx
   183cf:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   183d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   183da:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   183e0:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   183e6:	01 d0                	add    %edx,%eax
   183e8:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   183ee:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   183f5:	10 
   183f6:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   183fc:	83 c0 01             	add    $0x1,%eax
   183ff:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18405:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1840b:	83 f8 07             	cmp    $0x7,%eax
   1840e:	7e 2f                	jle    1843f <__vfprintf+0x395f>
   18410:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18417:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   1841e:	48 89 d6             	mov    %rdx,%rsi
   18421:	48 89 c7             	mov    %rax,%rdi
   18424:	e8 86 c4 ff ff       	callq  148af <__sprint>
   18429:	85 c0                	test   %eax,%eax
   1842b:	0f 85 1c 0a 00 00    	jne    18e4d <__vfprintf+0x436d>
   18431:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18438:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   1843f:	b8 00 00 00 00       	mov    $0x0,%eax
   18444:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   1844b:	0f 49 85 6c fd ff ff 	cmovns -0x294(%rbp),%eax
   18452:	8b 95 84 fd ff ff    	mov    -0x27c(%rbp),%edx
   18458:	29 c2                	sub    %eax,%edx
   1845a:	89 d0                	mov    %edx,%eax
   1845c:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   18462:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   18469:	0f 8e 23 01 00 00    	jle    18592 <__vfprintf+0x3ab2>
   1846f:	e9 87 00 00 00       	jmpq   184fb <__vfprintf+0x3a1b>
   18474:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1847b:	48 8d 15 4e ed 02 00 	lea    0x2ed4e(%rip),%rdx        # 471d0 <zeroes.3165>
   18482:	48 89 10             	mov    %rdx,(%rax)
   18485:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1848c:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   18493:	00 
   18494:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   1849a:	83 c0 10             	add    $0x10,%eax
   1849d:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   184a3:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   184aa:	10 
   184ab:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   184b1:	83 c0 01             	add    $0x1,%eax
   184b4:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   184ba:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   184c0:	83 f8 07             	cmp    $0x7,%eax
   184c3:	7e 2f                	jle    184f4 <__vfprintf+0x3a14>
   184c5:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   184cc:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   184d3:	48 89 d6             	mov    %rdx,%rsi
   184d6:	48 89 c7             	mov    %rax,%rdi
   184d9:	e8 d1 c3 ff ff       	callq  148af <__sprint>
   184de:	85 c0                	test   %eax,%eax
   184e0:	0f 85 6a 09 00 00    	jne    18e50 <__vfprintf+0x4370>
   184e6:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   184ed:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   184f4:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   184fb:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   18502:	0f 8f 6c ff ff ff    	jg     18474 <__vfprintf+0x3994>
   18508:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1850f:	48 8d 15 ba ec 02 00 	lea    0x2ecba(%rip),%rdx        # 471d0 <zeroes.3165>
   18516:	48 89 10             	mov    %rdx,(%rax)
   18519:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   1851f:	48 63 d0             	movslq %eax,%rdx
   18522:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18529:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1852d:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   18533:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18539:	01 d0                	add    %edx,%eax
   1853b:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18541:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18548:	10 
   18549:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1854f:	83 c0 01             	add    $0x1,%eax
   18552:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18558:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1855e:	83 f8 07             	cmp    $0x7,%eax
   18561:	7e 2f                	jle    18592 <__vfprintf+0x3ab2>
   18563:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   1856a:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18571:	48 89 d6             	mov    %rdx,%rsi
   18574:	48 89 c7             	mov    %rax,%rdi
   18577:	e8 33 c3 ff ff       	callq  148af <__sprint>
   1857c:	85 c0                	test   %eax,%eax
   1857e:	0f 85 cf 08 00 00    	jne    18e53 <__vfprintf+0x4373>
   18584:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   1858b:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18592:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
   18598:	48 98                	cltq   
   1859a:	48 01 85 c8 fd ff ff 	add    %rax,-0x238(%rbp)
   185a1:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   185a8:	75 11                	jne    185bb <__vfprintf+0x3adb>
   185aa:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   185b0:	83 e0 01             	and    $0x1,%eax
   185b3:	85 c0                	test   %eax,%eax
   185b5:	0f 84 80 00 00 00    	je     1863b <__vfprintf+0x3b5b>
   185bb:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   185c2:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   185c9:	48 89 10             	mov    %rdx,(%rax)
   185cc:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   185d3:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   185da:	00 
   185db:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   185e1:	83 c0 01             	add    $0x1,%eax
   185e4:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   185ea:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   185f1:	10 
   185f2:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   185f8:	83 c0 01             	add    $0x1,%eax
   185fb:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18601:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18607:	83 f8 07             	cmp    $0x7,%eax
   1860a:	7e 2f                	jle    1863b <__vfprintf+0x3b5b>
   1860c:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18613:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   1861a:	48 89 d6             	mov    %rdx,%rsi
   1861d:	48 89 c7             	mov    %rax,%rdi
   18620:	e8 8a c2 ff ff       	callq  148af <__sprint>
   18625:	85 c0                	test   %eax,%eax
   18627:	0f 85 29 08 00 00    	jne    18e56 <__vfprintf+0x4376>
   1862d:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18634:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   1863b:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   18642:	48 89 c2             	mov    %rax,%rdx
   18645:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1864c:	48 29 c2             	sub    %rax,%rdx
   1864f:	48 89 d0             	mov    %rdx,%rax
   18652:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   18658:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   1865e:	3b 85 7c fd ff ff    	cmp    -0x284(%rbp),%eax
   18664:	7e 0c                	jle    18672 <__vfprintf+0x3b92>
   18666:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   1866c:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   18672:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   18679:	0f 8e 8a 00 00 00    	jle    18709 <__vfprintf+0x3c29>
   1867f:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18686:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   1868d:	48 89 10             	mov    %rdx,(%rax)
   18690:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   18696:	48 63 d0             	movslq %eax,%rdx
   18699:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   186a0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   186a4:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   186aa:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   186b0:	01 d0                	add    %edx,%eax
   186b2:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   186b8:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   186bf:	10 
   186c0:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   186c6:	83 c0 01             	add    $0x1,%eax
   186c9:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   186cf:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   186d5:	83 f8 07             	cmp    $0x7,%eax
   186d8:	7e 2f                	jle    18709 <__vfprintf+0x3c29>
   186da:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   186e1:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   186e8:	48 89 d6             	mov    %rdx,%rsi
   186eb:	48 89 c7             	mov    %rax,%rdi
   186ee:	e8 bc c1 ff ff       	callq  148af <__sprint>
   186f3:	85 c0                	test   %eax,%eax
   186f5:	0f 85 5e 07 00 00    	jne    18e59 <__vfprintf+0x4379>
   186fb:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18702:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18709:	b8 00 00 00 00       	mov    $0x0,%eax
   1870e:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   18715:	0f 49 85 6c fd ff ff 	cmovns -0x294(%rbp),%eax
   1871c:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   18722:	29 c2                	sub    %eax,%edx
   18724:	89 d0                	mov    %edx,%eax
   18726:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   1872c:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   18733:	0f 8e cd 04 00 00    	jle    18c06 <__vfprintf+0x4126>
   18739:	e9 87 00 00 00       	jmpq   187c5 <__vfprintf+0x3ce5>
   1873e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18745:	48 8d 15 84 ea 02 00 	lea    0x2ea84(%rip),%rdx        # 471d0 <zeroes.3165>
   1874c:	48 89 10             	mov    %rdx,(%rax)
   1874f:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18756:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   1875d:	00 
   1875e:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   18764:	83 c0 10             	add    $0x10,%eax
   18767:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   1876d:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18774:	10 
   18775:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1877b:	83 c0 01             	add    $0x1,%eax
   1877e:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18784:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1878a:	83 f8 07             	cmp    $0x7,%eax
   1878d:	7e 2f                	jle    187be <__vfprintf+0x3cde>
   1878f:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18796:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   1879d:	48 89 d6             	mov    %rdx,%rsi
   187a0:	48 89 c7             	mov    %rax,%rdi
   187a3:	e8 07 c1 ff ff       	callq  148af <__sprint>
   187a8:	85 c0                	test   %eax,%eax
   187aa:	0f 85 ac 06 00 00    	jne    18e5c <__vfprintf+0x437c>
   187b0:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   187b7:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   187be:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   187c5:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   187cc:	0f 8f 6c ff ff ff    	jg     1873e <__vfprintf+0x3c5e>
   187d2:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   187d9:	48 8d 15 f0 e9 02 00 	lea    0x2e9f0(%rip),%rdx        # 471d0 <zeroes.3165>
   187e0:	48 89 10             	mov    %rdx,(%rax)
   187e3:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   187e9:	48 63 d0             	movslq %eax,%rdx
   187ec:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   187f3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   187f7:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   187fd:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18803:	01 d0                	add    %edx,%eax
   18805:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   1880b:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18812:	10 
   18813:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18819:	83 c0 01             	add    $0x1,%eax
   1881c:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18822:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18828:	83 f8 07             	cmp    $0x7,%eax
   1882b:	0f 8e d5 03 00 00    	jle    18c06 <__vfprintf+0x4126>
   18831:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18838:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   1883f:	48 89 d6             	mov    %rdx,%rsi
   18842:	48 89 c7             	mov    %rax,%rdi
   18845:	e8 65 c0 ff ff       	callq  148af <__sprint>
   1884a:	85 c0                	test   %eax,%eax
   1884c:	0f 85 0d 06 00 00    	jne    18e5f <__vfprintf+0x437f>
   18852:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18859:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18860:	e9 a1 03 00 00       	jmpq   18c06 <__vfprintf+0x4126>
   18865:	83 bd 7c fd ff ff 01 	cmpl   $0x1,-0x284(%rbp)
   1886c:	7f 11                	jg     1887f <__vfprintf+0x3d9f>
   1886e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   18874:	83 e0 01             	and    $0x1,%eax
   18877:	85 c0                	test   %eax,%eax
   18879:	0f 84 7d 02 00 00    	je     18afc <__vfprintf+0x401c>
   1887f:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   18886:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1888a:	48 89 95 c8 fd ff ff 	mov    %rdx,-0x238(%rbp)
   18891:	0f b6 00             	movzbl (%rax),%eax
   18894:	88 45 90             	mov    %al,-0x70(%rbp)
   18897:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   1889e:	0f b6 00             	movzbl (%rax),%eax
   188a1:	88 45 91             	mov    %al,-0x6f(%rbp)
   188a4:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   188ab:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   188af:	48 89 10             	mov    %rdx,(%rax)
   188b2:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   188b9:	48 c7 40 08 02 00 00 	movq   $0x2,0x8(%rax)
   188c0:	00 
   188c1:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   188c7:	83 c0 02             	add    $0x2,%eax
   188ca:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   188d0:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   188d7:	10 
   188d8:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   188de:	83 c0 01             	add    $0x1,%eax
   188e1:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   188e7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   188ed:	83 f8 07             	cmp    $0x7,%eax
   188f0:	7e 2f                	jle    18921 <__vfprintf+0x3e41>
   188f2:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   188f9:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18900:	48 89 d6             	mov    %rdx,%rsi
   18903:	48 89 c7             	mov    %rax,%rdi
   18906:	e8 a4 bf ff ff       	callq  148af <__sprint>
   1890b:	85 c0                	test   %eax,%eax
   1890d:	0f 85 4f 05 00 00    	jne    18e62 <__vfprintf+0x4382>
   18913:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   1891a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18921:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18928:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   1892f:	48 89 10             	mov    %rdx,(%rax)
   18932:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   18938:	83 e8 01             	sub    $0x1,%eax
   1893b:	48 63 d0             	movslq %eax,%rdx
   1893e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18945:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18949:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   1894f:	8b 95 88 fd ff ff    	mov    -0x278(%rbp),%edx
   18955:	83 ea 01             	sub    $0x1,%edx
   18958:	01 d0                	add    %edx,%eax
   1895a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18960:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18967:	10 
   18968:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1896e:	83 c0 01             	add    $0x1,%eax
   18971:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18977:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   1897d:	83 f8 07             	cmp    $0x7,%eax
   18980:	7e 2f                	jle    189b1 <__vfprintf+0x3ed1>
   18982:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18989:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18990:	48 89 d6             	mov    %rdx,%rsi
   18993:	48 89 c7             	mov    %rax,%rdi
   18996:	e8 14 bf ff ff       	callq  148af <__sprint>
   1899b:	85 c0                	test   %eax,%eax
   1899d:	0f 85 c2 04 00 00    	jne    18e65 <__vfprintf+0x4385>
   189a3:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   189aa:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   189b1:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   189b7:	2b 85 88 fd ff ff    	sub    -0x278(%rbp),%eax
   189bd:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   189c3:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   189ca:	0f 8e ae 01 00 00    	jle    18b7e <__vfprintf+0x409e>
   189d0:	e9 87 00 00 00       	jmpq   18a5c <__vfprintf+0x3f7c>
   189d5:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   189dc:	48 8d 15 ed e7 02 00 	lea    0x2e7ed(%rip),%rdx        # 471d0 <zeroes.3165>
   189e3:	48 89 10             	mov    %rdx,(%rax)
   189e6:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   189ed:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   189f4:	00 
   189f5:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   189fb:	83 c0 10             	add    $0x10,%eax
   189fe:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18a04:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18a0b:	10 
   18a0c:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18a12:	83 c0 01             	add    $0x1,%eax
   18a15:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18a1b:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18a21:	83 f8 07             	cmp    $0x7,%eax
   18a24:	7e 2f                	jle    18a55 <__vfprintf+0x3f75>
   18a26:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18a2d:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18a34:	48 89 d6             	mov    %rdx,%rsi
   18a37:	48 89 c7             	mov    %rax,%rdi
   18a3a:	e8 70 be ff ff       	callq  148af <__sprint>
   18a3f:	85 c0                	test   %eax,%eax
   18a41:	0f 85 21 04 00 00    	jne    18e68 <__vfprintf+0x4388>
   18a47:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18a4e:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18a55:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   18a5c:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   18a63:	0f 8f 6c ff ff ff    	jg     189d5 <__vfprintf+0x3ef5>
   18a69:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18a70:	48 8d 15 59 e7 02 00 	lea    0x2e759(%rip),%rdx        # 471d0 <zeroes.3165>
   18a77:	48 89 10             	mov    %rdx,(%rax)
   18a7a:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18a80:	48 63 d0             	movslq %eax,%rdx
   18a83:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18a8a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18a8e:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   18a94:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18a9a:	01 d0                	add    %edx,%eax
   18a9c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18aa2:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18aa9:	10 
   18aaa:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18ab0:	83 c0 01             	add    $0x1,%eax
   18ab3:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18ab9:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18abf:	83 f8 07             	cmp    $0x7,%eax
   18ac2:	0f 8e b6 00 00 00    	jle    18b7e <__vfprintf+0x409e>
   18ac8:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18acf:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18ad6:	48 89 d6             	mov    %rdx,%rsi
   18ad9:	48 89 c7             	mov    %rax,%rdi
   18adc:	e8 ce bd ff ff       	callq  148af <__sprint>
   18ae1:	85 c0                	test   %eax,%eax
   18ae3:	0f 85 82 03 00 00    	jne    18e6b <__vfprintf+0x438b>
   18ae9:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18af0:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18af7:	e9 82 00 00 00       	jmpq   18b7e <__vfprintf+0x409e>
   18afc:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18b03:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   18b0a:	48 89 10             	mov    %rdx,(%rax)
   18b0d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18b14:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   18b1b:	00 
   18b1c:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   18b22:	83 c0 01             	add    $0x1,%eax
   18b25:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18b2b:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18b32:	10 
   18b33:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18b39:	83 c0 01             	add    $0x1,%eax
   18b3c:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18b42:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18b48:	83 f8 07             	cmp    $0x7,%eax
   18b4b:	7e 32                	jle    18b7f <__vfprintf+0x409f>
   18b4d:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18b54:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18b5b:	48 89 d6             	mov    %rdx,%rsi
   18b5e:	48 89 c7             	mov    %rax,%rdi
   18b61:	e8 49 bd ff ff       	callq  148af <__sprint>
   18b66:	85 c0                	test   %eax,%eax
   18b68:	0f 85 00 03 00 00    	jne    18e6e <__vfprintf+0x438e>
   18b6e:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18b75:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18b7c:	eb 01                	jmp    18b7f <__vfprintf+0x409f>
   18b7e:	90                   	nop
   18b7f:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18b86:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   18b8a:	48 89 10             	mov    %rdx,(%rax)
   18b8d:	8b 85 80 fd ff ff    	mov    -0x280(%rbp),%eax
   18b93:	48 63 d0             	movslq %eax,%rdx
   18b96:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18b9d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18ba1:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   18ba7:	8b 85 80 fd ff ff    	mov    -0x280(%rbp),%eax
   18bad:	01 d0                	add    %edx,%eax
   18baf:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18bb5:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18bbc:	10 
   18bbd:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18bc3:	83 c0 01             	add    $0x1,%eax
   18bc6:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18bcc:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18bd2:	83 f8 07             	cmp    $0x7,%eax
   18bd5:	7e 2f                	jle    18c06 <__vfprintf+0x4126>
   18bd7:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18bde:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18be5:	48 89 d6             	mov    %rdx,%rsi
   18be8:	48 89 c7             	mov    %rax,%rdi
   18beb:	e8 bf bc ff ff       	callq  148af <__sprint>
   18bf0:	85 c0                	test   %eax,%eax
   18bf2:	0f 85 79 02 00 00    	jne    18e71 <__vfprintf+0x4391>
   18bf8:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18bff:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18c06:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   18c0c:	83 e0 04             	and    $0x4,%eax
   18c0f:	85 c0                	test   %eax,%eax
   18c11:	0f 84 42 01 00 00    	je     18d59 <__vfprintf+0x4279>
   18c17:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   18c1d:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   18c23:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   18c29:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   18c30:	0f 8e 23 01 00 00    	jle    18d59 <__vfprintf+0x4279>
   18c36:	e9 87 00 00 00       	jmpq   18cc2 <__vfprintf+0x41e2>
   18c3b:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18c42:	48 8d 15 77 e5 02 00 	lea    0x2e577(%rip),%rdx        # 471c0 <blanks.3164>
   18c49:	48 89 10             	mov    %rdx,(%rax)
   18c4c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18c53:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   18c5a:	00 
   18c5b:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   18c61:	83 c0 10             	add    $0x10,%eax
   18c64:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18c6a:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18c71:	10 
   18c72:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18c78:	83 c0 01             	add    $0x1,%eax
   18c7b:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18c81:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18c87:	83 f8 07             	cmp    $0x7,%eax
   18c8a:	7e 2f                	jle    18cbb <__vfprintf+0x41db>
   18c8c:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18c93:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18c9a:	48 89 d6             	mov    %rdx,%rsi
   18c9d:	48 89 c7             	mov    %rax,%rdi
   18ca0:	e8 0a bc ff ff       	callq  148af <__sprint>
   18ca5:	85 c0                	test   %eax,%eax
   18ca7:	0f 85 c7 01 00 00    	jne    18e74 <__vfprintf+0x4394>
   18cad:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18cb4:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18cbb:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   18cc2:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   18cc9:	0f 8f 6c ff ff ff    	jg     18c3b <__vfprintf+0x415b>
   18ccf:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18cd6:	48 8d 15 e3 e4 02 00 	lea    0x2e4e3(%rip),%rdx        # 471c0 <blanks.3164>
   18cdd:	48 89 10             	mov    %rdx,(%rax)
   18ce0:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18ce6:	48 63 d0             	movslq %eax,%rdx
   18ce9:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   18cf0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18cf4:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   18cfa:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   18d00:	01 d0                	add    %edx,%eax
   18d02:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   18d08:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   18d0f:	10 
   18d10:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18d16:	83 c0 01             	add    $0x1,%eax
   18d19:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   18d1f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   18d25:	83 f8 07             	cmp    $0x7,%eax
   18d28:	7e 2f                	jle    18d59 <__vfprintf+0x4279>
   18d2a:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18d31:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18d38:	48 89 d6             	mov    %rdx,%rsi
   18d3b:	48 89 c7             	mov    %rax,%rdi
   18d3e:	e8 6c bb ff ff       	callq  148af <__sprint>
   18d43:	85 c0                	test   %eax,%eax
   18d45:	0f 85 2c 01 00 00    	jne    18e77 <__vfprintf+0x4397>
   18d4b:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18d52:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18d59:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   18d5f:	3b 85 94 fd ff ff    	cmp    -0x26c(%rbp),%eax
   18d65:	7d 0c                	jge    18d73 <__vfprintf+0x4293>
   18d67:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
   18d6d:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   18d73:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   18d78:	2b 85 74 fd ff ff    	sub    -0x28c(%rbp),%eax
   18d7e:	39 85 78 fd ff ff    	cmp    %eax,-0x288(%rbp)
   18d84:	0f 8f 34 01 00 00    	jg     18ebe <__vfprintf+0x43de>
   18d8a:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   18d90:	01 85 74 fd ff ff    	add    %eax,-0x28c(%rbp)
   18d96:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   18d9c:	85 c0                	test   %eax,%eax
   18d9e:	74 21                	je     18dc1 <__vfprintf+0x42e1>
   18da0:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18da7:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18dae:	48 89 d6             	mov    %rdx,%rsi
   18db1:	48 89 c7             	mov    %rax,%rdi
   18db4:	e8 f6 ba ff ff       	callq  148af <__sprint>
   18db9:	85 c0                	test   %eax,%eax
   18dbb:	0f 85 b9 00 00 00    	jne    18e7a <__vfprintf+0x439a>
   18dc1:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   18dc8:	00 00 00 
   18dcb:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18dd2:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18dd9:	e9 7b be ff ff       	jmpq   14c59 <__vfprintf+0x179>
   18dde:	90                   	nop
   18ddf:	eb 01                	jmp    18de2 <__vfprintf+0x4302>
   18de1:	90                   	nop
   18de2:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   18de8:	85 c0                	test   %eax,%eax
   18dea:	74 1d                	je     18e09 <__vfprintf+0x4329>
   18dec:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   18df3:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18dfa:	48 89 d6             	mov    %rdx,%rsi
   18dfd:	48 89 c7             	mov    %rax,%rdi
   18e00:	e8 aa ba ff ff       	callq  148af <__sprint>
   18e05:	85 c0                	test   %eax,%eax
   18e07:	75 74                	jne    18e7d <__vfprintf+0x439d>
   18e09:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   18e10:	00 00 00 
   18e13:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   18e1a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   18e21:	eb 5b                	jmp    18e7e <__vfprintf+0x439e>
   18e23:	90                   	nop
   18e24:	eb 58                	jmp    18e7e <__vfprintf+0x439e>
   18e26:	90                   	nop
   18e27:	eb 55                	jmp    18e7e <__vfprintf+0x439e>
   18e29:	90                   	nop
   18e2a:	eb 52                	jmp    18e7e <__vfprintf+0x439e>
   18e2c:	90                   	nop
   18e2d:	eb 4f                	jmp    18e7e <__vfprintf+0x439e>
   18e2f:	90                   	nop
   18e30:	eb 4c                	jmp    18e7e <__vfprintf+0x439e>
   18e32:	90                   	nop
   18e33:	eb 49                	jmp    18e7e <__vfprintf+0x439e>
   18e35:	90                   	nop
   18e36:	eb 46                	jmp    18e7e <__vfprintf+0x439e>
   18e38:	90                   	nop
   18e39:	eb 43                	jmp    18e7e <__vfprintf+0x439e>
   18e3b:	90                   	nop
   18e3c:	eb 40                	jmp    18e7e <__vfprintf+0x439e>
   18e3e:	90                   	nop
   18e3f:	eb 3d                	jmp    18e7e <__vfprintf+0x439e>
   18e41:	90                   	nop
   18e42:	eb 3a                	jmp    18e7e <__vfprintf+0x439e>
   18e44:	90                   	nop
   18e45:	eb 37                	jmp    18e7e <__vfprintf+0x439e>
   18e47:	90                   	nop
   18e48:	eb 34                	jmp    18e7e <__vfprintf+0x439e>
   18e4a:	90                   	nop
   18e4b:	eb 31                	jmp    18e7e <__vfprintf+0x439e>
   18e4d:	90                   	nop
   18e4e:	eb 2e                	jmp    18e7e <__vfprintf+0x439e>
   18e50:	90                   	nop
   18e51:	eb 2b                	jmp    18e7e <__vfprintf+0x439e>
   18e53:	90                   	nop
   18e54:	eb 28                	jmp    18e7e <__vfprintf+0x439e>
   18e56:	90                   	nop
   18e57:	eb 25                	jmp    18e7e <__vfprintf+0x439e>
   18e59:	90                   	nop
   18e5a:	eb 22                	jmp    18e7e <__vfprintf+0x439e>
   18e5c:	90                   	nop
   18e5d:	eb 1f                	jmp    18e7e <__vfprintf+0x439e>
   18e5f:	90                   	nop
   18e60:	eb 1c                	jmp    18e7e <__vfprintf+0x439e>
   18e62:	90                   	nop
   18e63:	eb 19                	jmp    18e7e <__vfprintf+0x439e>
   18e65:	90                   	nop
   18e66:	eb 16                	jmp    18e7e <__vfprintf+0x439e>
   18e68:	90                   	nop
   18e69:	eb 13                	jmp    18e7e <__vfprintf+0x439e>
   18e6b:	90                   	nop
   18e6c:	eb 10                	jmp    18e7e <__vfprintf+0x439e>
   18e6e:	90                   	nop
   18e6f:	eb 0d                	jmp    18e7e <__vfprintf+0x439e>
   18e71:	90                   	nop
   18e72:	eb 0a                	jmp    18e7e <__vfprintf+0x439e>
   18e74:	90                   	nop
   18e75:	eb 07                	jmp    18e7e <__vfprintf+0x439e>
   18e77:	90                   	nop
   18e78:	eb 04                	jmp    18e7e <__vfprintf+0x439e>
   18e7a:	90                   	nop
   18e7b:	eb 01                	jmp    18e7e <__vfprintf+0x439e>
   18e7d:	90                   	nop
   18e7e:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   18e85:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   18e89:	98                   	cwtl   
   18e8a:	83 e0 40             	and    $0x40,%eax
   18e8d:	85 c0                	test   %eax,%eax
   18e8f:	74 45                	je     18ed6 <__vfprintf+0x43f6>
   18e91:	c7 85 74 fd ff ff ff 	movl   $0xffffffff,-0x28c(%rbp)
   18e98:	ff ff ff 
   18e9b:	eb 39                	jmp    18ed6 <__vfprintf+0x43f6>
   18e9d:	90                   	nop
   18e9e:	eb 1f                	jmp    18ebf <__vfprintf+0x43df>
   18ea0:	90                   	nop
   18ea1:	eb 1c                	jmp    18ebf <__vfprintf+0x43df>
   18ea3:	90                   	nop
   18ea4:	eb 19                	jmp    18ebf <__vfprintf+0x43df>
   18ea6:	90                   	nop
   18ea7:	eb 16                	jmp    18ebf <__vfprintf+0x43df>
   18ea9:	90                   	nop
   18eaa:	eb 13                	jmp    18ebf <__vfprintf+0x43df>
   18eac:	90                   	nop
   18ead:	eb 10                	jmp    18ebf <__vfprintf+0x43df>
   18eaf:	90                   	nop
   18eb0:	eb 0d                	jmp    18ebf <__vfprintf+0x43df>
   18eb2:	90                   	nop
   18eb3:	eb 0a                	jmp    18ebf <__vfprintf+0x43df>
   18eb5:	90                   	nop
   18eb6:	eb 07                	jmp    18ebf <__vfprintf+0x43df>
   18eb8:	90                   	nop
   18eb9:	eb 04                	jmp    18ebf <__vfprintf+0x43df>
   18ebb:	90                   	nop
   18ebc:	eb 01                	jmp    18ebf <__vfprintf+0x43df>
   18ebe:	90                   	nop
   18ebf:	e8 e0 b9 ff ff       	callq  148a4 <__errno>
   18ec4:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   18eca:	c7 85 74 fd ff ff ff 	movl   $0xffffffff,-0x28c(%rbp)
   18ed1:	ff ff ff 
   18ed4:	eb 01                	jmp    18ed7 <__vfprintf+0x43f7>
   18ed6:	90                   	nop
   18ed7:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   18ede:	00 
   18edf:	74 0f                	je     18ef0 <__vfprintf+0x4410>
   18ee1:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   18ee8:	48 89 c7             	mov    %rax,%rdi
   18eeb:	e8 4f 80 ff ff       	callq  10f3f <dlfree>
   18ef0:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   18ef7:	00 
   18ef8:	74 0f                	je     18f09 <__vfprintf+0x4429>
   18efa:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   18f01:	48 89 c7             	mov    %rax,%rdi
   18f04:	e8 8e 20 00 00       	callq  1af97 <__freedtoa>
   18f09:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   18f10:	48 85 c0             	test   %rax,%rax
   18f13:	74 2d                	je     18f42 <__vfprintf+0x4462>
   18f15:	48 8b 95 b0 fd ff ff 	mov    -0x250(%rbp),%rdx
   18f1c:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   18f23:	48 39 c2             	cmp    %rax,%rdx
   18f26:	74 1a                	je     18f42 <__vfprintf+0x4462>
   18f28:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   18f2f:	48 89 c7             	mov    %rax,%rdi
   18f32:	e8 08 80 ff ff       	callq  10f3f <dlfree>
   18f37:	48 c7 85 b0 fd ff ff 	movq   $0x0,-0x250(%rbp)
   18f3e:	00 00 00 00 
   18f42:	8b 85 74 fd ff ff    	mov    -0x28c(%rbp),%eax
   18f48:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   18f4c:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   18f53:	00 00 
   18f55:	74 05                	je     18f5c <__vfprintf+0x447c>
   18f57:	e8 30 25 ff ff       	callq  b48c <__stack_chk_fail>
   18f5c:	c9                   	leaveq 
   18f5d:	c3                   	retq   

0000000000018f5e <__find_arguments>:
   18f5e:	55                   	push   %rbp
   18f5f:	48 89 e5             	mov    %rsp,%rbp
   18f62:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   18f66:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   18f6a:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   18f6e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   18f72:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   18f76:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18f7d:	00 00 
   18f7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18f83:	31 c0                	xor    %eax,%eax
   18f85:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   18f8c:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   18f93:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   18f97:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   18f9b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   18f9f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   18fa3:	c7 45 a0 08 00 00 00 	movl   $0x8,-0x60(%rbp)
   18faa:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   18fb1:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
   18fb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18fbc:	ba 08 00 00 00       	mov    $0x8,%edx
   18fc1:	be 00 00 00 00       	mov    $0x0,%esi
   18fc6:	48 89 c7             	mov    %rax,%rdi
   18fc9:	e8 67 a7 ff ff       	callq  13735 <memset>
   18fce:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   18fd2:	ba 08 00 00 00       	mov    $0x8,%edx
   18fd7:	be 00 00 00 00       	mov    $0x0,%esi
   18fdc:	48 89 c7             	mov    %rax,%rdi
   18fdf:	e8 51 a7 ff ff       	callq  13735 <memset>
   18fe4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18fe8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18fec:	eb 18                	jmp    19006 <__find_arguments+0xa8>
   18fee:	8b 45 ac             	mov    -0x54(%rbp),%eax
   18ff1:	48 98                	cltq   
   18ff3:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   18ff7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   18ffa:	83 f8 25             	cmp    $0x25,%eax
   18ffd:	75 07                	jne    19006 <__find_arguments+0xa8>
   18fff:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   19004:	eb 25                	jmp    1902b <__find_arguments+0xcd>
   19006:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1900a:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1900e:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   19012:	48 89 d1             	mov    %rdx,%rcx
   19015:	ba 01 00 00 00       	mov    $0x1,%edx
   1901a:	48 89 c7             	mov    %rax,%rdi
   1901d:	e8 2b 5b 00 00       	callq  1eb4d <mbrtowc>
   19022:	89 45 ac             	mov    %eax,-0x54(%rbp)
   19025:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   19029:	7f c3                	jg     18fee <__find_arguments+0x90>
   1902b:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   1902f:	0f 8e ad 11 00 00    	jle    1a1e2 <__find_arguments+0x1284>
   19035:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   1903a:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   19041:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19045:	48 8d 50 01          	lea    0x1(%rax),%rdx
   19049:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1904d:	0f b6 00             	movzbl (%rax),%eax
   19050:	0f be c0             	movsbl %al,%eax
   19053:	89 45 a8             	mov    %eax,-0x58(%rbp)
   19056:	8b 45 a8             	mov    -0x58(%rbp),%eax
   19059:	83 e8 20             	sub    $0x20,%eax
   1905c:	83 f8 5a             	cmp    $0x5a,%eax
   1905f:	0f 87 45 11 00 00    	ja     1a1aa <__find_arguments+0x124c>
   19065:	89 c0                	mov    %eax,%eax
   19067:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1906e:	00 
   1906f:	48 8d 05 da 39 02 00 	lea    0x239da(%rip),%rax        # 3ca50 <__func__.2398+0x1a7>
   19076:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   19079:	48 63 d0             	movslq %eax,%rdx
   1907c:	48 8d 05 cd 39 02 00 	lea    0x239cd(%rip),%rax        # 3ca50 <__func__.2398+0x1a7>
   19083:	48 01 d0             	add    %rdx,%rax
   19086:	ff e0                	jmpq   *%rax
   19088:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   1908f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19093:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19097:	eb 50                	jmp    190e9 <__find_arguments+0x18b>
   19099:	81 7d b0 cc cc cc 0c 	cmpl   $0xccccccc,-0x50(%rbp)
   190a0:	0f 8f fb 1a 00 00    	jg     1aba1 <__find_arguments+0x1c43>
   190a6:	8b 55 b0             	mov    -0x50(%rbp),%edx
   190a9:	89 d0                	mov    %edx,%eax
   190ab:	c1 e0 02             	shl    $0x2,%eax
   190ae:	01 d0                	add    %edx,%eax
   190b0:	01 c0                	add    %eax,%eax
   190b2:	89 45 b0             	mov    %eax,-0x50(%rbp)
   190b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190b9:	0f b6 00             	movzbl (%rax),%eax
   190bc:	0f be c0             	movsbl %al,%eax
   190bf:	83 e8 30             	sub    $0x30,%eax
   190c2:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   190c7:	29 c2                	sub    %eax,%edx
   190c9:	89 d0                	mov    %edx,%eax
   190cb:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   190ce:	0f 8f d0 1a 00 00    	jg     1aba4 <__find_arguments+0x1c46>
   190d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190d8:	0f b6 00             	movzbl (%rax),%eax
   190db:	0f be c0             	movsbl %al,%eax
   190de:	83 e8 30             	sub    $0x30,%eax
   190e1:	01 45 b0             	add    %eax,-0x50(%rbp)
   190e4:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   190e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190ed:	0f b6 00             	movzbl (%rax),%eax
   190f0:	0f be c0             	movsbl %al,%eax
   190f3:	83 e8 30             	sub    $0x30,%eax
   190f6:	83 f8 09             	cmp    $0x9,%eax
   190f9:	76 9e                	jbe    19099 <__find_arguments+0x13b>
   190fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190ff:	0f b6 00             	movzbl (%rax),%eax
   19102:	3c 24                	cmp    $0x24,%al
   19104:	75 75                	jne    1917b <__find_arguments+0x21d>
   19106:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19109:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1910c:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1910f:	89 45 bc             	mov    %eax,-0x44(%rbp)
   19112:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19115:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19118:	7c 16                	jl     19130 <__find_arguments+0x1d2>
   1911a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1911e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19122:	48 89 d6             	mov    %rdx,%rsi
   19125:	48 89 c7             	mov    %rax,%rdi
   19128:	e8 03 1b 00 00       	callq  1ac30 <__grow_type_table>
   1912d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19130:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19133:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19136:	7e 06                	jle    1913e <__find_arguments+0x1e0>
   19138:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1913b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1913e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19142:	74 15                	je     19159 <__find_arguments+0x1fb>
   19144:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19148:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1914b:	8d 50 01             	lea    0x1(%rax),%edx
   1914e:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19151:	48 98                	cltq   
   19153:	48 01 c8             	add    %rcx,%rax
   19156:	c6 00 04             	movb   $0x4,(%rax)
   19159:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1915d:	0f 84 44 1a 00 00    	je     1aba7 <__find_arguments+0x1c49>
   19163:	8b 45 cc             	mov    -0x34(%rbp),%eax
   19166:	89 45 bc             	mov    %eax,-0x44(%rbp)
   19169:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   1916e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19172:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   19176:	e9 c6 fe ff ff       	jmpq   19041 <__find_arguments+0xe3>
   1917b:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1917e:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19181:	7c 16                	jl     19199 <__find_arguments+0x23b>
   19183:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19187:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1918b:	48 89 d6             	mov    %rdx,%rsi
   1918e:	48 89 c7             	mov    %rax,%rdi
   19191:	e8 9a 1a 00 00       	callq  1ac30 <__grow_type_table>
   19196:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19199:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1919c:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1919f:	7e 06                	jle    191a7 <__find_arguments+0x249>
   191a1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   191a4:	89 45 b8             	mov    %eax,-0x48(%rbp)
   191a7:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   191ab:	74 15                	je     191c2 <__find_arguments+0x264>
   191ad:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   191b1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   191b4:	8d 50 01             	lea    0x1(%rax),%edx
   191b7:	89 55 bc             	mov    %edx,-0x44(%rbp)
   191ba:	48 98                	cltq   
   191bc:	48 01 c8             	add    %rcx,%rax
   191bf:	c6 00 04             	movb   $0x4,(%rax)
   191c2:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   191c6:	0f 84 de 19 00 00    	je     1abaa <__find_arguments+0x1c4c>
   191cc:	e9 70 fe ff ff       	jmpq   19041 <__find_arguments+0xe3>
   191d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   191d5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   191d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   191dd:	0f b6 00             	movzbl (%rax),%eax
   191e0:	0f be c0             	movsbl %al,%eax
   191e3:	89 45 a8             	mov    %eax,-0x58(%rbp)
   191e6:	83 7d a8 2a          	cmpl   $0x2a,-0x58(%rbp)
   191ea:	0f 85 5e 01 00 00    	jne    1934e <__find_arguments+0x3f0>
   191f0:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   191f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   191fb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   191ff:	eb 50                	jmp    19251 <__find_arguments+0x2f3>
   19201:	81 7d b0 cc cc cc 0c 	cmpl   $0xccccccc,-0x50(%rbp)
   19208:	0f 8f 9f 19 00 00    	jg     1abad <__find_arguments+0x1c4f>
   1920e:	8b 55 b0             	mov    -0x50(%rbp),%edx
   19211:	89 d0                	mov    %edx,%eax
   19213:	c1 e0 02             	shl    $0x2,%eax
   19216:	01 d0                	add    %edx,%eax
   19218:	01 c0                	add    %eax,%eax
   1921a:	89 45 b0             	mov    %eax,-0x50(%rbp)
   1921d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19221:	0f b6 00             	movzbl (%rax),%eax
   19224:	0f be c0             	movsbl %al,%eax
   19227:	83 e8 30             	sub    $0x30,%eax
   1922a:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   1922f:	29 c2                	sub    %eax,%edx
   19231:	89 d0                	mov    %edx,%eax
   19233:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   19236:	0f 8f 74 19 00 00    	jg     1abb0 <__find_arguments+0x1c52>
   1923c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19240:	0f b6 00             	movzbl (%rax),%eax
   19243:	0f be c0             	movsbl %al,%eax
   19246:	83 e8 30             	sub    $0x30,%eax
   19249:	01 45 b0             	add    %eax,-0x50(%rbp)
   1924c:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   19251:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19255:	0f b6 00             	movzbl (%rax),%eax
   19258:	0f be c0             	movsbl %al,%eax
   1925b:	83 e8 30             	sub    $0x30,%eax
   1925e:	83 f8 09             	cmp    $0x9,%eax
   19261:	76 9e                	jbe    19201 <__find_arguments+0x2a3>
   19263:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19267:	0f b6 00             	movzbl (%rax),%eax
   1926a:	3c 24                	cmp    $0x24,%al
   1926c:	75 75                	jne    192e3 <__find_arguments+0x385>
   1926e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19271:	89 45 c8             	mov    %eax,-0x38(%rbp)
   19274:	8b 45 b0             	mov    -0x50(%rbp),%eax
   19277:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1927a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1927d:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19280:	7c 16                	jl     19298 <__find_arguments+0x33a>
   19282:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19286:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1928a:	48 89 d6             	mov    %rdx,%rsi
   1928d:	48 89 c7             	mov    %rax,%rdi
   19290:	e8 9b 19 00 00       	callq  1ac30 <__grow_type_table>
   19295:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19298:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1929b:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1929e:	7e 06                	jle    192a6 <__find_arguments+0x348>
   192a0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   192a3:	89 45 b8             	mov    %eax,-0x48(%rbp)
   192a6:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   192aa:	74 15                	je     192c1 <__find_arguments+0x363>
   192ac:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   192b0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   192b3:	8d 50 01             	lea    0x1(%rax),%edx
   192b6:	89 55 bc             	mov    %edx,-0x44(%rbp)
   192b9:	48 98                	cltq   
   192bb:	48 01 c8             	add    %rcx,%rax
   192be:	c6 00 04             	movb   $0x4,(%rax)
   192c1:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   192c5:	0f 84 e8 18 00 00    	je     1abb3 <__find_arguments+0x1c55>
   192cb:	8b 45 c8             	mov    -0x38(%rbp),%eax
   192ce:	89 45 bc             	mov    %eax,-0x44(%rbp)
   192d1:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   192d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   192da:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   192de:	e9 5e fd ff ff       	jmpq   19041 <__find_arguments+0xe3>
   192e3:	8b 45 a0             	mov    -0x60(%rbp),%eax
   192e6:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   192e9:	7c 16                	jl     19301 <__find_arguments+0x3a3>
   192eb:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   192ef:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   192f3:	48 89 d6             	mov    %rdx,%rsi
   192f6:	48 89 c7             	mov    %rax,%rdi
   192f9:	e8 32 19 00 00       	callq  1ac30 <__grow_type_table>
   192fe:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19301:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19304:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19307:	7e 06                	jle    1930f <__find_arguments+0x3b1>
   19309:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1930c:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1930f:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19313:	74 15                	je     1932a <__find_arguments+0x3cc>
   19315:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19319:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1931c:	8d 50 01             	lea    0x1(%rax),%edx
   1931f:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19322:	48 98                	cltq   
   19324:	48 01 c8             	add    %rcx,%rax
   19327:	c6 00 04             	movb   $0x4,(%rax)
   1932a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1932e:	0f 84 82 18 00 00    	je     1abb6 <__find_arguments+0x1c58>
   19334:	e9 08 fd ff ff       	jmpq   19041 <__find_arguments+0xe3>
   19339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1933d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   19341:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19345:	0f b6 00             	movzbl (%rax),%eax
   19348:	0f be c0             	movsbl %al,%eax
   1934b:	89 45 a8             	mov    %eax,-0x58(%rbp)
   1934e:	8b 45 a8             	mov    -0x58(%rbp),%eax
   19351:	83 e8 30             	sub    $0x30,%eax
   19354:	83 f8 09             	cmp    $0x9,%eax
   19357:	76 e0                	jbe    19339 <__find_arguments+0x3db>
   19359:	e9 f8 fc ff ff       	jmpq   19056 <__find_arguments+0xf8>
   1935e:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
   19365:	81 7d ac cc cc cc 0c 	cmpl   $0xccccccc,-0x54(%rbp)
   1936c:	0f 8f 47 18 00 00    	jg     1abb9 <__find_arguments+0x1c5b>
   19372:	8b 55 ac             	mov    -0x54(%rbp),%edx
   19375:	89 d0                	mov    %edx,%eax
   19377:	c1 e0 02             	shl    $0x2,%eax
   1937a:	01 d0                	add    %edx,%eax
   1937c:	01 c0                	add    %eax,%eax
   1937e:	89 45 ac             	mov    %eax,-0x54(%rbp)
   19381:	8b 45 a8             	mov    -0x58(%rbp),%eax
   19384:	83 e8 30             	sub    $0x30,%eax
   19387:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
   1938c:	29 c2                	sub    %eax,%edx
   1938e:	89 d0                	mov    %edx,%eax
   19390:	39 45 ac             	cmp    %eax,-0x54(%rbp)
   19393:	0f 8f 23 18 00 00    	jg     1abbc <__find_arguments+0x1c5e>
   19399:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1939c:	83 e8 30             	sub    $0x30,%eax
   1939f:	01 45 ac             	add    %eax,-0x54(%rbp)
   193a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   193a6:	48 8d 50 01          	lea    0x1(%rax),%rdx
   193aa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   193ae:	0f b6 00             	movzbl (%rax),%eax
   193b1:	0f be c0             	movsbl %al,%eax
   193b4:	89 45 a8             	mov    %eax,-0x58(%rbp)
   193b7:	8b 45 a8             	mov    -0x58(%rbp),%eax
   193ba:	83 e8 30             	sub    $0x30,%eax
   193bd:	83 f8 09             	cmp    $0x9,%eax
   193c0:	76 a3                	jbe    19365 <__find_arguments+0x407>
   193c2:	83 7d a8 24          	cmpl   $0x24,-0x58(%rbp)
   193c6:	0f 85 8a fc ff ff    	jne    19056 <__find_arguments+0xf8>
   193cc:	8b 45 ac             	mov    -0x54(%rbp),%eax
   193cf:	89 45 bc             	mov    %eax,-0x44(%rbp)
   193d2:	e9 6a fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   193d7:	83 4d b4 08          	orl    $0x8,-0x4c(%rbp)
   193db:	e9 61 fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   193e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   193e4:	0f b6 00             	movzbl (%rax),%eax
   193e7:	3c 68                	cmp    $0x68,%al
   193e9:	75 11                	jne    193fc <__find_arguments+0x49e>
   193eb:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   193f0:	81 4d b4 00 08 00 00 	orl    $0x800,-0x4c(%rbp)
   193f7:	e9 45 fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   193fc:	83 4d b4 40          	orl    $0x40,-0x4c(%rbp)
   19400:	e9 3c fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   19405:	81 4d b4 00 10 00 00 	orl    $0x1000,-0x4c(%rbp)
   1940c:	e9 30 fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   19411:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19415:	0f b6 00             	movzbl (%rax),%eax
   19418:	3c 6c                	cmp    $0x6c,%al
   1941a:	75 0e                	jne    1942a <__find_arguments+0x4cc>
   1941c:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   19421:	83 4d b4 20          	orl    $0x20,-0x4c(%rbp)
   19425:	e9 17 fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   1942a:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   1942e:	e9 0e fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   19433:	83 4d b4 20          	orl    $0x20,-0x4c(%rbp)
   19437:	e9 05 fc ff ff       	jmpq   19041 <__find_arguments+0xe3>
   1943c:	81 4d b4 00 02 00 00 	orl    $0x200,-0x4c(%rbp)
   19443:	e9 f9 fb ff ff       	jmpq   19041 <__find_arguments+0xe3>
   19448:	81 4d b4 00 04 00 00 	orl    $0x400,-0x4c(%rbp)
   1944f:	e9 ed fb ff ff       	jmpq   19041 <__find_arguments+0xe3>
   19454:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19457:	83 e0 10             	and    $0x10,%eax
   1945a:	85 c0                	test   %eax,%eax
   1945c:	74 47                	je     194a5 <__find_arguments+0x547>
   1945e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19461:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19464:	7c 16                	jl     1947c <__find_arguments+0x51e>
   19466:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1946a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1946e:	48 89 d6             	mov    %rdx,%rsi
   19471:	48 89 c7             	mov    %rax,%rdi
   19474:	e8 b7 17 00 00       	callq  1ac30 <__grow_type_table>
   19479:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1947c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1947f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19482:	7e 06                	jle    1948a <__find_arguments+0x52c>
   19484:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19487:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1948a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1948e:	74 15                	je     194a5 <__find_arguments+0x547>
   19490:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19494:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19497:	8d 50 01             	lea    0x1(%rax),%edx
   1949a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1949d:	48 98                	cltq   
   1949f:	48 01 c8             	add    %rcx,%rax
   194a2:	c6 00 1b             	movb   $0x1b,(%rax)
   194a5:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   194a9:	0f 84 10 17 00 00    	je     1abbf <__find_arguments+0x1c61>
   194af:	8b 45 a0             	mov    -0x60(%rbp),%eax
   194b2:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   194b5:	7c 16                	jl     194cd <__find_arguments+0x56f>
   194b7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   194bb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   194bf:	48 89 d6             	mov    %rdx,%rsi
   194c2:	48 89 c7             	mov    %rax,%rdi
   194c5:	e8 66 17 00 00       	callq  1ac30 <__grow_type_table>
   194ca:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   194cd:	8b 45 bc             	mov    -0x44(%rbp),%eax
   194d0:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   194d3:	7e 06                	jle    194db <__find_arguments+0x57d>
   194d5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   194d8:	89 45 b8             	mov    %eax,-0x48(%rbp)
   194db:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   194df:	74 15                	je     194f6 <__find_arguments+0x598>
   194e1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   194e5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   194e8:	8d 50 01             	lea    0x1(%rax),%edx
   194eb:	89 55 bc             	mov    %edx,-0x44(%rbp)
   194ee:	48 98                	cltq   
   194f0:	48 01 c8             	add    %rcx,%rax
   194f3:	c6 00 04             	movb   $0x4,(%rax)
   194f6:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   194fa:	0f 85 b2 0c 00 00    	jne    1a1b2 <__find_arguments+0x1254>
   19500:	e9 d6 16 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   19505:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   19509:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1950c:	25 00 10 00 00       	and    $0x1000,%eax
   19511:	85 c0                	test   %eax,%eax
   19513:	74 50                	je     19565 <__find_arguments+0x607>
   19515:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19518:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1951b:	7c 16                	jl     19533 <__find_arguments+0x5d5>
   1951d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19521:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19525:	48 89 d6             	mov    %rdx,%rsi
   19528:	48 89 c7             	mov    %rax,%rdi
   1952b:	e8 00 17 00 00       	callq  1ac30 <__grow_type_table>
   19530:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19533:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19536:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19539:	7e 06                	jle    19541 <__find_arguments+0x5e3>
   1953b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1953e:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19541:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19545:	0f 84 7c 02 00 00    	je     197c7 <__find_arguments+0x869>
   1954b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1954f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19552:	8d 50 01             	lea    0x1(%rax),%edx
   19555:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19558:	48 98                	cltq   
   1955a:	48 01 c8             	add    %rcx,%rax
   1955d:	c6 00 16             	movb   $0x16,(%rax)
   19560:	e9 62 02 00 00       	jmpq   197c7 <__find_arguments+0x869>
   19565:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19568:	25 00 02 00 00       	and    $0x200,%eax
   1956d:	85 c0                	test   %eax,%eax
   1956f:	74 50                	je     195c1 <__find_arguments+0x663>
   19571:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19574:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19577:	7c 16                	jl     1958f <__find_arguments+0x631>
   19579:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1957d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19581:	48 89 d6             	mov    %rdx,%rsi
   19584:	48 89 c7             	mov    %rax,%rdi
   19587:	e8 a4 16 00 00       	callq  1ac30 <__grow_type_table>
   1958c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1958f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19592:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19595:	7e 06                	jle    1959d <__find_arguments+0x63f>
   19597:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1959a:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1959d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   195a1:	0f 84 20 02 00 00    	je     197c7 <__find_arguments+0x869>
   195a7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   195ab:	8b 45 bc             	mov    -0x44(%rbp),%eax
   195ae:	8d 50 01             	lea    0x1(%rax),%edx
   195b1:	89 55 bc             	mov    %edx,-0x44(%rbp)
   195b4:	48 98                	cltq   
   195b6:	48 01 c8             	add    %rcx,%rax
   195b9:	c6 00 11             	movb   $0x11,(%rax)
   195bc:	e9 06 02 00 00       	jmpq   197c7 <__find_arguments+0x869>
   195c1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   195c4:	25 00 04 00 00       	and    $0x400,%eax
   195c9:	85 c0                	test   %eax,%eax
   195cb:	74 50                	je     1961d <__find_arguments+0x6bf>
   195cd:	8b 45 a0             	mov    -0x60(%rbp),%eax
   195d0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   195d3:	7c 16                	jl     195eb <__find_arguments+0x68d>
   195d5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   195d9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   195dd:	48 89 d6             	mov    %rdx,%rsi
   195e0:	48 89 c7             	mov    %rax,%rdi
   195e3:	e8 48 16 00 00       	callq  1ac30 <__grow_type_table>
   195e8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   195eb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   195ee:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   195f1:	7e 06                	jle    195f9 <__find_arguments+0x69b>
   195f3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   195f6:	89 45 b8             	mov    %eax,-0x48(%rbp)
   195f9:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   195fd:	0f 84 c4 01 00 00    	je     197c7 <__find_arguments+0x869>
   19603:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19607:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1960a:	8d 50 01             	lea    0x1(%rax),%edx
   1960d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19610:	48 98                	cltq   
   19612:	48 01 c8             	add    %rcx,%rax
   19615:	c6 00 14             	movb   $0x14,(%rax)
   19618:	e9 aa 01 00 00       	jmpq   197c7 <__find_arguments+0x869>
   1961d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19620:	83 e0 20             	and    $0x20,%eax
   19623:	85 c0                	test   %eax,%eax
   19625:	74 50                	je     19677 <__find_arguments+0x719>
   19627:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1962a:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1962d:	7c 16                	jl     19645 <__find_arguments+0x6e7>
   1962f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19633:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19637:	48 89 d6             	mov    %rdx,%rsi
   1963a:	48 89 c7             	mov    %rax,%rdi
   1963d:	e8 ee 15 00 00       	callq  1ac30 <__grow_type_table>
   19642:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19645:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19648:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1964b:	7e 06                	jle    19653 <__find_arguments+0x6f5>
   1964d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19650:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19653:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19657:	0f 84 6a 01 00 00    	je     197c7 <__find_arguments+0x869>
   1965d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19661:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19664:	8d 50 01             	lea    0x1(%rax),%edx
   19667:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1966a:	48 98                	cltq   
   1966c:	48 01 c8             	add    %rcx,%rax
   1966f:	c6 00 0a             	movb   $0xa,(%rax)
   19672:	e9 50 01 00 00       	jmpq   197c7 <__find_arguments+0x869>
   19677:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1967a:	83 e0 10             	and    $0x10,%eax
   1967d:	85 c0                	test   %eax,%eax
   1967f:	74 50                	je     196d1 <__find_arguments+0x773>
   19681:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19684:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19687:	7c 16                	jl     1969f <__find_arguments+0x741>
   19689:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1968d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19691:	48 89 d6             	mov    %rdx,%rsi
   19694:	48 89 c7             	mov    %rax,%rdi
   19697:	e8 94 15 00 00       	callq  1ac30 <__grow_type_table>
   1969c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1969f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   196a2:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   196a5:	7e 06                	jle    196ad <__find_arguments+0x74f>
   196a7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   196aa:	89 45 b8             	mov    %eax,-0x48(%rbp)
   196ad:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   196b1:	0f 84 10 01 00 00    	je     197c7 <__find_arguments+0x869>
   196b7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   196bb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   196be:	8d 50 01             	lea    0x1(%rax),%edx
   196c1:	89 55 bc             	mov    %edx,-0x44(%rbp)
   196c4:	48 98                	cltq   
   196c6:	48 01 c8             	add    %rcx,%rax
   196c9:	c6 00 07             	movb   $0x7,(%rax)
   196cc:	e9 f6 00 00 00       	jmpq   197c7 <__find_arguments+0x869>
   196d1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   196d4:	83 e0 40             	and    $0x40,%eax
   196d7:	85 c0                	test   %eax,%eax
   196d9:	74 50                	je     1972b <__find_arguments+0x7cd>
   196db:	8b 45 a0             	mov    -0x60(%rbp),%eax
   196de:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   196e1:	7c 16                	jl     196f9 <__find_arguments+0x79b>
   196e3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   196e7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   196eb:	48 89 d6             	mov    %rdx,%rsi
   196ee:	48 89 c7             	mov    %rax,%rdi
   196f1:	e8 3a 15 00 00       	callq  1ac30 <__grow_type_table>
   196f6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   196f9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   196fc:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   196ff:	7e 06                	jle    19707 <__find_arguments+0x7a9>
   19701:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19704:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19707:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1970b:	0f 84 b6 00 00 00    	je     197c7 <__find_arguments+0x869>
   19711:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19715:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19718:	8d 50 01             	lea    0x1(%rax),%edx
   1971b:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1971e:	48 98                	cltq   
   19720:	48 01 c8             	add    %rcx,%rax
   19723:	c6 00 01             	movb   $0x1,(%rax)
   19726:	e9 9c 00 00 00       	jmpq   197c7 <__find_arguments+0x869>
   1972b:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1972e:	25 00 08 00 00       	and    $0x800,%eax
   19733:	85 c0                	test   %eax,%eax
   19735:	74 49                	je     19780 <__find_arguments+0x822>
   19737:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1973a:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1973d:	7c 16                	jl     19755 <__find_arguments+0x7f7>
   1973f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19743:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19747:	48 89 d6             	mov    %rdx,%rsi
   1974a:	48 89 c7             	mov    %rax,%rdi
   1974d:	e8 de 14 00 00       	callq  1ac30 <__grow_type_table>
   19752:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19755:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19758:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1975b:	7e 06                	jle    19763 <__find_arguments+0x805>
   1975d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19760:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19763:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19767:	74 5e                	je     197c7 <__find_arguments+0x869>
   19769:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1976d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19770:	8d 50 01             	lea    0x1(%rax),%edx
   19773:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19776:	48 98                	cltq   
   19778:	48 01 c8             	add    %rcx,%rax
   1977b:	c6 00 19             	movb   $0x19,(%rax)
   1977e:	eb 47                	jmp    197c7 <__find_arguments+0x869>
   19780:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19783:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19786:	7c 16                	jl     1979e <__find_arguments+0x840>
   19788:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1978c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19790:	48 89 d6             	mov    %rdx,%rsi
   19793:	48 89 c7             	mov    %rax,%rdi
   19796:	e8 95 14 00 00       	callq  1ac30 <__grow_type_table>
   1979b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1979e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   197a1:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   197a4:	7e 06                	jle    197ac <__find_arguments+0x84e>
   197a6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   197a9:	89 45 b8             	mov    %eax,-0x48(%rbp)
   197ac:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   197b0:	74 15                	je     197c7 <__find_arguments+0x869>
   197b2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   197b6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   197b9:	8d 50 01             	lea    0x1(%rax),%edx
   197bc:	89 55 bc             	mov    %edx,-0x44(%rbp)
   197bf:	48 98                	cltq   
   197c1:	48 01 c8             	add    %rcx,%rax
   197c4:	c6 00 04             	movb   $0x4,(%rax)
   197c7:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   197cb:	0f 85 e7 09 00 00    	jne    1a1b8 <__find_arguments+0x125a>
   197d1:	e9 05 14 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   197d6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   197d9:	83 e0 08             	and    $0x8,%eax
   197dc:	85 c0                	test   %eax,%eax
   197de:	74 47                	je     19827 <__find_arguments+0x8c9>
   197e0:	8b 45 a0             	mov    -0x60(%rbp),%eax
   197e3:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   197e6:	7c 16                	jl     197fe <__find_arguments+0x8a0>
   197e8:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   197ec:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   197f0:	48 89 d6             	mov    %rdx,%rsi
   197f3:	48 89 c7             	mov    %rax,%rdi
   197f6:	e8 35 14 00 00       	callq  1ac30 <__grow_type_table>
   197fb:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   197fe:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19801:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19804:	7e 06                	jle    1980c <__find_arguments+0x8ae>
   19806:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19809:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1980c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19810:	74 15                	je     19827 <__find_arguments+0x8c9>
   19812:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19816:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19819:	8d 50 01             	lea    0x1(%rax),%edx
   1981c:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1981f:	48 98                	cltq   
   19821:	48 01 c8             	add    %rcx,%rax
   19824:	c6 00 0e             	movb   $0xe,(%rax)
   19827:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1982b:	0f 84 91 13 00 00    	je     1abc2 <__find_arguments+0x1c64>
   19831:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19834:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19837:	7c 16                	jl     1984f <__find_arguments+0x8f1>
   19839:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1983d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19841:	48 89 d6             	mov    %rdx,%rsi
   19844:	48 89 c7             	mov    %rax,%rdi
   19847:	e8 e4 13 00 00       	callq  1ac30 <__grow_type_table>
   1984c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1984f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19852:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19855:	7e 06                	jle    1985d <__find_arguments+0x8ff>
   19857:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1985a:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1985d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19861:	74 15                	je     19878 <__find_arguments+0x91a>
   19863:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19867:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1986a:	8d 50 01             	lea    0x1(%rax),%edx
   1986d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19870:	48 98                	cltq   
   19872:	48 01 c8             	add    %rcx,%rax
   19875:	c6 00 0d             	movb   $0xd,(%rax)
   19878:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1987c:	0f 85 3c 09 00 00    	jne    1a1be <__find_arguments+0x1260>
   19882:	e9 54 13 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   19887:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1988a:	83 e0 20             	and    $0x20,%eax
   1988d:	85 c0                	test   %eax,%eax
   1988f:	74 47                	je     198d8 <__find_arguments+0x97a>
   19891:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19894:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19897:	7c 16                	jl     198af <__find_arguments+0x951>
   19899:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1989d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   198a1:	48 89 d6             	mov    %rdx,%rsi
   198a4:	48 89 c7             	mov    %rax,%rdi
   198a7:	e8 84 13 00 00       	callq  1ac30 <__grow_type_table>
   198ac:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   198af:	8b 45 bc             	mov    -0x44(%rbp),%eax
   198b2:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   198b5:	7e 06                	jle    198bd <__find_arguments+0x95f>
   198b7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   198ba:	89 45 b8             	mov    %eax,-0x48(%rbp)
   198bd:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   198c1:	74 15                	je     198d8 <__find_arguments+0x97a>
   198c3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   198c7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   198ca:	8d 50 01             	lea    0x1(%rax),%edx
   198cd:	89 55 bc             	mov    %edx,-0x44(%rbp)
   198d0:	48 98                	cltq   
   198d2:	48 01 c8             	add    %rcx,%rax
   198d5:	c6 00 0c             	movb   $0xc,(%rax)
   198d8:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   198dc:	0f 84 e3 12 00 00    	je     1abc5 <__find_arguments+0x1c67>
   198e2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   198e5:	83 e0 10             	and    $0x10,%eax
   198e8:	85 c0                	test   %eax,%eax
   198ea:	74 47                	je     19933 <__find_arguments+0x9d5>
   198ec:	8b 45 a0             	mov    -0x60(%rbp),%eax
   198ef:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   198f2:	7c 16                	jl     1990a <__find_arguments+0x9ac>
   198f4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   198f8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   198fc:	48 89 d6             	mov    %rdx,%rsi
   198ff:	48 89 c7             	mov    %rax,%rdi
   19902:	e8 29 13 00 00       	callq  1ac30 <__grow_type_table>
   19907:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1990a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1990d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19910:	7e 06                	jle    19918 <__find_arguments+0x9ba>
   19912:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19915:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19918:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1991c:	74 15                	je     19933 <__find_arguments+0x9d5>
   1991e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19922:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19925:	8d 50 01             	lea    0x1(%rax),%edx
   19928:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1992b:	48 98                	cltq   
   1992d:	48 01 c8             	add    %rcx,%rax
   19930:	c6 00 09             	movb   $0x9,(%rax)
   19933:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19937:	0f 84 8b 12 00 00    	je     1abc8 <__find_arguments+0x1c6a>
   1993d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19940:	83 e0 40             	and    $0x40,%eax
   19943:	85 c0                	test   %eax,%eax
   19945:	74 47                	je     1998e <__find_arguments+0xa30>
   19947:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1994a:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1994d:	7c 16                	jl     19965 <__find_arguments+0xa07>
   1994f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19953:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19957:	48 89 d6             	mov    %rdx,%rsi
   1995a:	48 89 c7             	mov    %rax,%rdi
   1995d:	e8 ce 12 00 00       	callq  1ac30 <__grow_type_table>
   19962:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19965:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19968:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1996b:	7e 06                	jle    19973 <__find_arguments+0xa15>
   1996d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19970:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19973:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19977:	74 15                	je     1998e <__find_arguments+0xa30>
   19979:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1997d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19980:	8d 50 01             	lea    0x1(%rax),%edx
   19983:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19986:	48 98                	cltq   
   19988:	48 01 c8             	add    %rcx,%rax
   1998b:	c6 00 03             	movb   $0x3,(%rax)
   1998e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19992:	0f 84 33 12 00 00    	je     1abcb <__find_arguments+0x1c6d>
   19998:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1999b:	25 00 02 00 00       	and    $0x200,%eax
   199a0:	85 c0                	test   %eax,%eax
   199a2:	74 47                	je     199eb <__find_arguments+0xa8d>
   199a4:	8b 45 a0             	mov    -0x60(%rbp),%eax
   199a7:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   199aa:	7c 16                	jl     199c2 <__find_arguments+0xa64>
   199ac:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   199b0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   199b4:	48 89 d6             	mov    %rdx,%rsi
   199b7:	48 89 c7             	mov    %rax,%rdi
   199ba:	e8 71 12 00 00       	callq  1ac30 <__grow_type_table>
   199bf:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   199c2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   199c5:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   199c8:	7e 06                	jle    199d0 <__find_arguments+0xa72>
   199ca:	8b 45 bc             	mov    -0x44(%rbp),%eax
   199cd:	89 45 b8             	mov    %eax,-0x48(%rbp)
   199d0:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   199d4:	74 15                	je     199eb <__find_arguments+0xa8d>
   199d6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   199da:	8b 45 bc             	mov    -0x44(%rbp),%eax
   199dd:	8d 50 01             	lea    0x1(%rax),%edx
   199e0:	89 55 bc             	mov    %edx,-0x44(%rbp)
   199e3:	48 98                	cltq   
   199e5:	48 01 c8             	add    %rcx,%rax
   199e8:	c6 00 12             	movb   $0x12,(%rax)
   199eb:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   199ef:	0f 84 d9 11 00 00    	je     1abce <__find_arguments+0x1c70>
   199f5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   199f8:	25 00 04 00 00       	and    $0x400,%eax
   199fd:	85 c0                	test   %eax,%eax
   199ff:	74 47                	je     19a48 <__find_arguments+0xaea>
   19a01:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19a04:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19a07:	7c 16                	jl     19a1f <__find_arguments+0xac1>
   19a09:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19a0d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19a11:	48 89 d6             	mov    %rdx,%rsi
   19a14:	48 89 c7             	mov    %rax,%rdi
   19a17:	e8 14 12 00 00       	callq  1ac30 <__grow_type_table>
   19a1c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19a1f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19a22:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19a25:	7e 06                	jle    19a2d <__find_arguments+0xacf>
   19a27:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19a2a:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19a2d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19a31:	74 15                	je     19a48 <__find_arguments+0xaea>
   19a33:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19a37:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19a3a:	8d 50 01             	lea    0x1(%rax),%edx
   19a3d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19a40:	48 98                	cltq   
   19a42:	48 01 c8             	add    %rcx,%rax
   19a45:	c6 00 15             	movb   $0x15,(%rax)
   19a48:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19a4c:	0f 84 7f 11 00 00    	je     1abd1 <__find_arguments+0x1c73>
   19a52:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19a55:	25 00 10 00 00       	and    $0x1000,%eax
   19a5a:	85 c0                	test   %eax,%eax
   19a5c:	74 47                	je     19aa5 <__find_arguments+0xb47>
   19a5e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19a61:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19a64:	7c 16                	jl     19a7c <__find_arguments+0xb1e>
   19a66:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19a6a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19a6e:	48 89 d6             	mov    %rdx,%rsi
   19a71:	48 89 c7             	mov    %rax,%rdi
   19a74:	e8 b7 11 00 00       	callq  1ac30 <__grow_type_table>
   19a79:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19a7c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19a7f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19a82:	7e 06                	jle    19a8a <__find_arguments+0xb2c>
   19a84:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19a87:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19a8a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19a8e:	74 15                	je     19aa5 <__find_arguments+0xb47>
   19a90:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19a94:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19a97:	8d 50 01             	lea    0x1(%rax),%edx
   19a9a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19a9d:	48 98                	cltq   
   19a9f:	48 01 c8             	add    %rcx,%rax
   19aa2:	c6 00 18             	movb   $0x18,(%rax)
   19aa5:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19aa9:	0f 84 25 11 00 00    	je     1abd4 <__find_arguments+0x1c76>
   19aaf:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19ab2:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19ab5:	7c 16                	jl     19acd <__find_arguments+0xb6f>
   19ab7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19abb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19abf:	48 89 d6             	mov    %rdx,%rsi
   19ac2:	48 89 c7             	mov    %rax,%rdi
   19ac5:	e8 66 11 00 00       	callq  1ac30 <__grow_type_table>
   19aca:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19acd:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19ad0:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19ad3:	7e 06                	jle    19adb <__find_arguments+0xb7d>
   19ad5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19ad8:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19adb:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19adf:	74 15                	je     19af6 <__find_arguments+0xb98>
   19ae1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19ae5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19ae8:	8d 50 01             	lea    0x1(%rax),%edx
   19aeb:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19aee:	48 98                	cltq   
   19af0:	48 01 c8             	add    %rcx,%rax
   19af3:	c6 00 06             	movb   $0x6,(%rax)
   19af6:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19afa:	0f 85 c4 06 00 00    	jne    1a1c4 <__find_arguments+0x1266>
   19b00:	e9 d6 10 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   19b05:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   19b09:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19b0c:	25 00 10 00 00       	and    $0x1000,%eax
   19b11:	85 c0                	test   %eax,%eax
   19b13:	74 50                	je     19b65 <__find_arguments+0xc07>
   19b15:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19b18:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19b1b:	7c 16                	jl     19b33 <__find_arguments+0xbd5>
   19b1d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19b21:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19b25:	48 89 d6             	mov    %rdx,%rsi
   19b28:	48 89 c7             	mov    %rax,%rdi
   19b2b:	e8 00 11 00 00       	callq  1ac30 <__grow_type_table>
   19b30:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19b33:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19b36:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19b39:	7e 06                	jle    19b41 <__find_arguments+0xbe3>
   19b3b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19b3e:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19b41:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19b45:	0f 84 7c 02 00 00    	je     19dc7 <__find_arguments+0xe69>
   19b4b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19b4f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19b52:	8d 50 01             	lea    0x1(%rax),%edx
   19b55:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19b58:	48 98                	cltq   
   19b5a:	48 01 c8             	add    %rcx,%rax
   19b5d:	c6 00 17             	movb   $0x17,(%rax)
   19b60:	e9 62 02 00 00       	jmpq   19dc7 <__find_arguments+0xe69>
   19b65:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19b68:	25 00 02 00 00       	and    $0x200,%eax
   19b6d:	85 c0                	test   %eax,%eax
   19b6f:	74 50                	je     19bc1 <__find_arguments+0xc63>
   19b71:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19b74:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19b77:	7c 16                	jl     19b8f <__find_arguments+0xc31>
   19b79:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19b7d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19b81:	48 89 d6             	mov    %rdx,%rsi
   19b84:	48 89 c7             	mov    %rax,%rdi
   19b87:	e8 a4 10 00 00       	callq  1ac30 <__grow_type_table>
   19b8c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19b8f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19b92:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19b95:	7e 06                	jle    19b9d <__find_arguments+0xc3f>
   19b97:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19b9a:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19b9d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19ba1:	0f 84 20 02 00 00    	je     19dc7 <__find_arguments+0xe69>
   19ba7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19bab:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19bae:	8d 50 01             	lea    0x1(%rax),%edx
   19bb1:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19bb4:	48 98                	cltq   
   19bb6:	48 01 c8             	add    %rcx,%rax
   19bb9:	c6 00 11             	movb   $0x11,(%rax)
   19bbc:	e9 06 02 00 00       	jmpq   19dc7 <__find_arguments+0xe69>
   19bc1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19bc4:	25 00 04 00 00       	and    $0x400,%eax
   19bc9:	85 c0                	test   %eax,%eax
   19bcb:	74 50                	je     19c1d <__find_arguments+0xcbf>
   19bcd:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19bd0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19bd3:	7c 16                	jl     19beb <__find_arguments+0xc8d>
   19bd5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19bd9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19bdd:	48 89 d6             	mov    %rdx,%rsi
   19be0:	48 89 c7             	mov    %rax,%rdi
   19be3:	e8 48 10 00 00       	callq  1ac30 <__grow_type_table>
   19be8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19beb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19bee:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19bf1:	7e 06                	jle    19bf9 <__find_arguments+0xc9b>
   19bf3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19bf6:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19bf9:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19bfd:	0f 84 c4 01 00 00    	je     19dc7 <__find_arguments+0xe69>
   19c03:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19c07:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19c0a:	8d 50 01             	lea    0x1(%rax),%edx
   19c0d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19c10:	48 98                	cltq   
   19c12:	48 01 c8             	add    %rcx,%rax
   19c15:	c6 00 13             	movb   $0x13,(%rax)
   19c18:	e9 aa 01 00 00       	jmpq   19dc7 <__find_arguments+0xe69>
   19c1d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19c20:	83 e0 20             	and    $0x20,%eax
   19c23:	85 c0                	test   %eax,%eax
   19c25:	74 50                	je     19c77 <__find_arguments+0xd19>
   19c27:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19c2a:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19c2d:	7c 16                	jl     19c45 <__find_arguments+0xce7>
   19c2f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19c33:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19c37:	48 89 d6             	mov    %rdx,%rsi
   19c3a:	48 89 c7             	mov    %rax,%rdi
   19c3d:	e8 ee 0f 00 00       	callq  1ac30 <__grow_type_table>
   19c42:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19c45:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19c48:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19c4b:	7e 06                	jle    19c53 <__find_arguments+0xcf5>
   19c4d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19c50:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19c53:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19c57:	0f 84 6a 01 00 00    	je     19dc7 <__find_arguments+0xe69>
   19c5d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19c61:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19c64:	8d 50 01             	lea    0x1(%rax),%edx
   19c67:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19c6a:	48 98                	cltq   
   19c6c:	48 01 c8             	add    %rcx,%rax
   19c6f:	c6 00 0b             	movb   $0xb,(%rax)
   19c72:	e9 50 01 00 00       	jmpq   19dc7 <__find_arguments+0xe69>
   19c77:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19c7a:	83 e0 10             	and    $0x10,%eax
   19c7d:	85 c0                	test   %eax,%eax
   19c7f:	74 50                	je     19cd1 <__find_arguments+0xd73>
   19c81:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19c84:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19c87:	7c 16                	jl     19c9f <__find_arguments+0xd41>
   19c89:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19c8d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19c91:	48 89 d6             	mov    %rdx,%rsi
   19c94:	48 89 c7             	mov    %rax,%rdi
   19c97:	e8 94 0f 00 00       	callq  1ac30 <__grow_type_table>
   19c9c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19c9f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19ca2:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19ca5:	7e 06                	jle    19cad <__find_arguments+0xd4f>
   19ca7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19caa:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19cad:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19cb1:	0f 84 10 01 00 00    	je     19dc7 <__find_arguments+0xe69>
   19cb7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19cbb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19cbe:	8d 50 01             	lea    0x1(%rax),%edx
   19cc1:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19cc4:	48 98                	cltq   
   19cc6:	48 01 c8             	add    %rcx,%rax
   19cc9:	c6 00 08             	movb   $0x8,(%rax)
   19ccc:	e9 f6 00 00 00       	jmpq   19dc7 <__find_arguments+0xe69>
   19cd1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19cd4:	83 e0 40             	and    $0x40,%eax
   19cd7:	85 c0                	test   %eax,%eax
   19cd9:	74 50                	je     19d2b <__find_arguments+0xdcd>
   19cdb:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19cde:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19ce1:	7c 16                	jl     19cf9 <__find_arguments+0xd9b>
   19ce3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19ce7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19ceb:	48 89 d6             	mov    %rdx,%rsi
   19cee:	48 89 c7             	mov    %rax,%rdi
   19cf1:	e8 3a 0f 00 00       	callq  1ac30 <__grow_type_table>
   19cf6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19cf9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19cfc:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19cff:	7e 06                	jle    19d07 <__find_arguments+0xda9>
   19d01:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19d04:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19d07:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19d0b:	0f 84 b6 00 00 00    	je     19dc7 <__find_arguments+0xe69>
   19d11:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19d15:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19d18:	8d 50 01             	lea    0x1(%rax),%edx
   19d1b:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19d1e:	48 98                	cltq   
   19d20:	48 01 c8             	add    %rcx,%rax
   19d23:	c6 00 02             	movb   $0x2,(%rax)
   19d26:	e9 9c 00 00 00       	jmpq   19dc7 <__find_arguments+0xe69>
   19d2b:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19d2e:	25 00 08 00 00       	and    $0x800,%eax
   19d33:	85 c0                	test   %eax,%eax
   19d35:	74 49                	je     19d80 <__find_arguments+0xe22>
   19d37:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19d3a:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19d3d:	7c 16                	jl     19d55 <__find_arguments+0xdf7>
   19d3f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19d43:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19d47:	48 89 d6             	mov    %rdx,%rsi
   19d4a:	48 89 c7             	mov    %rax,%rdi
   19d4d:	e8 de 0e 00 00       	callq  1ac30 <__grow_type_table>
   19d52:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19d55:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19d58:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19d5b:	7e 06                	jle    19d63 <__find_arguments+0xe05>
   19d5d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19d60:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19d63:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19d67:	74 5e                	je     19dc7 <__find_arguments+0xe69>
   19d69:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19d6d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19d70:	8d 50 01             	lea    0x1(%rax),%edx
   19d73:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19d76:	48 98                	cltq   
   19d78:	48 01 c8             	add    %rcx,%rax
   19d7b:	c6 00 1a             	movb   $0x1a,(%rax)
   19d7e:	eb 47                	jmp    19dc7 <__find_arguments+0xe69>
   19d80:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19d83:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19d86:	7c 16                	jl     19d9e <__find_arguments+0xe40>
   19d88:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19d8c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19d90:	48 89 d6             	mov    %rdx,%rsi
   19d93:	48 89 c7             	mov    %rax,%rdi
   19d96:	e8 95 0e 00 00       	callq  1ac30 <__grow_type_table>
   19d9b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19d9e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19da1:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19da4:	7e 06                	jle    19dac <__find_arguments+0xe4e>
   19da6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19da9:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19dac:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19db0:	74 15                	je     19dc7 <__find_arguments+0xe69>
   19db2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19db6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19db9:	8d 50 01             	lea    0x1(%rax),%edx
   19dbc:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19dbf:	48 98                	cltq   
   19dc1:	48 01 c8             	add    %rcx,%rax
   19dc4:	c6 00 05             	movb   $0x5,(%rax)
   19dc7:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19dcb:	0f 85 f9 03 00 00    	jne    1a1ca <__find_arguments+0x126c>
   19dd1:	e9 05 0e 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   19dd6:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19dd9:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19ddc:	7c 16                	jl     19df4 <__find_arguments+0xe96>
   19dde:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19de2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19de6:	48 89 d6             	mov    %rdx,%rsi
   19de9:	48 89 c7             	mov    %rax,%rdi
   19dec:	e8 3f 0e 00 00       	callq  1ac30 <__grow_type_table>
   19df1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19df4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19df7:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19dfa:	7e 06                	jle    19e02 <__find_arguments+0xea4>
   19dfc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19dff:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19e02:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19e06:	74 15                	je     19e1d <__find_arguments+0xebf>
   19e08:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19e0c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19e0f:	8d 50 01             	lea    0x1(%rax),%edx
   19e12:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19e15:	48 98                	cltq   
   19e17:	48 01 c8             	add    %rcx,%rax
   19e1a:	c6 00 10             	movb   $0x10,(%rax)
   19e1d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19e21:	0f 85 a9 03 00 00    	jne    1a1d0 <__find_arguments+0x1272>
   19e27:	e9 af 0d 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   19e2c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19e2f:	83 e0 10             	and    $0x10,%eax
   19e32:	85 c0                	test   %eax,%eax
   19e34:	74 47                	je     19e7d <__find_arguments+0xf1f>
   19e36:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19e39:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19e3c:	7c 16                	jl     19e54 <__find_arguments+0xef6>
   19e3e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19e42:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19e46:	48 89 d6             	mov    %rdx,%rsi
   19e49:	48 89 c7             	mov    %rax,%rdi
   19e4c:	e8 df 0d 00 00       	callq  1ac30 <__grow_type_table>
   19e51:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19e54:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19e57:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19e5a:	7e 06                	jle    19e62 <__find_arguments+0xf04>
   19e5c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19e5f:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19e62:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19e66:	74 15                	je     19e7d <__find_arguments+0xf1f>
   19e68:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19e6c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19e6f:	8d 50 01             	lea    0x1(%rax),%edx
   19e72:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19e75:	48 98                	cltq   
   19e77:	48 01 c8             	add    %rcx,%rax
   19e7a:	c6 00 1c             	movb   $0x1c,(%rax)
   19e7d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19e81:	0f 84 50 0d 00 00    	je     1abd7 <__find_arguments+0x1c79>
   19e87:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19e8a:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19e8d:	7c 16                	jl     19ea5 <__find_arguments+0xf47>
   19e8f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19e93:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19e97:	48 89 d6             	mov    %rdx,%rsi
   19e9a:	48 89 c7             	mov    %rax,%rdi
   19e9d:	e8 8e 0d 00 00       	callq  1ac30 <__grow_type_table>
   19ea2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19ea5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19ea8:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19eab:	7e 06                	jle    19eb3 <__find_arguments+0xf55>
   19ead:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19eb0:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19eb3:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19eb7:	74 15                	je     19ece <__find_arguments+0xf70>
   19eb9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19ebd:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19ec0:	8d 50 01             	lea    0x1(%rax),%edx
   19ec3:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19ec6:	48 98                	cltq   
   19ec8:	48 01 c8             	add    %rcx,%rax
   19ecb:	c6 00 0f             	movb   $0xf,(%rax)
   19ece:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19ed2:	0f 85 fe 02 00 00    	jne    1a1d6 <__find_arguments+0x1278>
   19ed8:	e9 fe 0c 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   19edd:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   19ee1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19ee4:	25 00 10 00 00       	and    $0x1000,%eax
   19ee9:	85 c0                	test   %eax,%eax
   19eeb:	74 50                	je     19f3d <__find_arguments+0xfdf>
   19eed:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19ef0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19ef3:	7c 16                	jl     19f0b <__find_arguments+0xfad>
   19ef5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19ef9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19efd:	48 89 d6             	mov    %rdx,%rsi
   19f00:	48 89 c7             	mov    %rax,%rdi
   19f03:	e8 28 0d 00 00       	callq  1ac30 <__grow_type_table>
   19f08:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19f0b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19f0e:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19f11:	7e 06                	jle    19f19 <__find_arguments+0xfbb>
   19f13:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19f16:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19f19:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19f1d:	0f 84 7c 02 00 00    	je     1a19f <__find_arguments+0x1241>
   19f23:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19f27:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19f2a:	8d 50 01             	lea    0x1(%rax),%edx
   19f2d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19f30:	48 98                	cltq   
   19f32:	48 01 c8             	add    %rcx,%rax
   19f35:	c6 00 17             	movb   $0x17,(%rax)
   19f38:	e9 62 02 00 00       	jmpq   1a19f <__find_arguments+0x1241>
   19f3d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19f40:	25 00 02 00 00       	and    $0x200,%eax
   19f45:	85 c0                	test   %eax,%eax
   19f47:	74 50                	je     19f99 <__find_arguments+0x103b>
   19f49:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19f4c:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19f4f:	7c 16                	jl     19f67 <__find_arguments+0x1009>
   19f51:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19f55:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19f59:	48 89 d6             	mov    %rdx,%rsi
   19f5c:	48 89 c7             	mov    %rax,%rdi
   19f5f:	e8 cc 0c 00 00       	callq  1ac30 <__grow_type_table>
   19f64:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19f67:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19f6a:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19f6d:	7e 06                	jle    19f75 <__find_arguments+0x1017>
   19f6f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19f72:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19f75:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19f79:	0f 84 20 02 00 00    	je     1a19f <__find_arguments+0x1241>
   19f7f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19f83:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19f86:	8d 50 01             	lea    0x1(%rax),%edx
   19f89:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19f8c:	48 98                	cltq   
   19f8e:	48 01 c8             	add    %rcx,%rax
   19f91:	c6 00 11             	movb   $0x11,(%rax)
   19f94:	e9 06 02 00 00       	jmpq   1a19f <__find_arguments+0x1241>
   19f99:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19f9c:	25 00 04 00 00       	and    $0x400,%eax
   19fa1:	85 c0                	test   %eax,%eax
   19fa3:	74 50                	je     19ff5 <__find_arguments+0x1097>
   19fa5:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19fa8:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   19fab:	7c 16                	jl     19fc3 <__find_arguments+0x1065>
   19fad:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   19fb1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19fb5:	48 89 d6             	mov    %rdx,%rsi
   19fb8:	48 89 c7             	mov    %rax,%rdi
   19fbb:	e8 70 0c 00 00       	callq  1ac30 <__grow_type_table>
   19fc0:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   19fc3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19fc6:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19fc9:	7e 06                	jle    19fd1 <__find_arguments+0x1073>
   19fcb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19fce:	89 45 b8             	mov    %eax,-0x48(%rbp)
   19fd1:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   19fd5:	0f 84 c4 01 00 00    	je     1a19f <__find_arguments+0x1241>
   19fdb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19fdf:	8b 45 bc             	mov    -0x44(%rbp),%eax
   19fe2:	8d 50 01             	lea    0x1(%rax),%edx
   19fe5:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19fe8:	48 98                	cltq   
   19fea:	48 01 c8             	add    %rcx,%rax
   19fed:	c6 00 13             	movb   $0x13,(%rax)
   19ff0:	e9 aa 01 00 00       	jmpq   1a19f <__find_arguments+0x1241>
   19ff5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   19ff8:	83 e0 20             	and    $0x20,%eax
   19ffb:	85 c0                	test   %eax,%eax
   19ffd:	74 50                	je     1a04f <__find_arguments+0x10f1>
   19fff:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1a002:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1a005:	7c 16                	jl     1a01d <__find_arguments+0x10bf>
   1a007:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1a00b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a00f:	48 89 d6             	mov    %rdx,%rsi
   1a012:	48 89 c7             	mov    %rax,%rdi
   1a015:	e8 16 0c 00 00       	callq  1ac30 <__grow_type_table>
   1a01a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1a01d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a020:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1a023:	7e 06                	jle    1a02b <__find_arguments+0x10cd>
   1a025:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a028:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1a02b:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1a02f:	0f 84 6a 01 00 00    	je     1a19f <__find_arguments+0x1241>
   1a035:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a039:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a03c:	8d 50 01             	lea    0x1(%rax),%edx
   1a03f:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1a042:	48 98                	cltq   
   1a044:	48 01 c8             	add    %rcx,%rax
   1a047:	c6 00 0b             	movb   $0xb,(%rax)
   1a04a:	e9 50 01 00 00       	jmpq   1a19f <__find_arguments+0x1241>
   1a04f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1a052:	83 e0 10             	and    $0x10,%eax
   1a055:	85 c0                	test   %eax,%eax
   1a057:	74 50                	je     1a0a9 <__find_arguments+0x114b>
   1a059:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1a05c:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1a05f:	7c 16                	jl     1a077 <__find_arguments+0x1119>
   1a061:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1a065:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a069:	48 89 d6             	mov    %rdx,%rsi
   1a06c:	48 89 c7             	mov    %rax,%rdi
   1a06f:	e8 bc 0b 00 00       	callq  1ac30 <__grow_type_table>
   1a074:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1a077:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a07a:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1a07d:	7e 06                	jle    1a085 <__find_arguments+0x1127>
   1a07f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a082:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1a085:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1a089:	0f 84 10 01 00 00    	je     1a19f <__find_arguments+0x1241>
   1a08f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a093:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a096:	8d 50 01             	lea    0x1(%rax),%edx
   1a099:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1a09c:	48 98                	cltq   
   1a09e:	48 01 c8             	add    %rcx,%rax
   1a0a1:	c6 00 08             	movb   $0x8,(%rax)
   1a0a4:	e9 f6 00 00 00       	jmpq   1a19f <__find_arguments+0x1241>
   1a0a9:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1a0ac:	83 e0 40             	and    $0x40,%eax
   1a0af:	85 c0                	test   %eax,%eax
   1a0b1:	74 50                	je     1a103 <__find_arguments+0x11a5>
   1a0b3:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1a0b6:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1a0b9:	7c 16                	jl     1a0d1 <__find_arguments+0x1173>
   1a0bb:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1a0bf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a0c3:	48 89 d6             	mov    %rdx,%rsi
   1a0c6:	48 89 c7             	mov    %rax,%rdi
   1a0c9:	e8 62 0b 00 00       	callq  1ac30 <__grow_type_table>
   1a0ce:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1a0d1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a0d4:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1a0d7:	7e 06                	jle    1a0df <__find_arguments+0x1181>
   1a0d9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a0dc:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1a0df:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1a0e3:	0f 84 b6 00 00 00    	je     1a19f <__find_arguments+0x1241>
   1a0e9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a0ed:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a0f0:	8d 50 01             	lea    0x1(%rax),%edx
   1a0f3:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1a0f6:	48 98                	cltq   
   1a0f8:	48 01 c8             	add    %rcx,%rax
   1a0fb:	c6 00 02             	movb   $0x2,(%rax)
   1a0fe:	e9 9c 00 00 00       	jmpq   1a19f <__find_arguments+0x1241>
   1a103:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1a106:	25 00 08 00 00       	and    $0x800,%eax
   1a10b:	85 c0                	test   %eax,%eax
   1a10d:	74 49                	je     1a158 <__find_arguments+0x11fa>
   1a10f:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1a112:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1a115:	7c 16                	jl     1a12d <__find_arguments+0x11cf>
   1a117:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1a11b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a11f:	48 89 d6             	mov    %rdx,%rsi
   1a122:	48 89 c7             	mov    %rax,%rdi
   1a125:	e8 06 0b 00 00       	callq  1ac30 <__grow_type_table>
   1a12a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1a12d:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a130:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1a133:	7e 06                	jle    1a13b <__find_arguments+0x11dd>
   1a135:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a138:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1a13b:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1a13f:	74 5e                	je     1a19f <__find_arguments+0x1241>
   1a141:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a145:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a148:	8d 50 01             	lea    0x1(%rax),%edx
   1a14b:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1a14e:	48 98                	cltq   
   1a150:	48 01 c8             	add    %rcx,%rax
   1a153:	c6 00 1a             	movb   $0x1a,(%rax)
   1a156:	eb 47                	jmp    1a19f <__find_arguments+0x1241>
   1a158:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1a15b:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1a15e:	7c 16                	jl     1a176 <__find_arguments+0x1218>
   1a160:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1a164:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a168:	48 89 d6             	mov    %rdx,%rsi
   1a16b:	48 89 c7             	mov    %rax,%rdi
   1a16e:	e8 bd 0a 00 00       	callq  1ac30 <__grow_type_table>
   1a173:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1a176:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a179:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1a17c:	7e 06                	jle    1a184 <__find_arguments+0x1226>
   1a17e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a181:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1a184:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1a188:	74 15                	je     1a19f <__find_arguments+0x1241>
   1a18a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a18e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1a191:	8d 50 01             	lea    0x1(%rax),%edx
   1a194:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1a197:	48 98                	cltq   
   1a199:	48 01 c8             	add    %rcx,%rax
   1a19c:	c6 00 05             	movb   $0x5,(%rax)
   1a19f:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   1a1a3:	75 37                	jne    1a1dc <__find_arguments+0x127e>
   1a1a5:	e9 31 0a 00 00       	jmpq   1abdb <__find_arguments+0x1c7d>
   1a1aa:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
   1a1ae:	74 35                	je     1a1e5 <__find_arguments+0x1287>
   1a1b0:	eb 2b                	jmp    1a1dd <__find_arguments+0x127f>
   1a1b2:	90                   	nop
   1a1b3:	e9 2c ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1b8:	90                   	nop
   1a1b9:	e9 26 ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1be:	90                   	nop
   1a1bf:	e9 20 ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1c4:	90                   	nop
   1a1c5:	e9 1a ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1ca:	90                   	nop
   1a1cb:	e9 14 ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1d0:	90                   	nop
   1a1d1:	e9 0e ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1d6:	90                   	nop
   1a1d7:	e9 08 ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1dc:	90                   	nop
   1a1dd:	e9 02 ee ff ff       	jmpq   18fe4 <__find_arguments+0x86>
   1a1e2:	90                   	nop
   1a1e3:	eb 01                	jmp    1a1e6 <__find_arguments+0x1288>
   1a1e5:	90                   	nop
   1a1e6:	83 7d b8 07          	cmpl   $0x7,-0x48(%rbp)
   1a1ea:	7e 3f                	jle    1a22b <__find_arguments+0x12cd>
   1a1ec:	8b 45 b8             	mov    -0x48(%rbp),%eax
   1a1ef:	83 c0 01             	add    $0x1,%eax
   1a1f2:	48 98                	cltq   
   1a1f4:	48 c1 e0 04          	shl    $0x4,%rax
   1a1f8:	48 89 c2             	mov    %rax,%rdx
   1a1fb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a1ff:	48 89 10             	mov    %rdx,(%rax)
   1a202:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a206:	48 8b 00             	mov    (%rax),%rax
   1a209:	48 89 c7             	mov    %rax,%rdi
   1a20c:	e8 37 62 ff ff       	callq  10448 <dlmalloc>
   1a211:	48 89 c2             	mov    %rax,%rdx
   1a214:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a218:	48 89 10             	mov    %rdx,(%rax)
   1a21b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a21f:	48 8b 00             	mov    (%rax),%rax
   1a222:	48 85 c0             	test   %rax,%rax
   1a225:	0f 84 af 09 00 00    	je     1abda <__find_arguments+0x1c7c>
   1a22b:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%rbp)
   1a232:	e9 5c 09 00 00       	jmpq   1ab93 <__find_arguments+0x1c35>
   1a237:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a23b:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1a23e:	48 98                	cltq   
   1a240:	48 01 d0             	add    %rdx,%rax
   1a243:	0f b6 00             	movzbl (%rax),%eax
   1a246:	0f b6 c0             	movzbl %al,%eax
   1a249:	83 f8 1c             	cmp    $0x1c,%eax
   1a24c:	0f 87 3d 09 00 00    	ja     1ab8f <__find_arguments+0x1c31>
   1a252:	89 c0                	mov    %eax,%eax
   1a254:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1a25b:	00 
   1a25c:	48 8d 05 59 29 02 00 	lea    0x22959(%rip),%rax        # 3cbbc <__func__.2398+0x313>
   1a263:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1a266:	48 63 d0             	movslq %eax,%rdx
   1a269:	48 8d 05 4c 29 02 00 	lea    0x2294c(%rip),%rax        # 3cbbc <__func__.2398+0x313>
   1a270:	48 01 d0             	add    %rdx,%rax
   1a273:	ff e0                	jmpq   *%rax
   1a275:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a279:	48 8b 00             	mov    (%rax),%rax
   1a27c:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a27f:	48 63 d2             	movslq %edx,%rdx
   1a282:	48 c1 e2 04          	shl    $0x4,%rdx
   1a286:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a28a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a28e:	8b 00                	mov    (%rax),%eax
   1a290:	83 f8 2f             	cmp    $0x2f,%eax
   1a293:	77 24                	ja     1a2b9 <__find_arguments+0x135b>
   1a295:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a299:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a29d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a2a1:	8b 00                	mov    (%rax),%eax
   1a2a3:	89 c0                	mov    %eax,%eax
   1a2a5:	48 01 d0             	add    %rdx,%rax
   1a2a8:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a2ac:	8b 12                	mov    (%rdx),%edx
   1a2ae:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a2b1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a2b5:	89 0a                	mov    %ecx,(%rdx)
   1a2b7:	eb 14                	jmp    1a2cd <__find_arguments+0x136f>
   1a2b9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a2bd:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a2c1:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a2c5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a2c9:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a2cd:	8b 00                	mov    (%rax),%eax
   1a2cf:	89 06                	mov    %eax,(%rsi)
   1a2d1:	e9 b9 08 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a2d6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a2da:	48 8b 00             	mov    (%rax),%rax
   1a2dd:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a2e0:	48 63 d2             	movslq %edx,%rdx
   1a2e3:	48 c1 e2 04          	shl    $0x4,%rdx
   1a2e7:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a2eb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a2ef:	8b 00                	mov    (%rax),%eax
   1a2f1:	83 f8 2f             	cmp    $0x2f,%eax
   1a2f4:	77 24                	ja     1a31a <__find_arguments+0x13bc>
   1a2f6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a2fa:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a2fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a302:	8b 00                	mov    (%rax),%eax
   1a304:	89 c0                	mov    %eax,%eax
   1a306:	48 01 d0             	add    %rdx,%rax
   1a309:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a30d:	8b 12                	mov    (%rdx),%edx
   1a30f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a312:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a316:	89 0a                	mov    %ecx,(%rdx)
   1a318:	eb 14                	jmp    1a32e <__find_arguments+0x13d0>
   1a31a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a31e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a322:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a326:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a32a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a32e:	48 8b 00             	mov    (%rax),%rax
   1a331:	48 89 06             	mov    %rax,(%rsi)
   1a334:	e9 56 08 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a339:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a33d:	48 8b 00             	mov    (%rax),%rax
   1a340:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a343:	48 63 d2             	movslq %edx,%rdx
   1a346:	48 c1 e2 04          	shl    $0x4,%rdx
   1a34a:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a34e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a352:	8b 00                	mov    (%rax),%eax
   1a354:	83 f8 2f             	cmp    $0x2f,%eax
   1a357:	77 24                	ja     1a37d <__find_arguments+0x141f>
   1a359:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a35d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a361:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a365:	8b 00                	mov    (%rax),%eax
   1a367:	89 c0                	mov    %eax,%eax
   1a369:	48 01 d0             	add    %rdx,%rax
   1a36c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a370:	8b 12                	mov    (%rdx),%edx
   1a372:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a375:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a379:	89 0a                	mov    %ecx,(%rdx)
   1a37b:	eb 14                	jmp    1a391 <__find_arguments+0x1433>
   1a37d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a381:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a385:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a389:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a38d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a391:	8b 00                	mov    (%rax),%eax
   1a393:	89 06                	mov    %eax,(%rsi)
   1a395:	e9 f5 07 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a39a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a39e:	48 8b 00             	mov    (%rax),%rax
   1a3a1:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a3a4:	48 63 d2             	movslq %edx,%rdx
   1a3a7:	48 c1 e2 04          	shl    $0x4,%rdx
   1a3ab:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a3af:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a3b3:	8b 00                	mov    (%rax),%eax
   1a3b5:	83 f8 2f             	cmp    $0x2f,%eax
   1a3b8:	77 24                	ja     1a3de <__find_arguments+0x1480>
   1a3ba:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a3be:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a3c2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a3c6:	8b 00                	mov    (%rax),%eax
   1a3c8:	89 c0                	mov    %eax,%eax
   1a3ca:	48 01 d0             	add    %rdx,%rax
   1a3cd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a3d1:	8b 12                	mov    (%rdx),%edx
   1a3d3:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a3d6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a3da:	89 0a                	mov    %ecx,(%rdx)
   1a3dc:	eb 14                	jmp    1a3f2 <__find_arguments+0x1494>
   1a3de:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a3e2:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a3e6:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a3ea:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a3ee:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a3f2:	48 8b 00             	mov    (%rax),%rax
   1a3f5:	48 89 06             	mov    %rax,(%rsi)
   1a3f8:	e9 92 07 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a3fd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a401:	48 8b 00             	mov    (%rax),%rax
   1a404:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a407:	48 63 d2             	movslq %edx,%rdx
   1a40a:	48 c1 e2 04          	shl    $0x4,%rdx
   1a40e:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a412:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a416:	8b 00                	mov    (%rax),%eax
   1a418:	83 f8 2f             	cmp    $0x2f,%eax
   1a41b:	77 24                	ja     1a441 <__find_arguments+0x14e3>
   1a41d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a421:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a425:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a429:	8b 00                	mov    (%rax),%eax
   1a42b:	89 c0                	mov    %eax,%eax
   1a42d:	48 01 d0             	add    %rdx,%rax
   1a430:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a434:	8b 12                	mov    (%rdx),%edx
   1a436:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a439:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a43d:	89 0a                	mov    %ecx,(%rdx)
   1a43f:	eb 14                	jmp    1a455 <__find_arguments+0x14f7>
   1a441:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a445:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a449:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a44d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a451:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a455:	48 8b 00             	mov    (%rax),%rax
   1a458:	48 89 06             	mov    %rax,(%rsi)
   1a45b:	e9 2f 07 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a460:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a464:	48 8b 00             	mov    (%rax),%rax
   1a467:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a46a:	48 63 d2             	movslq %edx,%rdx
   1a46d:	48 c1 e2 04          	shl    $0x4,%rdx
   1a471:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a475:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a479:	8b 00                	mov    (%rax),%eax
   1a47b:	83 f8 2f             	cmp    $0x2f,%eax
   1a47e:	77 24                	ja     1a4a4 <__find_arguments+0x1546>
   1a480:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a484:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a488:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a48c:	8b 00                	mov    (%rax),%eax
   1a48e:	89 c0                	mov    %eax,%eax
   1a490:	48 01 d0             	add    %rdx,%rax
   1a493:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a497:	8b 12                	mov    (%rdx),%edx
   1a499:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a49c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a4a0:	89 0a                	mov    %ecx,(%rdx)
   1a4a2:	eb 14                	jmp    1a4b8 <__find_arguments+0x155a>
   1a4a4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a4a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a4ac:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a4b0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a4b4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a4b8:	48 8b 00             	mov    (%rax),%rax
   1a4bb:	48 89 06             	mov    %rax,(%rsi)
   1a4be:	e9 cc 06 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a4c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a4c7:	48 8b 00             	mov    (%rax),%rax
   1a4ca:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a4cd:	48 63 d2             	movslq %edx,%rdx
   1a4d0:	48 c1 e2 04          	shl    $0x4,%rdx
   1a4d4:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a4d8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a4dc:	8b 00                	mov    (%rax),%eax
   1a4de:	83 f8 2f             	cmp    $0x2f,%eax
   1a4e1:	77 24                	ja     1a507 <__find_arguments+0x15a9>
   1a4e3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a4e7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a4eb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a4ef:	8b 00                	mov    (%rax),%eax
   1a4f1:	89 c0                	mov    %eax,%eax
   1a4f3:	48 01 d0             	add    %rdx,%rax
   1a4f6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a4fa:	8b 12                	mov    (%rdx),%edx
   1a4fc:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a4ff:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a503:	89 0a                	mov    %ecx,(%rdx)
   1a505:	eb 14                	jmp    1a51b <__find_arguments+0x15bd>
   1a507:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a50b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a50f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a513:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a517:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a51b:	48 8b 00             	mov    (%rax),%rax
   1a51e:	48 89 06             	mov    %rax,(%rsi)
   1a521:	e9 69 06 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a526:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a52a:	48 8b 00             	mov    (%rax),%rax
   1a52d:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a530:	48 63 d2             	movslq %edx,%rdx
   1a533:	48 c1 e2 04          	shl    $0x4,%rdx
   1a537:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a53b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a53f:	8b 00                	mov    (%rax),%eax
   1a541:	83 f8 2f             	cmp    $0x2f,%eax
   1a544:	77 24                	ja     1a56a <__find_arguments+0x160c>
   1a546:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a54a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a54e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a552:	8b 00                	mov    (%rax),%eax
   1a554:	89 c0                	mov    %eax,%eax
   1a556:	48 01 d0             	add    %rdx,%rax
   1a559:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a55d:	8b 12                	mov    (%rdx),%edx
   1a55f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a562:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a566:	89 0a                	mov    %ecx,(%rdx)
   1a568:	eb 14                	jmp    1a57e <__find_arguments+0x1620>
   1a56a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a56e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a572:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a576:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a57a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a57e:	48 8b 00             	mov    (%rax),%rax
   1a581:	48 89 06             	mov    %rax,(%rsi)
   1a584:	e9 06 06 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a589:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a58d:	48 8b 00             	mov    (%rax),%rax
   1a590:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a593:	48 63 d2             	movslq %edx,%rdx
   1a596:	48 c1 e2 04          	shl    $0x4,%rdx
   1a59a:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a59e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a5a2:	8b 00                	mov    (%rax),%eax
   1a5a4:	83 f8 2f             	cmp    $0x2f,%eax
   1a5a7:	77 24                	ja     1a5cd <__find_arguments+0x166f>
   1a5a9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a5ad:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a5b1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a5b5:	8b 00                	mov    (%rax),%eax
   1a5b7:	89 c0                	mov    %eax,%eax
   1a5b9:	48 01 d0             	add    %rdx,%rax
   1a5bc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a5c0:	8b 12                	mov    (%rdx),%edx
   1a5c2:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a5c5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a5c9:	89 0a                	mov    %ecx,(%rdx)
   1a5cb:	eb 14                	jmp    1a5e1 <__find_arguments+0x1683>
   1a5cd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a5d1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a5d5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a5d9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a5dd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a5e1:	48 8b 00             	mov    (%rax),%rax
   1a5e4:	48 89 06             	mov    %rax,(%rsi)
   1a5e7:	e9 a3 05 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a5ec:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a5f0:	48 8b 00             	mov    (%rax),%rax
   1a5f3:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a5f6:	48 63 d2             	movslq %edx,%rdx
   1a5f9:	48 c1 e2 04          	shl    $0x4,%rdx
   1a5fd:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a601:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a605:	8b 00                	mov    (%rax),%eax
   1a607:	83 f8 2f             	cmp    $0x2f,%eax
   1a60a:	77 24                	ja     1a630 <__find_arguments+0x16d2>
   1a60c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a610:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a614:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a618:	8b 00                	mov    (%rax),%eax
   1a61a:	89 c0                	mov    %eax,%eax
   1a61c:	48 01 d0             	add    %rdx,%rax
   1a61f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a623:	8b 12                	mov    (%rdx),%edx
   1a625:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a628:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a62c:	89 0a                	mov    %ecx,(%rdx)
   1a62e:	eb 14                	jmp    1a644 <__find_arguments+0x16e6>
   1a630:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a634:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a638:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a63c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a640:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a644:	48 8b 00             	mov    (%rax),%rax
   1a647:	48 89 06             	mov    %rax,(%rsi)
   1a64a:	e9 40 05 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a64f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a653:	48 8b 00             	mov    (%rax),%rax
   1a656:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a659:	48 63 d2             	movslq %edx,%rdx
   1a65c:	48 c1 e2 04          	shl    $0x4,%rdx
   1a660:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a664:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a668:	8b 40 04             	mov    0x4(%rax),%eax
   1a66b:	3d af 00 00 00       	cmp    $0xaf,%eax
   1a670:	77 27                	ja     1a699 <__find_arguments+0x173b>
   1a672:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a676:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a67a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a67e:	8b 40 04             	mov    0x4(%rax),%eax
   1a681:	89 c0                	mov    %eax,%eax
   1a683:	48 01 d0             	add    %rdx,%rax
   1a686:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a68a:	8b 52 04             	mov    0x4(%rdx),%edx
   1a68d:	8d 4a 10             	lea    0x10(%rdx),%ecx
   1a690:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a694:	89 4a 04             	mov    %ecx,0x4(%rdx)
   1a697:	eb 14                	jmp    1a6ad <__find_arguments+0x174f>
   1a699:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a69d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a6a1:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a6a5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a6a9:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a6ad:	f2 0f 10 00          	movsd  (%rax),%xmm0
   1a6b1:	f2 0f 11 06          	movsd  %xmm0,(%rsi)
   1a6b5:	e9 d5 04 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a6ba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a6be:	48 8b 00             	mov    (%rax),%rax
   1a6c1:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a6c4:	48 63 d2             	movslq %edx,%rdx
   1a6c7:	48 c1 e2 04          	shl    $0x4,%rdx
   1a6cb:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a6cf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a6d3:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a6d7:	48 83 c0 0f          	add    $0xf,%rax
   1a6db:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1a6df:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1a6e3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a6e7:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a6eb:	db 28                	fldt   (%rax)
   1a6ed:	db 3e                	fstpt  (%rsi)
   1a6ef:	e9 9b 04 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a6f4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a6f8:	48 8b 00             	mov    (%rax),%rax
   1a6fb:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a6fe:	48 63 d2             	movslq %edx,%rdx
   1a701:	48 c1 e2 04          	shl    $0x4,%rdx
   1a705:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a709:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a70d:	8b 00                	mov    (%rax),%eax
   1a70f:	83 f8 2f             	cmp    $0x2f,%eax
   1a712:	77 24                	ja     1a738 <__find_arguments+0x17da>
   1a714:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a718:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a71c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a720:	8b 00                	mov    (%rax),%eax
   1a722:	89 c0                	mov    %eax,%eax
   1a724:	48 01 d0             	add    %rdx,%rax
   1a727:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a72b:	8b 12                	mov    (%rdx),%edx
   1a72d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a730:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a734:	89 0a                	mov    %ecx,(%rdx)
   1a736:	eb 14                	jmp    1a74c <__find_arguments+0x17ee>
   1a738:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a73c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a740:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a744:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a748:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a74c:	48 8b 00             	mov    (%rax),%rax
   1a74f:	48 89 06             	mov    %rax,(%rsi)
   1a752:	e9 38 04 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a757:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a75b:	48 8b 00             	mov    (%rax),%rax
   1a75e:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a761:	48 63 d2             	movslq %edx,%rdx
   1a764:	48 c1 e2 04          	shl    $0x4,%rdx
   1a768:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a76c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a770:	8b 00                	mov    (%rax),%eax
   1a772:	83 f8 2f             	cmp    $0x2f,%eax
   1a775:	77 24                	ja     1a79b <__find_arguments+0x183d>
   1a777:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a77b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a77f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a783:	8b 00                	mov    (%rax),%eax
   1a785:	89 c0                	mov    %eax,%eax
   1a787:	48 01 d0             	add    %rdx,%rax
   1a78a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a78e:	8b 12                	mov    (%rdx),%edx
   1a790:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a793:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a797:	89 0a                	mov    %ecx,(%rdx)
   1a799:	eb 14                	jmp    1a7af <__find_arguments+0x1851>
   1a79b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a79f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a7a3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a7a7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a7ab:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a7af:	48 8b 00             	mov    (%rax),%rax
   1a7b2:	48 89 06             	mov    %rax,(%rsi)
   1a7b5:	e9 d5 03 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a7ba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a7be:	48 8b 00             	mov    (%rax),%rax
   1a7c1:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a7c4:	48 63 d2             	movslq %edx,%rdx
   1a7c7:	48 c1 e2 04          	shl    $0x4,%rdx
   1a7cb:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a7cf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a7d3:	8b 00                	mov    (%rax),%eax
   1a7d5:	83 f8 2f             	cmp    $0x2f,%eax
   1a7d8:	77 24                	ja     1a7fe <__find_arguments+0x18a0>
   1a7da:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a7de:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a7e2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a7e6:	8b 00                	mov    (%rax),%eax
   1a7e8:	89 c0                	mov    %eax,%eax
   1a7ea:	48 01 d0             	add    %rdx,%rax
   1a7ed:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a7f1:	8b 12                	mov    (%rdx),%edx
   1a7f3:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a7f6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a7fa:	89 0a                	mov    %ecx,(%rdx)
   1a7fc:	eb 14                	jmp    1a812 <__find_arguments+0x18b4>
   1a7fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a802:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a806:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a80a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a80e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a812:	48 8b 00             	mov    (%rax),%rax
   1a815:	48 89 06             	mov    %rax,(%rsi)
   1a818:	e9 72 03 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a81d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a821:	48 8b 00             	mov    (%rax),%rax
   1a824:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a827:	48 63 d2             	movslq %edx,%rdx
   1a82a:	48 c1 e2 04          	shl    $0x4,%rdx
   1a82e:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a832:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a836:	8b 00                	mov    (%rax),%eax
   1a838:	83 f8 2f             	cmp    $0x2f,%eax
   1a83b:	77 24                	ja     1a861 <__find_arguments+0x1903>
   1a83d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a841:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a845:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a849:	8b 00                	mov    (%rax),%eax
   1a84b:	89 c0                	mov    %eax,%eax
   1a84d:	48 01 d0             	add    %rdx,%rax
   1a850:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a854:	8b 12                	mov    (%rdx),%edx
   1a856:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a859:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a85d:	89 0a                	mov    %ecx,(%rdx)
   1a85f:	eb 14                	jmp    1a875 <__find_arguments+0x1917>
   1a861:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a865:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a869:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a86d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a871:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a875:	48 8b 00             	mov    (%rax),%rax
   1a878:	48 89 06             	mov    %rax,(%rsi)
   1a87b:	e9 0f 03 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a880:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a884:	48 8b 00             	mov    (%rax),%rax
   1a887:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a88a:	48 63 d2             	movslq %edx,%rdx
   1a88d:	48 c1 e2 04          	shl    $0x4,%rdx
   1a891:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a895:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a899:	8b 00                	mov    (%rax),%eax
   1a89b:	83 f8 2f             	cmp    $0x2f,%eax
   1a89e:	77 24                	ja     1a8c4 <__find_arguments+0x1966>
   1a8a0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a8a4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a8a8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a8ac:	8b 00                	mov    (%rax),%eax
   1a8ae:	89 c0                	mov    %eax,%eax
   1a8b0:	48 01 d0             	add    %rdx,%rax
   1a8b3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a8b7:	8b 12                	mov    (%rdx),%edx
   1a8b9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a8bc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a8c0:	89 0a                	mov    %ecx,(%rdx)
   1a8c2:	eb 14                	jmp    1a8d8 <__find_arguments+0x197a>
   1a8c4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a8c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a8cc:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a8d0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a8d4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a8d8:	48 8b 00             	mov    (%rax),%rax
   1a8db:	48 89 06             	mov    %rax,(%rsi)
   1a8de:	e9 ac 02 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a8e3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a8e7:	48 8b 00             	mov    (%rax),%rax
   1a8ea:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a8ed:	48 63 d2             	movslq %edx,%rdx
   1a8f0:	48 c1 e2 04          	shl    $0x4,%rdx
   1a8f4:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a8f8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a8fc:	8b 00                	mov    (%rax),%eax
   1a8fe:	83 f8 2f             	cmp    $0x2f,%eax
   1a901:	77 24                	ja     1a927 <__find_arguments+0x19c9>
   1a903:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a907:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a90b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a90f:	8b 00                	mov    (%rax),%eax
   1a911:	89 c0                	mov    %eax,%eax
   1a913:	48 01 d0             	add    %rdx,%rax
   1a916:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a91a:	8b 12                	mov    (%rdx),%edx
   1a91c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a91f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a923:	89 0a                	mov    %ecx,(%rdx)
   1a925:	eb 14                	jmp    1a93b <__find_arguments+0x19dd>
   1a927:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a92b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a92f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a933:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a937:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a93b:	48 8b 00             	mov    (%rax),%rax
   1a93e:	48 89 06             	mov    %rax,(%rsi)
   1a941:	e9 49 02 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a946:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a94a:	48 8b 00             	mov    (%rax),%rax
   1a94d:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a950:	48 63 d2             	movslq %edx,%rdx
   1a953:	48 c1 e2 04          	shl    $0x4,%rdx
   1a957:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a95b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a95f:	8b 00                	mov    (%rax),%eax
   1a961:	83 f8 2f             	cmp    $0x2f,%eax
   1a964:	77 24                	ja     1a98a <__find_arguments+0x1a2c>
   1a966:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a96a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a96e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a972:	8b 00                	mov    (%rax),%eax
   1a974:	89 c0                	mov    %eax,%eax
   1a976:	48 01 d0             	add    %rdx,%rax
   1a979:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a97d:	8b 12                	mov    (%rdx),%edx
   1a97f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a982:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a986:	89 0a                	mov    %ecx,(%rdx)
   1a988:	eb 14                	jmp    1a99e <__find_arguments+0x1a40>
   1a98a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a98e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a992:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a996:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a99a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1a99e:	48 8b 00             	mov    (%rax),%rax
   1a9a1:	48 89 06             	mov    %rax,(%rsi)
   1a9a4:	e9 e6 01 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1a9a9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a9ad:	48 8b 00             	mov    (%rax),%rax
   1a9b0:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1a9b3:	48 63 d2             	movslq %edx,%rdx
   1a9b6:	48 c1 e2 04          	shl    $0x4,%rdx
   1a9ba:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1a9be:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a9c2:	8b 00                	mov    (%rax),%eax
   1a9c4:	83 f8 2f             	cmp    $0x2f,%eax
   1a9c7:	77 24                	ja     1a9ed <__find_arguments+0x1a8f>
   1a9c9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a9cd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a9d1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a9d5:	8b 00                	mov    (%rax),%eax
   1a9d7:	89 c0                	mov    %eax,%eax
   1a9d9:	48 01 d0             	add    %rdx,%rax
   1a9dc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a9e0:	8b 12                	mov    (%rdx),%edx
   1a9e2:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1a9e5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a9e9:	89 0a                	mov    %ecx,(%rdx)
   1a9eb:	eb 14                	jmp    1aa01 <__find_arguments+0x1aa3>
   1a9ed:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a9f1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a9f5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a9f9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a9fd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1aa01:	48 8b 00             	mov    (%rax),%rax
   1aa04:	48 89 06             	mov    %rax,(%rsi)
   1aa07:	e9 83 01 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1aa0c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1aa10:	48 8b 00             	mov    (%rax),%rax
   1aa13:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1aa16:	48 63 d2             	movslq %edx,%rdx
   1aa19:	48 c1 e2 04          	shl    $0x4,%rdx
   1aa1d:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1aa21:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa25:	8b 00                	mov    (%rax),%eax
   1aa27:	83 f8 2f             	cmp    $0x2f,%eax
   1aa2a:	77 24                	ja     1aa50 <__find_arguments+0x1af2>
   1aa2c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa30:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1aa34:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa38:	8b 00                	mov    (%rax),%eax
   1aa3a:	89 c0                	mov    %eax,%eax
   1aa3c:	48 01 d0             	add    %rdx,%rax
   1aa3f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1aa43:	8b 12                	mov    (%rdx),%edx
   1aa45:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1aa48:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1aa4c:	89 0a                	mov    %ecx,(%rdx)
   1aa4e:	eb 14                	jmp    1aa64 <__find_arguments+0x1b06>
   1aa50:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa54:	48 8b 40 08          	mov    0x8(%rax),%rax
   1aa58:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1aa5c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1aa60:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1aa64:	48 8b 00             	mov    (%rax),%rax
   1aa67:	48 89 06             	mov    %rax,(%rsi)
   1aa6a:	e9 20 01 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1aa6f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1aa73:	48 8b 00             	mov    (%rax),%rax
   1aa76:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1aa79:	48 63 d2             	movslq %edx,%rdx
   1aa7c:	48 c1 e2 04          	shl    $0x4,%rdx
   1aa80:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1aa84:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa88:	8b 00                	mov    (%rax),%eax
   1aa8a:	83 f8 2f             	cmp    $0x2f,%eax
   1aa8d:	77 24                	ja     1aab3 <__find_arguments+0x1b55>
   1aa8f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa93:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1aa97:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aa9b:	8b 00                	mov    (%rax),%eax
   1aa9d:	89 c0                	mov    %eax,%eax
   1aa9f:	48 01 d0             	add    %rdx,%rax
   1aaa2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1aaa6:	8b 12                	mov    (%rdx),%edx
   1aaa8:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1aaab:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1aaaf:	89 0a                	mov    %ecx,(%rdx)
   1aab1:	eb 14                	jmp    1aac7 <__find_arguments+0x1b69>
   1aab3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aab7:	48 8b 40 08          	mov    0x8(%rax),%rax
   1aabb:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1aabf:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1aac3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1aac7:	48 8b 00             	mov    (%rax),%rax
   1aaca:	48 89 06             	mov    %rax,(%rsi)
   1aacd:	e9 bd 00 00 00       	jmpq   1ab8f <__find_arguments+0x1c31>
   1aad2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1aad6:	48 8b 00             	mov    (%rax),%rax
   1aad9:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1aadc:	48 63 d2             	movslq %edx,%rdx
   1aadf:	48 c1 e2 04          	shl    $0x4,%rdx
   1aae3:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1aae7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aaeb:	8b 00                	mov    (%rax),%eax
   1aaed:	83 f8 2f             	cmp    $0x2f,%eax
   1aaf0:	77 24                	ja     1ab16 <__find_arguments+0x1bb8>
   1aaf2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aaf6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1aafa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1aafe:	8b 00                	mov    (%rax),%eax
   1ab00:	89 c0                	mov    %eax,%eax
   1ab02:	48 01 d0             	add    %rdx,%rax
   1ab05:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1ab09:	8b 12                	mov    (%rdx),%edx
   1ab0b:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1ab0e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1ab12:	89 0a                	mov    %ecx,(%rdx)
   1ab14:	eb 14                	jmp    1ab2a <__find_arguments+0x1bcc>
   1ab16:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ab1a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ab1e:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1ab22:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1ab26:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1ab2a:	8b 00                	mov    (%rax),%eax
   1ab2c:	89 06                	mov    %eax,(%rsi)
   1ab2e:	eb 5f                	jmp    1ab8f <__find_arguments+0x1c31>
   1ab30:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ab34:	48 8b 00             	mov    (%rax),%rax
   1ab37:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1ab3a:	48 63 d2             	movslq %edx,%rdx
   1ab3d:	48 c1 e2 04          	shl    $0x4,%rdx
   1ab41:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   1ab45:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ab49:	8b 00                	mov    (%rax),%eax
   1ab4b:	83 f8 2f             	cmp    $0x2f,%eax
   1ab4e:	77 24                	ja     1ab74 <__find_arguments+0x1c16>
   1ab50:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ab54:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1ab58:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ab5c:	8b 00                	mov    (%rax),%eax
   1ab5e:	89 c0                	mov    %eax,%eax
   1ab60:	48 01 d0             	add    %rdx,%rax
   1ab63:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1ab67:	8b 12                	mov    (%rdx),%edx
   1ab69:	8d 4a 08             	lea    0x8(%rdx),%ecx
   1ab6c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1ab70:	89 0a                	mov    %ecx,(%rdx)
   1ab72:	eb 14                	jmp    1ab88 <__find_arguments+0x1c2a>
   1ab74:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ab78:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ab7c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1ab80:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1ab84:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1ab88:	48 8b 00             	mov    (%rax),%rax
   1ab8b:	48 89 06             	mov    %rax,(%rsi)
   1ab8e:	90                   	nop
   1ab8f:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
   1ab93:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1ab96:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   1ab99:	0f 8e 98 f6 ff ff    	jle    1a237 <__find_arguments+0x12d9>
   1ab9f:	eb 4c                	jmp    1abed <__find_arguments+0x1c8f>
   1aba1:	90                   	nop
   1aba2:	eb 37                	jmp    1abdb <__find_arguments+0x1c7d>
   1aba4:	90                   	nop
   1aba5:	eb 34                	jmp    1abdb <__find_arguments+0x1c7d>
   1aba7:	90                   	nop
   1aba8:	eb 31                	jmp    1abdb <__find_arguments+0x1c7d>
   1abaa:	90                   	nop
   1abab:	eb 2e                	jmp    1abdb <__find_arguments+0x1c7d>
   1abad:	90                   	nop
   1abae:	eb 2b                	jmp    1abdb <__find_arguments+0x1c7d>
   1abb0:	90                   	nop
   1abb1:	eb 28                	jmp    1abdb <__find_arguments+0x1c7d>
   1abb3:	90                   	nop
   1abb4:	eb 25                	jmp    1abdb <__find_arguments+0x1c7d>
   1abb6:	90                   	nop
   1abb7:	eb 22                	jmp    1abdb <__find_arguments+0x1c7d>
   1abb9:	90                   	nop
   1abba:	eb 1f                	jmp    1abdb <__find_arguments+0x1c7d>
   1abbc:	90                   	nop
   1abbd:	eb 1c                	jmp    1abdb <__find_arguments+0x1c7d>
   1abbf:	90                   	nop
   1abc0:	eb 19                	jmp    1abdb <__find_arguments+0x1c7d>
   1abc2:	90                   	nop
   1abc3:	eb 16                	jmp    1abdb <__find_arguments+0x1c7d>
   1abc5:	90                   	nop
   1abc6:	eb 13                	jmp    1abdb <__find_arguments+0x1c7d>
   1abc8:	90                   	nop
   1abc9:	eb 10                	jmp    1abdb <__find_arguments+0x1c7d>
   1abcb:	90                   	nop
   1abcc:	eb 0d                	jmp    1abdb <__find_arguments+0x1c7d>
   1abce:	90                   	nop
   1abcf:	eb 0a                	jmp    1abdb <__find_arguments+0x1c7d>
   1abd1:	90                   	nop
   1abd2:	eb 07                	jmp    1abdb <__find_arguments+0x1c7d>
   1abd4:	90                   	nop
   1abd5:	eb 04                	jmp    1abdb <__find_arguments+0x1c7d>
   1abd7:	90                   	nop
   1abd8:	eb 01                	jmp    1abdb <__find_arguments+0x1c7d>
   1abda:	90                   	nop
   1abdb:	e8 c4 9c ff ff       	callq  148a4 <__errno>
   1abe0:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1abe6:	c7 45 c0 ff ff ff ff 	movl   $0xffffffff,-0x40(%rbp)
   1abed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1abf1:	48 85 c0             	test   %rax,%rax
   1abf4:	74 21                	je     1ac17 <__find_arguments+0x1cb9>
   1abf6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1abfa:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1abfe:	48 39 c2             	cmp    %rax,%rdx
   1ac01:	74 14                	je     1ac17 <__find_arguments+0x1cb9>
   1ac03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ac07:	48 89 c7             	mov    %rax,%rdi
   1ac0a:	e8 30 63 ff ff       	callq  10f3f <dlfree>
   1ac0f:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   1ac16:	00 
   1ac17:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1ac1a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   1ac1e:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1ac25:	00 00 
   1ac27:	74 05                	je     1ac2e <__find_arguments+0x1cd0>
   1ac29:	e8 5e 08 ff ff       	callq  b48c <__stack_chk_fail>
   1ac2e:	c9                   	leaveq 
   1ac2f:	c3                   	retq   

000000000001ac30 <__grow_type_table>:
   1ac30:	55                   	push   %rbp
   1ac31:	48 89 e5             	mov    %rsp,%rbp
   1ac34:	48 83 ec 30          	sub    $0x30,%rsp
   1ac38:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ac3c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ac40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac44:	48 8b 00             	mov    (%rax),%rax
   1ac47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1ac4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ac4f:	8b 00                	mov    (%rax),%eax
   1ac51:	01 c0                	add    %eax,%eax
   1ac53:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1ac56:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)
   1ac5d:	7f 07                	jg     1ac66 <__grow_type_table+0x36>
   1ac5f:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)
   1ac66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ac6a:	8b 00                	mov    (%rax),%eax
   1ac6c:	83 f8 08             	cmp    $0x8,%eax
   1ac6f:	75 4e                	jne    1acbf <__grow_type_table+0x8f>
   1ac71:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1ac74:	48 98                	cltq   
   1ac76:	48 89 c7             	mov    %rax,%rdi
   1ac79:	e8 ca 57 ff ff       	callq  10448 <dlmalloc>
   1ac7e:	48 89 c2             	mov    %rax,%rdx
   1ac81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac85:	48 89 10             	mov    %rdx,(%rax)
   1ac88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac8c:	48 8b 00             	mov    (%rax),%rax
   1ac8f:	48 85 c0             	test   %rax,%rax
   1ac92:	75 0a                	jne    1ac9e <__grow_type_table+0x6e>
   1ac94:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1ac99:	e9 b9 00 00 00       	jmpq   1ad57 <__grow_type_table+0x127>
   1ac9e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1aca2:	8b 00                	mov    (%rax),%eax
   1aca4:	48 63 d0             	movslq %eax,%rdx
   1aca7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1acab:	48 8b 00             	mov    (%rax),%rax
   1acae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1acb2:	48 89 ce             	mov    %rcx,%rsi
   1acb5:	48 89 c7             	mov    %rax,%rdi
   1acb8:	e8 85 2a 00 00       	callq  1d742 <memmove>
   1acbd:	eb 58                	jmp    1ad17 <__grow_type_table+0xe7>
   1acbf:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1acc2:	48 98                	cltq   
   1acc4:	48 89 c7             	mov    %rax,%rdi
   1acc7:	e8 7c 57 ff ff       	callq  10448 <dlmalloc>
   1accc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1acd0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1acd5:	75 07                	jne    1acde <__grow_type_table+0xae>
   1acd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1acdc:	eb 79                	jmp    1ad57 <__grow_type_table+0x127>
   1acde:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ace2:	8b 00                	mov    (%rax),%eax
   1ace4:	48 63 d0             	movslq %eax,%rdx
   1ace7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aceb:	48 8b 08             	mov    (%rax),%rcx
   1acee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1acf2:	48 89 ce             	mov    %rcx,%rsi
   1acf5:	48 89 c7             	mov    %rax,%rdi
   1acf8:	e8 45 2a 00 00       	callq  1d742 <memmove>
   1acfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ad01:	48 8b 00             	mov    (%rax),%rax
   1ad04:	48 89 c7             	mov    %rax,%rdi
   1ad07:	e8 33 62 ff ff       	callq  10f3f <dlfree>
   1ad0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ad10:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ad14:	48 89 10             	mov    %rdx,(%rax)
   1ad17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ad1b:	8b 00                	mov    (%rax),%eax
   1ad1d:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1ad20:	29 c2                	sub    %eax,%edx
   1ad22:	89 d0                	mov    %edx,%eax
   1ad24:	48 98                	cltq   
   1ad26:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ad2a:	48 8b 0a             	mov    (%rdx),%rcx
   1ad2d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1ad31:	8b 12                	mov    (%rdx),%edx
   1ad33:	48 63 d2             	movslq %edx,%rdx
   1ad36:	48 01 d1             	add    %rdx,%rcx
   1ad39:	48 89 c2             	mov    %rax,%rdx
   1ad3c:	be 00 00 00 00       	mov    $0x0,%esi
   1ad41:	48 89 cf             	mov    %rcx,%rdi
   1ad44:	e8 ec 89 ff ff       	callq  13735 <memset>
   1ad49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ad4d:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1ad50:	89 10                	mov    %edx,(%rax)
   1ad52:	b8 00 00 00 00       	mov    $0x0,%eax
   1ad57:	c9                   	leaveq 
   1ad58:	c3                   	retq   

000000000001ad59 <exponent>:
   1ad59:	55                   	push   %rbp
   1ad5a:	48 89 e5             	mov    %rsp,%rbp
   1ad5d:	48 83 ec 30          	sub    $0x30,%rsp
   1ad61:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ad65:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   1ad68:	89 55 d0             	mov    %edx,-0x30(%rbp)
   1ad6b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ad72:	00 00 
   1ad74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ad78:	31 c0                	xor    %eax,%eax
   1ad7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ad7e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ad82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ad86:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ad8a:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1ad8e:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1ad91:	88 10                	mov    %dl,(%rax)
   1ad93:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1ad97:	79 14                	jns    1adad <exponent+0x54>
   1ad99:	f7 5d d4             	negl   -0x2c(%rbp)
   1ad9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ada0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ada4:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1ada8:	c6 00 2d             	movb   $0x2d,(%rax)
   1adab:	eb 0f                	jmp    1adbc <exponent+0x63>
   1adad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1adb1:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1adb5:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1adb9:	c6 00 2b             	movb   $0x2b,(%rax)
   1adbc:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
   1adc0:	48 83 c0 06          	add    $0x6,%rax
   1adc4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1adc8:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
   1adcc:	0f 8e 98 00 00 00    	jle    1ae6a <exponent+0x111>
   1add2:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   1add5:	ba 67 66 66 66       	mov    $0x66666667,%edx
   1adda:	89 c8                	mov    %ecx,%eax
   1addc:	f7 ea                	imul   %edx
   1adde:	c1 fa 02             	sar    $0x2,%edx
   1ade1:	89 c8                	mov    %ecx,%eax
   1ade3:	c1 f8 1f             	sar    $0x1f,%eax
   1ade6:	29 c2                	sub    %eax,%edx
   1ade8:	89 d0                	mov    %edx,%eax
   1adea:	c1 e0 02             	shl    $0x2,%eax
   1aded:	01 d0                	add    %edx,%eax
   1adef:	01 c0                	add    %eax,%eax
   1adf1:	29 c1                	sub    %eax,%ecx
   1adf3:	89 ca                	mov    %ecx,%edx
   1adf5:	89 d0                	mov    %edx,%eax
   1adf7:	83 c0 30             	add    $0x30,%eax
   1adfa:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1adff:	89 c2                	mov    %eax,%edx
   1ae01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae05:	88 10                	mov    %dl,(%rax)
   1ae07:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   1ae0a:	ba 67 66 66 66       	mov    $0x66666667,%edx
   1ae0f:	89 c8                	mov    %ecx,%eax
   1ae11:	f7 ea                	imul   %edx
   1ae13:	c1 fa 02             	sar    $0x2,%edx
   1ae16:	89 c8                	mov    %ecx,%eax
   1ae18:	c1 f8 1f             	sar    $0x1f,%eax
   1ae1b:	29 c2                	sub    %eax,%edx
   1ae1d:	89 d0                	mov    %edx,%eax
   1ae1f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1ae22:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
   1ae26:	7f aa                	jg     1add2 <exponent+0x79>
   1ae28:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1ae2b:	83 c0 30             	add    $0x30,%eax
   1ae2e:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1ae33:	89 c2                	mov    %eax,%edx
   1ae35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae39:	88 10                	mov    %dl,(%rax)
   1ae3b:	eb 1d                	jmp    1ae5a <exponent+0x101>
   1ae3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ae41:	48 8d 42 01          	lea    0x1(%rdx),%rax
   1ae45:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1ae49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae4d:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1ae51:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   1ae55:	0f b6 12             	movzbl (%rdx),%edx
   1ae58:	88 10                	mov    %dl,(%rax)
   1ae5a:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
   1ae5e:	48 83 c0 06          	add    $0x6,%rax
   1ae62:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1ae66:	72 d5                	jb     1ae3d <exponent+0xe4>
   1ae68:	eb 31                	jmp    1ae9b <exponent+0x142>
   1ae6a:	83 7d d0 65          	cmpl   $0x65,-0x30(%rbp)
   1ae6e:	74 06                	je     1ae76 <exponent+0x11d>
   1ae70:	83 7d d0 45          	cmpl   $0x45,-0x30(%rbp)
   1ae74:	75 0f                	jne    1ae85 <exponent+0x12c>
   1ae76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae7a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ae7e:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1ae82:	c6 00 30             	movb   $0x30,(%rax)
   1ae85:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1ae88:	8d 48 30             	lea    0x30(%rax),%ecx
   1ae8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae8f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ae93:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1ae97:	89 ca                	mov    %ecx,%edx
   1ae99:	88 10                	mov    %dl,(%rax)
   1ae9b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1ae9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aea3:	48 29 c2             	sub    %rax,%rdx
   1aea6:	48 89 d0             	mov    %rdx,%rax
   1aea9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1aead:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1aeb4:	00 00 
   1aeb6:	74 05                	je     1aebd <exponent+0x164>
   1aeb8:	e8 cf 05 ff ff       	callq  b48c <__stack_chk_fail>
   1aebd:	c9                   	leaveq 
   1aebe:	c3                   	retq   

000000000001aebf <__rv_alloc_D2A>:
   1aebf:	55                   	push   %rbp
   1aec0:	48 89 e5             	mov    %rsp,%rbp
   1aec3:	48 83 ec 20          	sub    $0x20,%rsp
   1aec7:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1aeca:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%rbp)
   1aed1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1aed8:	eb 07                	jmp    1aee1 <__rv_alloc_D2A+0x22>
   1aeda:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   1aede:	d1 65 f0             	shll   -0x10(%rbp)
   1aee1:	8b 45 f0             	mov    -0x10(%rbp),%eax
   1aee4:	48 98                	cltq   
   1aee6:	48 8d 50 18          	lea    0x18(%rax),%rdx
   1aeea:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1aeed:	48 98                	cltq   
   1aeef:	48 39 c2             	cmp    %rax,%rdx
   1aef2:	76 e6                	jbe    1aeda <__rv_alloc_D2A+0x1b>
   1aef4:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1aef7:	89 c7                	mov    %eax,%edi
   1aef9:	e8 75 2a 00 00       	callq  1d973 <__Balloc_D2A>
   1aefe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1af02:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1af07:	75 07                	jne    1af10 <__rv_alloc_D2A+0x51>
   1af09:	b8 00 00 00 00       	mov    $0x0,%eax
   1af0e:	eb 11                	jmp    1af21 <__rv_alloc_D2A+0x62>
   1af10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af14:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1af17:	89 10                	mov    %edx,(%rax)
   1af19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af1d:	48 83 c0 04          	add    $0x4,%rax
   1af21:	c9                   	leaveq 
   1af22:	c3                   	retq   

000000000001af23 <__nrv_alloc_D2A>:
   1af23:	55                   	push   %rbp
   1af24:	48 89 e5             	mov    %rsp,%rbp
   1af27:	48 83 ec 30          	sub    $0x30,%rsp
   1af2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1af2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1af33:	89 55 dc             	mov    %edx,-0x24(%rbp)
   1af36:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1af39:	89 c7                	mov    %eax,%edi
   1af3b:	e8 7f ff ff ff       	callq  1aebf <__rv_alloc_D2A>
   1af40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1af44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1af4c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1af51:	75 0c                	jne    1af5f <__nrv_alloc_D2A+0x3c>
   1af53:	b8 00 00 00 00       	mov    $0x0,%eax
   1af58:	eb 3b                	jmp    1af95 <__nrv_alloc_D2A+0x72>
   1af5a:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   1af5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1af63:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1af67:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1af6b:	0f b6 10             	movzbl (%rax),%edx
   1af6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1af72:	88 10                	mov    %dl,(%rax)
   1af74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1af78:	0f b6 00             	movzbl (%rax),%eax
   1af7b:	84 c0                	test   %al,%al
   1af7d:	75 db                	jne    1af5a <__nrv_alloc_D2A+0x37>
   1af7f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1af84:	74 0b                	je     1af91 <__nrv_alloc_D2A+0x6e>
   1af86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1af8e:	48 89 10             	mov    %rdx,(%rax)
   1af91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af95:	c9                   	leaveq 
   1af96:	c3                   	retq   

000000000001af97 <__freedtoa>:
   1af97:	55                   	push   %rbp
   1af98:	48 89 e5             	mov    %rsp,%rbp
   1af9b:	48 83 ec 20          	sub    $0x20,%rsp
   1af9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1afa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afa7:	48 83 e8 04          	sub    $0x4,%rax
   1afab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1afaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afb3:	8b 10                	mov    (%rax),%edx
   1afb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afb9:	89 50 08             	mov    %edx,0x8(%rax)
   1afbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afc0:	8b 40 08             	mov    0x8(%rax),%eax
   1afc3:	ba 01 00 00 00       	mov    $0x1,%edx
   1afc8:	89 c1                	mov    %eax,%ecx
   1afca:	d3 e2                	shl    %cl,%edx
   1afcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afd0:	89 50 0c             	mov    %edx,0xc(%rax)
   1afd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afd7:	48 89 c7             	mov    %rax,%rdi
   1afda:	e8 db 2a 00 00       	callq  1daba <__Bfree_D2A>
   1afdf:	90                   	nop
   1afe0:	c9                   	leaveq 
   1afe1:	c3                   	retq   

000000000001afe2 <__quorem_D2A>:
   1afe2:	55                   	push   %rbp
   1afe3:	48 89 e5             	mov    %rsp,%rbp
   1afe6:	48 83 ec 60          	sub    $0x60,%rsp
   1afea:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1afee:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1aff2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1aff6:	8b 40 14             	mov    0x14(%rax),%eax
   1aff9:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1affc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b000:	8b 40 14             	mov    0x14(%rax),%eax
   1b003:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   1b006:	7e 0a                	jle    1b012 <__quorem_D2A+0x30>
   1b008:	b8 00 00 00 00       	mov    $0x0,%eax
   1b00d:	e9 cb 02 00 00       	jmpq   1b2dd <__quorem_D2A+0x2fb>
   1b012:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1b016:	48 83 c0 18          	add    $0x18,%rax
   1b01a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b01e:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   1b022:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1b025:	48 98                	cltq   
   1b027:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1b02e:	00 
   1b02f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b033:	48 01 d0             	add    %rdx,%rax
   1b036:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b03a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b03e:	48 83 c0 18          	add    $0x18,%rax
   1b042:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1b046:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1b049:	48 98                	cltq   
   1b04b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1b052:	00 
   1b053:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b057:	48 01 d0             	add    %rdx,%rax
   1b05a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1b05e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b062:	8b 00                	mov    (%rax),%eax
   1b064:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b068:	8b 12                	mov    (%rdx),%edx
   1b06a:	8d 4a 01             	lea    0x1(%rdx),%ecx
   1b06d:	ba 00 00 00 00       	mov    $0x0,%edx
   1b072:	f7 f1                	div    %ecx
   1b074:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1b077:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   1b07b:	0f 84 09 01 00 00    	je     1b18a <__quorem_D2A+0x1a8>
   1b081:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   1b088:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   1b08f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b093:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1b097:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   1b09b:	8b 00                	mov    (%rax),%eax
   1b09d:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1b0a0:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1b0a3:	0f b7 c0             	movzwl %ax,%eax
   1b0a6:	0f af 45 c0          	imul   -0x40(%rbp),%eax
   1b0aa:	89 c2                	mov    %eax,%edx
   1b0ac:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1b0af:	01 d0                	add    %edx,%eax
   1b0b1:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1b0b4:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1b0b7:	c1 e8 10             	shr    $0x10,%eax
   1b0ba:	0f af 45 c0          	imul   -0x40(%rbp),%eax
   1b0be:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1b0c1:	c1 ea 10             	shr    $0x10,%edx
   1b0c4:	01 d0                	add    %edx,%eax
   1b0c6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1b0c9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1b0cc:	c1 e8 10             	shr    $0x10,%eax
   1b0cf:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1b0d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b0d6:	8b 00                	mov    (%rax),%eax
   1b0d8:	0f b7 d0             	movzwl %ax,%edx
   1b0db:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1b0de:	0f b7 c0             	movzwl %ax,%eax
   1b0e1:	29 c2                	sub    %eax,%edx
   1b0e3:	89 d0                	mov    %edx,%eax
   1b0e5:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   1b0e8:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1b0eb:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1b0ee:	c1 e8 10             	shr    $0x10,%eax
   1b0f1:	83 e0 01             	and    $0x1,%eax
   1b0f4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1b0f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b0fb:	8b 00                	mov    (%rax),%eax
   1b0fd:	c1 e8 10             	shr    $0x10,%eax
   1b100:	89 c2                	mov    %eax,%edx
   1b102:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1b105:	0f b7 c0             	movzwl %ax,%eax
   1b108:	29 c2                	sub    %eax,%edx
   1b10a:	89 d0                	mov    %edx,%eax
   1b10c:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   1b10f:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1b112:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1b115:	c1 e8 10             	shr    $0x10,%eax
   1b118:	83 e0 01             	and    $0x1,%eax
   1b11b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1b11e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b122:	48 83 c0 02          	add    $0x2,%rax
   1b126:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1b129:	66 89 10             	mov    %dx,(%rax)
   1b12c:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1b12f:	89 c2                	mov    %eax,%edx
   1b131:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b135:	66 89 10             	mov    %dx,(%rax)
   1b138:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   1b13d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b141:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1b145:	0f 86 44 ff ff ff    	jbe    1b08f <__quorem_D2A+0xad>
   1b14b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b14f:	8b 00                	mov    (%rax),%eax
   1b151:	85 c0                	test   %eax,%eax
   1b153:	75 35                	jne    1b18a <__quorem_D2A+0x1a8>
   1b155:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b159:	48 83 c0 18          	add    $0x18,%rax
   1b15d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1b161:	eb 04                	jmp    1b167 <__quorem_D2A+0x185>
   1b163:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   1b167:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   1b16c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b170:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1b174:	76 0a                	jbe    1b180 <__quorem_D2A+0x19e>
   1b176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b17a:	8b 00                	mov    (%rax),%eax
   1b17c:	85 c0                	test   %eax,%eax
   1b17e:	74 e3                	je     1b163 <__quorem_D2A+0x181>
   1b180:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b184:	8b 55 bc             	mov    -0x44(%rbp),%edx
   1b187:	89 50 14             	mov    %edx,0x14(%rax)
   1b18a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1b18e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b192:	48 89 d6             	mov    %rdx,%rsi
   1b195:	48 89 c7             	mov    %rax,%rdi
   1b198:	e8 08 33 00 00       	callq  1e4a5 <__cmp_D2A>
   1b19d:	85 c0                	test   %eax,%eax
   1b19f:	0f 88 35 01 00 00    	js     1b2da <__quorem_D2A+0x2f8>
   1b1a5:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
   1b1a9:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   1b1b0:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   1b1b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b1bb:	48 83 c0 18          	add    $0x18,%rax
   1b1bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1b1c3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1b1c7:	48 83 c0 18          	add    $0x18,%rax
   1b1cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b1cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b1d3:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1b1d7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   1b1db:	8b 00                	mov    (%rax),%eax
   1b1dd:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1b1e0:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1b1e3:	0f b7 d0             	movzwl %ax,%edx
   1b1e6:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1b1e9:	01 d0                	add    %edx,%eax
   1b1eb:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1b1ee:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1b1f1:	c1 e8 10             	shr    $0x10,%eax
   1b1f4:	89 c2                	mov    %eax,%edx
   1b1f6:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1b1f9:	c1 e8 10             	shr    $0x10,%eax
   1b1fc:	01 d0                	add    %edx,%eax
   1b1fe:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1b201:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1b204:	c1 e8 10             	shr    $0x10,%eax
   1b207:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1b20a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b20e:	8b 00                	mov    (%rax),%eax
   1b210:	0f b7 d0             	movzwl %ax,%edx
   1b213:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1b216:	0f b7 c0             	movzwl %ax,%eax
   1b219:	29 c2                	sub    %eax,%edx
   1b21b:	89 d0                	mov    %edx,%eax
   1b21d:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   1b220:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1b223:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1b226:	c1 e8 10             	shr    $0x10,%eax
   1b229:	83 e0 01             	and    $0x1,%eax
   1b22c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1b22f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b233:	8b 00                	mov    (%rax),%eax
   1b235:	c1 e8 10             	shr    $0x10,%eax
   1b238:	89 c2                	mov    %eax,%edx
   1b23a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1b23d:	0f b7 c0             	movzwl %ax,%eax
   1b240:	29 c2                	sub    %eax,%edx
   1b242:	89 d0                	mov    %edx,%eax
   1b244:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   1b247:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1b24a:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1b24d:	c1 e8 10             	shr    $0x10,%eax
   1b250:	83 e0 01             	and    $0x1,%eax
   1b253:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1b256:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b25a:	48 83 c0 02          	add    $0x2,%rax
   1b25e:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1b261:	66 89 10             	mov    %dx,(%rax)
   1b264:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1b267:	89 c2                	mov    %eax,%edx
   1b269:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b26d:	66 89 10             	mov    %dx,(%rax)
   1b270:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   1b275:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b279:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1b27d:	0f 86 4c ff ff ff    	jbe    1b1cf <__quorem_D2A+0x1ed>
   1b283:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b287:	48 83 c0 18          	add    $0x18,%rax
   1b28b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1b28f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1b292:	48 98                	cltq   
   1b294:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1b29b:	00 
   1b29c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2a0:	48 01 d0             	add    %rdx,%rax
   1b2a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1b2a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b2ab:	8b 00                	mov    (%rax),%eax
   1b2ad:	85 c0                	test   %eax,%eax
   1b2af:	75 29                	jne    1b2da <__quorem_D2A+0x2f8>
   1b2b1:	eb 04                	jmp    1b2b7 <__quorem_D2A+0x2d5>
   1b2b3:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   1b2b7:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   1b2bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b2c0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1b2c4:	76 0a                	jbe    1b2d0 <__quorem_D2A+0x2ee>
   1b2c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b2ca:	8b 00                	mov    (%rax),%eax
   1b2cc:	85 c0                	test   %eax,%eax
   1b2ce:	74 e3                	je     1b2b3 <__quorem_D2A+0x2d1>
   1b2d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b2d4:	8b 55 bc             	mov    -0x44(%rbp),%edx
   1b2d7:	89 50 14             	mov    %edx,0x14(%rax)
   1b2da:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1b2dd:	c9                   	leaveq 
   1b2de:	c3                   	retq   

000000000001b2df <__dtoa>:
   1b2df:	55                   	push   %rbp
   1b2e0:	48 89 e5             	mov    %rsp,%rbp
   1b2e3:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   1b2ea:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
   1b2f1:	ff 
   1b2f2:	89 bd 24 ff ff ff    	mov    %edi,-0xdc(%rbp)
   1b2f8:	89 b5 20 ff ff ff    	mov    %esi,-0xe0(%rbp)
   1b2fe:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   1b305:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   1b30c:	4c 89 85 08 ff ff ff 	mov    %r8,-0xf8(%rbp)
   1b313:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b31a:	00 00 
   1b31c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b320:	31 c0                	xor    %eax,%eax
   1b322:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
   1b329:	ff 
   1b32a:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1b32f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1b332:	85 c0                	test   %eax,%eax
   1b334:	79 1a                	jns    1b350 <__dtoa+0x71>
   1b336:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1b33d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1b343:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1b346:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   1b34b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1b34e:	eb 0d                	jmp    1b35d <__dtoa+0x7e>
   1b350:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1b357:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1b35d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1b360:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   1b365:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   1b36a:	75 60                	jne    1b3cc <__dtoa+0xed>
   1b36c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1b373:	c7 00 0f 27 00 00    	movl   $0x270f,(%rax)
   1b379:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1b37c:	85 c0                	test   %eax,%eax
   1b37e:	75 2c                	jne    1b3ac <__dtoa+0xcd>
   1b380:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1b383:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1b388:	85 c0                	test   %eax,%eax
   1b38a:	75 20                	jne    1b3ac <__dtoa+0xcd>
   1b38c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b393:	ba 08 00 00 00       	mov    $0x8,%edx
   1b398:	48 89 c6             	mov    %rax,%rsi
   1b39b:	48 8d 3d ae 18 02 00 	lea    0x218ae(%rip),%rdi        # 3cc50 <xdigs_upper.3167+0x10>
   1b3a2:	e8 7c fb ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1b3a7:	e9 d3 15 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1b3ac:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b3b3:	ba 03 00 00 00       	mov    $0x3,%edx
   1b3b8:	48 89 c6             	mov    %rax,%rsi
   1b3bb:	48 8d 3d 97 18 02 00 	lea    0x21897(%rip),%rdi        # 3cc59 <xdigs_upper.3167+0x19>
   1b3c2:	e8 5c fb ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1b3c7:	e9 b3 15 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1b3cc:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1b3d1:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1b3d5:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1b3d9:	7a 37                	jp     1b412 <__dtoa+0x133>
   1b3db:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1b3df:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1b3e3:	75 2d                	jne    1b412 <__dtoa+0x133>
   1b3e5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1b3ec:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1b3f2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b3f9:	ba 01 00 00 00       	mov    $0x1,%edx
   1b3fe:	48 89 c6             	mov    %rax,%rsi
   1b401:	48 8d 3d 55 18 02 00 	lea    0x21855(%rip),%rdi        # 3cc5d <xdigs_upper.3167+0x1d>
   1b408:	e8 16 fb ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1b40d:	e9 6d 15 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1b412:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b416:	48 8d 8d 34 ff ff ff 	lea    -0xcc(%rbp),%rcx
   1b41d:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
   1b424:	48 89 ce             	mov    %rcx,%rsi
   1b427:	48 89 d7             	mov    %rdx,%rdi
   1b42a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1b431:	f2 0f 10 85 00 ff ff 	movsd  -0x100(%rbp),%xmm0
   1b438:	ff 
   1b439:	e8 21 35 00 00       	callq  1e95f <__d2b_D2A>
   1b43e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1b442:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1b447:	75 0a                	jne    1b453 <__dtoa+0x174>
   1b449:	b8 00 00 00 00       	mov    $0x0,%eax
   1b44e:	e9 2c 15 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1b453:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1b456:	c1 e8 14             	shr    $0x14,%eax
   1b459:	25 ff 07 00 00       	and    $0x7ff,%eax
   1b45e:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1b464:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1b46b:	74 39                	je     1b4a6 <__dtoa+0x1c7>
   1b46d:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1b472:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1b477:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1b47a:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1b47f:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1b482:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1b485:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   1b48a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1b48d:	81 ad 48 ff ff ff ff 	subl   $0x3ff,-0xb8(%rbp)
   1b494:	03 00 00 
   1b497:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
   1b49e:	00 00 00 
   1b4a1:	e9 ab 00 00 00       	jmpq   1b551 <__dtoa+0x272>
   1b4a6:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   1b4ac:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   1b4b2:	01 d0                	add    %edx,%eax
   1b4b4:	05 32 04 00 00       	add    $0x432,%eax
   1b4b9:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1b4bf:	83 bd 48 ff ff ff 20 	cmpl   $0x20,-0xb8(%rbp)
   1b4c6:	7e 2a                	jle    1b4f2 <__dtoa+0x213>
   1b4c8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1b4cb:	b8 40 00 00 00       	mov    $0x40,%eax
   1b4d0:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   1b4d6:	89 d6                	mov    %edx,%esi
   1b4d8:	89 c1                	mov    %eax,%ecx
   1b4da:	d3 e6                	shl    %cl,%esi
   1b4dc:	8b 55 e0             	mov    -0x20(%rbp),%edx
   1b4df:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b4e5:	83 e8 20             	sub    $0x20,%eax
   1b4e8:	89 c1                	mov    %eax,%ecx
   1b4ea:	d3 ea                	shr    %cl,%edx
   1b4ec:	89 d0                	mov    %edx,%eax
   1b4ee:	09 f0                	or     %esi,%eax
   1b4f0:	eb 14                	jmp    1b506 <__dtoa+0x227>
   1b4f2:	8b 55 e0             	mov    -0x20(%rbp),%edx
   1b4f5:	b8 20 00 00 00       	mov    $0x20,%eax
   1b4fa:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   1b500:	89 c1                	mov    %eax,%ecx
   1b502:	d3 e2                	shl    %cl,%edx
   1b504:	89 d0                	mov    %edx,%eax
   1b506:	89 45 80             	mov    %eax,-0x80(%rbp)
   1b509:	8b 45 80             	mov    -0x80(%rbp),%eax
   1b50c:	48 85 c0             	test   %rax,%rax
   1b50f:	78 07                	js     1b518 <__dtoa+0x239>
   1b511:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   1b516:	eb 15                	jmp    1b52d <__dtoa+0x24e>
   1b518:	48 89 c2             	mov    %rax,%rdx
   1b51b:	48 d1 ea             	shr    %rdx
   1b51e:	83 e0 01             	and    $0x1,%eax
   1b521:	48 09 c2             	or     %rax,%rdx
   1b524:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
   1b529:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   1b52d:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1b532:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1b535:	2d 00 00 f0 01       	sub    $0x1f00000,%eax
   1b53a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1b53d:	81 ad 48 ff ff ff 33 	subl   $0x433,-0xb8(%rbp)
   1b544:	04 00 00 
   1b547:	c7 85 7c ff ff ff 01 	movl   $0x1,-0x84(%rbp)
   1b54e:	00 00 00 
   1b551:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1b556:	f2 0f 10 0d 02 17 02 	movsd  0x21702(%rip),%xmm1        # 3cc60 <xdigs_upper.3167+0x20>
   1b55d:	00 
   1b55e:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1b562:	f2 0f 10 0d fe 16 02 	movsd  0x216fe(%rip),%xmm1        # 3cc68 <xdigs_upper.3167+0x28>
   1b569:	00 
   1b56a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1b56e:	f2 0f 10 0d fa 16 02 	movsd  0x216fa(%rip),%xmm1        # 3cc70 <xdigs_upper.3167+0x30>
   1b575:	00 
   1b576:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   1b57a:	f2 0f 2a 85 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm0
   1b581:	ff 
   1b582:	f2 0f 10 15 ee 16 02 	movsd  0x216ee(%rip),%xmm2        # 3cc78 <xdigs_upper.3167+0x38>
   1b589:	00 
   1b58a:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   1b58e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1b592:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   1b597:	f2 0f 10 45 b8       	movsd  -0x48(%rbp),%xmm0
   1b59c:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1b5a0:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   1b5a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1b5aa:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   1b5af:	76 1d                	jbe    1b5ce <__dtoa+0x2ef>
   1b5b1:	f2 0f 2a 85 5c ff ff 	cvtsi2sdl -0xa4(%rbp),%xmm0
   1b5b8:	ff 
   1b5b9:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   1b5be:	7a 07                	jp     1b5c7 <__dtoa+0x2e8>
   1b5c0:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   1b5c5:	74 07                	je     1b5ce <__dtoa+0x2ef>
   1b5c7:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   1b5ce:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
   1b5d5:	00 00 00 
   1b5d8:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1b5df:	78 41                	js     1b622 <__dtoa+0x343>
   1b5e1:	83 bd 5c ff ff ff 16 	cmpl   $0x16,-0xa4(%rbp)
   1b5e8:	7f 38                	jg     1b622 <__dtoa+0x343>
   1b5ea:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1b5ef:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b5f5:	48 98                	cltq   
   1b5f7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b5fe:	00 
   1b5ff:	48 8d 05 9a 17 02 00 	lea    0x2179a(%rip),%rax        # 3cda0 <__tens_D2A>
   1b606:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1b60b:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1b60f:	76 07                	jbe    1b618 <__dtoa+0x339>
   1b611:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   1b618:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
   1b61f:	00 00 00 
   1b622:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1b628:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   1b62e:	83 e8 01             	sub    $0x1,%eax
   1b631:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1b637:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1b63e:	78 18                	js     1b658 <__dtoa+0x379>
   1b640:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   1b647:	00 00 00 
   1b64a:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1b650:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   1b656:	eb 18                	jmp    1b670 <__dtoa+0x391>
   1b658:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1b65e:	f7 d8                	neg    %eax
   1b660:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1b666:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   1b66d:	00 00 00 
   1b670:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1b677:	78 24                	js     1b69d <__dtoa+0x3be>
   1b679:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
   1b680:	00 00 00 
   1b683:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b689:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
   1b68f:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b695:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   1b69b:	eb 24                	jmp    1b6c1 <__dtoa+0x3e2>
   1b69d:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b6a3:	29 85 3c ff ff ff    	sub    %eax,-0xc4(%rbp)
   1b6a9:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b6af:	f7 d8                	neg    %eax
   1b6b1:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1b6b7:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   1b6be:	00 00 00 
   1b6c1:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
   1b6c8:	78 09                	js     1b6d3 <__dtoa+0x3f4>
   1b6ca:	83 bd 24 ff ff ff 09 	cmpl   $0x9,-0xdc(%rbp)
   1b6d1:	7e 0a                	jle    1b6dd <__dtoa+0x3fe>
   1b6d3:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
   1b6da:	00 00 00 
   1b6dd:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
   1b6e4:	00 00 00 
   1b6e7:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   1b6ee:	7e 11                	jle    1b701 <__dtoa+0x422>
   1b6f0:	83 ad 24 ff ff ff 04 	subl   $0x4,-0xdc(%rbp)
   1b6f7:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
   1b6fe:	00 00 00 
   1b701:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
   1b708:	00 00 00 
   1b70b:	c7 85 54 ff ff ff ff 	movl   $0xffffffff,-0xac(%rbp)
   1b712:	ff ff ff 
   1b715:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   1b71b:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1b721:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   1b728:	0f 87 d2 00 00 00    	ja     1b800 <__dtoa+0x521>
   1b72e:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1b734:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1b73b:	00 
   1b73c:	48 8d 05 75 15 02 00 	lea    0x21575(%rip),%rax        # 3ccb8 <xdigs_upper.3167+0x78>
   1b743:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1b746:	48 63 d0             	movslq %eax,%rdx
   1b749:	48 8d 05 68 15 02 00 	lea    0x21568(%rip),%rax        # 3ccb8 <xdigs_upper.3167+0x78>
   1b750:	48 01 d0             	add    %rdx,%rax
   1b753:	ff e0                	jmpq   *%rax
   1b755:	c7 85 48 ff ff ff 12 	movl   $0x12,-0xb8(%rbp)
   1b75c:	00 00 00 
   1b75f:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%rbp)
   1b766:	00 00 00 
   1b769:	e9 92 00 00 00       	jmpq   1b800 <__dtoa+0x521>
   1b76e:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   1b775:	00 00 00 
   1b778:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
   1b77f:	7f 0a                	jg     1b78b <__dtoa+0x4ac>
   1b781:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
   1b788:	00 00 00 
   1b78b:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   1b791:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1b797:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b79d:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   1b7a3:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   1b7a9:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1b7af:	eb 4f                	jmp    1b800 <__dtoa+0x521>
   1b7b1:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   1b7b8:	00 00 00 
   1b7bb:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
   1b7c1:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b7c7:	01 d0                	add    %edx,%eax
   1b7c9:	83 c0 01             	add    $0x1,%eax
   1b7cc:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1b7d2:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b7d8:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1b7de:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b7e4:	83 e8 01             	sub    $0x1,%eax
   1b7e7:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   1b7ed:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1b7f4:	7f 0a                	jg     1b800 <__dtoa+0x521>
   1b7f6:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   1b7fd:	00 00 00 
   1b800:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b806:	89 c7                	mov    %eax,%edi
   1b808:	e8 b2 f6 ff ff       	callq  1aebf <__rv_alloc_D2A>
   1b80d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1b811:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b815:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1b819:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1b81e:	75 0a                	jne    1b82a <__dtoa+0x54b>
   1b820:	b8 00 00 00 00       	mov    $0x0,%eax
   1b825:	e9 55 11 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1b82a:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1b831:	0f 88 09 05 00 00    	js     1bd40 <__dtoa+0xa61>
   1b837:	83 bd 50 ff ff ff 0e 	cmpl   $0xe,-0xb0(%rbp)
   1b83e:	0f 8f fc 04 00 00    	jg     1bd40 <__dtoa+0xa61>
   1b844:	83 bd 78 ff ff ff 00 	cmpl   $0x0,-0x88(%rbp)
   1b84b:	0f 84 ef 04 00 00    	je     1bd40 <__dtoa+0xa61>
   1b851:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   1b858:	00 00 00 
   1b85b:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1b860:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1b865:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b86b:	89 45 84             	mov    %eax,-0x7c(%rbp)
   1b86e:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   1b874:	89 45 88             	mov    %eax,-0x78(%rbp)
   1b877:	c7 85 4c ff ff ff 02 	movl   $0x2,-0xb4(%rbp)
   1b87e:	00 00 00 
   1b881:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1b888:	0f 8e ce 00 00 00    	jle    1b95c <__dtoa+0x67d>
   1b88e:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b894:	83 e0 0f             	and    $0xf,%eax
   1b897:	48 98                	cltq   
   1b899:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b8a0:	00 
   1b8a1:	48 8d 05 f8 14 02 00 	lea    0x214f8(%rip),%rax        # 3cda0 <__tens_D2A>
   1b8a8:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1b8ad:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   1b8b2:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b8b8:	c1 f8 04             	sar    $0x4,%eax
   1b8bb:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1b8c1:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1b8c7:	83 e0 10             	and    $0x10,%eax
   1b8ca:	85 c0                	test   %eax,%eax
   1b8cc:	74 71                	je     1b93f <__dtoa+0x660>
   1b8ce:	83 a5 58 ff ff ff 0f 	andl   $0xf,-0xa8(%rbp)
   1b8d5:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1b8da:	f2 0f 10 0d 9e 14 02 	movsd  0x2149e(%rip),%xmm1        # 3cd80 <__bigtens_D2A+0x20>
   1b8e1:	00 
   1b8e2:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1b8e6:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1b8eb:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   1b8f2:	eb 4b                	jmp    1b93f <__dtoa+0x660>
   1b8f4:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1b8fa:	83 e0 01             	and    $0x1,%eax
   1b8fd:	85 c0                	test   %eax,%eax
   1b8ff:	74 31                	je     1b932 <__dtoa+0x653>
   1b901:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   1b908:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b90e:	48 98                	cltq   
   1b910:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b917:	00 
   1b918:	48 8d 05 41 14 02 00 	lea    0x21441(%rip),%rax        # 3cd60 <__bigtens_D2A>
   1b91f:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1b924:	f2 0f 10 4d b8       	movsd  -0x48(%rbp),%xmm1
   1b929:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1b92d:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   1b932:	d1 bd 58 ff ff ff    	sarl   -0xa8(%rbp)
   1b938:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1b93f:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1b946:	75 ac                	jne    1b8f4 <__dtoa+0x615>
   1b948:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1b94d:	f2 0f 5e 45 b8       	divsd  -0x48(%rbp),%xmm0
   1b952:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1b957:	e9 a1 00 00 00       	jmpq   1b9fd <__dtoa+0x71e>
   1b95c:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1b962:	f7 d8                	neg    %eax
   1b964:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1b967:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1b96b:	0f 84 8c 00 00 00    	je     1b9fd <__dtoa+0x71e>
   1b971:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1b976:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1b979:	83 e0 0f             	and    $0xf,%eax
   1b97c:	48 98                	cltq   
   1b97e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b985:	00 
   1b986:	48 8d 05 13 14 02 00 	lea    0x21413(%rip),%rax        # 3cda0 <__tens_D2A>
   1b98d:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1b992:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1b996:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1b99b:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1b99e:	c1 f8 04             	sar    $0x4,%eax
   1b9a1:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1b9a7:	eb 4b                	jmp    1b9f4 <__dtoa+0x715>
   1b9a9:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1b9af:	83 e0 01             	and    $0x1,%eax
   1b9b2:	85 c0                	test   %eax,%eax
   1b9b4:	74 31                	je     1b9e7 <__dtoa+0x708>
   1b9b6:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   1b9bd:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1b9c2:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1b9c8:	48 98                	cltq   
   1b9ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b9d1:	00 
   1b9d2:	48 8d 05 87 13 02 00 	lea    0x21387(%rip),%rax        # 3cd60 <__bigtens_D2A>
   1b9d9:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1b9de:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1b9e2:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1b9e7:	d1 bd 58 ff ff ff    	sarl   -0xa8(%rbp)
   1b9ed:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1b9f4:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1b9fb:	75 ac                	jne    1b9a9 <__dtoa+0x6ca>
   1b9fd:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   1ba04:	74 59                	je     1ba5f <__dtoa+0x780>
   1ba06:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1ba0b:	f2 0f 10 05 6d 12 02 	movsd  0x2126d(%rip),%xmm0        # 3cc80 <xdigs_upper.3167+0x40>
   1ba12:	00 
   1ba13:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1ba17:	76 46                	jbe    1ba5f <__dtoa+0x780>
   1ba19:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1ba20:	7e 3d                	jle    1ba5f <__dtoa+0x780>
   1ba22:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   1ba29:	0f 8e e9 02 00 00    	jle    1bd18 <__dtoa+0xa39>
   1ba2f:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   1ba35:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1ba3b:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   1ba42:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1ba47:	f2 0f 10 05 39 12 02 	movsd  0x21239(%rip),%xmm0        # 3cc88 <xdigs_upper.3167+0x48>
   1ba4e:	00 
   1ba4f:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1ba53:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1ba58:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   1ba5f:	f2 0f 2a 85 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm0
   1ba66:	ff 
   1ba67:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1ba6c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1ba70:	f2 0f 10 0d 18 12 02 	movsd  0x21218(%rip),%xmm1        # 3cc90 <xdigs_upper.3167+0x50>
   1ba77:	00 
   1ba78:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1ba7c:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1ba81:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1ba84:	2d 00 00 40 03       	sub    $0x3400000,%eax
   1ba89:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1ba8c:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1ba93:	75 5f                	jne    1baf4 <__dtoa+0x815>
   1ba95:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   1ba9c:	00 
   1ba9d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1baa1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1baa5:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1baaa:	f2 0f 10 0d e6 11 02 	movsd  0x211e6(%rip),%xmm1        # 3cc98 <xdigs_upper.3167+0x58>
   1bab1:	00 
   1bab2:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1bab6:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1babb:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1bac0:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1bac5:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1bac9:	0f 87 ef 08 00 00    	ja     1c3be <__dtoa+0x10df>
   1bacf:	f2 0f 10 55 e0       	movsd  -0x20(%rbp),%xmm2
   1bad4:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1bad9:	f3 0f 7e 05 bf 11 02 	movq   0x211bf(%rip),%xmm0        # 3cca0 <xdigs_upper.3167+0x60>
   1bae0:	00 
   1bae1:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
   1bae5:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
   1bae9:	0f 87 b8 08 00 00    	ja     1c3a7 <__dtoa+0x10c8>
   1baef:	e9 28 02 00 00       	jmpq   1bd1c <__dtoa+0xa3d>
   1baf4:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1bafb:	0f 84 fa 00 00 00    	je     1bbfb <__dtoa+0x91c>
   1bb01:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   1bb07:	83 e8 01             	sub    $0x1,%eax
   1bb0a:	48 98                	cltq   
   1bb0c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bb13:	00 
   1bb14:	48 8d 05 85 12 02 00 	lea    0x21285(%rip),%rax        # 3cda0 <__tens_D2A>
   1bb1b:	f2 0f 10 0c 02       	movsd  (%rdx,%rax,1),%xmm1
   1bb20:	f2 0f 10 05 88 11 02 	movsd  0x21188(%rip),%xmm0        # 3ccb0 <xdigs_upper.3167+0x70>
   1bb27:	00 
   1bb28:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1bb2c:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1bb31:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1bb35:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1bb3a:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   1bb41:	00 00 00 
   1bb44:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1bb49:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1bb4d:	89 45 90             	mov    %eax,-0x70(%rbp)
   1bb50:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bb55:	f2 0f 2a 45 90       	cvtsi2sdl -0x70(%rbp),%xmm0
   1bb5a:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1bb5e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1bb62:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1bb67:	8b 45 90             	mov    -0x70(%rbp),%eax
   1bb6a:	8d 48 30             	lea    0x30(%rax),%ecx
   1bb6d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1bb71:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1bb75:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1bb79:	89 ca                	mov    %ecx,%edx
   1bb7b:	88 10                	mov    %dl,(%rax)
   1bb7d:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bb82:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   1bb87:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1bb8b:	0f 87 a9 0d 00 00    	ja     1c93a <__dtoa+0x165b>
   1bb91:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bb96:	f2 0f 10 05 e2 10 02 	movsd  0x210e2(%rip),%xmm0        # 3cc80 <xdigs_upper.3167+0x40>
   1bb9d:	00 
   1bb9e:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1bba2:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1bba7:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1bbab:	0f 87 da 02 00 00    	ja     1be8b <__dtoa+0xbac>
   1bbb1:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1bbb8:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bbbe:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   1bbc4:	0f 8d 51 01 00 00    	jge    1bd1b <__dtoa+0xa3c>
   1bbca:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1bbcf:	f2 0f 10 05 b1 10 02 	movsd  0x210b1(%rip),%xmm0        # 3cc88 <xdigs_upper.3167+0x48>
   1bbd6:	00 
   1bbd7:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1bbdb:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1bbe0:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bbe5:	f2 0f 10 05 9b 10 02 	movsd  0x2109b(%rip),%xmm0        # 3cc88 <xdigs_upper.3167+0x48>
   1bbec:	00 
   1bbed:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1bbf1:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1bbf6:	e9 49 ff ff ff       	jmpq   1bb44 <__dtoa+0x865>
   1bbfb:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1bc00:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   1bc06:	83 e8 01             	sub    $0x1,%eax
   1bc09:	48 98                	cltq   
   1bc0b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bc12:	00 
   1bc13:	48 8d 05 86 11 02 00 	lea    0x21186(%rip),%rax        # 3cda0 <__tens_D2A>
   1bc1a:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1bc1f:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1bc23:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1bc28:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   1bc2f:	00 00 00 
   1bc32:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1bc37:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1bc3b:	89 45 90             	mov    %eax,-0x70(%rbp)
   1bc3e:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bc43:	f2 0f 2a 45 90       	cvtsi2sdl -0x70(%rbp),%xmm0
   1bc48:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1bc4c:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1bc50:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1bc55:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1bc5a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1bc5e:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1bc62:	7a 16                	jp     1bc7a <__dtoa+0x99b>
   1bc64:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1bc68:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1bc6c:	75 0c                	jne    1bc7a <__dtoa+0x99b>
   1bc6e:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bc74:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1bc7a:	8b 45 90             	mov    -0x70(%rbp),%eax
   1bc7d:	8d 48 30             	lea    0x30(%rax),%ecx
   1bc80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1bc84:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1bc88:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1bc8c:	89 ca                	mov    %ecx,%edx
   1bc8e:	88 10                	mov    %dl,(%rax)
   1bc90:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bc96:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   1bc9c:	75 58                	jne    1bcf6 <__dtoa+0xa17>
   1bc9e:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bca3:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   1bca8:	f2 0f 10 05 00 10 02 	movsd  0x21000(%rip),%xmm0        # 3ccb0 <xdigs_upper.3167+0x70>
   1bcaf:	00 
   1bcb0:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
   1bcb4:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1bcb8:	0f 87 d0 01 00 00    	ja     1be8e <__dtoa+0xbaf>
   1bcbe:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bcc3:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   1bcc8:	f2 0f 10 05 e0 0f 02 	movsd  0x20fe0(%rip),%xmm0        # 3ccb0 <xdigs_upper.3167+0x70>
   1bccf:	00 
   1bcd0:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   1bcd4:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1bcd8:	77 02                	ja     1bcdc <__dtoa+0x9fd>
   1bcda:	eb 40                	jmp    1bd1c <__dtoa+0xa3d>
   1bcdc:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   1bce1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1bce5:	0f b6 00             	movzbl (%rax),%eax
   1bce8:	3c 30                	cmp    $0x30,%al
   1bcea:	74 f0                	je     1bcdc <__dtoa+0x9fd>
   1bcec:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   1bcf1:	e9 48 0c 00 00       	jmpq   1c93e <__dtoa+0x165f>
   1bcf6:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1bcfd:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bd02:	f2 0f 10 05 7e 0f 02 	movsd  0x20f7e(%rip),%xmm0        # 3cc88 <xdigs_upper.3167+0x48>
   1bd09:	00 
   1bd0a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1bd0e:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1bd13:	e9 1a ff ff ff       	jmpq   1bc32 <__dtoa+0x953>
   1bd18:	90                   	nop
   1bd19:	eb 01                	jmp    1bd1c <__dtoa+0xa3d>
   1bd1b:	90                   	nop
   1bd1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bd20:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1bd24:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1bd29:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1bd2e:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1bd31:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   1bd37:	8b 45 88             	mov    -0x78(%rbp),%eax
   1bd3a:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1bd40:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   1bd46:	85 c0                	test   %eax,%eax
   1bd48:	0f 88 b4 01 00 00    	js     1bf02 <__dtoa+0xc23>
   1bd4e:	83 bd 5c ff ff ff 0e 	cmpl   $0xe,-0xa4(%rbp)
   1bd55:	0f 8f a7 01 00 00    	jg     1bf02 <__dtoa+0xc23>
   1bd5b:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1bd61:	48 98                	cltq   
   1bd63:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bd6a:	00 
   1bd6b:	48 8d 05 2e 10 02 00 	lea    0x2102e(%rip),%rax        # 3cda0 <__tens_D2A>
   1bd72:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1bd77:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   1bd7c:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
   1bd83:	79 4b                	jns    1bdd0 <__dtoa+0xaf1>
   1bd85:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1bd8c:	7f 42                	jg     1bdd0 <__dtoa+0xaf1>
   1bd8e:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   1bd95:	00 
   1bd96:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1bd9a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1bd9e:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1bda5:	0f 88 ff 05 00 00    	js     1c3aa <__dtoa+0x10cb>
   1bdab:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bdb0:	f2 0f 10 55 b8       	movsd  -0x48(%rbp),%xmm2
   1bdb5:	f2 0f 10 05 db 0e 02 	movsd  0x20edb(%rip),%xmm0        # 3cc98 <xdigs_upper.3167+0x58>
   1bdbc:	00 
   1bdbd:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   1bdc1:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1bdc5:	0f 83 df 05 00 00    	jae    1c3aa <__dtoa+0x10cb>
   1bdcb:	e9 f2 05 00 00       	jmpq   1c3c2 <__dtoa+0x10e3>
   1bdd0:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   1bdd7:	00 00 00 
   1bdda:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1bddf:	f2 0f 5e 45 b8       	divsd  -0x48(%rbp),%xmm0
   1bde4:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1bde8:	89 45 90             	mov    %eax,-0x70(%rbp)
   1bdeb:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bdf0:	f2 0f 2a 45 90       	cvtsi2sdl -0x70(%rbp),%xmm0
   1bdf5:	f2 0f 59 45 b8       	mulsd  -0x48(%rbp),%xmm0
   1bdfa:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1bdfe:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1be02:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1be07:	8b 45 90             	mov    -0x70(%rbp),%eax
   1be0a:	8d 48 30             	lea    0x30(%rax),%ecx
   1be0d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1be11:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1be15:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1be19:	89 ca                	mov    %ecx,%edx
   1be1b:	88 10                	mov    %dl,(%rax)
   1be1d:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1be22:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1be26:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1be2a:	7a 0e                	jp     1be3a <__dtoa+0xb5b>
   1be2c:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1be30:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1be34:	0f 84 bc 00 00 00    	je     1bef6 <__dtoa+0xc17>
   1be3a:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1be40:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   1be46:	0f 85 88 00 00 00    	jne    1bed4 <__dtoa+0xbf5>
   1be4c:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1be51:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   1be55:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1be5a:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1be5f:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   1be64:	77 2b                	ja     1be91 <__dtoa+0xbb2>
   1be66:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   1be6b:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   1be70:	0f 8a 86 00 00 00    	jp     1befc <__dtoa+0xc1d>
   1be76:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   1be7b:	74 02                	je     1be7f <__dtoa+0xba0>
   1be7d:	eb 7d                	jmp    1befc <__dtoa+0xc1d>
   1be7f:	8b 45 90             	mov    -0x70(%rbp),%eax
   1be82:	83 e0 01             	and    $0x1,%eax
   1be85:	85 c0                	test   %eax,%eax
   1be87:	74 73                	je     1befc <__dtoa+0xc1d>
   1be89:	eb 06                	jmp    1be91 <__dtoa+0xbb2>
   1be8b:	90                   	nop
   1be8c:	eb 20                	jmp    1beae <__dtoa+0xbcf>
   1be8e:	90                   	nop
   1be8f:	eb 1d                	jmp    1beae <__dtoa+0xbcf>
   1be91:	90                   	nop
   1be92:	eb 1a                	jmp    1beae <__dtoa+0xbcf>
   1be94:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1be98:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   1be9c:	75 10                	jne    1beae <__dtoa+0xbcf>
   1be9e:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   1bea5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1bea9:	c6 00 30             	movb   $0x30,(%rax)
   1beac:	eb 10                	jmp    1bebe <__dtoa+0xbdf>
   1beae:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   1beb3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1beb7:	0f b6 00             	movzbl (%rax),%eax
   1beba:	3c 39                	cmp    $0x39,%al
   1bebc:	74 d6                	je     1be94 <__dtoa+0xbb5>
   1bebe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1bec2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1bec6:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1beca:	0f b6 10             	movzbl (%rax),%edx
   1becd:	83 c2 01             	add    $0x1,%edx
   1bed0:	88 10                	mov    %dl,(%rax)
   1bed2:	eb 28                	jmp    1befc <__dtoa+0xc1d>
   1bed4:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1bedb:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   1bee0:	f2 0f 10 05 a0 0d 02 	movsd  0x20da0(%rip),%xmm0        # 3cc88 <xdigs_upper.3167+0x48>
   1bee7:	00 
   1bee8:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1beec:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1bef1:	e9 e4 fe ff ff       	jmpq   1bdda <__dtoa+0xafb>
   1bef6:	90                   	nop
   1bef7:	e9 42 0a 00 00       	jmpq   1c93e <__dtoa+0x165f>
   1befc:	90                   	nop
   1befd:	e9 3c 0a 00 00       	jmpq   1c93e <__dtoa+0x165f>
   1bf02:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1bf08:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   1bf0e:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1bf14:	89 45 94             	mov    %eax,-0x6c(%rbp)
   1bf17:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   1bf1e:	00 
   1bf1f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1bf23:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1bf27:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1bf2e:	74 62                	je     1bf92 <__dtoa+0xcb3>
   1bf30:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
   1bf37:	74 0d                	je     1bf46 <__dtoa+0xc67>
   1bf39:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   1bf3f:	05 33 04 00 00       	add    $0x433,%eax
   1bf44:	eb 0f                	jmp    1bf55 <__dtoa+0xc76>
   1bf46:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1bf4c:	ba 36 00 00 00       	mov    $0x36,%edx
   1bf51:	29 c2                	sub    %eax,%edx
   1bf53:	89 d0                	mov    %edx,%eax
   1bf55:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1bf5b:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bf61:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   1bf67:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bf6d:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   1bf73:	bf 01 00 00 00       	mov    $0x1,%edi
   1bf78:	e8 74 1e 00 00       	callq  1ddf1 <__i2b_D2A>
   1bf7d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1bf81:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1bf86:	75 0a                	jne    1bf92 <__dtoa+0xcb3>
   1bf88:	b8 00 00 00 00       	mov    $0x0,%eax
   1bf8d:	e9 ed 09 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1bf92:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   1bf99:	7e 46                	jle    1bfe1 <__dtoa+0xd02>
   1bf9b:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   1bfa2:	7e 3d                	jle    1bfe1 <__dtoa+0xd02>
   1bfa4:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   1bfaa:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%rbp)
   1bfb0:	0f 4e 85 6c ff ff ff 	cmovle -0x94(%rbp),%eax
   1bfb7:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1bfbd:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bfc3:	29 85 3c ff ff ff    	sub    %eax,-0xc4(%rbp)
   1bfc9:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bfcf:	29 85 68 ff ff ff    	sub    %eax,-0x98(%rbp)
   1bfd5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1bfdb:	29 85 6c ff ff ff    	sub    %eax,-0x94(%rbp)
   1bfe1:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
   1bfe8:	0f 8e df 00 00 00    	jle    1c0cd <__dtoa+0xdee>
   1bfee:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1bff5:	0f 84 a9 00 00 00    	je     1c0a4 <__dtoa+0xdc5>
   1bffb:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
   1bfff:	7e 62                	jle    1c063 <__dtoa+0xd84>
   1c001:	8b 55 94             	mov    -0x6c(%rbp),%edx
   1c004:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c008:	89 d6                	mov    %edx,%esi
   1c00a:	48 89 c7             	mov    %rax,%rdi
   1c00d:	e8 3f 21 00 00       	callq  1e151 <__pow5mult_D2A>
   1c012:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c016:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c01b:	75 0a                	jne    1c027 <__dtoa+0xd48>
   1c01d:	b8 00 00 00 00       	mov    $0x0,%eax
   1c022:	e9 58 09 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c027:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1c02b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c02f:	48 89 d6             	mov    %rdx,%rsi
   1c032:	48 89 c7             	mov    %rax,%rdi
   1c035:	e8 f9 1d 00 00       	callq  1de33 <__mult_D2A>
   1c03a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1c03e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1c043:	75 0a                	jne    1c04f <__dtoa+0xd70>
   1c045:	b8 00 00 00 00       	mov    $0x0,%eax
   1c04a:	e9 30 09 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c04f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c053:	48 89 c7             	mov    %rax,%rdi
   1c056:	e8 5f 1a 00 00       	callq  1daba <__Bfree_D2A>
   1c05b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c05f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c063:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1c069:	2b 45 94             	sub    -0x6c(%rbp),%eax
   1c06c:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1c072:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1c079:	74 52                	je     1c0cd <__dtoa+0xdee>
   1c07b:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   1c081:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c085:	89 d6                	mov    %edx,%esi
   1c087:	48 89 c7             	mov    %rax,%rdi
   1c08a:	e8 c2 20 00 00       	callq  1e151 <__pow5mult_D2A>
   1c08f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c093:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c098:	75 33                	jne    1c0cd <__dtoa+0xdee>
   1c09a:	b8 00 00 00 00       	mov    $0x0,%eax
   1c09f:	e9 db 08 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c0a4:	8b 95 40 ff ff ff    	mov    -0xc0(%rbp),%edx
   1c0aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c0ae:	89 d6                	mov    %edx,%esi
   1c0b0:	48 89 c7             	mov    %rax,%rdi
   1c0b3:	e8 99 20 00 00       	callq  1e151 <__pow5mult_D2A>
   1c0b8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c0bc:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c0c1:	75 0a                	jne    1c0cd <__dtoa+0xdee>
   1c0c3:	b8 00 00 00 00       	mov    $0x0,%eax
   1c0c8:	e9 b2 08 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c0cd:	bf 01 00 00 00       	mov    $0x1,%edi
   1c0d2:	e8 1a 1d 00 00       	callq  1ddf1 <__i2b_D2A>
   1c0d7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1c0db:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1c0e0:	75 0a                	jne    1c0ec <__dtoa+0xe0d>
   1c0e2:	b8 00 00 00 00       	mov    $0x0,%eax
   1c0e7:	e9 93 08 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c0ec:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   1c0f3:	7e 29                	jle    1c11e <__dtoa+0xe3f>
   1c0f5:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
   1c0fb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c0ff:	89 d6                	mov    %edx,%esi
   1c101:	48 89 c7             	mov    %rax,%rdi
   1c104:	e8 48 20 00 00       	callq  1e151 <__pow5mult_D2A>
   1c109:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1c10d:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1c112:	75 0a                	jne    1c11e <__dtoa+0xe3f>
   1c114:	b8 00 00 00 00       	mov    $0x0,%eax
   1c119:	e9 61 08 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c11e:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
   1c125:	00 00 00 
   1c128:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   1c12f:	7e 09                	jle    1c13a <__dtoa+0xe5b>
   1c131:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1c138:	74 37                	je     1c171 <__dtoa+0xe92>
   1c13a:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1c13d:	85 c0                	test   %eax,%eax
   1c13f:	75 30                	jne    1c171 <__dtoa+0xe92>
   1c141:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1c144:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1c149:	85 c0                	test   %eax,%eax
   1c14b:	75 24                	jne    1c171 <__dtoa+0xe92>
   1c14d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1c150:	25 00 00 e0 7f       	and    $0x7fe00000,%eax
   1c155:	85 c0                	test   %eax,%eax
   1c157:	74 18                	je     1c171 <__dtoa+0xe92>
   1c159:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
   1c160:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
   1c167:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%rbp)
   1c16e:	00 00 00 
   1c171:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   1c178:	74 29                	je     1c1a3 <__dtoa+0xec4>
   1c17a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c17e:	8b 40 14             	mov    0x14(%rax),%eax
   1c181:	8d 50 ff             	lea    -0x1(%rax),%edx
   1c184:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c188:	48 63 d2             	movslq %edx,%rdx
   1c18b:	48 83 c2 04          	add    $0x4,%rdx
   1c18f:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   1c193:	89 c7                	mov    %eax,%edi
   1c195:	e8 d4 1b 00 00       	callq  1dd6e <__hi0bits_D2A>
   1c19a:	ba 20 00 00 00       	mov    $0x20,%edx
   1c19f:	29 c2                	sub    %eax,%edx
   1c1a1:	eb 05                	jmp    1c1a8 <__dtoa+0xec9>
   1c1a3:	ba 01 00 00 00       	mov    $0x1,%edx
   1c1a8:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   1c1ae:	01 d0                	add    %edx,%eax
   1c1b0:	83 e0 1f             	and    $0x1f,%eax
   1c1b3:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1c1b9:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1c1c0:	74 11                	je     1c1d3 <__dtoa+0xef4>
   1c1c2:	b8 20 00 00 00       	mov    $0x20,%eax
   1c1c7:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   1c1cd:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1c1d3:	83 bd 48 ff ff ff 04 	cmpl   $0x4,-0xb8(%rbp)
   1c1da:	7e 2d                	jle    1c209 <__dtoa+0xf2a>
   1c1dc:	83 ad 48 ff ff ff 04 	subl   $0x4,-0xb8(%rbp)
   1c1e3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c1e9:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   1c1ef:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c1f5:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   1c1fb:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c201:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   1c207:	eb 34                	jmp    1c23d <__dtoa+0xf5e>
   1c209:	83 bd 48 ff ff ff 03 	cmpl   $0x3,-0xb8(%rbp)
   1c210:	7f 2b                	jg     1c23d <__dtoa+0xf5e>
   1c212:	83 85 48 ff ff ff 1c 	addl   $0x1c,-0xb8(%rbp)
   1c219:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c21f:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   1c225:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c22b:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   1c231:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c237:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   1c23d:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1c244:	7e 29                	jle    1c26f <__dtoa+0xf90>
   1c246:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   1c24c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c250:	89 d6                	mov    %edx,%esi
   1c252:	48 89 c7             	mov    %rax,%rdi
   1c255:	e8 c2 20 00 00       	callq  1e31c <__lshift_D2A>
   1c25a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c25e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c263:	75 0a                	jne    1c26f <__dtoa+0xf90>
   1c265:	b8 00 00 00 00       	mov    $0x0,%eax
   1c26a:	e9 10 07 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c26f:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   1c276:	7e 29                	jle    1c2a1 <__dtoa+0xfc2>
   1c278:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   1c27e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c282:	89 d6                	mov    %edx,%esi
   1c284:	48 89 c7             	mov    %rax,%rdi
   1c287:	e8 90 20 00 00       	callq  1e31c <__lshift_D2A>
   1c28c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1c290:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1c295:	75 0a                	jne    1c2a1 <__dtoa+0xfc2>
   1c297:	b8 00 00 00 00       	mov    $0x0,%eax
   1c29c:	e9 de 06 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c2a1:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   1c2a8:	0f 84 89 00 00 00    	je     1c337 <__dtoa+0x1058>
   1c2ae:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c2b2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c2b6:	48 89 d6             	mov    %rdx,%rsi
   1c2b9:	48 89 c7             	mov    %rax,%rdi
   1c2bc:	e8 e4 21 00 00       	callq  1e4a5 <__cmp_D2A>
   1c2c1:	85 c0                	test   %eax,%eax
   1c2c3:	79 72                	jns    1c337 <__dtoa+0x1058>
   1c2c5:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   1c2cc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c2d0:	ba 00 00 00 00       	mov    $0x0,%edx
   1c2d5:	be 0a 00 00 00       	mov    $0xa,%esi
   1c2da:	48 89 c7             	mov    %rax,%rdi
   1c2dd:	e8 46 19 00 00       	callq  1dc28 <__multadd_D2A>
   1c2e2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c2e6:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c2eb:	75 0a                	jne    1c2f7 <__dtoa+0x1018>
   1c2ed:	b8 00 00 00 00       	mov    $0x0,%eax
   1c2f2:	e9 88 06 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c2f7:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1c2fe:	74 2b                	je     1c32b <__dtoa+0x104c>
   1c300:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c304:	ba 00 00 00 00       	mov    $0x0,%edx
   1c309:	be 0a 00 00 00       	mov    $0xa,%esi
   1c30e:	48 89 c7             	mov    %rax,%rdi
   1c311:	e8 12 19 00 00       	callq  1dc28 <__multadd_D2A>
   1c316:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c31a:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c31f:	75 0a                	jne    1c32b <__dtoa+0x104c>
   1c321:	b8 00 00 00 00       	mov    $0x0,%eax
   1c326:	e9 54 06 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c32b:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   1c331:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   1c337:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1c33e:	0f 8f 99 00 00 00    	jg     1c3dd <__dtoa+0x10fe>
   1c344:	83 bd 24 ff ff ff 03 	cmpl   $0x3,-0xdc(%rbp)
   1c34b:	74 0d                	je     1c35a <__dtoa+0x107b>
   1c34d:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   1c354:	0f 85 83 00 00 00    	jne    1c3dd <__dtoa+0x10fe>
   1c35a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c35e:	ba 00 00 00 00       	mov    $0x0,%edx
   1c363:	be 05 00 00 00       	mov    $0x5,%esi
   1c368:	48 89 c7             	mov    %rax,%rdi
   1c36b:	e8 b8 18 00 00       	callq  1dc28 <__multadd_D2A>
   1c370:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1c374:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1c379:	75 0a                	jne    1c385 <__dtoa+0x10a6>
   1c37b:	b8 00 00 00 00       	mov    $0x0,%eax
   1c380:	e9 fa 05 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c385:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1c38c:	78 1c                	js     1c3aa <__dtoa+0x10cb>
   1c38e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c392:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c396:	48 89 d6             	mov    %rdx,%rsi
   1c399:	48 89 c7             	mov    %rax,%rdi
   1c39c:	e8 04 21 00 00       	callq  1e4a5 <__cmp_D2A>
   1c3a1:	85 c0                	test   %eax,%eax
   1c3a3:	7f 1c                	jg     1c3c1 <__dtoa+0x10e2>
   1c3a5:	eb 03                	jmp    1c3aa <__dtoa+0x10cb>
   1c3a7:	90                   	nop
   1c3a8:	eb 01                	jmp    1c3ab <__dtoa+0x10cc>
   1c3aa:	90                   	nop
   1c3ab:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   1c3b1:	f7 d0                	not    %eax
   1c3b3:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   1c3b9:	e9 3e 05 00 00       	jmpq   1c8fc <__dtoa+0x161d>
   1c3be:	90                   	nop
   1c3bf:	eb 01                	jmp    1c3c2 <__dtoa+0x10e3>
   1c3c1:	90                   	nop
   1c3c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c3c6:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c3ca:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c3ce:	c6 00 31             	movb   $0x31,(%rax)
   1c3d1:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   1c3d8:	e9 1f 05 00 00       	jmpq   1c8fc <__dtoa+0x161d>
   1c3dd:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1c3e4:	0f 84 b3 03 00 00    	je     1c79d <__dtoa+0x14be>
   1c3ea:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   1c3f1:	7e 29                	jle    1c41c <__dtoa+0x113d>
   1c3f3:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   1c3f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c3fd:	89 d6                	mov    %edx,%esi
   1c3ff:	48 89 c7             	mov    %rax,%rdi
   1c402:	e8 15 1f 00 00       	callq  1e31c <__lshift_D2A>
   1c407:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c40b:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c410:	75 0a                	jne    1c41c <__dtoa+0x113d>
   1c412:	b8 00 00 00 00       	mov    $0x0,%eax
   1c417:	e9 63 05 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c41c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c420:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1c424:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
   1c42b:	74 79                	je     1c4a6 <__dtoa+0x11c7>
   1c42d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c431:	8b 40 08             	mov    0x8(%rax),%eax
   1c434:	89 c7                	mov    %eax,%edi
   1c436:	e8 38 15 00 00       	callq  1d973 <__Balloc_D2A>
   1c43b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c43f:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c444:	75 0a                	jne    1c450 <__dtoa+0x1171>
   1c446:	b8 00 00 00 00       	mov    $0x0,%eax
   1c44b:	e9 2f 05 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c450:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c454:	8b 40 14             	mov    0x14(%rax),%eax
   1c457:	48 98                	cltq   
   1c459:	48 83 c0 02          	add    $0x2,%rax
   1c45d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1c464:	00 
   1c465:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c469:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1c46d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c471:	48 83 c0 10          	add    $0x10,%rax
   1c475:	48 89 ce             	mov    %rcx,%rsi
   1c478:	48 89 c7             	mov    %rax,%rdi
   1c47b:	e8 47 72 ff ff       	callq  136c7 <memcpy>
   1c480:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c484:	be 01 00 00 00       	mov    $0x1,%esi
   1c489:	48 89 c7             	mov    %rax,%rdi
   1c48c:	e8 8b 1e 00 00       	callq  1e31c <__lshift_D2A>
   1c491:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c495:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c49a:	75 0a                	jne    1c4a6 <__dtoa+0x11c7>
   1c49c:	b8 00 00 00 00       	mov    $0x0,%eax
   1c4a1:	e9 d9 04 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c4a6:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   1c4ad:	00 00 00 
   1c4b0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c4b4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c4b8:	48 89 d6             	mov    %rdx,%rsi
   1c4bb:	48 89 c7             	mov    %rax,%rdi
   1c4be:	e8 1f eb ff ff       	callq  1afe2 <__quorem_D2A>
   1c4c3:	83 c0 30             	add    $0x30,%eax
   1c4c6:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   1c4cc:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1c4d0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c4d4:	48 89 d6             	mov    %rdx,%rsi
   1c4d7:	48 89 c7             	mov    %rax,%rdi
   1c4da:	e8 c6 1f 00 00       	callq  1e4a5 <__cmp_D2A>
   1c4df:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1c4e5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1c4e9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c4ed:	48 89 d6             	mov    %rdx,%rsi
   1c4f0:	48 89 c7             	mov    %rax,%rdi
   1c4f3:	e8 7d 20 00 00       	callq  1e575 <__diff_D2A>
   1c4f8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1c4fc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1c501:	75 0a                	jne    1c50d <__dtoa+0x122e>
   1c503:	b8 00 00 00 00       	mov    $0x0,%eax
   1c508:	e9 72 04 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c50d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c511:	8b 40 10             	mov    0x10(%rax),%eax
   1c514:	85 c0                	test   %eax,%eax
   1c516:	75 15                	jne    1c52d <__dtoa+0x124e>
   1c518:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c51c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c520:	48 89 d6             	mov    %rdx,%rsi
   1c523:	48 89 c7             	mov    %rax,%rdi
   1c526:	e8 7a 1f 00 00       	callq  1e4a5 <__cmp_D2A>
   1c52b:	eb 05                	jmp    1c532 <__dtoa+0x1253>
   1c52d:	b8 01 00 00 00       	mov    $0x1,%eax
   1c532:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1c535:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c539:	48 89 c7             	mov    %rax,%rdi
   1c53c:	e8 79 15 00 00       	callq  1daba <__Bfree_D2A>
   1c541:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1c545:	75 49                	jne    1c590 <__dtoa+0x12b1>
   1c547:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   1c54e:	74 40                	je     1c590 <__dtoa+0x12b1>
   1c550:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1c553:	83 e0 01             	and    $0x1,%eax
   1c556:	85 c0                	test   %eax,%eax
   1c558:	75 36                	jne    1c590 <__dtoa+0x12b1>
   1c55a:	83 bd 44 ff ff ff 39 	cmpl   $0x39,-0xbc(%rbp)
   1c561:	0f 84 10 01 00 00    	je     1c677 <__dtoa+0x1398>
   1c567:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1c56e:	7e 07                	jle    1c577 <__dtoa+0x1298>
   1c570:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
   1c577:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c57b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c57f:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c583:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   1c589:	88 10                	mov    %dl,(%rax)
   1c58b:	e9 6c 03 00 00       	jmpq   1c8fc <__dtoa+0x161d>
   1c590:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1c597:	78 28                	js     1c5c1 <__dtoa+0x12e2>
   1c599:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1c5a0:	0f 85 c0 00 00 00    	jne    1c666 <__dtoa+0x1387>
   1c5a6:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   1c5ad:	0f 84 b3 00 00 00    	je     1c666 <__dtoa+0x1387>
   1c5b3:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1c5b6:	83 e0 01             	and    $0x1,%eax
   1c5b9:	85 c0                	test   %eax,%eax
   1c5bb:	0f 85 a5 00 00 00    	jne    1c666 <__dtoa+0x1387>
   1c5c1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c5c5:	8b 40 18             	mov    0x18(%rax),%eax
   1c5c8:	85 c0                	test   %eax,%eax
   1c5ca:	75 0c                	jne    1c5d8 <__dtoa+0x12f9>
   1c5cc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c5d0:	8b 40 14             	mov    0x14(%rax),%eax
   1c5d3:	83 f8 01             	cmp    $0x1,%eax
   1c5d6:	7e 71                	jle    1c649 <__dtoa+0x136a>
   1c5d8:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1c5dc:	7e 6e                	jle    1c64c <__dtoa+0x136d>
   1c5de:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c5e2:	be 01 00 00 00       	mov    $0x1,%esi
   1c5e7:	48 89 c7             	mov    %rax,%rdi
   1c5ea:	e8 2d 1d 00 00       	callq  1e31c <__lshift_D2A>
   1c5ef:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c5f3:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c5f8:	75 0a                	jne    1c604 <__dtoa+0x1325>
   1c5fa:	b8 00 00 00 00       	mov    $0x0,%eax
   1c5ff:	e9 7b 03 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c604:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c608:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c60c:	48 89 d6             	mov    %rdx,%rsi
   1c60f:	48 89 c7             	mov    %rax,%rdi
   1c612:	e8 8e 1e 00 00       	callq  1e4a5 <__cmp_D2A>
   1c617:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1c61a:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1c61e:	7f 13                	jg     1c633 <__dtoa+0x1354>
   1c620:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1c624:	75 26                	jne    1c64c <__dtoa+0x136d>
   1c626:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1c62c:	83 e0 01             	and    $0x1,%eax
   1c62f:	85 c0                	test   %eax,%eax
   1c631:	74 19                	je     1c64c <__dtoa+0x136d>
   1c633:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1c639:	8d 50 01             	lea    0x1(%rax),%edx
   1c63c:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%rbp)
   1c642:	83 f8 39             	cmp    $0x39,%eax
   1c645:	74 33                	je     1c67a <__dtoa+0x139b>
   1c647:	eb 03                	jmp    1c64c <__dtoa+0x136d>
   1c649:	90                   	nop
   1c64a:	eb 01                	jmp    1c64d <__dtoa+0x136e>
   1c64c:	90                   	nop
   1c64d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c651:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c655:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c659:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   1c65f:	88 10                	mov    %dl,(%rax)
   1c661:	e9 96 02 00 00       	jmpq   1c8fc <__dtoa+0x161d>
   1c666:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1c66a:	7e 41                	jle    1c6ad <__dtoa+0x13ce>
   1c66c:	83 bd 44 ff ff ff 39 	cmpl   $0x39,-0xbc(%rbp)
   1c673:	75 1a                	jne    1c68f <__dtoa+0x13b0>
   1c675:	eb 04                	jmp    1c67b <__dtoa+0x139c>
   1c677:	90                   	nop
   1c678:	eb 01                	jmp    1c67b <__dtoa+0x139c>
   1c67a:	90                   	nop
   1c67b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c67f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c683:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c687:	c6 00 39             	movb   $0x39,(%rax)
   1c68a:	e9 0b 02 00 00       	jmpq   1c89a <__dtoa+0x15bb>
   1c68f:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1c695:	8d 48 01             	lea    0x1(%rax),%ecx
   1c698:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c69c:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c6a0:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c6a4:	89 ca                	mov    %ecx,%edx
   1c6a6:	88 10                	mov    %dl,(%rax)
   1c6a8:	e9 4f 02 00 00       	jmpq   1c8fc <__dtoa+0x161d>
   1c6ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c6b1:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c6b5:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c6b9:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   1c6bf:	88 10                	mov    %dl,(%rax)
   1c6c1:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c6c7:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   1c6cd:	0f 84 64 01 00 00    	je     1c837 <__dtoa+0x1558>
   1c6d3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c6d7:	ba 00 00 00 00       	mov    $0x0,%edx
   1c6dc:	be 0a 00 00 00       	mov    $0xa,%esi
   1c6e1:	48 89 c7             	mov    %rax,%rdi
   1c6e4:	e8 3f 15 00 00       	callq  1dc28 <__multadd_D2A>
   1c6e9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c6ed:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c6f2:	75 0a                	jne    1c6fe <__dtoa+0x141f>
   1c6f4:	b8 00 00 00 00       	mov    $0x0,%eax
   1c6f9:	e9 81 02 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c6fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c702:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   1c706:	75 33                	jne    1c73b <__dtoa+0x145c>
   1c708:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c70c:	ba 00 00 00 00       	mov    $0x0,%edx
   1c711:	be 0a 00 00 00       	mov    $0xa,%esi
   1c716:	48 89 c7             	mov    %rax,%rdi
   1c719:	e8 0a 15 00 00       	callq  1dc28 <__multadd_D2A>
   1c71e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c722:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c726:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1c72a:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1c72f:	75 60                	jne    1c791 <__dtoa+0x14b2>
   1c731:	b8 00 00 00 00       	mov    $0x0,%eax
   1c736:	e9 44 02 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c73b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c73f:	ba 00 00 00 00       	mov    $0x0,%edx
   1c744:	be 0a 00 00 00       	mov    $0xa,%esi
   1c749:	48 89 c7             	mov    %rax,%rdi
   1c74c:	e8 d7 14 00 00       	callq  1dc28 <__multadd_D2A>
   1c751:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1c755:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1c75a:	75 0a                	jne    1c766 <__dtoa+0x1487>
   1c75c:	b8 00 00 00 00       	mov    $0x0,%eax
   1c761:	e9 19 02 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c766:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c76a:	ba 00 00 00 00       	mov    $0x0,%edx
   1c76f:	be 0a 00 00 00       	mov    $0xa,%esi
   1c774:	48 89 c7             	mov    %rax,%rdi
   1c777:	e8 ac 14 00 00       	callq  1dc28 <__multadd_D2A>
   1c77c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c780:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c785:	75 0a                	jne    1c791 <__dtoa+0x14b2>
   1c787:	b8 00 00 00 00       	mov    $0x0,%eax
   1c78c:	e9 ee 01 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c791:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1c798:	e9 13 fd ff ff       	jmpq   1c4b0 <__dtoa+0x11d1>
   1c79d:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   1c7a4:	00 00 00 
   1c7a7:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c7ab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c7af:	48 89 d6             	mov    %rdx,%rsi
   1c7b2:	48 89 c7             	mov    %rax,%rdi
   1c7b5:	e8 28 e8 ff ff       	callq  1afe2 <__quorem_D2A>
   1c7ba:	83 c0 30             	add    $0x30,%eax
   1c7bd:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   1c7c3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c7c7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c7cb:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c7cf:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   1c7d5:	88 10                	mov    %dl,(%rax)
   1c7d7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c7db:	8b 40 18             	mov    0x18(%rax),%eax
   1c7de:	85 c0                	test   %eax,%eax
   1c7e0:	75 10                	jne    1c7f2 <__dtoa+0x1513>
   1c7e2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c7e6:	8b 40 14             	mov    0x14(%rax),%eax
   1c7e9:	83 f8 01             	cmp    $0x1,%eax
   1c7ec:	0f 8e 09 01 00 00    	jle    1c8fb <__dtoa+0x161c>
   1c7f2:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1c7f8:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   1c7fe:	7d 3a                	jge    1c83a <__dtoa+0x155b>
   1c800:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c804:	ba 00 00 00 00       	mov    $0x0,%edx
   1c809:	be 0a 00 00 00       	mov    $0xa,%esi
   1c80e:	48 89 c7             	mov    %rax,%rdi
   1c811:	e8 12 14 00 00       	callq  1dc28 <__multadd_D2A>
   1c816:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c81a:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c81f:	75 0a                	jne    1c82b <__dtoa+0x154c>
   1c821:	b8 00 00 00 00       	mov    $0x0,%eax
   1c826:	e9 54 01 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c82b:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   1c832:	e9 70 ff ff ff       	jmpq   1c7a7 <__dtoa+0x14c8>
   1c837:	90                   	nop
   1c838:	eb 01                	jmp    1c83b <__dtoa+0x155c>
   1c83a:	90                   	nop
   1c83b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c83f:	be 01 00 00 00       	mov    $0x1,%esi
   1c844:	48 89 c7             	mov    %rax,%rdi
   1c847:	e8 d0 1a 00 00       	callq  1e31c <__lshift_D2A>
   1c84c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c850:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c855:	75 0a                	jne    1c861 <__dtoa+0x1582>
   1c857:	b8 00 00 00 00       	mov    $0x0,%eax
   1c85c:	e9 1e 01 00 00       	jmpq   1c97f <__dtoa+0x16a0>
   1c861:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c865:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c869:	48 89 d6             	mov    %rdx,%rsi
   1c86c:	48 89 c7             	mov    %rax,%rdi
   1c86f:	e8 31 1c 00 00       	callq  1e4a5 <__cmp_D2A>
   1c874:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1c87a:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1c881:	7f 16                	jg     1c899 <__dtoa+0x15ba>
   1c883:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1c88a:	75 58                	jne    1c8e4 <__dtoa+0x1605>
   1c88c:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1c892:	83 e0 01             	and    $0x1,%eax
   1c895:	85 c0                	test   %eax,%eax
   1c897:	74 4b                	je     1c8e4 <__dtoa+0x1605>
   1c899:	90                   	nop
   1c89a:	eb 22                	jmp    1c8be <__dtoa+0x15df>
   1c89c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c8a0:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   1c8a4:	75 18                	jne    1c8be <__dtoa+0x15df>
   1c8a6:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   1c8ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c8b1:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c8b5:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c8b9:	c6 00 31             	movb   $0x31,(%rax)
   1c8bc:	eb 3e                	jmp    1c8fc <__dtoa+0x161d>
   1c8be:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   1c8c3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c8c7:	0f b6 00             	movzbl (%rax),%eax
   1c8ca:	3c 39                	cmp    $0x39,%al
   1c8cc:	74 ce                	je     1c89c <__dtoa+0x15bd>
   1c8ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c8d2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1c8d6:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1c8da:	0f b6 10             	movzbl (%rax),%edx
   1c8dd:	83 c2 01             	add    $0x1,%edx
   1c8e0:	88 10                	mov    %dl,(%rax)
   1c8e2:	eb 18                	jmp    1c8fc <__dtoa+0x161d>
   1c8e4:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   1c8e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c8ed:	0f b6 00             	movzbl (%rax),%eax
   1c8f0:	3c 30                	cmp    $0x30,%al
   1c8f2:	74 f0                	je     1c8e4 <__dtoa+0x1605>
   1c8f4:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   1c8f9:	eb 01                	jmp    1c8fc <__dtoa+0x161d>
   1c8fb:	90                   	nop
   1c8fc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c900:	48 89 c7             	mov    %rax,%rdi
   1c903:	e8 b2 11 00 00       	callq  1daba <__Bfree_D2A>
   1c908:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c90d:	74 2e                	je     1c93d <__dtoa+0x165e>
   1c90f:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1c914:	74 16                	je     1c92c <__dtoa+0x164d>
   1c916:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c91a:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   1c91e:	74 0c                	je     1c92c <__dtoa+0x164d>
   1c920:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c924:	48 89 c7             	mov    %rax,%rdi
   1c927:	e8 8e 11 00 00       	callq  1daba <__Bfree_D2A>
   1c92c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c930:	48 89 c7             	mov    %rax,%rdi
   1c933:	e8 82 11 00 00       	callq  1daba <__Bfree_D2A>
   1c938:	eb 04                	jmp    1c93e <__dtoa+0x165f>
   1c93a:	90                   	nop
   1c93b:	eb 01                	jmp    1c93e <__dtoa+0x165f>
   1c93d:	90                   	nop
   1c93e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c942:	48 89 c7             	mov    %rax,%rdi
   1c945:	e8 70 11 00 00       	callq  1daba <__Bfree_D2A>
   1c94a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c94e:	c6 00 00             	movb   $0x0,(%rax)
   1c951:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1c957:	8d 50 01             	lea    0x1(%rax),%edx
   1c95a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c961:	89 10                	mov    %edx,(%rax)
   1c963:	48 83 bd 08 ff ff ff 	cmpq   $0x0,-0xf8(%rbp)
   1c96a:	00 
   1c96b:	74 0e                	je     1c97b <__dtoa+0x169c>
   1c96d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1c974:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1c978:	48 89 10             	mov    %rdx,(%rax)
   1c97b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c97f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1c983:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1c98a:	00 00 
   1c98c:	74 05                	je     1c993 <__dtoa+0x16b4>
   1c98e:	e8 f9 ea fe ff       	callq  b48c <__stack_chk_fail>
   1c993:	c9                   	leaveq 
   1c994:	c3                   	retq   

000000000001c995 <__sfvwrite>:
   1c995:	55                   	push   %rbp
   1c996:	48 89 e5             	mov    %rsp,%rbp
   1c999:	48 83 ec 60          	sub    $0x60,%rsp
   1c99d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1c9a1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1c9a5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c9a9:	8b 40 0c             	mov    0xc(%rax),%eax
   1c9ac:	48 98                	cltq   
   1c9ae:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1c9b2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1c9b7:	75 0a                	jne    1c9c3 <__sfvwrite+0x2e>
   1c9b9:	b8 00 00 00 00       	mov    $0x0,%eax
   1c9be:	e9 35 04 00 00       	jmpq   1cdf8 <__sfvwrite+0x463>
   1c9c3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c9c7:	48 8b 00             	mov    (%rax),%rax
   1c9ca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1c9ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9d2:	48 8b 00             	mov    (%rax),%rax
   1c9d5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1c9d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9dd:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c9e1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1c9e5:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   1c9ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c9ee:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1c9f2:	98                   	cwtl   
   1c9f3:	83 e0 02             	and    $0x2,%eax
   1c9f6:	85 c0                	test   %eax,%eax
   1c9f8:	0f 85 d0 03 00 00    	jne    1cdce <__sfvwrite+0x439>
   1c9fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ca02:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1ca06:	98                   	cwtl   
   1ca07:	83 e0 01             	and    $0x1,%eax
   1ca0a:	85 c0                	test   %eax,%eax
   1ca0c:	0f 85 48 02 00 00    	jne    1cc5a <__sfvwrite+0x2c5>
   1ca12:	eb 1c                	jmp    1ca30 <__sfvwrite+0x9b>
   1ca14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca18:	48 8b 00             	mov    (%rax),%rax
   1ca1b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1ca1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca23:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ca27:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1ca2b:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   1ca30:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1ca35:	74 dd                	je     1ca14 <__sfvwrite+0x7f>
   1ca37:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ca3b:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1ca3f:	98                   	cwtl   
   1ca40:	25 00 42 00 00       	and    $0x4200,%eax
   1ca45:	3d 00 42 00 00       	cmp    $0x4200,%eax
   1ca4a:	0f 85 ca 00 00 00    	jne    1cb1a <__sfvwrite+0x185>
   1ca50:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ca54:	8b 40 0c             	mov    0xc(%rax),%eax
   1ca57:	48 98                	cltq   
   1ca59:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1ca5d:	0f 86 b7 00 00 00    	jbe    1cb1a <__sfvwrite+0x185>
   1ca63:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ca67:	48 8b 00             	mov    (%rax),%rax
   1ca6a:	48 89 c2             	mov    %rax,%rdx
   1ca6d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ca71:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ca75:	48 29 c2             	sub    %rax,%rdx
   1ca78:	48 89 d0             	mov    %rdx,%rax
   1ca7b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1ca7f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ca83:	8b 40 20             	mov    0x20(%rax),%eax
   1ca86:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1ca89:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1ca8c:	01 c0                	add    %eax,%eax
   1ca8e:	83 c0 01             	add    $0x1,%eax
   1ca91:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1ca94:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1ca97:	48 98                	cltq   
   1ca99:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ca9d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1caa1:	48 01 ca             	add    %rcx,%rdx
   1caa4:	48 39 d0             	cmp    %rdx,%rax
   1caa7:	72 e0                	jb     1ca89 <__sfvwrite+0xf4>
   1caa9:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1caac:	83 c0 01             	add    $0x1,%eax
   1caaf:	48 63 d0             	movslq %eax,%rdx
   1cab2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cab6:	48 8b 40 18          	mov    0x18(%rax),%rax
   1caba:	48 89 d6             	mov    %rdx,%rsi
   1cabd:	48 89 c7             	mov    %rax,%rdi
   1cac0:	e8 f7 67 ff ff       	callq  132bc <dlrealloc>
   1cac5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1cac9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1cace:	0f 84 fd 02 00 00    	je     1cdd1 <__sfvwrite+0x43c>
   1cad4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cad8:	8b 50 0c             	mov    0xc(%rax),%edx
   1cadb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cadf:	8b 40 20             	mov    0x20(%rax),%eax
   1cae2:	8b 4d c8             	mov    -0x38(%rbp),%ecx
   1cae5:	29 c1                	sub    %eax,%ecx
   1cae7:	89 c8                	mov    %ecx,%eax
   1cae9:	01 c2                	add    %eax,%edx
   1caeb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1caef:	89 50 0c             	mov    %edx,0xc(%rax)
   1caf2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1caf6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1cafa:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cafe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb02:	8b 55 c8             	mov    -0x38(%rbp),%edx
   1cb05:	89 50 20             	mov    %edx,0x20(%rax)
   1cb08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1cb0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cb10:	48 01 c2             	add    %rax,%rdx
   1cb13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb17:	48 89 10             	mov    %rdx,(%rax)
   1cb1a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb1e:	8b 40 0c             	mov    0xc(%rax),%eax
   1cb21:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cb24:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb28:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1cb2c:	98                   	cwtl   
   1cb2d:	25 00 02 00 00       	and    $0x200,%eax
   1cb32:	85 c0                	test   %eax,%eax
   1cb34:	74 63                	je     1cb99 <__sfvwrite+0x204>
   1cb36:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cb39:	48 98                	cltq   
   1cb3b:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1cb3f:	73 07                	jae    1cb48 <__sfvwrite+0x1b3>
   1cb41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cb45:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cb48:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cb4b:	48 63 d0             	movslq %eax,%rdx
   1cb4e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb52:	48 8b 00             	mov    (%rax),%rax
   1cb55:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1cb59:	48 89 ce             	mov    %rcx,%rsi
   1cb5c:	48 89 c7             	mov    %rax,%rdi
   1cb5f:	e8 63 6b ff ff       	callq  136c7 <memcpy>
   1cb64:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb68:	8b 40 0c             	mov    0xc(%rax),%eax
   1cb6b:	2b 45 bc             	sub    -0x44(%rbp),%eax
   1cb6e:	89 c2                	mov    %eax,%edx
   1cb70:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb74:	89 50 0c             	mov    %edx,0xc(%rax)
   1cb77:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb7b:	48 8b 10             	mov    (%rax),%rdx
   1cb7e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cb81:	48 98                	cltq   
   1cb83:	48 01 c2             	add    %rax,%rdx
   1cb86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb8a:	48 89 10             	mov    %rdx,(%rax)
   1cb8d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cb91:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cb94:	e9 88 00 00 00       	jmpq   1cc21 <__sfvwrite+0x28c>
   1cb99:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cb9d:	48 8b 10             	mov    (%rax),%rdx
   1cba0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cba4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cba8:	48 39 c2             	cmp    %rax,%rdx
   1cbab:	76 0f                	jbe    1cbbc <__sfvwrite+0x227>
   1cbad:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cbb0:	48 98                	cltq   
   1cbb2:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1cbb6:	0f 87 18 02 00 00    	ja     1cdd4 <__sfvwrite+0x43f>
   1cbbc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cbc0:	8b 40 20             	mov    0x20(%rax),%eax
   1cbc3:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cbc6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cbc9:	48 98                	cltq   
   1cbcb:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1cbcf:	0f 83 02 02 00 00    	jae    1cdd7 <__sfvwrite+0x442>
   1cbd5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cbd9:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cbdc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cbdf:	48 63 d0             	movslq %eax,%rdx
   1cbe2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cbe6:	48 8b 00             	mov    (%rax),%rax
   1cbe9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1cbed:	48 89 ce             	mov    %rcx,%rsi
   1cbf0:	48 89 c7             	mov    %rax,%rdi
   1cbf3:	e8 cf 6a ff ff       	callq  136c7 <memcpy>
   1cbf8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cbfc:	8b 40 0c             	mov    0xc(%rax),%eax
   1cbff:	2b 45 bc             	sub    -0x44(%rbp),%eax
   1cc02:	89 c2                	mov    %eax,%edx
   1cc04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cc08:	89 50 0c             	mov    %edx,0xc(%rax)
   1cc0b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cc0f:	48 8b 10             	mov    (%rax),%rdx
   1cc12:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cc15:	48 98                	cltq   
   1cc17:	48 01 c2             	add    %rax,%rdx
   1cc1a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cc1e:	48 89 10             	mov    %rdx,(%rax)
   1cc21:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cc24:	48 98                	cltq   
   1cc26:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   1cc2a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cc2d:	48 98                	cltq   
   1cc2f:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   1cc33:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc37:	8b 40 0c             	mov    0xc(%rax),%eax
   1cc3a:	2b 45 bc             	sub    -0x44(%rbp),%eax
   1cc3d:	89 c2                	mov    %eax,%edx
   1cc3f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc43:	89 50 0c             	mov    %edx,0xc(%rax)
   1cc46:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc4a:	8b 40 0c             	mov    0xc(%rax),%eax
   1cc4d:	85 c0                	test   %eax,%eax
   1cc4f:	0f 85 db fd ff ff    	jne    1ca30 <__sfvwrite+0x9b>
   1cc55:	e9 6d 01 00 00       	jmpq   1cdc7 <__sfvwrite+0x432>
   1cc5a:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   1cc61:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   1cc68:	eb 23                	jmp    1cc8d <__sfvwrite+0x2f8>
   1cc6a:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   1cc71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cc75:	48 8b 00             	mov    (%rax),%rax
   1cc78:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1cc7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cc80:	48 8b 40 08          	mov    0x8(%rax),%rax
   1cc84:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1cc88:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   1cc8d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1cc92:	74 d6                	je     1cc6a <__sfvwrite+0x2d5>
   1cc94:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   1cc98:	75 48                	jne    1cce2 <__sfvwrite+0x34d>
   1cc9a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cc9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cca2:	be 0a 00 00 00       	mov    $0xa,%esi
   1cca7:	48 89 c7             	mov    %rax,%rdi
   1ccaa:	e8 42 0a 00 00       	callq  1d6f1 <memchr>
   1ccaf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1ccb3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1ccb8:	74 17                	je     1ccd1 <__sfvwrite+0x33c>
   1ccba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ccbe:	48 83 c0 01          	add    $0x1,%rax
   1ccc2:	48 89 c2             	mov    %rax,%rdx
   1ccc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ccc9:	48 29 c2             	sub    %rax,%rdx
   1cccc:	48 89 d0             	mov    %rdx,%rax
   1cccf:	eb 07                	jmp    1ccd8 <__sfvwrite+0x343>
   1ccd1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ccd5:	83 c0 01             	add    $0x1,%eax
   1ccd8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1ccdb:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   1cce2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1cce5:	48 98                	cltq   
   1cce7:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1cceb:	48 0f 46 45 d0       	cmovbe -0x30(%rbp),%rax
   1ccf0:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1ccf3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ccf7:	8b 50 0c             	mov    0xc(%rax),%edx
   1ccfa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ccfe:	8b 40 20             	mov    0x20(%rax),%eax
   1cd01:	01 d0                	add    %edx,%eax
   1cd03:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cd06:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd0a:	48 8b 10             	mov    (%rax),%rdx
   1cd0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd11:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cd15:	48 39 c2             	cmp    %rax,%rdx
   1cd18:	76 0c                	jbe    1cd26 <__sfvwrite+0x391>
   1cd1a:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1cd1d:	3b 45 bc             	cmp    -0x44(%rbp),%eax
   1cd20:	0f 8f ae 00 00 00    	jg     1cdd4 <__sfvwrite+0x43f>
   1cd26:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd2a:	8b 40 20             	mov    0x20(%rax),%eax
   1cd2d:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cd30:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cd33:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   1cd36:	0f 8e 9e 00 00 00    	jle    1cdda <__sfvwrite+0x445>
   1cd3c:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1cd3f:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1cd42:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cd45:	48 63 d0             	movslq %eax,%rdx
   1cd48:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd4c:	48 8b 00             	mov    (%rax),%rax
   1cd4f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1cd53:	48 89 ce             	mov    %rcx,%rsi
   1cd56:	48 89 c7             	mov    %rax,%rdi
   1cd59:	e8 69 69 ff ff       	callq  136c7 <memcpy>
   1cd5e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd62:	8b 40 0c             	mov    0xc(%rax),%eax
   1cd65:	2b 45 bc             	sub    -0x44(%rbp),%eax
   1cd68:	89 c2                	mov    %eax,%edx
   1cd6a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd6e:	89 50 0c             	mov    %edx,0xc(%rax)
   1cd71:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd75:	48 8b 10             	mov    (%rax),%rdx
   1cd78:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cd7b:	48 98                	cltq   
   1cd7d:	48 01 c2             	add    %rax,%rdx
   1cd80:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cd84:	48 89 10             	mov    %rdx,(%rax)
   1cd87:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cd8a:	29 45 c4             	sub    %eax,-0x3c(%rbp)
   1cd8d:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   1cd91:	74 4a                	je     1cddd <__sfvwrite+0x448>
   1cd93:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cd96:	48 98                	cltq   
   1cd98:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   1cd9c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1cd9f:	48 98                	cltq   
   1cda1:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   1cda5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cda9:	8b 40 0c             	mov    0xc(%rax),%eax
   1cdac:	2b 45 bc             	sub    -0x44(%rbp),%eax
   1cdaf:	89 c2                	mov    %eax,%edx
   1cdb1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cdb5:	89 50 0c             	mov    %edx,0xc(%rax)
   1cdb8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cdbc:	8b 40 0c             	mov    0xc(%rax),%eax
   1cdbf:	85 c0                	test   %eax,%eax
   1cdc1:	0f 85 c6 fe ff ff    	jne    1cc8d <__sfvwrite+0x2f8>
   1cdc7:	b8 00 00 00 00       	mov    $0x0,%eax
   1cdcc:	eb 2a                	jmp    1cdf8 <__sfvwrite+0x463>
   1cdce:	90                   	nop
   1cdcf:	eb 0d                	jmp    1cdde <__sfvwrite+0x449>
   1cdd1:	90                   	nop
   1cdd2:	eb 0a                	jmp    1cdde <__sfvwrite+0x449>
   1cdd4:	90                   	nop
   1cdd5:	eb 07                	jmp    1cdde <__sfvwrite+0x449>
   1cdd7:	90                   	nop
   1cdd8:	eb 04                	jmp    1cdde <__sfvwrite+0x449>
   1cdda:	90                   	nop
   1cddb:	eb 01                	jmp    1cdde <__sfvwrite+0x449>
   1cddd:	90                   	nop
   1cdde:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cde2:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1cde6:	83 c8 40             	or     $0x40,%eax
   1cde9:	89 c2                	mov    %eax,%edx
   1cdeb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1cdef:	66 89 50 10          	mov    %dx,0x10(%rax)
   1cdf3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1cdf8:	c9                   	leaveq 
   1cdf9:	c3                   	retq   

000000000001cdfa <roundup>:
   1cdfa:	55                   	push   %rbp
   1cdfb:	48 89 e5             	mov    %rsp,%rbp
   1cdfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ce02:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1ce05:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1ce08:	48 98                	cltq   
   1ce0a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1ce0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ce12:	48 01 d0             	add    %rdx,%rax
   1ce15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ce19:	eb 24                	jmp    1ce3f <roundup+0x45>
   1ce1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce1f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1ce23:	75 0e                	jne    1ce33 <roundup+0x39>
   1ce25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce29:	c6 00 01             	movb   $0x1,(%rax)
   1ce2c:	b8 01 00 00 00       	mov    $0x1,%eax
   1ce31:	eb 2e                	jmp    1ce61 <roundup+0x67>
   1ce33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce37:	c6 00 00             	movb   $0x0,(%rax)
   1ce3a:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1ce3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce43:	0f b6 00             	movzbl (%rax),%eax
   1ce46:	3c 0f                	cmp    $0xf,%al
   1ce48:	74 d1                	je     1ce1b <roundup+0x21>
   1ce4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce4e:	0f b6 00             	movzbl (%rax),%eax
   1ce51:	83 c0 01             	add    $0x1,%eax
   1ce54:	89 c2                	mov    %eax,%edx
   1ce56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce5a:	88 10                	mov    %dl,(%rax)
   1ce5c:	b8 00 00 00 00       	mov    $0x0,%eax
   1ce61:	5d                   	pop    %rbp
   1ce62:	c3                   	retq   

000000000001ce63 <dorounding>:
   1ce63:	55                   	push   %rbp
   1ce64:	48 89 e5             	mov    %rsp,%rbp
   1ce67:	48 83 ec 28          	sub    $0x28,%rsp
   1ce6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ce6f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1ce72:	89 55 e0             	mov    %edx,-0x20(%rbp)
   1ce75:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
   1ce79:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1ce80:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1ce83:	48 63 d0             	movslq %eax,%rdx
   1ce86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ce8a:	48 01 d0             	add    %rdx,%rax
   1ce8d:	0f b6 00             	movzbl (%rax),%eax
   1ce90:	3c 08                	cmp    $0x8,%al
   1ce92:	7f 31                	jg     1cec5 <dorounding+0x62>
   1ce94:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1ce97:	48 63 d0             	movslq %eax,%rdx
   1ce9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ce9e:	48 01 d0             	add    %rdx,%rax
   1cea1:	0f b6 00             	movzbl (%rax),%eax
   1cea4:	3c 08                	cmp    $0x8,%al
   1cea6:	75 31                	jne    1ced9 <dorounding+0x76>
   1cea8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1ceab:	48 98                	cltq   
   1cead:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ceb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ceb5:	48 01 d0             	add    %rdx,%rax
   1ceb8:	0f b6 00             	movzbl (%rax),%eax
   1cebb:	0f be c0             	movsbl %al,%eax
   1cebe:	83 e0 01             	and    $0x1,%eax
   1cec1:	85 c0                	test   %eax,%eax
   1cec3:	74 14                	je     1ced9 <dorounding+0x76>
   1cec5:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1cec8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cecc:	89 d6                	mov    %edx,%esi
   1cece:	48 89 c7             	mov    %rax,%rdi
   1ced1:	e8 24 ff ff ff       	callq  1cdfa <roundup>
   1ced6:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1ced9:	90                   	nop
   1ceda:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   1cede:	74 0f                	je     1ceef <dorounding+0x8c>
   1cee0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cee4:	8b 00                	mov    (%rax),%eax
   1cee6:	8d 50 04             	lea    0x4(%rax),%edx
   1cee9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ceed:	89 10                	mov    %edx,(%rax)
   1ceef:	90                   	nop
   1cef0:	c9                   	leaveq 
   1cef1:	c3                   	retq   

000000000001cef2 <__hdtoa>:
   1cef2:	55                   	push   %rbp
   1cef3:	48 89 e5             	mov    %rsp,%rbp
   1cef6:	48 83 ec 60          	sub    $0x60,%rsp
   1cefa:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
   1ceff:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   1cf03:	89 75 cc             	mov    %esi,-0x34(%rbp)
   1cf06:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1cf0a:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   1cf0e:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
   1cf12:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1cf16:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1cf1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cf1e:	0f b6 40 07          	movzbl 0x7(%rax),%eax
   1cf22:	c0 e8 07             	shr    $0x7,%al
   1cf25:	0f b6 d0             	movzbl %al,%edx
   1cf28:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1cf2c:	89 10                	mov    %edx,(%rax)
   1cf2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cf32:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1cf36:	f2 0f 10 45 a8       	movsd  -0x58(%rbp),%xmm0
   1cf3b:	e8 6b 1e 00 00       	callq  1edab <__fpclassify>
   1cf40:	83 f8 04             	cmp    $0x4,%eax
   1cf43:	0f 87 f3 00 00 00    	ja     1d03c <__hdtoa+0x14a>
   1cf49:	89 c0                	mov    %eax,%eax
   1cf4b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1cf52:	00 
   1cf53:	48 8d 05 a6 fd 01 00 	lea    0x1fda6(%rip),%rax        # 3cd00 <xdigs_upper.3167+0xc0>
   1cf5a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1cf5d:	48 63 d0             	movslq %eax,%rdx
   1cf60:	48 8d 05 99 fd 01 00 	lea    0x1fd99(%rip),%rax        # 3cd00 <xdigs_upper.3167+0xc0>
   1cf67:	48 01 d0             	add    %rdx,%rax
   1cf6a:	ff e0                	jmpq   *%rax
   1cf6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cf70:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   1cf74:	66 c1 e8 04          	shr    $0x4,%ax
   1cf78:	66 25 ff 07          	and    $0x7ff,%ax
   1cf7c:	0f b7 c0             	movzwl %ax,%eax
   1cf7f:	8d 90 02 fc ff ff    	lea    -0x3fe(%rax),%edx
   1cf85:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cf89:	89 10                	mov    %edx,(%rax)
   1cf8b:	e9 b1 00 00 00       	jmpq   1d041 <__hdtoa+0x14f>
   1cf90:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cf94:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1cf9a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1cf9e:	ba 01 00 00 00       	mov    $0x1,%edx
   1cfa3:	48 89 c6             	mov    %rax,%rsi
   1cfa6:	48 8d 3d 23 fd 01 00 	lea    0x1fd23(%rip),%rdi        # 3ccd0 <xdigs_upper.3167+0x90>
   1cfad:	e8 71 df ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1cfb2:	e9 8b 02 00 00       	jmpq   1d242 <__hdtoa+0x350>
   1cfb7:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
   1cfbc:	f2 0f 10 05 1c fd 01 	movsd  0x1fd1c(%rip),%xmm0        # 3cce0 <xdigs_upper.3167+0xa0>
   1cfc3:	00 
   1cfc4:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1cfc8:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
   1cfcd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cfd1:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   1cfd5:	66 c1 e8 04          	shr    $0x4,%ax
   1cfd9:	66 25 ff 07          	and    $0x7ff,%ax
   1cfdd:	0f b7 c0             	movzwl %ax,%eax
   1cfe0:	8d 90 00 fa ff ff    	lea    -0x600(%rax),%edx
   1cfe6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cfea:	89 10                	mov    %edx,(%rax)
   1cfec:	eb 53                	jmp    1d041 <__hdtoa+0x14f>
   1cfee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cff2:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   1cff8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1cffc:	ba 08 00 00 00       	mov    $0x8,%edx
   1d001:	48 89 c6             	mov    %rax,%rsi
   1d004:	48 8d 3d c7 fc 01 00 	lea    0x1fcc7(%rip),%rdi        # 3ccd2 <xdigs_upper.3167+0x92>
   1d00b:	e8 13 df ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1d010:	e9 2d 02 00 00       	jmpq   1d242 <__hdtoa+0x350>
   1d015:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d019:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   1d01f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1d023:	ba 03 00 00 00       	mov    $0x3,%edx
   1d028:	48 89 c6             	mov    %rax,%rsi
   1d02b:	48 8d 3d a9 fc 01 00 	lea    0x1fca9(%rip),%rdi        # 3ccdb <xdigs_upper.3167+0x9b>
   1d032:	e8 ec de ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1d037:	e9 06 02 00 00       	jmpq   1d242 <__hdtoa+0x350>
   1d03c:	e8 98 e5 01 00       	callq  3b5d9 <abort>
   1d041:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   1d045:	75 07                	jne    1d04e <__hdtoa+0x15c>
   1d047:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
   1d04e:	8b 05 d4 fc 01 00    	mov    0x1fcd4(%rip),%eax        # 3cd28 <sigfigs.2500>
   1d054:	39 45 cc             	cmp    %eax,-0x34(%rbp)
   1d057:	0f 4d 45 cc          	cmovge -0x34(%rbp),%eax
   1d05b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1d05e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1d061:	89 c7                	mov    %eax,%edi
   1d063:	e8 57 de ff ff       	callq  1aebf <__rv_alloc_D2A>
   1d068:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d06c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d071:	75 0a                	jne    1d07d <__hdtoa+0x18b>
   1d073:	b8 00 00 00 00       	mov    $0x0,%eax
   1d078:	e9 c5 01 00 00       	jmpq   1d242 <__hdtoa+0x350>
   1d07d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1d080:	48 98                	cltq   
   1d082:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d08a:	48 01 d0             	add    %rdx,%rax
   1d08d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d091:	eb 0c                	jmp    1d09f <__hdtoa+0x1ad>
   1d093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d097:	c6 00 00             	movb   $0x0,(%rax)
   1d09a:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d09f:	8b 05 83 fc 01 00    	mov    0x1fc83(%rip),%eax        # 3cd28 <sigfigs.2500>
   1d0a5:	48 98                	cltq   
   1d0a7:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d0af:	48 01 d0             	add    %rdx,%rax
   1d0b2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d0b6:	77 db                	ja     1d093 <__hdtoa+0x1a1>
   1d0b8:	eb 27                	jmp    1d0e1 <__hdtoa+0x1ef>
   1d0ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d0be:	8b 00                	mov    (%rax),%eax
   1d0c0:	83 e0 0f             	and    $0xf,%eax
   1d0c3:	89 c2                	mov    %eax,%edx
   1d0c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d0c9:	88 10                	mov    %dl,(%rax)
   1d0cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d0cf:	8b 00                	mov    (%rax),%eax
   1d0d1:	c1 e8 04             	shr    $0x4,%eax
   1d0d4:	89 c2                	mov    %eax,%edx
   1d0d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d0da:	89 10                	mov    %edx,(%rax)
   1d0dc:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d0e1:	8b 05 41 fc 01 00    	mov    0x1fc41(%rip),%eax        # 3cd28 <sigfigs.2500>
   1d0e7:	48 98                	cltq   
   1d0e9:	48 8d 50 f7          	lea    -0x9(%rax),%rdx
   1d0ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d0f1:	48 01 d0             	add    %rdx,%rax
   1d0f4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d0f8:	76 58                	jbe    1d152 <__hdtoa+0x260>
   1d0fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d0fe:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1d102:	77 b6                	ja     1d0ba <__hdtoa+0x1c8>
   1d104:	eb 4c                	jmp    1d152 <__hdtoa+0x260>
   1d106:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d10a:	8b 40 04             	mov    0x4(%rax),%eax
   1d10d:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1d112:	83 e0 0f             	and    $0xf,%eax
   1d115:	89 c2                	mov    %eax,%edx
   1d117:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d11b:	88 10                	mov    %dl,(%rax)
   1d11d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d121:	8b 40 04             	mov    0x4(%rax),%eax
   1d124:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1d129:	c1 f8 04             	sar    $0x4,%eax
   1d12c:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1d131:	89 c2                	mov    %eax,%edx
   1d133:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d137:	89 d1                	mov    %edx,%ecx
   1d139:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   1d13f:	8b 50 04             	mov    0x4(%rax),%edx
   1d142:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
   1d148:	09 ca                	or     %ecx,%edx
   1d14a:	89 50 04             	mov    %edx,0x4(%rax)
   1d14d:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d152:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d156:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1d15a:	77 aa                	ja     1d106 <__hdtoa+0x214>
   1d15c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d160:	8b 40 04             	mov    0x4(%rax),%eax
   1d163:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1d168:	83 c8 01             	or     $0x1,%eax
   1d16b:	89 c2                	mov    %eax,%edx
   1d16d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d171:	88 10                	mov    %dl,(%rax)
   1d173:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   1d177:	79 26                	jns    1d19f <__hdtoa+0x2ad>
   1d179:	8b 05 a9 fb 01 00    	mov    0x1fba9(%rip),%eax        # 3cd28 <sigfigs.2500>
   1d17f:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1d182:	eb 04                	jmp    1d188 <__hdtoa+0x296>
   1d184:	83 6d cc 01          	subl   $0x1,-0x34(%rbp)
   1d188:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1d18b:	48 98                	cltq   
   1d18d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d195:	48 01 d0             	add    %rdx,%rax
   1d198:	0f b6 00             	movzbl (%rax),%eax
   1d19b:	84 c0                	test   %al,%al
   1d19d:	74 e5                	je     1d184 <__hdtoa+0x292>
   1d19f:	8b 05 83 fb 01 00    	mov    0x1fb83(%rip),%eax        # 3cd28 <sigfigs.2500>
   1d1a5:	39 45 cc             	cmp    %eax,-0x34(%rbp)
   1d1a8:	7d 35                	jge    1d1df <__hdtoa+0x2ed>
   1d1aa:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1d1ad:	48 63 d0             	movslq %eax,%rdx
   1d1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d1b4:	48 01 d0             	add    %rdx,%rax
   1d1b7:	0f b6 00             	movzbl (%rax),%eax
   1d1ba:	84 c0                	test   %al,%al
   1d1bc:	74 21                	je     1d1df <__hdtoa+0x2ed>
   1d1be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d1c2:	0f b6 40 07          	movzbl 0x7(%rax),%eax
   1d1c6:	c0 e8 07             	shr    $0x7,%al
   1d1c9:	0f b6 d0             	movzbl %al,%edx
   1d1cc:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1d1d0:	8b 75 cc             	mov    -0x34(%rbp),%esi
   1d1d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d1d7:	48 89 c7             	mov    %rax,%rdi
   1d1da:	e8 84 fc ff ff       	callq  1ce63 <dorounding>
   1d1df:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1d1e2:	48 63 d0             	movslq %eax,%rdx
   1d1e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d1e9:	48 01 d0             	add    %rdx,%rax
   1d1ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d1f0:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1d1f5:	74 0b                	je     1d202 <__hdtoa+0x310>
   1d1f7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1d1fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d1ff:	48 89 10             	mov    %rdx,(%rax)
   1d202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d206:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d20a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d20e:	c6 00 00             	movb   $0x0,(%rax)
   1d211:	eb 21                	jmp    1d234 <__hdtoa+0x342>
   1d213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d217:	0f b6 00             	movzbl (%rax),%eax
   1d21a:	0f be c0             	movsbl %al,%eax
   1d21d:	89 c2                	mov    %eax,%edx
   1d21f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d223:	48 01 d0             	add    %rdx,%rax
   1d226:	0f b6 10             	movzbl (%rax),%edx
   1d229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d22d:	88 10                	mov    %dl,(%rax)
   1d22f:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d234:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d238:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1d23c:	73 d5                	jae    1d213 <__hdtoa+0x321>
   1d23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d242:	c9                   	leaveq 
   1d243:	c3                   	retq   

000000000001d244 <__hldtoa>:
   1d244:	55                   	push   %rbp
   1d245:	48 89 e5             	mov    %rsp,%rbp
   1d248:	48 83 ec 50          	sub    $0x50,%rsp
   1d24c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d250:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   1d253:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d257:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1d25b:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   1d25f:	48 8d 45 10          	lea    0x10(%rbp),%rax
   1d263:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d267:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d26b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   1d26f:	c0 e8 07             	shr    $0x7,%al
   1d272:	0f b6 d0             	movzbl %al,%edx
   1d275:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d279:	89 10                	mov    %edx,(%rax)
   1d27b:	db 6d 10             	fldt   0x10(%rbp)
   1d27e:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   1d283:	db 3c 24             	fstpt  (%rsp)
   1d286:	e8 ab 1b 00 00       	callq  1ee36 <__fpclassifyl>
   1d28b:	48 83 c4 10          	add    $0x10,%rsp
   1d28f:	83 f8 04             	cmp    $0x4,%eax
   1d292:	0f 87 e3 00 00 00    	ja     1d37b <__hldtoa+0x137>
   1d298:	89 c0                	mov    %eax,%eax
   1d29a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1d2a1:	00 
   1d2a2:	48 8d 05 6b fa 01 00 	lea    0x1fa6b(%rip),%rax        # 3cd14 <xdigs_upper.3167+0xd4>
   1d2a9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1d2ac:	48 63 d0             	movslq %eax,%rdx
   1d2af:	48 8d 05 5e fa 01 00 	lea    0x1fa5e(%rip),%rax        # 3cd14 <xdigs_upper.3167+0xd4>
   1d2b6:	48 01 d0             	add    %rdx,%rax
   1d2b9:	ff e0                	jmpq   *%rax
   1d2bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d2bf:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   1d2c3:	66 25 ff 7f          	and    $0x7fff,%ax
   1d2c7:	0f b7 c0             	movzwl %ax,%eax
   1d2ca:	8d 90 ff bf ff ff    	lea    -0x4001(%rax),%edx
   1d2d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d2d4:	89 10                	mov    %edx,(%rax)
   1d2d6:	e9 a5 00 00 00       	jmpq   1d380 <__hldtoa+0x13c>
   1d2db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d2df:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1d2e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d2e9:	ba 01 00 00 00       	mov    $0x1,%edx
   1d2ee:	48 89 c6             	mov    %rax,%rsi
   1d2f1:	48 8d 3d d8 f9 01 00 	lea    0x1f9d8(%rip),%rdi        # 3ccd0 <xdigs_upper.3167+0x90>
   1d2f8:	e8 26 dc ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1d2fd:	e9 58 02 00 00       	jmpq   1d55a <__hldtoa+0x316>
   1d302:	db 6d 10             	fldt   0x10(%rbp)
   1d305:	db 2d e5 f9 01 00    	fldt   0x1f9e5(%rip)        # 3ccf0 <xdigs_upper.3167+0xb0>
   1d30b:	de c9                	fmulp  %st,%st(1)
   1d30d:	db 7d 10             	fstpt  0x10(%rbp)
   1d310:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d314:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   1d318:	66 25 ff 7f          	and    $0x7fff,%ax
   1d31c:	0f b7 c0             	movzwl %ax,%eax
   1d31f:	8d 90 fd bd ff ff    	lea    -0x4203(%rax),%edx
   1d325:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d329:	89 10                	mov    %edx,(%rax)
   1d32b:	eb 53                	jmp    1d380 <__hldtoa+0x13c>
   1d32d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d331:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   1d337:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d33b:	ba 08 00 00 00       	mov    $0x8,%edx
   1d340:	48 89 c6             	mov    %rax,%rsi
   1d343:	48 8d 3d 88 f9 01 00 	lea    0x1f988(%rip),%rdi        # 3ccd2 <xdigs_upper.3167+0x92>
   1d34a:	e8 d4 db ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1d34f:	e9 06 02 00 00       	jmpq   1d55a <__hldtoa+0x316>
   1d354:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d358:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   1d35e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d362:	ba 03 00 00 00       	mov    $0x3,%edx
   1d367:	48 89 c6             	mov    %rax,%rsi
   1d36a:	48 8d 3d 6a f9 01 00 	lea    0x1f96a(%rip),%rdi        # 3ccdb <xdigs_upper.3167+0x9b>
   1d371:	e8 ad db ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1d376:	e9 df 01 00 00       	jmpq   1d55a <__hldtoa+0x316>
   1d37b:	e8 59 e2 01 00       	callq  3b5d9 <abort>
   1d380:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1d384:	75 07                	jne    1d38d <__hldtoa+0x149>
   1d386:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
   1d38d:	8b 05 99 f9 01 00    	mov    0x1f999(%rip),%eax        # 3cd2c <sigfigs.2535>
   1d393:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   1d396:	0f 4d 45 d4          	cmovge -0x2c(%rbp),%eax
   1d39a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1d39d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1d3a0:	89 c7                	mov    %eax,%edi
   1d3a2:	e8 18 db ff ff       	callq  1aebf <__rv_alloc_D2A>
   1d3a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d3ab:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d3b0:	75 0a                	jne    1d3bc <__hldtoa+0x178>
   1d3b2:	b8 00 00 00 00       	mov    $0x0,%eax
   1d3b7:	e9 9e 01 00 00       	jmpq   1d55a <__hldtoa+0x316>
   1d3bc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1d3bf:	48 98                	cltq   
   1d3c1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d3c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d3c9:	48 01 d0             	add    %rdx,%rax
   1d3cc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d3d0:	eb 0c                	jmp    1d3de <__hldtoa+0x19a>
   1d3d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d3d6:	c6 00 00             	movb   $0x0,(%rax)
   1d3d9:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d3de:	8b 05 48 f9 01 00    	mov    0x1f948(%rip),%eax        # 3cd2c <sigfigs.2535>
   1d3e4:	48 98                	cltq   
   1d3e6:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d3ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d3ee:	48 01 d0             	add    %rdx,%rax
   1d3f1:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d3f5:	77 db                	ja     1d3d2 <__hldtoa+0x18e>
   1d3f7:	eb 27                	jmp    1d420 <__hldtoa+0x1dc>
   1d3f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d3fd:	8b 00                	mov    (%rax),%eax
   1d3ff:	83 e0 0f             	and    $0xf,%eax
   1d402:	89 c2                	mov    %eax,%edx
   1d404:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d408:	88 10                	mov    %dl,(%rax)
   1d40a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d40e:	8b 00                	mov    (%rax),%eax
   1d410:	c1 e8 04             	shr    $0x4,%eax
   1d413:	89 c2                	mov    %eax,%edx
   1d415:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d419:	89 10                	mov    %edx,(%rax)
   1d41b:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d420:	8b 05 06 f9 01 00    	mov    0x1f906(%rip),%eax        # 3cd2c <sigfigs.2535>
   1d426:	48 98                	cltq   
   1d428:	48 8d 50 f7          	lea    -0x9(%rax),%rdx
   1d42c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d430:	48 01 d0             	add    %rdx,%rax
   1d433:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d437:	76 36                	jbe    1d46f <__hldtoa+0x22b>
   1d439:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d43d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1d441:	77 b6                	ja     1d3f9 <__hldtoa+0x1b5>
   1d443:	eb 2a                	jmp    1d46f <__hldtoa+0x22b>
   1d445:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d449:	8b 40 04             	mov    0x4(%rax),%eax
   1d44c:	83 e0 0f             	and    $0xf,%eax
   1d44f:	89 c2                	mov    %eax,%edx
   1d451:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d455:	88 10                	mov    %dl,(%rax)
   1d457:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d45b:	8b 40 04             	mov    0x4(%rax),%eax
   1d45e:	c1 e8 04             	shr    $0x4,%eax
   1d461:	89 c2                	mov    %eax,%edx
   1d463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d467:	89 50 04             	mov    %edx,0x4(%rax)
   1d46a:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d46f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d473:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1d477:	77 cc                	ja     1d445 <__hldtoa+0x201>
   1d479:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d47d:	8b 40 04             	mov    0x4(%rax),%eax
   1d480:	83 c8 08             	or     $0x8,%eax
   1d483:	89 c2                	mov    %eax,%edx
   1d485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d489:	88 10                	mov    %dl,(%rax)
   1d48b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1d48f:	79 26                	jns    1d4b7 <__hldtoa+0x273>
   1d491:	8b 05 95 f8 01 00    	mov    0x1f895(%rip),%eax        # 3cd2c <sigfigs.2535>
   1d497:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1d49a:	eb 04                	jmp    1d4a0 <__hldtoa+0x25c>
   1d49c:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
   1d4a0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1d4a3:	48 98                	cltq   
   1d4a5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d4a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4ad:	48 01 d0             	add    %rdx,%rax
   1d4b0:	0f b6 00             	movzbl (%rax),%eax
   1d4b3:	84 c0                	test   %al,%al
   1d4b5:	74 e5                	je     1d49c <__hldtoa+0x258>
   1d4b7:	8b 05 6f f8 01 00    	mov    0x1f86f(%rip),%eax        # 3cd2c <sigfigs.2535>
   1d4bd:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   1d4c0:	7d 35                	jge    1d4f7 <__hldtoa+0x2b3>
   1d4c2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1d4c5:	48 63 d0             	movslq %eax,%rdx
   1d4c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4cc:	48 01 d0             	add    %rdx,%rax
   1d4cf:	0f b6 00             	movzbl (%rax),%eax
   1d4d2:	84 c0                	test   %al,%al
   1d4d4:	74 21                	je     1d4f7 <__hldtoa+0x2b3>
   1d4d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d4da:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   1d4de:	c0 e8 07             	shr    $0x7,%al
   1d4e1:	0f b6 d0             	movzbl %al,%edx
   1d4e4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1d4e8:	8b 75 d4             	mov    -0x2c(%rbp),%esi
   1d4eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4ef:	48 89 c7             	mov    %rax,%rdi
   1d4f2:	e8 6c f9 ff ff       	callq  1ce63 <dorounding>
   1d4f7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1d4fa:	48 63 d0             	movslq %eax,%rdx
   1d4fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d501:	48 01 d0             	add    %rdx,%rax
   1d504:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d508:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   1d50d:	74 0b                	je     1d51a <__hldtoa+0x2d6>
   1d50f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d513:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d517:	48 89 10             	mov    %rdx,(%rax)
   1d51a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d51e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d522:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d526:	c6 00 00             	movb   $0x0,(%rax)
   1d529:	eb 21                	jmp    1d54c <__hldtoa+0x308>
   1d52b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d52f:	0f b6 00             	movzbl (%rax),%eax
   1d532:	0f be c0             	movsbl %al,%eax
   1d535:	89 c2                	mov    %eax,%edx
   1d537:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d53b:	48 01 d0             	add    %rdx,%rax
   1d53e:	0f b6 10             	movzbl (%rax),%edx
   1d541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d545:	88 10                	mov    %dl,(%rax)
   1d547:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d54c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d550:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1d554:	73 d5                	jae    1d52b <__hldtoa+0x2e7>
   1d556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d55a:	c9                   	leaveq 
   1d55b:	c3                   	retq   

000000000001d55c <__ldtoa>:
   1d55c:	55                   	push   %rbp
   1d55d:	48 89 e5             	mov    %rsp,%rbp
   1d560:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   1d564:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1d568:	89 75 a4             	mov    %esi,-0x5c(%rbp)
   1d56b:	89 55 a0             	mov    %edx,-0x60(%rbp)
   1d56e:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
   1d572:	4c 89 45 90          	mov    %r8,-0x70(%rbp)
   1d576:	4c 89 4d 88          	mov    %r9,-0x78(%rbp)
   1d57a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d581:	00 00 
   1d583:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d587:	31 c0                	xor    %eax,%eax
   1d589:	c7 45 d0 40 00 00 00 	movl   $0x40,-0x30(%rbp)
   1d590:	c7 45 d4 c3 bf ff ff 	movl   $0xffffbfc3,-0x2c(%rbp)
   1d597:	c7 45 d8 c0 3f 00 00 	movl   $0x3fc0,-0x28(%rbp)
   1d59e:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
   1d5a5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
   1d5ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d5b0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1d5b4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1d5b8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1d5bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d5c0:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   1d5c4:	c0 e8 07             	shr    $0x7,%al
   1d5c7:	0f b6 d0             	movzbl %al,%edx
   1d5ca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d5ce:	89 10                	mov    %edx,(%rax)
   1d5d0:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1d5d3:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1d5d6:	d1 f8                	sar    %eax
   1d5d8:	89 c1                	mov    %eax,%ecx
   1d5da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d5de:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   1d5e2:	c0 e8 07             	shr    $0x7,%al
   1d5e5:	0f b6 c0             	movzbl %al,%eax
   1d5e8:	21 c8                	and    %ecx,%eax
   1d5ea:	31 d0                	xor    %edx,%eax
   1d5ec:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1d5ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d5f3:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   1d5f7:	66 25 ff 7f          	and    $0x7fff,%ax
   1d5fb:	0f b7 c0             	movzwl %ax,%eax
   1d5fe:	2d 3e 40 00 00       	sub    $0x403e,%eax
   1d603:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   1d606:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d60a:	8b 00                	mov    (%rax),%eax
   1d60c:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1d60f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d613:	8b 40 04             	mov    0x4(%rax),%eax
   1d616:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1d619:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d61d:	db 28                	fldt   (%rax)
   1d61f:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   1d624:	db 3c 24             	fstpt  (%rsp)
   1d627:	e8 0a 18 00 00       	callq  1ee36 <__fpclassifyl>
   1d62c:	48 83 c4 10          	add    $0x10,%rsp
   1d630:	83 f8 04             	cmp    $0x4,%eax
   1d633:	77 54                	ja     1d689 <__ldtoa+0x12d>
   1d635:	89 c0                	mov    %eax,%eax
   1d637:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1d63e:	00 
   1d63f:	48 8d 05 ea f6 01 00 	lea    0x1f6ea(%rip),%rax        # 3cd30 <sigfigs.2535+0x4>
   1d646:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1d649:	48 63 d0             	movslq %eax,%rdx
   1d64c:	48 8d 05 dd f6 01 00 	lea    0x1f6dd(%rip),%rax        # 3cd30 <sigfigs.2535+0x4>
   1d653:	48 01 d0             	add    %rdx,%rax
   1d656:	ff e0                	jmpq   *%rax
   1d658:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
   1d65f:	eb 2d                	jmp    1d68e <__ldtoa+0x132>
   1d661:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   1d668:	eb 24                	jmp    1d68e <__ldtoa+0x132>
   1d66a:	c7 45 b0 02 00 00 00 	movl   $0x2,-0x50(%rbp)
   1d671:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
   1d675:	eb 17                	jmp    1d68e <__ldtoa+0x132>
   1d677:	c7 45 b0 03 00 00 00 	movl   $0x3,-0x50(%rbp)
   1d67e:	eb 0e                	jmp    1d68e <__ldtoa+0x132>
   1d680:	c7 45 b0 04 00 00 00 	movl   $0x4,-0x50(%rbp)
   1d687:	eb 05                	jmp    1d68e <__ldtoa+0x132>
   1d689:	e8 4b df 01 00       	callq  3b5d9 <abort>
   1d68e:	44 8b 45 a0          	mov    -0x60(%rbp),%r8d
   1d692:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   1d695:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1d699:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1d69d:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   1d6a0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1d6a4:	ff 75 88             	pushq  -0x78(%rbp)
   1d6a7:	ff 75 98             	pushq  -0x68(%rbp)
   1d6aa:	45 89 c1             	mov    %r8d,%r9d
   1d6ad:	41 89 f8             	mov    %edi,%r8d
   1d6b0:	48 89 c7             	mov    %rax,%rdi
   1d6b3:	e8 4e 19 00 00       	callq  1f006 <__gdtoa>
   1d6b8:	48 83 c4 10          	add    $0x10,%rsp
   1d6bc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1d6c0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d6c4:	8b 00                	mov    (%rax),%eax
   1d6c6:	3d 00 80 ff ff       	cmp    $0xffff8000,%eax
   1d6cb:	75 0a                	jne    1d6d7 <__ldtoa+0x17b>
   1d6cd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d6d1:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   1d6d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d6db:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1d6df:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1d6e6:	00 00 
   1d6e8:	74 05                	je     1d6ef <__ldtoa+0x193>
   1d6ea:	e8 9d dd fe ff       	callq  b48c <__stack_chk_fail>
   1d6ef:	c9                   	leaveq 
   1d6f0:	c3                   	retq   

000000000001d6f1 <memchr>:
   1d6f1:	55                   	push   %rbp
   1d6f2:	48 89 e5             	mov    %rsp,%rbp
   1d6f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d6f9:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1d6fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1d700:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1d705:	74 34                	je     1d73b <memchr+0x4a>
   1d707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d70b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d70f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d713:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1d717:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1d71b:	0f b6 00             	movzbl (%rax),%eax
   1d71e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1d721:	38 d0                	cmp    %dl,%al
   1d723:	75 0a                	jne    1d72f <memchr+0x3e>
   1d725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d729:	48 83 e8 01          	sub    $0x1,%rax
   1d72d:	eb 11                	jmp    1d740 <memchr+0x4f>
   1d72f:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   1d734:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1d739:	75 d4                	jne    1d70f <memchr+0x1e>
   1d73b:	b8 00 00 00 00       	mov    $0x0,%eax
   1d740:	5d                   	pop    %rbp
   1d741:	c3                   	retq   

000000000001d742 <memmove>:
   1d742:	55                   	push   %rbp
   1d743:	48 89 e5             	mov    %rsp,%rbp
   1d746:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d74a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d74e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d756:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d75a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d75e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d762:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1d767:	0f 84 ff 01 00 00    	je     1d96c <memmove+0x22a>
   1d76d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d771:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1d775:	0f 84 f1 01 00 00    	je     1d96c <memmove+0x22a>
   1d77b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d77f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d783:	48 39 c2             	cmp    %rax,%rdx
   1d786:	0f 83 fb 00 00 00    	jae    1d887 <memmove+0x145>
   1d78c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d790:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d798:	48 0b 45 f8          	or     -0x8(%rbp),%rax
   1d79c:	83 e0 07             	and    $0x7,%eax
   1d79f:	48 85 c0             	test   %rax,%rax
   1d7a2:	74 68                	je     1d80c <memmove+0xca>
   1d7a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d7a8:	48 33 45 f8          	xor    -0x8(%rbp),%rax
   1d7ac:	83 e0 07             	and    $0x7,%eax
   1d7af:	48 85 c0             	test   %rax,%rax
   1d7b2:	75 07                	jne    1d7bb <memmove+0x79>
   1d7b4:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   1d7b9:	77 0a                	ja     1d7c5 <memmove+0x83>
   1d7bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d7bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d7c3:	eb 16                	jmp    1d7db <memmove+0x99>
   1d7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d7c9:	83 e0 07             	and    $0x7,%eax
   1d7cc:	ba 08 00 00 00       	mov    $0x8,%edx
   1d7d1:	48 29 c2             	sub    %rax,%rdx
   1d7d4:	48 89 d0             	mov    %rdx,%rax
   1d7d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d7db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d7df:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   1d7e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d7e7:	48 8d 42 01          	lea    0x1(%rdx),%rax
   1d7eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d7ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d7f3:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1d7f7:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   1d7fb:	0f b6 12             	movzbl (%rdx),%edx
   1d7fe:	88 10                	mov    %dl,(%rax)
   1d800:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1d805:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d80a:	75 d7                	jne    1d7e3 <memmove+0xa1>
   1d80c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d810:	48 c1 e8 03          	shr    $0x3,%rax
   1d814:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d818:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d81d:	74 24                	je     1d843 <memmove+0x101>
   1d81f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d823:	48 8b 10             	mov    (%rax),%rdx
   1d826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d82a:	48 89 10             	mov    %rdx,(%rax)
   1d82d:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
   1d832:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1d837:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1d83c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d841:	75 dc                	jne    1d81f <memmove+0xdd>
   1d843:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d847:	83 e0 07             	and    $0x7,%eax
   1d84a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d84e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d853:	0f 84 14 01 00 00    	je     1d96d <memmove+0x22b>
   1d859:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d85d:	48 8d 42 01          	lea    0x1(%rdx),%rax
   1d861:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d865:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d869:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1d86d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   1d871:	0f b6 12             	movzbl (%rdx),%edx
   1d874:	88 10                	mov    %dl,(%rax)
   1d876:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1d87b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d880:	75 d7                	jne    1d859 <memmove+0x117>
   1d882:	e9 e6 00 00 00       	jmpq   1d96d <memmove+0x22b>
   1d887:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d88b:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   1d88f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d893:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   1d897:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d89b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d89f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d8a3:	48 0b 45 f8          	or     -0x8(%rbp),%rax
   1d8a7:	83 e0 07             	and    $0x7,%eax
   1d8aa:	48 85 c0             	test   %rax,%rax
   1d8ad:	74 51                	je     1d900 <memmove+0x1be>
   1d8af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d8b3:	48 33 45 f8          	xor    -0x8(%rbp),%rax
   1d8b7:	83 e0 07             	and    $0x7,%eax
   1d8ba:	48 85 c0             	test   %rax,%rax
   1d8bd:	75 07                	jne    1d8c6 <memmove+0x184>
   1d8bf:	48 83 7d c8 08       	cmpq   $0x8,-0x38(%rbp)
   1d8c4:	77 0a                	ja     1d8d0 <memmove+0x18e>
   1d8c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d8ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d8ce:	eb 05                	jmp    1d8d5 <memmove+0x193>
   1d8d0:	48 83 65 f8 07       	andq   $0x7,-0x8(%rbp)
   1d8d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d8d9:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   1d8dd:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   1d8e2:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d8e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d8eb:	0f b6 10             	movzbl (%rax),%edx
   1d8ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d8f2:	88 10                	mov    %dl,(%rax)
   1d8f4:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1d8f9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d8fe:	75 dd                	jne    1d8dd <memmove+0x19b>
   1d900:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d904:	48 c1 e8 03          	shr    $0x3,%rax
   1d908:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d90c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d911:	74 24                	je     1d937 <memmove+0x1f5>
   1d913:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
   1d918:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   1d91d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d921:	48 8b 10             	mov    (%rax),%rdx
   1d924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d928:	48 89 10             	mov    %rdx,(%rax)
   1d92b:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1d930:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d935:	75 dc                	jne    1d913 <memmove+0x1d1>
   1d937:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d93b:	83 e0 07             	and    $0x7,%eax
   1d93e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d942:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d947:	74 23                	je     1d96c <memmove+0x22a>
   1d949:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   1d94e:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   1d953:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d957:	0f b6 10             	movzbl (%rax),%edx
   1d95a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d95e:	88 10                	mov    %dl,(%rax)
   1d960:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1d965:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d96a:	75 dd                	jne    1d949 <memmove+0x207>
   1d96c:	90                   	nop
   1d96d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d971:	5d                   	pop    %rbp
   1d972:	c3                   	retq   

000000000001d973 <__Balloc_D2A>:
   1d973:	55                   	push   %rbp
   1d974:	48 89 e5             	mov    %rsp,%rbp
   1d977:	48 83 ec 20          	sub    $0x20,%rsp
   1d97b:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1d97e:	48 8d 3d 03 b0 02 00 	lea    0x2b003(%rip),%rdi        # 48988 <__dtoa_locks>
   1d985:	e8 67 62 ff ff       	callq  13bf1 <sgx_spin_lock>
   1d98a:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
   1d98e:	7f 47                	jg     1d9d7 <__Balloc_D2A+0x64>
   1d990:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1d993:	48 98                	cltq   
   1d995:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d99c:	00 
   1d99d:	48 8d 05 7c a6 02 00 	lea    0x2a67c(%rip),%rax        # 48020 <freelist>
   1d9a4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1d9a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d9ac:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d9b1:	74 24                	je     1d9d7 <__Balloc_D2A+0x64>
   1d9b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d9b7:	48 8b 10             	mov    (%rax),%rdx
   1d9ba:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1d9bd:	48 98                	cltq   
   1d9bf:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1d9c6:	00 
   1d9c7:	48 8d 05 52 a6 02 00 	lea    0x2a652(%rip),%rax        # 48020 <freelist>
   1d9ce:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
   1d9d2:	e9 b8 00 00 00       	jmpq   1da8f <__Balloc_D2A+0x11c>
   1d9d7:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1d9da:	ba 01 00 00 00       	mov    $0x1,%edx
   1d9df:	89 c1                	mov    %eax,%ecx
   1d9e1:	d3 e2                	shl    %cl,%edx
   1d9e3:	89 d0                	mov    %edx,%eax
   1d9e5:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1d9e8:	8b 45 f0             	mov    -0x10(%rbp),%eax
   1d9eb:	83 e8 01             	sub    $0x1,%eax
   1d9ee:	48 98                	cltq   
   1d9f0:	48 83 c0 0a          	add    $0xa,%rax
   1d9f4:	48 c1 e0 02          	shl    $0x2,%rax
   1d9f8:	48 83 e8 01          	sub    $0x1,%rax
   1d9fc:	48 c1 e8 03          	shr    $0x3,%rax
   1da00:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1da03:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
   1da07:	7f 51                	jg     1da5a <__Balloc_D2A+0xe7>
   1da09:	48 8b 05 d0 97 02 00 	mov    0x297d0(%rip),%rax        # 471e0 <pmem_next>
   1da10:	48 89 c2             	mov    %rax,%rdx
   1da13:	48 8d 05 66 a6 02 00 	lea    0x2a666(%rip),%rax        # 48080 <private_mem>
   1da1a:	48 29 c2             	sub    %rax,%rdx
   1da1d:	48 89 d0             	mov    %rdx,%rax
   1da20:	48 c1 f8 03          	sar    $0x3,%rax
   1da24:	48 89 c2             	mov    %rax,%rdx
   1da27:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1da2a:	48 01 d0             	add    %rdx,%rax
   1da2d:	48 3d 20 01 00 00    	cmp    $0x120,%rax
   1da33:	77 25                	ja     1da5a <__Balloc_D2A+0xe7>
   1da35:	48 8b 05 a4 97 02 00 	mov    0x297a4(%rip),%rax        # 471e0 <pmem_next>
   1da3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1da40:	48 8b 05 99 97 02 00 	mov    0x29799(%rip),%rax        # 471e0 <pmem_next>
   1da47:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1da4a:	48 c1 e2 03          	shl    $0x3,%rdx
   1da4e:	48 01 d0             	add    %rdx,%rax
   1da51:	48 89 05 88 97 02 00 	mov    %rax,0x29788(%rip)        # 471e0 <pmem_next>
   1da58:	eb 21                	jmp    1da7b <__Balloc_D2A+0x108>
   1da5a:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1da5d:	48 c1 e0 03          	shl    $0x3,%rax
   1da61:	48 89 c7             	mov    %rax,%rdi
   1da64:	e8 df 29 ff ff       	callq  10448 <dlmalloc>
   1da69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1da6d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1da72:	75 07                	jne    1da7b <__Balloc_D2A+0x108>
   1da74:	b8 00 00 00 00       	mov    $0x0,%eax
   1da79:	eb 3d                	jmp    1dab8 <__Balloc_D2A+0x145>
   1da7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da7f:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1da82:	89 50 08             	mov    %edx,0x8(%rax)
   1da85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da89:	8b 55 f0             	mov    -0x10(%rbp),%edx
   1da8c:	89 50 0c             	mov    %edx,0xc(%rax)
   1da8f:	48 8d 3d f2 ae 02 00 	lea    0x2aef2(%rip),%rdi        # 48988 <__dtoa_locks>
   1da96:	e8 bd 61 ff ff       	callq  13c58 <sgx_spin_unlock>
   1da9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da9f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   1daa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1daaa:	8b 50 14             	mov    0x14(%rax),%edx
   1daad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dab1:	89 50 10             	mov    %edx,0x10(%rax)
   1dab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dab8:	c9                   	leaveq 
   1dab9:	c3                   	retq   

000000000001daba <__Bfree_D2A>:
   1daba:	55                   	push   %rbp
   1dabb:	48 89 e5             	mov    %rsp,%rbp
   1dabe:	48 83 ec 10          	sub    $0x10,%rsp
   1dac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dac6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1dacb:	74 75                	je     1db42 <__Bfree_D2A+0x88>
   1dacd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dad1:	8b 40 08             	mov    0x8(%rax),%eax
   1dad4:	83 f8 09             	cmp    $0x9,%eax
   1dad7:	7e 0e                	jle    1dae7 <__Bfree_D2A+0x2d>
   1dad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dadd:	48 89 c7             	mov    %rax,%rdi
   1dae0:	e8 5a 34 ff ff       	callq  10f3f <dlfree>
   1dae5:	eb 5b                	jmp    1db42 <__Bfree_D2A+0x88>
   1dae7:	48 8d 3d 9a ae 02 00 	lea    0x2ae9a(%rip),%rdi        # 48988 <__dtoa_locks>
   1daee:	e8 fe 60 ff ff       	callq  13bf1 <sgx_spin_lock>
   1daf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1daf7:	8b 40 08             	mov    0x8(%rax),%eax
   1dafa:	48 98                	cltq   
   1dafc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1db03:	00 
   1db04:	48 8d 05 15 a5 02 00 	lea    0x2a515(%rip),%rax        # 48020 <freelist>
   1db0b:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
   1db0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1db13:	48 89 10             	mov    %rdx,(%rax)
   1db16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1db1a:	8b 40 08             	mov    0x8(%rax),%eax
   1db1d:	48 98                	cltq   
   1db1f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1db26:	00 
   1db27:	48 8d 05 f2 a4 02 00 	lea    0x2a4f2(%rip),%rax        # 48020 <freelist>
   1db2e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1db32:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
   1db36:	48 8d 3d 4b ae 02 00 	lea    0x2ae4b(%rip),%rdi        # 48988 <__dtoa_locks>
   1db3d:	e8 16 61 ff ff       	callq  13c58 <sgx_spin_unlock>
   1db42:	90                   	nop
   1db43:	c9                   	leaveq 
   1db44:	c3                   	retq   

000000000001db45 <__lo0bits_D2A>:
   1db45:	55                   	push   %rbp
   1db46:	48 89 e5             	mov    %rsp,%rbp
   1db49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1db4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1db51:	8b 00                	mov    (%rax),%eax
   1db53:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1db56:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1db59:	83 e0 07             	and    $0x7,%eax
   1db5c:	85 c0                	test   %eax,%eax
   1db5e:	74 4a                	je     1dbaa <__lo0bits_D2A+0x65>
   1db60:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1db63:	83 e0 01             	and    $0x1,%eax
   1db66:	85 c0                	test   %eax,%eax
   1db68:	74 0a                	je     1db74 <__lo0bits_D2A+0x2f>
   1db6a:	b8 00 00 00 00       	mov    $0x0,%eax
   1db6f:	e9 b2 00 00 00       	jmpq   1dc26 <__lo0bits_D2A+0xe1>
   1db74:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1db77:	83 e0 02             	and    $0x2,%eax
   1db7a:	85 c0                	test   %eax,%eax
   1db7c:	74 17                	je     1db95 <__lo0bits_D2A+0x50>
   1db7e:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1db81:	d1 e8                	shr    %eax
   1db83:	89 c2                	mov    %eax,%edx
   1db85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1db89:	89 10                	mov    %edx,(%rax)
   1db8b:	b8 01 00 00 00       	mov    $0x1,%eax
   1db90:	e9 91 00 00 00       	jmpq   1dc26 <__lo0bits_D2A+0xe1>
   1db95:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1db98:	c1 e8 02             	shr    $0x2,%eax
   1db9b:	89 c2                	mov    %eax,%edx
   1db9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dba1:	89 10                	mov    %edx,(%rax)
   1dba3:	b8 02 00 00 00       	mov    $0x2,%eax
   1dba8:	eb 7c                	jmp    1dc26 <__lo0bits_D2A+0xe1>
   1dbaa:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
   1dbb1:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1dbb4:	0f b7 c0             	movzwl %ax,%eax
   1dbb7:	85 c0                	test   %eax,%eax
   1dbb9:	75 0b                	jne    1dbc6 <__lo0bits_D2A+0x81>
   1dbbb:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
   1dbc2:	c1 6d fc 10          	shrl   $0x10,-0x4(%rbp)
   1dbc6:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1dbc9:	0f b6 c0             	movzbl %al,%eax
   1dbcc:	85 c0                	test   %eax,%eax
   1dbce:	75 08                	jne    1dbd8 <__lo0bits_D2A+0x93>
   1dbd0:	83 45 f8 08          	addl   $0x8,-0x8(%rbp)
   1dbd4:	c1 6d fc 08          	shrl   $0x8,-0x4(%rbp)
   1dbd8:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1dbdb:	83 e0 0f             	and    $0xf,%eax
   1dbde:	85 c0                	test   %eax,%eax
   1dbe0:	75 08                	jne    1dbea <__lo0bits_D2A+0xa5>
   1dbe2:	83 45 f8 04          	addl   $0x4,-0x8(%rbp)
   1dbe6:	c1 6d fc 04          	shrl   $0x4,-0x4(%rbp)
   1dbea:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1dbed:	83 e0 03             	and    $0x3,%eax
   1dbf0:	85 c0                	test   %eax,%eax
   1dbf2:	75 08                	jne    1dbfc <__lo0bits_D2A+0xb7>
   1dbf4:	83 45 f8 02          	addl   $0x2,-0x8(%rbp)
   1dbf8:	c1 6d fc 02          	shrl   $0x2,-0x4(%rbp)
   1dbfc:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1dbff:	83 e0 01             	and    $0x1,%eax
   1dc02:	85 c0                	test   %eax,%eax
   1dc04:	75 14                	jne    1dc1a <__lo0bits_D2A+0xd5>
   1dc06:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
   1dc0a:	d1 6d fc             	shrl   -0x4(%rbp)
   1dc0d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   1dc11:	75 07                	jne    1dc1a <__lo0bits_D2A+0xd5>
   1dc13:	b8 20 00 00 00       	mov    $0x20,%eax
   1dc18:	eb 0c                	jmp    1dc26 <__lo0bits_D2A+0xe1>
   1dc1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dc1e:	8b 55 fc             	mov    -0x4(%rbp),%edx
   1dc21:	89 10                	mov    %edx,(%rax)
   1dc23:	8b 45 f8             	mov    -0x8(%rbp),%eax
   1dc26:	5d                   	pop    %rbp
   1dc27:	c3                   	retq   

000000000001dc28 <__multadd_D2A>:
   1dc28:	55                   	push   %rbp
   1dc29:	48 89 e5             	mov    %rsp,%rbp
   1dc2c:	48 83 ec 40          	sub    $0x40,%rsp
   1dc30:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1dc34:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   1dc37:	89 55 c0             	mov    %edx,-0x40(%rbp)
   1dc3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dc3e:	8b 40 14             	mov    0x14(%rax),%eax
   1dc41:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1dc44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dc48:	48 83 c0 18          	add    $0x18,%rax
   1dc4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1dc50:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   1dc57:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1dc5a:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1dc5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dc61:	8b 00                	mov    (%rax),%eax
   1dc63:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1dc66:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1dc69:	0f b7 d0             	movzwl %ax,%edx
   1dc6c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1dc6f:	0f af d0             	imul   %eax,%edx
   1dc72:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1dc75:	01 d0                	add    %edx,%eax
   1dc77:	89 45 e8             	mov    %eax,-0x18(%rbp)
   1dc7a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1dc7d:	c1 e8 10             	shr    $0x10,%eax
   1dc80:	89 c2                	mov    %eax,%edx
   1dc82:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1dc85:	0f af c2             	imul   %edx,%eax
   1dc88:	8b 55 e8             	mov    -0x18(%rbp),%edx
   1dc8b:	c1 ea 10             	shr    $0x10,%edx
   1dc8e:	01 d0                	add    %edx,%eax
   1dc90:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1dc93:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1dc96:	c1 e8 10             	shr    $0x10,%eax
   1dc99:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1dc9c:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1dc9f:	c1 e0 10             	shl    $0x10,%eax
   1dca2:	89 c6                	mov    %eax,%esi
   1dca4:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1dca7:	0f b7 c8             	movzwl %ax,%ecx
   1dcaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dcae:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1dcb2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   1dcb6:	8d 14 0e             	lea    (%rsi,%rcx,1),%edx
   1dcb9:	89 10                	mov    %edx,(%rax)
   1dcbb:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
   1dcbf:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1dcc2:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   1dcc5:	7c 96                	jl     1dc5d <__multadd_D2A+0x35>
   1dcc7:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1dccb:	0f 84 97 00 00 00    	je     1dd68 <__multadd_D2A+0x140>
   1dcd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dcd5:	8b 40 0c             	mov    0xc(%rax),%eax
   1dcd8:	39 45 e0             	cmp    %eax,-0x20(%rbp)
   1dcdb:	7c 67                	jl     1dd44 <__multadd_D2A+0x11c>
   1dcdd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dce1:	8b 40 08             	mov    0x8(%rax),%eax
   1dce4:	83 c0 01             	add    $0x1,%eax
   1dce7:	89 c7                	mov    %eax,%edi
   1dce9:	e8 85 fc ff ff       	callq  1d973 <__Balloc_D2A>
   1dcee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1dcf2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1dcf7:	75 07                	jne    1dd00 <__multadd_D2A+0xd8>
   1dcf9:	b8 00 00 00 00       	mov    $0x0,%eax
   1dcfe:	eb 6c                	jmp    1dd6c <__multadd_D2A+0x144>
   1dd00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dd04:	8b 40 14             	mov    0x14(%rax),%eax
   1dd07:	48 98                	cltq   
   1dd09:	48 83 c0 02          	add    $0x2,%rax
   1dd0d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1dd14:	00 
   1dd15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dd19:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1dd1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd21:	48 83 c0 10          	add    $0x10,%rax
   1dd25:	48 89 ce             	mov    %rcx,%rsi
   1dd28:	48 89 c7             	mov    %rax,%rdi
   1dd2b:	e8 97 59 ff ff       	callq  136c7 <memcpy>
   1dd30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dd34:	48 89 c7             	mov    %rax,%rdi
   1dd37:	e8 7e fd ff ff       	callq  1daba <__Bfree_D2A>
   1dd3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd40:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1dd44:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1dd47:	8d 50 01             	lea    0x1(%rax),%edx
   1dd4a:	89 55 e0             	mov    %edx,-0x20(%rbp)
   1dd4d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1dd51:	48 98                	cltq   
   1dd53:	48 8d 48 04          	lea    0x4(%rax),%rcx
   1dd57:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1dd5a:	89 44 8a 08          	mov    %eax,0x8(%rdx,%rcx,4)
   1dd5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dd62:	8b 55 e0             	mov    -0x20(%rbp),%edx
   1dd65:	89 50 14             	mov    %edx,0x14(%rax)
   1dd68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dd6c:	c9                   	leaveq 
   1dd6d:	c3                   	retq   

000000000001dd6e <__hi0bits_D2A>:
   1dd6e:	55                   	push   %rbp
   1dd6f:	48 89 e5             	mov    %rsp,%rbp
   1dd72:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1dd75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1dd7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1dd7f:	66 b8 00 00          	mov    $0x0,%ax
   1dd83:	85 c0                	test   %eax,%eax
   1dd85:	75 0b                	jne    1dd92 <__hi0bits_D2A+0x24>
   1dd87:	c7 45 fc 10 00 00 00 	movl   $0x10,-0x4(%rbp)
   1dd8e:	c1 65 ec 10          	shll   $0x10,-0x14(%rbp)
   1dd92:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1dd95:	25 00 00 00 ff       	and    $0xff000000,%eax
   1dd9a:	85 c0                	test   %eax,%eax
   1dd9c:	75 08                	jne    1dda6 <__hi0bits_D2A+0x38>
   1dd9e:	83 45 fc 08          	addl   $0x8,-0x4(%rbp)
   1dda2:	c1 65 ec 08          	shll   $0x8,-0x14(%rbp)
   1dda6:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1dda9:	25 00 00 00 f0       	and    $0xf0000000,%eax
   1ddae:	85 c0                	test   %eax,%eax
   1ddb0:	75 08                	jne    1ddba <__hi0bits_D2A+0x4c>
   1ddb2:	83 45 fc 04          	addl   $0x4,-0x4(%rbp)
   1ddb6:	c1 65 ec 04          	shll   $0x4,-0x14(%rbp)
   1ddba:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1ddbd:	25 00 00 00 c0       	and    $0xc0000000,%eax
   1ddc2:	85 c0                	test   %eax,%eax
   1ddc4:	75 08                	jne    1ddce <__hi0bits_D2A+0x60>
   1ddc6:	83 45 fc 02          	addl   $0x2,-0x4(%rbp)
   1ddca:	c1 65 ec 02          	shll   $0x2,-0x14(%rbp)
   1ddce:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1ddd1:	85 c0                	test   %eax,%eax
   1ddd3:	78 17                	js     1ddec <__hi0bits_D2A+0x7e>
   1ddd5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   1ddd9:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1dddc:	25 00 00 00 40       	and    $0x40000000,%eax
   1dde1:	85 c0                	test   %eax,%eax
   1dde3:	75 07                	jne    1ddec <__hi0bits_D2A+0x7e>
   1dde5:	b8 20 00 00 00       	mov    $0x20,%eax
   1ddea:	eb 03                	jmp    1ddef <__hi0bits_D2A+0x81>
   1ddec:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1ddef:	5d                   	pop    %rbp
   1ddf0:	c3                   	retq   

000000000001ddf1 <__i2b_D2A>:
   1ddf1:	55                   	push   %rbp
   1ddf2:	48 89 e5             	mov    %rsp,%rbp
   1ddf5:	48 83 ec 20          	sub    $0x20,%rsp
   1ddf9:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1ddfc:	bf 01 00 00 00       	mov    $0x1,%edi
   1de01:	e8 6d fb ff ff       	callq  1d973 <__Balloc_D2A>
   1de06:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1de0a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1de0f:	75 07                	jne    1de18 <__i2b_D2A+0x27>
   1de11:	b8 00 00 00 00       	mov    $0x0,%eax
   1de16:	eb 19                	jmp    1de31 <__i2b_D2A+0x40>
   1de18:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1de1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1de1f:	89 50 18             	mov    %edx,0x18(%rax)
   1de22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1de26:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   1de2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1de31:	c9                   	leaveq 
   1de32:	c3                   	retq   

000000000001de33 <__mult_D2A>:
   1de33:	55                   	push   %rbp
   1de34:	48 89 e5             	mov    %rsp,%rbp
   1de37:	48 83 ec 70          	sub    $0x70,%rsp
   1de3b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   1de3f:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   1de43:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1de47:	8b 50 14             	mov    0x14(%rax),%edx
   1de4a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1de4e:	8b 40 14             	mov    0x14(%rax),%eax
   1de51:	39 c2                	cmp    %eax,%edx
   1de53:	7d 18                	jge    1de6d <__mult_D2A+0x3a>
   1de55:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1de59:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1de5d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1de61:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1de65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1de69:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1de6d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1de71:	8b 40 08             	mov    0x8(%rax),%eax
   1de74:	89 45 a0             	mov    %eax,-0x60(%rbp)
   1de77:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1de7b:	8b 40 14             	mov    0x14(%rax),%eax
   1de7e:	89 45 b0             	mov    %eax,-0x50(%rbp)
   1de81:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1de85:	8b 40 14             	mov    0x14(%rax),%eax
   1de88:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   1de8b:	8b 55 b0             	mov    -0x50(%rbp),%edx
   1de8e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1de91:	01 d0                	add    %edx,%eax
   1de93:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   1de96:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1de9a:	8b 40 0c             	mov    0xc(%rax),%eax
   1de9d:	39 45 a4             	cmp    %eax,-0x5c(%rbp)
   1dea0:	7e 04                	jle    1dea6 <__mult_D2A+0x73>
   1dea2:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
   1dea6:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1dea9:	89 c7                	mov    %eax,%edi
   1deab:	e8 c3 fa ff ff       	callq  1d973 <__Balloc_D2A>
   1deb0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1deb4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1deb9:	75 0a                	jne    1dec5 <__mult_D2A+0x92>
   1debb:	b8 00 00 00 00       	mov    $0x0,%eax
   1dec0:	e9 8a 02 00 00       	jmpq   1e14f <__mult_D2A+0x31c>
   1dec5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1dec9:	48 83 c0 18          	add    $0x18,%rax
   1decd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1ded1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   1ded4:	48 98                	cltq   
   1ded6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1dedd:	00 
   1dede:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1dee2:	48 01 d0             	add    %rdx,%rax
   1dee5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1dee9:	eb 0f                	jmp    1defa <__mult_D2A+0xc7>
   1deeb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1deef:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1def5:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
   1defa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1defe:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1df02:	72 e7                	jb     1deeb <__mult_D2A+0xb8>
   1df04:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1df08:	48 83 c0 18          	add    $0x18,%rax
   1df0c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1df10:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1df13:	48 98                	cltq   
   1df15:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1df1c:	00 
   1df1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1df21:	48 01 d0             	add    %rdx,%rax
   1df24:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1df28:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1df2c:	48 83 c0 18          	add    $0x18,%rax
   1df30:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1df34:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1df37:	48 98                	cltq   
   1df39:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1df40:	00 
   1df41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1df45:	48 01 d0             	add    %rdx,%rax
   1df48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1df4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1df50:	48 83 c0 18          	add    $0x18,%rax
   1df54:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1df58:	e9 97 01 00 00       	jmpq   1e0f4 <__mult_D2A+0x2c1>
   1df5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1df61:	8b 00                	mov    (%rax),%eax
   1df63:	25 ff ff 00 00       	and    $0xffff,%eax
   1df68:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1df6b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   1df6f:	0f 84 ab 00 00 00    	je     1e020 <__mult_D2A+0x1ed>
   1df75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1df79:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1df7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1df81:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1df85:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   1df8c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1df90:	8b 00                	mov    (%rax),%eax
   1df92:	0f b7 c0             	movzwl %ax,%eax
   1df95:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   1df99:	89 c2                	mov    %eax,%edx
   1df9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1df9f:	8b 00                	mov    (%rax),%eax
   1dfa1:	0f b7 c0             	movzwl %ax,%eax
   1dfa4:	01 c2                	add    %eax,%edx
   1dfa6:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1dfa9:	01 d0                	add    %edx,%eax
   1dfab:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1dfae:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1dfb1:	c1 e8 10             	shr    $0x10,%eax
   1dfb4:	89 45 a8             	mov    %eax,-0x58(%rbp)
   1dfb7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1dfbb:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1dfbf:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1dfc3:	8b 00                	mov    (%rax),%eax
   1dfc5:	c1 e8 10             	shr    $0x10,%eax
   1dfc8:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   1dfcc:	89 c2                	mov    %eax,%edx
   1dfce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dfd2:	8b 00                	mov    (%rax),%eax
   1dfd4:	c1 e8 10             	shr    $0x10,%eax
   1dfd7:	01 c2                	add    %eax,%edx
   1dfd9:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1dfdc:	01 d0                	add    %edx,%eax
   1dfde:	89 45 ac             	mov    %eax,-0x54(%rbp)
   1dfe1:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1dfe4:	c1 e8 10             	shr    $0x10,%eax
   1dfe7:	89 45 a8             	mov    %eax,-0x58(%rbp)
   1dfea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dfee:	48 83 c0 02          	add    $0x2,%rax
   1dff2:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1dff5:	66 89 10             	mov    %dx,(%rax)
   1dff8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1dffb:	89 c2                	mov    %eax,%edx
   1dffd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e001:	66 89 10             	mov    %dx,(%rax)
   1e004:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
   1e009:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e00d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1e011:	0f 82 75 ff ff ff    	jb     1df8c <__mult_D2A+0x159>
   1e017:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e01b:	8b 55 a8             	mov    -0x58(%rbp),%edx
   1e01e:	89 10                	mov    %edx,(%rax)
   1e020:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e024:	8b 00                	mov    (%rax),%eax
   1e026:	c1 e8 10             	shr    $0x10,%eax
   1e029:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1e02c:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   1e030:	0f 84 b4 00 00 00    	je     1e0ea <__mult_D2A+0x2b7>
   1e036:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e03a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1e03e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e042:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e046:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   1e04d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e051:	8b 00                	mov    (%rax),%eax
   1e053:	89 45 ac             	mov    %eax,-0x54(%rbp)
   1e056:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e05a:	8b 00                	mov    (%rax),%eax
   1e05c:	0f b7 c0             	movzwl %ax,%eax
   1e05f:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   1e063:	89 c2                	mov    %eax,%edx
   1e065:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e069:	8b 00                	mov    (%rax),%eax
   1e06b:	c1 e8 10             	shr    $0x10,%eax
   1e06e:	01 c2                	add    %eax,%edx
   1e070:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1e073:	01 d0                	add    %edx,%eax
   1e075:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1e078:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1e07b:	c1 e8 10             	shr    $0x10,%eax
   1e07e:	89 45 a8             	mov    %eax,-0x58(%rbp)
   1e081:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e085:	48 83 c0 02          	add    $0x2,%rax
   1e089:	8b 55 bc             	mov    -0x44(%rbp),%edx
   1e08c:	66 89 10             	mov    %dx,(%rax)
   1e08f:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1e092:	89 c2                	mov    %eax,%edx
   1e094:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e098:	66 89 10             	mov    %dx,(%rax)
   1e09b:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
   1e0a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e0a4:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e0a8:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1e0ac:	8b 00                	mov    (%rax),%eax
   1e0ae:	c1 e8 10             	shr    $0x10,%eax
   1e0b1:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   1e0b5:	89 c2                	mov    %eax,%edx
   1e0b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e0bb:	8b 00                	mov    (%rax),%eax
   1e0bd:	0f b7 c0             	movzwl %ax,%eax
   1e0c0:	01 c2                	add    %eax,%edx
   1e0c2:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1e0c5:	01 d0                	add    %edx,%eax
   1e0c7:	89 45 ac             	mov    %eax,-0x54(%rbp)
   1e0ca:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1e0cd:	c1 e8 10             	shr    $0x10,%eax
   1e0d0:	89 45 a8             	mov    %eax,-0x58(%rbp)
   1e0d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e0d7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1e0db:	0f 82 75 ff ff ff    	jb     1e056 <__mult_D2A+0x223>
   1e0e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e0e5:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1e0e8:	89 10                	mov    %edx,(%rax)
   1e0ea:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
   1e0ef:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
   1e0f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e0f8:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1e0fc:	0f 82 5b fe ff ff    	jb     1df5d <__mult_D2A+0x12a>
   1e102:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e106:	48 83 c0 18          	add    $0x18,%rax
   1e10a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1e10e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   1e111:	48 98                	cltq   
   1e113:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e11a:	00 
   1e11b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e11f:	48 01 d0             	add    %rdx,%rax
   1e122:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e126:	eb 04                	jmp    1e12c <__mult_D2A+0x2f9>
   1e128:	83 6d a4 01          	subl   $0x1,-0x5c(%rbp)
   1e12c:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   1e130:	7e 0f                	jle    1e141 <__mult_D2A+0x30e>
   1e132:	48 83 6d d0 04       	subq   $0x4,-0x30(%rbp)
   1e137:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e13b:	8b 00                	mov    (%rax),%eax
   1e13d:	85 c0                	test   %eax,%eax
   1e13f:	74 e7                	je     1e128 <__mult_D2A+0x2f5>
   1e141:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e145:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   1e148:	89 50 14             	mov    %edx,0x14(%rax)
   1e14b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e14f:	c9                   	leaveq 
   1e150:	c3                   	retq   

000000000001e151 <__pow5mult_D2A>:
   1e151:	55                   	push   %rbp
   1e152:	48 89 e5             	mov    %rsp,%rbp
   1e155:	48 83 ec 30          	sub    $0x30,%rsp
   1e159:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e15d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   1e160:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e163:	83 e0 03             	and    $0x3,%eax
   1e166:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1e169:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1e16d:	74 42                	je     1e1b1 <__pow5mult_D2A+0x60>
   1e16f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1e172:	83 e8 01             	sub    $0x1,%eax
   1e175:	48 98                	cltq   
   1e177:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e17e:	00 
   1e17f:	48 8d 05 62 90 02 00 	lea    0x29062(%rip),%rax        # 471e8 <p05.2501>
   1e186:	8b 0c 02             	mov    (%rdx,%rax,1),%ecx
   1e189:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e18d:	ba 00 00 00 00       	mov    $0x0,%edx
   1e192:	89 ce                	mov    %ecx,%esi
   1e194:	48 89 c7             	mov    %rax,%rdi
   1e197:	e8 8c fa ff ff       	callq  1dc28 <__multadd_D2A>
   1e19c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1e1a0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1e1a5:	75 0a                	jne    1e1b1 <__pow5mult_D2A+0x60>
   1e1a7:	b8 00 00 00 00       	mov    $0x0,%eax
   1e1ac:	e9 69 01 00 00       	jmpq   1e31a <__pow5mult_D2A+0x1c9>
   1e1b1:	c1 7d d4 02          	sarl   $0x2,-0x2c(%rbp)
   1e1b5:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1e1b9:	75 09                	jne    1e1c4 <__pow5mult_D2A+0x73>
   1e1bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e1bf:	e9 56 01 00 00       	jmpq   1e31a <__pow5mult_D2A+0x1c9>
   1e1c4:	48 8b 05 b5 a7 02 00 	mov    0x2a7b5(%rip),%rax        # 48980 <p5s>
   1e1cb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e1cf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1e1d4:	75 62                	jne    1e238 <__pow5mult_D2A+0xe7>
   1e1d6:	48 8d 3d af a7 02 00 	lea    0x2a7af(%rip),%rdi        # 4898c <__dtoa_locks+0x4>
   1e1dd:	e8 0f 5a ff ff       	callq  13bf1 <sgx_spin_lock>
   1e1e2:	48 8b 05 97 a7 02 00 	mov    0x2a797(%rip),%rax        # 48980 <p5s>
   1e1e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e1ed:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1e1f2:	75 38                	jne    1e22c <__pow5mult_D2A+0xdb>
   1e1f4:	bf 71 02 00 00       	mov    $0x271,%edi
   1e1f9:	e8 f3 fb ff ff       	callq  1ddf1 <__i2b_D2A>
   1e1fe:	48 89 05 7b a7 02 00 	mov    %rax,0x2a77b(%rip)        # 48980 <p5s>
   1e205:	48 8b 05 74 a7 02 00 	mov    0x2a774(%rip),%rax        # 48980 <p5s>
   1e20c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e210:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1e215:	75 0a                	jne    1e221 <__pow5mult_D2A+0xd0>
   1e217:	b8 00 00 00 00       	mov    $0x0,%eax
   1e21c:	e9 f9 00 00 00       	jmpq   1e31a <__pow5mult_D2A+0x1c9>
   1e221:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e225:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e22c:	48 8d 3d 59 a7 02 00 	lea    0x2a759(%rip),%rdi        # 4898c <__dtoa_locks+0x4>
   1e233:	e8 20 5a ff ff       	callq  13c58 <sgx_spin_unlock>
   1e238:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e23b:	83 e0 01             	and    $0x1,%eax
   1e23e:	85 c0                	test   %eax,%eax
   1e240:	74 3c                	je     1e27e <__pow5mult_D2A+0x12d>
   1e242:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e246:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e24a:	48 89 d6             	mov    %rdx,%rsi
   1e24d:	48 89 c7             	mov    %rax,%rdi
   1e250:	e8 de fb ff ff       	callq  1de33 <__mult_D2A>
   1e255:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e259:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1e25e:	75 0a                	jne    1e26a <__pow5mult_D2A+0x119>
   1e260:	b8 00 00 00 00       	mov    $0x0,%eax
   1e265:	e9 b0 00 00 00       	jmpq   1e31a <__pow5mult_D2A+0x1c9>
   1e26a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e26e:	48 89 c7             	mov    %rax,%rdi
   1e271:	e8 44 f8 ff ff       	callq  1daba <__Bfree_D2A>
   1e276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e27a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1e27e:	d1 7d d4             	sarl   -0x2c(%rbp)
   1e281:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1e285:	0f 84 8a 00 00 00    	je     1e315 <__pow5mult_D2A+0x1c4>
   1e28b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e28f:	48 8b 00             	mov    (%rax),%rax
   1e292:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e296:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e29b:	75 6b                	jne    1e308 <__pow5mult_D2A+0x1b7>
   1e29d:	48 8d 3d e8 a6 02 00 	lea    0x2a6e8(%rip),%rdi        # 4898c <__dtoa_locks+0x4>
   1e2a4:	e8 48 59 ff ff       	callq  13bf1 <sgx_spin_lock>
   1e2a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e2ad:	48 8b 00             	mov    (%rax),%rax
   1e2b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e2b4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e2b9:	75 41                	jne    1e2fc <__pow5mult_D2A+0x1ab>
   1e2bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e2bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e2c3:	48 89 d6             	mov    %rdx,%rsi
   1e2c6:	48 89 c7             	mov    %rax,%rdi
   1e2c9:	e8 65 fb ff ff       	callq  1de33 <__mult_D2A>
   1e2ce:	48 89 c2             	mov    %rax,%rdx
   1e2d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e2d5:	48 89 10             	mov    %rdx,(%rax)
   1e2d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e2dc:	48 8b 00             	mov    (%rax),%rax
   1e2df:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e2e3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e2e8:	75 07                	jne    1e2f1 <__pow5mult_D2A+0x1a0>
   1e2ea:	b8 00 00 00 00       	mov    $0x0,%eax
   1e2ef:	eb 29                	jmp    1e31a <__pow5mult_D2A+0x1c9>
   1e2f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e2f5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e2fc:	48 8d 3d 89 a6 02 00 	lea    0x2a689(%rip),%rdi        # 4898c <__dtoa_locks+0x4>
   1e303:	e8 50 59 ff ff       	callq  13c58 <sgx_spin_unlock>
   1e308:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e30c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e310:	e9 23 ff ff ff       	jmpq   1e238 <__pow5mult_D2A+0xe7>
   1e315:	90                   	nop
   1e316:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e31a:	c9                   	leaveq 
   1e31b:	c3                   	retq   

000000000001e31c <__lshift_D2A>:
   1e31c:	55                   	push   %rbp
   1e31d:	48 89 e5             	mov    %rsp,%rbp
   1e320:	48 83 ec 50          	sub    $0x50,%rsp
   1e324:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1e328:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   1e32b:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1e32e:	c1 f8 05             	sar    $0x5,%eax
   1e331:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1e334:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e338:	8b 40 08             	mov    0x8(%rax),%eax
   1e33b:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1e33e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e342:	8b 50 14             	mov    0x14(%rax),%edx
   1e345:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1e348:	01 d0                	add    %edx,%eax
   1e34a:	83 c0 01             	add    $0x1,%eax
   1e34d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1e350:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e354:	8b 40 0c             	mov    0xc(%rax),%eax
   1e357:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1e35a:	eb 07                	jmp    1e363 <__lshift_D2A+0x47>
   1e35c:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   1e360:	d1 65 cc             	shll   -0x34(%rbp)
   1e363:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e366:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   1e369:	7f f1                	jg     1e35c <__lshift_D2A+0x40>
   1e36b:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1e36e:	89 c7                	mov    %eax,%edi
   1e370:	e8 fe f5 ff ff       	callq  1d973 <__Balloc_D2A>
   1e375:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e379:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e37e:	75 0a                	jne    1e38a <__lshift_D2A+0x6e>
   1e380:	b8 00 00 00 00       	mov    $0x0,%eax
   1e385:	e9 19 01 00 00       	jmpq   1e4a3 <__lshift_D2A+0x187>
   1e38a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e38e:	48 83 c0 18          	add    $0x18,%rax
   1e392:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e396:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   1e39d:	eb 16                	jmp    1e3b5 <__lshift_D2A+0x99>
   1e39f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e3a3:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e3a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e3ab:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1e3b1:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   1e3b5:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1e3b8:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   1e3bb:	7c e2                	jl     1e39f <__lshift_D2A+0x83>
   1e3bd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e3c1:	48 83 c0 18          	add    $0x18,%rax
   1e3c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e3c9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e3cd:	8b 40 14             	mov    0x14(%rax),%eax
   1e3d0:	48 98                	cltq   
   1e3d2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e3d9:	00 
   1e3da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e3de:	48 01 d0             	add    %rdx,%rax
   1e3e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e3e5:	83 65 b4 1f          	andl   $0x1f,-0x4c(%rbp)
   1e3e9:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   1e3ed:	74 71                	je     1e460 <__lshift_D2A+0x144>
   1e3ef:	b8 20 00 00 00       	mov    $0x20,%eax
   1e3f4:	2b 45 b4             	sub    -0x4c(%rbp),%eax
   1e3f7:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1e3fa:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   1e401:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e405:	8b 10                	mov    (%rax),%edx
   1e407:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1e40a:	89 c1                	mov    %eax,%ecx
   1e40c:	d3 e2                	shl    %cl,%edx
   1e40e:	89 d1                	mov    %edx,%ecx
   1e410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e414:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e418:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e41c:	0b 4d d8             	or     -0x28(%rbp),%ecx
   1e41f:	89 ca                	mov    %ecx,%edx
   1e421:	89 10                	mov    %edx,(%rax)
   1e423:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e427:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e42b:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1e42f:	8b 10                	mov    (%rax),%edx
   1e431:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1e434:	89 c1                	mov    %eax,%ecx
   1e436:	d3 ea                	shr    %cl,%edx
   1e438:	89 d0                	mov    %edx,%eax
   1e43a:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1e43d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e441:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1e445:	72 ba                	jb     1e401 <__lshift_D2A+0xe5>
   1e447:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e44b:	8b 55 d8             	mov    -0x28(%rbp),%edx
   1e44e:	89 10                	mov    %edx,(%rax)
   1e450:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e454:	8b 00                	mov    (%rax),%eax
   1e456:	85 c0                	test   %eax,%eax
   1e458:	74 2c                	je     1e486 <__lshift_D2A+0x16a>
   1e45a:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   1e45e:	eb 26                	jmp    1e486 <__lshift_D2A+0x16a>
   1e460:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1e464:	48 8d 42 04          	lea    0x4(%rdx),%rax
   1e468:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e46c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e470:	48 8d 48 04          	lea    0x4(%rax),%rcx
   1e474:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   1e478:	8b 12                	mov    (%rdx),%edx
   1e47a:	89 10                	mov    %edx,(%rax)
   1e47c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e480:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1e484:	72 da                	jb     1e460 <__lshift_D2A+0x144>
   1e486:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e489:	8d 50 ff             	lea    -0x1(%rax),%edx
   1e48c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e490:	89 50 14             	mov    %edx,0x14(%rax)
   1e493:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e497:	48 89 c7             	mov    %rax,%rdi
   1e49a:	e8 1b f6 ff ff       	callq  1daba <__Bfree_D2A>
   1e49f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e4a3:	c9                   	leaveq 
   1e4a4:	c3                   	retq   

000000000001e4a5 <__cmp_D2A>:
   1e4a5:	55                   	push   %rbp
   1e4a6:	48 89 e5             	mov    %rsp,%rbp
   1e4a9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1e4ad:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1e4b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e4b5:	8b 40 14             	mov    0x14(%rax),%eax
   1e4b8:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1e4bb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e4bf:	8b 40 14             	mov    0x14(%rax),%eax
   1e4c2:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1e4c5:	83 7d d8 01          	cmpl   $0x1,-0x28(%rbp)
   1e4c9:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
   1e4cd:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1e4d0:	29 45 d8             	sub    %eax,-0x28(%rbp)
   1e4d3:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   1e4d7:	74 08                	je     1e4e1 <__cmp_D2A+0x3c>
   1e4d9:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1e4dc:	e9 92 00 00 00       	jmpq   1e573 <__cmp_D2A+0xce>
   1e4e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e4e5:	48 83 c0 18          	add    $0x18,%rax
   1e4e9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e4ed:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1e4f0:	48 98                	cltq   
   1e4f2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e4f9:	00 
   1e4fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e4fe:	48 01 d0             	add    %rdx,%rax
   1e501:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e505:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e509:	48 83 c0 18          	add    $0x18,%rax
   1e50d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e511:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1e514:	48 98                	cltq   
   1e516:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e51d:	00 
   1e51e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e522:	48 01 d0             	add    %rdx,%rax
   1e525:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e529:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   1e52e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e532:	8b 10                	mov    (%rax),%edx
   1e534:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   1e539:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e53d:	8b 00                	mov    (%rax),%eax
   1e53f:	39 c2                	cmp    %eax,%edx
   1e541:	74 1e                	je     1e561 <__cmp_D2A+0xbc>
   1e543:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e547:	8b 10                	mov    (%rax),%edx
   1e549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e54d:	8b 00                	mov    (%rax),%eax
   1e54f:	39 c2                	cmp    %eax,%edx
   1e551:	73 07                	jae    1e55a <__cmp_D2A+0xb5>
   1e553:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e558:	eb 19                	jmp    1e573 <__cmp_D2A+0xce>
   1e55a:	b8 01 00 00 00       	mov    $0x1,%eax
   1e55f:	eb 12                	jmp    1e573 <__cmp_D2A+0xce>
   1e561:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e565:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1e569:	76 02                	jbe    1e56d <__cmp_D2A+0xc8>
   1e56b:	eb bc                	jmp    1e529 <__cmp_D2A+0x84>
   1e56d:	90                   	nop
   1e56e:	b8 00 00 00 00       	mov    $0x0,%eax
   1e573:	5d                   	pop    %rbp
   1e574:	c3                   	retq   

000000000001e575 <__diff_D2A>:
   1e575:	55                   	push   %rbp
   1e576:	48 89 e5             	mov    %rsp,%rbp
   1e579:	48 83 ec 60          	sub    $0x60,%rsp
   1e57d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1e581:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1e585:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1e589:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1e58d:	48 89 d6             	mov    %rdx,%rsi
   1e590:	48 89 c7             	mov    %rax,%rdi
   1e593:	e8 0d ff ff ff       	callq  1e4a5 <__cmp_D2A>
   1e598:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1e59b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   1e59f:	75 3e                	jne    1e5df <__diff_D2A+0x6a>
   1e5a1:	bf 00 00 00 00       	mov    $0x0,%edi
   1e5a6:	e8 c8 f3 ff ff       	callq  1d973 <__Balloc_D2A>
   1e5ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e5af:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1e5b4:	75 0a                	jne    1e5c0 <__diff_D2A+0x4b>
   1e5b6:	b8 00 00 00 00       	mov    $0x0,%eax
   1e5bb:	e9 04 02 00 00       	jmpq   1e7c4 <__diff_D2A+0x24f>
   1e5c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e5c4:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   1e5cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e5cf:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
   1e5d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e5da:	e9 e5 01 00 00       	jmpq   1e7c4 <__diff_D2A+0x24f>
   1e5df:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   1e5e3:	79 21                	jns    1e606 <__diff_D2A+0x91>
   1e5e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1e5e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e5ed:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e5f1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1e5f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e5f9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1e5fd:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
   1e604:	eb 07                	jmp    1e60d <__diff_D2A+0x98>
   1e606:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   1e60d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1e611:	8b 40 08             	mov    0x8(%rax),%eax
   1e614:	89 c7                	mov    %eax,%edi
   1e616:	e8 58 f3 ff ff       	callq  1d973 <__Balloc_D2A>
   1e61b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e61f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1e624:	75 0a                	jne    1e630 <__diff_D2A+0xbb>
   1e626:	b8 00 00 00 00       	mov    $0x0,%eax
   1e62b:	e9 94 01 00 00       	jmpq   1e7c4 <__diff_D2A+0x24f>
   1e630:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e634:	8b 55 b8             	mov    -0x48(%rbp),%edx
   1e637:	89 50 10             	mov    %edx,0x10(%rax)
   1e63a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1e63e:	8b 40 14             	mov    0x14(%rax),%eax
   1e641:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1e644:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1e648:	48 83 c0 18          	add    $0x18,%rax
   1e64c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e650:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1e653:	48 98                	cltq   
   1e655:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e65c:	00 
   1e65d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e661:	48 01 d0             	add    %rdx,%rax
   1e664:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e668:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e66c:	8b 40 14             	mov    0x14(%rax),%eax
   1e66f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1e672:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e676:	48 83 c0 18          	add    $0x18,%rax
   1e67a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1e67e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1e681:	48 98                	cltq   
   1e683:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e68a:	00 
   1e68b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e68f:	48 01 d0             	add    %rdx,%rax
   1e692:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e69a:	48 83 c0 18          	add    $0x18,%rax
   1e69e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e6a2:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   1e6a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e6ad:	8b 00                	mov    (%rax),%eax
   1e6af:	0f b7 d0             	movzwl %ax,%edx
   1e6b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e6b6:	8b 00                	mov    (%rax),%eax
   1e6b8:	0f b7 c0             	movzwl %ax,%eax
   1e6bb:	29 c2                	sub    %eax,%edx
   1e6bd:	89 d0                	mov    %edx,%eax
   1e6bf:	2b 45 c0             	sub    -0x40(%rbp),%eax
   1e6c2:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1e6c5:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1e6c8:	c1 e8 10             	shr    $0x10,%eax
   1e6cb:	83 e0 01             	and    $0x1,%eax
   1e6ce:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1e6d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e6d5:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e6d9:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   1e6dd:	8b 00                	mov    (%rax),%eax
   1e6df:	c1 e8 10             	shr    $0x10,%eax
   1e6e2:	89 c1                	mov    %eax,%ecx
   1e6e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e6e8:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e6ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1e6f0:	8b 00                	mov    (%rax),%eax
   1e6f2:	c1 e8 10             	shr    $0x10,%eax
   1e6f5:	29 c1                	sub    %eax,%ecx
   1e6f7:	89 c8                	mov    %ecx,%eax
   1e6f9:	2b 45 c0             	sub    -0x40(%rbp),%eax
   1e6fc:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1e6ff:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1e702:	c1 e8 10             	shr    $0x10,%eax
   1e705:	83 e0 01             	and    $0x1,%eax
   1e708:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1e70b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e70f:	48 83 c0 02          	add    $0x2,%rax
   1e713:	8b 55 cc             	mov    -0x34(%rbp),%edx
   1e716:	66 89 10             	mov    %dx,(%rax)
   1e719:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1e71c:	89 c2                	mov    %eax,%edx
   1e71e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e722:	66 89 10             	mov    %dx,(%rax)
   1e725:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   1e72a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e72e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1e732:	0f 82 71 ff ff ff    	jb     1e6a9 <__diff_D2A+0x134>
   1e738:	eb 5d                	jmp    1e797 <__diff_D2A+0x222>
   1e73a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e73e:	8b 00                	mov    (%rax),%eax
   1e740:	0f b7 c0             	movzwl %ax,%eax
   1e743:	2b 45 c0             	sub    -0x40(%rbp),%eax
   1e746:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1e749:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1e74c:	c1 e8 10             	shr    $0x10,%eax
   1e74f:	83 e0 01             	and    $0x1,%eax
   1e752:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1e755:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e759:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e75d:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   1e761:	8b 00                	mov    (%rax),%eax
   1e763:	c1 e8 10             	shr    $0x10,%eax
   1e766:	2b 45 c0             	sub    -0x40(%rbp),%eax
   1e769:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1e76c:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1e76f:	c1 e8 10             	shr    $0x10,%eax
   1e772:	83 e0 01             	and    $0x1,%eax
   1e775:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1e778:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e77c:	48 83 c0 02          	add    $0x2,%rax
   1e780:	8b 55 cc             	mov    -0x34(%rbp),%edx
   1e783:	66 89 10             	mov    %dx,(%rax)
   1e786:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1e789:	89 c2                	mov    %eax,%edx
   1e78b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e78f:	66 89 10             	mov    %dx,(%rax)
   1e792:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   1e797:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e79b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1e79f:	72 99                	jb     1e73a <__diff_D2A+0x1c5>
   1e7a1:	eb 04                	jmp    1e7a7 <__diff_D2A+0x232>
   1e7a3:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   1e7a7:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   1e7ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e7b0:	8b 00                	mov    (%rax),%eax
   1e7b2:	85 c0                	test   %eax,%eax
   1e7b4:	74 ed                	je     1e7a3 <__diff_D2A+0x22e>
   1e7b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e7ba:	8b 55 bc             	mov    -0x44(%rbp),%edx
   1e7bd:	89 50 14             	mov    %edx,0x14(%rax)
   1e7c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e7c4:	c9                   	leaveq 
   1e7c5:	c3                   	retq   

000000000001e7c6 <__b2d_D2A>:
   1e7c6:	55                   	push   %rbp
   1e7c7:	48 89 e5             	mov    %rsp,%rbp
   1e7ca:	48 83 ec 40          	sub    $0x40,%rsp
   1e7ce:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1e7d2:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1e7d6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e7dd:	00 00 
   1e7df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e7e3:	31 c0                	xor    %eax,%eax
   1e7e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e7e9:	48 83 c0 18          	add    $0x18,%rax
   1e7ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e7f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e7f5:	8b 40 14             	mov    0x14(%rax),%eax
   1e7f8:	48 98                	cltq   
   1e7fa:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1e801:	00 
   1e802:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e806:	48 01 d0             	add    %rdx,%rax
   1e809:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e80d:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   1e812:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e816:	8b 00                	mov    (%rax),%eax
   1e818:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1e81b:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1e81e:	89 c7                	mov    %eax,%edi
   1e820:	e8 49 f5 ff ff       	callq  1dd6e <__hi0bits_D2A>
   1e825:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1e828:	b8 20 00 00 00       	mov    $0x20,%eax
   1e82d:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   1e830:	89 c2                	mov    %eax,%edx
   1e832:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e836:	89 10                	mov    %edx,(%rax)
   1e838:	83 7d d4 0a          	cmpl   $0xa,-0x2c(%rbp)
   1e83c:	7f 62                	jg     1e8a0 <__b2d_D2A+0xda>
   1e83e:	b8 0b 00 00 00       	mov    $0xb,%eax
   1e843:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   1e846:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1e849:	89 c1                	mov    %eax,%ecx
   1e84b:	d3 ea                	shr    %cl,%edx
   1e84d:	89 d0                	mov    %edx,%eax
   1e84f:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   1e854:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1e857:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e85b:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1e85f:	76 0d                	jbe    1e86e <__b2d_D2A+0xa8>
   1e861:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   1e866:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e86a:	8b 00                	mov    (%rax),%eax
   1e86c:	eb 05                	jmp    1e873 <__b2d_D2A+0xad>
   1e86e:	b8 00 00 00 00       	mov    $0x0,%eax
   1e873:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1e876:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e879:	83 c0 15             	add    $0x15,%eax
   1e87c:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1e87f:	89 d6                	mov    %edx,%esi
   1e881:	89 c1                	mov    %eax,%ecx
   1e883:	d3 e6                	shl    %cl,%esi
   1e885:	b8 0b 00 00 00       	mov    $0xb,%eax
   1e88a:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   1e88d:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1e890:	89 c1                	mov    %eax,%ecx
   1e892:	d3 ea                	shr    %cl,%edx
   1e894:	89 d0                	mov    %edx,%eax
   1e896:	09 f0                	or     %esi,%eax
   1e898:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1e89b:	e9 a4 00 00 00       	jmpq   1e944 <__b2d_D2A+0x17e>
   1e8a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e8a4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1e8a8:	76 0d                	jbe    1e8b7 <__b2d_D2A+0xf1>
   1e8aa:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   1e8af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e8b3:	8b 00                	mov    (%rax),%eax
   1e8b5:	eb 05                	jmp    1e8bc <__b2d_D2A+0xf6>
   1e8b7:	b8 00 00 00 00       	mov    $0x0,%eax
   1e8bc:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1e8bf:	83 6d d4 0b          	subl   $0xb,-0x2c(%rbp)
   1e8c3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1e8c7:	74 6a                	je     1e933 <__b2d_D2A+0x16d>
   1e8c9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e8cc:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1e8cf:	89 d6                	mov    %edx,%esi
   1e8d1:	89 c1                	mov    %eax,%ecx
   1e8d3:	d3 e6                	shl    %cl,%esi
   1e8d5:	b8 20 00 00 00       	mov    $0x20,%eax
   1e8da:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   1e8dd:	8b 55 d8             	mov    -0x28(%rbp),%edx
   1e8e0:	89 c1                	mov    %eax,%ecx
   1e8e2:	d3 ea                	shr    %cl,%edx
   1e8e4:	89 d0                	mov    %edx,%eax
   1e8e6:	09 f0                	or     %esi,%eax
   1e8e8:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   1e8ed:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1e8f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e8f4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1e8f8:	76 0d                	jbe    1e907 <__b2d_D2A+0x141>
   1e8fa:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   1e8ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e903:	8b 00                	mov    (%rax),%eax
   1e905:	eb 05                	jmp    1e90c <__b2d_D2A+0x146>
   1e907:	b8 00 00 00 00       	mov    $0x0,%eax
   1e90c:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1e90f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e912:	8b 55 d8             	mov    -0x28(%rbp),%edx
   1e915:	89 d6                	mov    %edx,%esi
   1e917:	89 c1                	mov    %eax,%ecx
   1e919:	d3 e6                	shl    %cl,%esi
   1e91b:	b8 20 00 00 00       	mov    $0x20,%eax
   1e920:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   1e923:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1e926:	89 c1                	mov    %eax,%ecx
   1e928:	d3 ea                	shr    %cl,%edx
   1e92a:	89 d0                	mov    %edx,%eax
   1e92c:	09 f0                	or     %esi,%eax
   1e92e:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1e931:	eb 11                	jmp    1e944 <__b2d_D2A+0x17e>
   1e933:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1e936:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   1e93b:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1e93e:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1e941:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1e944:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   1e949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e94d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1e954:	00 00 
   1e956:	74 05                	je     1e95d <__b2d_D2A+0x197>
   1e958:	e8 2f cb fe ff       	callq  b48c <__stack_chk_fail>
   1e95d:	c9                   	leaveq 
   1e95e:	c3                   	retq   

000000000001e95f <__d2b_D2A>:
   1e95f:	55                   	push   %rbp
   1e960:	48 89 e5             	mov    %rsp,%rbp
   1e963:	53                   	push   %rbx
   1e964:	48 83 ec 68          	sub    $0x68,%rsp
   1e968:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
   1e96d:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
   1e971:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
   1e975:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e97c:	00 00 
   1e97e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e982:	31 c0                	xor    %eax,%eax
   1e984:	f2 0f 10 45 a8       	movsd  -0x58(%rbp),%xmm0
   1e989:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   1e98e:	bf 01 00 00 00       	mov    $0x1,%edi
   1e993:	e8 db ef ff ff       	callq  1d973 <__Balloc_D2A>
   1e998:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e99c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1e9a1:	75 0a                	jne    1e9ad <__d2b_D2A+0x4e>
   1e9a3:	b8 00 00 00 00       	mov    $0x0,%eax
   1e9a8:	e9 68 01 00 00       	jmpq   1eb15 <__d2b_D2A+0x1b6>
   1e9ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e9b1:	48 83 c0 18          	add    $0x18,%rax
   1e9b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1e9b9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1e9bc:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1e9c1:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1e9c4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1e9c7:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   1e9cc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1e9cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1e9d2:	c1 e8 14             	shr    $0x14,%eax
   1e9d5:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1e9d8:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   1e9dc:	74 0b                	je     1e9e9 <__d2b_D2A+0x8a>
   1e9de:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1e9e1:	0d 00 00 10 00       	or     $0x100000,%eax
   1e9e6:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1e9e9:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1e9ec:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1e9ef:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1e9f2:	85 c0                	test   %eax,%eax
   1e9f4:	74 7b                	je     1ea71 <__d2b_D2A+0x112>
   1e9f6:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
   1e9fa:	48 89 c7             	mov    %rax,%rdi
   1e9fd:	e8 43 f1 ff ff       	callq  1db45 <__lo0bits_D2A>
   1ea02:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1ea05:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   1ea09:	74 2b                	je     1ea36 <__d2b_D2A+0xd7>
   1ea0b:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1ea0e:	b8 20 00 00 00       	mov    $0x20,%eax
   1ea13:	2b 45 c8             	sub    -0x38(%rbp),%eax
   1ea16:	89 c1                	mov    %eax,%ecx
   1ea18:	d3 e2                	shl    %cl,%edx
   1ea1a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1ea1d:	09 c2                	or     %eax,%edx
   1ea1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ea23:	89 10                	mov    %edx,(%rax)
   1ea25:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1ea28:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1ea2b:	89 c1                	mov    %eax,%ecx
   1ea2d:	d3 ea                	shr    %cl,%edx
   1ea2f:	89 d0                	mov    %edx,%eax
   1ea31:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1ea34:	eb 09                	jmp    1ea3f <__d2b_D2A+0xe0>
   1ea36:	8b 55 bc             	mov    -0x44(%rbp),%edx
   1ea39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ea3d:	89 10                	mov    %edx,(%rax)
   1ea3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ea43:	48 83 c0 04          	add    $0x4,%rax
   1ea47:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1ea4a:	89 10                	mov    %edx,(%rax)
   1ea4c:	8b 00                	mov    (%rax),%eax
   1ea4e:	85 c0                	test   %eax,%eax
   1ea50:	74 07                	je     1ea59 <__d2b_D2A+0xfa>
   1ea52:	ba 02 00 00 00       	mov    $0x2,%edx
   1ea57:	eb 05                	jmp    1ea5e <__d2b_D2A+0xff>
   1ea59:	ba 01 00 00 00       	mov    $0x1,%edx
   1ea5e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ea62:	89 50 14             	mov    %edx,0x14(%rax)
   1ea65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ea69:	8b 40 14             	mov    0x14(%rax),%eax
   1ea6c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1ea6f:	eb 31                	jmp    1eaa2 <__d2b_D2A+0x143>
   1ea71:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1ea75:	48 89 c7             	mov    %rax,%rdi
   1ea78:	e8 c8 f0 ff ff       	callq  1db45 <__lo0bits_D2A>
   1ea7d:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1ea80:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1ea83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ea87:	89 10                	mov    %edx,(%rax)
   1ea89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ea8d:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   1ea94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ea98:	8b 40 14             	mov    0x14(%rax),%eax
   1ea9b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1ea9e:	83 45 c8 20          	addl   $0x20,-0x38(%rbp)
   1eaa2:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   1eaa6:	74 26                	je     1eace <__d2b_D2A+0x16f>
   1eaa8:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1eaab:	8d 90 cd fb ff ff    	lea    -0x433(%rax),%edx
   1eab1:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1eab4:	01 c2                	add    %eax,%edx
   1eab6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eaba:	89 10                	mov    %edx,(%rax)
   1eabc:	b8 35 00 00 00       	mov    $0x35,%eax
   1eac1:	2b 45 c8             	sub    -0x38(%rbp),%eax
   1eac4:	89 c2                	mov    %eax,%edx
   1eac6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1eaca:	89 10                	mov    %edx,(%rax)
   1eacc:	eb 43                	jmp    1eb11 <__d2b_D2A+0x1b2>
   1eace:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1ead1:	8d 90 ce fb ff ff    	lea    -0x432(%rax),%edx
   1ead7:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1eada:	01 c2                	add    %eax,%edx
   1eadc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eae0:	89 10                	mov    %edx,(%rax)
   1eae2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1eae5:	c1 e0 05             	shl    $0x5,%eax
   1eae8:	89 c3                	mov    %eax,%ebx
   1eaea:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1eaed:	48 98                	cltq   
   1eaef:	48 c1 e0 02          	shl    $0x2,%rax
   1eaf3:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
   1eaf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1eafb:	48 01 d0             	add    %rdx,%rax
   1eafe:	8b 00                	mov    (%rax),%eax
   1eb00:	89 c7                	mov    %eax,%edi
   1eb02:	e8 67 f2 ff ff       	callq  1dd6e <__hi0bits_D2A>
   1eb07:	29 c3                	sub    %eax,%ebx
   1eb09:	89 da                	mov    %ebx,%edx
   1eb0b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1eb0f:	89 10                	mov    %edx,(%rax)
   1eb11:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1eb15:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1eb19:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1eb20:	00 00 
   1eb22:	74 05                	je     1eb29 <__d2b_D2A+0x1ca>
   1eb24:	e8 63 c9 fe ff       	callq  b48c <__stack_chk_fail>
   1eb29:	48 83 c4 68          	add    $0x68,%rsp
   1eb2d:	5b                   	pop    %rbx
   1eb2e:	5d                   	pop    %rbp
   1eb2f:	c3                   	retq   

000000000001eb30 <wrapv>:
   1eb30:	55                   	push   %rbp
   1eb31:	48 89 e5             	mov    %rsp,%rbp
   1eb34:	89 f8                	mov    %edi,%eax
   1eb36:	88 45 fc             	mov    %al,-0x4(%rbp)
   1eb39:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   1eb3d:	84 c0                	test   %al,%al
   1eb3f:	79 06                	jns    1eb47 <wrapv+0x17>
   1eb41:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   1eb45:	eb 04                	jmp    1eb4b <wrapv+0x1b>
   1eb47:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   1eb4b:	5d                   	pop    %rbp
   1eb4c:	c3                   	retq   

000000000001eb4d <mbrtowc>:
   1eb4d:	55                   	push   %rbp
   1eb4e:	48 89 e5             	mov    %rsp,%rbp
   1eb51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eb55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1eb59:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1eb5d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   1eb61:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1eb66:	75 07                	jne    1eb6f <mbrtowc+0x22>
   1eb68:	b8 00 00 00 00       	mov    $0x0,%eax
   1eb6d:	eb 36                	jmp    1eba5 <mbrtowc+0x58>
   1eb6f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1eb74:	75 09                	jne    1eb7f <mbrtowc+0x32>
   1eb76:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   1eb7d:	eb 26                	jmp    1eba5 <mbrtowc+0x58>
   1eb7f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1eb84:	74 10                	je     1eb96 <mbrtowc+0x49>
   1eb86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1eb8a:	0f b6 00             	movzbl (%rax),%eax
   1eb8d:	0f b6 d0             	movzbl %al,%edx
   1eb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eb94:	89 10                	mov    %edx,(%rax)
   1eb96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1eb9a:	0f b6 00             	movzbl (%rax),%eax
   1eb9d:	84 c0                	test   %al,%al
   1eb9f:	0f 95 c0             	setne  %al
   1eba2:	0f b6 c0             	movzbl %al,%eax
   1eba5:	5d                   	pop    %rbp
   1eba6:	c3                   	retq   

000000000001eba7 <wcrtomb>:
   1eba7:	55                   	push   %rbp
   1eba8:	48 89 e5             	mov    %rsp,%rbp
   1ebab:	48 83 ec 20          	sub    $0x20,%rsp
   1ebaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ebb3:	89 75 f4             	mov    %esi,-0xc(%rbp)
   1ebb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1ebba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1ebbf:	75 07                	jne    1ebc8 <wcrtomb+0x21>
   1ebc1:	b8 01 00 00 00       	mov    $0x1,%eax
   1ebc6:	eb 3d                	jmp    1ec05 <wcrtomb+0x5e>
   1ebc8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   1ebcc:	78 09                	js     1ebd7 <wcrtomb+0x30>
   1ebce:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
   1ebd5:	7e 14                	jle    1ebeb <wcrtomb+0x44>
   1ebd7:	e8 c8 5c ff ff       	callq  148a4 <__errno>
   1ebdc:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   1ebe2:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1ebe9:	eb 1a                	jmp    1ec05 <wcrtomb+0x5e>
   1ebeb:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1ebee:	0f b6 c0             	movzbl %al,%eax
   1ebf1:	89 c7                	mov    %eax,%edi
   1ebf3:	e8 38 ff ff ff       	callq  1eb30 <wrapv>
   1ebf8:	89 c2                	mov    %eax,%edx
   1ebfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ebfe:	88 10                	mov    %dl,(%rax)
   1ec00:	b8 01 00 00 00       	mov    $0x1,%eax
   1ec05:	c9                   	leaveq 
   1ec06:	c3                   	retq   

000000000001ec07 <wcsrtombs>:
   1ec07:	55                   	push   %rbp
   1ec08:	48 89 e5             	mov    %rsp,%rbp
   1ec0b:	48 83 ec 20          	sub    $0x20,%rsp
   1ec0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ec13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ec17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1ec1b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   1ec1f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1ec23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ec27:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1ec2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ec2f:	49 89 c8             	mov    %rcx,%r8
   1ec32:	48 89 d1             	mov    %rdx,%rcx
   1ec35:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1ec3c:	48 89 c7             	mov    %rax,%rdi
   1ec3f:	e8 02 00 00 00       	callq  1ec46 <wcsnrtombs>
   1ec44:	c9                   	leaveq 
   1ec45:	c3                   	retq   

000000000001ec46 <wcsnrtombs>:
   1ec46:	55                   	push   %rbp
   1ec47:	48 89 e5             	mov    %rsp,%rbp
   1ec4a:	53                   	push   %rbx
   1ec4b:	48 83 ec 48          	sub    $0x48,%rsp
   1ec4f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ec53:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ec57:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1ec5b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1ec5f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   1ec63:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1ec68:	75 6e                	jne    1ecd8 <wcsnrtombs+0x92>
   1ec6a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1ec71:	00 
   1ec72:	eb 51                	jmp    1ecc5 <wcsnrtombs+0x7f>
   1ec74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ec78:	48 8b 00             	mov    (%rax),%rax
   1ec7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ec7f:	48 c1 e2 02          	shl    $0x2,%rdx
   1ec83:	48 01 d0             	add    %rdx,%rax
   1ec86:	8b 00                	mov    (%rax),%eax
   1ec88:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1ec8b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1ec8f:	78 09                	js     1ec9a <wcsnrtombs+0x54>
   1ec91:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
   1ec98:	7e 17                	jle    1ecb1 <wcsnrtombs+0x6b>
   1ec9a:	e8 05 5c ff ff       	callq  148a4 <__errno>
   1ec9f:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   1eca5:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1ecac:	e9 f3 00 00 00       	jmpq   1eda4 <wcsnrtombs+0x15e>
   1ecb1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1ecb5:	75 09                	jne    1ecc0 <wcsnrtombs+0x7a>
   1ecb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ecbb:	e9 e4 00 00 00       	jmpq   1eda4 <wcsnrtombs+0x15e>
   1ecc0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   1ecc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ecc9:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   1eccd:	72 a5                	jb     1ec74 <wcsnrtombs+0x2e>
   1eccf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ecd3:	e9 cc 00 00 00       	jmpq   1eda4 <wcsnrtombs+0x15e>
   1ecd8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1ecdf:	00 
   1ece0:	e9 8a 00 00 00       	jmpq   1ed6f <wcsnrtombs+0x129>
   1ece5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ece9:	48 8b 00             	mov    (%rax),%rax
   1ecec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ecf0:	48 c1 e2 02          	shl    $0x2,%rdx
   1ecf4:	48 01 d0             	add    %rdx,%rax
   1ecf7:	8b 00                	mov    (%rax),%eax
   1ecf9:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1ecfc:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   1ed00:	78 09                	js     1ed0b <wcsnrtombs+0xc5>
   1ed02:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
   1ed09:	7e 2d                	jle    1ed38 <wcsnrtombs+0xf2>
   1ed0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ed0f:	48 8b 00             	mov    (%rax),%rax
   1ed12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ed16:	48 c1 e2 02          	shl    $0x2,%rdx
   1ed1a:	48 01 c2             	add    %rax,%rdx
   1ed1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ed21:	48 89 10             	mov    %rdx,(%rax)
   1ed24:	e8 7b 5b ff ff       	callq  148a4 <__errno>
   1ed29:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   1ed2f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1ed36:	eb 6c                	jmp    1eda4 <wcsnrtombs+0x15e>
   1ed38:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1ed3b:	0f b6 c0             	movzbl %al,%eax
   1ed3e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1ed42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ed46:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
   1ed4a:	89 c7                	mov    %eax,%edi
   1ed4c:	e8 df fd ff ff       	callq  1eb30 <wrapv>
   1ed51:	88 03                	mov    %al,(%rbx)
   1ed53:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   1ed57:	75 11                	jne    1ed6a <wcsnrtombs+0x124>
   1ed59:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ed5d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ed64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ed68:	eb 3a                	jmp    1eda4 <wcsnrtombs+0x15e>
   1ed6a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   1ed6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ed73:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   1ed77:	73 0e                	jae    1ed87 <wcsnrtombs+0x141>
   1ed79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ed7d:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1ed81:	0f 82 5e ff ff ff    	jb     1ece5 <wcsnrtombs+0x9f>
   1ed87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ed8b:	48 8b 00             	mov    (%rax),%rax
   1ed8e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ed92:	48 c1 e2 02          	shl    $0x2,%rdx
   1ed96:	48 01 c2             	add    %rax,%rdx
   1ed99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ed9d:	48 89 10             	mov    %rdx,(%rax)
   1eda0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eda4:	48 83 c4 48          	add    $0x48,%rsp
   1eda8:	5b                   	pop    %rbx
   1eda9:	5d                   	pop    %rbp
   1edaa:	c3                   	retq   

000000000001edab <__fpclassify>:
   1edab:	55                   	push   %rbp
   1edac:	48 89 e5             	mov    %rsp,%rbp
   1edaf:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1edb4:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1edb8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1edbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1edc0:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   1edc4:	66 25 f0 7f          	and    $0x7ff0,%ax
   1edc8:	66 85 c0             	test   %ax,%ax
   1edcb:	75 28                	jne    1edf5 <__fpclassify+0x4a>
   1edcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1edd1:	8b 40 04             	mov    0x4(%rax),%eax
   1edd4:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1edd9:	85 c0                	test   %eax,%eax
   1eddb:	75 11                	jne    1edee <__fpclassify+0x43>
   1eddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ede1:	8b 00                	mov    (%rax),%eax
   1ede3:	85 c0                	test   %eax,%eax
   1ede5:	75 07                	jne    1edee <__fpclassify+0x43>
   1ede7:	b8 02 00 00 00       	mov    $0x2,%eax
   1edec:	eb 46                	jmp    1ee34 <__fpclassify+0x89>
   1edee:	b8 03 00 00 00       	mov    $0x3,%eax
   1edf3:	eb 3f                	jmp    1ee34 <__fpclassify+0x89>
   1edf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1edf9:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   1edfd:	66 25 f0 7f          	and    $0x7ff0,%ax
   1ee01:	66 3d f0 7f          	cmp    $0x7ff0,%ax
   1ee05:	75 28                	jne    1ee2f <__fpclassify+0x84>
   1ee07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee0b:	8b 40 04             	mov    0x4(%rax),%eax
   1ee0e:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1ee13:	85 c0                	test   %eax,%eax
   1ee15:	75 11                	jne    1ee28 <__fpclassify+0x7d>
   1ee17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee1b:	8b 00                	mov    (%rax),%eax
   1ee1d:	85 c0                	test   %eax,%eax
   1ee1f:	75 07                	jne    1ee28 <__fpclassify+0x7d>
   1ee21:	b8 01 00 00 00       	mov    $0x1,%eax
   1ee26:	eb 0c                	jmp    1ee34 <__fpclassify+0x89>
   1ee28:	b8 00 00 00 00       	mov    $0x0,%eax
   1ee2d:	eb 05                	jmp    1ee34 <__fpclassify+0x89>
   1ee2f:	b8 04 00 00 00       	mov    $0x4,%eax
   1ee34:	5d                   	pop    %rbp
   1ee35:	c3                   	retq   

000000000001ee36 <__fpclassifyl>:
   1ee36:	55                   	push   %rbp
   1ee37:	48 89 e5             	mov    %rsp,%rbp
   1ee3a:	48 8d 45 10          	lea    0x10(%rbp),%rax
   1ee3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ee42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee46:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   1ee4a:	66 25 ff 7f          	and    $0x7fff,%ax
   1ee4e:	66 85 c0             	test   %ax,%ax
   1ee51:	75 23                	jne    1ee76 <__fpclassifyl+0x40>
   1ee53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee57:	8b 40 04             	mov    0x4(%rax),%eax
   1ee5a:	85 c0                	test   %eax,%eax
   1ee5c:	75 11                	jne    1ee6f <__fpclassifyl+0x39>
   1ee5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee62:	8b 00                	mov    (%rax),%eax
   1ee64:	85 c0                	test   %eax,%eax
   1ee66:	75 07                	jne    1ee6f <__fpclassifyl+0x39>
   1ee68:	b8 02 00 00 00       	mov    $0x2,%eax
   1ee6d:	eb 56                	jmp    1eec5 <__fpclassifyl+0x8f>
   1ee6f:	b8 03 00 00 00       	mov    $0x3,%eax
   1ee74:	eb 4f                	jmp    1eec5 <__fpclassifyl+0x8f>
   1ee76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee7a:	8b 40 04             	mov    0x4(%rax),%eax
   1ee7d:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   1ee82:	89 c2                	mov    %eax,%edx
   1ee84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee88:	89 50 04             	mov    %edx,0x4(%rax)
   1ee8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee8f:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   1ee93:	66 25 ff 7f          	and    $0x7fff,%ax
   1ee97:	66 3d ff 7f          	cmp    $0x7fff,%ax
   1ee9b:	75 23                	jne    1eec0 <__fpclassifyl+0x8a>
   1ee9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eea1:	8b 40 04             	mov    0x4(%rax),%eax
   1eea4:	85 c0                	test   %eax,%eax
   1eea6:	75 11                	jne    1eeb9 <__fpclassifyl+0x83>
   1eea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eeac:	8b 00                	mov    (%rax),%eax
   1eeae:	85 c0                	test   %eax,%eax
   1eeb0:	75 07                	jne    1eeb9 <__fpclassifyl+0x83>
   1eeb2:	b8 01 00 00 00       	mov    $0x1,%eax
   1eeb7:	eb 0c                	jmp    1eec5 <__fpclassifyl+0x8f>
   1eeb9:	b8 00 00 00 00       	mov    $0x0,%eax
   1eebe:	eb 05                	jmp    1eec5 <__fpclassifyl+0x8f>
   1eec0:	b8 04 00 00 00       	mov    $0x4,%eax
   1eec5:	5d                   	pop    %rbp
   1eec6:	c3                   	retq   

000000000001eec7 <bitstob>:
   1eec7:	55                   	push   %rbp
   1eec8:	48 89 e5             	mov    %rsp,%rbp
   1eecb:	53                   	push   %rbx
   1eecc:	48 83 ec 58          	sub    $0x58,%rsp
   1eed0:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1eed4:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   1eed7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1eedb:	c7 45 c8 20 00 00 00 	movl   $0x20,-0x38(%rbp)
   1eee2:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   1eee9:	eb 07                	jmp    1eef2 <bitstob+0x2b>
   1eeeb:	d1 65 c8             	shll   -0x38(%rbp)
   1eeee:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   1eef2:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1eef5:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
   1eef8:	7c f1                	jl     1eeeb <bitstob+0x24>
   1eefa:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1eefd:	89 c7                	mov    %eax,%edi
   1eeff:	e8 6f ea ff ff       	callq  1d973 <__Balloc_D2A>
   1ef04:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1ef08:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1ef0d:	75 0a                	jne    1ef19 <bitstob+0x52>
   1ef0f:	b8 00 00 00 00       	mov    $0x0,%eax
   1ef14:	e9 e6 00 00 00       	jmpq   1efff <bitstob+0x138>
   1ef19:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1ef1c:	83 e8 01             	sub    $0x1,%eax
   1ef1f:	c1 f8 05             	sar    $0x5,%eax
   1ef22:	48 98                	cltq   
   1ef24:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1ef2b:	00 
   1ef2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ef30:	48 01 d0             	add    %rdx,%rax
   1ef33:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ef37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ef3b:	48 83 c0 18          	add    $0x18,%rax
   1ef3f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1ef43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ef47:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1ef4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ef4f:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1ef53:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   1ef57:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1ef5b:	8b 12                	mov    (%rdx),%edx
   1ef5d:	89 10                	mov    %edx,(%rax)
   1ef5f:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
   1ef64:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ef68:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1ef6c:	76 dd                	jbe    1ef4b <bitstob+0x84>
   1ef6e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1ef72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ef76:	48 29 c2             	sub    %rax,%rdx
   1ef79:	48 89 d0             	mov    %rdx,%rax
   1ef7c:	48 c1 f8 02          	sar    $0x2,%rax
   1ef80:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1ef83:	eb 1d                	jmp    1efa2 <bitstob+0xdb>
   1ef85:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   1ef89:	75 17                	jne    1efa2 <bitstob+0xdb>
   1ef8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ef8f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   1ef96:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ef9a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1efa0:	eb 59                	jmp    1effb <bitstob+0x134>
   1efa2:	83 6d c8 01          	subl   $0x1,-0x38(%rbp)
   1efa6:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1efa9:	48 98                	cltq   
   1efab:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1efb2:	00 
   1efb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1efb7:	48 01 d0             	add    %rdx,%rax
   1efba:	8b 00                	mov    (%rax),%eax
   1efbc:	85 c0                	test   %eax,%eax
   1efbe:	74 c5                	je     1ef85 <bitstob+0xbe>
   1efc0:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1efc3:	8d 50 01             	lea    0x1(%rax),%edx
   1efc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1efca:	89 50 14             	mov    %edx,0x14(%rax)
   1efcd:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1efd0:	83 c0 01             	add    $0x1,%eax
   1efd3:	c1 e0 05             	shl    $0x5,%eax
   1efd6:	89 c3                	mov    %eax,%ebx
   1efd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1efdc:	8b 55 c8             	mov    -0x38(%rbp),%edx
   1efdf:	48 63 d2             	movslq %edx,%rdx
   1efe2:	48 83 c2 04          	add    $0x4,%rdx
   1efe6:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   1efea:	89 c7                	mov    %eax,%edi
   1efec:	e8 7d ed ff ff       	callq  1dd6e <__hi0bits_D2A>
   1eff1:	29 c3                	sub    %eax,%ebx
   1eff3:	89 da                	mov    %ebx,%edx
   1eff5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1eff9:	89 10                	mov    %edx,(%rax)
   1effb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1efff:	48 83 c4 58          	add    $0x58,%rsp
   1f003:	5b                   	pop    %rbx
   1f004:	5d                   	pop    %rbp
   1f005:	c3                   	retq   

000000000001f006 <__gdtoa>:
   1f006:	55                   	push   %rbp
   1f007:	48 89 e5             	mov    %rsp,%rbp
   1f00a:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   1f011:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   1f018:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
   1f01e:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
   1f025:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
   1f02c:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
   1f033:	44 89 8d fc fe ff ff 	mov    %r9d,-0x104(%rbp)
   1f03a:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1f03e:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1f045:	48 8b 45 18          	mov    0x18(%rbp),%rax
   1f049:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1f050:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f057:	00 00 
   1f059:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1f05d:	31 c0                	xor    %eax,%eax
   1f05f:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
   1f066:	00 00 00 
   1f069:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f070:	8b 00                	mov    (%rax),%eax
   1f072:	83 e0 cf             	and    $0xffffffcf,%eax
   1f075:	89 c2                	mov    %eax,%edx
   1f077:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f07e:	89 10                	mov    %edx,(%rax)
   1f080:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f087:	8b 00                	mov    (%rax),%eax
   1f089:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   1f08f:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1f095:	83 e0 0f             	and    $0xf,%eax
   1f098:	83 f8 04             	cmp    $0x4,%eax
   1f09b:	77 7d                	ja     1f11a <__gdtoa+0x114>
   1f09d:	89 c0                	mov    %eax,%eax
   1f09f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1f0a6:	00 
   1f0a7:	48 8d 05 2a de 01 00 	lea    0x1de2a(%rip),%rax        # 3ced8 <__tens_D2A+0x138>
   1f0ae:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1f0b1:	48 63 d0             	movslq %eax,%rdx
   1f0b4:	48 8d 05 1d de 01 00 	lea    0x1de1d(%rip),%rax        # 3ced8 <__tens_D2A+0x138>
   1f0bb:	48 01 d0             	add    %rdx,%rax
   1f0be:	ff e0                	jmpq   *%rax
   1f0c0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1f0c7:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   1f0cd:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1f0d4:	ba 08 00 00 00       	mov    $0x8,%edx
   1f0d9:	48 89 c6             	mov    %rax,%rsi
   1f0dc:	48 8d 3d 7d dd 01 00 	lea    0x1dd7d(%rip),%rdi        # 3ce60 <__tens_D2A+0xc0>
   1f0e3:	e8 3b be ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1f0e8:	e9 14 1a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1f0ed:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1f0f4:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   1f0fa:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1f101:	ba 03 00 00 00       	mov    $0x3,%edx
   1f106:	48 89 c6             	mov    %rax,%rsi
   1f109:	48 8d 3d 59 dd 01 00 	lea    0x1dd59(%rip),%rdi        # 3ce69 <__tens_D2A+0xc9>
   1f110:	e8 0e be ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1f115:	e9 e7 19 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1f11a:	b8 00 00 00 00       	mov    $0x0,%eax
   1f11f:	e9 dd 19 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1f124:	90                   	nop
   1f125:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1f12c:	8b 00                	mov    (%rax),%eax
   1f12e:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
   1f134:	48 8d 95 24 ff ff ff 	lea    -0xdc(%rbp),%rdx
   1f13b:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
   1f141:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f148:	89 ce                	mov    %ecx,%esi
   1f14a:	48 89 c7             	mov    %rax,%rdi
   1f14d:	e8 75 fd ff ff       	callq  1eec7 <bitstob>
   1f152:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1f156:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1f15b:	75 0a                	jne    1f167 <__gdtoa+0x161>
   1f15d:	b8 00 00 00 00       	mov    $0x0,%eax
   1f162:	e9 9a 19 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1f167:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1f16d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   1f173:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f177:	48 89 c7             	mov    %rax,%rdi
   1f17a:	e8 e9 1a 00 00       	callq  20c68 <__trailz_D2A>
   1f17f:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f185:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f18b:	85 c0                	test   %eax,%eax
   1f18d:	74 36                	je     1f1c5 <__gdtoa+0x1bf>
   1f18f:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   1f195:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f199:	89 d6                	mov    %edx,%esi
   1f19b:	48 89 c7             	mov    %rax,%rdi
   1f19e:	e8 74 19 00 00       	callq  20b17 <__rshift_D2A>
   1f1a3:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f1a9:	01 85 14 ff ff ff    	add    %eax,-0xec(%rbp)
   1f1af:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   1f1b5:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f1bb:	29 c2                	sub    %eax,%edx
   1f1bd:	89 d0                	mov    %edx,%eax
   1f1bf:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   1f1c5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f1c9:	8b 40 14             	mov    0x14(%rax),%eax
   1f1cc:	85 c0                	test   %eax,%eax
   1f1ce:	75 3c                	jne    1f20c <__gdtoa+0x206>
   1f1d0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f1d4:	48 89 c7             	mov    %rax,%rdi
   1f1d7:	e8 de e8 ff ff       	callq  1daba <__Bfree_D2A>
   1f1dc:	eb 01                	jmp    1f1df <__gdtoa+0x1d9>
   1f1de:	90                   	nop
   1f1df:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1f1e6:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1f1ec:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1f1f3:	ba 01 00 00 00       	mov    $0x1,%edx
   1f1f8:	48 89 c6             	mov    %rax,%rsi
   1f1fb:	48 8d 3d 6b dc 01 00 	lea    0x1dc6b(%rip),%rdi        # 3ce6d <__tens_D2A+0xcd>
   1f202:	e8 1c bd ff ff       	callq  1af23 <__nrv_alloc_D2A>
   1f207:	e9 f5 18 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1f20c:	48 8d 95 28 ff ff ff 	lea    -0xd8(%rbp),%rdx
   1f213:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f217:	48 89 d6             	mov    %rdx,%rsi
   1f21a:	48 89 c7             	mov    %rax,%rdi
   1f21d:	e8 a4 f5 ff ff       	callq  1e7c6 <__b2d_D2A>
   1f222:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1f227:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f22b:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   1f231:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1f237:	01 d0                	add    %edx,%eax
   1f239:	83 e8 01             	sub    $0x1,%eax
   1f23c:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f242:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1f245:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1f24a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1f24d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1f250:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   1f255:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1f258:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f25d:	f2 0f 10 0d 0b dc 01 	movsd  0x1dc0b(%rip),%xmm1        # 3ce70 <__tens_D2A+0xd0>
   1f264:	00 
   1f265:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1f269:	f2 0f 10 0d 07 dc 01 	movsd  0x1dc07(%rip),%xmm1        # 3ce78 <__tens_D2A+0xd8>
   1f270:	00 
   1f271:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f275:	f2 0f 10 0d 03 dc 01 	movsd  0x1dc03(%rip),%xmm1        # 3ce80 <__tens_D2A+0xe0>
   1f27c:	00 
   1f27d:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   1f281:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f287:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   1f28b:	f2 0f 10 15 f5 db 01 	movsd  0x1dbf5(%rip),%xmm2        # 3ce88 <__tens_D2A+0xe8>
   1f292:	00 
   1f293:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   1f297:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1f29b:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1f2a0:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f2a6:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1f2ac:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1f2b3:	79 06                	jns    1f2bb <__gdtoa+0x2b5>
   1f2b5:	f7 9d 48 ff ff ff    	negl   -0xb8(%rbp)
   1f2bb:	81 ad 48 ff ff ff 35 	subl   $0x435,-0xb8(%rbp)
   1f2c2:	04 00 00 
   1f2c5:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1f2cc:	7e 22                	jle    1f2f0 <__gdtoa+0x2ea>
   1f2ce:	f2 0f 2a 85 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm0
   1f2d5:	ff 
   1f2d6:	f2 0f 10 0d b2 db 01 	movsd  0x1dbb2(%rip),%xmm1        # 3ce90 <__tens_D2A+0xf0>
   1f2dd:	00 
   1f2de:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f2e2:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   1f2e7:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1f2eb:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1f2f0:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   1f2f5:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1f2f9:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   1f2ff:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f303:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   1f308:	76 1d                	jbe    1f327 <__gdtoa+0x321>
   1f30a:	f2 0f 2a 85 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm0
   1f311:	ff 
   1f312:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   1f317:	7a 07                	jp     1f320 <__gdtoa+0x31a>
   1f319:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   1f31e:	74 07                	je     1f327 <__gdtoa+0x321>
   1f320:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   1f327:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
   1f32e:	00 00 00 
   1f331:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1f334:	8b 8d 24 ff ff ff    	mov    -0xdc(%rbp),%ecx
   1f33a:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   1f340:	01 ca                	add    %ecx,%edx
   1f342:	83 ea 01             	sub    $0x1,%edx
   1f345:	c1 e2 14             	shl    $0x14,%edx
   1f348:	01 d0                	add    %edx,%eax
   1f34a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1f34d:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   1f354:	78 41                	js     1f397 <__gdtoa+0x391>
   1f356:	83 bd 4c ff ff ff 16 	cmpl   $0x16,-0xb4(%rbp)
   1f35d:	7f 38                	jg     1f397 <__gdtoa+0x391>
   1f35f:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f364:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f36a:	48 98                	cltq   
   1f36c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f373:	00 
   1f374:	48 8d 05 25 da 01 00 	lea    0x1da25(%rip),%rax        # 3cda0 <__tens_D2A>
   1f37b:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1f380:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1f384:	76 07                	jbe    1f38d <__gdtoa+0x387>
   1f386:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   1f38d:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
   1f394:	00 00 00 
   1f397:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   1f39d:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f3a3:	29 c2                	sub    %eax,%edx
   1f3a5:	89 d0                	mov    %edx,%eax
   1f3a7:	83 e8 01             	sub    $0x1,%eax
   1f3aa:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1f3b0:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1f3b7:	78 18                	js     1f3d1 <__gdtoa+0x3cb>
   1f3b9:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
   1f3c0:	00 00 00 
   1f3c3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1f3c9:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
   1f3cf:	eb 18                	jmp    1f3e9 <__gdtoa+0x3e3>
   1f3d1:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1f3d7:	f7 d8                	neg    %eax
   1f3d9:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   1f3df:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   1f3e6:	00 00 00 
   1f3e9:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   1f3f0:	78 24                	js     1f416 <__gdtoa+0x410>
   1f3f2:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
   1f3f9:	00 00 00 
   1f3fc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f402:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   1f408:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f40e:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   1f414:	eb 24                	jmp    1f43a <__gdtoa+0x434>
   1f416:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f41c:	29 85 2c ff ff ff    	sub    %eax,-0xd4(%rbp)
   1f422:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f428:	f7 d8                	neg    %eax
   1f42a:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1f430:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
   1f437:	00 00 00 
   1f43a:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   1f441:	78 09                	js     1f44c <__gdtoa+0x446>
   1f443:	83 bd 10 ff ff ff 09 	cmpl   $0x9,-0xf0(%rbp)
   1f44a:	7e 0a                	jle    1f456 <__gdtoa+0x450>
   1f44c:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
   1f453:	00 00 00 
   1f456:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%rbp)
   1f45d:	00 00 00 
   1f460:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   1f467:	7e 13                	jle    1f47c <__gdtoa+0x476>
   1f469:	83 ad 10 ff ff ff 04 	subl   $0x4,-0xf0(%rbp)
   1f470:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   1f477:	00 00 00 
   1f47a:	eb 24                	jmp    1f4a0 <__gdtoa+0x49a>
   1f47c:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f482:	3d f9 03 00 00       	cmp    $0x3f9,%eax
   1f487:	7f 0d                	jg     1f496 <__gdtoa+0x490>
   1f489:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f48f:	3d 02 fc ff ff       	cmp    $0xfffffc02,%eax
   1f494:	7d 0a                	jge    1f4a0 <__gdtoa+0x49a>
   1f496:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   1f49d:	00 00 00 
   1f4a0:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
   1f4a7:	00 00 00 
   1f4aa:	c7 85 40 ff ff ff ff 	movl   $0xffffffff,-0xc0(%rbp)
   1f4b1:	ff ff ff 
   1f4b4:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1f4ba:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1f4c0:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   1f4c7:	0f 87 ea 00 00 00    	ja     1f5b7 <__gdtoa+0x5b1>
   1f4cd:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1f4d3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1f4da:	00 
   1f4db:	48 8d 05 0a da 01 00 	lea    0x1da0a(%rip),%rax        # 3ceec <__tens_D2A+0x14c>
   1f4e2:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1f4e5:	48 63 d0             	movslq %eax,%rdx
   1f4e8:	48 8d 05 fd d9 01 00 	lea    0x1d9fd(%rip),%rax        # 3ceec <__tens_D2A+0x14c>
   1f4ef:	48 01 d0             	add    %rdx,%rax
   1f4f2:	ff e0                	jmpq   *%rax
   1f4f4:	f2 0f 2a 85 78 ff ff 	cvtsi2sdl -0x88(%rbp),%xmm0
   1f4fb:	ff 
   1f4fc:	f2 0f 10 0d 94 d9 01 	movsd  0x1d994(%rip),%xmm1        # 3ce98 <__tens_D2A+0xf8>
   1f503:	00 
   1f504:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f508:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1f50c:	83 c0 03             	add    $0x3,%eax
   1f50f:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f515:	c7 85 fc fe ff ff 00 	movl   $0x0,-0x104(%rbp)
   1f51c:	00 00 00 
   1f51f:	e9 93 00 00 00       	jmpq   1f5b7 <__gdtoa+0x5b1>
   1f524:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
   1f52b:	00 00 00 
   1f52e:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%rbp)
   1f535:	7f 0a                	jg     1f541 <__gdtoa+0x53b>
   1f537:	c7 85 fc fe ff ff 01 	movl   $0x1,-0x104(%rbp)
   1f53e:	00 00 00 
   1f541:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
   1f547:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f54d:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f553:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1f559:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1f55f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1f565:	eb 50                	jmp    1f5b7 <__gdtoa+0x5b1>
   1f567:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
   1f56e:	00 00 00 
   1f571:	8b 95 fc fe ff ff    	mov    -0x104(%rbp),%edx
   1f577:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f57d:	01 d0                	add    %edx,%eax
   1f57f:	83 c0 01             	add    $0x1,%eax
   1f582:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f588:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f58e:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1f594:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f59a:	83 e8 01             	sub    $0x1,%eax
   1f59d:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1f5a3:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f5a9:	85 c0                	test   %eax,%eax
   1f5ab:	7f 0a                	jg     1f5b7 <__gdtoa+0x5b1>
   1f5ad:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   1f5b4:	00 00 00 
   1f5b7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f5bd:	89 c7                	mov    %eax,%edi
   1f5bf:	e8 fb b8 ff ff       	callq  1aebf <__rv_alloc_D2A>
   1f5c4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1f5c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f5cc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1f5d0:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   1f5d5:	75 0a                	jne    1f5e1 <__gdtoa+0x5db>
   1f5d7:	b8 00 00 00 00       	mov    $0x0,%eax
   1f5dc:	e9 20 15 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1f5e1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1f5e8:	8b 40 0c             	mov    0xc(%rax),%eax
   1f5eb:	83 e8 01             	sub    $0x1,%eax
   1f5ee:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   1f5f4:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   1f5fb:	74 33                	je     1f630 <__gdtoa+0x62a>
   1f5fd:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   1f604:	79 0a                	jns    1f610 <__gdtoa+0x60a>
   1f606:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
   1f60d:	00 00 00 
   1f610:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1f616:	25 00 01 00 00       	and    $0x100,%eax
   1f61b:	85 c0                	test   %eax,%eax
   1f61d:	74 11                	je     1f630 <__gdtoa+0x62a>
   1f61f:	b8 03 00 00 00       	mov    $0x3,%eax
   1f624:	2b 85 60 ff ff ff    	sub    -0xa0(%rbp),%eax
   1f62a:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   1f630:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1f637:	0f 88 84 05 00 00    	js     1fbc1 <__gdtoa+0xbbb>
   1f63d:	83 bd 3c ff ff ff 0e 	cmpl   $0xe,-0xc4(%rbp)
   1f644:	0f 8f 77 05 00 00    	jg     1fbc1 <__gdtoa+0xbbb>
   1f64a:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   1f651:	0f 84 6a 05 00 00    	je     1fbc1 <__gdtoa+0xbbb>
   1f657:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   1f65e:	0f 85 5d 05 00 00    	jne    1fbc1 <__gdtoa+0xbbb>
   1f664:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   1f66b:	0f 85 50 05 00 00    	jne    1fbc1 <__gdtoa+0xbbb>
   1f671:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   1f678:	00 00 00 
   1f67b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f680:	f2 0f 11 45 c8       	movsd  %xmm0,-0x38(%rbp)
   1f685:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f68b:	89 45 80             	mov    %eax,-0x80(%rbp)
   1f68e:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1f694:	89 45 84             	mov    %eax,-0x7c(%rbp)
   1f697:	c7 85 38 ff ff ff 02 	movl   $0x2,-0xc8(%rbp)
   1f69e:	00 00 00 
   1f6a1:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   1f6a8:	0f 8e c7 00 00 00    	jle    1f775 <__gdtoa+0x76f>
   1f6ae:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f6b4:	83 e0 0f             	and    $0xf,%eax
   1f6b7:	48 98                	cltq   
   1f6b9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f6c0:	00 
   1f6c1:	48 8d 05 d8 d6 01 00 	lea    0x1d6d8(%rip),%rax        # 3cda0 <__tens_D2A>
   1f6c8:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1f6cd:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1f6d2:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f6d8:	c1 f8 04             	sar    $0x4,%eax
   1f6db:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1f6e1:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1f6e7:	83 e0 10             	and    $0x10,%eax
   1f6ea:	85 c0                	test   %eax,%eax
   1f6ec:	74 79                	je     1f767 <__gdtoa+0x761>
   1f6ee:	83 a5 48 ff ff ff 0f 	andl   $0xf,-0xb8(%rbp)
   1f6f5:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f6fa:	f2 0f 10 0d 7e d6 01 	movsd  0x1d67e(%rip),%xmm1        # 3cd80 <__bigtens_D2A+0x20>
   1f701:	00 
   1f702:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1f706:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1f70b:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   1f712:	eb 53                	jmp    1f767 <__gdtoa+0x761>
   1f714:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1f71a:	83 e0 01             	and    $0x1,%eax
   1f71d:	85 c0                	test   %eax,%eax
   1f71f:	74 31                	je     1f752 <__gdtoa+0x74c>
   1f721:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   1f728:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f72e:	48 98                	cltq   
   1f730:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f737:	00 
   1f738:	48 8d 05 21 d6 01 00 	lea    0x1d621(%rip),%rax        # 3cd60 <__bigtens_D2A>
   1f73f:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1f744:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   1f749:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f74d:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1f752:	d1 bd 48 ff ff ff    	sarl   -0xb8(%rbp)
   1f758:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f75e:	83 c0 01             	add    $0x1,%eax
   1f761:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f767:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1f76e:	75 a4                	jne    1f714 <__gdtoa+0x70e>
   1f770:	e9 b6 00 00 00       	jmpq   1f82b <__gdtoa+0x825>
   1f775:	f2 0f 10 05 23 d7 01 	movsd  0x1d723(%rip),%xmm0        # 3cea0 <__tens_D2A+0x100>
   1f77c:	00 
   1f77d:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1f782:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1f788:	f7 d8                	neg    %eax
   1f78a:	89 45 88             	mov    %eax,-0x78(%rbp)
   1f78d:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   1f791:	0f 84 94 00 00 00    	je     1f82b <__gdtoa+0x825>
   1f797:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f79c:	8b 45 88             	mov    -0x78(%rbp),%eax
   1f79f:	83 e0 0f             	and    $0xf,%eax
   1f7a2:	48 98                	cltq   
   1f7a4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f7ab:	00 
   1f7ac:	48 8d 05 ed d5 01 00 	lea    0x1d5ed(%rip),%rax        # 3cda0 <__tens_D2A>
   1f7b3:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1f7b8:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f7bc:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1f7c1:	8b 45 88             	mov    -0x78(%rbp),%eax
   1f7c4:	c1 f8 04             	sar    $0x4,%eax
   1f7c7:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1f7cd:	eb 53                	jmp    1f822 <__gdtoa+0x81c>
   1f7cf:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1f7d5:	83 e0 01             	and    $0x1,%eax
   1f7d8:	85 c0                	test   %eax,%eax
   1f7da:	74 31                	je     1f80d <__gdtoa+0x807>
   1f7dc:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   1f7e3:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f7e8:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f7ee:	48 98                	cltq   
   1f7f0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f7f7:	00 
   1f7f8:	48 8d 05 61 d5 01 00 	lea    0x1d561(%rip),%rax        # 3cd60 <__bigtens_D2A>
   1f7ff:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1f804:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f808:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1f80d:	d1 bd 48 ff ff ff    	sarl   -0xb8(%rbp)
   1f813:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1f819:	83 c0 01             	add    $0x1,%eax
   1f81c:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1f822:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   1f829:	75 a4                	jne    1f7cf <__gdtoa+0x7c9>
   1f82b:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   1f832:	74 59                	je     1f88d <__gdtoa+0x887>
   1f834:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f839:	f2 0f 10 05 5f d6 01 	movsd  0x1d65f(%rip),%xmm0        # 3cea0 <__tens_D2A+0x100>
   1f840:	00 
   1f841:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1f845:	76 46                	jbe    1f88d <__gdtoa+0x887>
   1f847:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1f84e:	7e 3d                	jle    1f88d <__gdtoa+0x887>
   1f850:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
   1f857:	0f 8e 3c 03 00 00    	jle    1fb99 <__gdtoa+0xb93>
   1f85d:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1f863:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1f869:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   1f870:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f875:	f2 0f 10 05 2b d6 01 	movsd  0x1d62b(%rip),%xmm0        # 3cea8 <__tens_D2A+0x108>
   1f87c:	00 
   1f87d:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f881:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1f886:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   1f88d:	f2 0f 2a 85 38 ff ff 	cvtsi2sdl -0xc8(%rbp),%xmm0
   1f894:	ff 
   1f895:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f89a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f89e:	f2 0f 10 0d 0a d6 01 	movsd  0x1d60a(%rip),%xmm1        # 3ceb0 <__tens_D2A+0x110>
   1f8a5:	00 
   1f8a6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1f8aa:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1f8af:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1f8b2:	2d 00 00 40 03       	sub    $0x3400000,%eax
   1f8b7:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1f8ba:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1f8c1:	75 5f                	jne    1f922 <__gdtoa+0x91c>
   1f8c3:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   1f8ca:	00 
   1f8cb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f8cf:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1f8d3:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f8d8:	f2 0f 10 0d d8 d5 01 	movsd  0x1d5d8(%rip),%xmm1        # 3ceb8 <__tens_D2A+0x118>
   1f8df:	00 
   1f8e0:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1f8e4:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1f8e9:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f8ee:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1f8f3:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1f8f7:	0f 87 32 0a 00 00    	ja     2032f <__gdtoa+0x1329>
   1f8fd:	f2 0f 10 55 e8       	movsd  -0x18(%rbp),%xmm2
   1f902:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1f907:	f3 0f 7e 05 b1 d5 01 	movq   0x1d5b1(%rip),%xmm0        # 3cec0 <__tens_D2A+0x120>
   1f90e:	00 
   1f90f:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
   1f913:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
   1f917:	0f 87 f1 09 00 00    	ja     2030e <__gdtoa+0x1308>
   1f91d:	e9 7b 02 00 00       	jmpq   1fb9d <__gdtoa+0xb97>
   1f922:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   1f929:	0f 84 3b 01 00 00    	je     1fa6a <__gdtoa+0xa64>
   1f92f:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   1f934:	f2 0f 10 05 94 d5 01 	movsd  0x1d594(%rip),%xmm0        # 3ced0 <__tens_D2A+0x130>
   1f93b:	00 
   1f93c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1f940:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1f946:	83 e8 01             	sub    $0x1,%eax
   1f949:	48 98                	cltq   
   1f94b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f952:	00 
   1f953:	48 8d 05 46 d4 01 00 	lea    0x1d446(%rip),%rax        # 3cda0 <__tens_D2A>
   1f95a:	f2 0f 10 0c 02       	movsd  (%rdx,%rax,1),%xmm1
   1f95f:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1f963:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1f968:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1f96c:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1f971:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   1f978:	00 00 00 
   1f97b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f980:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   1f985:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1f989:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1f98c:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f991:	f2 0f 2a 45 8c       	cvtsi2sdl -0x74(%rbp),%xmm0
   1f996:	f2 0f 59 45 b0       	mulsd  -0x50(%rbp),%xmm0
   1f99b:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1f99f:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1f9a3:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1f9a8:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1f9ab:	8d 48 30             	lea    0x30(%rax),%ecx
   1f9ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f9b2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1f9b6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1f9ba:	89 ca                	mov    %ecx,%edx
   1f9bc:	88 10                	mov    %dl,(%rax)
   1f9be:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1f9c3:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   1f9c8:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1f9cc:	76 2d                	jbe    1f9fb <__gdtoa+0x9f5>
   1f9ce:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1f9d3:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1f9d7:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1f9db:	7a 0f                	jp     1f9ec <__gdtoa+0x9e6>
   1f9dd:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1f9e1:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1f9e5:	75 05                	jne    1f9ec <__gdtoa+0x9e6>
   1f9e7:	e9 ba 10 00 00       	jmpq   20aa6 <__gdtoa+0x1aa0>
   1f9ec:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   1f9f3:	00 00 00 
   1f9f6:	e9 ab 10 00 00       	jmpq   20aa6 <__gdtoa+0x1aa0>
   1f9fb:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fa00:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   1fa05:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1fa09:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1fa0e:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1fa12:	0f 87 0e 03 00 00    	ja     1fd26 <__gdtoa+0xd20>
   1fa18:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fa1e:	83 c0 01             	add    $0x1,%eax
   1fa21:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1fa27:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fa2d:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   1fa33:	0f 8e 63 01 00 00    	jle    1fb9c <__gdtoa+0xb96>
   1fa39:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1fa3e:	f2 0f 10 05 62 d4 01 	movsd  0x1d462(%rip),%xmm0        # 3cea8 <__tens_D2A+0x108>
   1fa45:	00 
   1fa46:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1fa4a:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1fa4f:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fa54:	f2 0f 10 05 4c d4 01 	movsd  0x1d44c(%rip),%xmm0        # 3cea8 <__tens_D2A+0x108>
   1fa5b:	00 
   1fa5c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1fa60:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fa65:	e9 11 ff ff ff       	jmpq   1f97b <__gdtoa+0x975>
   1fa6a:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   1fa6f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1fa75:	83 e8 01             	sub    $0x1,%eax
   1fa78:	48 98                	cltq   
   1fa7a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fa81:	00 
   1fa82:	48 8d 05 17 d3 01 00 	lea    0x1d317(%rip),%rax        # 3cda0 <__tens_D2A>
   1fa89:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1fa8e:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1fa92:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   1fa97:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   1fa9e:	00 00 00 
   1faa1:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1faa6:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   1faab:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1faaf:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1fab2:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   1fab6:	74 1c                	je     1fad4 <__gdtoa+0xace>
   1fab8:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fabd:	f2 0f 2a 45 8c       	cvtsi2sdl -0x74(%rbp),%xmm0
   1fac2:	f2 0f 59 45 b0       	mulsd  -0x50(%rbp),%xmm0
   1fac7:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1facb:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1facf:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fad4:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1fad7:	8d 48 30             	lea    0x30(%rax),%ecx
   1fada:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fade:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1fae2:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1fae6:	89 ca                	mov    %ecx,%edx
   1fae8:	88 10                	mov    %dl,(%rax)
   1faea:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1faf0:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   1faf6:	75 77                	jne    1fb6f <__gdtoa+0xb69>
   1faf8:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   1fafd:	f2 0f 10 05 cb d3 01 	movsd  0x1d3cb(%rip),%xmm0        # 3ced0 <__tens_D2A+0x130>
   1fb04:	00 
   1fb05:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1fb09:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1fb0e:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fb13:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   1fb18:	f2 0f 58 45 b0       	addsd  -0x50(%rbp),%xmm0
   1fb1d:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1fb21:	0f 87 02 02 00 00    	ja     1fd29 <__gdtoa+0xd23>
   1fb27:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fb2c:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   1fb31:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   1fb36:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   1fb3a:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1fb3e:	77 02                	ja     1fb42 <__gdtoa+0xb3c>
   1fb40:	eb 5b                	jmp    1fb9d <__gdtoa+0xb97>
   1fb42:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1fb47:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1fb4b:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1fb4f:	7a 0f                	jp     1fb60 <__gdtoa+0xb5a>
   1fb51:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1fb55:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1fb59:	75 05                	jne    1fb60 <__gdtoa+0xb5a>
   1fb5b:	e9 26 02 00 00       	jmpq   1fd86 <__gdtoa+0xd80>
   1fb60:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   1fb67:	00 00 00 
   1fb6a:	e9 17 02 00 00       	jmpq   1fd86 <__gdtoa+0xd80>
   1fb6f:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fb75:	83 c0 01             	add    $0x1,%eax
   1fb78:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1fb7e:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fb83:	f2 0f 10 05 1d d3 01 	movsd  0x1d31d(%rip),%xmm0        # 3cea8 <__tens_D2A+0x108>
   1fb8a:	00 
   1fb8b:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1fb8f:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fb94:	e9 08 ff ff ff       	jmpq   1faa1 <__gdtoa+0xa9b>
   1fb99:	90                   	nop
   1fb9a:	eb 01                	jmp    1fb9d <__gdtoa+0xb97>
   1fb9c:	90                   	nop
   1fb9d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1fba1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1fba5:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
   1fbaa:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fbaf:	8b 45 80             	mov    -0x80(%rbp),%eax
   1fbb2:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   1fbb8:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1fbbb:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1fbc1:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
   1fbc8:	0f 88 ff 01 00 00    	js     1fdcd <__gdtoa+0xdc7>
   1fbce:	83 bd 4c ff ff ff 0e 	cmpl   $0xe,-0xb4(%rbp)
   1fbd5:	0f 8f f2 01 00 00    	jg     1fdcd <__gdtoa+0xdc7>
   1fbdb:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   1fbe1:	48 98                	cltq   
   1fbe3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fbea:	00 
   1fbeb:	48 8d 05 ae d1 01 00 	lea    0x1d1ae(%rip),%rax        # 3cda0 <__tens_D2A>
   1fbf2:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   1fbf7:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   1fbfc:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%rbp)
   1fc03:	79 4b                	jns    1fc50 <__gdtoa+0xc4a>
   1fc05:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1fc0c:	7f 42                	jg     1fc50 <__gdtoa+0xc4a>
   1fc0e:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   1fc15:	00 
   1fc16:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1fc1a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1fc1e:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1fc25:	0f 88 e6 06 00 00    	js     20311 <__gdtoa+0x130b>
   1fc2b:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fc30:	f2 0f 10 55 b0       	movsd  -0x50(%rbp),%xmm2
   1fc35:	f2 0f 10 05 7b d2 01 	movsd  0x1d27b(%rip),%xmm0        # 3ceb8 <__tens_D2A+0x118>
   1fc3c:	00 
   1fc3d:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   1fc41:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1fc45:	0f 83 c6 06 00 00    	jae    20311 <__gdtoa+0x130b>
   1fc4b:	e9 e3 06 00 00       	jmpq   20333 <__gdtoa+0x132d>
   1fc50:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   1fc57:	00 00 00 
   1fc5a:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1fc5f:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   1fc64:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1fc68:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1fc6b:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fc70:	f2 0f 2a 45 8c       	cvtsi2sdl -0x74(%rbp),%xmm0
   1fc75:	f2 0f 59 45 b0       	mulsd  -0x50(%rbp),%xmm0
   1fc7a:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1fc7e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1fc82:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fc87:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1fc8a:	8d 48 30             	lea    0x30(%rax),%ecx
   1fc8d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fc91:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1fc95:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1fc99:	89 ca                	mov    %ecx,%edx
   1fc9b:	88 10                	mov    %dl,(%rax)
   1fc9d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1fca2:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1fca6:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1fcaa:	7a 0e                	jp     1fcba <__gdtoa+0xcb4>
   1fcac:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1fcb0:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   1fcb4:	0f 84 0d 01 00 00    	je     1fdc7 <__gdtoa+0xdc1>
   1fcba:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fcc0:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   1fcc6:	0f 85 d1 00 00 00    	jne    1fd9d <__gdtoa+0xd97>
   1fccc:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   1fcd3:	74 18                	je     1fced <__gdtoa+0xce7>
   1fcd5:	83 bd 60 ff ff ff 01 	cmpl   $0x1,-0xa0(%rbp)
   1fcdc:	74 4e                	je     1fd2c <__gdtoa+0xd26>
   1fcde:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   1fce5:	00 00 00 
   1fce8:	e9 b9 0d 00 00       	jmpq   20aa6 <__gdtoa+0x1aa0>
   1fced:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1fcf2:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   1fcf6:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fcfb:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1fd00:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   1fd05:	77 28                	ja     1fd2f <__gdtoa+0xd29>
   1fd07:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   1fd0c:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   1fd11:	7a 69                	jp     1fd7c <__gdtoa+0xd76>
   1fd13:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   1fd18:	75 62                	jne    1fd7c <__gdtoa+0xd76>
   1fd1a:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1fd1d:	83 e0 01             	and    $0x1,%eax
   1fd20:	85 c0                	test   %eax,%eax
   1fd22:	74 58                	je     1fd7c <__gdtoa+0xd76>
   1fd24:	eb 09                	jmp    1fd2f <__gdtoa+0xd29>
   1fd26:	90                   	nop
   1fd27:	eb 07                	jmp    1fd30 <__gdtoa+0xd2a>
   1fd29:	90                   	nop
   1fd2a:	eb 04                	jmp    1fd30 <__gdtoa+0xd2a>
   1fd2c:	90                   	nop
   1fd2d:	eb 01                	jmp    1fd30 <__gdtoa+0xd2a>
   1fd2f:	90                   	nop
   1fd30:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   1fd37:	00 00 00 
   1fd3a:	eb 1a                	jmp    1fd56 <__gdtoa+0xd50>
   1fd3c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fd40:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1fd44:	75 10                	jne    1fd56 <__gdtoa+0xd50>
   1fd46:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   1fd4d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fd51:	c6 00 30             	movb   $0x30,(%rax)
   1fd54:	eb 10                	jmp    1fd66 <__gdtoa+0xd60>
   1fd56:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   1fd5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fd5f:	0f b6 00             	movzbl (%rax),%eax
   1fd62:	3c 39                	cmp    $0x39,%al
   1fd64:	74 d6                	je     1fd3c <__gdtoa+0xd36>
   1fd66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fd6a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1fd6e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1fd72:	0f b6 10             	movzbl (%rax),%edx
   1fd75:	83 c2 01             	add    $0x1,%edx
   1fd78:	88 10                	mov    %dl,(%rax)
   1fd7a:	eb 4c                	jmp    1fdc8 <__gdtoa+0xdc2>
   1fd7c:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   1fd83:	00 00 00 
   1fd86:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   1fd8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fd8f:	0f b6 00             	movzbl (%rax),%eax
   1fd92:	3c 30                	cmp    $0x30,%al
   1fd94:	74 f0                	je     1fd86 <__gdtoa+0xd80>
   1fd96:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)
   1fd9b:	eb 2b                	jmp    1fdc8 <__gdtoa+0xdc2>
   1fd9d:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fda3:	83 c0 01             	add    $0x1,%eax
   1fda6:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1fdac:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   1fdb1:	f2 0f 10 05 ef d0 01 	movsd  0x1d0ef(%rip),%xmm0        # 3cea8 <__tens_D2A+0x108>
   1fdb8:	00 
   1fdb9:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   1fdbd:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   1fdc2:	e9 93 fe ff ff       	jmpq   1fc5a <__gdtoa+0xc54>
   1fdc7:	90                   	nop
   1fdc8:	e9 d9 0c 00 00       	jmpq   20aa6 <__gdtoa+0x1aa0>
   1fdcd:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fdd3:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1fdd9:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1fddf:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   1fde5:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   1fdec:	00 
   1fded:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1fdf1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1fdf5:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   1fdfc:	0f 84 65 01 00 00    	je     1ff67 <__gdtoa+0xf61>
   1fe02:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1fe08:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
   1fe0e:	29 c2                	sub    %eax,%edx
   1fe10:	89 d0                	mov    %edx,%eax
   1fe12:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1fe18:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fe1e:	8d 50 01             	lea    0x1(%rax),%edx
   1fe21:	89 95 28 ff ff ff    	mov    %edx,-0xd8(%rbp)
   1fe27:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   1fe2d:	29 c2                	sub    %eax,%edx
   1fe2f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1fe36:	8b 40 04             	mov    0x4(%rax),%eax
   1fe39:	39 c2                	cmp    %eax,%edx
   1fe3b:	7d 5d                	jge    1fe9a <__gdtoa+0xe94>
   1fe3d:	83 bd 10 ff ff ff 03 	cmpl   $0x3,-0xf0(%rbp)
   1fe44:	74 54                	je     1fe9a <__gdtoa+0xe94>
   1fe46:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   1fe4d:	74 4b                	je     1fe9a <__gdtoa+0xe94>
   1fe4f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1fe56:	8b 40 04             	mov    0x4(%rax),%eax
   1fe59:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   1fe5f:	29 c2                	sub    %eax,%edx
   1fe61:	89 d0                	mov    %edx,%eax
   1fe63:	83 c0 01             	add    $0x1,%eax
   1fe66:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1fe6c:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   1fe73:	0f 8e b6 00 00 00    	jle    1ff2f <__gdtoa+0xf29>
   1fe79:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   1fe80:	0f 8e a9 00 00 00    	jle    1ff2f <__gdtoa+0xf29>
   1fe86:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1fe8c:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   1fe92:	0f 8d 97 00 00 00    	jge    1ff2f <__gdtoa+0xf29>
   1fe98:	eb 0e                	jmp    1fea8 <__gdtoa+0xea2>
   1fe9a:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   1fea1:	0f 8e 89 00 00 00    	jle    1ff30 <__gdtoa+0xf2a>
   1fea7:	90                   	nop
   1fea8:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1feae:	83 e8 01             	sub    $0x1,%eax
   1feb1:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   1feb7:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1febd:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
   1fec3:	7c 0e                	jl     1fed3 <__gdtoa+0xecd>
   1fec5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1fecb:	29 85 5c ff ff ff    	sub    %eax,-0xa4(%rbp)
   1fed1:	eb 2e                	jmp    1ff01 <__gdtoa+0xefb>
   1fed3:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   1fed9:	29 85 48 ff ff ff    	sub    %eax,-0xb8(%rbp)
   1fedf:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1fee5:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   1feeb:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   1fef1:	01 85 30 ff ff ff    	add    %eax,-0xd0(%rbp)
   1fef7:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   1fefe:	00 00 00 
   1ff01:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1ff07:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1ff0d:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ff13:	85 c0                	test   %eax,%eax
   1ff15:	79 19                	jns    1ff30 <__gdtoa+0xf2a>
   1ff17:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ff1d:	29 85 58 ff ff ff    	sub    %eax,-0xa8(%rbp)
   1ff23:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   1ff2a:	00 00 00 
   1ff2d:	eb 01                	jmp    1ff30 <__gdtoa+0xf2a>
   1ff2f:	90                   	nop
   1ff30:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ff36:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   1ff3c:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ff42:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   1ff48:	bf 01 00 00 00       	mov    $0x1,%edi
   1ff4d:	e8 9f de ff ff       	callq  1ddf1 <__i2b_D2A>
   1ff52:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1ff56:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1ff5b:	75 0a                	jne    1ff67 <__gdtoa+0xf61>
   1ff5d:	b8 00 00 00 00       	mov    $0x0,%eax
   1ff62:	e9 9a 0b 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   1ff67:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   1ff6e:	7e 46                	jle    1ffb6 <__gdtoa+0xfb0>
   1ff70:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   1ff77:	7e 3d                	jle    1ffb6 <__gdtoa+0xfb0>
   1ff79:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1ff7f:	39 85 64 ff ff ff    	cmp    %eax,-0x9c(%rbp)
   1ff85:	0f 4e 85 64 ff ff ff 	cmovle -0x9c(%rbp),%eax
   1ff8c:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1ff92:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ff98:	29 85 2c ff ff ff    	sub    %eax,-0xd4(%rbp)
   1ff9e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ffa4:	29 85 58 ff ff ff    	sub    %eax,-0xa8(%rbp)
   1ffaa:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1ffb0:	29 85 64 ff ff ff    	sub    %eax,-0x9c(%rbp)
   1ffb6:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
   1ffbd:	0f 8e e8 00 00 00    	jle    200ab <__gdtoa+0x10a5>
   1ffc3:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   1ffca:	0f 84 b2 00 00 00    	je     20082 <__gdtoa+0x107c>
   1ffd0:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1ffd7:	7e 65                	jle    2003e <__gdtoa+0x1038>
   1ffd9:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   1ffdf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ffe3:	89 d6                	mov    %edx,%esi
   1ffe5:	48 89 c7             	mov    %rax,%rdi
   1ffe8:	e8 64 e1 ff ff       	callq  1e151 <__pow5mult_D2A>
   1ffed:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1fff1:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1fff6:	75 0a                	jne    20002 <__gdtoa+0xffc>
   1fff8:	b8 00 00 00 00       	mov    $0x0,%eax
   1fffd:	e9 ff 0a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20002:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   20006:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2000a:	48 89 d6             	mov    %rdx,%rsi
   2000d:	48 89 c7             	mov    %rax,%rdi
   20010:	e8 1e de ff ff       	callq  1de33 <__mult_D2A>
   20015:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   20019:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2001e:	75 0a                	jne    2002a <__gdtoa+0x1024>
   20020:	b8 00 00 00 00       	mov    $0x0,%eax
   20025:	e9 d7 0a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   2002a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2002e:	48 89 c7             	mov    %rax,%rdi
   20031:	e8 84 da ff ff       	callq  1daba <__Bfree_D2A>
   20036:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2003a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2003e:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   20044:	2b 85 5c ff ff ff    	sub    -0xa4(%rbp),%eax
   2004a:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   20050:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   20057:	74 52                	je     200ab <__gdtoa+0x10a5>
   20059:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
   2005f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20063:	89 d6                	mov    %edx,%esi
   20065:	48 89 c7             	mov    %rax,%rdi
   20068:	e8 e4 e0 ff ff       	callq  1e151 <__pow5mult_D2A>
   2006d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   20071:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   20076:	75 33                	jne    200ab <__gdtoa+0x10a5>
   20078:	b8 00 00 00 00       	mov    $0x0,%eax
   2007d:	e9 7f 0a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20082:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   20088:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2008c:	89 d6                	mov    %edx,%esi
   2008e:	48 89 c7             	mov    %rax,%rdi
   20091:	e8 bb e0 ff ff       	callq  1e151 <__pow5mult_D2A>
   20096:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2009a:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2009f:	75 0a                	jne    200ab <__gdtoa+0x10a5>
   200a1:	b8 00 00 00 00       	mov    $0x0,%eax
   200a6:	e9 56 0a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   200ab:	bf 01 00 00 00       	mov    $0x1,%edi
   200b0:	e8 3c dd ff ff       	callq  1ddf1 <__i2b_D2A>
   200b5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   200b9:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   200be:	75 0a                	jne    200ca <__gdtoa+0x10c4>
   200c0:	b8 00 00 00 00       	mov    $0x0,%eax
   200c5:	e9 37 0a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   200ca:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   200d1:	7e 29                	jle    200fc <__gdtoa+0x10f6>
   200d3:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   200d9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   200dd:	89 d6                	mov    %edx,%esi
   200df:	48 89 c7             	mov    %rax,%rdi
   200e2:	e8 6a e0 ff ff       	callq  1e151 <__pow5mult_D2A>
   200e7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   200eb:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   200f0:	75 0a                	jne    200fc <__gdtoa+0x10f6>
   200f2:	b8 00 00 00 00       	mov    $0x0,%eax
   200f7:	e9 05 0a 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   200fc:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   20103:	00 00 00 
   20106:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2010d:	7f 38                	jg     20147 <__gdtoa+0x1141>
   2010f:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   20115:	83 f8 01             	cmp    $0x1,%eax
   20118:	75 2d                	jne    20147 <__gdtoa+0x1141>
   2011a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   20121:	8b 40 04             	mov    0x4(%rax),%eax
   20124:	83 c0 01             	add    $0x1,%eax
   20127:	39 85 7c ff ff ff    	cmp    %eax,-0x84(%rbp)
   2012d:	7e 18                	jle    20147 <__gdtoa+0x1141>
   2012f:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
   20136:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
   2013d:	c7 85 6c ff ff ff 01 	movl   $0x1,-0x94(%rbp)
   20144:	00 00 00 
   20147:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2014e:	74 22                	je     20172 <__gdtoa+0x116c>
   20150:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20154:	8b 40 14             	mov    0x14(%rax),%eax
   20157:	8d 50 ff             	lea    -0x1(%rax),%edx
   2015a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2015e:	48 63 d2             	movslq %edx,%rdx
   20161:	48 83 c2 04          	add    $0x4,%rdx
   20165:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   20169:	89 c7                	mov    %eax,%edi
   2016b:	e8 fe db ff ff       	callq  1dd6e <__hi0bits_D2A>
   20170:	eb 05                	jmp    20177 <__gdtoa+0x1171>
   20172:	b8 1f 00 00 00       	mov    $0x1f,%eax
   20177:	2b 85 64 ff ff ff    	sub    -0x9c(%rbp),%eax
   2017d:	83 e8 04             	sub    $0x4,%eax
   20180:	83 e0 1f             	and    $0x1f,%eax
   20183:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   20189:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2018f:	01 85 58 ff ff ff    	add    %eax,-0xa8(%rbp)
   20195:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2019b:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   201a1:	83 bd 2c ff ff ff 00 	cmpl   $0x0,-0xd4(%rbp)
   201a8:	7e 29                	jle    201d3 <__gdtoa+0x11cd>
   201aa:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   201b0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   201b4:	89 d6                	mov    %edx,%esi
   201b6:	48 89 c7             	mov    %rax,%rdi
   201b9:	e8 5e e1 ff ff       	callq  1e31c <__lshift_D2A>
   201be:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   201c2:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   201c7:	75 0a                	jne    201d3 <__gdtoa+0x11cd>
   201c9:	b8 00 00 00 00       	mov    $0x0,%eax
   201ce:	e9 2e 09 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   201d3:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   201d9:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   201df:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   201e6:	7e 29                	jle    20211 <__gdtoa+0x120b>
   201e8:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
   201ee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   201f2:	89 d6                	mov    %edx,%esi
   201f4:	48 89 c7             	mov    %rax,%rdi
   201f7:	e8 20 e1 ff ff       	callq  1e31c <__lshift_D2A>
   201fc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   20200:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   20205:	75 0a                	jne    20211 <__gdtoa+0x120b>
   20207:	b8 00 00 00 00       	mov    $0x0,%eax
   2020c:	e9 f0 08 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20211:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   20218:	0f 84 89 00 00 00    	je     202a7 <__gdtoa+0x12a1>
   2021e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   20222:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20226:	48 89 d6             	mov    %rdx,%rsi
   20229:	48 89 c7             	mov    %rax,%rdi
   2022c:	e8 74 e2 ff ff       	callq  1e4a5 <__cmp_D2A>
   20231:	85 c0                	test   %eax,%eax
   20233:	79 72                	jns    202a7 <__gdtoa+0x12a1>
   20235:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2023c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20240:	ba 00 00 00 00       	mov    $0x0,%edx
   20245:	be 0a 00 00 00       	mov    $0xa,%esi
   2024a:	48 89 c7             	mov    %rax,%rdi
   2024d:	e8 d6 d9 ff ff       	callq  1dc28 <__multadd_D2A>
   20252:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   20256:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2025b:	75 0a                	jne    20267 <__gdtoa+0x1261>
   2025d:	b8 00 00 00 00       	mov    $0x0,%eax
   20262:	e9 9a 08 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20267:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2026e:	74 2b                	je     2029b <__gdtoa+0x1295>
   20270:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20274:	ba 00 00 00 00       	mov    $0x0,%edx
   20279:	be 0a 00 00 00       	mov    $0xa,%esi
   2027e:	48 89 c7             	mov    %rax,%rdi
   20281:	e8 a2 d9 ff ff       	callq  1dc28 <__multadd_D2A>
   20286:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2028a:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2028f:	75 0a                	jne    2029b <__gdtoa+0x1295>
   20291:	b8 00 00 00 00       	mov    $0x0,%eax
   20296:	e9 66 08 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   2029b:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   202a1:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   202a7:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   202ae:	0f 8f a4 00 00 00    	jg     20358 <__gdtoa+0x1352>
   202b4:	83 bd 10 ff ff ff 02 	cmpl   $0x2,-0xf0(%rbp)
   202bb:	0f 8e 97 00 00 00    	jle    20358 <__gdtoa+0x1352>
   202c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   202c5:	ba 00 00 00 00       	mov    $0x0,%edx
   202ca:	be 05 00 00 00       	mov    $0x5,%esi
   202cf:	48 89 c7             	mov    %rax,%rdi
   202d2:	e8 51 d9 ff ff       	callq  1dc28 <__multadd_D2A>
   202d7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   202db:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   202e0:	75 0a                	jne    202ec <__gdtoa+0x12e6>
   202e2:	b8 00 00 00 00       	mov    $0x0,%eax
   202e7:	e9 15 08 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   202ec:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   202f3:	78 1c                	js     20311 <__gdtoa+0x130b>
   202f5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   202f9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   202fd:	48 89 d6             	mov    %rdx,%rsi
   20300:	48 89 c7             	mov    %rax,%rdi
   20303:	e8 9d e1 ff ff       	callq  1e4a5 <__cmp_D2A>
   20308:	85 c0                	test   %eax,%eax
   2030a:	7f 26                	jg     20332 <__gdtoa+0x132c>
   2030c:	eb 03                	jmp    20311 <__gdtoa+0x130b>
   2030e:	90                   	nop
   2030f:	eb 01                	jmp    20312 <__gdtoa+0x130c>
   20311:	90                   	nop
   20312:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
   20318:	f7 d0                	not    %eax
   2031a:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   20320:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   20327:	00 00 00 
   2032a:	e9 38 07 00 00       	jmpq   20a67 <__gdtoa+0x1a61>
   2032f:	90                   	nop
   20330:	eb 01                	jmp    20333 <__gdtoa+0x132d>
   20332:	90                   	nop
   20333:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2033a:	00 00 00 
   2033d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20341:	48 8d 50 01          	lea    0x1(%rax),%rdx
   20345:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   20349:	c6 00 31             	movb   $0x31,(%rax)
   2034c:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   20353:	e9 0f 07 00 00       	jmpq   20a67 <__gdtoa+0x1a61>
   20358:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2035f:	0f 84 58 05 00 00    	je     208bd <__gdtoa+0x18b7>
   20365:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2036c:	7e 29                	jle    20397 <__gdtoa+0x1391>
   2036e:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   20374:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20378:	89 d6                	mov    %edx,%esi
   2037a:	48 89 c7             	mov    %rax,%rdi
   2037d:	e8 9a df ff ff       	callq  1e31c <__lshift_D2A>
   20382:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   20386:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2038b:	75 0a                	jne    20397 <__gdtoa+0x1391>
   2038d:	b8 00 00 00 00       	mov    $0x0,%eax
   20392:	e9 6a 07 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20397:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2039b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2039f:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   203a6:	74 79                	je     20421 <__gdtoa+0x141b>
   203a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   203ac:	8b 40 08             	mov    0x8(%rax),%eax
   203af:	89 c7                	mov    %eax,%edi
   203b1:	e8 bd d5 ff ff       	callq  1d973 <__Balloc_D2A>
   203b6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   203ba:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   203bf:	75 0a                	jne    203cb <__gdtoa+0x13c5>
   203c1:	b8 00 00 00 00       	mov    $0x0,%eax
   203c6:	e9 36 07 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   203cb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   203cf:	8b 40 14             	mov    0x14(%rax),%eax
   203d2:	48 98                	cltq   
   203d4:	48 83 c0 02          	add    $0x2,%rax
   203d8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   203df:	00 
   203e0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   203e4:	48 8d 48 10          	lea    0x10(%rax),%rcx
   203e8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   203ec:	48 83 c0 10          	add    $0x10,%rax
   203f0:	48 89 ce             	mov    %rcx,%rsi
   203f3:	48 89 c7             	mov    %rax,%rdi
   203f6:	e8 cc 32 ff ff       	callq  136c7 <memcpy>
   203fb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   203ff:	be 01 00 00 00       	mov    $0x1,%esi
   20404:	48 89 c7             	mov    %rax,%rdi
   20407:	e8 10 df ff ff       	callq  1e31c <__lshift_D2A>
   2040c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   20410:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   20415:	75 0a                	jne    20421 <__gdtoa+0x141b>
   20417:	b8 00 00 00 00       	mov    $0x0,%eax
   2041c:	e9 e0 06 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20421:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   20428:	00 00 00 
   2042b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2042f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20433:	48 89 d6             	mov    %rdx,%rsi
   20436:	48 89 c7             	mov    %rax,%rdi
   20439:	e8 a4 ab ff ff       	callq  1afe2 <__quorem_D2A>
   2043e:	83 c0 30             	add    $0x30,%eax
   20441:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   20447:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2044b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2044f:	48 89 d6             	mov    %rdx,%rsi
   20452:	48 89 c7             	mov    %rax,%rdi
   20455:	e8 4b e0 ff ff       	callq  1e4a5 <__cmp_D2A>
   2045a:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   20460:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   20464:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20468:	48 89 d6             	mov    %rdx,%rsi
   2046b:	48 89 c7             	mov    %rax,%rdi
   2046e:	e8 02 e1 ff ff       	callq  1e575 <__diff_D2A>
   20473:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20477:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2047c:	75 0a                	jne    20488 <__gdtoa+0x1482>
   2047e:	b8 00 00 00 00       	mov    $0x0,%eax
   20483:	e9 79 06 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20488:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2048c:	8b 40 10             	mov    0x10(%rax),%eax
   2048f:	85 c0                	test   %eax,%eax
   20491:	75 15                	jne    204a8 <__gdtoa+0x14a2>
   20493:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20497:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2049b:	48 89 d6             	mov    %rdx,%rsi
   2049e:	48 89 c7             	mov    %rax,%rdi
   204a1:	e8 ff df ff ff       	callq  1e4a5 <__cmp_D2A>
   204a6:	eb 05                	jmp    204ad <__gdtoa+0x14a7>
   204a8:	b8 01 00 00 00       	mov    $0x1,%eax
   204ad:	89 45 88             	mov    %eax,-0x78(%rbp)
   204b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   204b4:	48 89 c7             	mov    %rax,%rdi
   204b7:	e8 fe d5 ff ff       	callq  1daba <__Bfree_D2A>
   204bc:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   204c0:	0f 85 85 00 00 00    	jne    2054b <__gdtoa+0x1545>
   204c6:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   204cd:	75 7c                	jne    2054b <__gdtoa+0x1545>
   204cf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   204d6:	8b 00                	mov    (%rax),%eax
   204d8:	83 e0 01             	and    $0x1,%eax
   204db:	85 c0                	test   %eax,%eax
   204dd:	75 6c                	jne    2054b <__gdtoa+0x1545>
   204df:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   204e6:	75 63                	jne    2054b <__gdtoa+0x1545>
   204e8:	83 bd 34 ff ff ff 39 	cmpl   $0x39,-0xcc(%rbp)
   204ef:	0f 84 83 02 00 00    	je     20778 <__gdtoa+0x1772>
   204f5:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   204fc:	7f 23                	jg     20521 <__gdtoa+0x151b>
   204fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20502:	8b 40 14             	mov    0x14(%rax),%eax
   20505:	83 f8 01             	cmp    $0x1,%eax
   20508:	7f 0b                	jg     20515 <__gdtoa+0x150f>
   2050a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2050e:	8b 40 18             	mov    0x18(%rax),%eax
   20511:	85 c0                	test   %eax,%eax
   20513:	74 1d                	je     20532 <__gdtoa+0x152c>
   20515:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2051c:	00 00 00 
   2051f:	eb 11                	jmp    20532 <__gdtoa+0x152c>
   20521:	83 85 34 ff ff ff 01 	addl   $0x1,-0xcc(%rbp)
   20528:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2052f:	00 00 00 
   20532:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20536:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2053a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2053e:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   20544:	88 10                	mov    %dl,(%rax)
   20546:	e9 1c 05 00 00       	jmpq   20a67 <__gdtoa+0x1a61>
   2054b:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   20552:	78 2e                	js     20582 <__gdtoa+0x157c>
   20554:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2055b:	0f 85 fd 01 00 00    	jne    2075e <__gdtoa+0x1758>
   20561:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   20568:	0f 85 f0 01 00 00    	jne    2075e <__gdtoa+0x1758>
   2056e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   20575:	8b 00                	mov    (%rax),%eax
   20577:	83 e0 01             	and    $0x1,%eax
   2057a:	85 c0                	test   %eax,%eax
   2057c:	0f 85 dc 01 00 00    	jne    2075e <__gdtoa+0x1758>
   20582:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   20589:	0f 84 19 01 00 00    	je     206a8 <__gdtoa+0x16a2>
   2058f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20593:	8b 40 14             	mov    0x14(%rax),%eax
   20596:	83 f8 01             	cmp    $0x1,%eax
   20599:	7f 0f                	jg     205aa <__gdtoa+0x15a4>
   2059b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2059f:	8b 40 18             	mov    0x18(%rax),%eax
   205a2:	85 c0                	test   %eax,%eax
   205a4:	0f 84 fe 00 00 00    	je     206a8 <__gdtoa+0x16a2>
   205aa:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   205b1:	0f 85 af 00 00 00    	jne    20666 <__gdtoa+0x1660>
   205b7:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   205be:	00 00 00 
   205c1:	e9 7f 01 00 00       	jmpq   20745 <__gdtoa+0x173f>
   205c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   205ca:	48 8d 50 01          	lea    0x1(%rax),%rdx
   205ce:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   205d2:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   205d8:	88 10                	mov    %dl,(%rax)
   205da:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   205de:	ba 00 00 00 00       	mov    $0x0,%edx
   205e3:	be 0a 00 00 00       	mov    $0xa,%esi
   205e8:	48 89 c7             	mov    %rax,%rdi
   205eb:	e8 38 d6 ff ff       	callq  1dc28 <__multadd_D2A>
   205f0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   205f4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   205f9:	75 0a                	jne    20605 <__gdtoa+0x15ff>
   205fb:	b8 00 00 00 00       	mov    $0x0,%eax
   20600:	e9 fc 04 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20605:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20609:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   2060d:	75 08                	jne    20617 <__gdtoa+0x1611>
   2060f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20613:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   20617:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2061b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2061f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20623:	ba 00 00 00 00       	mov    $0x0,%edx
   20628:	be 0a 00 00 00       	mov    $0xa,%esi
   2062d:	48 89 c7             	mov    %rax,%rdi
   20630:	e8 f3 d5 ff ff       	callq  1dc28 <__multadd_D2A>
   20635:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   20639:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2063e:	75 0a                	jne    2064a <__gdtoa+0x1644>
   20640:	b8 00 00 00 00       	mov    $0x0,%eax
   20645:	e9 b7 04 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   2064a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2064e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20652:	48 89 d6             	mov    %rdx,%rsi
   20655:	48 89 c7             	mov    %rax,%rdi
   20658:	e8 85 a9 ff ff       	callq  1afe2 <__quorem_D2A>
   2065d:	83 c0 30             	add    $0x30,%eax
   20660:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   20666:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2066a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2066e:	48 89 d6             	mov    %rdx,%rsi
   20671:	48 89 c7             	mov    %rax,%rdi
   20674:	e8 2c de ff ff       	callq  1e4a5 <__cmp_D2A>
   20679:	85 c0                	test   %eax,%eax
   2067b:	0f 8f 45 ff ff ff    	jg     205c6 <__gdtoa+0x15c0>
   20681:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   20687:	8d 50 01             	lea    0x1(%rax),%edx
   2068a:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
   20690:	83 f8 39             	cmp    $0x39,%eax
   20693:	0f 84 e2 00 00 00    	je     2077b <__gdtoa+0x1775>
   20699:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   206a0:	00 00 00 
   206a3:	e9 9d 00 00 00       	jmpq   20745 <__gdtoa+0x173f>
   206a8:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   206ac:	7e 73                	jle    20721 <__gdtoa+0x171b>
   206ae:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   206b2:	be 01 00 00 00       	mov    $0x1,%esi
   206b7:	48 89 c7             	mov    %rax,%rdi
   206ba:	e8 5d dc ff ff       	callq  1e31c <__lshift_D2A>
   206bf:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   206c3:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   206c8:	75 0a                	jne    206d4 <__gdtoa+0x16ce>
   206ca:	b8 00 00 00 00       	mov    $0x0,%eax
   206cf:	e9 2d 04 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   206d4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   206d8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   206dc:	48 89 d6             	mov    %rdx,%rsi
   206df:	48 89 c7             	mov    %rax,%rdi
   206e2:	e8 be dd ff ff       	callq  1e4a5 <__cmp_D2A>
   206e7:	89 45 88             	mov    %eax,-0x78(%rbp)
   206ea:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   206ee:	7f 13                	jg     20703 <__gdtoa+0x16fd>
   206f0:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   206f4:	75 21                	jne    20717 <__gdtoa+0x1711>
   206f6:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   206fc:	83 e0 01             	and    $0x1,%eax
   206ff:	85 c0                	test   %eax,%eax
   20701:	74 14                	je     20717 <__gdtoa+0x1711>
   20703:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   20709:	8d 50 01             	lea    0x1(%rax),%edx
   2070c:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
   20712:	83 f8 39             	cmp    $0x39,%eax
   20715:	74 67                	je     2077e <__gdtoa+0x1778>
   20717:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2071e:	00 00 00 
   20721:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20725:	8b 40 14             	mov    0x14(%rax),%eax
   20728:	83 f8 01             	cmp    $0x1,%eax
   2072b:	7f 0b                	jg     20738 <__gdtoa+0x1732>
   2072d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20731:	8b 40 18             	mov    0x18(%rax),%eax
   20734:	85 c0                	test   %eax,%eax
   20736:	74 0c                	je     20744 <__gdtoa+0x173e>
   20738:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2073f:	00 00 00 
   20742:	eb 01                	jmp    20745 <__gdtoa+0x173f>
   20744:	90                   	nop
   20745:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20749:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2074d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   20751:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   20757:	88 10                	mov    %dl,(%rax)
   20759:	e9 09 03 00 00       	jmpq   20a67 <__gdtoa+0x1a61>
   2075e:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   20762:	7e 61                	jle    207c5 <__gdtoa+0x17bf>
   20764:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   2076b:	74 58                	je     207c5 <__gdtoa+0x17bf>
   2076d:	83 bd 34 ff ff ff 39 	cmpl   $0x39,-0xcc(%rbp)
   20774:	75 27                	jne    2079d <__gdtoa+0x1797>
   20776:	eb 07                	jmp    2077f <__gdtoa+0x1779>
   20778:	90                   	nop
   20779:	eb 04                	jmp    2077f <__gdtoa+0x1779>
   2077b:	90                   	nop
   2077c:	eb 01                	jmp    2077f <__gdtoa+0x1779>
   2077e:	90                   	nop
   2077f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20783:	48 8d 50 01          	lea    0x1(%rax),%rdx
   20787:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2078b:	c6 00 39             	movb   $0x39,(%rax)
   2078e:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   20795:	00 00 00 
   20798:	e9 3f 02 00 00       	jmpq   209dc <__gdtoa+0x19d6>
   2079d:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   207a4:	00 00 00 
   207a7:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   207ad:	8d 48 01             	lea    0x1(%rax),%ecx
   207b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   207b4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   207b8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   207bc:	89 ca                	mov    %ecx,%edx
   207be:	88 10                	mov    %dl,(%rax)
   207c0:	e9 a2 02 00 00       	jmpq   20a67 <__gdtoa+0x1a61>
   207c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   207c9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   207cd:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   207d1:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   207d7:	88 10                	mov    %dl,(%rax)
   207d9:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   207df:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   207e5:	0f 84 56 01 00 00    	je     20941 <__gdtoa+0x193b>
   207eb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   207ef:	ba 00 00 00 00       	mov    $0x0,%edx
   207f4:	be 0a 00 00 00       	mov    $0xa,%esi
   207f9:	48 89 c7             	mov    %rax,%rdi
   207fc:	e8 27 d4 ff ff       	callq  1dc28 <__multadd_D2A>
   20801:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   20805:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2080a:	75 0a                	jne    20816 <__gdtoa+0x1810>
   2080c:	b8 00 00 00 00       	mov    $0x0,%eax
   20811:	e9 eb 02 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20816:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2081a:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   2081e:	75 33                	jne    20853 <__gdtoa+0x184d>
   20820:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20824:	ba 00 00 00 00       	mov    $0x0,%edx
   20829:	be 0a 00 00 00       	mov    $0xa,%esi
   2082e:	48 89 c7             	mov    %rax,%rdi
   20831:	e8 f2 d3 ff ff       	callq  1dc28 <__multadd_D2A>
   20836:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2083a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2083e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   20842:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   20847:	75 60                	jne    208a9 <__gdtoa+0x18a3>
   20849:	b8 00 00 00 00       	mov    $0x0,%eax
   2084e:	e9 ae 02 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20853:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20857:	ba 00 00 00 00       	mov    $0x0,%edx
   2085c:	be 0a 00 00 00       	mov    $0xa,%esi
   20861:	48 89 c7             	mov    %rax,%rdi
   20864:	e8 bf d3 ff ff       	callq  1dc28 <__multadd_D2A>
   20869:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2086d:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   20872:	75 0a                	jne    2087e <__gdtoa+0x1878>
   20874:	b8 00 00 00 00       	mov    $0x0,%eax
   20879:	e9 83 02 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   2087e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20882:	ba 00 00 00 00       	mov    $0x0,%edx
   20887:	be 0a 00 00 00       	mov    $0xa,%esi
   2088c:	48 89 c7             	mov    %rax,%rdi
   2088f:	e8 94 d3 ff ff       	callq  1dc28 <__multadd_D2A>
   20894:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   20898:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2089d:	75 0a                	jne    208a9 <__gdtoa+0x18a3>
   2089f:	b8 00 00 00 00       	mov    $0x0,%eax
   208a4:	e9 58 02 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   208a9:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   208af:	83 c0 01             	add    $0x1,%eax
   208b2:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   208b8:	e9 6e fb ff ff       	jmpq   2042b <__gdtoa+0x1425>
   208bd:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   208c4:	00 00 00 
   208c7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   208cb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   208cf:	48 89 d6             	mov    %rdx,%rsi
   208d2:	48 89 c7             	mov    %rax,%rdi
   208d5:	e8 08 a7 ff ff       	callq  1afe2 <__quorem_D2A>
   208da:	83 c0 30             	add    $0x30,%eax
   208dd:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   208e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   208e7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   208eb:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   208ef:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   208f5:	88 10                	mov    %dl,(%rax)
   208f7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   208fd:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   20903:	7e 3f                	jle    20944 <__gdtoa+0x193e>
   20905:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20909:	ba 00 00 00 00       	mov    $0x0,%edx
   2090e:	be 0a 00 00 00       	mov    $0xa,%esi
   20913:	48 89 c7             	mov    %rax,%rdi
   20916:	e8 0d d3 ff ff       	callq  1dc28 <__multadd_D2A>
   2091b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2091f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   20924:	75 0a                	jne    20930 <__gdtoa+0x192a>
   20926:	b8 00 00 00 00       	mov    $0x0,%eax
   2092b:	e9 d1 01 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   20930:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   20936:	83 c0 01             	add    $0x1,%eax
   20939:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2093f:	eb 86                	jmp    208c7 <__gdtoa+0x18c1>
   20941:	90                   	nop
   20942:	eb 01                	jmp    20945 <__gdtoa+0x193f>
   20944:	90                   	nop
   20945:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2094c:	74 2a                	je     20978 <__gdtoa+0x1972>
   2094e:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   20955:	0f 84 d5 00 00 00    	je     20a30 <__gdtoa+0x1a2a>
   2095b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2095f:	8b 40 14             	mov    0x14(%rax),%eax
   20962:	83 f8 01             	cmp    $0x1,%eax
   20965:	7f 71                	jg     209d8 <__gdtoa+0x19d2>
   20967:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2096b:	8b 40 18             	mov    0x18(%rax),%eax
   2096e:	85 c0                	test   %eax,%eax
   20970:	0f 84 ba 00 00 00    	je     20a30 <__gdtoa+0x1a2a>
   20976:	eb 60                	jmp    209d8 <__gdtoa+0x19d2>
   20978:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2097c:	be 01 00 00 00       	mov    $0x1,%esi
   20981:	48 89 c7             	mov    %rax,%rdi
   20984:	e8 93 d9 ff ff       	callq  1e31c <__lshift_D2A>
   20989:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2098d:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   20992:	75 0a                	jne    2099e <__gdtoa+0x1998>
   20994:	b8 00 00 00 00       	mov    $0x0,%eax
   20999:	e9 63 01 00 00       	jmpq   20b01 <__gdtoa+0x1afb>
   2099e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   209a2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   209a6:	48 89 d6             	mov    %rdx,%rsi
   209a9:	48 89 c7             	mov    %rax,%rdi
   209ac:	e8 f4 da ff ff       	callq  1e4a5 <__cmp_D2A>
   209b1:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   209b7:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   209be:	7f 1b                	jg     209db <__gdtoa+0x19d5>
   209c0:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   209c7:	75 67                	jne    20a30 <__gdtoa+0x1a2a>
   209c9:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   209cf:	83 e0 01             	and    $0x1,%eax
   209d2:	85 c0                	test   %eax,%eax
   209d4:	74 5a                	je     20a30 <__gdtoa+0x1a2a>
   209d6:	eb 03                	jmp    209db <__gdtoa+0x19d5>
   209d8:	90                   	nop
   209d9:	eb 01                	jmp    209dc <__gdtoa+0x19d6>
   209db:	90                   	nop
   209dc:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   209e3:	00 00 00 
   209e6:	eb 22                	jmp    20a0a <__gdtoa+0x1a04>
   209e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   209ec:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   209f0:	75 18                	jne    20a0a <__gdtoa+0x1a04>
   209f2:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   209f9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   209fd:	48 8d 50 01          	lea    0x1(%rax),%rdx
   20a01:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   20a05:	c6 00 31             	movb   $0x31,(%rax)
   20a08:	eb 5d                	jmp    20a67 <__gdtoa+0x1a61>
   20a0a:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   20a0f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20a13:	0f b6 00             	movzbl (%rax),%eax
   20a16:	3c 39                	cmp    $0x39,%al
   20a18:	74 ce                	je     209e8 <__gdtoa+0x19e2>
   20a1a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20a1e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   20a22:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   20a26:	0f b6 10             	movzbl (%rax),%edx
   20a29:	83 c2 01             	add    $0x1,%edx
   20a2c:	88 10                	mov    %dl,(%rax)
   20a2e:	eb 37                	jmp    20a67 <__gdtoa+0x1a61>
   20a30:	90                   	nop
   20a31:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20a35:	8b 40 14             	mov    0x14(%rax),%eax
   20a38:	83 f8 01             	cmp    $0x1,%eax
   20a3b:	7f 0b                	jg     20a48 <__gdtoa+0x1a42>
   20a3d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20a41:	8b 40 18             	mov    0x18(%rax),%eax
   20a44:	85 c0                	test   %eax,%eax
   20a46:	74 0a                	je     20a52 <__gdtoa+0x1a4c>
   20a48:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   20a4f:	00 00 00 
   20a52:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   20a57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20a5b:	0f b6 00             	movzbl (%rax),%eax
   20a5e:	3c 30                	cmp    $0x30,%al
   20a60:	74 f0                	je     20a52 <__gdtoa+0x1a4c>
   20a62:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)
   20a67:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20a6b:	48 89 c7             	mov    %rax,%rdi
   20a6e:	e8 47 d0 ff ff       	callq  1daba <__Bfree_D2A>
   20a73:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   20a78:	74 2b                	je     20aa5 <__gdtoa+0x1a9f>
   20a7a:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   20a7f:	74 16                	je     20a97 <__gdtoa+0x1a91>
   20a81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20a85:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   20a89:	74 0c                	je     20a97 <__gdtoa+0x1a91>
   20a8b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20a8f:	48 89 c7             	mov    %rax,%rdi
   20a92:	e8 23 d0 ff ff       	callq  1daba <__Bfree_D2A>
   20a97:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20a9b:	48 89 c7             	mov    %rax,%rdi
   20a9e:	e8 17 d0 ff ff       	callq  1daba <__Bfree_D2A>
   20aa3:	eb 01                	jmp    20aa6 <__gdtoa+0x1aa0>
   20aa5:	90                   	nop
   20aa6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20aaa:	48 89 c7             	mov    %rax,%rdi
   20aad:	e8 08 d0 ff ff       	callq  1daba <__Bfree_D2A>
   20ab2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20ab6:	c6 00 00             	movb   $0x0,(%rax)
   20ab9:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   20abf:	8d 50 01             	lea    0x1(%rax),%edx
   20ac2:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   20ac9:	89 10                	mov    %edx,(%rax)
   20acb:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
   20ad2:	00 
   20ad3:	74 0e                	je     20ae3 <__gdtoa+0x1add>
   20ad5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   20adc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   20ae0:	48 89 10             	mov    %rdx,(%rax)
   20ae3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20aea:	8b 00                	mov    (%rax),%eax
   20aec:	0b 85 44 ff ff ff    	or     -0xbc(%rbp),%eax
   20af2:	89 c2                	mov    %eax,%edx
   20af4:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20afb:	89 10                	mov    %edx,(%rax)
   20afd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20b01:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   20b05:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   20b0c:	00 00 
   20b0e:	74 05                	je     20b15 <__gdtoa+0x1b0f>
   20b10:	e8 77 a9 fe ff       	callq  b48c <__stack_chk_fail>
   20b15:	c9                   	leaveq 
   20b16:	c3                   	retq   

0000000000020b17 <__rshift_D2A>:
   20b17:	55                   	push   %rbp
   20b18:	48 89 e5             	mov    %rsp,%rbp
   20b1b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20b1f:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   20b22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20b26:	48 83 c0 18          	add    $0x18,%rax
   20b2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20b2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20b32:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20b36:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   20b39:	c1 f8 05             	sar    $0x5,%eax
   20b3c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   20b3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20b43:	8b 40 14             	mov    0x14(%rax),%eax
   20b46:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
   20b49:	0f 8d e4 00 00 00    	jge    20c33 <__rshift_D2A+0x11c>
   20b4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20b53:	8b 40 14             	mov    0x14(%rax),%eax
   20b56:	48 98                	cltq   
   20b58:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   20b5f:	00 
   20b60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b64:	48 01 d0             	add    %rdx,%rax
   20b67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20b6b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   20b6e:	48 98                	cltq   
   20b70:	48 c1 e0 02          	shl    $0x2,%rax
   20b74:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   20b78:	83 65 d4 1f          	andl   $0x1f,-0x2c(%rbp)
   20b7c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   20b80:	0f 84 a3 00 00 00    	je     20c29 <__rshift_D2A+0x112>
   20b86:	b8 20 00 00 00       	mov    $0x20,%eax
   20b8b:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   20b8e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   20b91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b95:	48 8d 50 04          	lea    0x4(%rax),%rdx
   20b99:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   20b9d:	8b 10                	mov    (%rax),%edx
   20b9f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   20ba2:	89 c1                	mov    %eax,%ecx
   20ba4:	d3 ea                	shr    %cl,%edx
   20ba6:	89 d0                	mov    %edx,%eax
   20ba8:	89 45 e0             	mov    %eax,-0x20(%rbp)
   20bab:	eb 3c                	jmp    20be9 <__rshift_D2A+0xd2>
   20bad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20bb1:	8b 10                	mov    (%rax),%edx
   20bb3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   20bb6:	89 c1                	mov    %eax,%ecx
   20bb8:	d3 e2                	shl    %cl,%edx
   20bba:	89 d1                	mov    %edx,%ecx
   20bbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20bc0:	48 8d 50 04          	lea    0x4(%rax),%rdx
   20bc4:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   20bc8:	0b 4d e0             	or     -0x20(%rbp),%ecx
   20bcb:	89 ca                	mov    %ecx,%edx
   20bcd:	89 10                	mov    %edx,(%rax)
   20bcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20bd3:	48 8d 50 04          	lea    0x4(%rax),%rdx
   20bd7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   20bdb:	8b 10                	mov    (%rax),%edx
   20bdd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   20be0:	89 c1                	mov    %eax,%ecx
   20be2:	d3 ea                	shr    %cl,%edx
   20be4:	89 d0                	mov    %edx,%eax
   20be6:	89 45 e0             	mov    %eax,-0x20(%rbp)
   20be9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20bed:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   20bf1:	72 ba                	jb     20bad <__rshift_D2A+0x96>
   20bf3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20bf7:	8b 55 e0             	mov    -0x20(%rbp),%edx
   20bfa:	89 10                	mov    %edx,(%rax)
   20bfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20c00:	8b 00                	mov    (%rax),%eax
   20c02:	85 c0                	test   %eax,%eax
   20c04:	74 2d                	je     20c33 <__rshift_D2A+0x11c>
   20c06:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
   20c0b:	eb 26                	jmp    20c33 <__rshift_D2A+0x11c>
   20c0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20c11:	48 8d 42 04          	lea    0x4(%rdx),%rax
   20c15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20c19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20c1d:	48 8d 48 04          	lea    0x4(%rax),%rcx
   20c21:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   20c25:	8b 12                	mov    (%rdx),%edx
   20c27:	89 10                	mov    %edx,(%rax)
   20c29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c2d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   20c31:	72 da                	jb     20c0d <__rshift_D2A+0xf6>
   20c33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20c37:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20c3b:	48 83 c2 18          	add    $0x18,%rdx
   20c3f:	48 29 d0             	sub    %rdx,%rax
   20c42:	48 c1 f8 02          	sar    $0x2,%rax
   20c46:	89 c2                	mov    %eax,%edx
   20c48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c4c:	89 50 14             	mov    %edx,0x14(%rax)
   20c4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c53:	8b 40 14             	mov    0x14(%rax),%eax
   20c56:	85 c0                	test   %eax,%eax
   20c58:	75 0b                	jne    20c65 <__rshift_D2A+0x14e>
   20c5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c5e:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
   20c65:	90                   	nop
   20c66:	5d                   	pop    %rbp
   20c67:	c3                   	retq   

0000000000020c68 <__trailz_D2A>:
   20c68:	55                   	push   %rbp
   20c69:	48 89 e5             	mov    %rsp,%rbp
   20c6c:	48 83 ec 30          	sub    $0x30,%rsp
   20c70:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20c74:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20c7b:	00 00 
   20c7d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20c81:	31 c0                	xor    %eax,%eax
   20c83:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   20c8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c8e:	48 83 c0 18          	add    $0x18,%rax
   20c92:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20c96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c9a:	8b 40 14             	mov    0x14(%rax),%eax
   20c9d:	48 98                	cltq   
   20c9f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   20ca6:	00 
   20ca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cab:	48 01 d0             	add    %rdx,%rax
   20cae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20cb2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   20cb9:	eb 09                	jmp    20cc4 <__trailz_D2A+0x5c>
   20cbb:	83 45 e4 20          	addl   $0x20,-0x1c(%rbp)
   20cbf:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
   20cc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cc8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20ccc:	73 0a                	jae    20cd8 <__trailz_D2A+0x70>
   20cce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cd2:	8b 00                	mov    (%rax),%eax
   20cd4:	85 c0                	test   %eax,%eax
   20cd6:	74 e3                	je     20cbb <__trailz_D2A+0x53>
   20cd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cdc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20ce0:	73 18                	jae    20cfa <__trailz_D2A+0x92>
   20ce2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ce6:	8b 00                	mov    (%rax),%eax
   20ce8:	89 45 e0             	mov    %eax,-0x20(%rbp)
   20ceb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   20cef:	48 89 c7             	mov    %rax,%rdi
   20cf2:	e8 4e ce ff ff       	callq  1db45 <__lo0bits_D2A>
   20cf7:	01 45 e4             	add    %eax,-0x1c(%rbp)
   20cfa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   20cfd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   20d01:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   20d08:	00 00 
   20d0a:	74 05                	je     20d11 <__trailz_D2A+0xa9>
   20d0c:	e8 7b a7 fe ff       	callq  b48c <__stack_chk_fail>
   20d11:	c9                   	leaveq 
   20d12:	c3                   	retq   

0000000000020d13 <_Unwind_Resume>:
   20d13:	55                   	push   %rbp
   20d14:	48 89 e5             	mov    %rsp,%rbp
   20d17:	48 81 ec 70 08 00 00 	sub    $0x870,%rsp
   20d1e:	48 89 bd 98 f7 ff ff 	mov    %rdi,-0x868(%rbp)
   20d25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20d2c:	00 00 
   20d2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20d32:	31 c0                	xor    %eax,%eax
   20d34:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   20d3b:	48 8d 85 40 f8 ff ff 	lea    -0x7c0(%rbp),%rax
   20d42:	48 89 c7             	mov    %rax,%rdi
   20d45:	e8 2a 12 00 00       	callq  21f74 <_Ux86_64_getcontext>
   20d4a:	85 c0                	test   %eax,%eax
   20d4c:	78 1d                	js     20d6b <_Unwind_Resume+0x58>
   20d4e:	48 8d 95 40 f8 ff ff 	lea    -0x7c0(%rbp),%rdx
   20d55:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   20d5c:	48 89 d6             	mov    %rdx,%rsi
   20d5f:	48 89 c7             	mov    %rax,%rdi
   20d62:	e8 db 07 00 00       	callq  21542 <_ULx86_64_init_local>
   20d67:	85 c0                	test   %eax,%eax
   20d69:	79 05                	jns    20d70 <_Unwind_Resume+0x5d>
   20d6b:	e8 69 a8 01 00       	callq  3b5d9 <abort>
   20d70:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
   20d77:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
   20d7e:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   20d85:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
   20d8c:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
   20d93:	48 8b 40 10          	mov    0x10(%rax),%rax
   20d97:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
   20d9e:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
   20da5:	48 8b 00             	mov    (%rax),%rax
   20da8:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
   20daf:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
   20db6:	48 8b 40 18          	mov    0x18(%rax),%rax
   20dba:	48 89 85 e0 f7 ff ff 	mov    %rax,-0x820(%rbp)
   20dc1:	c7 85 ac f7 ff ff 02 	movl   $0x2,-0x854(%rbp)
   20dc8:	00 00 00 
   20dcb:	48 83 bd d0 f7 ff ff 	cmpq   $0x0,-0x830(%rbp)
   20dd2:	00 
   20dd3:	74 07                	je     20ddc <_Unwind_Resume+0xc9>
   20dd5:	83 8d ac f7 ff ff 08 	orl    $0x8,-0x854(%rbp)
   20ddc:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
   20de3:	48 89 c7             	mov    %rax,%rdi
   20de6:	e8 68 0c 00 00       	callq  21a53 <_ULx86_64_step>
   20deb:	89 85 b0 f7 ff ff    	mov    %eax,-0x850(%rbp)
   20df1:	83 bd b0 f7 ff ff 00 	cmpl   $0x0,-0x850(%rbp)
   20df8:	7f 25                	jg     20e1f <_Unwind_Resume+0x10c>
   20dfa:	83 bd b0 f7 ff ff 00 	cmpl   $0x0,-0x850(%rbp)
   20e01:	0f 85 72 01 00 00    	jne    20f79 <_Unwind_Resume+0x266>
   20e07:	83 8d ac f7 ff ff 10 	orl    $0x10,-0x854(%rbp)
   20e0e:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
   20e15:	c7 80 f8 03 00 00 01 	movl   $0x1,0x3f8(%rax)
   20e1c:	00 00 00 
   20e1f:	48 83 bd d0 f7 ff ff 	cmpq   $0x0,-0x830(%rbp)
   20e26:	00 
   20e27:	74 49                	je     20e72 <_Unwind_Resume+0x15f>
   20e29:	4c 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%r8
   20e30:	48 8b bd c8 f7 ff ff 	mov    -0x838(%rbp),%rdi
   20e37:	48 8b 8d c0 f7 ff ff 	mov    -0x840(%rbp),%rcx
   20e3e:	48 8b 95 d8 f7 ff ff 	mov    -0x828(%rbp),%rdx
   20e45:	8b b5 ac f7 ff ff    	mov    -0x854(%rbp),%esi
   20e4b:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
   20e52:	4d 89 c1             	mov    %r8,%r9
   20e55:	49 89 f8             	mov    %rdi,%r8
   20e58:	bf 01 00 00 00       	mov    $0x1,%edi
   20e5d:	ff d0                	callq  *%rax
   20e5f:	89 85 b4 f7 ff ff    	mov    %eax,-0x84c(%rbp)
   20e65:	83 bd b4 f7 ff ff 00 	cmpl   $0x0,-0x84c(%rbp)
   20e6c:	0f 85 07 01 00 00    	jne    20f79 <_Unwind_Resume+0x266>
   20e72:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
   20e79:	8b 80 f8 03 00 00    	mov    0x3f8(%rax),%eax
   20e7f:	85 c0                	test   %eax,%eax
   20e81:	0f 85 f2 00 00 00    	jne    20f79 <_Unwind_Resume+0x266>
   20e87:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
   20e8e:	48 8d 95 f0 f7 ff ff 	lea    -0x810(%rbp),%rdx
   20e95:	48 89 d6             	mov    %rdx,%rsi
   20e98:	48 89 c7             	mov    %rax,%rdi
   20e9b:	e8 cc 06 00 00       	callq  2156c <_ULx86_64_get_proc_info>
   20ea0:	85 c0                	test   %eax,%eax
   20ea2:	0f 88 d1 00 00 00    	js     20f79 <_Unwind_Resume+0x266>
   20ea8:	48 8b 85 08 f8 ff ff 	mov    -0x7f8(%rbp),%rax
   20eaf:	48 89 85 e8 f7 ff ff 	mov    %rax,-0x818(%rbp)
   20eb6:	48 83 bd e8 f7 ff ff 	cmpq   $0x0,-0x818(%rbp)
   20ebd:	00 
   20ebe:	0f 84 18 ff ff ff    	je     20ddc <_Unwind_Resume+0xc9>
   20ec4:	48 83 bd d0 f7 ff ff 	cmpq   $0x0,-0x830(%rbp)
   20ecb:	00 
   20ecc:	75 3d                	jne    20f0b <_Unwind_Resume+0x1f8>
   20ece:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
   20ed5:	48 8d 95 b8 f7 ff ff 	lea    -0x848(%rbp),%rdx
   20edc:	be 10 00 00 00       	mov    $0x10,%esi
   20ee1:	48 89 c7             	mov    %rax,%rdi
   20ee4:	e8 8c 7e 00 00       	callq  28d75 <_ULx86_64_get_reg>
   20ee9:	85 c0                	test   %eax,%eax
   20eeb:	0f 88 88 00 00 00    	js     20f79 <_Unwind_Resume+0x266>
   20ef1:	48 8b 95 e0 f7 ff ff 	mov    -0x820(%rbp),%rdx
   20ef8:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
   20eff:	48 39 c2             	cmp    %rax,%rdx
   20f02:	75 07                	jne    20f0b <_Unwind_Resume+0x1f8>
   20f04:	83 8d ac f7 ff ff 04 	orl    $0x4,-0x854(%rbp)
   20f0b:	48 8b bd c8 f7 ff ff 	mov    -0x838(%rbp),%rdi
   20f12:	48 8b 8d c0 f7 ff ff 	mov    -0x840(%rbp),%rcx
   20f19:	48 8b 95 d8 f7 ff ff 	mov    -0x828(%rbp),%rdx
   20f20:	8b b5 ac f7 ff ff    	mov    -0x854(%rbp),%esi
   20f26:	48 8b 85 e8 f7 ff ff 	mov    -0x818(%rbp),%rax
   20f2d:	49 89 f8             	mov    %rdi,%r8
   20f30:	bf 01 00 00 00       	mov    $0x1,%edi
   20f35:	ff d0                	callq  *%rax
   20f37:	89 85 b4 f7 ff ff    	mov    %eax,-0x84c(%rbp)
   20f3d:	83 bd b4 f7 ff ff 08 	cmpl   $0x8,-0x84c(%rbp)
   20f44:	74 1d                	je     20f63 <_Unwind_Resume+0x250>
   20f46:	83 bd b4 f7 ff ff 07 	cmpl   $0x7,-0x84c(%rbp)
   20f4d:	75 2a                	jne    20f79 <_Unwind_Resume+0x266>
   20f4f:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
   20f56:	48 89 c7             	mov    %rax,%rdi
   20f59:	e8 ba 08 00 00       	callq  21818 <_ULx86_64_resume>
   20f5e:	e8 76 a6 01 00       	callq  3b5d9 <abort>
   20f63:	8b 85 ac f7 ff ff    	mov    -0x854(%rbp),%eax
   20f69:	83 e0 04             	and    $0x4,%eax
   20f6c:	85 c0                	test   %eax,%eax
   20f6e:	0f 84 68 fe ff ff    	je     20ddc <_Unwind_Resume+0xc9>
   20f74:	e8 60 a6 01 00       	callq  3b5d9 <abort>
   20f79:	e8 5b a6 01 00       	callq  3b5d9 <abort>

0000000000020f7e <dwarf_get_uc>:
   20f7e:	55                   	push   %rbp
   20f7f:	48 89 e5             	mov    %rsp,%rbp
   20f82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20f86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20f8a:	48 8b 00             	mov    (%rax),%rax
   20f8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f95:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   20f9c:	5d                   	pop    %rbp
   20f9d:	c3                   	retq   

0000000000020f9e <dwarf_get>:
   20f9e:	55                   	push   %rbp
   20f9f:	48 89 e5             	mov    %rsp,%rbp
   20fa2:	48 83 ec 20          	sub    $0x20,%rsp
   20fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20faa:	48 89 f0             	mov    %rsi,%rax
   20fad:	48 89 d6             	mov    %rdx,%rsi
   20fb0:	48 89 f2             	mov    %rsi,%rdx
   20fb3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   20fb7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   20fbb:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   20fbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20fc3:	48 85 c0             	test   %rax,%rax
   20fc6:	75 0a                	jne    20fd2 <dwarf_get+0x34>
   20fc8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   20fcd:	e9 b0 00 00 00       	jmpq   21082 <dwarf_get+0xe4>
   20fd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20fd6:	83 e0 02             	and    $0x2,%eax
   20fd9:	48 85 c0             	test   %rax,%rax
   20fdc:	74 31                	je     2100f <dwarf_get+0x71>
   20fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fe2:	48 8b 40 08          	mov    0x8(%rax),%rax
   20fe6:	48 8b 40 20          	mov    0x20(%rax),%rax
   20fea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20fee:	48 8b 0a             	mov    (%rdx),%rcx
   20ff1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20ff5:	89 d6                	mov    %edx,%esi
   20ff7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20ffb:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   20fff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21003:	49 89 c8             	mov    %rcx,%r8
   21006:	b9 00 00 00 00       	mov    $0x0,%ecx
   2100b:	ff d0                	callq  *%rax
   2100d:	eb 73                	jmp    21082 <dwarf_get+0xe4>
   2100f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21013:	48 85 c0             	test   %rax,%rax
   21016:	75 2f                	jne    21047 <dwarf_get+0xa9>
   21018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2101c:	48 8b 40 08          	mov    0x8(%rax),%rax
   21020:	48 8b 40 18          	mov    0x18(%rax),%rax
   21024:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21028:	48 8b 0a             	mov    (%rdx),%rcx
   2102b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   2102f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21033:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   21037:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2103b:	49 89 c8             	mov    %rcx,%r8
   2103e:	b9 00 00 00 00       	mov    $0x0,%ecx
   21043:	ff d0                	callq  *%rax
   21045:	eb 3b                	jmp    21082 <dwarf_get+0xe4>
   21047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2104b:	83 e0 04             	and    $0x4,%eax
   2104e:	48 85 c0             	test   %rax,%rax
   21051:	75 1f                	jne    21072 <dwarf_get+0xd4>
   21053:	48 8d 0d ee be 01 00 	lea    0x1beee(%rip),%rcx        # 3cf48 <__PRETTY_FUNCTION__.4821>
   2105a:	ba aa 00 00 00       	mov    $0xaa,%edx
   2105f:	48 8d 35 a2 be 01 00 	lea    0x1bea2(%rip),%rsi        # 3cf08 <__tens_D2A+0x168>
   21066:	48 8d 3d c0 be 01 00 	lea    0x1bec0(%rip),%rdi        # 3cf2d <__tens_D2A+0x18d>
   2106d:	e8 7d 44 00 00       	callq  254ef <__assert_fail>
   21072:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21076:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2107a:	48 89 10             	mov    %rdx,(%rax)
   2107d:	b8 00 00 00 00       	mov    $0x0,%eax
   21082:	c9                   	leaveq 
   21083:	c3                   	retq   

0000000000021084 <common_init>:
   21084:	55                   	push   %rbp
   21085:	48 89 e5             	mov    %rsp,%rbp
   21088:	41 55                	push   %r13
   2108a:	41 54                	push   %r12
   2108c:	53                   	push   %rbx
   2108d:	48 83 ec 28          	sub    $0x28,%rsp
   21091:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   21095:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   21098:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2109c:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   210a3:	48 05 90 00 00 00    	add    $0x90,%rax
   210a9:	48 89 c2             	mov    %rax,%rdx
   210ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   210b0:	48 89 50 40          	mov    %rdx,0x40(%rax)
   210b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   210b8:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   210bf:	00 
   210c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   210c4:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   210cb:	48 05 88 00 00 00    	add    $0x88,%rax
   210d1:	48 89 c2             	mov    %rax,%rdx
   210d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   210d8:	48 89 50 50          	mov    %rdx,0x50(%rax)
   210dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   210e0:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
   210e7:	00 
   210e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   210ec:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   210f3:	48 05 98 00 00 00    	add    $0x98,%rax
   210f9:	48 89 c2             	mov    %rax,%rdx
   210fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21100:	48 89 50 60          	mov    %rdx,0x60(%rax)
   21104:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21108:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
   2110f:	00 
   21110:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21114:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   2111b:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   2111f:	48 89 c2             	mov    %rax,%rdx
   21122:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21126:	48 89 50 70          	mov    %rdx,0x70(%rax)
   2112a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2112e:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
   21135:	00 
   21136:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2113a:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   21141:	48 83 c0 70          	add    $0x70,%rax
   21145:	48 89 c2             	mov    %rax,%rdx
   21148:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2114c:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
   21153:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21157:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
   2115e:	00 00 00 00 
   21162:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21166:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   2116d:	48 83 c0 68          	add    $0x68,%rax
   21171:	48 89 c2             	mov    %rax,%rdx
   21174:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21178:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
   2117f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21183:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
   2118a:	00 00 00 00 
   2118e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21192:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   21199:	48 83 c0 78          	add    $0x78,%rax
   2119d:	48 89 c2             	mov    %rax,%rdx
   211a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211a4:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
   211ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211af:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
   211b6:	00 00 00 00 
   211ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211be:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   211c5:	48 05 a0 00 00 00    	add    $0xa0,%rax
   211cb:	48 89 c2             	mov    %rax,%rdx
   211ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211d2:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
   211d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211dd:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
   211e4:	00 00 00 00 
   211e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211ec:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   211f3:	48 83 c0 28          	add    $0x28,%rax
   211f7:	48 89 c2             	mov    %rax,%rdx
   211fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   211fe:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
   21205:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21209:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
   21210:	00 00 00 00 
   21214:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21218:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   2121f:	48 83 c0 30          	add    $0x30,%rax
   21223:	48 89 c2             	mov    %rax,%rdx
   21226:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2122a:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
   21231:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21235:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
   2123c:	00 00 00 00 
   21240:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21244:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   2124b:	48 83 c0 38          	add    $0x38,%rax
   2124f:	48 89 c2             	mov    %rax,%rdx
   21252:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21256:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
   2125d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21261:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
   21268:	00 00 00 00 
   2126c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21270:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   21277:	48 83 c0 40          	add    $0x40,%rax
   2127b:	48 89 c2             	mov    %rax,%rdx
   2127e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21282:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
   21289:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2128d:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
   21294:	00 00 00 00 
   21298:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2129c:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   212a3:	48 83 c0 48          	add    $0x48,%rax
   212a7:	48 89 c2             	mov    %rax,%rdx
   212aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   212ae:	48 89 90 00 01 00 00 	mov    %rdx,0x100(%rax)
   212b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   212b9:	48 c7 80 08 01 00 00 	movq   $0x0,0x108(%rax)
   212c0:	00 00 00 00 
   212c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   212c8:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   212cf:	48 83 c0 50          	add    $0x50,%rax
   212d3:	48 89 c2             	mov    %rax,%rdx
   212d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   212da:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
   212e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   212e5:	48 c7 80 18 01 00 00 	movq   $0x0,0x118(%rax)
   212ec:	00 00 00 00 
   212f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   212f4:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   212fb:	48 83 c0 58          	add    $0x58,%rax
   212ff:	48 89 c2             	mov    %rax,%rdx
   21302:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21306:	48 89 90 20 01 00 00 	mov    %rdx,0x120(%rax)
   2130d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21311:	48 c7 80 28 01 00 00 	movq   $0x0,0x128(%rax)
   21318:	00 00 00 00 
   2131c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21320:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   21327:	48 83 c0 60          	add    $0x60,%rax
   2132b:	48 89 c2             	mov    %rax,%rdx
   2132e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21332:	48 89 90 30 01 00 00 	mov    %rdx,0x130(%rax)
   21339:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2133d:	48 c7 80 38 01 00 00 	movq   $0x0,0x138(%rax)
   21344:	00 00 00 00 
   21348:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2134c:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   21353:	48 05 a8 00 00 00    	add    $0xa8,%rax
   21359:	48 89 c2             	mov    %rax,%rdx
   2135c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21360:	48 89 90 40 01 00 00 	mov    %rdx,0x140(%rax)
   21367:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2136b:	48 c7 80 48 01 00 00 	movq   $0x0,0x148(%rax)
   21372:	00 00 00 00 
   21376:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2137a:	48 8d 48 18          	lea    0x18(%rax),%rcx
   2137e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   21382:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21386:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
   2138d:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
   21394:	48 89 d6             	mov    %rdx,%rsi
   21397:	48 89 c2             	mov    %rax,%rdx
   2139a:	e8 ff fb ff ff       	callq  20f9e <dwarf_get>
   2139f:	89 45 dc             	mov    %eax,-0x24(%rbp)
   213a2:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   213a6:	79 08                	jns    213b0 <common_init+0x32c>
   213a8:	8b 45 dc             	mov    -0x24(%rbp),%eax
   213ab:	e9 0a 01 00 00       	jmpq   214ba <common_init+0x436>
   213b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   213b4:	48 8d 58 10          	lea    0x10(%rax),%rbx
   213b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   213bc:	48 89 c7             	mov    %rax,%rdi
   213bf:	e8 ba fb ff ff       	callq  20f7e <dwarf_get_uc>
   213c4:	be 07 00 00 00       	mov    $0x7,%esi
   213c9:	48 89 c7             	mov    %rax,%rdi
   213cc:	e8 66 76 00 00       	callq  28a37 <_ULx86_64_r_uc_addr>
   213d1:	49 89 c4             	mov    %rax,%r12
   213d4:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   213da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   213de:	4c 89 e6             	mov    %r12,%rsi
   213e1:	4c 89 ef             	mov    %r13,%rdi
   213e4:	4c 89 e2             	mov    %r12,%rdx
   213e7:	4c 89 e9             	mov    %r13,%rcx
   213ea:	48 89 ca             	mov    %rcx,%rdx
   213ed:	48 89 d9             	mov    %rbx,%rcx
   213f0:	48 89 c7             	mov    %rax,%rdi
   213f3:	e8 a6 fb ff ff       	callq  20f9e <dwarf_get>
   213f8:	89 45 dc             	mov    %eax,-0x24(%rbp)
   213fb:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   213ff:	79 08                	jns    21409 <common_init+0x385>
   21401:	8b 45 dc             	mov    -0x24(%rbp),%eax
   21404:	e9 b1 00 00 00       	jmpq   214ba <common_init+0x436>
   21409:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2140d:	c7 80 b8 01 00 00 00 	movl   $0x0,0x1b8(%rax)
   21414:	00 00 00 
   21417:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2141b:	48 c7 80 c0 01 00 00 	movq   $0x0,0x1c0(%rax)
   21422:	00 00 00 00 
   21426:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2142a:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   21431:	00 
   21432:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21436:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   2143d:	83 e2 fe             	and    $0xfffffffe,%edx
   21440:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   21446:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   21449:	83 e0 01             	and    $0x1,%eax
   2144c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   21450:	83 e0 01             	and    $0x1,%eax
   21453:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   21456:	0f b6 82 50 01 00 00 	movzbl 0x150(%rdx),%eax
   2145d:	83 e0 fd             	and    $0xfffffffd,%eax
   21460:	09 c8                	or     %ecx,%eax
   21462:	88 82 50 01 00 00    	mov    %al,0x150(%rdx)
   21468:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2146c:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   21473:	83 e2 fb             	and    $0xfffffffb,%edx
   21476:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   2147c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21480:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   21487:	83 e2 f7             	and    $0xfffffff7,%edx
   2148a:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   21490:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21494:	66 c7 80 a0 01 00 00 	movw   $0x0,0x1a0(%rax)
   2149b:	00 00 
   2149d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   214a1:	66 c7 80 a2 01 00 00 	movw   $0x0,0x1a2(%rax)
   214a8:	00 00 
   214aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   214ae:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
   214b5:	b8 00 00 00 00       	mov    $0x0,%eax
   214ba:	48 83 c4 28          	add    $0x28,%rsp
   214be:	5b                   	pop    %rbx
   214bf:	41 5c                	pop    %r12
   214c1:	41 5d                	pop    %r13
   214c3:	5d                   	pop    %rbp
   214c4:	c3                   	retq   

00000000000214c5 <unw_init_local_common>:
   214c5:	55                   	push   %rbp
   214c6:	48 89 e5             	mov    %rsp,%rbp
   214c9:	48 83 ec 30          	sub    $0x30,%rsp
   214cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   214d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   214d5:	89 55 dc             	mov    %edx,-0x24(%rbp)
   214d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   214dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   214e0:	8b 05 42 5e 03 00    	mov    0x35e42(%rip),%eax        # 57328 <_ULx86_64_init_done>
   214e6:	85 c0                	test   %eax,%eax
   214e8:	0f 94 c0             	sete   %al
   214eb:	0f b6 c0             	movzbl %al,%eax
   214ee:	48 85 c0             	test   %rax,%rax
   214f1:	74 05                	je     214f8 <unw_init_local_common+0x33>
   214f3:	e8 9e 7f 00 00       	callq  29496 <_ULx86_64_init>
   214f8:	48 8b 15 41 5d 02 00 	mov    0x25d41(%rip),%rdx        # 47240 <_ULx86_64_local_addr_space>
   214ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21503:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2150b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2150f:	48 89 10             	mov    %rdx,(%rax)
   21512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21516:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2151a:	48 89 90 d0 01 00 00 	mov    %rdx,0x1d0(%rax)
   21521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21525:	c7 80 c8 01 00 00 00 	movl   $0x0,0x1c8(%rax)
   2152c:	00 00 00 
   2152f:	8b 55 dc             	mov    -0x24(%rbp),%edx
   21532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21536:	89 d6                	mov    %edx,%esi
   21538:	48 89 c7             	mov    %rax,%rdi
   2153b:	e8 44 fb ff ff       	callq  21084 <common_init>
   21540:	c9                   	leaveq 
   21541:	c3                   	retq   

0000000000021542 <_ULx86_64_init_local>:
   21542:	55                   	push   %rbp
   21543:	48 89 e5             	mov    %rsp,%rbp
   21546:	48 83 ec 10          	sub    $0x10,%rsp
   2154a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2154e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21552:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   21556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2155a:	ba 01 00 00 00       	mov    $0x1,%edx
   2155f:	48 89 ce             	mov    %rcx,%rsi
   21562:	48 89 c7             	mov    %rax,%rdi
   21565:	e8 5b ff ff ff       	callq  214c5 <unw_init_local_common>
   2156a:	c9                   	leaveq 
   2156b:	c3                   	retq   

000000000002156c <_ULx86_64_get_proc_info>:
   2156c:	55                   	push   %rbp
   2156d:	48 89 e5             	mov    %rsp,%rbp
   21570:	53                   	push   %rbx
   21571:	48 83 ec 28          	sub    $0x28,%rsp
   21575:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   21579:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2157d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21581:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   21585:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21589:	48 89 c7             	mov    %rax,%rdi
   2158c:	e8 b0 36 00 00       	callq  24c41 <_ULx86_64_dwarf_make_proc_info>
   21591:	85 c0                	test   %eax,%eax
   21593:	79 40                	jns    215d5 <_ULx86_64_get_proc_info+0x69>
   21595:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21599:	ba 48 00 00 00       	mov    $0x48,%edx
   2159e:	be 00 00 00 00       	mov    $0x0,%esi
   215a3:	48 89 c7             	mov    %rax,%rdi
   215a6:	e8 8a 21 ff ff       	callq  13735 <memset>
   215ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   215af:	48 8b 50 18          	mov    0x18(%rax),%rdx
   215b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   215b7:	48 89 10             	mov    %rdx,(%rax)
   215ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   215be:	48 8b 40 18          	mov    0x18(%rax),%rax
   215c2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   215c6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   215ca:	48 89 50 08          	mov    %rdx,0x8(%rax)
   215ce:	b8 00 00 00 00       	mov    $0x0,%eax
   215d3:	eb 6f                	jmp    21644 <_ULx86_64_get_proc_info+0xd8>
   215d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   215d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   215dd:	48 8b 8a 58 01 00 00 	mov    0x158(%rdx),%rcx
   215e4:	48 8b 9a 60 01 00 00 	mov    0x160(%rdx),%rbx
   215eb:	48 89 08             	mov    %rcx,(%rax)
   215ee:	48 89 58 08          	mov    %rbx,0x8(%rax)
   215f2:	48 8b 8a 68 01 00 00 	mov    0x168(%rdx),%rcx
   215f9:	48 8b 9a 70 01 00 00 	mov    0x170(%rdx),%rbx
   21600:	48 89 48 10          	mov    %rcx,0x10(%rax)
   21604:	48 89 58 18          	mov    %rbx,0x18(%rax)
   21608:	48 8b 8a 78 01 00 00 	mov    0x178(%rdx),%rcx
   2160f:	48 8b 9a 80 01 00 00 	mov    0x180(%rdx),%rbx
   21616:	48 89 48 20          	mov    %rcx,0x20(%rax)
   2161a:	48 89 58 28          	mov    %rbx,0x28(%rax)
   2161e:	48 8b 8a 88 01 00 00 	mov    0x188(%rdx),%rcx
   21625:	48 8b 9a 90 01 00 00 	mov    0x190(%rdx),%rbx
   2162c:	48 89 48 30          	mov    %rcx,0x30(%rax)
   21630:	48 89 58 38          	mov    %rbx,0x38(%rax)
   21634:	48 8b 92 98 01 00 00 	mov    0x198(%rdx),%rdx
   2163b:	48 89 50 40          	mov    %rdx,0x40(%rax)
   2163f:	b8 00 00 00 00       	mov    $0x0,%eax
   21644:	48 83 c4 28          	add    $0x28,%rsp
   21648:	5b                   	pop    %rbx
   21649:	5d                   	pop    %rbp
   2164a:	c3                   	retq   

000000000002164b <_ULx86_64_local_resume>:
   2164b:	55                   	push   %rbp
   2164c:	48 89 e5             	mov    %rsp,%rbp
   2164f:	48 83 ec 30          	sub    $0x30,%rsp
   21653:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21657:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2165b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2165f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21663:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   21667:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2166b:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   21672:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2167a:	48 89 c7             	mov    %rax,%rdi
   2167d:	e8 bf 35 00 00       	callq  24c41 <_ULx86_64_dwarf_make_proc_info>
   21682:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21686:	48 8b 80 c0 01 00 00 	mov    0x1c0(%rax),%rax
   2168d:	48 85 c0             	test   %rax,%rax
   21690:	0f 95 c0             	setne  %al
   21693:	0f b6 c0             	movzbl %al,%eax
   21696:	48 85 c0             	test   %rax,%rax
   21699:	74 0c                	je     216a7 <_ULx86_64_local_resume+0x5c>
   2169b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2169f:	48 89 c7             	mov    %rax,%rdi
   216a2:	e8 ea 74 00 00       	callq  28b91 <_ULx86_64_sigreturn>
   216a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216ab:	48 89 c7             	mov    %rax,%rdi
   216ae:	e8 72 7d 00 00       	callq  29425 <_Ux86_64_setcontext>
   216b3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   216b8:	c9                   	leaveq 
   216b9:	c3                   	retq   

00000000000216ba <establish_machine_state>:
   216ba:	55                   	push   %rbp
   216bb:	48 89 e5             	mov    %rsp,%rbp
   216be:	48 83 ec 60          	sub    $0x60,%rsp
   216c2:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   216c6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   216cd:	00 00 
   216cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   216d3:	31 c0                	xor    %eax,%eax
   216d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   216d9:	48 8b 40 08          	mov    0x8(%rax),%rax
   216dd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   216e1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   216e5:	48 8b 00             	mov    (%rax),%rax
   216e8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   216ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   216f0:	48 8b 40 20          	mov    0x20(%rax),%rax
   216f4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   216f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   216fc:	48 8b 40 28          	mov    0x28(%rax),%rax
   21700:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   21704:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   2170b:	e9 86 00 00 00       	jmpq   21796 <establish_machine_state+0xdc>
   21710:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   21713:	89 c7                	mov    %eax,%edi
   21715:	e8 68 71 00 00       	callq  28882 <_Ux86_64_is_fpreg>
   2171a:	85 c0                	test   %eax,%eax
   2171c:	74 3b                	je     21759 <establish_machine_state+0x9f>
   2171e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   21722:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   21725:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21729:	b9 00 00 00 00       	mov    $0x0,%ecx
   2172e:	48 89 c7             	mov    %rax,%rdi
   21731:	e8 a6 87 00 00       	callq  29edc <_ULx86_64_access_fpreg>
   21736:	85 c0                	test   %eax,%eax
   21738:	78 58                	js     21792 <establish_machine_state+0xd8>
   2173a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   2173e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   21742:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   21745:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   21749:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2174d:	49 89 c8             	mov    %rcx,%r8
   21750:	b9 01 00 00 00       	mov    $0x1,%ecx
   21755:	ff d0                	callq  *%rax
   21757:	eb 39                	jmp    21792 <establish_machine_state+0xd8>
   21759:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2175d:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   21760:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21764:	b9 00 00 00 00       	mov    $0x0,%ecx
   21769:	48 89 c7             	mov    %rax,%rdi
   2176c:	e8 48 84 00 00       	callq  29bb9 <_ULx86_64_access_reg>
   21771:	85 c0                	test   %eax,%eax
   21773:	78 1d                	js     21792 <establish_machine_state+0xd8>
   21775:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   21779:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2177d:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   21780:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   21784:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21788:	49 89 c8             	mov    %rcx,%r8
   2178b:	b9 01 00 00 00       	mov    $0x1,%ecx
   21790:	ff d0                	callq  *%rax
   21792:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
   21796:	83 7d b4 10          	cmpl   $0x10,-0x4c(%rbp)
   2179a:	0f 8e 70 ff ff ff    	jle    21710 <establish_machine_state+0x56>
   217a0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   217a4:	48 8b 40 20          	mov    0x20(%rax),%rax
   217a8:	48 85 c0             	test   %rax,%rax
   217ab:	74 50                	je     217fd <establish_machine_state+0x143>
   217ad:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   217b1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   217b5:	b9 00 00 00 00       	mov    $0x0,%ecx
   217ba:	be 07 00 00 00       	mov    $0x7,%esi
   217bf:	48 89 c7             	mov    %rax,%rdi
   217c2:	e8 f2 83 00 00       	callq  29bb9 <_ULx86_64_access_reg>
   217c7:	85 c0                	test   %eax,%eax
   217c9:	78 32                	js     217fd <establish_machine_state+0x143>
   217cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   217cf:	48 8b 50 20          	mov    0x20(%rax),%rdx
   217d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   217d7:	48 01 d0             	add    %rdx,%rax
   217da:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   217de:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   217e2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   217e6:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   217ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   217ee:	49 89 c8             	mov    %rcx,%r8
   217f1:	b9 01 00 00 00       	mov    $0x1,%ecx
   217f6:	be 07 00 00 00       	mov    $0x7,%esi
   217fb:	ff d0                	callq  *%rax
   217fd:	b8 00 00 00 00       	mov    $0x0,%eax
   21802:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21806:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2180d:	00 00 
   2180f:	74 05                	je     21816 <establish_machine_state+0x15c>
   21811:	e8 76 9c fe ff       	callq  b48c <__stack_chk_fail>
   21816:	c9                   	leaveq 
   21817:	c3                   	retq   

0000000000021818 <_ULx86_64_resume>:
   21818:	55                   	push   %rbp
   21819:	48 89 e5             	mov    %rsp,%rbp
   2181c:	48 83 ec 20          	sub    $0x20,%rsp
   21820:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21828:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2182c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21830:	48 89 c7             	mov    %rax,%rdi
   21833:	e8 82 fe ff ff       	callq  216ba <establish_machine_state>
   21838:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2183b:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   2183f:	79 05                	jns    21846 <_ULx86_64_resume+0x2e>
   21841:	8b 45 f4             	mov    -0xc(%rbp),%eax
   21844:	eb 24                	jmp    2186a <_ULx86_64_resume+0x52>
   21846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2184a:	48 8b 40 08          	mov    0x8(%rax),%rax
   2184e:	48 8b 40 30          	mov    0x30(%rax),%rax
   21852:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21856:	48 8b 12             	mov    (%rdx),%rdx
   21859:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2185d:	48 8b 49 08          	mov    0x8(%rcx),%rcx
   21861:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   21865:	48 89 cf             	mov    %rcx,%rdi
   21868:	ff d0                	callq  *%rax
   2186a:	c9                   	leaveq 
   2186b:	c3                   	retq   

000000000002186c <dwarf_get>:
   2186c:	55                   	push   %rbp
   2186d:	48 89 e5             	mov    %rsp,%rbp
   21870:	48 83 ec 20          	sub    $0x20,%rsp
   21874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21878:	48 89 f0             	mov    %rsi,%rax
   2187b:	48 89 d6             	mov    %rdx,%rsi
   2187e:	48 89 f2             	mov    %rsi,%rdx
   21881:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   21885:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   21889:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   2188d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21891:	48 85 c0             	test   %rax,%rax
   21894:	75 0a                	jne    218a0 <dwarf_get+0x34>
   21896:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   2189b:	e9 b0 00 00 00       	jmpq   21950 <dwarf_get+0xe4>
   218a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   218a4:	83 e0 02             	and    $0x2,%eax
   218a7:	48 85 c0             	test   %rax,%rax
   218aa:	74 31                	je     218dd <dwarf_get+0x71>
   218ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   218b0:	48 8b 40 08          	mov    0x8(%rax),%rax
   218b4:	48 8b 40 20          	mov    0x20(%rax),%rax
   218b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   218bc:	48 8b 0a             	mov    (%rdx),%rcx
   218bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   218c3:	89 d6                	mov    %edx,%esi
   218c5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   218c9:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   218cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   218d1:	49 89 c8             	mov    %rcx,%r8
   218d4:	b9 00 00 00 00       	mov    $0x0,%ecx
   218d9:	ff d0                	callq  *%rax
   218db:	eb 73                	jmp    21950 <dwarf_get+0xe4>
   218dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   218e1:	48 85 c0             	test   %rax,%rax
   218e4:	75 2f                	jne    21915 <dwarf_get+0xa9>
   218e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   218ea:	48 8b 40 08          	mov    0x8(%rax),%rax
   218ee:	48 8b 40 18          	mov    0x18(%rax),%rax
   218f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   218f6:	48 8b 0a             	mov    (%rdx),%rcx
   218f9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   218fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21901:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   21905:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21909:	49 89 c8             	mov    %rcx,%r8
   2190c:	b9 00 00 00 00       	mov    $0x0,%ecx
   21911:	ff d0                	callq  *%rax
   21913:	eb 3b                	jmp    21950 <dwarf_get+0xe4>
   21915:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21919:	83 e0 04             	and    $0x4,%eax
   2191c:	48 85 c0             	test   %rax,%rax
   2191f:	75 1f                	jne    21940 <dwarf_get+0xd4>
   21921:	48 8d 0d 70 b6 01 00 	lea    0x1b670(%rip),%rcx        # 3cf98 <__PRETTY_FUNCTION__.4821>
   21928:	ba aa 00 00 00       	mov    $0xaa,%edx
   2192d:	48 8d 35 24 b6 01 00 	lea    0x1b624(%rip),%rsi        # 3cf58 <__PRETTY_FUNCTION__.4821+0x10>
   21934:	48 8d 3d 42 b6 01 00 	lea    0x1b642(%rip),%rdi        # 3cf7d <__PRETTY_FUNCTION__.4821+0x35>
   2193b:	e8 af 3b 00 00       	callq  254ef <__assert_fail>
   21940:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21944:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21948:	48 89 10             	mov    %rdx,(%rax)
   2194b:	b8 00 00 00 00       	mov    $0x0,%eax
   21950:	c9                   	leaveq 
   21951:	c3                   	retq   

0000000000021952 <is_plt_entry>:
   21952:	55                   	push   %rbp
   21953:	48 89 e5             	mov    %rsp,%rbp
   21956:	48 83 ec 40          	sub    $0x40,%rsp
   2195a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2195e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21965:	00 00 
   21967:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2196b:	31 c0                	xor    %eax,%eax
   2196d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21971:	48 8b 40 08          	mov    0x8(%rax),%rax
   21975:	48 89 c7             	mov    %rax,%rdi
   21978:	e8 8f 73 00 00       	callq  28d0c <_Ux86_64_get_accessors>
   2197d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   21981:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21985:	48 8b 40 18          	mov    0x18(%rax),%rax
   21989:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2198d:	48 8b 0a             	mov    (%rdx),%rcx
   21990:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   21994:	48 8b 72 18          	mov    0x18(%rdx),%rsi
   21998:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2199c:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   219a0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   219a4:	49 89 c8             	mov    %rcx,%r8
   219a7:	b9 00 00 00 00       	mov    $0x0,%ecx
   219ac:	ff d0                	callq  *%rax
   219ae:	89 45 dc             	mov    %eax,-0x24(%rbp)
   219b1:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   219b5:	78 3a                	js     219f1 <is_plt_entry+0x9f>
   219b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   219bb:	48 8b 40 18          	mov    0x18(%rax),%rax
   219bf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   219c3:	48 8b 0a             	mov    (%rdx),%rcx
   219c6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   219ca:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   219ce:	48 8d 72 08          	lea    0x8(%rdx),%rsi
   219d2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   219d6:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   219da:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   219de:	49 89 c8             	mov    %rcx,%r8
   219e1:	b9 00 00 00 00       	mov    $0x0,%ecx
   219e6:	ff d0                	callq  *%rax
   219e8:	89 45 dc             	mov    %eax,-0x24(%rbp)
   219eb:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   219ef:	79 07                	jns    219f8 <is_plt_entry+0xa6>
   219f1:	b8 00 00 00 00       	mov    $0x0,%eax
   219f6:	eb 45                	jmp    21a3d <is_plt_entry+0xeb>
   219f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   219fc:	0f b7 c0             	movzwl %ax,%eax
   219ff:	48 3d ff 25 00 00    	cmp    $0x25ff,%rax
   21a05:	75 2b                	jne    21a32 <is_plt_entry+0xe0>
   21a07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21a0b:	48 c1 e8 30          	shr    $0x30,%rax
   21a0f:	0f b6 c0             	movzbl %al,%eax
   21a12:	48 83 f8 68          	cmp    $0x68,%rax
   21a16:	75 1a                	jne    21a32 <is_plt_entry+0xe0>
   21a18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21a1c:	48 c1 e8 18          	shr    $0x18,%rax
   21a20:	0f b6 c0             	movzbl %al,%eax
   21a23:	48 3d e9 00 00 00    	cmp    $0xe9,%rax
   21a29:	75 07                	jne    21a32 <is_plt_entry+0xe0>
   21a2b:	b8 01 00 00 00       	mov    $0x1,%eax
   21a30:	eb 05                	jmp    21a37 <is_plt_entry+0xe5>
   21a32:	b8 00 00 00 00       	mov    $0x0,%eax
   21a37:	89 45 dc             	mov    %eax,-0x24(%rbp)
   21a3a:	8b 45 dc             	mov    -0x24(%rbp),%eax
   21a3d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21a41:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   21a48:	00 00 
   21a4a:	74 05                	je     21a51 <is_plt_entry+0xff>
   21a4c:	e8 3b 9a fe ff       	callq  b48c <__stack_chk_fail>
   21a51:	c9                   	leaveq 
   21a52:	c3                   	retq   

0000000000021a53 <_ULx86_64_step>:
   21a53:	55                   	push   %rbp
   21a54:	48 89 e5             	mov    %rsp,%rbp
   21a57:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   21a5e:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   21a65:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21a6c:	00 00 
   21a6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21a72:	31 c0                	xor    %eax,%eax
   21a74:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   21a7b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   21a7f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21a83:	8b 80 c8 01 00 00    	mov    0x1c8(%rax),%eax
   21a89:	89 45 94             	mov    %eax,-0x6c(%rbp)
   21a8c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21a90:	c7 80 c8 01 00 00 01 	movl   $0x1,0x1c8(%rax)
   21a97:	00 00 00 
   21a9a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21a9e:	c7 80 b8 01 00 00 00 	movl   $0x0,0x1b8(%rax)
   21aa5:	00 00 00 
   21aa8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21aac:	48 89 c7             	mov    %rax,%rdi
   21aaf:	e8 06 31 00 00       	callq  24bba <_ULx86_64_dwarf_step>
   21ab4:	89 45 8c             	mov    %eax,-0x74(%rbp)
   21ab7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21abb:	8b 55 94             	mov    -0x6c(%rbp),%edx
   21abe:	89 90 c8 01 00 00    	mov    %edx,0x1c8(%rax)
   21ac4:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   21ac8:	79 0e                	jns    21ad8 <_ULx86_64_step+0x85>
   21aca:	83 7d 8c f6          	cmpl   $0xfffffff6,-0x74(%rbp)
   21ace:	74 08                	je     21ad8 <_ULx86_64_step+0x85>
   21ad0:	8b 45 8c             	mov    -0x74(%rbp),%eax
   21ad3:	e9 86 04 00 00       	jmpq   21f5e <_ULx86_64_step+0x50b>
   21ad8:	8b 45 8c             	mov    -0x74(%rbp),%eax
   21adb:	f7 d0                	not    %eax
   21add:	c1 e8 1f             	shr    $0x1f,%eax
   21ae0:	0f b6 c0             	movzbl %al,%eax
   21ae3:	48 85 c0             	test   %rax,%rax
   21ae6:	74 2c                	je     21b14 <_ULx86_64_step+0xc1>
   21ae8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21aec:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   21af3:	48 85 c0             	test   %rax,%rax
   21af6:	0f 85 5f 04 00 00    	jne    21f5b <_ULx86_64_step+0x508>
   21afc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21b00:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   21b07:	00 
   21b08:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
   21b0f:	e9 47 04 00 00       	jmpq   21f5b <_ULx86_64_step+0x508>
   21b14:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21b18:	48 8b 40 18          	mov    0x18(%rax),%rax
   21b1c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   21b20:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21b24:	48 8b 40 10          	mov    0x10(%rax),%rax
   21b28:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   21b2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21b30:	c7 80 c8 01 00 00 01 	movl   $0x1,0x1c8(%rax)
   21b37:	00 00 00 
   21b3a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   21b41:	48 89 c7             	mov    %rax,%rdi
   21b44:	e8 bb 6e 00 00       	callq  28a04 <_ULx86_64_is_signal_frame>
   21b49:	85 c0                	test   %eax,%eax
   21b4b:	7e 26                	jle    21b73 <_ULx86_64_step+0x120>
   21b4d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   21b54:	48 89 c7             	mov    %rax,%rdi
   21b57:	e8 cc 6e 00 00       	callq  28a28 <_ULx86_64_handle_signal_frame>
   21b5c:	89 45 8c             	mov    %eax,-0x74(%rbp)
   21b5f:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   21b63:	0f 89 54 03 00 00    	jns    21ebd <_ULx86_64_step+0x46a>
   21b69:	b8 00 00 00 00       	mov    $0x0,%eax
   21b6e:	e9 eb 03 00 00       	jmpq   21f5e <_ULx86_64_step+0x50b>
   21b73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21b77:	48 89 c7             	mov    %rax,%rdi
   21b7a:	e8 d3 fd ff ff       	callq  21952 <is_plt_entry>
   21b7f:	85 c0                	test   %eax,%eax
   21b81:	0f 84 88 00 00 00    	je     21c0f <_ULx86_64_step+0x1bc>
   21b87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21b8b:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   21b92:	48 ba 1f 00 00 00 fc 	movabs $0xfffffffc0000001f,%rdx
   21b99:	ff ff ff 
   21b9c:	48 21 ca             	and    %rcx,%rdx
   21b9f:	80 ce 01             	or     $0x1,%dh
   21ba2:	48 89 90 b0 01 00 00 	mov    %rdx,0x1b0(%rax)
   21ba9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21bad:	0f b6 90 b0 01 00 00 	movzbl 0x1b0(%rax),%edx
   21bb4:	83 ca 10             	or     $0x10,%edx
   21bb7:	88 90 b0 01 00 00    	mov    %dl,0x1b0(%rax)
   21bbd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21bc1:	0f b6 90 b0 01 00 00 	movzbl 0x1b0(%rax),%edx
   21bc8:	83 e2 f8             	and    $0xfffffff8,%edx
   21bcb:	83 ca 06             	or     $0x6,%edx
   21bce:	88 90 b0 01 00 00    	mov    %dl,0x1b0(%rax)
   21bd4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21bd8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   21bdc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21be0:	48 89 90 40 01 00 00 	mov    %rdx,0x140(%rax)
   21be7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21beb:	48 c7 80 48 01 00 00 	movq   $0x0,0x148(%rax)
   21bf2:	00 00 00 00 
   21bf6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21bfa:	48 8b 40 10          	mov    0x10(%rax),%rax
   21bfe:	48 8d 50 08          	lea    0x8(%rax),%rdx
   21c02:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21c06:	48 89 50 10          	mov    %rdx,0x10(%rax)
   21c0a:	e9 ae 02 00 00       	jmpq   21ebd <_ULx86_64_step+0x46a>
   21c0f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21c13:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   21c1a:	48 85 c0             	test   %rax,%rax
   21c1d:	75 54                	jne    21c73 <_ULx86_64_step+0x220>
   21c1f:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
   21c26:	eb 40                	jmp    21c68 <_ULx86_64_step+0x215>
   21c28:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21c2c:	8b 55 90             	mov    -0x70(%rbp),%edx
   21c2f:	48 63 d2             	movslq %edx,%rdx
   21c32:	48 83 c2 04          	add    $0x4,%rdx
   21c36:	48 c1 e2 04          	shl    $0x4,%rdx
   21c3a:	48 01 d0             	add    %rdx,%rax
   21c3d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   21c44:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21c48:	8b 55 90             	mov    -0x70(%rbp),%edx
   21c4b:	48 63 d2             	movslq %edx,%rdx
   21c4e:	48 83 c2 04          	add    $0x4,%rdx
   21c52:	48 c1 e2 04          	shl    $0x4,%rdx
   21c56:	48 01 d0             	add    %rdx,%rax
   21c59:	48 83 c0 08          	add    $0x8,%rax
   21c5d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   21c64:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
   21c68:	83 7d 90 10          	cmpl   $0x10,-0x70(%rbp)
   21c6c:	7e ba                	jle    21c28 <_ULx86_64_step+0x1d5>
   21c6e:	e9 4a 02 00 00       	jmpq   21ebd <_ULx86_64_step+0x46a>
   21c73:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   21c77:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   21c7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21c7f:	48 8b 90 a0 00 00 00 	mov    0xa0(%rax),%rdx
   21c86:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   21c8d:	48 89 d6             	mov    %rdx,%rsi
   21c90:	48 89 c2             	mov    %rax,%rdx
   21c93:	e8 d4 fb ff ff       	callq  2186c <dwarf_get>
   21c98:	89 45 8c             	mov    %eax,-0x74(%rbp)
   21c9b:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   21c9f:	79 08                	jns    21ca9 <_ULx86_64_step+0x256>
   21ca1:	8b 45 8c             	mov    -0x74(%rbp),%eax
   21ca4:	e9 b5 02 00 00       	jmpq   21f5e <_ULx86_64_step+0x50b>
   21ca9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   21cad:	48 85 c0             	test   %rax,%rax
   21cb0:	75 35                	jne    21ce7 <_ULx86_64_step+0x294>
   21cb2:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   21cb9:	00 
   21cba:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   21cc1:	00 
   21cc2:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   21cc9:	00 
   21cca:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   21cd1:	00 
   21cd2:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   21cd9:	00 
   21cda:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   21ce1:	00 
   21ce2:	e9 25 01 00 00       	jmpq   21e0c <_ULx86_64_step+0x3b9>
   21ce7:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   21cee:	00 
   21cef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   21cf3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   21cf7:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   21cfe:	00 
   21cff:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   21d06:	00 
   21d07:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   21d0e:	00 
   21d0f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   21d13:	48 83 c0 08          	add    $0x8,%rax
   21d17:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   21d1b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   21d22:	00 
   21d23:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21d27:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   21d2b:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   21d2f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   21d33:	48 89 c7             	mov    %rax,%rdi
   21d36:	e8 31 fb ff ff       	callq  2186c <dwarf_get>
   21d3b:	89 45 8c             	mov    %eax,-0x74(%rbp)
   21d3e:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   21d42:	78 2b                	js     21d6f <_ULx86_64_step+0x31c>
   21d44:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21d48:	48 8b 50 10          	mov    0x10(%rax),%rdx
   21d4c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   21d50:	48 39 c2             	cmp    %rax,%rdx
   21d53:	77 1a                	ja     21d6f <_ULx86_64_step+0x31c>
   21d55:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   21d59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21d5d:	48 8b 40 10          	mov    0x10(%rax),%rax
   21d61:	48 29 c2             	sub    %rax,%rdx
   21d64:	48 89 d0             	mov    %rdx,%rax
   21d67:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
   21d6d:	76 20                	jbe    21d8f <_ULx86_64_step+0x33c>
   21d6f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   21d76:	00 
   21d77:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   21d7e:	00 
   21d7f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   21d86:	00 
   21d87:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   21d8e:	00 
   21d8f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21d93:	0f b6 90 b0 01 00 00 	movzbl 0x1b0(%rax),%edx
   21d9a:	83 e2 f8             	and    $0xfffffff8,%edx
   21d9d:	83 ca 01             	or     $0x1,%edx
   21da0:	88 90 b0 01 00 00    	mov    %dl,0x1b0(%rax)
   21da6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21daa:	0f b6 90 b0 01 00 00 	movzbl 0x1b0(%rax),%edx
   21db1:	83 e2 ef             	and    $0xffffffef,%edx
   21db4:	88 90 b0 01 00 00    	mov    %dl,0x1b0(%rax)
   21dba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21dbe:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   21dc5:	48 ba 1f 00 00 00 fc 	movabs $0xfffffffc0000001f,%rdx
   21dcc:	ff ff ff 
   21dcf:	48 21 ca             	and    %rcx,%rdx
   21dd2:	80 ce 02             	or     $0x2,%dh
   21dd5:	48 89 90 b0 01 00 00 	mov    %rdx,0x1b0(%rax)
   21ddc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21de0:	8b 90 b4 01 00 00    	mov    0x1b4(%rax),%edx
   21de6:	81 e2 03 00 fe ff    	and    $0xfffe0003,%edx
   21dec:	81 ca c0 ff 01 00    	or     $0x1ffc0,%edx
   21df2:	89 90 b4 01 00 00    	mov    %edx,0x1b4(%rax)
   21df8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21dfc:	48 8b 40 10          	mov    0x10(%rax),%rax
   21e00:	48 8d 50 10          	lea    0x10(%rax),%rdx
   21e04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21e08:	48 89 50 10          	mov    %rdx,0x10(%rax)
   21e0c:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
   21e13:	eb 40                	jmp    21e55 <_ULx86_64_step+0x402>
   21e15:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21e19:	8b 55 90             	mov    -0x70(%rbp),%edx
   21e1c:	48 63 d2             	movslq %edx,%rdx
   21e1f:	48 83 c2 04          	add    $0x4,%rdx
   21e23:	48 c1 e2 04          	shl    $0x4,%rdx
   21e27:	48 01 d0             	add    %rdx,%rax
   21e2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   21e31:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21e35:	8b 55 90             	mov    -0x70(%rbp),%edx
   21e38:	48 63 d2             	movslq %edx,%rdx
   21e3b:	48 83 c2 04          	add    $0x4,%rdx
   21e3f:	48 c1 e2 04          	shl    $0x4,%rdx
   21e43:	48 01 d0             	add    %rdx,%rax
   21e46:	48 83 c0 08          	add    $0x8,%rax
   21e4a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   21e51:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
   21e55:	83 7d 90 10          	cmpl   $0x10,-0x70(%rbp)
   21e59:	7e ba                	jle    21e15 <_ULx86_64_step+0x3c2>
   21e5b:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   21e5f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21e63:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   21e67:	48 89 81 a0 00 00 00 	mov    %rax,0xa0(%rcx)
   21e6e:	48 89 91 a8 00 00 00 	mov    %rdx,0xa8(%rcx)
   21e75:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   21e79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21e7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   21e81:	48 89 81 b0 00 00 00 	mov    %rax,0xb0(%rcx)
   21e88:	48 89 91 b8 00 00 00 	mov    %rdx,0xb8(%rcx)
   21e8f:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   21e93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21e97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21e9b:	48 89 81 40 01 00 00 	mov    %rax,0x140(%rcx)
   21ea2:	48 89 91 48 01 00 00 	mov    %rdx,0x148(%rcx)
   21ea9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21ead:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   21eb4:	83 ca 02             	or     $0x2,%edx
   21eb7:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   21ebd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21ec1:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   21ec8:	48 85 c0             	test   %rax,%rax
   21ecb:	75 0f                	jne    21edc <_ULx86_64_step+0x489>
   21ecd:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
   21ed4:	8b 45 8c             	mov    -0x74(%rbp),%eax
   21ed7:	e9 82 00 00 00       	jmpq   21f5e <_ULx86_64_step+0x50b>
   21edc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21ee0:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   21ee7:	48 85 c0             	test   %rax,%rax
   21eea:	74 40                	je     21f2c <_ULx86_64_step+0x4d9>
   21eec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21ef0:	48 8d 48 18          	lea    0x18(%rax),%rcx
   21ef4:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   21ef8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21efc:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
   21f03:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
   21f0a:	48 89 d6             	mov    %rdx,%rsi
   21f0d:	48 89 c2             	mov    %rax,%rdx
   21f10:	e8 57 f9 ff ff       	callq  2186c <dwarf_get>
   21f15:	89 45 8c             	mov    %eax,-0x74(%rbp)
   21f18:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   21f1c:	79 05                	jns    21f23 <_ULx86_64_step+0x4d0>
   21f1e:	8b 45 8c             	mov    -0x74(%rbp),%eax
   21f21:	eb 3b                	jmp    21f5e <_ULx86_64_step+0x50b>
   21f23:	c7 45 8c 01 00 00 00 	movl   $0x1,-0x74(%rbp)
   21f2a:	eb 0c                	jmp    21f38 <_ULx86_64_step+0x4e5>
   21f2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21f30:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   21f37:	00 
   21f38:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21f3c:	48 8b 40 18          	mov    0x18(%rax),%rax
   21f40:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   21f44:	75 15                	jne    21f5b <_ULx86_64_step+0x508>
   21f46:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21f4a:	48 8b 40 10          	mov    0x10(%rax),%rax
   21f4e:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   21f52:	75 07                	jne    21f5b <_ULx86_64_step+0x508>
   21f54:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   21f59:	eb 03                	jmp    21f5e <_ULx86_64_step+0x50b>
   21f5b:	8b 45 8c             	mov    -0x74(%rbp),%eax
   21f5e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   21f62:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   21f69:	00 00 
   21f6b:	74 05                	je     21f72 <_ULx86_64_step+0x51f>
   21f6d:	e8 1a 95 fe ff       	callq  b48c <__stack_chk_fail>
   21f72:	c9                   	leaveq 
   21f73:	c3                   	retq   

0000000000021f74 <_Ux86_64_getcontext>:
   21f74:	4c 89 67 48          	mov    %r12,0x48(%rdi)
   21f78:	4c 89 6f 50          	mov    %r13,0x50(%rdi)
   21f7c:	4c 89 77 58          	mov    %r14,0x58(%rdi)
   21f80:	4c 89 7f 60          	mov    %r15,0x60(%rdi)
   21f84:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   21f88:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   21f8f:	4c 89 47 28          	mov    %r8,0x28(%rdi)
   21f93:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
   21f97:	48 89 7f 68          	mov    %rdi,0x68(%rdi)
   21f9b:	48 89 77 70          	mov    %rsi,0x70(%rdi)
   21f9f:	48 89 97 88 00 00 00 	mov    %rdx,0x88(%rdi)
   21fa6:	48 89 87 90 00 00 00 	mov    %rax,0x90(%rdi)
   21fad:	48 89 8f 98 00 00 00 	mov    %rcx,0x98(%rdi)
   21fb4:	4c 8d 87 e0 00 00 00 	lea    0xe0(%rdi),%r8
   21fbb:	4c 89 87 a8 01 00 00 	mov    %r8,0x1a8(%rdi)
   21fc2:	41 d9 30             	fnstenv (%r8)
   21fc5:	41 0f ae 58 18       	stmxcsr 0x18(%r8)
   21fca:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   21fcf:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   21fd6:	48 8b 04 24          	mov    (%rsp),%rax
   21fda:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   21fe1:	48 31 c0             	xor    %rax,%rax
   21fe4:	c3                   	retq   

0000000000021fe5 <_Ux86_64_getcontext_trace>:
   21fe5:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   21fe9:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   21ff0:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   21ff5:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   21ffc:	48 8b 04 24          	mov    (%rsp),%rax
   22000:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   22007:	48 31 c0             	xor    %rax,%rax
   2200a:	c3                   	retq   

000000000002200b <mark_as_used>:
   2200b:	55                   	push   %rbp
   2200c:	48 89 e5             	mov    %rsp,%rbp
   2200f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22013:	90                   	nop
   22014:	5d                   	pop    %rbp
   22015:	c3                   	retq   

0000000000022016 <dwarf_get_uc>:
   22016:	55                   	push   %rbp
   22017:	48 89 e5             	mov    %rsp,%rbp
   2201a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2201e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22022:	48 8b 00             	mov    (%rax),%rax
   22025:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2202d:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   22034:	5d                   	pop    %rbp
   22035:	c3                   	retq   

0000000000022036 <dwarf_get>:
   22036:	55                   	push   %rbp
   22037:	48 89 e5             	mov    %rsp,%rbp
   2203a:	48 83 ec 20          	sub    $0x20,%rsp
   2203e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22042:	48 89 f0             	mov    %rsi,%rax
   22045:	48 89 d6             	mov    %rdx,%rsi
   22048:	48 89 f2             	mov    %rsi,%rdx
   2204b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2204f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   22053:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   22057:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2205b:	48 85 c0             	test   %rax,%rax
   2205e:	75 0a                	jne    2206a <dwarf_get+0x34>
   22060:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   22065:	e9 b0 00 00 00       	jmpq   2211a <dwarf_get+0xe4>
   2206a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2206e:	83 e0 02             	and    $0x2,%eax
   22071:	48 85 c0             	test   %rax,%rax
   22074:	74 31                	je     220a7 <dwarf_get+0x71>
   22076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2207a:	48 8b 40 08          	mov    0x8(%rax),%rax
   2207e:	48 8b 40 20          	mov    0x20(%rax),%rax
   22082:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22086:	48 8b 0a             	mov    (%rdx),%rcx
   22089:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2208d:	89 d6                	mov    %edx,%esi
   2208f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22093:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   22097:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2209b:	49 89 c8             	mov    %rcx,%r8
   2209e:	b9 00 00 00 00       	mov    $0x0,%ecx
   220a3:	ff d0                	callq  *%rax
   220a5:	eb 73                	jmp    2211a <dwarf_get+0xe4>
   220a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   220ab:	48 85 c0             	test   %rax,%rax
   220ae:	75 2f                	jne    220df <dwarf_get+0xa9>
   220b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   220b4:	48 8b 40 08          	mov    0x8(%rax),%rax
   220b8:	48 8b 40 18          	mov    0x18(%rax),%rax
   220bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   220c0:	48 8b 0a             	mov    (%rdx),%rcx
   220c3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   220c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   220cb:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   220cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   220d3:	49 89 c8             	mov    %rcx,%r8
   220d6:	b9 00 00 00 00       	mov    $0x0,%ecx
   220db:	ff d0                	callq  *%rax
   220dd:	eb 3b                	jmp    2211a <dwarf_get+0xe4>
   220df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   220e3:	83 e0 04             	and    $0x4,%eax
   220e6:	48 85 c0             	test   %rax,%rax
   220e9:	75 1f                	jne    2210a <dwarf_get+0xd4>
   220eb:	48 8d 0d be b2 01 00 	lea    0x1b2be(%rip),%rcx        # 3d3b0 <__PRETTY_FUNCTION__.4821>
   220f2:	ba aa 00 00 00       	mov    $0xaa,%edx
   220f7:	48 8d 35 aa ae 01 00 	lea    0x1aeaa(%rip),%rsi        # 3cfa8 <__PRETTY_FUNCTION__.4821+0x10>
   220fe:	48 8d 3d c8 ae 01 00 	lea    0x1aec8(%rip),%rdi        # 3cfcd <__PRETTY_FUNCTION__.4821+0x35>
   22105:	e8 e5 33 00 00       	callq  254ef <__assert_fail>
   2210a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2210e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22112:	48 89 10             	mov    %rdx,(%rax)
   22115:	b8 00 00 00 00       	mov    $0x0,%eax
   2211a:	c9                   	leaveq 
   2211b:	c3                   	retq   

000000000002211c <dwarf_readu8>:
   2211c:	55                   	push   %rbp
   2211d:	48 89 e5             	mov    %rsp,%rbp
   22120:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22124:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22128:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2212c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   22130:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   22134:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22138:	48 8b 00             	mov    (%rax),%rax
   2213b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2213f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22143:	0f b6 10             	movzbl (%rax),%edx
   22146:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2214a:	88 10                	mov    %dl,(%rax)
   2214c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22150:	48 8b 00             	mov    (%rax),%rax
   22153:	48 8d 50 01          	lea    0x1(%rax),%rdx
   22157:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2215b:	48 89 10             	mov    %rdx,(%rax)
   2215e:	b8 00 00 00 00       	mov    $0x0,%eax
   22163:	5d                   	pop    %rbp
   22164:	c3                   	retq   

0000000000022165 <dwarf_readu16>:
   22165:	55                   	push   %rbp
   22166:	48 89 e5             	mov    %rsp,%rbp
   22169:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2216d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22171:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   22175:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   22179:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2217d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22181:	48 8b 00             	mov    (%rax),%rax
   22184:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2218c:	0f b7 10             	movzwl (%rax),%edx
   2218f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22193:	66 89 10             	mov    %dx,(%rax)
   22196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2219a:	48 8b 00             	mov    (%rax),%rax
   2219d:	48 8d 50 02          	lea    0x2(%rax),%rdx
   221a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   221a5:	48 89 10             	mov    %rdx,(%rax)
   221a8:	b8 00 00 00 00       	mov    $0x0,%eax
   221ad:	5d                   	pop    %rbp
   221ae:	c3                   	retq   

00000000000221af <dwarf_readu32>:
   221af:	55                   	push   %rbp
   221b0:	48 89 e5             	mov    %rsp,%rbp
   221b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   221b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   221bb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   221bf:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   221c3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   221c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   221cb:	48 8b 00             	mov    (%rax),%rax
   221ce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   221d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   221d6:	8b 10                	mov    (%rax),%edx
   221d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   221dc:	89 10                	mov    %edx,(%rax)
   221de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   221e2:	48 8b 00             	mov    (%rax),%rax
   221e5:	48 8d 50 04          	lea    0x4(%rax),%rdx
   221e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   221ed:	48 89 10             	mov    %rdx,(%rax)
   221f0:	b8 00 00 00 00       	mov    $0x0,%eax
   221f5:	5d                   	pop    %rbp
   221f6:	c3                   	retq   

00000000000221f7 <dwarf_read_uleb128>:
   221f7:	55                   	push   %rbp
   221f8:	48 89 e5             	mov    %rsp,%rbp
   221fb:	48 83 ec 50          	sub    $0x50,%rsp
   221ff:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   22203:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   22207:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2220b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2220f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   22213:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2221a:	00 00 
   2221c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22220:	31 c0                	xor    %eax,%eax
   22222:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   22229:	00 
   2222a:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   22231:	00 
   22232:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   22236:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   2223a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2223e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   22242:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22246:	49 89 f8             	mov    %rdi,%r8
   22249:	48 89 c7             	mov    %rax,%rdi
   2224c:	e8 cb fe ff ff       	callq  2211c <dwarf_readu8>
   22251:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   22254:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   22258:	79 05                	jns    2225f <dwarf_read_uleb128+0x68>
   2225a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2225d:	eb 3a                	jmp    22299 <dwarf_read_uleb128+0xa2>
   2225f:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   22263:	0f b6 c0             	movzbl %al,%eax
   22266:	83 e0 7f             	and    $0x7f,%eax
   22269:	48 89 c2             	mov    %rax,%rdx
   2226c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22270:	89 c1                	mov    %eax,%ecx
   22272:	48 d3 e2             	shl    %cl,%rdx
   22275:	48 89 d0             	mov    %rdx,%rax
   22278:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2227c:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   22281:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   22285:	84 c0                	test   %al,%al
   22287:	78 a9                	js     22232 <dwarf_read_uleb128+0x3b>
   22289:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2228d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22291:	48 89 10             	mov    %rdx,(%rax)
   22294:	b8 00 00 00 00       	mov    $0x0,%eax
   22299:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2229d:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   222a4:	00 00 
   222a6:	74 05                	je     222ad <dwarf_read_uleb128+0xb6>
   222a8:	e8 df 91 fe ff       	callq  b48c <__stack_chk_fail>
   222ad:	c9                   	leaveq 
   222ae:	c3                   	retq   

00000000000222af <dwarf_read_sleb128>:
   222af:	55                   	push   %rbp
   222b0:	48 89 e5             	mov    %rsp,%rbp
   222b3:	48 83 ec 50          	sub    $0x50,%rsp
   222b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   222bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   222bf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   222c3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   222c7:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   222cb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   222d2:	00 00 
   222d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   222d8:	31 c0                	xor    %eax,%eax
   222da:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   222e1:	00 
   222e2:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   222e9:	00 
   222ea:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   222ee:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   222f2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   222f6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   222fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   222fe:	49 89 f8             	mov    %rdi,%r8
   22301:	48 89 c7             	mov    %rax,%rdi
   22304:	e8 13 fe ff ff       	callq  2211c <dwarf_readu8>
   22309:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2230c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   22310:	79 05                	jns    22317 <dwarf_read_sleb128+0x68>
   22312:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   22315:	eb 66                	jmp    2237d <dwarf_read_sleb128+0xce>
   22317:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2231b:	0f b6 c0             	movzbl %al,%eax
   2231e:	83 e0 7f             	and    $0x7f,%eax
   22321:	48 89 c2             	mov    %rax,%rdx
   22324:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22328:	89 c1                	mov    %eax,%ecx
   2232a:	48 d3 e2             	shl    %cl,%rdx
   2232d:	48 89 d0             	mov    %rdx,%rax
   22330:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   22334:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   22339:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2233d:	84 c0                	test   %al,%al
   2233f:	78 a9                	js     222ea <dwarf_read_sleb128+0x3b>
   22341:	48 83 7d f0 3f       	cmpq   $0x3f,-0x10(%rbp)
   22346:	77 25                	ja     2236d <dwarf_read_sleb128+0xbe>
   22348:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2234c:	0f b6 c0             	movzbl %al,%eax
   2234f:	83 e0 40             	and    $0x40,%eax
   22352:	85 c0                	test   %eax,%eax
   22354:	74 17                	je     2236d <dwarf_read_sleb128+0xbe>
   22356:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2235a:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   22361:	89 c1                	mov    %eax,%ecx
   22363:	48 d3 e2             	shl    %cl,%rdx
   22366:	48 89 d0             	mov    %rdx,%rax
   22369:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2236d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22371:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22375:	48 89 10             	mov    %rdx,(%rax)
   22378:	b8 00 00 00 00       	mov    $0x0,%eax
   2237d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   22381:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   22388:	00 00 
   2238a:	74 05                	je     22391 <dwarf_read_sleb128+0xe2>
   2238c:	e8 fb 90 fe ff       	callq  b48c <__stack_chk_fail>
   22391:	c9                   	leaveq 
   22392:	c3                   	retq   

0000000000022393 <read_regnum>:
   22393:	55                   	push   %rbp
   22394:	48 89 e5             	mov    %rsp,%rbp
   22397:	48 83 ec 40          	sub    $0x40,%rsp
   2239b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2239f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   223a3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   223a7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   223ab:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   223af:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   223b3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   223b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   223bb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   223bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   223c3:	49 89 f8             	mov    %rdi,%r8
   223c6:	48 89 c7             	mov    %rax,%rdi
   223c9:	e8 29 fe ff ff       	callq  221f7 <dwarf_read_uleb128>
   223ce:	89 45 fc             	mov    %eax,-0x4(%rbp)
   223d1:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   223d5:	79 05                	jns    223dc <read_regnum+0x49>
   223d7:	8b 45 fc             	mov    -0x4(%rbp),%eax
   223da:	eb 19                	jmp    223f5 <read_regnum+0x62>
   223dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   223e0:	48 8b 00             	mov    (%rax),%rax
   223e3:	48 83 f8 10          	cmp    $0x10,%rax
   223e7:	76 07                	jbe    223f0 <read_regnum+0x5d>
   223e9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   223ee:	eb 05                	jmp    223f5 <read_regnum+0x62>
   223f0:	b8 00 00 00 00       	mov    $0x0,%eax
   223f5:	c9                   	leaveq 
   223f6:	c3                   	retq   

00000000000223f7 <set_reg>:
   223f7:	55                   	push   %rbp
   223f8:	48 89 e5             	mov    %rsp,%rbp
   223fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   223ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22403:	89 55 ec             	mov    %edx,-0x14(%rbp)
   22406:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2240a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2240d:	89 c1                	mov    %eax,%ecx
   2240f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22413:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22417:	48 01 d0             	add    %rdx,%rax
   2241a:	48 05 d0 00 00 00    	add    $0xd0,%rax
   22420:	88 08                	mov    %cl,(%rax)
   22422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22426:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2242a:	48 8d 4a 1a          	lea    0x1a(%rdx),%rcx
   2242e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   22432:	48 89 54 c8 18       	mov    %rdx,0x18(%rax,%rcx,8)
   22437:	90                   	nop
   22438:	5d                   	pop    %rbp
   22439:	c3                   	retq   

000000000002243a <push_rstate_stack>:
   2243a:	55                   	push   %rbp
   2243b:	48 89 e5             	mov    %rsp,%rbp
   2243e:	48 83 ec 20          	sub    $0x20,%rsp
   22442:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22446:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2244a:	48 8b 00             	mov    (%rax),%rax
   2244d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22451:	48 8d 3d a8 4e 03 00 	lea    0x34ea8(%rip),%rdi        # 57300 <dwarf_reg_state_pool>
   22458:	e8 6b 62 00 00       	callq  286c8 <_UIx86_64__mempool_alloc>
   2245d:	48 89 c2             	mov    %rax,%rdx
   22460:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22464:	48 89 10             	mov    %rdx,(%rax)
   22467:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2246b:	48 8b 00             	mov    (%rax),%rax
   2246e:	48 85 c0             	test   %rax,%rax
   22471:	75 12                	jne    22485 <push_rstate_stack+0x4b>
   22473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22477:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2247b:	48 89 10             	mov    %rdx,(%rax)
   2247e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   22483:	eb 13                	jmp    22498 <push_rstate_stack+0x5e>
   22485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22489:	48 8b 00             	mov    (%rax),%rax
   2248c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22490:	48 89 10             	mov    %rdx,(%rax)
   22493:	b8 00 00 00 00       	mov    $0x0,%eax
   22498:	c9                   	leaveq 
   22499:	c3                   	retq   

000000000002249a <pop_rstate_stack>:
   2249a:	55                   	push   %rbp
   2249b:	48 89 e5             	mov    %rsp,%rbp
   2249e:	48 83 ec 20          	sub    $0x20,%rsp
   224a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   224a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   224aa:	48 8b 00             	mov    (%rax),%rax
   224ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   224b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224b5:	48 8b 10             	mov    (%rax),%rdx
   224b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   224bc:	48 89 10             	mov    %rdx,(%rax)
   224bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224c3:	48 89 c6             	mov    %rax,%rsi
   224c6:	48 8d 3d 33 4e 03 00 	lea    0x34e33(%rip),%rdi        # 57300 <dwarf_reg_state_pool>
   224cd:	e8 0f 63 00 00       	callq  287e1 <_UIx86_64__mempool_free>
   224d2:	90                   	nop
   224d3:	c9                   	leaveq 
   224d4:	c3                   	retq   

00000000000224d5 <empty_rstate_stack>:
   224d5:	55                   	push   %rbp
   224d6:	48 89 e5             	mov    %rsp,%rbp
   224d9:	48 83 ec 10          	sub    $0x10,%rsp
   224dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   224e1:	eb 0c                	jmp    224ef <empty_rstate_stack+0x1a>
   224e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224e7:	48 89 c7             	mov    %rax,%rdi
   224ea:	e8 ab ff ff ff       	callq  2249a <pop_rstate_stack>
   224ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224f3:	48 8b 00             	mov    (%rax),%rax
   224f6:	48 85 c0             	test   %rax,%rax
   224f9:	75 e8                	jne    224e3 <empty_rstate_stack+0xe>
   224fb:	90                   	nop
   224fc:	c9                   	leaveq 
   224fd:	c3                   	retq   

00000000000224fe <run_cfi_program>:
   224fe:	55                   	push   %rbp
   224ff:	48 89 e5             	mov    %rsp,%rbp
   22502:	53                   	push   %rbx
   22503:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   2250a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2250e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   22512:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   22516:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   2251a:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
   2251e:	4c 89 4d 80          	mov    %r9,-0x80(%rbp)
   22522:	48 8b 45 10          	mov    0x10(%rbp),%rax
   22526:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   2252d:	48 8b 45 18          	mov    0x18(%rbp),%rax
   22531:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   22538:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2253f:	00 00 
   22541:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   22545:	31 c0                	xor    %eax,%eax
   22547:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2254b:	48 8b 80 80 01 00 00 	mov    0x180(%rax),%rax
   22552:	83 e0 20             	and    $0x20,%eax
   22555:	48 85 c0             	test   %rax,%rax
   22558:	74 15                	je     2256f <run_cfi_program+0x71>
   2255a:	48 8b 05 df 4c 02 00 	mov    0x24cdf(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   22561:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   22565:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   2256c:	00 
   2256d:	eb 17                	jmp    22586 <run_cfi_program+0x88>
   2256f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22573:	48 8b 40 08          	mov    0x8(%rax),%rax
   22577:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2257b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2257f:	48 8b 00             	mov    (%rax),%rax
   22582:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   22586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2258a:	48 89 c7             	mov    %rax,%rdi
   2258d:	e8 7a 67 00 00       	callq  28d0c <_Ux86_64_get_accessors>
   22592:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   22596:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   2259d:	e9 e5 0c 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   225a2:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   225a9:	00 
   225aa:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   225ae:	48 8d 4d b3          	lea    -0x4d(%rbp),%rcx
   225b2:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   225b6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   225ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   225be:	49 89 f8             	mov    %rdi,%r8
   225c1:	48 89 c7             	mov    %rax,%rdi
   225c4:	e8 53 fb ff ff       	callq  2211c <dwarf_readu8>
   225c9:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   225cc:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   225d0:	0f 88 d7 0c 00 00    	js     232ad <run_cfi_program+0xdaf>
   225d6:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax
   225da:	0f b6 c0             	movzbl %al,%eax
   225dd:	25 c0 00 00 00       	and    $0xc0,%eax
   225e2:	85 c0                	test   %eax,%eax
   225e4:	74 18                	je     225fe <run_cfi_program+0x100>
   225e6:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax
   225ea:	0f b6 c0             	movzbl %al,%eax
   225ed:	83 e0 3f             	and    $0x3f,%eax
   225f0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   225f4:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax
   225f8:	83 e0 c0             	and    $0xffffffc0,%eax
   225fb:	88 45 b3             	mov    %al,-0x4d(%rbp)
   225fe:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax
   22602:	0f b6 c0             	movzbl %al,%eax
   22605:	3d c0 00 00 00       	cmp    $0xc0,%eax
   2260a:	0f 87 77 0c 00 00    	ja     23287 <run_cfi_program+0xd89>
   22610:	89 c0                	mov    %eax,%eax
   22612:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   22619:	00 
   2261a:	48 8d 05 53 aa 01 00 	lea    0x1aa53(%rip),%rax        # 3d074 <__PRETTY_FUNCTION__.4821+0xdc>
   22621:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   22624:	48 63 d0             	movslq %eax,%rdx
   22627:	48 8d 05 46 aa 01 00 	lea    0x1aa46(%rip),%rax        # 3d074 <__PRETTY_FUNCTION__.4821+0xdc>
   2262e:	48 01 d0             	add    %rdx,%rax
   22631:	ff e0                	jmpq   *%rax
   22633:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22637:	48 8b 10             	mov    (%rax),%rdx
   2263a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   22641:	48 8b 40 20          	mov    0x20(%rax),%rax
   22645:	48 0f af 45 d8       	imul   -0x28(%rbp),%rax
   2264a:	48 01 c2             	add    %rax,%rdx
   2264d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22651:	48 89 10             	mov    %rdx,(%rax)
   22654:	e9 2e 0c 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22659:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2265d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22661:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22665:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22669:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2266d:	49 89 f8             	mov    %rdi,%r8
   22670:	48 89 c7             	mov    %rax,%rdi
   22673:	e8 a4 fa ff ff       	callq  2211c <dwarf_readu8>
   22678:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2267b:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2267f:	0f 88 d4 0b 00 00    	js     23259 <run_cfi_program+0xd5b>
   22685:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22689:	48 8b 10             	mov    (%rax),%rdx
   2268c:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   22690:	0f b6 c8             	movzbl %al,%ecx
   22693:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2269a:	48 8b 40 20          	mov    0x20(%rax),%rax
   2269e:	48 0f af c1          	imul   %rcx,%rax
   226a2:	48 01 c2             	add    %rax,%rdx
   226a5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   226a9:	48 89 10             	mov    %rdx,(%rax)
   226ac:	e9 d6 0b 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   226b1:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   226b5:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   226b9:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   226bd:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   226c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   226c5:	49 89 f8             	mov    %rdi,%r8
   226c8:	48 89 c7             	mov    %rax,%rdi
   226cb:	e8 95 fa ff ff       	callq  22165 <dwarf_readu16>
   226d0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   226d3:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   226d7:	0f 88 7f 0b 00 00    	js     2325c <run_cfi_program+0xd5e>
   226dd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   226e1:	48 8b 10             	mov    (%rax),%rdx
   226e4:	0f b7 45 c0          	movzwl -0x40(%rbp),%eax
   226e8:	0f b7 c8             	movzwl %ax,%ecx
   226eb:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   226f2:	48 8b 40 20          	mov    0x20(%rax),%rax
   226f6:	48 0f af c1          	imul   %rcx,%rax
   226fa:	48 01 c2             	add    %rax,%rdx
   226fd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22701:	48 89 10             	mov    %rdx,(%rax)
   22704:	e9 7e 0b 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22709:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2270d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22711:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22715:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22719:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2271d:	49 89 f8             	mov    %rdi,%r8
   22720:	48 89 c7             	mov    %rax,%rdi
   22723:	e8 87 fa ff ff       	callq  221af <dwarf_readu32>
   22728:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2272b:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2272f:	0f 88 2a 0b 00 00    	js     2325f <run_cfi_program+0xd61>
   22735:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22739:	48 8b 10             	mov    (%rax),%rdx
   2273c:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2273f:	89 c1                	mov    %eax,%ecx
   22741:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   22748:	48 8b 40 20          	mov    0x20(%rax),%rax
   2274c:	48 0f af c1          	imul   %rcx,%rax
   22750:	48 01 c2             	add    %rax,%rdx
   22753:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22757:	48 89 10             	mov    %rdx,(%rax)
   2275a:	e9 28 0b 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   2275f:	c7 45 b4 f8 ff ff ff 	movl   $0xfffffff8,-0x4c(%rbp)
   22766:	e9 1c 0b 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   2276b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2276f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   22773:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22777:	48 83 f8 10          	cmp    $0x10,%rax
   2277b:	76 0c                	jbe    22789 <run_cfi_program+0x28b>
   2277d:	c7 45 b4 fd ff ff ff 	movl   $0xfffffffd,-0x4c(%rbp)
   22784:	e9 fe 0a 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22789:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2278d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22791:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22795:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22799:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2279d:	49 89 f8             	mov    %rdi,%r8
   227a0:	48 89 c7             	mov    %rax,%rdi
   227a3:	e8 4f fa ff ff       	callq  221f7 <dwarf_read_uleb128>
   227a8:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   227ab:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   227af:	0f 88 ad 0a 00 00    	js     23262 <run_cfi_program+0xd64>
   227b5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   227bc:	48 8b 50 28          	mov    0x28(%rax),%rdx
   227c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   227c4:	48 0f af d0          	imul   %rax,%rdx
   227c8:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   227cc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   227d0:	48 89 d1             	mov    %rdx,%rcx
   227d3:	ba 02 00 00 00       	mov    $0x2,%edx
   227d8:	48 89 c7             	mov    %rax,%rdi
   227db:	e8 17 fc ff ff       	callq  223f7 <set_reg>
   227e0:	e9 a2 0a 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   227e5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   227e9:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   227ed:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   227f1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   227f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   227f9:	49 89 f8             	mov    %rdi,%r8
   227fc:	48 89 c7             	mov    %rax,%rdi
   227ff:	e8 8f fb ff ff       	callq  22393 <read_regnum>
   22804:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22807:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2280b:	0f 88 76 0a 00 00    	js     23287 <run_cfi_program+0xd89>
   22811:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22815:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22819:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   2281d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22821:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22825:	49 89 f8             	mov    %rdi,%r8
   22828:	48 89 c7             	mov    %rax,%rdi
   2282b:	e8 c7 f9 ff ff       	callq  221f7 <dwarf_read_uleb128>
   22830:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22833:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22837:	0f 88 4a 0a 00 00    	js     23287 <run_cfi_program+0xd89>
   2283d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   22844:	48 8b 50 28          	mov    0x28(%rax),%rdx
   22848:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2284c:	48 0f af d0          	imul   %rax,%rdx
   22850:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   22854:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22858:	48 89 d1             	mov    %rdx,%rcx
   2285b:	ba 02 00 00 00       	mov    $0x2,%edx
   22860:	48 89 c7             	mov    %rax,%rdi
   22863:	e8 8f fb ff ff       	callq  223f7 <set_reg>
   22868:	e9 1a 0a 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   2286d:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22871:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22875:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22879:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   2287d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22881:	49 89 f8             	mov    %rdi,%r8
   22884:	48 89 c7             	mov    %rax,%rdi
   22887:	e8 07 fb ff ff       	callq  22393 <read_regnum>
   2288c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2288f:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22893:	0f 88 ee 09 00 00    	js     23287 <run_cfi_program+0xd89>
   22899:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2289d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   228a1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   228a5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   228a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   228ad:	49 89 f8             	mov    %rdi,%r8
   228b0:	48 89 c7             	mov    %rax,%rdi
   228b3:	e8 f7 f9 ff ff       	callq  222af <dwarf_read_sleb128>
   228b8:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   228bb:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   228bf:	0f 88 c2 09 00 00    	js     23287 <run_cfi_program+0xd89>
   228c5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   228cc:	48 8b 50 28          	mov    0x28(%rax),%rdx
   228d0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   228d4:	48 0f af d0          	imul   %rax,%rdx
   228d8:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   228dc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   228e0:	48 89 d1             	mov    %rdx,%rcx
   228e3:	ba 02 00 00 00       	mov    $0x2,%edx
   228e8:	48 89 c7             	mov    %rax,%rdi
   228eb:	e8 07 fb ff ff       	callq  223f7 <set_reg>
   228f0:	e9 92 09 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   228f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   228f9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   228fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22901:	48 83 f8 10          	cmp    $0x10,%rax
   22905:	76 0c                	jbe    22913 <run_cfi_program+0x415>
   22907:	c7 45 b4 f8 ff ff ff 	movl   $0xfffffff8,-0x4c(%rbp)
   2290e:	e9 74 09 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22913:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   22917:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2291b:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   2291f:	0f b6 4c 11 18       	movzbl 0x18(%rcx,%rdx,1),%ecx
   22924:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   22928:	88 8c 02 d0 00 00 00 	mov    %cl,0xd0(%rdx,%rax,1)
   2292f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   22933:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   22937:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2293b:	48 83 c2 04          	add    $0x4,%rdx
   2293f:	48 8b 54 d0 10       	mov    0x10(%rax,%rdx,8),%rdx
   22944:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22948:	48 83 c1 1a          	add    $0x1a,%rcx
   2294c:	48 89 54 c8 18       	mov    %rdx,0x18(%rax,%rcx,8)
   22951:	e9 31 09 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22956:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2295a:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   2295e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22962:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22966:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2296a:	49 89 f8             	mov    %rdi,%r8
   2296d:	48 89 c7             	mov    %rax,%rdi
   22970:	e8 82 f8 ff ff       	callq  221f7 <dwarf_read_uleb128>
   22975:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22978:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2297c:	0f 88 e3 08 00 00    	js     23265 <run_cfi_program+0xd67>
   22982:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22986:	48 83 f8 10          	cmp    $0x10,%rax
   2298a:	76 0c                	jbe    22998 <run_cfi_program+0x49a>
   2298c:	c7 45 b4 f8 ff ff ff 	movl   $0xfffffff8,-0x4c(%rbp)
   22993:	e9 ef 08 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22998:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   2299c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   229a0:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   229a4:	0f b6 4c 11 18       	movzbl 0x18(%rcx,%rdx,1),%ecx
   229a9:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   229ad:	88 8c 02 d0 00 00 00 	mov    %cl,0xd0(%rdx,%rax,1)
   229b4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   229b8:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   229bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   229c0:	48 83 c2 04          	add    $0x4,%rdx
   229c4:	48 8b 54 d0 10       	mov    0x10(%rax,%rdx,8),%rdx
   229c9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   229cd:	48 83 c1 1a          	add    $0x1a,%rcx
   229d1:	48 89 54 c8 18       	mov    %rdx,0x18(%rax,%rcx,8)
   229d6:	e9 ac 08 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   229db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   229df:	4c 8d 80 58 01 00 00 	lea    0x158(%rax),%r8
   229e6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   229ed:	0f b6 40 44          	movzbl 0x44(%rax),%eax
   229f1:	0f b6 c8             	movzbl %al,%ecx
   229f4:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   229f8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   229fc:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22a00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22a04:	48 83 ec 08          	sub    $0x8,%rsp
   22a08:	ff 75 d0             	pushq  -0x30(%rbp)
   22a0b:	49 89 f9             	mov    %rdi,%r9
   22a0e:	48 89 c7             	mov    %rax,%rdi
   22a11:	e8 35 26 00 00       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   22a16:	48 83 c4 10          	add    $0x10,%rsp
   22a1a:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22a1d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22a21:	e9 61 08 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22a26:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22a2a:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22a2e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22a32:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22a36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22a3a:	49 89 f8             	mov    %rdi,%r8
   22a3d:	48 89 c7             	mov    %rax,%rdi
   22a40:	e8 4e f9 ff ff       	callq  22393 <read_regnum>
   22a45:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22a48:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22a4c:	0f 88 16 08 00 00    	js     23268 <run_cfi_program+0xd6a>
   22a52:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   22a56:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22a5a:	b9 00 00 00 00       	mov    $0x0,%ecx
   22a5f:	ba 00 00 00 00       	mov    $0x0,%edx
   22a64:	48 89 c7             	mov    %rax,%rdi
   22a67:	e8 8b f9 ff ff       	callq  223f7 <set_reg>
   22a6c:	e9 16 08 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22a71:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22a75:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22a79:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22a7d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22a81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22a85:	49 89 f8             	mov    %rdi,%r8
   22a88:	48 89 c7             	mov    %rax,%rdi
   22a8b:	e8 03 f9 ff ff       	callq  22393 <read_regnum>
   22a90:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22a93:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22a97:	0f 88 ce 07 00 00    	js     2326b <run_cfi_program+0xd6d>
   22a9d:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   22aa1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22aa5:	b9 00 00 00 00       	mov    $0x0,%ecx
   22aaa:	ba 01 00 00 00       	mov    $0x1,%edx
   22aaf:	48 89 c7             	mov    %rax,%rdi
   22ab2:	e8 40 f9 ff ff       	callq  223f7 <set_reg>
   22ab7:	e9 cb 07 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22abc:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22ac0:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22ac4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22ac8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22acc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22ad0:	49 89 f8             	mov    %rdi,%r8
   22ad3:	48 89 c7             	mov    %rax,%rdi
   22ad6:	e8 b8 f8 ff ff       	callq  22393 <read_regnum>
   22adb:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22ade:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22ae2:	0f 88 9f 07 00 00    	js     23287 <run_cfi_program+0xd89>
   22ae8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22aec:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22af0:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22af4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22af8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22afc:	49 89 f8             	mov    %rdi,%r8
   22aff:	48 89 c7             	mov    %rax,%rdi
   22b02:	e8 f0 f6 ff ff       	callq  221f7 <dwarf_read_uleb128>
   22b07:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22b0a:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22b0e:	0f 88 73 07 00 00    	js     23287 <run_cfi_program+0xd89>
   22b14:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   22b18:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   22b1c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22b20:	48 89 d1             	mov    %rdx,%rcx
   22b23:	ba 03 00 00 00       	mov    $0x3,%edx
   22b28:	48 89 c7             	mov    %rax,%rdi
   22b2b:	e8 c7 f8 ff ff       	callq  223f7 <set_reg>
   22b30:	e9 52 07 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22b35:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22b3c:	48 89 c7             	mov    %rax,%rdi
   22b3f:	e8 f6 f8 ff ff       	callq  2243a <push_rstate_stack>
   22b44:	85 c0                	test   %eax,%eax
   22b46:	79 0c                	jns    22b54 <run_cfi_program+0x656>
   22b48:	c7 45 b4 fe ff ff ff 	movl   $0xfffffffe,-0x4c(%rbp)
   22b4f:	e9 33 07 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22b54:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22b5b:	48 8b 00             	mov    (%rax),%rax
   22b5e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   22b62:	48 8b 8a c8 00 00 00 	mov    0xc8(%rdx),%rcx
   22b69:	48 8b 9a d0 00 00 00 	mov    0xd0(%rdx),%rbx
   22b70:	48 89 48 08          	mov    %rcx,0x8(%rax)
   22b74:	48 89 58 10          	mov    %rbx,0x10(%rax)
   22b78:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   22b7f:	48 8b 9a e0 00 00 00 	mov    0xe0(%rdx),%rbx
   22b86:	48 89 48 18          	mov    %rcx,0x18(%rax)
   22b8a:	48 89 58 20          	mov    %rbx,0x20(%rax)
   22b8e:	48 8b 8a e8 00 00 00 	mov    0xe8(%rdx),%rcx
   22b95:	48 8b 9a f0 00 00 00 	mov    0xf0(%rdx),%rbx
   22b9c:	48 89 48 28          	mov    %rcx,0x28(%rax)
   22ba0:	48 89 58 30          	mov    %rbx,0x30(%rax)
   22ba4:	48 8b 8a f8 00 00 00 	mov    0xf8(%rdx),%rcx
   22bab:	48 8b 9a 00 01 00 00 	mov    0x100(%rdx),%rbx
   22bb2:	48 89 48 38          	mov    %rcx,0x38(%rax)
   22bb6:	48 89 58 40          	mov    %rbx,0x40(%rax)
   22bba:	48 8b 8a 08 01 00 00 	mov    0x108(%rdx),%rcx
   22bc1:	48 8b 9a 10 01 00 00 	mov    0x110(%rdx),%rbx
   22bc8:	48 89 48 48          	mov    %rcx,0x48(%rax)
   22bcc:	48 89 58 50          	mov    %rbx,0x50(%rax)
   22bd0:	48 8b 8a 18 01 00 00 	mov    0x118(%rdx),%rcx
   22bd7:	48 8b 9a 20 01 00 00 	mov    0x120(%rdx),%rbx
   22bde:	48 89 48 58          	mov    %rcx,0x58(%rax)
   22be2:	48 89 58 60          	mov    %rbx,0x60(%rax)
   22be6:	48 8b 8a 28 01 00 00 	mov    0x128(%rdx),%rcx
   22bed:	48 8b 9a 30 01 00 00 	mov    0x130(%rdx),%rbx
   22bf4:	48 89 48 68          	mov    %rcx,0x68(%rax)
   22bf8:	48 89 58 70          	mov    %rbx,0x70(%rax)
   22bfc:	48 8b 8a 38 01 00 00 	mov    0x138(%rdx),%rcx
   22c03:	48 8b 9a 40 01 00 00 	mov    0x140(%rdx),%rbx
   22c0a:	48 89 48 78          	mov    %rcx,0x78(%rax)
   22c0e:	48 89 98 80 00 00 00 	mov    %rbx,0x80(%rax)
   22c15:	48 8b 8a 48 01 00 00 	mov    0x148(%rdx),%rcx
   22c1c:	48 8b 9a 50 01 00 00 	mov    0x150(%rdx),%rbx
   22c23:	48 89 88 88 00 00 00 	mov    %rcx,0x88(%rax)
   22c2a:	48 89 98 90 00 00 00 	mov    %rbx,0x90(%rax)
   22c31:	48 8b 8a 58 01 00 00 	mov    0x158(%rdx),%rcx
   22c38:	48 8b 9a 60 01 00 00 	mov    0x160(%rdx),%rbx
   22c3f:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)
   22c46:	48 89 98 a0 00 00 00 	mov    %rbx,0xa0(%rax)
   22c4d:	48 8b 8a 68 01 00 00 	mov    0x168(%rdx),%rcx
   22c54:	48 8b 9a 70 01 00 00 	mov    0x170(%rdx),%rbx
   22c5b:	48 89 88 a8 00 00 00 	mov    %rcx,0xa8(%rax)
   22c62:	48 89 98 b0 00 00 00 	mov    %rbx,0xb0(%rax)
   22c69:	48 8b 92 78 01 00 00 	mov    0x178(%rdx),%rdx
   22c70:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
   22c77:	e9 0b 06 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22c7c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22c83:	48 8b 00             	mov    (%rax),%rax
   22c86:	48 85 c0             	test   %rax,%rax
   22c89:	75 0c                	jne    22c97 <run_cfi_program+0x799>
   22c8b:	c7 45 b4 f8 ff ff ff 	movl   $0xfffffff8,-0x4c(%rbp)
   22c92:	e9 f0 05 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22c97:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22c9e:	48 8b 10             	mov    (%rax),%rdx
   22ca1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22ca5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   22ca9:	48 8b 5a 10          	mov    0x10(%rdx),%rbx
   22cad:	48 89 88 c8 00 00 00 	mov    %rcx,0xc8(%rax)
   22cb4:	48 89 98 d0 00 00 00 	mov    %rbx,0xd0(%rax)
   22cbb:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   22cbf:	48 8b 5a 20          	mov    0x20(%rdx),%rbx
   22cc3:	48 89 88 d8 00 00 00 	mov    %rcx,0xd8(%rax)
   22cca:	48 89 98 e0 00 00 00 	mov    %rbx,0xe0(%rax)
   22cd1:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
   22cd5:	48 8b 5a 30          	mov    0x30(%rdx),%rbx
   22cd9:	48 89 88 e8 00 00 00 	mov    %rcx,0xe8(%rax)
   22ce0:	48 89 98 f0 00 00 00 	mov    %rbx,0xf0(%rax)
   22ce7:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
   22ceb:	48 8b 5a 40          	mov    0x40(%rdx),%rbx
   22cef:	48 89 88 f8 00 00 00 	mov    %rcx,0xf8(%rax)
   22cf6:	48 89 98 00 01 00 00 	mov    %rbx,0x100(%rax)
   22cfd:	48 8b 4a 48          	mov    0x48(%rdx),%rcx
   22d01:	48 8b 5a 50          	mov    0x50(%rdx),%rbx
   22d05:	48 89 88 08 01 00 00 	mov    %rcx,0x108(%rax)
   22d0c:	48 89 98 10 01 00 00 	mov    %rbx,0x110(%rax)
   22d13:	48 8b 4a 58          	mov    0x58(%rdx),%rcx
   22d17:	48 8b 5a 60          	mov    0x60(%rdx),%rbx
   22d1b:	48 89 88 18 01 00 00 	mov    %rcx,0x118(%rax)
   22d22:	48 89 98 20 01 00 00 	mov    %rbx,0x120(%rax)
   22d29:	48 8b 4a 68          	mov    0x68(%rdx),%rcx
   22d2d:	48 8b 5a 70          	mov    0x70(%rdx),%rbx
   22d31:	48 89 88 28 01 00 00 	mov    %rcx,0x128(%rax)
   22d38:	48 89 98 30 01 00 00 	mov    %rbx,0x130(%rax)
   22d3f:	48 8b 4a 78          	mov    0x78(%rdx),%rcx
   22d43:	48 8b 9a 80 00 00 00 	mov    0x80(%rdx),%rbx
   22d4a:	48 89 88 38 01 00 00 	mov    %rcx,0x138(%rax)
   22d51:	48 89 98 40 01 00 00 	mov    %rbx,0x140(%rax)
   22d58:	48 8b 8a 88 00 00 00 	mov    0x88(%rdx),%rcx
   22d5f:	48 8b 9a 90 00 00 00 	mov    0x90(%rdx),%rbx
   22d66:	48 89 88 48 01 00 00 	mov    %rcx,0x148(%rax)
   22d6d:	48 89 98 50 01 00 00 	mov    %rbx,0x150(%rax)
   22d74:	48 8b 8a 98 00 00 00 	mov    0x98(%rdx),%rcx
   22d7b:	48 8b 9a a0 00 00 00 	mov    0xa0(%rdx),%rbx
   22d82:	48 89 88 58 01 00 00 	mov    %rcx,0x158(%rax)
   22d89:	48 89 98 60 01 00 00 	mov    %rbx,0x160(%rax)
   22d90:	48 8b 8a a8 00 00 00 	mov    0xa8(%rdx),%rcx
   22d97:	48 8b 9a b0 00 00 00 	mov    0xb0(%rdx),%rbx
   22d9e:	48 89 88 68 01 00 00 	mov    %rcx,0x168(%rax)
   22da5:	48 89 98 70 01 00 00 	mov    %rbx,0x170(%rax)
   22dac:	48 8b 92 b8 00 00 00 	mov    0xb8(%rdx),%rdx
   22db3:	48 89 90 78 01 00 00 	mov    %rdx,0x178(%rax)
   22dba:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22dc1:	48 89 c7             	mov    %rax,%rdi
   22dc4:	e8 d1 f6 ff ff       	callq  2249a <pop_rstate_stack>
   22dc9:	e9 b9 04 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22dce:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22dd2:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22dd6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22dda:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22dde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22de2:	49 89 f8             	mov    %rdi,%r8
   22de5:	48 89 c7             	mov    %rax,%rdi
   22de8:	e8 a6 f5 ff ff       	callq  22393 <read_regnum>
   22ded:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22df0:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22df4:	0f 88 8d 04 00 00    	js     23287 <run_cfi_program+0xd89>
   22dfa:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22dfe:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22e02:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22e06:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22e0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22e0e:	49 89 f8             	mov    %rdi,%r8
   22e11:	48 89 c7             	mov    %rax,%rdi
   22e14:	e8 de f3 ff ff       	callq  221f7 <dwarf_read_uleb128>
   22e19:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22e1c:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22e20:	0f 88 61 04 00 00    	js     23287 <run_cfi_program+0xd89>
   22e26:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   22e2a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22e2e:	48 89 d1             	mov    %rdx,%rcx
   22e31:	ba 03 00 00 00       	mov    $0x3,%edx
   22e36:	be 11 00 00 00       	mov    $0x11,%esi
   22e3b:	48 89 c7             	mov    %rax,%rdi
   22e3e:	e8 b4 f5 ff ff       	callq  223f7 <set_reg>
   22e43:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   22e47:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22e4b:	48 89 d1             	mov    %rdx,%rcx
   22e4e:	ba 00 00 00 00       	mov    $0x0,%edx
   22e53:	be 12 00 00 00       	mov    $0x12,%esi
   22e58:	48 89 c7             	mov    %rax,%rdi
   22e5b:	e8 97 f5 ff ff       	callq  223f7 <set_reg>
   22e60:	e9 22 04 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22e65:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22e69:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22e6d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22e71:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22e75:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22e79:	49 89 f8             	mov    %rdi,%r8
   22e7c:	48 89 c7             	mov    %rax,%rdi
   22e7f:	e8 0f f5 ff ff       	callq  22393 <read_regnum>
   22e84:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22e87:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22e8b:	0f 88 f6 03 00 00    	js     23287 <run_cfi_program+0xd89>
   22e91:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22e95:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22e99:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22e9d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22ea1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22ea5:	49 89 f8             	mov    %rdi,%r8
   22ea8:	48 89 c7             	mov    %rax,%rdi
   22eab:	e8 ff f3 ff ff       	callq  222af <dwarf_read_sleb128>
   22eb0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22eb3:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22eb7:	0f 88 ca 03 00 00    	js     23287 <run_cfi_program+0xd89>
   22ebd:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   22ec1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22ec5:	48 89 d1             	mov    %rdx,%rcx
   22ec8:	ba 03 00 00 00       	mov    $0x3,%edx
   22ecd:	be 11 00 00 00       	mov    $0x11,%esi
   22ed2:	48 89 c7             	mov    %rax,%rdi
   22ed5:	e8 1d f5 ff ff       	callq  223f7 <set_reg>
   22eda:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   22ee1:	48 8b 50 28          	mov    0x28(%rax),%rdx
   22ee5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22ee9:	48 0f af d0          	imul   %rax,%rdx
   22eed:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22ef1:	48 89 d1             	mov    %rdx,%rcx
   22ef4:	ba 00 00 00 00       	mov    $0x0,%edx
   22ef9:	be 12 00 00 00       	mov    $0x12,%esi
   22efe:	48 89 c7             	mov    %rax,%rdi
   22f01:	e8 f1 f4 ff ff       	callq  223f7 <set_reg>
   22f06:	e9 7c 03 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22f0b:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22f0f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   22f13:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22f17:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22f1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22f1f:	49 89 f8             	mov    %rdi,%r8
   22f22:	48 89 c7             	mov    %rax,%rdi
   22f25:	e8 69 f4 ff ff       	callq  22393 <read_regnum>
   22f2a:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22f2d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22f31:	0f 88 37 03 00 00    	js     2326e <run_cfi_program+0xd70>
   22f37:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   22f3b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22f3f:	48 89 d1             	mov    %rdx,%rcx
   22f42:	ba 03 00 00 00       	mov    $0x3,%edx
   22f47:	be 11 00 00 00       	mov    $0x11,%esi
   22f4c:	48 89 c7             	mov    %rax,%rdi
   22f4f:	e8 a3 f4 ff ff       	callq  223f7 <set_reg>
   22f54:	e9 2e 03 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22f59:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22f5d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22f61:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22f65:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22f69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22f6d:	49 89 f8             	mov    %rdi,%r8
   22f70:	48 89 c7             	mov    %rax,%rdi
   22f73:	e8 7f f2 ff ff       	callq  221f7 <dwarf_read_uleb128>
   22f78:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22f7b:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22f7f:	0f 88 ec 02 00 00    	js     23271 <run_cfi_program+0xd73>
   22f85:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   22f89:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22f8d:	48 89 d1             	mov    %rdx,%rcx
   22f90:	ba 00 00 00 00       	mov    $0x0,%edx
   22f95:	be 12 00 00 00       	mov    $0x12,%esi
   22f9a:	48 89 c7             	mov    %rax,%rdi
   22f9d:	e8 55 f4 ff ff       	callq  223f7 <set_reg>
   22fa2:	e9 e0 02 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   22fa7:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   22fab:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   22faf:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22fb3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22fb7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22fbb:	49 89 f8             	mov    %rdi,%r8
   22fbe:	48 89 c7             	mov    %rax,%rdi
   22fc1:	e8 e9 f2 ff ff       	callq  222af <dwarf_read_sleb128>
   22fc6:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   22fc9:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   22fcd:	0f 88 a1 02 00 00    	js     23274 <run_cfi_program+0xd76>
   22fd3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   22fda:	48 8b 50 28          	mov    0x28(%rax),%rdx
   22fde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22fe2:	48 0f af d0          	imul   %rax,%rdx
   22fe6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22fea:	48 89 d1             	mov    %rdx,%rcx
   22fed:	ba 00 00 00 00       	mov    $0x0,%edx
   22ff2:	be 12 00 00 00       	mov    $0x12,%esi
   22ff7:	48 89 c7             	mov    %rax,%rdi
   22ffa:	e8 f8 f3 ff ff       	callq  223f7 <set_reg>
   22fff:	e9 83 02 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   23004:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23008:	48 8b 10             	mov    (%rax),%rdx
   2300b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2300f:	48 89 d1             	mov    %rdx,%rcx
   23012:	ba 04 00 00 00       	mov    $0x4,%edx
   23017:	be 11 00 00 00       	mov    $0x11,%esi
   2301c:	48 89 c7             	mov    %rax,%rdi
   2301f:	e8 d3 f3 ff ff       	callq  223f7 <set_reg>
   23024:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   23028:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   2302c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   23030:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   23034:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23038:	49 89 f8             	mov    %rdi,%r8
   2303b:	48 89 c7             	mov    %rax,%rdi
   2303e:	e8 b4 f1 ff ff       	callq  221f7 <dwarf_read_uleb128>
   23043:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   23046:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2304a:	0f 88 27 02 00 00    	js     23277 <run_cfi_program+0xd79>
   23050:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23054:	48 8b 10             	mov    (%rax),%rdx
   23057:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2305b:	48 01 c2             	add    %rax,%rdx
   2305e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23062:	48 89 10             	mov    %rdx,(%rax)
   23065:	e9 1d 02 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   2306a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2306e:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   23072:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   23076:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   2307a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2307e:	49 89 f8             	mov    %rdi,%r8
   23081:	48 89 c7             	mov    %rax,%rdi
   23084:	e8 0a f3 ff ff       	callq  22393 <read_regnum>
   23089:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2308c:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   23090:	0f 88 e4 01 00 00    	js     2327a <run_cfi_program+0xd7c>
   23096:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2309a:	48 8b 10             	mov    (%rax),%rdx
   2309d:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   230a1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   230a5:	48 89 d1             	mov    %rdx,%rcx
   230a8:	ba 04 00 00 00       	mov    $0x4,%edx
   230ad:	48 89 c7             	mov    %rax,%rdi
   230b0:	e8 42 f3 ff ff       	callq  223f7 <set_reg>
   230b5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   230b9:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   230bd:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   230c1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   230c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   230c9:	49 89 f8             	mov    %rdi,%r8
   230cc:	48 89 c7             	mov    %rax,%rdi
   230cf:	e8 23 f1 ff ff       	callq  221f7 <dwarf_read_uleb128>
   230d4:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   230d7:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   230db:	0f 88 9c 01 00 00    	js     2327d <run_cfi_program+0xd7f>
   230e1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   230e5:	48 8b 10             	mov    (%rax),%rdx
   230e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   230ec:	48 01 c2             	add    %rax,%rdx
   230ef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   230f3:	48 89 10             	mov    %rdx,(%rax)
   230f6:	e9 8c 01 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   230fb:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   230ff:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   23103:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   23107:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   2310b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2310f:	49 89 f8             	mov    %rdi,%r8
   23112:	48 89 c7             	mov    %rax,%rdi
   23115:	e8 79 f2 ff ff       	callq  22393 <read_regnum>
   2311a:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2311d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   23121:	0f 88 59 01 00 00    	js     23280 <run_cfi_program+0xd82>
   23127:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2312b:	48 8b 10             	mov    (%rax),%rdx
   2312e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   23132:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   23136:	48 89 d1             	mov    %rdx,%rcx
   23139:	ba 05 00 00 00       	mov    $0x5,%edx
   2313e:	48 89 c7             	mov    %rax,%rdi
   23141:	e8 b1 f2 ff ff       	callq  223f7 <set_reg>
   23146:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2314a:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   2314e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   23152:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   23156:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2315a:	49 89 f8             	mov    %rdi,%r8
   2315d:	48 89 c7             	mov    %rax,%rdi
   23160:	e8 92 f0 ff ff       	callq  221f7 <dwarf_read_uleb128>
   23165:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   23168:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2316c:	0f 88 11 01 00 00    	js     23283 <run_cfi_program+0xd85>
   23172:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23176:	48 8b 10             	mov    (%rax),%rdx
   23179:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2317d:	48 01 c2             	add    %rax,%rdx
   23180:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23184:	48 89 10             	mov    %rdx,(%rax)
   23187:	e9 fb 00 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   2318c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   23190:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   23194:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   23198:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   2319c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   231a0:	49 89 f8             	mov    %rdi,%r8
   231a3:	48 89 c7             	mov    %rax,%rdi
   231a6:	e8 4c f0 ff ff       	callq  221f7 <dwarf_read_uleb128>
   231ab:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   231ae:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   231b2:	0f 88 ce 00 00 00    	js     23286 <run_cfi_program+0xd88>
   231b8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   231bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   231c0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   231c4:	e9 be 00 00 00       	jmpq   23287 <run_cfi_program+0xd89>
   231c9:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   231cd:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   231d1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   231d5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   231d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   231dd:	49 89 f8             	mov    %rdi,%r8
   231e0:	48 89 c7             	mov    %rax,%rdi
   231e3:	e8 ab f1 ff ff       	callq  22393 <read_regnum>
   231e8:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   231eb:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   231ef:	0f 88 92 00 00 00    	js     23287 <run_cfi_program+0xd89>
   231f5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   231f9:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   231fd:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   23201:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   23205:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23209:	49 89 f8             	mov    %rdi,%r8
   2320c:	48 89 c7             	mov    %rax,%rdi
   2320f:	e8 e3 ef ff ff       	callq  221f7 <dwarf_read_uleb128>
   23214:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   23217:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2321b:	78 6a                	js     23287 <run_cfi_program+0xd89>
   2321d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   23224:	48 8b 50 28          	mov    0x28(%rax),%rdx
   23228:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2322c:	48 0f af c2          	imul   %rdx,%rax
   23230:	48 f7 d8             	neg    %rax
   23233:	48 89 c2             	mov    %rax,%rdx
   23236:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   2323a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2323e:	48 89 d1             	mov    %rdx,%rcx
   23241:	ba 02 00 00 00       	mov    $0x2,%edx
   23246:	48 89 c7             	mov    %rax,%rdi
   23249:	e8 a9 f1 ff ff       	callq  223f7 <set_reg>
   2324e:	eb 37                	jmp    23287 <run_cfi_program+0xd89>
   23250:	c7 45 b4 f8 ff ff ff 	movl   $0xfffffff8,-0x4c(%rbp)
   23257:	eb 2e                	jmp    23287 <run_cfi_program+0xd89>
   23259:	90                   	nop
   2325a:	eb 2b                	jmp    23287 <run_cfi_program+0xd89>
   2325c:	90                   	nop
   2325d:	eb 28                	jmp    23287 <run_cfi_program+0xd89>
   2325f:	90                   	nop
   23260:	eb 25                	jmp    23287 <run_cfi_program+0xd89>
   23262:	90                   	nop
   23263:	eb 22                	jmp    23287 <run_cfi_program+0xd89>
   23265:	90                   	nop
   23266:	eb 1f                	jmp    23287 <run_cfi_program+0xd89>
   23268:	90                   	nop
   23269:	eb 1c                	jmp    23287 <run_cfi_program+0xd89>
   2326b:	90                   	nop
   2326c:	eb 19                	jmp    23287 <run_cfi_program+0xd89>
   2326e:	90                   	nop
   2326f:	eb 16                	jmp    23287 <run_cfi_program+0xd89>
   23271:	90                   	nop
   23272:	eb 13                	jmp    23287 <run_cfi_program+0xd89>
   23274:	90                   	nop
   23275:	eb 10                	jmp    23287 <run_cfi_program+0xd89>
   23277:	90                   	nop
   23278:	eb 0d                	jmp    23287 <run_cfi_program+0xd89>
   2327a:	90                   	nop
   2327b:	eb 0a                	jmp    23287 <run_cfi_program+0xd89>
   2327d:	90                   	nop
   2327e:	eb 07                	jmp    23287 <run_cfi_program+0xd89>
   23280:	90                   	nop
   23281:	eb 04                	jmp    23287 <run_cfi_program+0xd89>
   23283:	90                   	nop
   23284:	eb 01                	jmp    23287 <run_cfi_program+0xd89>
   23286:	90                   	nop
   23287:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2328b:	48 8b 00             	mov    (%rax),%rax
   2328e:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   23292:	72 1a                	jb     232ae <run_cfi_program+0xdb0>
   23294:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23298:	48 8b 00             	mov    (%rax),%rax
   2329b:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   2329f:	76 0d                	jbe    232ae <run_cfi_program+0xdb0>
   232a1:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   232a5:	0f 89 f7 f2 ff ff    	jns    225a2 <run_cfi_program+0xa4>
   232ab:	eb 01                	jmp    232ae <run_cfi_program+0xdb0>
   232ad:	90                   	nop
   232ae:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   232b2:	7e 07                	jle    232bb <run_cfi_program+0xdbd>
   232b4:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   232bb:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   232be:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   232c2:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   232c9:	00 00 
   232cb:	74 05                	je     232d2 <run_cfi_program+0xdd4>
   232cd:	e8 ba 81 fe ff       	callq  b48c <__stack_chk_fail>
   232d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   232d6:	c9                   	leaveq 
   232d7:	c3                   	retq   

00000000000232d8 <fetch_proc_info>:
   232d8:	55                   	push   %rbp
   232d9:	48 89 e5             	mov    %rsp,%rbp
   232dc:	48 83 ec 20          	sub    $0x20,%rsp
   232e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   232e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   232e8:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
   232ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   232f3:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   232fa:	83 e0 02             	and    $0x2,%eax
   232fd:	84 c0                	test   %al,%al
   232ff:	74 05                	je     23306 <fetch_proc_info+0x2e>
   23301:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   23306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2330a:	48 05 58 01 00 00    	add    $0x158,%rax
   23310:	ba 48 00 00 00       	mov    $0x48,%edx
   23315:	be 00 00 00 00       	mov    $0x0,%esi
   2331a:	48 89 c7             	mov    %rax,%rdi
   2331d:	e8 13 04 ff ff       	callq  13735 <memset>
   23322:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23326:	48 8b 08             	mov    (%rax),%rcx
   23329:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2332d:	48 8d 90 58 01 00 00 	lea    0x158(%rax),%rdx
   23334:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23338:	48 8b 40 08          	mov    0x8(%rax),%rax
   2333c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   23340:	49 89 c8             	mov    %rcx,%r8
   23343:	b9 01 00 00 00       	mov    $0x1,%ecx
   23348:	48 89 c7             	mov    %rax,%rdi
   2334b:	e8 54 59 00 00       	callq  28ca4 <_ULx86_64_Ifind_dynamic_proc_info>
   23350:	89 45 f8             	mov    %eax,-0x8(%rbp)
   23353:	83 7d f8 f6          	cmpl   $0xfffffff6,-0x8(%rbp)
   23357:	75 46                	jne    2339f <fetch_proc_info+0xc7>
   23359:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   23360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23364:	48 8b 08             	mov    (%rax),%rcx
   23367:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2336b:	48 8d 90 58 01 00 00 	lea    0x158(%rax),%rdx
   23372:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23376:	48 8b 40 08          	mov    0x8(%rax),%rax
   2337a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   2337e:	49 89 c8             	mov    %rcx,%r8
   23381:	b9 01 00 00 00       	mov    $0x1,%ecx
   23386:	48 89 c7             	mov    %rax,%rdi
   23389:	e8 65 9b 00 00       	callq  2cef3 <_ULx86_64_dwarf_find_proc_info>
   2338e:	89 45 f8             	mov    %eax,-0x8(%rbp)
   23391:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   23395:	79 08                	jns    2339f <fetch_proc_info+0xc7>
   23397:	8b 45 f8             	mov    -0x8(%rbp),%eax
   2339a:	e9 8e 00 00 00       	jmpq   2342d <fetch_proc_info+0x155>
   2339f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   233a3:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
   233a9:	85 c0                	test   %eax,%eax
   233ab:	74 25                	je     233d2 <fetch_proc_info+0xfa>
   233ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   233b1:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
   233b7:	83 f8 01             	cmp    $0x1,%eax
   233ba:	74 16                	je     233d2 <fetch_proc_info+0xfa>
   233bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   233c0:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
   233c6:	83 f8 02             	cmp    $0x2,%eax
   233c9:	74 07                	je     233d2 <fetch_proc_info+0xfa>
   233cb:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   233d0:	eb 5b                	jmp    2342d <fetch_proc_info+0x155>
   233d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   233d6:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   233dd:	83 ca 04             	or     $0x4,%edx
   233e0:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   233e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
   233e9:	83 e0 01             	and    $0x1,%eax
   233ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   233f0:	83 e0 01             	and    $0x1,%eax
   233f3:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   233fa:	0f b6 82 50 01 00 00 	movzbl 0x150(%rdx),%eax
   23401:	83 e0 f7             	and    $0xfffffff7,%eax
   23404:	09 c8                	or     %ecx,%eax
   23406:	88 82 50 01 00 00    	mov    %al,0x150(%rdx)
   2340c:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   23410:	78 18                	js     2342a <fetch_proc_info+0x152>
   23412:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   23416:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2341a:	ba 01 00 00 00       	mov    $0x1,%edx
   2341f:	48 89 ce             	mov    %rcx,%rsi
   23422:	48 89 c7             	mov    %rax,%rdi
   23425:	e8 66 54 00 00       	callq  28890 <_ULx86_64_fetch_frame>
   2342a:	8b 45 f8             	mov    -0x8(%rbp),%eax
   2342d:	c9                   	leaveq 
   2342e:	c3                   	retq   

000000000002342f <parse_dynamic>:
   2342f:	55                   	push   %rbp
   23430:	48 89 e5             	mov    %rsp,%rbp
   23433:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23437:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2343b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2343f:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   23444:	5d                   	pop    %rbp
   23445:	c3                   	retq   

0000000000023446 <put_unwind_info>:
   23446:	55                   	push   %rbp
   23447:	48 89 e5             	mov    %rsp,%rbp
   2344a:	48 83 ec 10          	sub    $0x10,%rsp
   2344e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2345a:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   23461:	83 e0 08             	and    $0x8,%eax
   23464:	84 c0                	test   %al,%al
   23466:	74 20                	je     23488 <put_unwind_info+0x42>
   23468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2346c:	48 8b 10             	mov    (%rax),%rdx
   2346f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23473:	48 8b 40 08          	mov    0x8(%rax),%rax
   23477:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2347b:	48 89 ce             	mov    %rcx,%rsi
   2347e:	48 89 c7             	mov    %rax,%rdi
   23481:	e8 a7 58 00 00       	callq  28d2d <_ULx86_64_Iput_dynamic_unwind_info>
   23486:	eb 3c                	jmp    234c4 <put_unwind_info+0x7e>
   23488:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2348c:	48 8b 40 38          	mov    0x38(%rax),%rax
   23490:	48 85 c0             	test   %rax,%rax
   23493:	74 2f                	je     234c4 <put_unwind_info+0x7e>
   23495:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23499:	8b 40 30             	mov    0x30(%rax),%eax
   2349c:	83 f8 01             	cmp    $0x1,%eax
   2349f:	75 23                	jne    234c4 <put_unwind_info+0x7e>
   234a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   234a5:	48 8b 40 38          	mov    0x38(%rax),%rax
   234a9:	48 89 c6             	mov    %rax,%rsi
   234ac:	48 8d 3d 0d 3e 03 00 	lea    0x33e0d(%rip),%rdi        # 572c0 <dwarf_cie_info_pool>
   234b3:	e8 29 53 00 00       	callq  287e1 <_UIx86_64__mempool_free>
   234b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   234bc:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   234c3:	00 
   234c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234c8:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   234cf:	83 e2 fb             	and    $0xfffffffb,%edx
   234d2:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   234d8:	90                   	nop
   234d9:	c9                   	leaveq 
   234da:	c3                   	retq   

00000000000234db <setup_fde>:
   234db:	55                   	push   %rbp
   234dc:	48 89 e5             	mov    %rsp,%rbp
   234df:	48 83 ec 40          	sub    $0x40,%rsp
   234e3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   234e7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   234eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   234f2:	00 00 
   234f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   234f8:	31 c0                	xor    %eax,%eax
   234fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   234fe:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   23505:	83 e0 04             	and    $0x4,%eax
   23508:	84 c0                	test   %al,%al
   2350a:	75 1f                	jne    2352b <setup_fde+0x50>
   2350c:	48 8d 0d 7d 9e 01 00 	lea    0x19e7d(%rip),%rcx        # 3d390 <__PRETTY_FUNCTION__.5141>
   23513:	ba f2 01 00 00       	mov    $0x1f2,%edx
   23518:	48 8d 35 c5 9a 01 00 	lea    0x19ac5(%rip),%rsi        # 3cfe4 <__PRETTY_FUNCTION__.4821+0x4c>
   2351f:	48 8d 3d ce 9a 01 00 	lea    0x19ace(%rip),%rdi        # 3cff4 <__PRETTY_FUNCTION__.4821+0x5c>
   23526:	e8 c4 1f 00 00       	callq  254ef <__assert_fail>
   2352b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2352f:	ba 80 01 00 00       	mov    $0x180,%edx
   23534:	be 00 00 00 00       	mov    $0x0,%esi
   23539:	48 89 c7             	mov    %rax,%rdi
   2353c:	e8 f4 01 ff ff       	callq  13735 <memset>
   23541:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   23548:	eb 20                	jmp    2356a <setup_fde+0x8f>
   2354a:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2354d:	48 63 f0             	movslq %eax,%rsi
   23550:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23554:	b9 00 00 00 00       	mov    $0x0,%ecx
   23559:	ba 01 00 00 00       	mov    $0x1,%edx
   2355e:	48 89 c7             	mov    %rax,%rdi
   23561:	e8 91 ee ff ff       	callq  223f7 <set_reg>
   23566:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   2356a:	83 7d d0 12          	cmpl   $0x12,-0x30(%rbp)
   2356e:	7e da                	jle    2354a <setup_fde+0x6f>
   23570:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23574:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   2357b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2357f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23583:	48 8b 50 30          	mov    0x30(%rax),%rdx
   23587:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2358b:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
   23592:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23596:	48 8b 00             	mov    (%rax),%rax
   23599:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2359d:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   235a4:	00 
   235a5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   235ac:	00 
   235ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   235b1:	4c 8b 40 08          	mov    0x8(%rax),%r8
   235b5:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
   235b9:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   235bd:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   235c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   235c5:	ff 75 f0             	pushq  -0x10(%rbp)
   235c8:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   235cc:	51                   	push   %rcx
   235cd:	4d 89 c1             	mov    %r8,%r9
   235d0:	49 89 f8             	mov    %rdi,%r8
   235d3:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   235da:	48 89 c7             	mov    %rax,%rdi
   235dd:	e8 1c ef ff ff       	callq  224fe <run_cfi_program>
   235e2:	48 83 c4 10          	add    $0x10,%rsp
   235e6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   235e9:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   235ed:	48 89 c7             	mov    %rax,%rdi
   235f0:	e8 e0 ee ff ff       	callq  224d5 <empty_rstate_stack>
   235f5:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   235f9:	79 05                	jns    23600 <setup_fde+0x125>
   235fb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   235fe:	eb 28                	jmp    23628 <setup_fde+0x14d>
   23600:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23604:	48 8d 88 c8 00 00 00 	lea    0xc8(%rax),%rcx
   2360b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2360f:	48 83 c0 10          	add    $0x10,%rax
   23613:	ba b8 00 00 00       	mov    $0xb8,%edx
   23618:	48 89 ce             	mov    %rcx,%rsi
   2361b:	48 89 c7             	mov    %rax,%rdi
   2361e:	e8 a4 00 ff ff       	callq  136c7 <memcpy>
   23623:	b8 00 00 00 00       	mov    $0x0,%eax
   23628:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2362c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   23633:	00 00 
   23635:	74 05                	je     2363c <setup_fde+0x161>
   23637:	e8 50 7e fe ff       	callq  b48c <__stack_chk_fail>
   2363c:	c9                   	leaveq 
   2363d:	c3                   	retq   

000000000002363e <parse_fde>:
   2363e:	55                   	push   %rbp
   2363f:	48 89 e5             	mov    %rsp,%rbp
   23642:	48 83 ec 50          	sub    $0x50,%rsp
   23646:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2364a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2364e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   23652:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23659:	00 00 
   2365b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2365f:	31 c0                	xor    %eax,%eax
   23661:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23665:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   2366c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23670:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23674:	48 8b 40 10          	mov    0x10(%rax),%rax
   23678:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2367c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23680:	48 8b 80 58 01 00 00 	mov    0x158(%rax),%rax
   23687:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2368b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   23692:	00 
   23693:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23697:	4c 8b 48 18          	mov    0x18(%rax),%r9
   2369b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2369f:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   236a6:	d0 e8                	shr    %al
   236a8:	83 e0 01             	and    $0x1,%eax
   236ab:	0f b6 c0             	movzbl %al,%eax
   236ae:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   236b2:	48 89 d7             	mov    %rdx,%rdi
   236b5:	48 29 c7             	sub    %rax,%rdi
   236b8:	4c 8d 45 d8          	lea    -0x28(%rbp),%r8
   236bc:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   236c0:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   236c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   236c8:	ff 75 f0             	pushq  -0x10(%rbp)
   236cb:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   236cf:	51                   	push   %rcx
   236d0:	48 89 f9             	mov    %rdi,%rcx
   236d3:	48 89 c7             	mov    %rax,%rdi
   236d6:	e8 23 ee ff ff       	callq  224fe <run_cfi_program>
   236db:	48 83 c4 10          	add    $0x10,%rsp
   236df:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   236e2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   236e6:	48 89 c7             	mov    %rax,%rdi
   236e9:	e8 e7 ed ff ff       	callq  224d5 <empty_rstate_stack>
   236ee:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   236f2:	79 05                	jns    236f9 <parse_fde+0xbb>
   236f4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   236f7:	eb 05                	jmp    236fe <parse_fde+0xc0>
   236f9:	b8 00 00 00 00       	mov    $0x0,%eax
   236fe:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   23702:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   23709:	00 00 
   2370b:	74 05                	je     23712 <parse_fde+0xd4>
   2370d:	e8 7a 7d fe ff       	callq  b48c <__stack_chk_fail>
   23712:	c9                   	leaveq 
   23713:	c3                   	retq   

0000000000023714 <_ULx86_64_dwarf_flush_rs_cache>:
   23714:	55                   	push   %rbp
   23715:	48 89 e5             	mov    %rsp,%rbp
   23718:	48 83 ec 20          	sub    $0x20,%rsp
   2371c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23720:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23724:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23728:	66 83 f8 07          	cmp    $0x7,%ax
   2372c:	74 0d                	je     2373b <_ULx86_64_dwarf_flush_rs_cache+0x27>
   2372e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23732:	48 8b 40 10          	mov    0x10(%rax),%rax
   23736:	48 85 c0             	test   %rax,%rax
   23739:	75 45                	jne    23780 <_ULx86_64_dwarf_flush_rs_cache+0x6c>
   2373b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2373f:	48 8d 50 30          	lea    0x30(%rax),%rdx
   23743:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23747:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2374b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2374f:	48 8d 90 30 02 00 00 	lea    0x230(%rax),%rdx
   23756:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2375a:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2375e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23762:	48 8d 90 30 5e 00 00 	lea    0x5e30(%rax),%rdx
   23769:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2376d:	48 89 50 28          	mov    %rdx,0x28(%rax)
   23771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23775:	66 c7 40 06 07 00    	movw   $0x7,0x6(%rax)
   2377b:	e9 96 01 00 00       	jmpq   23916 <_ULx86_64_dwarf_flush_rs_cache+0x202>
   23780:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23784:	48 8b 40 10          	mov    0x10(%rax),%rax
   23788:	48 85 c0             	test   %rax,%rax
   2378b:	74 32                	je     237bf <_ULx86_64_dwarf_flush_rs_cache+0xab>
   2378d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23791:	48 8b 40 10          	mov    0x10(%rax),%rax
   23795:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   23799:	48 83 c2 30          	add    $0x30,%rdx
   2379d:	48 39 d0             	cmp    %rdx,%rax
   237a0:	74 1d                	je     237bf <_ULx86_64_dwarf_flush_rs_cache+0xab>
   237a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237a6:	48 8b 40 10          	mov    0x10(%rax),%rax
   237aa:	48 85 c0             	test   %rax,%rax
   237ad:	74 10                	je     237bf <_ULx86_64_dwarf_flush_rs_cache+0xab>
   237af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237b3:	48 8b 40 10          	mov    0x10(%rax),%rax
   237b7:	48 89 c7             	mov    %rax,%rdi
   237ba:	e8 80 d7 fe ff       	callq  10f3f <dlfree>
   237bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237c3:	48 8b 40 20          	mov    0x20(%rax),%rax
   237c7:	48 85 c0             	test   %rax,%rax
   237ca:	74 35                	je     23801 <_ULx86_64_dwarf_flush_rs_cache+0xed>
   237cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237d0:	48 8b 40 20          	mov    0x20(%rax),%rax
   237d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   237d8:	48 81 c2 30 02 00 00 	add    $0x230,%rdx
   237df:	48 39 d0             	cmp    %rdx,%rax
   237e2:	74 1d                	je     23801 <_ULx86_64_dwarf_flush_rs_cache+0xed>
   237e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237e8:	48 8b 40 20          	mov    0x20(%rax),%rax
   237ec:	48 85 c0             	test   %rax,%rax
   237ef:	74 10                	je     23801 <_ULx86_64_dwarf_flush_rs_cache+0xed>
   237f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237f5:	48 8b 40 20          	mov    0x20(%rax),%rax
   237f9:	48 89 c7             	mov    %rax,%rdi
   237fc:	e8 3e d7 fe ff       	callq  10f3f <dlfree>
   23801:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23805:	48 8b 40 28          	mov    0x28(%rax),%rax
   23809:	48 85 c0             	test   %rax,%rax
   2380c:	74 35                	je     23843 <_ULx86_64_dwarf_flush_rs_cache+0x12f>
   2380e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23812:	48 8b 40 28          	mov    0x28(%rax),%rax
   23816:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2381a:	48 81 c2 30 5e 00 00 	add    $0x5e30,%rdx
   23821:	48 39 d0             	cmp    %rdx,%rax
   23824:	74 1d                	je     23843 <_ULx86_64_dwarf_flush_rs_cache+0x12f>
   23826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2382a:	48 8b 40 28          	mov    0x28(%rax),%rax
   2382e:	48 85 c0             	test   %rax,%rax
   23831:	74 10                	je     23843 <_ULx86_64_dwarf_flush_rs_cache+0x12f>
   23833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23837:	48 8b 40 28          	mov    0x28(%rax),%rax
   2383b:	48 89 c7             	mov    %rax,%rdi
   2383e:	e8 fc d6 fe ff       	callq  10f3f <dlfree>
   23843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23847:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2384b:	0f b7 c0             	movzwl %ax,%eax
   2384e:	83 c0 01             	add    $0x1,%eax
   23851:	ba 01 00 00 00       	mov    $0x1,%edx
   23856:	89 c1                	mov    %eax,%ecx
   23858:	d3 e2                	shl    %cl,%edx
   2385a:	89 d0                	mov    %edx,%eax
   2385c:	48 98                	cltq   
   2385e:	48 01 c0             	add    %rax,%rax
   23861:	48 89 c7             	mov    %rax,%rdi
   23864:	e8 df cb fe ff       	callq  10448 <dlmalloc>
   23869:	48 89 c2             	mov    %rax,%rdx
   2386c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23870:	48 89 50 10          	mov    %rdx,0x10(%rax)
   23874:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23878:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2387c:	0f b7 c0             	movzwl %ax,%eax
   2387f:	ba 01 00 00 00       	mov    $0x1,%edx
   23884:	89 c1                	mov    %eax,%ecx
   23886:	d3 e2                	shl    %cl,%edx
   23888:	89 d0                	mov    %edx,%eax
   2388a:	48 98                	cltq   
   2388c:	48 69 c0 b8 00 00 00 	imul   $0xb8,%rax,%rax
   23893:	48 89 c7             	mov    %rax,%rdi
   23896:	e8 ad cb fe ff       	callq  10448 <dlmalloc>
   2389b:	48 89 c2             	mov    %rax,%rdx
   2389e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238a2:	48 89 50 20          	mov    %rdx,0x20(%rax)
   238a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238aa:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   238ae:	0f b7 c0             	movzwl %ax,%eax
   238b1:	ba 01 00 00 00       	mov    $0x1,%edx
   238b6:	89 c1                	mov    %eax,%ecx
   238b8:	d3 e2                	shl    %cl,%edx
   238ba:	89 d0                	mov    %edx,%eax
   238bc:	48 98                	cltq   
   238be:	48 c1 e0 04          	shl    $0x4,%rax
   238c2:	48 89 c7             	mov    %rax,%rdi
   238c5:	e8 7e cb fe ff       	callq  10448 <dlmalloc>
   238ca:	48 89 c2             	mov    %rax,%rdx
   238cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238d1:	48 89 50 28          	mov    %rdx,0x28(%rax)
   238d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238d9:	48 8b 40 10          	mov    0x10(%rax),%rax
   238dd:	48 85 c0             	test   %rax,%rax
   238e0:	74 1a                	je     238fc <_ULx86_64_dwarf_flush_rs_cache+0x1e8>
   238e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238e6:	48 8b 40 20          	mov    0x20(%rax),%rax
   238ea:	48 85 c0             	test   %rax,%rax
   238ed:	74 0d                	je     238fc <_ULx86_64_dwarf_flush_rs_cache+0x1e8>
   238ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238f3:	48 8b 40 28          	mov    0x28(%rax),%rax
   238f7:	48 85 c0             	test   %rax,%rax
   238fa:	75 0a                	jne    23906 <_ULx86_64_dwarf_flush_rs_cache+0x1f2>
   238fc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   23901:	e9 e1 00 00 00       	jmpq   239e7 <_ULx86_64_dwarf_flush_rs_cache+0x2d3>
   23906:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2390a:	0f b7 50 06          	movzwl 0x6(%rax),%edx
   2390e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23912:	66 89 50 08          	mov    %dx,0x8(%rax)
   23916:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2391a:	66 c7 40 04 00 00    	movw   $0x0,0x4(%rax)
   23920:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   23927:	eb 5a                	jmp    23983 <_ULx86_64_dwarf_flush_rs_cache+0x26f>
   23929:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2392d:	48 8b 40 28          	mov    0x28(%rax),%rax
   23931:	8b 55 fc             	mov    -0x4(%rbp),%edx
   23934:	48 63 d2             	movslq %edx,%rdx
   23937:	48 c1 e2 04          	shl    $0x4,%rdx
   2393b:	48 01 d0             	add    %rdx,%rax
   2393e:	66 c7 40 08 ff ff    	movw   $0xffff,0x8(%rax)
   23944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23948:	48 8b 40 28          	mov    0x28(%rax),%rax
   2394c:	8b 55 fc             	mov    -0x4(%rbp),%edx
   2394f:	48 63 d2             	movslq %edx,%rdx
   23952:	48 c1 e2 04          	shl    $0x4,%rdx
   23956:	48 01 d0             	add    %rdx,%rax
   23959:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23960:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23964:	48 8b 40 28          	mov    0x28(%rax),%rax
   23968:	8b 55 fc             	mov    -0x4(%rbp),%edx
   2396b:	48 63 d2             	movslq %edx,%rdx
   2396e:	48 c1 e2 04          	shl    $0x4,%rdx
   23972:	48 01 d0             	add    %rdx,%rax
   23975:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
   23979:	83 e2 fe             	and    $0xfffffffe,%edx
   2397c:	88 50 0c             	mov    %dl,0xc(%rax)
   2397f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   23983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23987:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2398b:	0f b7 c0             	movzwl %ax,%eax
   2398e:	ba 01 00 00 00       	mov    $0x1,%edx
   23993:	89 c1                	mov    %eax,%ecx
   23995:	d3 e2                	shl    %cl,%edx
   23997:	89 d0                	mov    %edx,%eax
   23999:	39 45 fc             	cmp    %eax,-0x4(%rbp)
   2399c:	7c 8b                	jl     23929 <_ULx86_64_dwarf_flush_rs_cache+0x215>
   2399e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   239a5:	eb 1d                	jmp    239c4 <_ULx86_64_dwarf_flush_rs_cache+0x2b0>
   239a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239ab:	48 8b 40 10          	mov    0x10(%rax),%rax
   239af:	8b 55 fc             	mov    -0x4(%rbp),%edx
   239b2:	48 63 d2             	movslq %edx,%rdx
   239b5:	48 01 d2             	add    %rdx,%rdx
   239b8:	48 01 d0             	add    %rdx,%rax
   239bb:	66 c7 00 ff ff       	movw   $0xffff,(%rax)
   239c0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   239c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239c8:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   239cc:	0f b7 c0             	movzwl %ax,%eax
   239cf:	83 c0 01             	add    $0x1,%eax
   239d2:	ba 01 00 00 00       	mov    $0x1,%edx
   239d7:	89 c1                	mov    %eax,%ecx
   239d9:	d3 e2                	shl    %cl,%edx
   239db:	89 d0                	mov    %edx,%eax
   239dd:	39 45 fc             	cmp    %eax,-0x4(%rbp)
   239e0:	7c c5                	jl     239a7 <_ULx86_64_dwarf_flush_rs_cache+0x293>
   239e2:	b8 00 00 00 00       	mov    $0x0,%eax
   239e7:	c9                   	leaveq 
   239e8:	c3                   	retq   

00000000000239e9 <get_rs_cache>:
   239e9:	55                   	push   %rbp
   239ea:	48 89 e5             	mov    %rsp,%rbp
   239ed:	48 83 ec 20          	sub    $0x20,%rsp
   239f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   239f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   239f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239fd:	48 83 c0 58          	add    $0x58,%rax
   23a01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23a05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a09:	8b 40 40             	mov    0x40(%rax),%eax
   23a0c:	89 45 f4             	mov    %eax,-0xc(%rbp)
   23a0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   23a13:	75 0a                	jne    23a1f <get_rs_cache+0x36>
   23a15:	b8 00 00 00 00       	mov    $0x0,%eax
   23a1a:	e9 88 00 00 00       	jmpq   23aa7 <get_rs_cache+0xbe>
   23a1f:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   23a23:	0f 94 c0             	sete   %al
   23a26:	0f b6 c0             	movzbl %al,%eax
   23a29:	48 85 c0             	test   %rax,%rax
   23a2c:	74 21                	je     23a4f <get_rs_cache+0x66>
   23a2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23a32:	48 89 c7             	mov    %rax,%rdi
   23a35:	e8 d1 e5 ff ff       	callq  2200b <mark_as_used>
   23a3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a3e:	48 89 c7             	mov    %rax,%rdi
   23a41:	e8 ab 01 ff ff       	callq  13bf1 <sgx_spin_lock>
   23a46:	85 c0                	test   %eax,%eax
   23a48:	74 05                	je     23a4f <get_rs_cache+0x66>
   23a4a:	e8 8a 7b 01 00       	callq  3b5d9 <abort>
   23a4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a53:	8b 50 44             	mov    0x44(%rax),%edx
   23a56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a5a:	8b 40 18             	mov    0x18(%rax),%eax
   23a5d:	39 c2                	cmp    %eax,%edx
   23a5f:	75 0d                	jne    23a6e <get_rs_cache+0x85>
   23a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a65:	48 8b 40 10          	mov    0x10(%rax),%rax
   23a69:	48 85 c0             	test   %rax,%rax
   23a6c:	75 35                	jne    23aa3 <get_rs_cache+0xba>
   23a6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a72:	0f b7 50 5e          	movzwl 0x5e(%rax),%edx
   23a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a7a:	66 89 50 06          	mov    %dx,0x6(%rax)
   23a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a82:	48 89 c7             	mov    %rax,%rdi
   23a85:	e8 8a fc ff ff       	callq  23714 <_ULx86_64_dwarf_flush_rs_cache>
   23a8a:	85 c0                	test   %eax,%eax
   23a8c:	79 07                	jns    23a95 <get_rs_cache+0xac>
   23a8e:	b8 00 00 00 00       	mov    $0x0,%eax
   23a93:	eb 12                	jmp    23aa7 <get_rs_cache+0xbe>
   23a95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a99:	8b 50 44             	mov    0x44(%rax),%edx
   23a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23aa0:	89 50 18             	mov    %edx,0x18(%rax)
   23aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23aa7:	c9                   	leaveq 
   23aa8:	c3                   	retq   

0000000000023aa9 <put_rs_cache>:
   23aa9:	55                   	push   %rbp
   23aaa:	48 89 e5             	mov    %rsp,%rbp
   23aad:	48 83 ec 20          	sub    $0x20,%rsp
   23ab1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23ab5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23ab9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   23abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ac1:	8b 40 40             	mov    0x40(%rax),%eax
   23ac4:	85 c0                	test   %eax,%eax
   23ac6:	75 1f                	jne    23ae7 <put_rs_cache+0x3e>
   23ac8:	48 8d 0d 01 99 01 00 	lea    0x19901(%rip),%rcx        # 3d3d0 <__PRETTY_FUNCTION__.5180>
   23acf:	ba 77 02 00 00       	mov    $0x277,%edx
   23ad4:	48 8d 35 09 95 01 00 	lea    0x19509(%rip),%rsi        # 3cfe4 <__PRETTY_FUNCTION__.4821+0x4c>
   23adb:	48 8d 3d 1e 95 01 00 	lea    0x1951e(%rip),%rdi        # 3d000 <__PRETTY_FUNCTION__.4821+0x68>
   23ae2:	e8 08 1a 00 00       	callq  254ef <__assert_fail>
   23ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23aeb:	8b 40 40             	mov    0x40(%rax),%eax
   23aee:	83 f8 01             	cmp    $0x1,%eax
   23af1:	0f 94 c0             	sete   %al
   23af4:	0f b6 c0             	movzbl %al,%eax
   23af7:	48 85 c0             	test   %rax,%rax
   23afa:	74 1f                	je     23b1b <put_rs_cache+0x72>
   23afc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23b00:	48 89 c7             	mov    %rax,%rdi
   23b03:	e8 50 01 ff ff       	callq  13c58 <sgx_spin_unlock>
   23b08:	85 c0                	test   %eax,%eax
   23b0a:	74 05                	je     23b11 <put_rs_cache+0x68>
   23b0c:	e8 c8 7a 01 00       	callq  3b5d9 <abort>
   23b11:	bf 00 00 00 00       	mov    $0x0,%edi
   23b16:	e8 f0 e4 ff ff       	callq  2200b <mark_as_used>
   23b1b:	90                   	nop
   23b1c:	c9                   	leaveq 
   23b1d:	c3                   	retq   

0000000000023b1e <hash>:
   23b1e:	55                   	push   %rbp
   23b1f:	48 89 e5             	mov    %rsp,%rbp
   23b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23b26:	89 f0                	mov    %esi,%eax
   23b28:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
   23b2c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   23b30:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   23b37:	79 37 9e 
   23b3a:	48 0f af d0          	imul   %rax,%rdx
   23b3e:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
   23b42:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   23b47:	29 c1                	sub    %eax,%ecx
   23b49:	89 c8                	mov    %ecx,%eax
   23b4b:	89 c1                	mov    %eax,%ecx
   23b4d:	48 d3 ea             	shr    %cl,%rdx
   23b50:	48 89 d0             	mov    %rdx,%rax
   23b53:	5d                   	pop    %rbp
   23b54:	c3                   	retq   

0000000000023b55 <cache_match>:
   23b55:	55                   	push   %rbp
   23b56:	48 89 e5             	mov    %rsp,%rbp
   23b59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23b5d:	89 f0                	mov    %esi,%eax
   23b5f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   23b63:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
   23b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b6b:	48 8b 40 28          	mov    0x28(%rax),%rax
   23b6f:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
   23b73:	48 c1 e2 04          	shl    $0x4,%rdx
   23b77:	48 01 d0             	add    %rdx,%rax
   23b7a:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
   23b7e:	83 e0 01             	and    $0x1,%eax
   23b81:	84 c0                	test   %al,%al
   23b83:	74 23                	je     23ba8 <cache_match+0x53>
   23b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b89:	48 8b 40 28          	mov    0x28(%rax),%rax
   23b8d:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
   23b91:	48 c1 e2 04          	shl    $0x4,%rdx
   23b95:	48 01 d0             	add    %rdx,%rax
   23b98:	48 8b 00             	mov    (%rax),%rax
   23b9b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   23b9f:	75 07                	jne    23ba8 <cache_match+0x53>
   23ba1:	b8 01 00 00 00       	mov    $0x1,%eax
   23ba6:	eb 05                	jmp    23bad <cache_match+0x58>
   23ba8:	b8 00 00 00 00       	mov    $0x0,%eax
   23bad:	48 98                	cltq   
   23baf:	5d                   	pop    %rbp
   23bb0:	c3                   	retq   

0000000000023bb1 <rs_lookup>:
   23bb1:	55                   	push   %rbp
   23bb2:	48 89 e5             	mov    %rsp,%rbp
   23bb5:	53                   	push   %rbx
   23bb6:	48 83 ec 20          	sub    $0x20,%rsp
   23bba:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
   23bbe:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   23bc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23bc6:	48 8b 40 18          	mov    0x18(%rax),%rax
   23bca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23bce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23bd2:	0f b7 80 a0 01 00 00 	movzwl 0x1a0(%rax),%eax
   23bd9:	66 85 c0             	test   %ax,%ax
   23bdc:	7e 48                	jle    23c26 <rs_lookup+0x75>
   23bde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23be2:	0f b7 80 a0 01 00 00 	movzwl 0x1a0(%rax),%eax
   23be9:	83 e8 01             	sub    $0x1,%eax
   23bec:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
   23bf0:	0f b7 4d ee          	movzwl -0x12(%rbp),%ecx
   23bf4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23bf8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23bfc:	89 ce                	mov    %ecx,%esi
   23bfe:	48 89 c7             	mov    %rax,%rdi
   23c01:	e8 4f ff ff ff       	callq  23b55 <cache_match>
   23c06:	48 85 c0             	test   %rax,%rax
   23c09:	74 1b                	je     23c26 <rs_lookup+0x75>
   23c0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c0f:	48 8b 50 20          	mov    0x20(%rax),%rdx
   23c13:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
   23c17:	48 69 c0 b8 00 00 00 	imul   $0xb8,%rax,%rax
   23c1e:	48 01 d0             	add    %rdx,%rax
   23c21:	e9 a4 00 00 00       	jmpq   23cca <rs_lookup+0x119>
   23c26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c2a:	48 8b 58 10          	mov    0x10(%rax),%rbx
   23c2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c32:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23c36:	0f b7 d0             	movzwl %ax,%edx
   23c39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23c3d:	89 d6                	mov    %edx,%esi
   23c3f:	48 89 c7             	mov    %rax,%rdi
   23c42:	e8 d7 fe ff ff       	callq  23b1e <hash>
   23c47:	0f b6 c0             	movzbl %al,%eax
   23c4a:	48 01 c0             	add    %rax,%rax
   23c4d:	48 01 d8             	add    %rbx,%rax
   23c50:	0f b7 00             	movzwl (%rax),%eax
   23c53:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
   23c57:	eb 4e                	jmp    23ca7 <rs_lookup+0xf6>
   23c59:	0f b7 4d ee          	movzwl -0x12(%rbp),%ecx
   23c5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23c61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c65:	89 ce                	mov    %ecx,%esi
   23c67:	48 89 c7             	mov    %rax,%rdi
   23c6a:	e8 e6 fe ff ff       	callq  23b55 <cache_match>
   23c6f:	48 85 c0             	test   %rax,%rax
   23c72:	74 18                	je     23c8c <rs_lookup+0xdb>
   23c74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c78:	48 8b 50 20          	mov    0x20(%rax),%rdx
   23c7c:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
   23c80:	48 69 c0 b8 00 00 00 	imul   $0xb8,%rax,%rax
   23c87:	48 01 d0             	add    %rdx,%rax
   23c8a:	eb 3e                	jmp    23cca <rs_lookup+0x119>
   23c8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c90:	48 8b 40 28          	mov    0x28(%rax),%rax
   23c94:	0f b7 55 ee          	movzwl -0x12(%rbp),%edx
   23c98:	48 c1 e2 04          	shl    $0x4,%rdx
   23c9c:	48 01 d0             	add    %rdx,%rax
   23c9f:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   23ca3:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
   23ca7:	0f b7 55 ee          	movzwl -0x12(%rbp),%edx
   23cab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23caf:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23cb3:	0f b7 c0             	movzwl %ax,%eax
   23cb6:	be 01 00 00 00       	mov    $0x1,%esi
   23cbb:	89 c1                	mov    %eax,%ecx
   23cbd:	d3 e6                	shl    %cl,%esi
   23cbf:	89 f0                	mov    %esi,%eax
   23cc1:	39 c2                	cmp    %eax,%edx
   23cc3:	7c 94                	jl     23c59 <rs_lookup+0xa8>
   23cc5:	b8 00 00 00 00       	mov    $0x0,%eax
   23cca:	48 83 c4 20          	add    $0x20,%rsp
   23cce:	5b                   	pop    %rbx
   23ccf:	5d                   	pop    %rbp
   23cd0:	c3                   	retq   

0000000000023cd1 <rs_new>:
   23cd1:	55                   	push   %rbp
   23cd2:	48 89 e5             	mov    %rsp,%rbp
   23cd5:	53                   	push   %rbx
   23cd6:	48 83 ec 28          	sub    $0x28,%rsp
   23cda:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   23cde:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   23ce2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23ce6:	0f b7 40 04          	movzwl 0x4(%rax),%eax
   23cea:	66 89 45 e6          	mov    %ax,-0x1a(%rbp)
   23cee:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
   23cf2:	83 c0 01             	add    $0x1,%eax
   23cf5:	89 c2                	mov    %eax,%edx
   23cf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23cfb:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23cff:	0f b7 c0             	movzwl %ax,%eax
   23d02:	be 01 00 00 00       	mov    $0x1,%esi
   23d07:	89 c1                	mov    %eax,%ecx
   23d09:	d3 e6                	shl    %cl,%esi
   23d0b:	89 f0                	mov    %esi,%eax
   23d0d:	83 e8 01             	sub    $0x1,%eax
   23d10:	21 d0                	and    %edx,%eax
   23d12:	89 c2                	mov    %eax,%edx
   23d14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23d18:	66 89 50 04          	mov    %dx,0x4(%rax)
   23d1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23d20:	48 8b 40 28          	mov    0x28(%rax),%rax
   23d24:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
   23d28:	48 c1 e2 04          	shl    $0x4,%rdx
   23d2c:	48 01 d0             	add    %rdx,%rax
   23d2f:	48 8b 00             	mov    (%rax),%rax
   23d32:	48 85 c0             	test   %rax,%rax
   23d35:	0f 84 ba 00 00 00    	je     23df5 <rs_new+0x124>
   23d3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23d3f:	48 8b 58 10          	mov    0x10(%rax),%rbx
   23d43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23d47:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23d4b:	0f b7 d0             	movzwl %ax,%edx
   23d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23d52:	48 8b 40 28          	mov    0x28(%rax),%rax
   23d56:	0f b7 4d e6          	movzwl -0x1a(%rbp),%ecx
   23d5a:	48 c1 e1 04          	shl    $0x4,%rcx
   23d5e:	48 01 c8             	add    %rcx,%rax
   23d61:	48 8b 00             	mov    (%rax),%rax
   23d64:	89 d6                	mov    %edx,%esi
   23d66:	48 89 c7             	mov    %rax,%rdi
   23d69:	e8 b0 fd ff ff       	callq  23b1e <hash>
   23d6e:	0f b6 c0             	movzbl %al,%eax
   23d71:	48 01 c0             	add    %rax,%rax
   23d74:	48 01 d8             	add    %rbx,%rax
   23d77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   23d7b:	eb 54                	jmp    23dd1 <rs_new+0x100>
   23d7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23d81:	0f b7 00             	movzwl (%rax),%eax
   23d84:	66 39 45 e6          	cmp    %ax,-0x1a(%rbp)
   23d88:	75 26                	jne    23db0 <rs_new+0xdf>
   23d8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23d8e:	48 8b 50 28          	mov    0x28(%rax),%rdx
   23d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23d96:	0f b7 00             	movzwl (%rax),%eax
   23d99:	0f b7 c0             	movzwl %ax,%eax
   23d9c:	48 c1 e0 04          	shl    $0x4,%rax
   23da0:	48 01 d0             	add    %rdx,%rax
   23da3:	0f b7 50 08          	movzwl 0x8(%rax),%edx
   23da7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23dab:	66 89 10             	mov    %dx,(%rax)
   23dae:	eb 45                	jmp    23df5 <rs_new+0x124>
   23db0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23db4:	48 8b 50 28          	mov    0x28(%rax),%rdx
   23db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23dbc:	0f b7 00             	movzwl (%rax),%eax
   23dbf:	0f b7 c0             	movzwl %ax,%eax
   23dc2:	48 c1 e0 04          	shl    $0x4,%rax
   23dc6:	48 01 d0             	add    %rdx,%rax
   23dc9:	48 83 c0 08          	add    $0x8,%rax
   23dcd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   23dd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23dd5:	0f b7 00             	movzwl (%rax),%eax
   23dd8:	0f b7 d0             	movzwl %ax,%edx
   23ddb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23ddf:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23de3:	0f b7 c0             	movzwl %ax,%eax
   23de6:	be 01 00 00 00       	mov    $0x1,%esi
   23deb:	89 c1                	mov    %eax,%ecx
   23ded:	d3 e6                	shl    %cl,%esi
   23def:	89 f0                	mov    %esi,%eax
   23df1:	39 c2                	cmp    %eax,%edx
   23df3:	7c 88                	jl     23d7d <rs_new+0xac>
   23df5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23df9:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   23dfd:	0f b7 d0             	movzwl %ax,%edx
   23e00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23e04:	48 8b 40 18          	mov    0x18(%rax),%rax
   23e08:	89 d6                	mov    %edx,%esi
   23e0a:	48 89 c7             	mov    %rax,%rdi
   23e0d:	e8 0c fd ff ff       	callq  23b1e <hash>
   23e12:	88 45 e5             	mov    %al,-0x1b(%rbp)
   23e15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e19:	48 8b 40 10          	mov    0x10(%rax),%rax
   23e1d:	0f b6 55 e5          	movzbl -0x1b(%rbp),%edx
   23e21:	48 01 d2             	add    %rdx,%rdx
   23e24:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
   23e28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e2c:	48 8b 40 28          	mov    0x28(%rax),%rax
   23e30:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
   23e34:	48 c1 e2 04          	shl    $0x4,%rdx
   23e38:	48 01 c2             	add    %rax,%rdx
   23e3b:	0f b7 01             	movzwl (%rcx),%eax
   23e3e:	66 89 42 08          	mov    %ax,0x8(%rdx)
   23e42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e46:	48 8b 40 10          	mov    0x10(%rax),%rax
   23e4a:	0f b6 55 e5          	movzbl -0x1b(%rbp),%edx
   23e4e:	48 01 d2             	add    %rdx,%rdx
   23e51:	48 01 c2             	add    %rax,%rdx
   23e54:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
   23e58:	66 89 02             	mov    %ax,(%rdx)
   23e5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e5f:	48 8b 40 28          	mov    0x28(%rax),%rax
   23e63:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
   23e67:	48 c1 e2 04          	shl    $0x4,%rdx
   23e6b:	48 01 c2             	add    %rax,%rdx
   23e6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23e72:	48 8b 40 18          	mov    0x18(%rax),%rax
   23e76:	48 89 02             	mov    %rax,(%rdx)
   23e79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e7d:	48 8b 40 28          	mov    0x28(%rax),%rax
   23e81:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
   23e85:	48 c1 e2 04          	shl    $0x4,%rdx
   23e89:	48 01 d0             	add    %rdx,%rax
   23e8c:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
   23e90:	83 ca 01             	or     $0x1,%edx
   23e93:	88 50 0c             	mov    %dl,0xc(%rax)
   23e96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23e9a:	48 89 c7             	mov    %rax,%rdi
   23e9d:	e8 ce 4a 00 00       	callq  28970 <_ULx86_64_cache_frame>
   23ea2:	89 c1                	mov    %eax,%ecx
   23ea4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23ea8:	48 8b 40 28          	mov    0x28(%rax),%rax
   23eac:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
   23eb0:	48 c1 e2 04          	shl    $0x4,%rdx
   23eb4:	48 01 c2             	add    %rax,%rdx
   23eb7:	89 c8                	mov    %ecx,%eax
   23eb9:	83 e0 01             	and    $0x1,%eax
   23ebc:	83 e0 01             	and    $0x1,%eax
   23ebf:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   23ec2:	0f b6 42 0c          	movzbl 0xc(%rdx),%eax
   23ec6:	83 e0 fd             	and    $0xfffffffd,%eax
   23ec9:	09 c8                	or     %ecx,%eax
   23ecb:	88 42 0c             	mov    %al,0xc(%rdx)
   23ece:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23ed2:	48 8b 50 20          	mov    0x20(%rax),%rdx
   23ed6:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
   23eda:	48 69 c0 b8 00 00 00 	imul   $0xb8,%rax,%rax
   23ee1:	48 01 d0             	add    %rdx,%rax
   23ee4:	48 83 c4 28          	add    $0x28,%rsp
   23ee8:	5b                   	pop    %rbx
   23ee9:	5d                   	pop    %rbp
   23eea:	c3                   	retq   

0000000000023eeb <create_state_record_for>:
   23eeb:	55                   	push   %rbp
   23eec:	48 89 e5             	mov    %rsp,%rbp
   23eef:	48 83 ec 30          	sub    $0x30,%rsp
   23ef3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23ef7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23efb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   23eff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23f03:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
   23f09:	85 c0                	test   %eax,%eax
   23f0b:	74 46                	je     23f53 <create_state_record_for+0x68>
   23f0d:	85 c0                	test   %eax,%eax
   23f0f:	78 5e                	js     23f6f <create_state_record_for+0x84>
   23f11:	83 f8 02             	cmp    $0x2,%eax
   23f14:	7f 59                	jg     23f6f <create_state_record_for+0x84>
   23f16:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23f1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23f1e:	48 89 d6             	mov    %rdx,%rsi
   23f21:	48 89 c7             	mov    %rax,%rdi
   23f24:	e8 b2 f5 ff ff       	callq  234db <setup_fde>
   23f29:	89 45 fc             	mov    %eax,-0x4(%rbp)
   23f2c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   23f30:	79 05                	jns    23f37 <create_state_record_for+0x4c>
   23f32:	8b 45 fc             	mov    -0x4(%rbp),%eax
   23f35:	eb 42                	jmp    23f79 <create_state_record_for+0x8e>
   23f37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23f3b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   23f3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23f43:	48 89 ce             	mov    %rcx,%rsi
   23f46:	48 89 c7             	mov    %rax,%rdi
   23f49:	e8 f0 f6 ff ff       	callq  2363e <parse_fde>
   23f4e:	89 45 fc             	mov    %eax,-0x4(%rbp)
   23f51:	eb 23                	jmp    23f76 <create_state_record_for+0x8b>
   23f53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23f57:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   23f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23f5f:	48 89 ce             	mov    %rcx,%rsi
   23f62:	48 89 c7             	mov    %rax,%rdi
   23f65:	e8 c5 f4 ff ff       	callq  2342f <parse_dynamic>
   23f6a:	89 45 fc             	mov    %eax,-0x4(%rbp)
   23f6d:	eb 07                	jmp    23f76 <create_state_record_for+0x8b>
   23f6f:	c7 45 fc f8 ff ff ff 	movl   $0xfffffff8,-0x4(%rbp)
   23f76:	8b 45 fc             	mov    -0x4(%rbp),%eax
   23f79:	c9                   	leaveq 
   23f7a:	c3                   	retq   

0000000000023f7b <eval_location_expr>:
   23f7b:	55                   	push   %rbp
   23f7c:	48 89 e5             	mov    %rsp,%rbp
   23f7f:	53                   	push   %rbx
   23f80:	48 83 ec 58          	sub    $0x58,%rsp
   23f84:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   23f88:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   23f8c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   23f90:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   23f94:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   23f98:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
   23f9c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23fa3:	00 00 
   23fa5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   23fa9:	31 c0                	xor    %eax,%eax
   23fab:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
   23faf:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   23fb3:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   23fb7:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   23fbb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23fbf:	49 89 f8             	mov    %rdi,%r8
   23fc2:	48 89 c7             	mov    %rax,%rdi
   23fc5:	e8 2d e2 ff ff       	callq  221f7 <dwarf_read_uleb128>
   23fca:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   23fcd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   23fd1:	79 08                	jns    23fdb <eval_location_expr+0x60>
   23fd3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   23fd6:	e9 a1 00 00 00       	jmpq   2407c <eval_location_expr+0x101>
   23fdb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   23fdf:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
   23fe3:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   23fe7:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   23feb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23fef:	49 89 f8             	mov    %rdi,%r8
   23ff2:	48 89 c7             	mov    %rax,%rdi
   23ff5:	e8 6c 6a 00 00       	callq  2aa66 <_ULx86_64_dwarf_eval_expr>
   23ffa:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   23ffd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   24001:	79 05                	jns    24008 <eval_location_expr+0x8d>
   24003:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   24006:	eb 74                	jmp    2407c <eval_location_expr+0x101>
   24008:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2400b:	85 c0                	test   %eax,%eax
   2400d:	74 51                	je     24060 <eval_location_expr+0xe5>
   2400f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   24013:	48 83 f8 10          	cmp    $0x10,%rax
   24017:	77 14                	ja     2402d <eval_location_expr+0xb2>
   24019:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2401d:	48 8d 05 cc 9a 01 00 	lea    0x19acc(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   24024:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   24028:	0f b6 d8             	movzbl %al,%ebx
   2402b:	eb 05                	jmp    24032 <eval_location_expr+0xb7>
   2402d:	bb 00 00 00 00       	mov    $0x0,%ebx
   24032:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   24036:	48 89 c7             	mov    %rax,%rdi
   24039:	e8 d8 df ff ff       	callq  22016 <dwarf_get_uc>
   2403e:	89 de                	mov    %ebx,%esi
   24040:	48 89 c7             	mov    %rax,%rdi
   24043:	e8 ef 49 00 00       	callq  28a37 <_ULx86_64_r_uc_addr>
   24048:	48 89 c2             	mov    %rax,%rdx
   2404b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2404f:	48 89 10             	mov    %rdx,(%rax)
   24052:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   24056:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   2405d:	00 
   2405e:	eb 17                	jmp    24077 <eval_location_expr+0xfc>
   24060:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   24064:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   24068:	48 89 10             	mov    %rdx,(%rax)
   2406b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2406f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   24076:	00 
   24077:	b8 00 00 00 00       	mov    $0x0,%eax
   2407c:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   24080:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   24087:	00 00 
   24089:	74 05                	je     24090 <eval_location_expr+0x115>
   2408b:	e8 fc 73 fe ff       	callq  b48c <__stack_chk_fail>
   24090:	48 83 c4 58          	add    $0x58,%rsp
   24094:	5b                   	pop    %rbx
   24095:	5d                   	pop    %rbp
   24096:	c3                   	retq   

0000000000024097 <apply_reg_state>:
   24097:	55                   	push   %rbp
   24098:	48 89 e5             	mov    %rsp,%rbp
   2409b:	53                   	push   %rbx
   2409c:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   240a3:	48 89 bd 68 fe ff ff 	mov    %rdi,-0x198(%rbp)
   240aa:	48 89 b5 60 fe ff ff 	mov    %rsi,-0x1a0(%rbp)
   240b1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   240b8:	00 00 
   240ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   240be:	31 c0                	xor    %eax,%eax
   240c0:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   240c7:	48 8b 40 18          	mov    0x18(%rax),%rax
   240cb:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
   240d2:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   240d9:	48 8b 40 10          	mov    0x10(%rax),%rax
   240dd:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   240e4:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   240eb:	48 8b 40 08          	mov    0x8(%rax),%rax
   240ef:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
   240f6:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   240fd:	48 8b 00             	mov    (%rax),%rax
   24100:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
   24107:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   2410e:	48 89 c7             	mov    %rax,%rdi
   24111:	e8 f6 4b 00 00       	callq  28d0c <_Ux86_64_get_accessors>
   24116:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
   2411d:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24124:	0f b6 40 19          	movzbl 0x19(%rax),%eax
   24128:	3c 03                	cmp    $0x3,%al
   2412a:	0f 85 d4 00 00 00    	jne    24204 <apply_reg_state+0x16d>
   24130:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24137:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   2413e:	48 83 f8 07          	cmp    $0x7,%rax
   24142:	75 23                	jne    24167 <apply_reg_state+0xd0>
   24144:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   2414b:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
   2414f:	3c 01                	cmp    $0x1,%al
   24151:	75 14                	jne    24167 <apply_reg_state+0xd0>
   24153:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   2415a:	48 8b 40 10          	mov    0x10(%rax),%rax
   2415e:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
   24165:	eb 79                	jmp    241e0 <apply_reg_state+0x149>
   24167:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   2416e:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   24175:	48 83 f8 10          	cmp    $0x10,%rax
   24179:	77 1e                	ja     24199 <apply_reg_state+0x102>
   2417b:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24182:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
   24189:	48 8d 05 60 99 01 00 	lea    0x19960(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   24190:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   24194:	0f b6 c0             	movzbl %al,%eax
   24197:	eb 05                	jmp    2419e <apply_reg_state+0x107>
   24199:	b8 00 00 00 00       	mov    $0x0,%eax
   2419e:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
   241a5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   241ac:	89 c1                	mov    %eax,%ecx
   241ae:	48 8d 95 78 fe ff ff 	lea    -0x188(%rbp),%rdx
   241b5:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   241bc:	89 ce                	mov    %ecx,%esi
   241be:	48 89 c7             	mov    %rax,%rdi
   241c1:	e8 af 4b 00 00       	callq  28d75 <_ULx86_64_get_reg>
   241c6:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
   241cc:	83 bd 74 fe ff ff 00 	cmpl   $0x0,-0x18c(%rbp)
   241d3:	79 0b                	jns    241e0 <apply_reg_state+0x149>
   241d5:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   241db:	e9 65 05 00 00       	jmpq   24745 <apply_reg_state+0x6ae>
   241e0:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   241e7:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
   241ee:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   241f5:	48 01 d0             	add    %rdx,%rax
   241f8:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
   241ff:	e9 bc 00 00 00       	jmpq   242c0 <apply_reg_state+0x229>
   24204:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   2420b:	0f b6 40 19          	movzbl 0x19(%rax),%eax
   2420f:	3c 04                	cmp    $0x4,%al
   24211:	74 1f                	je     24232 <apply_reg_state+0x19b>
   24213:	48 8d 0d 86 91 01 00 	lea    0x19186(%rip),%rcx        # 3d3a0 <__PRETTY_FUNCTION__.5250>
   2421a:	ba 25 03 00 00       	mov    $0x325,%edx
   2421f:	48 8d 35 be 8d 01 00 	lea    0x18dbe(%rip),%rsi        # 3cfe4 <__PRETTY_FUNCTION__.4821+0x4c>
   24226:	48 8d 3d fb 8d 01 00 	lea    0x18dfb(%rip),%rdi        # 3d028 <__PRETTY_FUNCTION__.4821+0x90>
   2422d:	e8 bd 12 00 00       	callq  254ef <__assert_fail>
   24232:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24239:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   24240:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   24247:	4c 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%r8
   2424e:	48 8d bd c0 fe ff ff 	lea    -0x140(%rbp),%rdi
   24255:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
   2425c:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   24263:	48 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%rsi
   2426a:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24271:	4d 89 c1             	mov    %r8,%r9
   24274:	49 89 f8             	mov    %rdi,%r8
   24277:	48 89 c7             	mov    %rax,%rdi
   2427a:	e8 fc fc ff ff       	callq  23f7b <eval_location_expr>
   2427f:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
   24285:	83 bd 74 fe ff ff 00 	cmpl   $0x0,-0x18c(%rbp)
   2428c:	79 0b                	jns    24299 <apply_reg_state+0x202>
   2428e:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   24294:	e9 ac 04 00 00       	jmpq   24745 <apply_reg_state+0x6ae>
   24299:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   242a0:	83 e0 02             	and    $0x2,%eax
   242a3:	48 85 c0             	test   %rax,%rax
   242a6:	74 0a                	je     242b2 <apply_reg_state+0x21b>
   242a8:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   242ad:	e9 93 04 00 00       	jmpq   24745 <apply_reg_state+0x6ae>
   242b2:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
   242b9:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
   242c0:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   242c7:	48 8d 48 40          	lea    0x40(%rax),%rcx
   242cb:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   242d2:	ba 10 01 00 00       	mov    $0x110,%edx
   242d7:	48 89 ce             	mov    %rcx,%rsi
   242da:	48 89 c7             	mov    %rax,%rdi
   242dd:	e8 e5 f3 fe ff       	callq  136c7 <memcpy>
   242e2:	c7 85 70 fe ff ff 00 	movl   $0x0,-0x190(%rbp)
   242e9:	00 00 00 
   242ec:	e9 05 03 00 00       	jmpq   245f6 <apply_reg_state+0x55f>
   242f1:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
   242f8:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   242fe:	48 98                	cltq   
   24300:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
   24305:	0f be c0             	movsbl %al,%eax
   24308:	83 f8 05             	cmp    $0x5,%eax
   2430b:	0f 87 de 02 00 00    	ja     245ef <apply_reg_state+0x558>
   24311:	89 c0                	mov    %eax,%eax
   24313:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2431a:	00 
   2431b:	48 8d 05 56 90 01 00 	lea    0x19056(%rip),%rax        # 3d378 <__PRETTY_FUNCTION__.4821+0x3e0>
   24322:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   24325:	48 63 d0             	movslq %eax,%rdx
   24328:	48 8d 05 49 90 01 00 	lea    0x19049(%rip),%rax        # 3d378 <__PRETTY_FUNCTION__.4821+0x3e0>
   2432f:	48 01 d0             	add    %rdx,%rax
   24332:	ff e0                	jmpq   *%rax
   24334:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   2433a:	48 98                	cltq   
   2433c:	48 c1 e0 04          	shl    $0x4,%rax
   24340:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   24344:	48 01 d8             	add    %rbx,%rax
   24347:	48 2d 20 01 00 00    	sub    $0x120,%rax
   2434d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   24354:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   2435a:	48 98                	cltq   
   2435c:	48 c1 e0 04          	shl    $0x4,%rax
   24360:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   24364:	48 01 d8             	add    %rbx,%rax
   24367:	48 2d 18 01 00 00    	sub    $0x118,%rax
   2436d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   24374:	e9 76 02 00 00       	jmpq   245ef <apply_reg_state+0x558>
   24379:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24380:	8b 95 70 fe ff ff    	mov    -0x190(%rbp),%edx
   24386:	48 63 d2             	movslq %edx,%rdx
   24389:	48 83 c2 02          	add    $0x2,%rdx
   2438d:	48 8b 54 d0 10       	mov    0x10(%rax,%rdx,8),%rdx
   24392:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   24399:	48 01 c2             	add    %rax,%rdx
   2439c:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   243a2:	48 98                	cltq   
   243a4:	48 c1 e0 04          	shl    $0x4,%rax
   243a8:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   243ac:	48 01 d8             	add    %rbx,%rax
   243af:	48 2d 20 01 00 00    	sub    $0x120,%rax
   243b5:	48 89 10             	mov    %rdx,(%rax)
   243b8:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   243be:	48 98                	cltq   
   243c0:	48 c1 e0 04          	shl    $0x4,%rax
   243c4:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   243c8:	48 01 d8             	add    %rbx,%rax
   243cb:	48 2d 18 01 00 00    	sub    $0x118,%rax
   243d1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   243d8:	e9 12 02 00 00       	jmpq   245ef <apply_reg_state+0x558>
   243dd:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   243e4:	8b 95 70 fe ff ff    	mov    -0x190(%rbp),%edx
   243ea:	48 63 d2             	movslq %edx,%rdx
   243ed:	48 83 c2 02          	add    $0x2,%rdx
   243f1:	48 8b 44 d0 10       	mov    0x10(%rax,%rdx,8),%rax
   243f6:	48 83 f8 10          	cmp    $0x10,%rax
   243fa:	77 29                	ja     24425 <apply_reg_state+0x38e>
   243fc:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24403:	8b 95 70 fe ff ff    	mov    -0x190(%rbp),%edx
   24409:	48 63 d2             	movslq %edx,%rdx
   2440c:	48 83 c2 02          	add    $0x2,%rdx
   24410:	48 8b 54 d0 10       	mov    0x10(%rax,%rdx,8),%rdx
   24415:	48 8d 05 d4 96 01 00 	lea    0x196d4(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   2441c:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   24420:	0f b6 d8             	movzbl %al,%ebx
   24423:	eb 05                	jmp    2442a <apply_reg_state+0x393>
   24425:	bb 00 00 00 00       	mov    $0x0,%ebx
   2442a:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24431:	48 89 c7             	mov    %rax,%rdi
   24434:	e8 dd db ff ff       	callq  22016 <dwarf_get_uc>
   24439:	89 de                	mov    %ebx,%esi
   2443b:	48 89 c7             	mov    %rax,%rdi
   2443e:	e8 f4 45 00 00       	callq  28a37 <_ULx86_64_r_uc_addr>
   24443:	48 89 c2             	mov    %rax,%rdx
   24446:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   2444c:	48 98                	cltq   
   2444e:	48 c1 e0 04          	shl    $0x4,%rax
   24452:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   24456:	48 01 d8             	add    %rbx,%rax
   24459:	48 2d 20 01 00 00    	sub    $0x120,%rax
   2445f:	48 89 10             	mov    %rdx,(%rax)
   24462:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   24468:	48 98                	cltq   
   2446a:	48 c1 e0 04          	shl    $0x4,%rax
   2446e:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   24472:	48 01 d8             	add    %rbx,%rax
   24475:	48 2d 18 01 00 00    	sub    $0x118,%rax
   2447b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   24482:	e9 68 01 00 00       	jmpq   245ef <apply_reg_state+0x558>
   24487:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   2448e:	8b 95 70 fe ff ff    	mov    -0x190(%rbp),%edx
   24494:	48 63 d2             	movslq %edx,%rdx
   24497:	48 83 c2 02          	add    $0x2,%rdx
   2449b:	48 8b 44 d0 10       	mov    0x10(%rax,%rdx,8),%rax
   244a0:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   244a7:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   244ad:	48 98                	cltq   
   244af:	48 c1 e0 04          	shl    $0x4,%rax
   244b3:	48 89 c2             	mov    %rax,%rdx
   244b6:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   244bd:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
   244c1:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
   244c8:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
   244cf:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   244d6:	48 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%rsi
   244dd:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   244e4:	49 89 f9             	mov    %rdi,%r9
   244e7:	48 89 c7             	mov    %rax,%rdi
   244ea:	e8 8c fa ff ff       	callq  23f7b <eval_location_expr>
   244ef:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
   244f5:	83 bd 74 fe ff ff 00 	cmpl   $0x0,-0x18c(%rbp)
   244fc:	0f 89 ec 00 00 00    	jns    245ee <apply_reg_state+0x557>
   24502:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   24508:	e9 38 02 00 00       	jmpq   24745 <apply_reg_state+0x6ae>
   2450d:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   24514:	8b 95 70 fe ff ff    	mov    -0x190(%rbp),%edx
   2451a:	48 63 d2             	movslq %edx,%rdx
   2451d:	48 83 c2 02          	add    $0x2,%rdx
   24521:	48 8b 44 d0 10       	mov    0x10(%rax,%rdx,8),%rax
   24526:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   2452d:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   24533:	48 98                	cltq   
   24535:	48 c1 e0 04          	shl    $0x4,%rax
   24539:	48 89 c2             	mov    %rax,%rdx
   2453c:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   24543:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
   24547:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
   2454e:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
   24555:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   2455c:	48 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%rsi
   24563:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   2456a:	49 89 f9             	mov    %rdi,%r9
   2456d:	48 89 c7             	mov    %rax,%rdi
   24570:	e8 06 fa ff ff       	callq  23f7b <eval_location_expr>
   24575:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
   2457b:	83 bd 74 fe ff ff 00 	cmpl   $0x0,-0x18c(%rbp)
   24582:	79 0b                	jns    2458f <apply_reg_state+0x4f8>
   24584:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   2458a:	e9 b6 01 00 00       	jmpq   24745 <apply_reg_state+0x6ae>
   2458f:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   24595:	48 98                	cltq   
   24597:	48 c1 e0 04          	shl    $0x4,%rax
   2459b:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   2459f:	48 01 d8             	add    %rbx,%rax
   245a2:	48 2d 20 01 00 00    	sub    $0x120,%rax
   245a8:	48 8b 00             	mov    (%rax),%rax
   245ab:	8b 95 70 fe ff ff    	mov    -0x190(%rbp),%edx
   245b1:	48 63 d2             	movslq %edx,%rdx
   245b4:	48 c1 e2 04          	shl    $0x4,%rdx
   245b8:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
   245bc:	48 01 da             	add    %rbx,%rdx
   245bf:	48 81 ea 20 01 00 00 	sub    $0x120,%rdx
   245c6:	48 89 02             	mov    %rax,(%rdx)
   245c9:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
   245cf:	48 98                	cltq   
   245d1:	48 c1 e0 04          	shl    $0x4,%rax
   245d5:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
   245d9:	48 01 c8             	add    %rcx,%rax
   245dc:	48 2d 18 01 00 00    	sub    $0x118,%rax
   245e2:	48 c7 00 04 00 00 00 	movq   $0x4,(%rax)
   245e9:	eb 04                	jmp    245ef <apply_reg_state+0x558>
   245eb:	90                   	nop
   245ec:	eb 01                	jmp    245ef <apply_reg_state+0x558>
   245ee:	90                   	nop
   245ef:	83 85 70 fe ff ff 01 	addl   $0x1,-0x190(%rbp)
   245f6:	83 bd 70 fe ff ff 10 	cmpl   $0x10,-0x190(%rbp)
   245fd:	0f 8e ee fc ff ff    	jle    242f1 <apply_reg_state+0x25a>
   24603:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   2460a:	48 8d 48 40          	lea    0x40(%rax),%rcx
   2460e:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   24615:	ba 10 01 00 00       	mov    $0x110,%edx
   2461a:	48 89 c6             	mov    %rax,%rsi
   2461d:	48 89 cf             	mov    %rcx,%rdi
   24620:	e8 a2 f0 fe ff       	callq  136c7 <memcpy>
   24625:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
   2462c:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24633:	48 89 50 10          	mov    %rdx,0x10(%rax)
   24637:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   2463e:	48 8b 10             	mov    (%rax),%rdx
   24641:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24648:	48 83 c2 04          	add    $0x4,%rdx
   2464c:	48 c1 e2 04          	shl    $0x4,%rdx
   24650:	48 01 d0             	add    %rdx,%rax
   24653:	48 8b 00             	mov    (%rax),%rax
   24656:	48 85 c0             	test   %rax,%rax
   24659:	75 1b                	jne    24676 <apply_reg_state+0x5df>
   2465b:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24662:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   24669:	00 
   2466a:	c7 85 74 fe ff ff 00 	movl   $0x0,-0x18c(%rbp)
   24671:	00 00 00 
   24674:	eb 6c                	jmp    246e2 <apply_reg_state+0x64b>
   24676:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   2467d:	48 8b 10             	mov    (%rax),%rdx
   24680:	48 8d 8d 80 fe ff ff 	lea    -0x180(%rbp),%rcx
   24687:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   2468e:	48 83 c2 04          	add    $0x4,%rdx
   24692:	48 c1 e2 04          	shl    $0x4,%rdx
   24696:	48 01 d0             	add    %rdx,%rax
   24699:	48 8b 30             	mov    (%rax),%rsi
   2469c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   246a0:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   246a7:	48 89 c7             	mov    %rax,%rdi
   246aa:	e8 87 d9 ff ff       	callq  22036 <dwarf_get>
   246af:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
   246b5:	83 bd 74 fe ff ff 00 	cmpl   $0x0,-0x18c(%rbp)
   246bc:	79 08                	jns    246c6 <apply_reg_state+0x62f>
   246be:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   246c4:	eb 7f                	jmp    24745 <apply_reg_state+0x6ae>
   246c6:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
   246cd:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   246d4:	48 89 50 18          	mov    %rdx,0x18(%rax)
   246d8:	c7 85 74 fe ff ff 01 	movl   $0x1,-0x18c(%rbp)
   246df:	00 00 00 
   246e2:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   246e9:	48 8b 40 18          	mov    0x18(%rax),%rax
   246ed:	48 39 85 88 fe ff ff 	cmp    %rax,-0x178(%rbp)
   246f4:	75 1b                	jne    24711 <apply_reg_state+0x67a>
   246f6:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   246fd:	48 8b 40 10          	mov    0x10(%rax),%rax
   24701:	48 39 85 90 fe ff ff 	cmp    %rax,-0x170(%rbp)
   24708:	75 07                	jne    24711 <apply_reg_state+0x67a>
   2470a:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   2470f:	eb 34                	jmp    24745 <apply_reg_state+0x6ae>
   24711:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24718:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   2471f:	83 e0 01             	and    $0x1,%eax
   24722:	84 c0                	test   %al,%al
   24724:	74 19                	je     2473f <apply_reg_state+0x6a8>
   24726:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
   2472d:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   24734:	48 89 d6             	mov    %rdx,%rsi
   24737:	48 89 c7             	mov    %rax,%rdi
   2473a:	e8 b6 57 00 00       	callq  29ef5 <_ULx86_64_stash_frame>
   2473f:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   24745:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   24749:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   24750:	00 00 
   24752:	74 05                	je     24759 <apply_reg_state+0x6c2>
   24754:	e8 33 6d fe ff       	callq  b48c <__stack_chk_fail>
   24759:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   24760:	5b                   	pop    %rbx
   24761:	5d                   	pop    %rbp
   24762:	c3                   	retq   

0000000000024763 <find_reg_state>:
   24763:	55                   	push   %rbp
   24764:	48 89 e5             	mov    %rsp,%rbp
   24767:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   2476e:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
   24775:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
   2477c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24783:	00 00 
   24785:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24789:	31 c0                	xor    %eax,%eax
   2478b:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
   24792:	00 00 00 
   24795:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2479c:	48 8b 40 08          	mov    0x8(%rax),%rax
   247a0:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   247a7:	48 89 d6             	mov    %rdx,%rsi
   247aa:	48 89 c7             	mov    %rax,%rdi
   247ad:	e8 37 f2 ff ff       	callq  239e9 <get_rs_cache>
   247b2:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   247b9:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   247c0:	00 
   247c1:	0f 84 d0 00 00 00    	je     24897 <find_reg_state+0x134>
   247c7:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   247ce:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   247d5:	48 89 d6             	mov    %rdx,%rsi
   247d8:	48 89 c7             	mov    %rax,%rdi
   247db:	e8 d1 f3 ff ff       	callq  23bb1 <rs_lookup>
   247e0:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   247e7:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   247ee:	00 
   247ef:	0f 84 a2 00 00 00    	je     24897 <find_reg_state+0x134>
   247f5:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   247fc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24803:	48 8b 40 20          	mov    0x20(%rax),%rax
   24807:	48 29 c2             	sub    %rax,%rdx
   2480a:	48 89 d0             	mov    %rdx,%rax
   2480d:	48 c1 f8 03          	sar    $0x3,%rax
   24811:	48 89 c2             	mov    %rax,%rdx
   24814:	48 b8 a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rax
   2481b:	6f 7a d3 
   2481e:	48 0f af c2          	imul   %rdx,%rax
   24822:	66 89 85 4e ff ff ff 	mov    %ax,-0xb2(%rbp)
   24829:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24830:	48 8b 40 28          	mov    0x28(%rax),%rax
   24834:	0f b7 95 4e ff ff ff 	movzwl -0xb2(%rbp),%edx
   2483b:	48 c1 e2 04          	shl    $0x4,%rdx
   2483f:	48 01 d0             	add    %rdx,%rax
   24842:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
   24846:	83 e0 02             	and    $0x2,%eax
   24849:	84 c0                	test   %al,%al
   2484b:	0f 94 c2             	sete   %dl
   2484e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24855:	83 e2 01             	and    $0x1,%edx
   24858:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
   2485b:	0f b6 90 50 01 00 00 	movzbl 0x150(%rax),%edx
   24862:	83 e2 fd             	and    $0xfffffffd,%edx
   24865:	09 ca                	or     %ecx,%edx
   24867:	88 90 50 01 00 00    	mov    %dl,0x150(%rax)
   2486d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   24874:	48 8d 88 c8 00 00 00 	lea    0xc8(%rax),%rcx
   2487b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   24882:	ba b8 00 00 00       	mov    $0xb8,%edx
   24887:	48 89 c6             	mov    %rax,%rsi
   2488a:	48 89 cf             	mov    %rcx,%rdi
   2488d:	e8 35 ee fe ff       	callq  136c7 <memcpy>
   24892:	e9 c6 01 00 00       	jmpq   24a5d <find_reg_state+0x2fa>
   24897:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2489e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   248a2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   248a9:	48 89 d6             	mov    %rdx,%rsi
   248ac:	48 89 c7             	mov    %rax,%rdi
   248af:	e8 24 ea ff ff       	callq  232d8 <fetch_proc_info>
   248b4:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   248ba:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   248c1:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   248c8:	d0 e8                	shr    %al
   248ca:	83 e0 01             	and    $0x1,%eax
   248cd:	0f b6 c0             	movzbl %al,%eax
   248d0:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   248d6:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   248dd:	0f 88 8d 00 00 00    	js     24970 <find_reg_state+0x20d>
   248e3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   248ea:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   248f1:	48 85 c0             	test   %rax,%rax
   248f4:	75 1f                	jne    24915 <find_reg_state+0x1b2>
   248f6:	48 8d 0d c3 8a 01 00 	lea    0x18ac3(%rip),%rcx        # 3d3c0 <__PRETTY_FUNCTION__.5276>
   248fd:	ba 8d 03 00 00       	mov    $0x38d,%edx
   24902:	48 8d 35 db 86 01 00 	lea    0x186db(%rip),%rsi        # 3cfe4 <__PRETTY_FUNCTION__.4821+0x4c>
   24909:	48 8d 3d 50 87 01 00 	lea    0x18750(%rip),%rdi        # 3d060 <__PRETTY_FUNCTION__.4821+0xc8>
   24910:	e8 da 0b 00 00       	callq  254ef <__assert_fail>
   24915:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2491c:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   24923:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   2492a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   24931:	0f b6 40 46          	movzbl 0x46(%rax),%eax
   24935:	83 e0 04             	and    $0x4,%eax
   24938:	84 c0                	test   %al,%al
   2493a:	0f 94 c0             	sete   %al
   2493d:	0f b6 c0             	movzbl %al,%eax
   24940:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   24946:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2494d:	48 8b 50 18          	mov    0x18(%rax),%rdx
   24951:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
   24958:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2495f:	48 89 ce             	mov    %rcx,%rsi
   24962:	48 89 c7             	mov    %rax,%rdi
   24965:	e8 81 f5 ff ff       	callq  23eeb <create_state_record_for>
   2496a:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   24970:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24977:	48 8d 90 58 01 00 00 	lea    0x158(%rax),%rdx
   2497e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24985:	48 89 d6             	mov    %rdx,%rsi
   24988:	48 89 c7             	mov    %rax,%rdi
   2498b:	e8 b6 ea ff ff       	callq  23446 <put_unwind_info>
   24990:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   24996:	83 e0 01             	and    $0x1,%eax
   24999:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   249a0:	83 e0 01             	and    $0x1,%eax
   249a3:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   249a6:	0f b6 82 50 01 00 00 	movzbl 0x150(%rdx),%eax
   249ad:	83 e0 fd             	and    $0xfffffffd,%eax
   249b0:	09 c8                	or     %ecx,%eax
   249b2:	88 82 50 01 00 00    	mov    %al,0x150(%rdx)
   249b8:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   249bf:	00 
   249c0:	0f 84 97 00 00 00    	je     24a5d <find_reg_state+0x2fa>
   249c6:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   249cd:	0f 88 8a 00 00 00    	js     24a5d <find_reg_state+0x2fa>
   249d3:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   249da:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   249e1:	48 89 d6             	mov    %rdx,%rsi
   249e4:	48 89 c7             	mov    %rax,%rdi
   249e7:	e8 e5 f2 ff ff       	callq  23cd1 <rs_new>
   249ec:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   249f3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   249fa:	48 8b 50 28          	mov    0x28(%rax),%rdx
   249fe:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
   24a05:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24a0c:	48 8b 40 20          	mov    0x20(%rax),%rax
   24a10:	48 29 c1             	sub    %rax,%rcx
   24a13:	48 89 c8             	mov    %rcx,%rax
   24a16:	48 c1 f8 03          	sar    $0x3,%rax
   24a1a:	48 89 c1             	mov    %rax,%rcx
   24a1d:	48 b8 a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rax
   24a24:	6f 7a d3 
   24a27:	48 0f af c1          	imul   %rcx,%rax
   24a2b:	48 c1 e0 04          	shl    $0x4,%rax
   24a2f:	48 01 d0             	add    %rdx,%rax
   24a32:	66 c7 40 0a 00 00    	movw   $0x0,0xa(%rax)
   24a38:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   24a3f:	48 8d 88 c8 00 00 00 	lea    0xc8(%rax),%rcx
   24a46:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   24a4d:	ba b8 00 00 00       	mov    $0xb8,%edx
   24a52:	48 89 ce             	mov    %rcx,%rsi
   24a55:	48 89 c7             	mov    %rax,%rdi
   24a58:	e8 6a ec fe ff       	callq  136c7 <memcpy>
   24a5d:	66 c7 85 4c ff ff ff 	movw   $0xffff,-0xb4(%rbp)
   24a64:	ff ff 
   24a66:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   24a6d:	00 
   24a6e:	0f 84 da 00 00 00    	je     24b4e <find_reg_state+0x3eb>
   24a74:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24a7b:	48 8b 40 08          	mov    0x8(%rax),%rax
   24a7f:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   24a86:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   24a8d:	48 89 ce             	mov    %rcx,%rsi
   24a90:	48 89 c7             	mov    %rax,%rdi
   24a93:	e8 11 f0 ff ff       	callq  23aa9 <put_rs_cache>
   24a98:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   24a9f:	00 
   24aa0:	0f 84 a8 00 00 00    	je     24b4e <find_reg_state+0x3eb>
   24aa6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   24aad:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24ab4:	48 8b 40 20          	mov    0x20(%rax),%rax
   24ab8:	48 29 c2             	sub    %rax,%rdx
   24abb:	48 89 d0             	mov    %rdx,%rax
   24abe:	48 c1 f8 03          	sar    $0x3,%rax
   24ac2:	48 89 c2             	mov    %rax,%rdx
   24ac5:	48 b8 a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rax
   24acc:	6f 7a d3 
   24acf:	48 0f af c2          	imul   %rdx,%rax
   24ad3:	66 89 85 4c ff ff ff 	mov    %ax,-0xb4(%rbp)
   24ada:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24ae1:	48 8b 40 28          	mov    0x28(%rax),%rax
   24ae5:	0f b7 95 4c ff ff ff 	movzwl -0xb4(%rbp),%edx
   24aec:	48 c1 e2 04          	shl    $0x4,%rdx
   24af0:	48 01 d0             	add    %rdx,%rax
   24af3:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
   24af7:	89 c2                	mov    %eax,%edx
   24af9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24b00:	66 89 90 a0 01 00 00 	mov    %dx,0x1a0(%rax)
   24b07:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24b0e:	48 8b 50 28          	mov    0x28(%rax),%rdx
   24b12:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24b19:	0f b7 80 a2 01 00 00 	movzwl 0x1a2(%rax),%eax
   24b20:	48 0f bf c0          	movswq %ax,%rax
   24b24:	48 c1 e0 04          	shl    $0x4,%rax
   24b28:	48 01 d0             	add    %rdx,%rax
   24b2b:	0f b7 95 4c ff ff ff 	movzwl -0xb4(%rbp),%edx
   24b32:	83 c2 01             	add    $0x1,%edx
   24b35:	66 89 50 0a          	mov    %dx,0xa(%rax)
   24b39:	0f b7 95 4c ff ff ff 	movzwl -0xb4(%rbp),%edx
   24b40:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24b47:	66 89 90 a2 01 00 00 	mov    %dx,0x1a2(%rax)
   24b4e:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   24b55:	79 08                	jns    24b5f <find_reg_state+0x3fc>
   24b57:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   24b5d:	eb 45                	jmp    24ba4 <find_reg_state+0x441>
   24b5f:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   24b66:	00 
   24b67:	74 36                	je     24b9f <find_reg_state+0x43c>
   24b69:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   24b70:	48 8b 40 28          	mov    0x28(%rax),%rax
   24b74:	0f b7 95 4c ff ff ff 	movzwl -0xb4(%rbp),%edx
   24b7b:	48 c1 e2 04          	shl    $0x4,%rdx
   24b7f:	48 01 d0             	add    %rdx,%rax
   24b82:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
   24b86:	d0 e8                	shr    %al
   24b88:	83 e0 01             	and    $0x1,%eax
   24b8b:	0f b6 d0             	movzbl %al,%edx
   24b8e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   24b95:	89 d6                	mov    %edx,%esi
   24b97:	48 89 c7             	mov    %rax,%rdi
   24b9a:	e8 ed 3d 00 00       	callq  2898c <_ULx86_64_reuse_frame>
   24b9f:	b8 00 00 00 00       	mov    $0x0,%eax
   24ba4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   24ba8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   24baf:	00 00 
   24bb1:	74 05                	je     24bb8 <find_reg_state+0x455>
   24bb3:	e8 d4 68 fe ff       	callq  b48c <__stack_chk_fail>
   24bb8:	c9                   	leaveq 
   24bb9:	c3                   	retq   

0000000000024bba <_ULx86_64_dwarf_step>:
   24bba:	55                   	push   %rbp
   24bbb:	48 89 e5             	mov    %rsp,%rbp
   24bbe:	48 81 ec b0 01 00 00 	sub    $0x1b0,%rsp
   24bc5:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
   24bcc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24bd3:	00 00 
   24bd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24bd9:	31 c0                	xor    %eax,%eax
   24bdb:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
   24be2:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24be9:	48 89 d6             	mov    %rdx,%rsi
   24bec:	48 89 c7             	mov    %rax,%rdi
   24bef:	e8 6f fb ff ff       	callq  24763 <find_reg_state>
   24bf4:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
   24bfa:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
   24c01:	79 08                	jns    24c0b <_ULx86_64_dwarf_step+0x51>
   24c03:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
   24c09:	eb 20                	jmp    24c2b <_ULx86_64_dwarf_step+0x71>
   24c0b:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
   24c12:	48 8d 90 c8 00 00 00 	lea    0xc8(%rax),%rdx
   24c19:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24c20:	48 89 d6             	mov    %rdx,%rsi
   24c23:	48 89 c7             	mov    %rax,%rdi
   24c26:	e8 6c f4 ff ff       	callq  24097 <apply_reg_state>
   24c2b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   24c2f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24c36:	00 00 
   24c38:	74 05                	je     24c3f <_ULx86_64_dwarf_step+0x85>
   24c3a:	e8 4d 68 fe ff       	callq  b48c <__stack_chk_fail>
   24c3f:	c9                   	leaveq 
   24c40:	c3                   	retq   

0000000000024c41 <_ULx86_64_dwarf_make_proc_info>:
   24c41:	55                   	push   %rbp
   24c42:	48 89 e5             	mov    %rsp,%rbp
   24c45:	48 81 ec b0 01 00 00 	sub    $0x1b0,%rsp
   24c4c:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
   24c53:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24c5a:	00 00 
   24c5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24c60:	31 c0                	xor    %eax,%eax
   24c62:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24c69:	48 8b 50 18          	mov    0x18(%rax),%rdx
   24c6d:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24c74:	48 89 d6             	mov    %rdx,%rsi
   24c77:	48 89 c7             	mov    %rax,%rdi
   24c7a:	e8 59 e6 ff ff       	callq  232d8 <fetch_proc_info>
   24c7f:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
   24c85:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
   24c8c:	78 2a                	js     24cb8 <_ULx86_64_dwarf_make_proc_info+0x77>
   24c8e:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24c95:	48 8b 50 18          	mov    0x18(%rax),%rdx
   24c99:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
   24ca0:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24ca7:	48 89 ce             	mov    %rcx,%rsi
   24caa:	48 89 c7             	mov    %rax,%rdi
   24cad:	e8 39 f2 ff ff       	callq  23eeb <create_state_record_for>
   24cb2:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
   24cb8:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24cbf:	48 8d 90 58 01 00 00 	lea    0x158(%rax),%rdx
   24cc6:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24ccd:	48 89 d6             	mov    %rdx,%rsi
   24cd0:	48 89 c7             	mov    %rax,%rdi
   24cd3:	e8 6e e7 ff ff       	callq  23446 <put_unwind_info>
   24cd8:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
   24cdf:	79 08                	jns    24ce9 <_ULx86_64_dwarf_make_proc_info+0xa8>
   24ce1:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
   24ce7:	eb 17                	jmp    24d00 <_ULx86_64_dwarf_make_proc_info+0xbf>
   24ce9:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
   24cf0:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   24cf7:	48 89 50 20          	mov    %rdx,0x20(%rax)
   24cfb:	b8 00 00 00 00       	mov    $0x0,%eax
   24d00:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   24d04:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24d0b:	00 00 
   24d0d:	74 05                	je     24d14 <_ULx86_64_dwarf_make_proc_info+0xd3>
   24d0f:	e8 78 67 fe ff       	callq  b48c <__stack_chk_fail>
   24d14:	c9                   	leaveq 
   24d15:	c3                   	retq   

0000000000024d16 <dwarf_reads16>:
   24d16:	55                   	push   %rbp
   24d17:	48 89 e5             	mov    %rsp,%rbp
   24d1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24d1e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24d22:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24d26:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24d2a:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24d2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24d32:	48 8b 00             	mov    (%rax),%rax
   24d35:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24d3d:	0f b7 10             	movzwl (%rax),%edx
   24d40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24d44:	66 89 10             	mov    %dx,(%rax)
   24d47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24d4b:	48 8b 00             	mov    (%rax),%rax
   24d4e:	48 8d 50 02          	lea    0x2(%rax),%rdx
   24d52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24d56:	48 89 10             	mov    %rdx,(%rax)
   24d59:	b8 00 00 00 00       	mov    $0x0,%eax
   24d5e:	5d                   	pop    %rbp
   24d5f:	c3                   	retq   

0000000000024d60 <dwarf_reads32>:
   24d60:	55                   	push   %rbp
   24d61:	48 89 e5             	mov    %rsp,%rbp
   24d64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24d68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24d6c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24d70:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24d74:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24d78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24d7c:	48 8b 00             	mov    (%rax),%rax
   24d7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24d83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24d87:	8b 10                	mov    (%rax),%edx
   24d89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24d8d:	89 10                	mov    %edx,(%rax)
   24d8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24d93:	48 8b 00             	mov    (%rax),%rax
   24d96:	48 8d 50 04          	lea    0x4(%rax),%rdx
   24d9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24d9e:	48 89 10             	mov    %rdx,(%rax)
   24da1:	b8 00 00 00 00       	mov    $0x0,%eax
   24da6:	5d                   	pop    %rbp
   24da7:	c3                   	retq   

0000000000024da8 <dwarf_reads64>:
   24da8:	55                   	push   %rbp
   24da9:	48 89 e5             	mov    %rsp,%rbp
   24dac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24db0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24db4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24db8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24dbc:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24dc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24dc4:	48 8b 00             	mov    (%rax),%rax
   24dc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24dcf:	48 8b 10             	mov    (%rax),%rdx
   24dd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24dd6:	48 89 10             	mov    %rdx,(%rax)
   24dd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24ddd:	48 8b 00             	mov    (%rax),%rax
   24de0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   24de4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24de8:	48 89 10             	mov    %rdx,(%rax)
   24deb:	b8 00 00 00 00       	mov    $0x0,%eax
   24df0:	5d                   	pop    %rbp
   24df1:	c3                   	retq   

0000000000024df2 <dwarf_readu8>:
   24df2:	55                   	push   %rbp
   24df3:	48 89 e5             	mov    %rsp,%rbp
   24df6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24dfa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24dfe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24e02:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24e06:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24e0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24e0e:	48 8b 00             	mov    (%rax),%rax
   24e11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24e15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24e19:	0f b6 10             	movzbl (%rax),%edx
   24e1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24e20:	88 10                	mov    %dl,(%rax)
   24e22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24e26:	48 8b 00             	mov    (%rax),%rax
   24e29:	48 8d 50 01          	lea    0x1(%rax),%rdx
   24e2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24e31:	48 89 10             	mov    %rdx,(%rax)
   24e34:	b8 00 00 00 00       	mov    $0x0,%eax
   24e39:	5d                   	pop    %rbp
   24e3a:	c3                   	retq   

0000000000024e3b <dwarf_readu16>:
   24e3b:	55                   	push   %rbp
   24e3c:	48 89 e5             	mov    %rsp,%rbp
   24e3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24e43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24e47:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24e4b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24e4f:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24e53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24e57:	48 8b 00             	mov    (%rax),%rax
   24e5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24e62:	0f b7 10             	movzwl (%rax),%edx
   24e65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24e69:	66 89 10             	mov    %dx,(%rax)
   24e6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24e70:	48 8b 00             	mov    (%rax),%rax
   24e73:	48 8d 50 02          	lea    0x2(%rax),%rdx
   24e77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24e7b:	48 89 10             	mov    %rdx,(%rax)
   24e7e:	b8 00 00 00 00       	mov    $0x0,%eax
   24e83:	5d                   	pop    %rbp
   24e84:	c3                   	retq   

0000000000024e85 <dwarf_readu32>:
   24e85:	55                   	push   %rbp
   24e86:	48 89 e5             	mov    %rsp,%rbp
   24e89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24e8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24e91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24e95:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24e99:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24e9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24ea1:	48 8b 00             	mov    (%rax),%rax
   24ea4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24eac:	8b 10                	mov    (%rax),%edx
   24eae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24eb2:	89 10                	mov    %edx,(%rax)
   24eb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24eb8:	48 8b 00             	mov    (%rax),%rax
   24ebb:	48 8d 50 04          	lea    0x4(%rax),%rdx
   24ebf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24ec3:	48 89 10             	mov    %rdx,(%rax)
   24ec6:	b8 00 00 00 00       	mov    $0x0,%eax
   24ecb:	5d                   	pop    %rbp
   24ecc:	c3                   	retq   

0000000000024ecd <dwarf_readu64>:
   24ecd:	55                   	push   %rbp
   24ece:	48 89 e5             	mov    %rsp,%rbp
   24ed1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24ed5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24ed9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   24edd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   24ee1:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   24ee5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24ee9:	48 8b 00             	mov    (%rax),%rax
   24eec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24ef4:	48 8b 10             	mov    (%rax),%rdx
   24ef7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24efb:	48 89 10             	mov    %rdx,(%rax)
   24efe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24f02:	48 8b 00             	mov    (%rax),%rax
   24f05:	48 8d 50 08          	lea    0x8(%rax),%rdx
   24f09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24f0d:	48 89 10             	mov    %rdx,(%rax)
   24f10:	b8 00 00 00 00       	mov    $0x0,%eax
   24f15:	5d                   	pop    %rbp
   24f16:	c3                   	retq   

0000000000024f17 <dwarf_readw>:
   24f17:	55                   	push   %rbp
   24f18:	48 89 e5             	mov    %rsp,%rbp
   24f1b:	48 83 ec 50          	sub    $0x50,%rsp
   24f1f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   24f23:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   24f27:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   24f2b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   24f2f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   24f33:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24f3a:	00 00 
   24f3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24f40:	31 c0                	xor    %eax,%eax
   24f42:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   24f46:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
   24f4a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   24f4e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   24f52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24f56:	49 89 f8             	mov    %rdi,%r8
   24f59:	48 89 c7             	mov    %rax,%rdi
   24f5c:	e8 6c ff ff ff       	callq  24ecd <dwarf_readu64>
   24f61:	89 45 ec             	mov    %eax,-0x14(%rbp)
   24f64:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   24f68:	79 05                	jns    24f6f <dwarf_readw+0x58>
   24f6a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   24f6d:	eb 0e                	jmp    24f7d <dwarf_readw+0x66>
   24f6f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   24f73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24f77:	48 89 10             	mov    %rdx,(%rax)
   24f7a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   24f7d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   24f81:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24f88:	00 00 
   24f8a:	74 05                	je     24f91 <dwarf_readw+0x7a>
   24f8c:	e8 fb 64 fe ff       	callq  b48c <__stack_chk_fail>
   24f91:	c9                   	leaveq 
   24f92:	c3                   	retq   

0000000000024f93 <dwarf_read_uleb128>:
   24f93:	55                   	push   %rbp
   24f94:	48 89 e5             	mov    %rsp,%rbp
   24f97:	48 83 ec 50          	sub    $0x50,%rsp
   24f9b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   24f9f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   24fa3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   24fa7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   24fab:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   24faf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24fb6:	00 00 
   24fb8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24fbc:	31 c0                	xor    %eax,%eax
   24fbe:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   24fc5:	00 
   24fc6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   24fcd:	00 
   24fce:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   24fd2:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   24fd6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   24fda:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   24fde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24fe2:	49 89 f8             	mov    %rdi,%r8
   24fe5:	48 89 c7             	mov    %rax,%rdi
   24fe8:	e8 05 fe ff ff       	callq  24df2 <dwarf_readu8>
   24fed:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   24ff0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   24ff4:	79 05                	jns    24ffb <dwarf_read_uleb128+0x68>
   24ff6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   24ff9:	eb 3a                	jmp    25035 <dwarf_read_uleb128+0xa2>
   24ffb:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   24fff:	0f b6 c0             	movzbl %al,%eax
   25002:	83 e0 7f             	and    $0x7f,%eax
   25005:	48 89 c2             	mov    %rax,%rdx
   25008:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2500c:	89 c1                	mov    %eax,%ecx
   2500e:	48 d3 e2             	shl    %cl,%rdx
   25011:	48 89 d0             	mov    %rdx,%rax
   25014:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   25018:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   2501d:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   25021:	84 c0                	test   %al,%al
   25023:	78 a9                	js     24fce <dwarf_read_uleb128+0x3b>
   25025:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25029:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2502d:	48 89 10             	mov    %rdx,(%rax)
   25030:	b8 00 00 00 00       	mov    $0x0,%eax
   25035:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   25039:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   25040:	00 00 
   25042:	74 05                	je     25049 <dwarf_read_uleb128+0xb6>
   25044:	e8 43 64 fe ff       	callq  b48c <__stack_chk_fail>
   25049:	c9                   	leaveq 
   2504a:	c3                   	retq   

000000000002504b <_ULx86_64_dwarf_read_encoded_pointer>:
   2504b:	55                   	push   %rbp
   2504c:	48 89 e5             	mov    %rsp,%rbp
   2504f:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   25056:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   2505d:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   25064:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   2506b:	89 c8                	mov    %ecx,%eax
   2506d:	4c 89 85 58 ff ff ff 	mov    %r8,-0xa8(%rbp)
   25074:	4c 89 8d 50 ff ff ff 	mov    %r9,-0xb0(%rbp)
   2507b:	88 85 64 ff ff ff    	mov    %al,-0x9c(%rbp)
   25081:	48 8b 45 10          	mov    0x10(%rbp),%rax
   25085:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   2508c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   25093:	00 00 
   25095:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25099:	31 c0                	xor    %eax,%eax
   2509b:	0f b6 85 64 ff ff ff 	movzbl -0x9c(%rbp),%eax
   250a2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   250a9:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   250ad:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   250b4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   250b8:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   250bf:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   250c3:	88 45 8b             	mov    %al,-0x75(%rbp)
   250c6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   250cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   250d1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   250d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   250dc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   250e3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   250e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   250eb:	48 8b 00             	mov    (%rax),%rax
   250ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   250f2:	66 c7 45 8e 00 00    	movw   $0x0,-0x72(%rbp)
   250f8:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
   250ff:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   25106:	00 
   25107:	80 7d 8b ff          	cmpb   $0xff,-0x75(%rbp)
   2510b:	75 15                	jne    25122 <_ULx86_64_dwarf_read_encoded_pointer+0xd7>
   2510d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25111:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   25118:	b8 00 00 00 00       	mov    $0x0,%eax
   2511d:	e9 6a 03 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   25122:	80 7d 8b 50          	cmpb   $0x50,-0x75(%rbp)
   25126:	75 4d                	jne    25175 <_ULx86_64_dwarf_read_encoded_pointer+0x12a>
   25128:	c7 45 98 08 00 00 00 	movl   $0x8,-0x68(%rbp)
   2512f:	8b 45 98             	mov    -0x68(%rbp),%eax
   25132:	48 63 d0             	movslq %eax,%rdx
   25135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25139:	48 01 d0             	add    %rdx,%rax
   2513c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   25140:	8b 45 98             	mov    -0x68(%rbp),%eax
   25143:	f7 d8                	neg    %eax
   25145:	48 98                	cltq   
   25147:	48 21 c2             	and    %rax,%rdx
   2514a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2514e:	48 89 10             	mov    %rdx,(%rax)
   25151:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25155:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   25159:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2515d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   25161:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25165:	49 89 f8             	mov    %rdi,%r8
   25168:	48 89 c7             	mov    %rax,%rdi
   2516b:	e8 a7 fd ff ff       	callq  24f17 <dwarf_readw>
   25170:	e9 17 03 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   25175:	0f b6 45 8b          	movzbl -0x75(%rbp),%eax
   25179:	83 e0 0f             	and    $0xf,%eax
   2517c:	83 f8 0c             	cmp    $0xc,%eax
   2517f:	0f 87 2d 02 00 00    	ja     253b2 <_ULx86_64_dwarf_read_encoded_pointer+0x367>
   25185:	89 c0                	mov    %eax,%eax
   25187:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2518e:	00 
   2518f:	48 8d 05 4a 82 01 00 	lea    0x1824a(%rip),%rax        # 3d3e0 <__PRETTY_FUNCTION__.5180+0x10>
   25196:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   25199:	48 63 d0             	movslq %eax,%rdx
   2519c:	48 8d 05 3d 82 01 00 	lea    0x1823d(%rip),%rax        # 3d3e0 <__PRETTY_FUNCTION__.5180+0x10>
   251a3:	48 01 d0             	add    %rdx,%rax
   251a6:	ff e0                	jmpq   *%rax
   251a8:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   251ac:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   251b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   251b4:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   251b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   251bc:	49 89 f8             	mov    %rdi,%r8
   251bf:	48 89 c7             	mov    %rax,%rdi
   251c2:	e8 50 fd ff ff       	callq  24f17 <dwarf_readw>
   251c7:	89 45 9c             	mov    %eax,-0x64(%rbp)
   251ca:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   251ce:	0f 89 e8 01 00 00    	jns    253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   251d4:	8b 45 9c             	mov    -0x64(%rbp),%eax
   251d7:	e9 b0 02 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   251dc:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   251e0:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   251e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   251e8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   251ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   251f0:	49 89 f8             	mov    %rdi,%r8
   251f3:	48 89 c7             	mov    %rax,%rdi
   251f6:	e8 98 fd ff ff       	callq  24f93 <dwarf_read_uleb128>
   251fb:	89 45 9c             	mov    %eax,-0x64(%rbp)
   251fe:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   25202:	0f 89 b4 01 00 00    	jns    253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   25208:	8b 45 9c             	mov    -0x64(%rbp),%eax
   2520b:	e9 7c 02 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   25210:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25214:	48 8d 4d 8c          	lea    -0x74(%rbp),%rcx
   25218:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2521c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   25220:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25224:	49 89 f8             	mov    %rdi,%r8
   25227:	48 89 c7             	mov    %rax,%rdi
   2522a:	e8 0c fc ff ff       	callq  24e3b <dwarf_readu16>
   2522f:	89 45 9c             	mov    %eax,-0x64(%rbp)
   25232:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   25236:	79 08                	jns    25240 <_ULx86_64_dwarf_read_encoded_pointer+0x1f5>
   25238:	8b 45 9c             	mov    -0x64(%rbp),%eax
   2523b:	e9 4c 02 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   25240:	0f b7 45 8c          	movzwl -0x74(%rbp),%eax
   25244:	0f b7 c0             	movzwl %ax,%eax
   25247:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2524b:	e9 6c 01 00 00       	jmpq   253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   25250:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25254:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   25258:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2525c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   25260:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25264:	49 89 f8             	mov    %rdi,%r8
   25267:	48 89 c7             	mov    %rax,%rdi
   2526a:	e8 16 fc ff ff       	callq  24e85 <dwarf_readu32>
   2526f:	89 45 9c             	mov    %eax,-0x64(%rbp)
   25272:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   25276:	79 08                	jns    25280 <_ULx86_64_dwarf_read_encoded_pointer+0x235>
   25278:	8b 45 9c             	mov    -0x64(%rbp),%eax
   2527b:	e9 0c 02 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   25280:	8b 45 90             	mov    -0x70(%rbp),%eax
   25283:	89 c0                	mov    %eax,%eax
   25285:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   25289:	e9 2e 01 00 00       	jmpq   253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   2528e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25292:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
   25296:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2529a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   2529e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   252a2:	49 89 f8             	mov    %rdi,%r8
   252a5:	48 89 c7             	mov    %rax,%rdi
   252a8:	e8 20 fc ff ff       	callq  24ecd <dwarf_readu64>
   252ad:	89 45 9c             	mov    %eax,-0x64(%rbp)
   252b0:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   252b4:	79 08                	jns    252be <_ULx86_64_dwarf_read_encoded_pointer+0x273>
   252b6:	8b 45 9c             	mov    -0x64(%rbp),%eax
   252b9:	e9 ce 01 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   252be:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   252c2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   252c6:	e9 f1 00 00 00       	jmpq   253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   252cb:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   252cf:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   252d3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   252d7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   252db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   252df:	49 89 f8             	mov    %rdi,%r8
   252e2:	48 89 c7             	mov    %rax,%rdi
   252e5:	e8 a9 fc ff ff       	callq  24f93 <dwarf_read_uleb128>
   252ea:	89 45 9c             	mov    %eax,-0x64(%rbp)
   252ed:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   252f1:	0f 89 c5 00 00 00    	jns    253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   252f7:	8b 45 9c             	mov    -0x64(%rbp),%eax
   252fa:	e9 8d 01 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   252ff:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25303:	48 8d 4d 8e          	lea    -0x72(%rbp),%rcx
   25307:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2530b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   2530f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25313:	49 89 f8             	mov    %rdi,%r8
   25316:	48 89 c7             	mov    %rax,%rdi
   25319:	e8 f8 f9 ff ff       	callq  24d16 <dwarf_reads16>
   2531e:	89 45 9c             	mov    %eax,-0x64(%rbp)
   25321:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   25325:	79 08                	jns    2532f <_ULx86_64_dwarf_read_encoded_pointer+0x2e4>
   25327:	8b 45 9c             	mov    -0x64(%rbp),%eax
   2532a:	e9 5d 01 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   2532f:	0f b7 45 8e          	movzwl -0x72(%rbp),%eax
   25333:	48 0f bf c0          	movswq %ax,%rax
   25337:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2533b:	eb 7f                	jmp    253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   2533d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25341:	48 8d 4d 94          	lea    -0x6c(%rbp),%rcx
   25345:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   25349:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   2534d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25351:	49 89 f8             	mov    %rdi,%r8
   25354:	48 89 c7             	mov    %rax,%rdi
   25357:	e8 04 fa ff ff       	callq  24d60 <dwarf_reads32>
   2535c:	89 45 9c             	mov    %eax,-0x64(%rbp)
   2535f:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   25363:	79 08                	jns    2536d <_ULx86_64_dwarf_read_encoded_pointer+0x322>
   25365:	8b 45 9c             	mov    -0x64(%rbp),%eax
   25368:	e9 1f 01 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   2536d:	8b 45 94             	mov    -0x6c(%rbp),%eax
   25370:	48 98                	cltq   
   25372:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   25376:	eb 44                	jmp    253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   25378:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   2537c:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   25380:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   25384:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   25388:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2538c:	49 89 f8             	mov    %rdi,%r8
   2538f:	48 89 c7             	mov    %rax,%rdi
   25392:	e8 11 fa ff ff       	callq  24da8 <dwarf_reads64>
   25397:	89 45 9c             	mov    %eax,-0x64(%rbp)
   2539a:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   2539e:	79 08                	jns    253a8 <_ULx86_64_dwarf_read_encoded_pointer+0x35d>
   253a0:	8b 45 9c             	mov    -0x64(%rbp),%eax
   253a3:	e9 e4 00 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   253a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   253ac:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   253b0:	eb 0a                	jmp    253bc <_ULx86_64_dwarf_read_encoded_pointer+0x371>
   253b2:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   253b7:	e9 d0 00 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   253bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   253c0:	48 85 c0             	test   %rax,%rax
   253c3:	75 15                	jne    253da <_ULx86_64_dwarf_read_encoded_pointer+0x38f>
   253c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   253c9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   253d0:	b8 00 00 00 00       	mov    $0x0,%eax
   253d5:	e9 b2 00 00 00       	jmpq   2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   253da:	0f b6 45 8b          	movzbl -0x75(%rbp),%eax
   253de:	83 e0 70             	and    $0x70,%eax
   253e1:	83 f8 10             	cmp    $0x10,%eax
   253e4:	74 17                	je     253fd <_ULx86_64_dwarf_read_encoded_pointer+0x3b2>
   253e6:	83 f8 10             	cmp    $0x10,%eax
   253e9:	7f 06                	jg     253f1 <_ULx86_64_dwarf_read_encoded_pointer+0x3a6>
   253eb:	85 c0                	test   %eax,%eax
   253ed:	74 4f                	je     2543e <_ULx86_64_dwarf_read_encoded_pointer+0x3f3>
   253ef:	eb 46                	jmp    25437 <_ULx86_64_dwarf_read_encoded_pointer+0x3ec>
   253f1:	83 f8 30             	cmp    $0x30,%eax
   253f4:	74 18                	je     2540e <_ULx86_64_dwarf_read_encoded_pointer+0x3c3>
   253f6:	83 f8 40             	cmp    $0x40,%eax
   253f9:	74 28                	je     25423 <_ULx86_64_dwarf_read_encoded_pointer+0x3d8>
   253fb:	eb 3a                	jmp    25437 <_ULx86_64_dwarf_read_encoded_pointer+0x3ec>
   253fd:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   25401:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25405:	48 01 d0             	add    %rdx,%rax
   25408:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2540c:	eb 31                	jmp    2543f <_ULx86_64_dwarf_read_encoded_pointer+0x3f4>
   2540e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25412:	48 8b 50 20          	mov    0x20(%rax),%rdx
   25416:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2541a:	48 01 d0             	add    %rdx,%rax
   2541d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   25421:	eb 1c                	jmp    2543f <_ULx86_64_dwarf_read_encoded_pointer+0x3f4>
   25423:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25427:	48 8b 10             	mov    (%rax),%rdx
   2542a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2542e:	48 01 d0             	add    %rdx,%rax
   25431:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   25435:	eb 08                	jmp    2543f <_ULx86_64_dwarf_read_encoded_pointer+0x3f4>
   25437:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2543c:	eb 4e                	jmp    2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   2543e:	90                   	nop
   2543f:	0f b6 45 8b          	movzbl -0x75(%rbp),%eax
   25443:	84 c0                	test   %al,%al
   25445:	79 35                	jns    2547c <_ULx86_64_dwarf_read_encoded_pointer+0x431>
   25447:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2544b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2544f:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   25453:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   25457:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2545b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   2545f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   25463:	49 89 f8             	mov    %rdi,%r8
   25466:	48 89 c7             	mov    %rax,%rdi
   25469:	e8 a9 fa ff ff       	callq  24f17 <dwarf_readw>
   2546e:	89 45 9c             	mov    %eax,-0x64(%rbp)
   25471:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   25475:	79 05                	jns    2547c <_ULx86_64_dwarf_read_encoded_pointer+0x431>
   25477:	8b 45 9c             	mov    -0x64(%rbp),%eax
   2547a:	eb 10                	jmp    2548c <_ULx86_64_dwarf_read_encoded_pointer+0x441>
   2547c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   25480:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25484:	48 89 10             	mov    %rdx,(%rax)
   25487:	b8 00 00 00 00       	mov    $0x0,%eax
   2548c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   25490:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   25497:	00 00 
   25499:	74 05                	je     254a0 <_ULx86_64_dwarf_read_encoded_pointer+0x455>
   2549b:	e8 ec 5f fe ff       	callq  b48c <__stack_chk_fail>
   254a0:	c9                   	leaveq 
   254a1:	c3                   	retq   

00000000000254a2 <_Ux86_64_dwarf_init>:
   254a2:	55                   	push   %rbp
   254a3:	48 89 e5             	mov    %rsp,%rbp
   254a6:	ba 00 00 00 00       	mov    $0x0,%edx
   254ab:	be c0 00 00 00       	mov    $0xc0,%esi
   254b0:	48 8d 3d 49 1e 03 00 	lea    0x31e49(%rip),%rdi        # 57300 <dwarf_reg_state_pool>
   254b7:	e8 28 31 00 00       	callq  285e4 <_UIx86_64__mempool_init>
   254bc:	ba 00 00 00 00       	mov    $0x0,%edx
   254c1:	be 48 00 00 00       	mov    $0x48,%esi
   254c6:	48 8d 3d f3 1d 03 00 	lea    0x31df3(%rip),%rdi        # 572c0 <dwarf_cie_info_pool>
   254cd:	e8 12 31 00 00       	callq  285e4 <_UIx86_64__mempool_init>
   254d2:	b8 00 00 00 00       	mov    $0x0,%eax
   254d7:	5d                   	pop    %rbp
   254d8:	c3                   	retq   

00000000000254d9 <msync>:
   254d9:	55                   	push   %rbp
   254da:	48 89 e5             	mov    %rsp,%rbp
   254dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   254e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   254e5:	89 55 ec             	mov    %edx,-0x14(%rbp)
   254e8:	b8 00 00 00 00       	mov    $0x0,%eax
   254ed:	5d                   	pop    %rbp
   254ee:	c3                   	retq   

00000000000254ef <__assert_fail>:
   254ef:	55                   	push   %rbp
   254f0:	48 89 e5             	mov    %rsp,%rbp
   254f3:	48 83 ec 20          	sub    $0x20,%rsp
   254f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   254fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   254ff:	89 55 ec             	mov    %edx,-0x14(%rbp)
   25502:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   25506:	e8 ce 60 01 00       	callq  3b5d9 <abort>

000000000002550b <_ZL12get_encodingh>:
   2550b:	55                   	push   %rbp
   2550c:	48 89 e5             	mov    %rsp,%rbp
   2550f:	89 f8                	mov    %edi,%eax
   25511:	88 45 fc             	mov    %al,-0x4(%rbp)
   25514:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   25518:	83 e0 0f             	and    $0xf,%eax
   2551b:	5d                   	pop    %rbp
   2551c:	c3                   	retq   

000000000002551d <_ZL8get_baseh>:
   2551d:	55                   	push   %rbp
   2551e:	48 89 e5             	mov    %rsp,%rbp
   25521:	89 f8                	mov    %edi,%eax
   25523:	88 45 fc             	mov    %al,-0x4(%rbp)
   25526:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2552a:	83 e0 70             	and    $0x70,%eax
   2552d:	5d                   	pop    %rbp
   2552e:	c3                   	retq   

000000000002552f <_ZL11is_indirecth>:
   2552f:	55                   	push   %rbp
   25530:	48 89 e5             	mov    %rsp,%rbp
   25533:	89 f8                	mov    %edi,%eax
   25535:	88 45 fc             	mov    %al,-0x4(%rbp)
   25538:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2553c:	c0 e8 07             	shr    $0x7,%al
   2553f:	0f b6 c0             	movzbl %al,%eax
   25542:	5d                   	pop    %rbp
   25543:	c3                   	retq   

0000000000025544 <_ZL30dwarf_size_of_fixed_size_fieldh>:
   25544:	55                   	push   %rbp
   25545:	48 89 e5             	mov    %rsp,%rbp
   25548:	48 83 ec 10          	sub    $0x10,%rsp
   2554c:	89 f8                	mov    %edi,%eax
   2554e:	88 45 fc             	mov    %al,-0x4(%rbp)
   25551:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   25555:	89 c7                	mov    %eax,%edi
   25557:	e8 af ff ff ff       	callq  2550b <_ZL12get_encodingh>
   2555c:	83 f8 0c             	cmp    $0xc,%eax
   2555f:	77 23                	ja     25584 <_ZL30dwarf_size_of_fixed_size_fieldh+0x40>
   25561:	89 c0                	mov    %eax,%eax
   25563:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2556a:	00 
   2556b:	48 8d 05 a2 7e 01 00 	lea    0x17ea2(%rip),%rax        # 3d414 <__PRETTY_FUNCTION__.5180+0x44>
   25572:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   25575:	48 63 d0             	movslq %eax,%rdx
   25578:	48 8d 05 95 7e 01 00 	lea    0x17e95(%rip),%rax        # 3d414 <__PRETTY_FUNCTION__.5180+0x44>
   2557f:	48 01 d0             	add    %rdx,%rax
   25582:	ff e0                	jmpq   *%rax
   25584:	e8 50 60 01 00       	callq  3b5d9 <abort>
   25589:	b8 02 00 00 00       	mov    $0x2,%eax
   2558e:	eb 13                	jmp    255a3 <_ZL30dwarf_size_of_fixed_size_fieldh+0x5f>
   25590:	b8 04 00 00 00       	mov    $0x4,%eax
   25595:	eb 0c                	jmp    255a3 <_ZL30dwarf_size_of_fixed_size_fieldh+0x5f>
   25597:	b8 08 00 00 00       	mov    $0x8,%eax
   2559c:	eb 05                	jmp    255a3 <_ZL30dwarf_size_of_fixed_size_fieldh+0x5f>
   2559e:	b8 08 00 00 00       	mov    $0x8,%eax
   255a3:	c9                   	leaveq 
   255a4:	c3                   	retq   

00000000000255a5 <_ZL11read_leb128PPhPi>:
   255a5:	55                   	push   %rbp
   255a6:	48 89 e5             	mov    %rsp,%rbp
   255a9:	48 83 ec 20          	sub    $0x20,%rsp
   255ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   255b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   255b5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   255bc:	00 
   255bd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   255c4:	c6 45 f3 00          	movb   $0x0,-0xd(%rbp)
   255c8:	83 7d f4 3f          	cmpl   $0x3f,-0xc(%rbp)
   255cc:	76 1f                	jbe    255ed <_ZL11read_leb128PPhPi+0x48>
   255ce:	48 8d 0d 73 7e 01 00 	lea    0x17e73(%rip),%rcx        # 3d448 <__PRETTY_FUNCTION__.5180+0x78>
   255d5:	48 8d 15 ec 7f 01 00 	lea    0x17fec(%rip),%rdx        # 3d5c8 <_ZZL11read_leb128PPhPiE8__func__>
   255dc:	be a7 00 00 00       	mov    $0xa7,%esi
   255e1:	48 8d 3d 7b 7e 01 00 	lea    0x17e7b(%rip),%rdi        # 3d463 <__PRETTY_FUNCTION__.5180+0x93>
   255e8:	e8 a8 5e fe ff       	callq  b495 <__assert>
   255ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   255f1:	48 8b 00             	mov    (%rax),%rax
   255f4:	0f b6 00             	movzbl (%rax),%eax
   255f7:	83 e0 7f             	and    $0x7f,%eax
   255fa:	88 45 f3             	mov    %al,-0xd(%rbp)
   255fd:	0f b6 55 f3          	movzbl -0xd(%rbp),%edx
   25601:	8b 45 f4             	mov    -0xc(%rbp),%eax
   25604:	89 c1                	mov    %eax,%ecx
   25606:	d3 e2                	shl    %cl,%edx
   25608:	89 d0                	mov    %edx,%eax
   2560a:	48 98                	cltq   
   2560c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   25610:	83 45 f4 07          	addl   $0x7,-0xc(%rbp)
   25614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25618:	48 8b 00             	mov    (%rax),%rax
   2561b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2561f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25623:	48 89 10             	mov    %rdx,(%rax)
   25626:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2562a:	48 8b 00             	mov    (%rax),%rax
   2562d:	48 83 e8 01          	sub    $0x1,%rax
   25631:	0f b6 00             	movzbl (%rax),%eax
   25634:	38 45 f3             	cmp    %al,-0xd(%rbp)
   25637:	74 02                	je     2563b <_ZL11read_leb128PPhPi+0x96>
   25639:	eb 8d                	jmp    255c8 <_ZL11read_leb128PPhPi+0x23>
   2563b:	8b 55 f4             	mov    -0xc(%rbp),%edx
   2563e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25642:	89 10                	mov    %edx,(%rax)
   25644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25648:	c9                   	leaveq 
   25649:	c3                   	retq   

000000000002564a <_ZL12read_uleb128PPh>:
   2564a:	55                   	push   %rbp
   2564b:	48 89 e5             	mov    %rsp,%rbp
   2564e:	48 83 ec 20          	sub    $0x20,%rsp
   25652:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   25656:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2565d:	00 00 
   2565f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25663:	31 c0                	xor    %eax,%eax
   25665:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
   25669:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2566d:	48 89 d6             	mov    %rdx,%rsi
   25670:	48 89 c7             	mov    %rax,%rdi
   25673:	e8 2d ff ff ff       	callq  255a5 <_ZL11read_leb128PPhPi>
   25678:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2567c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   25683:	00 00 
   25685:	74 05                	je     2568c <_ZL12read_uleb128PPh+0x42>
   25687:	e8 00 5e fe ff       	callq  b48c <__stack_chk_fail>
   2568c:	c9                   	leaveq 
   2568d:	c3                   	retq   

000000000002568e <_ZL12read_sleb128PPh>:
   2568e:	55                   	push   %rbp
   2568f:	48 89 e5             	mov    %rsp,%rbp
   25692:	48 83 ec 30          	sub    $0x30,%rsp
   25696:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2569a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   256a1:	00 00 
   256a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   256a7:	31 c0                	xor    %eax,%eax
   256a9:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   256ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   256b1:	48 89 d6             	mov    %rdx,%rsi
   256b4:	48 89 c7             	mov    %rax,%rdi
   256b7:	e8 e9 fe ff ff       	callq  255a5 <_ZL11read_leb128PPhPi>
   256bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   256c0:	8b 45 ec             	mov    -0x14(%rbp),%eax
   256c3:	83 e8 01             	sub    $0x1,%eax
   256c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   256ca:	89 c1                	mov    %eax,%ecx
   256cc:	48 d3 ea             	shr    %cl,%rdx
   256cf:	48 89 d0             	mov    %rdx,%rax
   256d2:	48 83 f8 01          	cmp    $0x1,%rax
   256d6:	75 16                	jne    256ee <_ZL12read_sleb128PPh+0x60>
   256d8:	8b 45 ec             	mov    -0x14(%rbp),%eax
   256db:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   256e2:	89 c1                	mov    %eax,%ecx
   256e4:	48 d3 e2             	shl    %cl,%rdx
   256e7:	48 89 d0             	mov    %rdx,%rax
   256ea:	48 09 45 f0          	or     %rax,-0x10(%rbp)
   256ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   256f2:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   256f6:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   256fd:	00 00 
   256ff:	74 05                	je     25706 <_ZL12read_sleb128PPh+0x78>
   25701:	e8 86 5d fe ff       	callq  b48c <__stack_chk_fail>
   25706:	c9                   	leaveq 
   25707:	c3                   	retq   

0000000000025708 <_ZL10read_valuecPPh>:
   25708:	55                   	push   %rbp
   25709:	48 89 e5             	mov    %rsp,%rbp
   2570c:	48 83 ec 20          	sub    $0x20,%rsp
   25710:	89 f8                	mov    %edi,%eax
   25712:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   25716:	88 45 ec             	mov    %al,-0x14(%rbp)
   25719:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
   2571d:	0f b6 c0             	movzbl %al,%eax
   25720:	89 c7                	mov    %eax,%edi
   25722:	e8 e4 fd ff ff       	callq  2550b <_ZL12get_encodingh>
   25727:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2572a:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2572d:	83 f8 0c             	cmp    $0xc,%eax
   25730:	0f 87 4a 01 00 00    	ja     25880 <_ZL10read_valuecPPh+0x178>
   25736:	89 c0                	mov    %eax,%eax
   25738:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2573f:	00 
   25740:	48 8d 05 49 7e 01 00 	lea    0x17e49(%rip),%rax        # 3d590 <__PRETTY_FUNCTION__.5180+0x1c0>
   25747:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2574a:	48 63 d0             	movslq %eax,%rdx
   2574d:	48 8d 05 3c 7e 01 00 	lea    0x17e3c(%rip),%rax        # 3d590 <__PRETTY_FUNCTION__.5180+0x1c0>
   25754:	48 01 d0             	add    %rdx,%rax
   25757:	ff e0                	jmpq   *%rax
   25759:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2575d:	48 8b 00             	mov    (%rax),%rax
   25760:	0f b7 00             	movzwl (%rax),%eax
   25763:	0f b7 c0             	movzwl %ax,%eax
   25766:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2576a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2576e:	48 8b 00             	mov    (%rax),%rax
   25771:	48 8d 50 02          	lea    0x2(%rax),%rdx
   25775:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25779:	48 89 10             	mov    %rdx,(%rax)
   2577c:	e9 04 01 00 00       	jmpq   25885 <_ZL10read_valuecPPh+0x17d>
   25781:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25785:	48 8b 00             	mov    (%rax),%rax
   25788:	8b 00                	mov    (%rax),%eax
   2578a:	89 c0                	mov    %eax,%eax
   2578c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25790:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25794:	48 8b 00             	mov    (%rax),%rax
   25797:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2579b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2579f:	48 89 10             	mov    %rdx,(%rax)
   257a2:	e9 de 00 00 00       	jmpq   25885 <_ZL10read_valuecPPh+0x17d>
   257a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257ab:	48 8b 00             	mov    (%rax),%rax
   257ae:	48 8b 00             	mov    (%rax),%rax
   257b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   257b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257b9:	48 8b 00             	mov    (%rax),%rax
   257bc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   257c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257c4:	48 89 10             	mov    %rdx,(%rax)
   257c7:	e9 b9 00 00 00       	jmpq   25885 <_ZL10read_valuecPPh+0x17d>
   257cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257d0:	48 8b 00             	mov    (%rax),%rax
   257d3:	0f b7 00             	movzwl (%rax),%eax
   257d6:	48 0f bf c0          	movswq %ax,%rax
   257da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   257de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257e2:	48 8b 00             	mov    (%rax),%rax
   257e5:	48 8d 50 02          	lea    0x2(%rax),%rdx
   257e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257ed:	48 89 10             	mov    %rdx,(%rax)
   257f0:	e9 90 00 00 00       	jmpq   25885 <_ZL10read_valuecPPh+0x17d>
   257f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   257f9:	48 8b 00             	mov    (%rax),%rax
   257fc:	8b 00                	mov    (%rax),%eax
   257fe:	48 98                	cltq   
   25800:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25804:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25808:	48 8b 00             	mov    (%rax),%rax
   2580b:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2580f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25813:	48 89 10             	mov    %rdx,(%rax)
   25816:	eb 6d                	jmp    25885 <_ZL10read_valuecPPh+0x17d>
   25818:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2581c:	48 8b 00             	mov    (%rax),%rax
   2581f:	48 8b 00             	mov    (%rax),%rax
   25822:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2582a:	48 8b 00             	mov    (%rax),%rax
   2582d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   25831:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25835:	48 89 10             	mov    %rdx,(%rax)
   25838:	eb 4b                	jmp    25885 <_ZL10read_valuecPPh+0x17d>
   2583a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2583e:	48 8b 00             	mov    (%rax),%rax
   25841:	48 8b 00             	mov    (%rax),%rax
   25844:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25848:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2584c:	48 8b 00             	mov    (%rax),%rax
   2584f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   25853:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25857:	48 89 10             	mov    %rdx,(%rax)
   2585a:	eb 29                	jmp    25885 <_ZL10read_valuecPPh+0x17d>
   2585c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25860:	48 89 c7             	mov    %rax,%rdi
   25863:	e8 26 fe ff ff       	callq  2568e <_ZL12read_sleb128PPh>
   25868:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2586c:	eb 17                	jmp    25885 <_ZL10read_valuecPPh+0x17d>
   2586e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25872:	48 89 c7             	mov    %rax,%rdi
   25875:	e8 d0 fd ff ff       	callq  2564a <_ZL12read_uleb128PPh>
   2587a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2587e:	eb 05                	jmp    25885 <_ZL10read_valuecPPh+0x17d>
   25880:	e8 54 5d 01 00       	callq  3b5d9 <abort>
   25885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25889:	c9                   	leaveq 
   2588a:	c3                   	retq   

000000000002588b <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>:
   2588b:	55                   	push   %rbp
   2588c:	48 89 e5             	mov    %rsp,%rbp
   2588f:	48 83 ec 20          	sub    $0x20,%rsp
   25893:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25897:	89 f0                	mov    %esi,%eax
   25899:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2589d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   258a1:	88 45 f4             	mov    %al,-0xc(%rbp)
   258a4:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
   258a8:	89 c7                	mov    %eax,%edi
   258aa:	e8 6e fc ff ff       	callq  2551d <_ZL8get_baseh>
   258af:	83 f8 20             	cmp    $0x20,%eax
   258b2:	74 29                	je     258dd <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x52>
   258b4:	83 f8 20             	cmp    $0x20,%eax
   258b7:	7f 07                	jg     258c0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x35>
   258b9:	83 f8 10             	cmp    $0x10,%eax
   258bc:	74 0e                	je     258cc <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x41>
   258be:	eb 6f                	jmp    2592f <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0xa4>
   258c0:	83 f8 30             	cmp    $0x30,%eax
   258c3:	74 34                	je     258f9 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x6e>
   258c5:	83 f8 40             	cmp    $0x40,%eax
   258c8:	74 4b                	je     25915 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x8a>
   258ca:	eb 63                	jmp    2592f <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0xa4>
   258cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   258d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   258d4:	48 01 d0             	add    %rdx,%rax
   258d7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   258db:	eb 53                	jmp    25930 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0xa5>
   258dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258e1:	48 89 c7             	mov    %rax,%rdi
   258e4:	e8 ee 36 00 00       	callq  28fd7 <_Unwind_GetTextRelBase>
   258e9:	48 89 c2             	mov    %rax,%rdx
   258ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   258f0:	48 01 d0             	add    %rdx,%rax
   258f3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   258f7:	eb 37                	jmp    25930 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0xa5>
   258f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258fd:	48 89 c7             	mov    %rax,%rdi
   25900:	e8 98 35 00 00       	callq  28e9d <_Unwind_GetDataRelBase>
   25905:	48 89 c2             	mov    %rax,%rdx
   25908:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2590c:	48 01 d0             	add    %rdx,%rax
   2590f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   25913:	eb 1b                	jmp    25930 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0xa5>
   25915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25919:	48 89 c7             	mov    %rax,%rdi
   2591c:	e8 66 36 00 00       	callq  28f87 <_Unwind_GetRegionStart>
   25921:	48 89 c2             	mov    %rax,%rdx
   25924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25928:	48 01 d0             	add    %rdx,%rax
   2592b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2592f:	90                   	nop
   25930:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
   25934:	89 c7                	mov    %eax,%edi
   25936:	e8 f4 fb ff ff       	callq  2552f <_ZL11is_indirecth>
   2593b:	85 c0                	test   %eax,%eax
   2593d:	0f 95 c0             	setne  %al
   25940:	84 c0                	test   %al,%al
   25942:	74 0b                	je     2594f <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0xc4>
   25944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25948:	48 8b 00             	mov    (%rax),%rax
   2594b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2594f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25953:	c9                   	leaveq 
   25954:	c3                   	retq   

0000000000025955 <_ZL24read_value_with_encodingP15_Unwind_ContextPPhPm>:
   25955:	55                   	push   %rbp
   25956:	48 89 e5             	mov    %rsp,%rbp
   25959:	48 83 ec 30          	sub    $0x30,%rsp
   2595d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   25961:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   25965:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   25969:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2596d:	48 8b 00             	mov    (%rax),%rax
   25970:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25974:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25978:	48 8b 00             	mov    (%rax),%rax
   2597b:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2597f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   25983:	48 89 0a             	mov    %rcx,(%rdx)
   25986:	0f b6 00             	movzbl (%rax),%eax
   25989:	88 45 f7             	mov    %al,-0x9(%rbp)
   2598c:	80 7d f7 ff          	cmpb   $0xff,-0x9(%rbp)
   25990:	74 4f                	je     259e1 <_ZL24read_value_with_encodingP15_Unwind_ContextPPhPm+0x8c>
   25992:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
   25996:	0f be c0             	movsbl %al,%eax
   25999:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2599d:	48 89 d6             	mov    %rdx,%rsi
   259a0:	89 c7                	mov    %eax,%edi
   259a2:	e8 61 fd ff ff       	callq  25708 <_ZL10read_valuecPPh>
   259a7:	48 89 c2             	mov    %rax,%rdx
   259aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   259ae:	48 89 10             	mov    %rdx,(%rax)
   259b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   259b5:	48 8b 00             	mov    (%rax),%rax
   259b8:	48 89 c7             	mov    %rax,%rdi
   259bb:	0f b6 75 f7          	movzbl -0x9(%rbp),%esi
   259bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   259c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   259c7:	48 89 d1             	mov    %rdx,%rcx
   259ca:	48 89 fa             	mov    %rdi,%rdx
   259cd:	48 89 c7             	mov    %rax,%rdi
   259d0:	e8 b6 fe ff ff       	callq  2588b <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   259d5:	48 89 c2             	mov    %rax,%rdx
   259d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   259dc:	48 89 10             	mov    %rdx,(%rax)
   259df:	eb 01                	jmp    259e2 <_ZL24read_value_with_encodingP15_Unwind_ContextPPhPm+0x8d>
   259e1:	90                   	nop
   259e2:	c9                   	leaveq 
   259e3:	c3                   	retq   

00000000000259e4 <_ZL10parse_lsdaP15_Unwind_ContextPh>:
   259e4:	55                   	push   %rbp
   259e5:	48 89 e5             	mov    %rsp,%rbp
   259e8:	48 83 ec 40          	sub    $0x40,%rsp
   259ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   259f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   259f4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   259f8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   259ff:	00 00 
   25a01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25a05:	31 c0                	xor    %eax,%eax
   25a07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   25a0b:	48 89 c7             	mov    %rax,%rdi
   25a0e:	e8 74 35 00 00       	callq  28f87 <_Unwind_GetRegionStart>
   25a13:	48 89 c2             	mov    %rax,%rdx
   25a16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25a1a:	48 89 10             	mov    %rdx,(%rax)
   25a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25a21:	48 8b 00             	mov    (%rax),%rax
   25a24:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   25a28:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   25a2c:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   25a30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   25a34:	48 89 ce             	mov    %rcx,%rsi
   25a37:	48 89 c7             	mov    %rax,%rdi
   25a3a:	e8 16 ff ff ff       	callq  25955 <_ZL24read_value_with_encodingP15_Unwind_ContextPPhPm>
   25a3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25a43:	48 89 c2             	mov    %rax,%rdx
   25a46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25a4a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25a4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25a52:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   25a59:	00 
   25a5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   25a5e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   25a62:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   25a66:	0f b6 10             	movzbl (%rax),%edx
   25a69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25a6d:	88 50 18             	mov    %dl,0x18(%rax)
   25a70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25a74:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   25a78:	3c ff                	cmp    $0xff,%al
   25a7a:	74 2c                	je     25aa8 <_ZL10parse_lsdaP15_Unwind_ContextPh+0xc4>
   25a7c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   25a80:	48 89 c7             	mov    %rax,%rdi
   25a83:	e8 c2 fb ff ff       	callq  2564a <_ZL12read_uleb128PPh>
   25a88:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   25a8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   25a90:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   25a94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25a98:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   25a9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25aa0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   25aa4:	48 89 50 10          	mov    %rdx,0x10(%rax)
   25aa8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   25aac:	48 8d 50 01          	lea    0x1(%rax),%rdx
   25ab0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   25ab4:	0f b6 10             	movzbl (%rax),%edx
   25ab7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25abb:	88 50 30             	mov    %dl,0x30(%rax)
   25abe:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   25ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25ac6:	48 89 50 28          	mov    %rdx,0x28(%rax)
   25aca:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   25ace:	48 89 c7             	mov    %rax,%rdi
   25ad1:	e8 74 fb ff ff       	callq  2564a <_ZL12read_uleb128PPh>
   25ad6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   25ada:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   25ade:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25ae2:	48 01 c2             	add    %rax,%rdx
   25ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25ae9:	48 89 50 28          	mov    %rdx,0x28(%rax)
   25aed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   25af1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25af5:	48 89 50 20          	mov    %rdx,0x20(%rax)
   25af9:	90                   	nop
   25afa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25afe:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   25b02:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   25b09:	00 00 
   25b0b:	74 05                	je     25b12 <_ZL10parse_lsdaP15_Unwind_ContextPh+0x12e>
   25b0d:	e8 7a 59 fe ff       	callq  b48c <__stack_chk_fail>
   25b12:	c9                   	leaveq 
   25b13:	c3                   	retq   

0000000000025b14 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action>:
   25b14:	55                   	push   %rbp
   25b15:	48 89 e5             	mov    %rsp,%rbp
   25b18:	53                   	push   %rbx
   25b19:	48 83 ec 68          	sub    $0x68,%rsp
   25b1d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   25b21:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   25b25:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   25b29:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   25b30:	00 00 
   25b32:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   25b36:	31 c0                	xor    %eax,%eax
   25b38:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   25b3c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   25b43:	00 
   25b44:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   25b48:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   25b4f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   25b53:	48 89 c7             	mov    %rax,%rdi
   25b56:	e8 92 33 00 00       	callq  28eed <_Unwind_GetIP>
   25b5b:	48 89 c3             	mov    %rax,%rbx
   25b5e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   25b62:	48 89 c7             	mov    %rax,%rdi
   25b65:	e8 1d 34 00 00       	callq  28f87 <_Unwind_GetRegionStart>
   25b6a:	48 29 c3             	sub    %rax,%rbx
   25b6d:	48 89 d8             	mov    %rbx,%rax
   25b70:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   25b74:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25b78:	48 8b 40 20          	mov    0x20(%rax),%rax
   25b7c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   25b80:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25b84:	48 8b 50 28          	mov    0x28(%rax),%rdx
   25b88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   25b8c:	48 39 c2             	cmp    %rax,%rdx
   25b8f:	0f 82 df 00 00 00    	jb     25c74 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x160>
   25b95:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25b99:	0f b6 40 30          	movzbl 0x30(%rax),%eax
   25b9d:	0f be c0             	movsbl %al,%eax
   25ba0:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   25ba4:	48 89 d6             	mov    %rdx,%rsi
   25ba7:	89 c7                	mov    %eax,%edi
   25ba9:	e8 5a fb ff ff       	callq  25708 <_ZL10read_valuecPPh>
   25bae:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   25bb2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25bb6:	0f b6 40 30          	movzbl 0x30(%rax),%eax
   25bba:	0f be c0             	movsbl %al,%eax
   25bbd:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   25bc1:	48 89 d6             	mov    %rdx,%rsi
   25bc4:	89 c7                	mov    %eax,%edi
   25bc6:	e8 3d fb ff ff       	callq  25708 <_ZL10read_valuecPPh>
   25bcb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   25bcf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   25bd3:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   25bd7:	0f 87 96 00 00 00    	ja     25c73 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x15f>
   25bdd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25be1:	0f b6 40 30          	movzbl 0x30(%rax),%eax
   25be5:	0f be c0             	movsbl %al,%eax
   25be8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   25bec:	48 89 d6             	mov    %rdx,%rsi
   25bef:	89 c7                	mov    %eax,%edi
   25bf1:	e8 12 fb ff ff       	callq  25708 <_ZL10read_valuecPPh>
   25bf6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   25bfa:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   25bfe:	48 89 c7             	mov    %rax,%rdi
   25c01:	e8 44 fa ff ff       	callq  2564a <_ZL12read_uleb128PPh>
   25c06:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   25c0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   25c0e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   25c12:	0f 83 68 ff ff ff    	jae    25b80 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x6c>
   25c18:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   25c1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   25c20:	48 01 d0             	add    %rdx,%rax
   25c23:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   25c27:	0f 87 53 ff ff ff    	ja     25b80 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x6c>
   25c2d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   25c32:	74 1b                	je     25c4f <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x13b>
   25c34:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25c38:	48 8b 40 28          	mov    0x28(%rax),%rax
   25c3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   25c40:	48 83 ea 01          	sub    $0x1,%rdx
   25c44:	48 01 c2             	add    %rax,%rdx
   25c47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   25c4b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25c4f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   25c54:	74 16                	je     25c6c <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x158>
   25c56:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   25c5a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   25c5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25c62:	48 01 c2             	add    %rax,%rdx
   25c65:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   25c69:	48 89 10             	mov    %rdx,(%rax)
   25c6c:	b8 01 00 00 00       	mov    $0x1,%eax
   25c71:	eb 06                	jmp    25c79 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x165>
   25c73:	90                   	nop
   25c74:	b8 00 00 00 00       	mov    $0x0,%eax
   25c79:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   25c7d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   25c84:	00 00 
   25c86:	74 05                	je     25c8d <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action+0x179>
   25c88:	e8 ff 57 fe ff       	callq  b48c <__stack_chk_fail>
   25c8d:	48 83 c4 68          	add    $0x68,%rsp
   25c91:	5b                   	pop    %rbx
   25c92:	5d                   	pop    %rbp
   25c93:	c3                   	retq   

0000000000025c94 <tcxx_access_version_dummy1>:
   25c94:	55                   	push   %rbp
   25c95:	48 89 e5             	mov    %rsp,%rbp
   25c98:	c6 05 81 15 02 00 73 	movb   $0x73,0x21581(%rip)        # 47220 <sgx_tcxx_version>
   25c9f:	48 8d 05 7a 15 02 00 	lea    0x2157a(%rip),%rax        # 47220 <sgx_tcxx_version>
   25ca6:	5d                   	pop    %rbp
   25ca7:	c3                   	retq   

0000000000025ca8 <_ZL14saveLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEiPh>:
   25ca8:	55                   	push   %rbp
   25ca9:	48 89 e5             	mov    %rsp,%rbp
   25cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25cb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   25cb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   25cb8:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   25cbb:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   25cbf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   25cc4:	74 16                	je     25cdc <_ZL14saveLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEiPh+0x34>
   25cc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25cca:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   25ccd:	89 50 34             	mov    %edx,0x34(%rax)
   25cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25cd4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   25cd8:	48 89 50 48          	mov    %rdx,0x48(%rax)
   25cdc:	90                   	nop
   25cdd:	5d                   	pop    %rbp
   25cde:	c3                   	retq   

0000000000025cdf <_ZL14loadLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEPmPPh>:
   25cdf:	55                   	push   %rbp
   25ce0:	48 89 e5             	mov    %rsp,%rbp
   25ce3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25ce7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   25ceb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   25cef:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   25cf3:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   25cf7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   25cfc:	74 27                	je     25d25 <_ZL14loadLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEPmPPh+0x46>
   25cfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25d02:	8b 40 34             	mov    0x34(%rax),%eax
   25d05:	48 63 d0             	movslq %eax,%rdx
   25d08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   25d0c:	48 89 10             	mov    %rdx,(%rax)
   25d0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25d13:	48 8b 50 48          	mov    0x48(%rax),%rdx
   25d17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25d1b:	48 89 10             	mov    %rdx,(%rax)
   25d1e:	b8 00 00 00 00       	mov    $0x0,%eax
   25d23:	eb 05                	jmp    25d2a <_ZL14loadLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEPmPPh+0x4b>
   25d25:	b8 00 00 00 00       	mov    $0x0,%eax
   25d2a:	5d                   	pop    %rbp
   25d2b:	c3                   	retq   

0000000000025d2c <_ZL17continueUnwindingP17_Unwind_ExceptionP15_Unwind_Context>:
   25d2c:	55                   	push   %rbp
   25d2d:	48 89 e5             	mov    %rsp,%rbp
   25d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25d34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   25d38:	b8 08 00 00 00       	mov    $0x8,%eax
   25d3d:	5d                   	pop    %rbp
   25d3e:	c3                   	retq   

0000000000025d3f <_ZL14isCXXExceptionm>:
   25d3f:	55                   	push   %rbp
   25d40:	48 89 e5             	mov    %rsp,%rbp
   25d43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25d47:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
   25d4e:	55 4e 47 
   25d51:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   25d55:	74 10                	je     25d67 <_ZL14isCXXExceptionm+0x28>
   25d57:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   25d5e:	55 4e 47 
   25d61:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   25d65:	75 07                	jne    25d6e <_ZL14isCXXExceptionm+0x2f>
   25d67:	b8 01 00 00 00       	mov    $0x1,%eax
   25d6c:	eb 05                	jmp    25d73 <_ZL14isCXXExceptionm+0x34>
   25d6e:	b8 00 00 00 00       	mov    $0x0,%eax
   25d73:	5d                   	pop    %rbp
   25d74:	c3                   	retq   

0000000000025d75 <_ZL20isDependentExceptionm>:
   25d75:	55                   	push   %rbp
   25d76:	48 89 e5             	mov    %rsp,%rbp
   25d79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25d7d:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   25d84:	55 4e 47 
   25d87:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   25d8b:	0f 94 c0             	sete   %al
   25d8e:	5d                   	pop    %rbp
   25d8f:	c3                   	retq   

0000000000025d90 <_ZL20exceptionFromPointerPv>:
   25d90:	55                   	push   %rbp
   25d91:	48 89 e5             	mov    %rsp,%rbp
   25d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25d9c:	48 83 e8 60          	sub    $0x60,%rax
   25da0:	5d                   	pop    %rbp
   25da1:	c3                   	retq   

0000000000025da2 <_ZL26realExceptionFromExceptionPN10__cxxabiv115__cxa_exceptionE>:
   25da2:	55                   	push   %rbp
   25da3:	48 89 e5             	mov    %rsp,%rbp
   25da6:	48 83 ec 08          	sub    $0x8,%rsp
   25daa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25db2:	48 8b 40 60          	mov    0x60(%rax),%rax
   25db6:	48 89 c7             	mov    %rax,%rdi
   25db9:	e8 b7 ff ff ff       	callq  25d75 <_ZL20isDependentExceptionm>
   25dbe:	83 f0 01             	xor    $0x1,%eax
   25dc1:	84 c0                	test   %al,%al
   25dc3:	74 06                	je     25dcb <_ZL26realExceptionFromExceptionPN10__cxxabiv115__cxa_exceptionE+0x29>
   25dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25dc9:	eb 0b                	jmp    25dd6 <_ZL26realExceptionFromExceptionPN10__cxxabiv115__cxa_exceptionE+0x34>
   25dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25dcf:	48 8b 00             	mov    (%rax),%rax
   25dd2:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
   25dd6:	c9                   	leaveq 
   25dd7:	c3                   	retq   

0000000000025dd8 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   25dd8:	55                   	push   %rbp
   25dd9:	48 89 e5             	mov    %rsp,%rbp
   25ddc:	48 83 ec 10          	sub    $0x10,%rsp
   25de0:	89 7d fc             	mov    %edi,-0x4(%rbp)
   25de3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   25de7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25deb:	48 89 c7             	mov    %rax,%rdi
   25dee:	e8 0e 03 00 00       	callq  26101 <__cxa_free_exception>
   25df3:	90                   	nop
   25df4:	c9                   	leaveq 
   25df5:	c3                   	retq   

0000000000025df6 <_ZL21__get_thread_info_ptrv>:
   25df6:	55                   	push   %rbp
   25df7:	48 89 e5             	mov    %rsp,%rbp
   25dfa:	48 83 ec 10          	sub    $0x10,%rsp
   25dfe:	e8 d3 53 01 00       	callq  3b1d6 <get_thread_data>
   25e03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25e0b:	48 83 c0 68          	add    $0x68,%rax
   25e0f:	c9                   	leaveq 
   25e10:	c3                   	retq   

0000000000025e11 <_ZL11thread_infov>:
   25e11:	55                   	push   %rbp
   25e12:	48 89 e5             	mov    %rsp,%rbp
   25e15:	e8 dc ff ff ff       	callq  25df6 <_ZL21__get_thread_info_ptrv>
   25e1a:	5d                   	pop    %rbp
   25e1b:	c3                   	retq   

0000000000025e1c <_ZL16thread_info_fastv>:
   25e1c:	55                   	push   %rbp
   25e1d:	48 89 e5             	mov    %rsp,%rbp
   25e20:	e8 d1 ff ff ff       	callq  25df6 <_ZL21__get_thread_info_ptrv>
   25e25:	5d                   	pop    %rbp
   25e26:	c3                   	retq   

0000000000025e27 <__cxa_get_globals>:
   25e27:	55                   	push   %rbp
   25e28:	48 89 e5             	mov    %rsp,%rbp
   25e2b:	e8 e1 ff ff ff       	callq  25e11 <_ZL11thread_infov>
   25e30:	48 83 c0 20          	add    $0x20,%rax
   25e34:	5d                   	pop    %rbp
   25e35:	c3                   	retq   

0000000000025e36 <__cxa_get_globals_fast>:
   25e36:	55                   	push   %rbp
   25e37:	48 89 e5             	mov    %rsp,%rbp
   25e3a:	e8 dd ff ff ff       	callq  25e1c <_ZL16thread_info_fastv>
   25e3f:	48 83 c0 20          	add    $0x20,%rax
   25e43:	5d                   	pop    %rbp
   25e44:	c3                   	retq   

0000000000025e45 <_ZL16emergency_mallocm>:
   25e45:	55                   	push   %rbp
   25e46:	48 89 e5             	mov    %rsp,%rbp
   25e49:	48 83 ec 30          	sub    $0x30,%rsp
   25e4d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   25e51:	48 81 7d d8 00 04 00 	cmpq   $0x400,-0x28(%rbp)
   25e58:	00 
   25e59:	76 0a                	jbe    25e65 <_ZL16emergency_mallocm+0x20>
   25e5b:	b8 00 00 00 00       	mov    $0x0,%eax
   25e60:	e9 20 01 00 00       	jmpq   25f85 <_ZL16emergency_mallocm+0x140>
   25e65:	e8 a7 ff ff ff       	callq  25e11 <_ZL11thread_infov>
   25e6a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   25e6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25e72:	8b 40 10             	mov    0x10(%rax),%eax
   25e75:	83 f8 03             	cmp    $0x3,%eax
   25e78:	7e 0a                	jle    25e84 <_ZL16emergency_mallocm+0x3f>
   25e7a:	b8 00 00 00 00       	mov    $0x0,%eax
   25e7f:	e9 01 01 00 00       	jmpq   25f85 <_ZL16emergency_mallocm+0x140>
   25e84:	48 8d 3d 25 6b 02 00 	lea    0x26b25(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   25e8b:	e8 61 dd fe ff       	callq  13bf1 <sgx_spin_lock>
   25e90:	c7 45 e8 ff ff ff ff 	movl   $0xffffffff,-0x18(%rbp)
   25e97:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   25e9b:	0f 89 b4 00 00 00    	jns    25f55 <_ZL16emergency_mallocm+0x110>
   25ea1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25ea5:	48 89 c6             	mov    %rax,%rsi
   25ea8:	bf 01 00 00 00       	mov    $0x1,%edi
   25ead:	e8 af c5 fe ff       	callq  12461 <calloc>
   25eb2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   25eb6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   25ebb:	74 15                	je     25ed2 <_ZL16emergency_mallocm+0x8d>
   25ebd:	48 8d 3d ec 6a 02 00 	lea    0x26aec(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   25ec4:	e8 8f dd fe ff       	callq  13c58 <sgx_spin_unlock>
   25ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ecd:	e9 b3 00 00 00       	jmpq   25f85 <_ZL16emergency_mallocm+0x140>
   25ed2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   25ed9:	83 7d ec 0f          	cmpl   $0xf,-0x14(%rbp)
   25edd:	7f 37                	jg     25f16 <_ZL16emergency_mallocm+0xd1>
   25edf:	8b 45 ec             	mov    -0x14(%rbp),%eax
   25ee2:	48 63 d0             	movslq %eax,%rdx
   25ee5:	48 8d 05 b4 6a 02 00 	lea    0x26ab4(%rip),%rax        # 4c9a0 <_ZL16buffer_allocated>
   25eec:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   25ef0:	83 f0 01             	xor    $0x1,%eax
   25ef3:	84 c0                	test   %al,%al
   25ef5:	74 19                	je     25f10 <_ZL16emergency_mallocm+0xcb>
   25ef7:	8b 45 ec             	mov    -0x14(%rbp),%eax
   25efa:	89 45 e8             	mov    %eax,-0x18(%rbp)
   25efd:	8b 45 ec             	mov    -0x14(%rbp),%eax
   25f00:	48 63 d0             	movslq %eax,%rdx
   25f03:	48 8d 05 96 6a 02 00 	lea    0x26a96(%rip),%rax        # 4c9a0 <_ZL16buffer_allocated>
   25f0a:	c6 04 02 01          	movb   $0x1,(%rdx,%rax,1)
   25f0e:	eb 06                	jmp    25f16 <_ZL16emergency_mallocm+0xd1>
   25f10:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   25f14:	eb c3                	jmp    25ed9 <_ZL16emergency_mallocm+0x94>
   25f16:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   25f1a:	0f 89 77 ff ff ff    	jns    25e97 <_ZL16emergency_mallocm+0x52>
   25f20:	c6 05 e1 12 02 00 00 	movb   $0x0,0x212e1(%rip)        # 47208 <_ZL16buffer_available>
   25f27:	48 8d 3d 82 6a 02 00 	lea    0x26a82(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   25f2e:	e8 25 dd fe ff       	callq  13c58 <sgx_spin_unlock>
   25f33:	0f b6 05 ce 12 02 00 	movzbl 0x212ce(%rip),%eax        # 47208 <_ZL16buffer_available>
   25f3a:	83 f0 01             	xor    $0x1,%eax
   25f3d:	84 c0                	test   %al,%al
   25f3f:	74 03                	je     25f44 <_ZL16emergency_mallocm+0xff>
   25f41:	90                   	nop
   25f42:	eb ef                	jmp    25f33 <_ZL16emergency_mallocm+0xee>
   25f44:	48 8d 3d 65 6a 02 00 	lea    0x26a65(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   25f4b:	e8 a1 dc fe ff       	callq  13bf1 <sgx_spin_lock>
   25f50:	e9 42 ff ff ff       	jmpq   25e97 <_ZL16emergency_mallocm+0x52>
   25f55:	48 8d 3d 54 6a 02 00 	lea    0x26a54(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   25f5c:	e8 f7 dc fe ff       	callq  13c58 <sgx_spin_unlock>
   25f61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25f65:	8b 40 10             	mov    0x10(%rax),%eax
   25f68:	8d 50 01             	lea    0x1(%rax),%edx
   25f6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   25f6f:	89 50 10             	mov    %edx,0x10(%rax)
   25f72:	8b 45 e8             	mov    -0x18(%rbp),%eax
   25f75:	c1 e0 0a             	shl    $0xa,%eax
   25f78:	48 63 d0             	movslq %eax,%rdx
   25f7b:	48 8d 05 1e 2a 02 00 	lea    0x22a1e(%rip),%rax        # 489a0 <_ZL16emergency_buffer>
   25f82:	48 01 d0             	add    %rdx,%rax
   25f85:	c9                   	leaveq 
   25f86:	c3                   	retq   

0000000000025f87 <_ZL21emergency_malloc_freePc>:
   25f87:	55                   	push   %rbp
   25f88:	48 89 e5             	mov    %rsp,%rbp
   25f8b:	48 83 ec 20          	sub    $0x20,%rsp
   25f8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   25f93:	c7 45 f8 ff ff ff ff 	movl   $0xffffffff,-0x8(%rbp)
   25f9a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   25fa1:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)
   25fa5:	7f 27                	jg     25fce <_ZL21emergency_malloc_freePc+0x47>
   25fa7:	8b 45 fc             	mov    -0x4(%rbp),%eax
   25faa:	c1 e0 0a             	shl    $0xa,%eax
   25fad:	48 63 d0             	movslq %eax,%rdx
   25fb0:	48 8d 05 e9 29 02 00 	lea    0x229e9(%rip),%rax        # 489a0 <_ZL16emergency_buffer>
   25fb7:	48 01 d0             	add    %rdx,%rax
   25fba:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   25fbe:	75 08                	jne    25fc8 <_ZL21emergency_malloc_freePc+0x41>
   25fc0:	8b 45 fc             	mov    -0x4(%rbp),%eax
   25fc3:	89 45 f8             	mov    %eax,-0x8(%rbp)
   25fc6:	eb 06                	jmp    25fce <_ZL21emergency_malloc_freePc+0x47>
   25fc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   25fcc:	eb d3                	jmp    25fa1 <_ZL21emergency_malloc_freePc+0x1a>
   25fce:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   25fd2:	79 1f                	jns    25ff3 <_ZL21emergency_malloc_freePc+0x6c>
   25fd4:	48 8d 0d 9d 74 01 00 	lea    0x1749d(%rip),%rcx        # 3d478 <__PRETTY_FUNCTION__.5180+0xa8>
   25fdb:	48 8d 15 fe 75 01 00 	lea    0x175fe(%rip),%rdx        # 3d5e0 <_ZZL21emergency_malloc_freePcE8__func__>
   25fe2:	be b5 01 00 00       	mov    $0x1b5,%esi
   25fe7:	48 8d 3d d5 74 01 00 	lea    0x174d5(%rip),%rdi        # 3d4c3 <__PRETTY_FUNCTION__.5180+0xf3>
   25fee:	e8 a2 54 fe ff       	callq  b495 <__assert>
   25ff3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25ff7:	ba 00 04 00 00       	mov    $0x400,%edx
   25ffc:	be 00 00 00 00       	mov    $0x0,%esi
   26001:	48 89 c7             	mov    %rax,%rdi
   26004:	e8 2c d7 fe ff       	callq  13735 <memset>
   26009:	48 8d 3d a0 69 02 00 	lea    0x269a0(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   26010:	e8 dc db fe ff       	callq  13bf1 <sgx_spin_lock>
   26015:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
   26019:	74 18                	je     26033 <_ZL21emergency_malloc_freePc+0xac>
   2601b:	8b 45 f8             	mov    -0x8(%rbp),%eax
   2601e:	48 63 d0             	movslq %eax,%rdx
   26021:	48 8d 05 78 69 02 00 	lea    0x26978(%rip),%rax        # 4c9a0 <_ZL16buffer_allocated>
   26028:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   2602c:	c6 05 d5 11 02 00 01 	movb   $0x1,0x211d5(%rip)        # 47208 <_ZL16buffer_available>
   26033:	48 8d 3d 76 69 02 00 	lea    0x26976(%rip),%rdi        # 4c9b0 <_ZL21emergency_malloc_lock>
   2603a:	e8 19 dc fe ff       	callq  13c58 <sgx_spin_unlock>
   2603f:	90                   	nop
   26040:	c9                   	leaveq 
   26041:	c3                   	retq   

0000000000026042 <_ZL12alloc_or_diem>:
   26042:	55                   	push   %rbp
   26043:	48 89 e5             	mov    %rsp,%rbp
   26046:	48 83 ec 20          	sub    $0x20,%rsp
   2604a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2604e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26052:	48 89 c6             	mov    %rax,%rsi
   26055:	bf 01 00 00 00       	mov    $0x1,%edi
   2605a:	e8 02 c4 fe ff       	callq  12461 <calloc>
   2605f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26063:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   26068:	75 1c                	jne    26086 <_ZL12alloc_or_diem+0x44>
   2606a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2606e:	48 89 c7             	mov    %rax,%rdi
   26071:	e8 cf fd ff ff       	callq  25e45 <_ZL16emergency_mallocm>
   26076:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2607a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2607f:	75 05                	jne    26086 <_ZL12alloc_or_diem+0x44>
   26081:	e8 31 0d 00 00       	callq  26db7 <_ZSt9terminatev>
   26086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2608a:	c9                   	leaveq 
   2608b:	c3                   	retq   

000000000002608c <_ZL14free_exceptionPc>:
   2608c:	55                   	push   %rbp
   2608d:	48 89 e5             	mov    %rsp,%rbp
   26090:	48 83 ec 10          	sub    $0x10,%rsp
   26094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26098:	48 8d 05 01 29 02 00 	lea    0x22901(%rip),%rax        # 489a0 <_ZL16emergency_buffer>
   2609f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   260a3:	72 1b                	jb     260c0 <_ZL14free_exceptionPc+0x34>
   260a5:	48 8d 05 f4 68 02 00 	lea    0x268f4(%rip),%rax        # 4c9a0 <_ZL16buffer_allocated>
   260ac:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   260b0:	73 0e                	jae    260c0 <_ZL14free_exceptionPc+0x34>
   260b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   260b6:	48 89 c7             	mov    %rax,%rdi
   260b9:	e8 c9 fe ff ff       	callq  25f87 <_ZL21emergency_malloc_freePc>
   260be:	eb 0c                	jmp    260cc <_ZL14free_exceptionPc+0x40>
   260c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   260c4:	48 89 c7             	mov    %rax,%rdi
   260c7:	e8 73 ae fe ff       	callq  10f3f <dlfree>
   260cc:	90                   	nop
   260cd:	c9                   	leaveq 
   260ce:	c3                   	retq   

00000000000260cf <__cxa_allocate_exception>:
   260cf:	55                   	push   %rbp
   260d0:	48 89 e5             	mov    %rsp,%rbp
   260d3:	48 83 ec 20          	sub    $0x20,%rsp
   260d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   260db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   260df:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   260e3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   260e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   260eb:	48 89 c7             	mov    %rax,%rdi
   260ee:	e8 4f ff ff ff       	callq  26042 <_ZL12alloc_or_diem>
   260f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   260f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   260fb:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   260ff:	c9                   	leaveq 
   26100:	c3                   	retq   

0000000000026101 <__cxa_free_exception>:
   26101:	55                   	push   %rbp
   26102:	48 89 e5             	mov    %rsp,%rbp
   26105:	53                   	push   %rbx
   26106:	48 83 ec 28          	sub    $0x28,%rsp
   2610a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2610e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26112:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
   26116:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2611a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2611e:	48 8b 40 10          	mov    0x10(%rax),%rax
   26122:	48 85 c0             	test   %rax,%rax
   26125:	74 11                	je     26138 <__cxa_free_exception+0x37>
   26127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2612b:	48 8b 40 10          	mov    0x10(%rax),%rax
   2612f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   26133:	48 89 d7             	mov    %rdx,%rdi
   26136:	ff d0                	callq  *%rax
   26138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2613c:	48 89 c7             	mov    %rax,%rdi
   2613f:	e8 48 ff ff ff       	callq  2608c <_ZL14free_exceptionPc>
   26144:	eb 27                	jmp    2616d <__cxa_free_exception+0x6c>
   26146:	48 89 c7             	mov    %rax,%rdi
   26149:	e8 8c 0a 00 00       	callq  26bda <__cxa_begin_catch>
   2614e:	e8 64 0c 00 00       	callq  26db7 <_ZSt9terminatev>
   26153:	e8 57 0b 00 00       	callq  26caf <__cxa_end_catch>
   26158:	eb de                	jmp    26138 <__cxa_free_exception+0x37>
   2615a:	48 89 c3             	mov    %rax,%rbx
   2615d:	e8 4d 0b 00 00       	callq  26caf <__cxa_end_catch>
   26162:	48 89 d8             	mov    %rbx,%rax
   26165:	48 89 c7             	mov    %rax,%rdi
   26168:	e8 a6 ab ff ff       	callq  20d13 <_Unwind_Resume>
   2616d:	48 83 c4 28          	add    $0x28,%rsp
   26171:	5b                   	pop    %rbx
   26172:	5d                   	pop    %rbp
   26173:	c3                   	retq   

0000000000026174 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>:
   26174:	55                   	push   %rbp
   26175:	48 89 e5             	mov    %rsp,%rbp
   26178:	48 83 ec 10          	sub    $0x10,%rsp
   2617c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26184:	48 8b 40 60          	mov    0x60(%rax),%rax
   26188:	48 89 c7             	mov    %rax,%rdi
   2618b:	e8 e5 fb ff ff       	callq  25d75 <_ZL20isDependentExceptionm>
   26190:	84 c0                	test   %al,%al
   26192:	74 12                	je     261a6 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x32>
   26194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26198:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   2619c:	48 89 c7             	mov    %rax,%rdi
   2619f:	e8 38 00 00 00       	callq  261dc <__cxa_free_dependent_exception>
   261a4:	eb 34                	jmp    261da <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x66>
   261a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   261aa:	b8 01 00 00 00       	mov    $0x1,%eax
   261af:	48 f7 d8             	neg    %rax
   261b2:	48 89 c1             	mov    %rax,%rcx
   261b5:	48 89 c8             	mov    %rcx,%rax
   261b8:	f0 48 0f c1 02       	lock xadd %rax,(%rdx)
   261bd:	48 01 c8             	add    %rcx,%rax
   261c0:	48 85 c0             	test   %rax,%rax
   261c3:	0f 94 c0             	sete   %al
   261c6:	84 c0                	test   %al,%al
   261c8:	74 10                	je     261da <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x66>
   261ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   261ce:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   261d2:	48 89 c7             	mov    %rax,%rdi
   261d5:	e8 27 ff ff ff       	callq  26101 <__cxa_free_exception>
   261da:	c9                   	leaveq 
   261db:	c3                   	retq   

00000000000261dc <__cxa_free_dependent_exception>:
   261dc:	55                   	push   %rbp
   261dd:	48 89 e5             	mov    %rsp,%rbp
   261e0:	48 83 ec 20          	sub    $0x20,%rsp
   261e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   261e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   261ec:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
   261f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   261f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   261f8:	48 8b 40 60          	mov    0x60(%rax),%rax
   261fc:	48 89 c7             	mov    %rax,%rdi
   261ff:	e8 71 fb ff ff       	callq  25d75 <_ZL20isDependentExceptionm>
   26204:	84 c0                	test   %al,%al
   26206:	75 1f                	jne    26227 <__cxa_free_dependent_exception+0x4b>
   26208:	48 8d 0d c9 72 01 00 	lea    0x172c9(%rip),%rcx        # 3d4d8 <__PRETTY_FUNCTION__.5180+0x108>
   2620f:	48 8d 15 ea 73 01 00 	lea    0x173ea(%rip),%rdx        # 3d600 <_ZZ30__cxa_free_dependent_exceptionE8__func__>
   26216:	be 2b 02 00 00       	mov    $0x22b,%esi
   2621b:	48 8d 3d a1 72 01 00 	lea    0x172a1(%rip),%rdi        # 3d4c3 <__PRETTY_FUNCTION__.5180+0xf3>
   26222:	e8 6e 52 fe ff       	callq  b495 <__assert>
   26227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2622b:	48 8b 00             	mov    (%rax),%rax
   2622e:	48 85 c0             	test   %rax,%rax
   26231:	74 14                	je     26247 <__cxa_free_dependent_exception+0x6b>
   26233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26237:	48 89 c7             	mov    %rax,%rdi
   2623a:	e8 63 fb ff ff       	callq  25da2 <_ZL26realExceptionFromExceptionPN10__cxxabiv115__cxa_exceptionE>
   2623f:	48 89 c7             	mov    %rax,%rdi
   26242:	e8 2d ff ff ff       	callq  26174 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   26247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2624b:	48 89 c7             	mov    %rax,%rdi
   2624e:	e8 39 fe ff ff       	callq  2608c <_ZL14free_exceptionPc>
   26253:	90                   	nop
   26254:	c9                   	leaveq 
   26255:	c3                   	retq   

0000000000026256 <_ZL5traceP15_Unwind_ContextPv>:
   26256:	55                   	push   %rbp
   26257:	48 89 e5             	mov    %rsp,%rbp
   2625a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2625e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   26262:	b8 08 00 00 00       	mov    $0x8,%eax
   26267:	5d                   	pop    %rbp
   26268:	c3                   	retq   

0000000000026269 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>:
   26269:	55                   	push   %rbp
   2626a:	48 89 e5             	mov    %rsp,%rbp
   2626d:	48 83 ec 20          	sub    $0x20,%rsp
   26271:	89 7d ec             	mov    %edi,-0x14(%rbp)
   26274:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   26278:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2627b:	83 f8 03             	cmp    $0x3,%eax
   2627e:	0f 84 a0 00 00 00    	je     26324 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xbb>
   26284:	83 f8 05             	cmp    $0x5,%eax
   26287:	74 0e                	je     26297 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x2e>
   26289:	83 f8 02             	cmp    $0x2,%eax
   2628c:	0f 84 95 00 00 00    	je     26327 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xbe>
   26292:	e9 91 00 00 00       	jmpq   26328 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xbf>
   26297:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2629b:	48 89 c7             	mov    %rax,%rdi
   2629e:	e8 ff fa ff ff       	callq  25da2 <_ZL26realExceptionFromExceptionPN10__cxxabiv115__cxa_exceptionE>
   262a3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   262a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   262ab:	48 8b 40 08          	mov    0x8(%rax),%rax
   262af:	48 85 c0             	test   %rax,%rax
   262b2:	74 1d                	je     262d1 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x68>
   262b4:	b9 00 00 00 00       	mov    $0x0,%ecx
   262b9:	48 8d 15 50 06 02 00 	lea    0x20650(%rip),%rdx        # 46910 <_ZTIN10__cxxabiv117__class_type_infoE>
   262c0:	48 8d 35 61 06 02 00 	lea    0x20661(%rip),%rsi        # 46928 <_ZTISt9type_info>
   262c7:	48 89 c7             	mov    %rax,%rdi
   262ca:	e8 09 74 00 00       	callq  2d6d8 <__dynamic_cast>
   262cf:	eb 05                	jmp    262d6 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6d>
   262d1:	b8 00 00 00 00       	mov    $0x0,%eax
   262d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   262da:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   262df:	74 30                	je     26311 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xa8>
   262e1:	48 8b 0d 28 0f 02 00 	mov    0x20f28(%rip),%rcx        # 47210 <_ZZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionEE4e_ti>
   262e8:	48 8b 05 21 0f 02 00 	mov    0x20f21(%rip),%rax        # 47210 <_ZZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionEE4e_ti>
   262ef:	48 8b 00             	mov    (%rax),%rax
   262f2:	48 83 c0 30          	add    $0x30,%rax
   262f6:	48 8b 00             	mov    (%rax),%rax
   262f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   262fd:	48 8d b2 80 00 00 00 	lea    0x80(%rdx),%rsi
   26304:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   26308:	48 89 cf             	mov    %rcx,%rdi
   2630b:	ff d0                	callq  *%rax
   2630d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26311:	be 00 00 00 00       	mov    $0x0,%esi
   26316:	48 8d 3d 39 ff ff ff 	lea    -0xc7(%rip),%rdi        # 26256 <_ZL5traceP15_Unwind_ContextPv>
   2631d:	e8 a4 2a 00 00       	callq  28dc6 <_Unwind_Backtrace>
   26322:	eb 04                	jmp    26328 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xbf>
   26324:	90                   	nop
   26325:	eb 01                	jmp    26328 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xbf>
   26327:	90                   	nop
   26328:	e8 8a 0a 00 00       	callq  26db7 <_ZSt9terminatev>
   2632d:	90                   	nop
   2632e:	c9                   	leaveq 
   2632f:	c3                   	retq   

0000000000026330 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>:
   26330:	55                   	push   %rbp
   26331:	48 89 e5             	mov    %rsp,%rbp
   26334:	48 83 ec 20          	sub    $0x20,%rsp
   26338:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2633c:	e8 d0 fa ff ff       	callq  25e11 <_ZL11thread_infov>
   26341:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26349:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2634d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26351:	48 89 50 18          	mov    %rdx,0x18(%rax)
   26355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26359:	48 8b 40 18          	mov    0x18(%rax),%rax
   2635d:	48 85 c0             	test   %rax,%rax
   26360:	75 0f                	jne    26371 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x41>
   26362:	48 8b 15 97 0e 02 00 	mov    0x20e97(%rip),%rdx        # 47200 <_ZL17unexpectedHandler>
   26369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2636d:	48 89 50 18          	mov    %rdx,0x18(%rax)
   26371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26375:	48 8b 10             	mov    (%rax),%rdx
   26378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2637c:	48 89 50 20          	mov    %rdx,0x20(%rax)
   26380:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26384:	48 8b 40 20          	mov    0x20(%rax),%rax
   26388:	48 85 c0             	test   %rax,%rax
   2638b:	75 0f                	jne    2639c <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x6c>
   2638d:	48 8b 15 64 0e 02 00 	mov    0x20e64(%rip),%rdx        # 471f8 <_ZL16terminateHandler>
   26394:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26398:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2639c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   263a0:	8b 40 28             	mov    0x28(%rax),%eax
   263a3:	8d 50 01             	lea    0x1(%rax),%edx
   263a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   263aa:	89 50 28             	mov    %edx,0x28(%rax)
   263ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   263b1:	48 83 c0 60          	add    $0x60,%rax
   263b5:	48 89 c7             	mov    %rax,%rdi
   263b8:	e8 29 2c 00 00       	callq  28fe6 <_Unwind_RaiseException>
   263bd:	89 45 f4             	mov    %eax,-0xc(%rbp)
   263c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   263c4:	8b 45 f4             	mov    -0xc(%rbp),%eax
   263c7:	48 89 d6             	mov    %rdx,%rsi
   263ca:	89 c7                	mov    %eax,%edi
   263cc:	e8 98 fe ff ff       	callq  26269 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>
   263d1:	90                   	nop
   263d2:	c9                   	leaveq 
   263d3:	c3                   	retq   

00000000000263d4 <__cxa_throw>:
   263d4:	55                   	push   %rbp
   263d5:	48 89 e5             	mov    %rsp,%rbp
   263d8:	48 83 ec 30          	sub    $0x30,%rsp
   263dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   263e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   263e4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   263e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   263ec:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
   263f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   263f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   263f8:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   263ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26403:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   26407:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2640b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2640f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   26413:	48 89 50 10          	mov    %rdx,0x10(%rax)
   26417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2641b:	48 b9 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rcx
   26422:	55 4e 47 
   26425:	48 89 48 60          	mov    %rcx,0x60(%rax)
   26429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2642d:	48 8d 15 a4 f9 ff ff 	lea    -0x65c(%rip),%rdx        # 25dd8 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>
   26434:	48 89 50 68          	mov    %rdx,0x68(%rax)
   26438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2643c:	48 89 c7             	mov    %rax,%rdi
   2643f:	e8 ec fe ff ff       	callq  26330 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>
   26444:	90                   	nop
   26445:	c9                   	leaveq 
   26446:	c3                   	retq   

0000000000026447 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai>:
   26447:	55                   	push   %rbp
   26448:	48 89 e5             	mov    %rsp,%rbp
   2644b:	53                   	push   %rbx
   2644c:	48 83 ec 48          	sub    $0x48,%rsp
   26450:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   26454:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   26458:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2645b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26462:	00 00 
   26464:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   26468:	31 c0                	xor    %eax,%eax
   2646a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2646e:	48 8b 58 10          	mov    0x10(%rax),%rbx
   26472:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26476:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   2647a:	0f b6 c0             	movzbl %al,%eax
   2647d:	89 c7                	mov    %eax,%edi
   2647f:	e8 c0 f0 ff ff       	callq  25544 <_ZL30dwarf_size_of_fixed_size_fieldh>
   26484:	0f af 45 bc          	imul   -0x44(%rbp),%eax
   26488:	48 98                	cltq   
   2648a:	48 f7 d8             	neg    %rax
   2648d:	48 01 d8             	add    %rbx,%rax
   26490:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   26494:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   26498:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2649c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   264a0:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   264a4:	0f be c0             	movsbl %al,%eax
   264a7:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   264ab:	48 89 d6             	mov    %rdx,%rsi
   264ae:	89 c7                	mov    %eax,%edi
   264b0:	e8 53 f2 ff ff       	callq  25708 <_ZL10read_valuecPPh>
   264b5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   264b9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   264be:	75 07                	jne    264c7 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai+0x80>
   264c0:	b8 00 00 00 00       	mov    $0x0,%eax
   264c5:	eb 1f                	jmp    264e6 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai+0x9f>
   264c7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   264cb:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   264cf:	0f b6 f0             	movzbl %al,%esi
   264d2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   264d6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   264da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   264de:	48 89 c7             	mov    %rax,%rdi
   264e1:	e8 a5 f3 ff ff       	callq  2588b <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   264e6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   264ea:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   264f1:	00 00 
   264f3:	74 05                	je     264fa <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai+0xb3>
   264f5:	e8 92 4f fe ff       	callq  b48c <__stack_chk_fail>
   264fa:	48 83 c4 48          	add    $0x48,%rsp
   264fe:	5b                   	pop    %rbx
   264ff:	5d                   	pop    %rbp
   26500:	c3                   	retq   

0000000000026501 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>:
   26501:	55                   	push   %rbp
   26502:	48 89 e5             	mov    %rsp,%rbp
   26505:	48 83 ec 40          	sub    $0x40,%rsp
   26509:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2650d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   26511:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   26515:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2651c:	00 00 
   2651e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26522:	31 c0                	xor    %eax,%eax
   26524:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26528:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   2652c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   26530:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   26537:	00 
   26538:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2653d:	74 37                	je     26576 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   2653f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26543:	48 8b 40 08          	mov    0x8(%rax),%rax
   26547:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2654b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2654f:	48 8b 00             	mov    (%rax),%rax
   26552:	48 83 c0 10          	add    $0x10,%rax
   26556:	48 8b 00             	mov    (%rax),%rax
   26559:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2655d:	48 89 d7             	mov    %rdx,%rdi
   26560:	ff d0                	callq  *%rax
   26562:	88 45 e7             	mov    %al,-0x19(%rbp)
   26565:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
   26569:	74 0b                	je     26576 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   2656b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2656f:	48 8b 00             	mov    (%rax),%rax
   26572:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   26576:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2657b:	75 19                	jne    26596 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x95>
   2657d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   26582:	74 0b                	je     2658f <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x8e>
   26584:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   26588:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2658c:	48 89 10             	mov    %rdx,(%rax)
   2658f:	b8 01 00 00 00       	mov    $0x1,%eax
   26594:	eb 73                	jmp    26609 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x108>
   26596:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2659b:	75 07                	jne    265a4 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xa3>
   2659d:	b8 00 00 00 00       	mov    $0x0,%eax
   265a2:	eb 65                	jmp    26609 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x108>
   265a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   265a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   265ac:	48 89 d6             	mov    %rdx,%rsi
   265af:	48 89 c7             	mov    %rax,%rdi
   265b2:	e8 73 0c 00 00       	callq  2722a <_ZNKSt9type_infoeqERKS_>
   265b7:	84 c0                	test   %al,%al
   265b9:	74 12                	je     265cd <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xcc>
   265bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   265bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   265c3:	48 89 10             	mov    %rdx,(%rax)
   265c6:	b8 01 00 00 00       	mov    $0x1,%eax
   265cb:	eb 3c                	jmp    26609 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x108>
   265cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   265d1:	48 8b 00             	mov    (%rax),%rax
   265d4:	48 83 c0 20          	add    $0x20,%rax
   265d8:	48 8b 00             	mov    (%rax),%rax
   265db:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   265df:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   265e3:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   265e7:	b9 01 00 00 00       	mov    $0x1,%ecx
   265ec:	ff d0                	callq  *%rax
   265ee:	84 c0                	test   %al,%al
   265f0:	74 12                	je     26604 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x103>
   265f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   265f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   265fa:	48 89 10             	mov    %rdx,(%rax)
   265fd:	b8 01 00 00 00       	mov    $0x1,%eax
   26602:	eb 05                	jmp    26609 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x108>
   26604:	b8 00 00 00 00       	mov    $0x0,%eax
   26609:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2660d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   26614:	00 00 
   26616:	74 05                	je     2661d <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x11c>
   26618:	e8 6f 4e fe ff       	callq  b48c <__stack_chk_fail>
   2661d:	c9                   	leaveq 
   2661e:	c3                   	retq   

000000000002661f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv>:
   2661f:	55                   	push   %rbp
   26620:	48 89 e5             	mov    %rsp,%rbp
   26623:	48 83 ec 60          	sub    $0x60,%rsp
   26627:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2662b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2662f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   26633:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   26637:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   2663b:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
   2663f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   26643:	48 85 c0             	test   %rax,%rax
   26646:	75 0a                	jne    26652 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x33>
   26648:	b8 01 00 00 00       	mov    $0x1,%eax
   2664d:	e9 8b 01 00 00       	jmpq   267dd <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x1be>
   26652:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   26659:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2665d:	48 85 c0             	test   %rax,%rax
   26660:	0f 84 74 01 00 00    	je     267da <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x1bb>
   26666:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   2666a:	48 89 c7             	mov    %rax,%rdi
   2666d:	e8 1c f0 ff ff       	callq  2568e <_ZL12read_sleb128PPh>
   26672:	89 45 d8             	mov    %eax,-0x28(%rbp)
   26675:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   26679:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2667d:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   26681:	48 89 c7             	mov    %rax,%rdi
   26684:	e8 05 f0 ff ff       	callq  2568e <_ZL12read_sleb128PPh>
   26689:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2668c:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   26690:	74 0f                	je     266a1 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x82>
   26692:	8b 45 dc             	mov    -0x24(%rbp),%eax
   26695:	48 63 d0             	movslq %eax,%rdx
   26698:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2669c:	48 01 d0             	add    %rdx,%rax
   2669f:	eb 05                	jmp    266a6 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x87>
   266a1:	b8 00 00 00 00       	mov    $0x0,%eax
   266a6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   266aa:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   266ae:	7e 57                	jle    26707 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0xe8>
   266b0:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   266b5:	74 50                	je     26707 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0xe8>
   266b7:	8b 55 d8             	mov    -0x28(%rbp),%edx
   266ba:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   266be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   266c2:	48 89 ce             	mov    %rcx,%rsi
   266c5:	48 89 c7             	mov    %rax,%rdi
   266c8:	e8 7a fd ff ff       	callq  26447 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai>
   266cd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   266d1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   266d5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   266d9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   266dd:	48 89 ce             	mov    %rcx,%rsi
   266e0:	48 89 c7             	mov    %rax,%rdi
   266e3:	e8 19 fe ff ff       	callq  26501 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   266e8:	84 c0                	test   %al,%al
   266ea:	0f 84 de 00 00 00    	je     267ce <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x1af>
   266f0:	8b 45 d8             	mov    -0x28(%rbp),%eax
   266f3:	48 63 d0             	movslq %eax,%rdx
   266f6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   266fa:	48 89 10             	mov    %rdx,(%rax)
   266fd:	b8 02 00 00 00       	mov    $0x2,%eax
   26702:	e9 d6 00 00 00       	jmpq   267dd <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x1be>
   26707:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   2670b:	0f 89 9a 00 00 00    	jns    267ab <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x18c>
   26711:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   26716:	0f 84 8f 00 00 00    	je     267ab <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x18c>
   2671c:	c6 45 d3 00          	movb   $0x0,-0x2d(%rbp)
   26720:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   26724:	75 0d                	jne    26733 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x114>
   26726:	8b 45 d8             	mov    -0x28(%rbp),%eax
   26729:	48 63 d0             	movslq %eax,%rdx
   2672c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   26730:	48 89 10             	mov    %rdx,(%rax)
   26733:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26737:	48 8b 40 10          	mov    0x10(%rax),%rax
   2673b:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2673e:	48 63 d2             	movslq %edx,%rdx
   26741:	48 f7 d2             	not    %rdx
   26744:	48 01 d0             	add    %rdx,%rax
   26747:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2674b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2674f:	0f b6 00             	movzbl (%rax),%eax
   26752:	84 c0                	test   %al,%al
   26754:	74 48                	je     2679e <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x17f>
   26756:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2675a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2675e:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   26762:	0f b6 00             	movzbl (%rax),%eax
   26765:	0f b6 d0             	movzbl %al,%edx
   26768:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   2676c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26770:	48 89 ce             	mov    %rcx,%rsi
   26773:	48 89 c7             	mov    %rax,%rdi
   26776:	e8 cc fc ff ff       	callq  26447 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai>
   2677b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2677f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   26783:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   26787:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2678b:	48 89 ce             	mov    %rcx,%rsi
   2678e:	48 89 c7             	mov    %rax,%rdi
   26791:	e8 6b fd ff ff       	callq  26501 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   26796:	84 c0                	test   %al,%al
   26798:	74 b1                	je     2674b <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x12c>
   2679a:	c6 45 d3 01          	movb   $0x1,-0x2d(%rbp)
   2679e:	80 7d d3 00          	cmpb   $0x0,-0x2d(%rbp)
   267a2:	75 30                	jne    267d4 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x1b5>
   267a4:	b8 02 00 00 00       	mov    $0x2,%eax
   267a9:	eb 32                	jmp    267dd <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x1be>
   267ab:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   267af:	0f 85 a4 fe ff ff    	jne    26659 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x3a>
   267b5:	8b 45 d8             	mov    -0x28(%rbp),%eax
   267b8:	48 63 d0             	movslq %eax,%rdx
   267bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   267bf:	48 89 10             	mov    %rdx,(%rax)
   267c2:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
   267c9:	e9 8b fe ff ff       	jmpq   26659 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x3a>
   267ce:	90                   	nop
   267cf:	e9 85 fe ff ff       	jmpq   26659 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x3a>
   267d4:	90                   	nop
   267d5:	e9 7f fe ff ff       	jmpq   26659 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv+0x3a>
   267da:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   267dd:	c9                   	leaveq 
   267de:	c3                   	retq   

00000000000267df <_ZL20pushCleanupExceptionP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionE>:
   267df:	55                   	push   %rbp
   267e0:	48 89 e5             	mov    %rsp,%rbp
   267e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   267e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   267eb:	90                   	nop
   267ec:	5d                   	pop    %rbp
   267ed:	c3                   	retq   

00000000000267ee <__gxx_personality_v0>:
   267ee:	55                   	push   %rbp
   267ef:	48 89 e5             	mov    %rsp,%rbp
   267f2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   267f9:	89 bd 7c ff ff ff    	mov    %edi,-0x84(%rbp)
   267ff:	89 b5 78 ff ff ff    	mov    %esi,-0x88(%rbp)
   26805:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
   2680c:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
   26813:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
   2681a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26821:	00 00 
   26823:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26827:	31 c0                	xor    %eax,%eax
   26829:	83 bd 7c ff ff ff 01 	cmpl   $0x1,-0x84(%rbp)
   26830:	74 0a                	je     2683c <__gxx_personality_v0+0x4e>
   26832:	b8 03 00 00 00       	mov    $0x3,%eax
   26837:	e9 88 03 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   2683c:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   26843:	00 
   26844:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2684b:	00 
   2684c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   26853:	48 89 c7             	mov    %rax,%rdi
   26856:	e8 e4 f4 ff ff       	callq  25d3f <_ZL14isCXXExceptionm>
   2685b:	83 f0 01             	xor    $0x1,%eax
   2685e:	88 45 87             	mov    %al,-0x79(%rbp)
   26861:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   26865:	83 f0 01             	xor    $0x1,%eax
   26868:	84 c0                	test   %al,%al
   2686a:	74 23                	je     2688f <__gxx_personality_v0+0xa1>
   2686c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   26873:	48 89 c7             	mov    %rax,%rdi
   26876:	e8 15 f5 ff ff       	callq  25d90 <_ZL20exceptionFromPointerPv>
   2687b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2687f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26883:	48 89 c7             	mov    %rax,%rdi
   26886:	e8 17 f5 ff ff       	callq  25da2 <_ZL26realExceptionFromExceptionPN10__cxxabiv115__cxa_exceptionE>
   2688b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2688f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26896:	48 89 c7             	mov    %rax,%rdi
   26899:	e8 99 26 00 00       	callq  28f37 <_Unwind_GetLanguageSpecificData>
   2689e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   268a2:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   268a7:	75 1e                	jne    268c7 <__gxx_personality_v0+0xd9>
   268a9:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   268b0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   268b7:	48 89 d6             	mov    %rdx,%rsi
   268ba:	48 89 c7             	mov    %rax,%rdi
   268bd:	e8 6a f4 ff ff       	callq  25d2c <_ZL17continueUnwindingP17_Unwind_ExceptionP15_Unwind_Context>
   268c2:	e9 fd 02 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   268c7:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   268ce:	00 
   268cf:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   268d6:	00 
   268d7:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   268de:	00 
   268df:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   268e5:	83 e0 01             	and    $0x1,%eax
   268e8:	85 c0                	test   %eax,%eax
   268ea:	0f 84 eb 00 00 00    	je     269db <__gxx_personality_v0+0x1ed>
   268f0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   268f4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   268f8:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   268ff:	48 89 ce             	mov    %rcx,%rsi
   26902:	48 89 c7             	mov    %rax,%rdi
   26905:	e8 da f0 ff ff       	callq  259e4 <_ZL10parse_lsdaP15_Unwind_ContextPh>
   2690a:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   2690e:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   26912:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26919:	48 89 ce             	mov    %rcx,%rsi
   2691c:	48 89 c7             	mov    %rax,%rdi
   2691f:	e8 f0 f1 ff ff       	callq  25b14 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action>
   26924:	83 f0 01             	xor    $0x1,%eax
   26927:	84 c0                	test   %al,%al
   26929:	74 0a                	je     26935 <__gxx_personality_v0+0x147>
   2692b:	b8 06 00 00 00       	mov    $0x6,%eax
   26930:	e9 8f 02 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   26935:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26939:	4c 8d 40 50          	lea    0x50(%rax),%r8
   2693d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   26941:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
   26945:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   26949:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
   2694d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26954:	4d 89 c1             	mov    %r8,%r9
   26957:	49 89 f8             	mov    %rdi,%r8
   2695a:	48 89 c7             	mov    %rax,%rdi
   2695d:	e8 bd fc ff ff       	callq  2661f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv>
   26962:	89 45 8c             	mov    %eax,-0x74(%rbp)
   26965:	83 7d 8c 02          	cmpl   $0x2,-0x74(%rbp)
   26969:	75 52                	jne    269bd <__gxx_personality_v0+0x1cf>
   2696b:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   26970:	74 41                	je     269b3 <__gxx_personality_v0+0x1c5>
   26972:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   26976:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2697a:	89 c7                	mov    %eax,%edi
   2697c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   26980:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
   26987:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   2698e:	49 89 c8             	mov    %rcx,%r8
   26991:	89 f9                	mov    %edi,%ecx
   26993:	48 89 c7             	mov    %rax,%rdi
   26996:	e8 0d f3 ff ff       	callq  25ca8 <_ZL14saveLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEiPh>
   2699b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2699f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   269a3:	48 89 50 40          	mov    %rdx,0x40(%rax)
   269a7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   269ab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   269af:	48 89 50 38          	mov    %rdx,0x38(%rax)
   269b3:	b8 06 00 00 00       	mov    $0x6,%eax
   269b8:	e9 07 02 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   269bd:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   269c4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   269cb:	48 89 d6             	mov    %rdx,%rsi
   269ce:	48 89 c7             	mov    %rax,%rdi
   269d1:	e8 56 f3 ff ff       	callq  25d2c <_ZL17continueUnwindingP17_Unwind_ExceptionP15_Unwind_Context>
   269d6:	e9 e9 01 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   269db:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   269e1:	83 e0 04             	and    $0x4,%eax
   269e4:	85 c0                	test   %eax,%eax
   269e6:	0f 85 ca 00 00 00    	jne    26ab6 <__gxx_personality_v0+0x2c8>
   269ec:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   269f0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   269f4:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   269fb:	48 89 ce             	mov    %rcx,%rsi
   269fe:	48 89 c7             	mov    %rax,%rdi
   26a01:	e8 de ef ff ff       	callq  259e4 <_ZL10parse_lsdaP15_Unwind_ContextPh>
   26a06:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   26a0a:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   26a0e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26a15:	48 89 ce             	mov    %rcx,%rsi
   26a18:	48 89 c7             	mov    %rax,%rdi
   26a1b:	e8 f4 f0 ff ff       	callq  25b14 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action>
   26a20:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   26a24:	48 85 c0             	test   %rax,%rax
   26a27:	75 1e                	jne    26a47 <__gxx_personality_v0+0x259>
   26a29:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   26a30:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   26a37:	48 89 d6             	mov    %rdx,%rsi
   26a3a:	48 89 c7             	mov    %rax,%rdi
   26a3d:	e8 ea f2 ff ff       	callq  25d2c <_ZL17continueUnwindingP17_Unwind_ExceptionP15_Unwind_Context>
   26a42:	e9 7d 01 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   26a47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26a4b:	4c 8d 40 50          	lea    0x50(%rax),%r8
   26a4f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   26a53:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
   26a57:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   26a5b:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
   26a5f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26a66:	4d 89 c1             	mov    %r8,%r9
   26a69:	49 89 f8             	mov    %rdi,%r8
   26a6c:	48 89 c7             	mov    %rax,%rdi
   26a6f:	e8 ab fb ff ff       	callq  2661f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv>
   26a74:	89 45 88             	mov    %eax,-0x78(%rbp)
   26a77:	83 7d 88 01          	cmpl   $0x1,-0x78(%rbp)
   26a7b:	74 1e                	je     26a9b <__gxx_personality_v0+0x2ad>
   26a7d:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   26a84:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   26a8b:	48 89 d6             	mov    %rdx,%rsi
   26a8e:	48 89 c7             	mov    %rax,%rdi
   26a91:	e8 96 f2 ff ff       	callq  25d2c <_ZL17continueUnwindingP17_Unwind_ExceptionP15_Unwind_Context>
   26a96:	e9 29 01 00 00       	jmpq   26bc4 <__gxx_personality_v0+0x3d6>
   26a9b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   26a9f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   26aa6:	48 89 d6             	mov    %rdx,%rsi
   26aa9:	48 89 c7             	mov    %rax,%rdi
   26aac:	e8 2e fd ff ff       	callq  267df <_ZL20pushCleanupExceptionP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionE>
   26ab1:	e9 b9 00 00 00       	jmpq   26b6f <__gxx_personality_v0+0x381>
   26ab6:	80 7d 87 00          	cmpb   $0x0,-0x79(%rbp)
   26aba:	74 63                	je     26b1f <__gxx_personality_v0+0x331>
   26abc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   26ac0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   26ac4:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   26acb:	48 89 ce             	mov    %rcx,%rsi
   26ace:	48 89 c7             	mov    %rax,%rdi
   26ad1:	e8 0e ef ff ff       	callq  259e4 <_ZL10parse_lsdaP15_Unwind_ContextPh>
   26ad6:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   26ada:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   26ade:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26ae5:	48 89 ce             	mov    %rcx,%rsi
   26ae8:	48 89 c7             	mov    %rax,%rdi
   26aeb:	e8 24 f0 ff ff       	callq  25b14 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action>
   26af0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26af4:	4c 8d 40 50          	lea    0x50(%rax),%r8
   26af8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   26afc:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
   26b00:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   26b04:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
   26b08:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26b0f:	4d 89 c1             	mov    %r8,%r9
   26b12:	49 89 f8             	mov    %rdi,%r8
   26b15:	48 89 c7             	mov    %rax,%rdi
   26b18:	e8 02 fb ff ff       	callq  2661f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv>
   26b1d:	eb 50                	jmp    26b6f <__gxx_personality_v0+0x381>
   26b1f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26b23:	48 8b 40 48          	mov    0x48(%rax),%rax
   26b27:	48 85 c0             	test   %rax,%rax
   26b2a:	75 07                	jne    26b33 <__gxx_personality_v0+0x345>
   26b2c:	e8 86 02 00 00       	callq  26db7 <_ZSt9terminatev>
   26b31:	eb 3c                	jmp    26b6f <__gxx_personality_v0+0x381>
   26b33:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
   26b37:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   26b3b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   26b3f:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
   26b46:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26b4d:	49 89 f8             	mov    %rdi,%r8
   26b50:	48 89 c7             	mov    %rax,%rdi
   26b53:	e8 87 f1 ff ff       	callq  25cdf <_ZL14loadLandingPadP15_Unwind_ContextP17_Unwind_ExceptionPN10__cxxabiv115__cxa_exceptionEPmPPh>
   26b58:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26b5c:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   26b63:	00 
   26b64:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26b68:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
   26b6f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   26b73:	48 89 c2             	mov    %rax,%rdx
   26b76:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26b7d:	48 89 d6             	mov    %rdx,%rsi
   26b80:	48 89 c7             	mov    %rax,%rdi
   26b83:	e8 75 28 00 00       	callq  293fd <_Unwind_SetIP>
   26b88:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   26b8f:	b9 00 00 00 00       	mov    $0x0,%ecx
   26b94:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26b9b:	89 ce                	mov    %ecx,%esi
   26b9d:	48 89 c7             	mov    %rax,%rdi
   26ba0:	e8 2d 28 00 00       	callq  293d2 <_Unwind_SetGR>
   26ba5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   26ba9:	b9 01 00 00 00       	mov    $0x1,%ecx
   26bae:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   26bb5:	89 ce                	mov    %ecx,%esi
   26bb7:	48 89 c7             	mov    %rax,%rdi
   26bba:	e8 13 28 00 00       	callq  293d2 <_Unwind_SetGR>
   26bbf:	b8 07 00 00 00       	mov    $0x7,%eax
   26bc4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   26bc8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   26bcf:	00 00 
   26bd1:	74 05                	je     26bd8 <__gxx_personality_v0+0x3ea>
   26bd3:	e8 b4 48 fe ff       	callq  b48c <__stack_chk_fail>
   26bd8:	c9                   	leaveq 
   26bd9:	c3                   	retq   

0000000000026bda <__cxa_begin_catch>:
   26bda:	55                   	push   %rbp
   26bdb:	48 89 e5             	mov    %rsp,%rbp
   26bde:	48 83 ec 30          	sub    $0x30,%rsp
   26be2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   26be6:	e8 3c f2 ff ff       	callq  25e27 <__cxa_get_globals>
   26beb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   26bef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26bf3:	8b 40 08             	mov    0x8(%rax),%eax
   26bf6:	8d 50 ff             	lea    -0x1(%rax),%edx
   26bf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26bfd:	89 50 08             	mov    %edx,0x8(%rax)
   26c00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26c04:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   26c08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26c0c:	48 8b 00             	mov    (%rax),%rax
   26c0f:	48 89 c7             	mov    %rax,%rdi
   26c12:	e8 28 f1 ff ff       	callq  25d3f <_ZL14isCXXExceptionm>
   26c17:	84 c0                	test   %al,%al
   26c19:	74 72                	je     26c8d <__cxa_begin_catch+0xb3>
   26c1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26c1f:	48 89 c7             	mov    %rax,%rdi
   26c22:	e8 69 f1 ff ff       	callq  25d90 <_ZL20exceptionFromPointerPv>
   26c27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c2f:	8b 40 30             	mov    0x30(%rax),%eax
   26c32:	85 c0                	test   %eax,%eax
   26c34:	75 1a                	jne    26c50 <__cxa_begin_catch+0x76>
   26c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26c3a:	48 8b 10             	mov    (%rax),%rdx
   26c3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c41:	48 89 50 28          	mov    %rdx,0x28(%rax)
   26c45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26c49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26c4d:	48 89 10             	mov    %rdx,(%rax)
   26c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c54:	8b 40 30             	mov    0x30(%rax),%eax
   26c57:	85 c0                	test   %eax,%eax
   26c59:	79 17                	jns    26c72 <__cxa_begin_catch+0x98>
   26c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c5f:	8b 40 30             	mov    0x30(%rax),%eax
   26c62:	ba 01 00 00 00       	mov    $0x1,%edx
   26c67:	29 c2                	sub    %eax,%edx
   26c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c6d:	89 50 30             	mov    %edx,0x30(%rax)
   26c70:	eb 11                	jmp    26c83 <__cxa_begin_catch+0xa9>
   26c72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c76:	8b 40 30             	mov    0x30(%rax),%eax
   26c79:	8d 50 01             	lea    0x1(%rax),%edx
   26c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c80:	89 50 30             	mov    %edx,0x30(%rax)
   26c83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26c87:	48 8b 40 50          	mov    0x50(%rax),%rax
   26c8b:	eb 20                	jmp    26cad <__cxa_begin_catch+0xd3>
   26c8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26c91:	48 83 c0 20          	add    $0x20,%rax
   26c95:	eb 16                	jmp    26cad <__cxa_begin_catch+0xd3>
   26c97:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   26c9b:	74 08                	je     26ca5 <__cxa_begin_catch+0xcb>
   26c9d:	48 89 c7             	mov    %rax,%rdi
   26ca0:	e8 6e a0 ff ff       	callq  20d13 <_Unwind_Resume>
   26ca5:	48 89 c7             	mov    %rax,%rdi
   26ca8:	e8 aa 00 00 00       	callq  26d57 <__cxa_call_unexpected>
   26cad:	c9                   	leaveq 
   26cae:	c3                   	retq   

0000000000026caf <__cxa_end_catch>:
   26caf:	55                   	push   %rbp
   26cb0:	48 89 e5             	mov    %rsp,%rbp
   26cb3:	48 83 ec 20          	sub    $0x20,%rsp
   26cb7:	e8 7a f1 ff ff       	callq  25e36 <__cxa_get_globals_fast>
   26cbc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   26cc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26cc4:	48 8b 00             	mov    (%rax),%rax
   26cc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26ccb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   26cd0:	75 1f                	jne    26cf1 <__cxa_end_catch+0x42>
   26cd2:	48 8d 0d 77 68 01 00 	lea    0x16877(%rip),%rcx        # 3d550 <__PRETTY_FUNCTION__.5180+0x180>
   26cd9:	48 8d 15 40 69 01 00 	lea    0x16940(%rip),%rdx        # 3d620 <_ZZ15__cxa_end_catchE8__func__>
   26ce0:	be 8f 04 00 00       	mov    $0x48f,%esi
   26ce5:	48 8d 3d d7 67 01 00 	lea    0x167d7(%rip),%rdi        # 3d4c3 <__PRETTY_FUNCTION__.5180+0xf3>
   26cec:	e8 a4 47 fe ff       	callq  b495 <__assert>
   26cf1:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
   26cf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26cf9:	8b 40 30             	mov    0x30(%rax),%eax
   26cfc:	85 c0                	test   %eax,%eax
   26cfe:	79 17                	jns    26d17 <__cxa_end_catch+0x68>
   26d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d04:	8b 40 30             	mov    0x30(%rax),%eax
   26d07:	8d 50 01             	lea    0x1(%rax),%edx
   26d0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d0e:	89 50 30             	mov    %edx,0x30(%rax)
   26d11:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
   26d15:	eb 11                	jmp    26d28 <__cxa_end_catch+0x79>
   26d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d1b:	8b 40 30             	mov    0x30(%rax),%eax
   26d1e:	8d 50 ff             	lea    -0x1(%rax),%edx
   26d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d25:	89 50 30             	mov    %edx,0x30(%rax)
   26d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d2c:	8b 40 30             	mov    0x30(%rax),%eax
   26d2f:	85 c0                	test   %eax,%eax
   26d31:	75 21                	jne    26d54 <__cxa_end_catch+0xa5>
   26d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d37:	48 8b 50 28          	mov    0x28(%rax),%rdx
   26d3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26d3f:	48 89 10             	mov    %rdx,(%rax)
   26d42:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   26d46:	74 0c                	je     26d54 <__cxa_end_catch+0xa5>
   26d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d4c:	48 89 c7             	mov    %rax,%rdi
   26d4f:	e8 20 f4 ff ff       	callq  26174 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   26d54:	90                   	nop
   26d55:	c9                   	leaveq 
   26d56:	c3                   	retq   

0000000000026d57 <__cxa_call_unexpected>:
   26d57:	55                   	push   %rbp
   26d58:	48 89 e5             	mov    %rsp,%rbp
   26d5b:	48 83 ec 20          	sub    $0x20,%rsp
   26d5f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   26d63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26d67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   26d6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26d6f:	48 8b 10             	mov    (%rax),%rdx
   26d72:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
   26d79:	55 4e 47 
   26d7c:	48 39 c2             	cmp    %rax,%rdx
   26d7f:	75 2c                	jne    26dad <__cxa_call_unexpected+0x56>
   26d81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26d85:	48 89 c7             	mov    %rax,%rdi
   26d88:	e8 03 f0 ff ff       	callq  25d90 <_ZL20exceptionFromPointerPv>
   26d8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d95:	48 8b 40 18          	mov    0x18(%rax),%rax
   26d99:	48 85 c0             	test   %rax,%rax
   26d9c:	74 0f                	je     26dad <__cxa_call_unexpected+0x56>
   26d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26da2:	48 8b 40 18          	mov    0x18(%rax),%rax
   26da6:	ff d0                	callq  *%rax
   26da8:	e8 2c 48 01 00       	callq  3b5d9 <abort>
   26dad:	e8 e8 00 00 00       	callq  26e9a <_ZSt10unexpectedv>
   26db2:	e8 22 48 01 00       	callq  3b5d9 <abort>

0000000000026db7 <_ZSt9terminatev>:
   26db7:	55                   	push   %rbp
   26db8:	48 89 e5             	mov    %rsp,%rbp
   26dbb:	41 54                	push   %r12
   26dbd:	53                   	push   %rbx
   26dbe:	0f b6 05 fb 5b 02 00 	movzbl 0x25bfb(%rip),%eax        # 4c9c0 <_ZGVZSt9terminatevE4info>
   26dc5:	84 c0                	test   %al,%al
   26dc7:	0f 94 c0             	sete   %al
   26dca:	84 c0                	test   %al,%al
   26dcc:	74 33                	je     26e01 <_ZSt9terminatev+0x4a>
   26dce:	48 8d 3d eb 5b 02 00 	lea    0x25beb(%rip),%rdi        # 4c9c0 <_ZGVZSt9terminatevE4info>
   26dd5:	e8 cf 01 00 00       	callq  26fa9 <__cxa_guard_acquire>
   26dda:	85 c0                	test   %eax,%eax
   26ddc:	0f 95 c0             	setne  %al
   26ddf:	84 c0                	test   %al,%al
   26de1:	74 1e                	je     26e01 <_ZSt9terminatev+0x4a>
   26de3:	41 bc 00 00 00 00    	mov    $0x0,%r12d
   26de9:	e8 2e f0 ff ff       	callq  25e1c <_ZL16thread_info_fastv>
   26dee:	48 89 05 c3 5b 02 00 	mov    %rax,0x25bc3(%rip)        # 4c9b8 <_ZZSt9terminatevE4info>
   26df5:	48 8d 3d c4 5b 02 00 	lea    0x25bc4(%rip),%rdi        # 4c9c0 <_ZGVZSt9terminatevE4info>
   26dfc:	e8 51 02 00 00       	callq  27052 <__cxa_guard_release>
   26e01:	48 8b 05 b0 5b 02 00 	mov    0x25bb0(%rip),%rax        # 4c9b8 <_ZZSt9terminatevE4info>
   26e08:	48 85 c0             	test   %rax,%rax
   26e0b:	74 20                	je     26e2d <_ZSt9terminatev+0x76>
   26e0d:	48 8b 05 a4 5b 02 00 	mov    0x25ba4(%rip),%rax        # 4c9b8 <_ZZSt9terminatevE4info>
   26e14:	48 8b 00             	mov    (%rax),%rax
   26e17:	48 85 c0             	test   %rax,%rax
   26e1a:	74 11                	je     26e2d <_ZSt9terminatev+0x76>
   26e1c:	48 8b 05 95 5b 02 00 	mov    0x25b95(%rip),%rax        # 4c9b8 <_ZZSt9terminatevE4info>
   26e23:	48 8b 00             	mov    (%rax),%rax
   26e26:	ff d0                	callq  *%rax
   26e28:	e8 ac 47 01 00       	callq  3b5d9 <abort>
   26e2d:	48 8b 05 c4 03 02 00 	mov    0x203c4(%rip),%rax        # 471f8 <_ZL16terminateHandler>
   26e34:	ff d0                	callq  *%rax
   26e36:	e8 9e 47 01 00       	callq  3b5d9 <abort>
   26e3b:	48 89 c3             	mov    %rax,%rbx
   26e3e:	45 84 e4             	test   %r12b,%r12b
   26e41:	75 0c                	jne    26e4f <_ZSt9terminatev+0x98>
   26e43:	48 8d 3d 76 5b 02 00 	lea    0x25b76(%rip),%rdi        # 4c9c0 <_ZGVZSt9terminatevE4info>
   26e4a:	e8 d6 01 00 00       	callq  27025 <__cxa_guard_abort>
   26e4f:	48 89 d8             	mov    %rbx,%rax
   26e52:	48 89 c7             	mov    %rax,%rdi
   26e55:	e8 b9 9e ff ff       	callq  20d13 <_Unwind_Resume>
   26e5a:	48 89 c7             	mov    %rax,%rdi
   26e5d:	e8 78 fd ff ff       	callq  26bda <__cxa_begin_catch>
   26e62:	e8 72 47 01 00       	callq  3b5d9 <abort>
   26e67:	48 89 c3             	mov    %rax,%rbx
   26e6a:	e8 40 fe ff ff       	callq  26caf <__cxa_end_catch>
   26e6f:	48 89 d8             	mov    %rbx,%rax
   26e72:	48 89 c7             	mov    %rax,%rdi
   26e75:	e8 99 9e ff ff       	callq  20d13 <_Unwind_Resume>
   26e7a:	48 89 c7             	mov    %rax,%rdi
   26e7d:	e8 58 fd ff ff       	callq  26bda <__cxa_begin_catch>
   26e82:	e8 52 47 01 00       	callq  3b5d9 <abort>
   26e87:	48 89 c3             	mov    %rax,%rbx
   26e8a:	e8 20 fe ff ff       	callq  26caf <__cxa_end_catch>
   26e8f:	48 89 d8             	mov    %rbx,%rax
   26e92:	48 89 c7             	mov    %rax,%rdi
   26e95:	e8 79 9e ff ff       	callq  20d13 <_Unwind_Resume>

0000000000026e9a <_ZSt10unexpectedv>:
   26e9a:	55                   	push   %rbp
   26e9b:	48 89 e5             	mov    %rsp,%rbp
   26e9e:	41 54                	push   %r12
   26ea0:	53                   	push   %rbx
   26ea1:	0f b6 05 28 5b 02 00 	movzbl 0x25b28(%rip),%eax        # 4c9d0 <_ZGVZSt10unexpectedvE4info>
   26ea8:	84 c0                	test   %al,%al
   26eaa:	0f 94 c0             	sete   %al
   26ead:	84 c0                	test   %al,%al
   26eaf:	74 33                	je     26ee4 <_ZSt10unexpectedv+0x4a>
   26eb1:	48 8d 3d 18 5b 02 00 	lea    0x25b18(%rip),%rdi        # 4c9d0 <_ZGVZSt10unexpectedvE4info>
   26eb8:	e8 ec 00 00 00       	callq  26fa9 <__cxa_guard_acquire>
   26ebd:	85 c0                	test   %eax,%eax
   26ebf:	0f 95 c0             	setne  %al
   26ec2:	84 c0                	test   %al,%al
   26ec4:	74 1e                	je     26ee4 <_ZSt10unexpectedv+0x4a>
   26ec6:	41 bc 00 00 00 00    	mov    $0x0,%r12d
   26ecc:	e8 4b ef ff ff       	callq  25e1c <_ZL16thread_info_fastv>
   26ed1:	48 89 05 f0 5a 02 00 	mov    %rax,0x25af0(%rip)        # 4c9c8 <_ZZSt10unexpectedvE4info>
   26ed8:	48 8d 3d f1 5a 02 00 	lea    0x25af1(%rip),%rdi        # 4c9d0 <_ZGVZSt10unexpectedvE4info>
   26edf:	e8 6e 01 00 00       	callq  27052 <__cxa_guard_release>
   26ee4:	48 8b 05 dd 5a 02 00 	mov    0x25add(%rip),%rax        # 4c9c8 <_ZZSt10unexpectedvE4info>
   26eeb:	48 85 c0             	test   %rax,%rax
   26eee:	74 22                	je     26f12 <_ZSt10unexpectedv+0x78>
   26ef0:	48 8b 05 d1 5a 02 00 	mov    0x25ad1(%rip),%rax        # 4c9c8 <_ZZSt10unexpectedvE4info>
   26ef7:	48 8b 40 08          	mov    0x8(%rax),%rax
   26efb:	48 85 c0             	test   %rax,%rax
   26efe:	74 12                	je     26f12 <_ZSt10unexpectedv+0x78>
   26f00:	48 8b 05 c1 5a 02 00 	mov    0x25ac1(%rip),%rax        # 4c9c8 <_ZZSt10unexpectedvE4info>
   26f07:	48 8b 40 08          	mov    0x8(%rax),%rax
   26f0b:	ff d0                	callq  *%rax
   26f0d:	e8 c7 46 01 00       	callq  3b5d9 <abort>
   26f12:	48 8b 05 e7 02 02 00 	mov    0x202e7(%rip),%rax        # 47200 <_ZL17unexpectedHandler>
   26f19:	ff d0                	callq  *%rax
   26f1b:	eb 1f                	jmp    26f3c <_ZSt10unexpectedv+0xa2>
   26f1d:	48 89 c3             	mov    %rax,%rbx
   26f20:	45 84 e4             	test   %r12b,%r12b
   26f23:	75 0c                	jne    26f31 <_ZSt10unexpectedv+0x97>
   26f25:	48 8d 3d a4 5a 02 00 	lea    0x25aa4(%rip),%rdi        # 4c9d0 <_ZGVZSt10unexpectedvE4info>
   26f2c:	e8 f4 00 00 00       	callq  27025 <__cxa_guard_abort>
   26f31:	48 89 d8             	mov    %rbx,%rax
   26f34:	48 89 c7             	mov    %rax,%rdi
   26f37:	e8 d7 9d ff ff       	callq  20d13 <_Unwind_Resume>
   26f3c:	5b                   	pop    %rbx
   26f3d:	41 5c                	pop    %r12
   26f3f:	5d                   	pop    %rbp
   26f40:	c3                   	retq   

0000000000026f41 <tcxx_access_version_dummy3>:
   26f41:	55                   	push   %rbp
   26f42:	48 89 e5             	mov    %rsp,%rbp
   26f45:	c6 05 d4 02 02 00 73 	movb   $0x73,0x202d4(%rip)        # 47220 <sgx_tcxx_version>
   26f4c:	48 8d 05 cd 02 02 00 	lea    0x202cd(%rip),%rax        # 47220 <sgx_tcxx_version>
   26f53:	5d                   	pop    %rbp
   26f54:	c3                   	retq   

0000000000026f55 <_ZL11low_32_bitsPVl>:
   26f55:	55                   	push   %rbp
   26f56:	48 89 e5             	mov    %rsp,%rbp
   26f59:	48 83 ec 30          	sub    $0x30,%rsp
   26f5d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   26f61:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26f68:	00 00 
   26f6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26f6e:	31 c0                	xor    %eax,%eax
   26f70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26f74:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   26f78:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   26f7f:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   26f83:	0f b6 00             	movzbl (%rax),%eax
   26f86:	3c 01                	cmp    $0x1,%al
   26f88:	74 05                	je     26f8f <_ZL11low_32_bitsPVl+0x3a>
   26f8a:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
   26f8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26f93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26f97:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   26f9e:	00 00 
   26fa0:	74 05                	je     26fa7 <_ZL11low_32_bitsPVl+0x52>
   26fa2:	e8 e5 44 fe ff       	callq  b48c <__stack_chk_fail>
   26fa7:	c9                   	leaveq 
   26fa8:	c3                   	retq   

0000000000026fa9 <__cxa_guard_acquire>:
   26fa9:	55                   	push   %rbp
   26faa:	48 89 e5             	mov    %rsp,%rbp
   26fad:	48 83 ec 20          	sub    $0x20,%rsp
   26fb1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   26fb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26fb9:	48 8b 00             	mov    (%rax),%rax
   26fbc:	88 45 f7             	mov    %al,-0x9(%rbp)
   26fbf:	80 7d f7 01          	cmpb   $0x1,-0x9(%rbp)
   26fc3:	75 07                	jne    26fcc <__cxa_guard_acquire+0x23>
   26fc5:	b8 00 00 00 00       	mov    $0x0,%eax
   26fca:	eb 57                	jmp    27023 <__cxa_guard_acquire+0x7a>
   26fcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26fd0:	48 83 c0 01          	add    $0x1,%rax
   26fd4:	48 89 c7             	mov    %rax,%rdi
   26fd7:	e8 79 ff ff ff       	callq  26f55 <_ZL11low_32_bitsPVl>
   26fdc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   26fe0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26fe4:	b8 00 00 00 00       	mov    $0x0,%eax
   26fe9:	b9 01 00 00 00       	mov    $0x1,%ecx
   26fee:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   26ff2:	0f 94 c0             	sete   %al
   26ff5:	83 f0 01             	xor    $0x1,%eax
   26ff8:	84 c0                	test   %al,%al
   26ffa:	74 13                	je     2700f <__cxa_guard_acquire+0x66>
   26ffc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27000:	48 8b 00             	mov    (%rax),%rax
   27003:	3c 01                	cmp    $0x1,%al
   27005:	0f 94 c0             	sete   %al
   27008:	84 c0                	test   %al,%al
   2700a:	75 02                	jne    2700e <__cxa_guard_acquire+0x65>
   2700c:	eb d2                	jmp    26fe0 <__cxa_guard_acquire+0x37>
   2700e:	90                   	nop
   2700f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27013:	48 8b 00             	mov    (%rax),%rax
   27016:	88 45 f7             	mov    %al,-0x9(%rbp)
   27019:	80 7d f7 01          	cmpb   $0x1,-0x9(%rbp)
   2701d:	0f 95 c0             	setne  %al
   27020:	0f b6 c0             	movzbl %al,%eax
   27023:	c9                   	leaveq 
   27024:	c3                   	retq   

0000000000027025 <__cxa_guard_abort>:
   27025:	55                   	push   %rbp
   27026:	48 89 e5             	mov    %rsp,%rbp
   27029:	48 83 ec 20          	sub    $0x20,%rsp
   2702d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27031:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27035:	48 83 c0 01          	add    $0x1,%rax
   27039:	48 89 c7             	mov    %rax,%rdi
   2703c:	e8 14 ff ff ff       	callq  26f55 <_ZL11low_32_bitsPVl>
   27041:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27049:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2704f:	90                   	nop
   27050:	c9                   	leaveq 
   27051:	c3                   	retq   

0000000000027052 <__cxa_guard_release>:
   27052:	55                   	push   %rbp
   27053:	48 89 e5             	mov    %rsp,%rbp
   27056:	48 83 ec 10          	sub    $0x10,%rsp
   2705a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2705e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27062:	c6 00 01             	movb   $0x1,(%rax)
   27065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27069:	48 89 c7             	mov    %rax,%rdi
   2706c:	e8 b4 ff ff ff       	callq  27025 <__cxa_guard_abort>
   27071:	90                   	nop
   27072:	c9                   	leaveq 
   27073:	c3                   	retq   

0000000000027074 <tcxx_access_version_dummy5>:
   27074:	55                   	push   %rbp
   27075:	48 89 e5             	mov    %rsp,%rbp
   27078:	c6 05 a1 01 02 00 73 	movb   $0x73,0x201a1(%rip)        # 47220 <sgx_tcxx_version>
   2707f:	48 8d 05 9a 01 02 00 	lea    0x2019a(%rip),%rax        # 47220 <sgx_tcxx_version>
   27086:	5d                   	pop    %rbp
   27087:	c3                   	retq   

0000000000027088 <_ZNSt9exceptionC1Ev>:
   27088:	55                   	push   %rbp
   27089:	48 89 e5             	mov    %rsp,%rbp
   2708c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27090:	48 8d 15 49 f8 01 00 	lea    0x1f849(%rip),%rdx        # 468e0 <_ZTVSt9exception+0x10>
   27097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2709b:	48 89 10             	mov    %rdx,(%rax)
   2709e:	90                   	nop
   2709f:	5d                   	pop    %rbp
   270a0:	c3                   	retq   
   270a1:	90                   	nop

00000000000270a2 <_ZNSt9exceptionD1Ev>:
   270a2:	55                   	push   %rbp
   270a3:	48 89 e5             	mov    %rsp,%rbp
   270a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   270aa:	48 8d 15 2f f8 01 00 	lea    0x1f82f(%rip),%rdx        # 468e0 <_ZTVSt9exception+0x10>
   270b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   270b5:	48 89 10             	mov    %rdx,(%rax)
   270b8:	90                   	nop
   270b9:	5d                   	pop    %rbp
   270ba:	c3                   	retq   
   270bb:	90                   	nop

00000000000270bc <_ZNSt9exceptionD0Ev>:
   270bc:	55                   	push   %rbp
   270bd:	48 89 e5             	mov    %rsp,%rbp
   270c0:	48 83 ec 10          	sub    $0x10,%rsp
   270c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   270c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   270cc:	48 89 c7             	mov    %rax,%rdi
   270cf:	e8 ce ff ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   270d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   270d8:	48 89 c7             	mov    %rax,%rdi
   270db:	e8 0e 02 00 00       	callq  272ee <_ZdlPv>
   270e0:	c9                   	leaveq 
   270e1:	c3                   	retq   

00000000000270e2 <_ZNKSt9exception4whatEv>:
   270e2:	55                   	push   %rbp
   270e3:	48 89 e5             	mov    %rsp,%rbp
   270e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   270ea:	48 8d 05 3f 65 01 00 	lea    0x1653f(%rip),%rax        # 3d630 <_ZZ15__cxa_end_catchE8__func__+0x10>
   270f1:	5d                   	pop    %rbp
   270f2:	c3                   	retq   
   270f3:	90                   	nop

00000000000270f4 <_ZNSt9bad_allocC1Ev>:
   270f4:	55                   	push   %rbp
   270f5:	48 89 e5             	mov    %rsp,%rbp
   270f8:	48 83 ec 08          	sub    $0x8,%rsp
   270fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27104:	48 89 c7             	mov    %rax,%rdi
   27107:	e8 7c ff ff ff       	callq  27088 <_ZNSt9exceptionC1Ev>
   2710c:	48 8d 15 a5 f7 01 00 	lea    0x1f7a5(%rip),%rdx        # 468b8 <_ZTVSt9bad_alloc+0x10>
   27113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27117:	48 89 10             	mov    %rdx,(%rax)
   2711a:	90                   	nop
   2711b:	c9                   	leaveq 
   2711c:	c3                   	retq   
   2711d:	90                   	nop

000000000002711e <_ZNSt9bad_allocD1Ev>:
   2711e:	55                   	push   %rbp
   2711f:	48 89 e5             	mov    %rsp,%rbp
   27122:	48 83 ec 08          	sub    $0x8,%rsp
   27126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2712a:	48 8d 15 87 f7 01 00 	lea    0x1f787(%rip),%rdx        # 468b8 <_ZTVSt9bad_alloc+0x10>
   27131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27135:	48 89 10             	mov    %rdx,(%rax)
   27138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2713c:	48 89 c7             	mov    %rax,%rdi
   2713f:	e8 5e ff ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   27144:	90                   	nop
   27145:	c9                   	leaveq 
   27146:	c3                   	retq   
   27147:	90                   	nop

0000000000027148 <_ZNSt9bad_allocD0Ev>:
   27148:	55                   	push   %rbp
   27149:	48 89 e5             	mov    %rsp,%rbp
   2714c:	48 83 ec 10          	sub    $0x10,%rsp
   27150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27158:	48 89 c7             	mov    %rax,%rdi
   2715b:	e8 be ff ff ff       	callq  2711e <_ZNSt9bad_allocD1Ev>
   27160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27164:	48 89 c7             	mov    %rax,%rdi
   27167:	e8 82 01 00 00       	callq  272ee <_ZdlPv>
   2716c:	c9                   	leaveq 
   2716d:	c3                   	retq   

000000000002716e <_ZNKSt9bad_alloc4whatEv>:
   2716e:	55                   	push   %rbp
   2716f:	48 89 e5             	mov    %rsp,%rbp
   27172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27176:	48 8d 05 d5 64 01 00 	lea    0x164d5(%rip),%rax        # 3d652 <_ZZ15__cxa_end_catchE8__func__+0x32>
   2717d:	5d                   	pop    %rbp
   2717e:	c3                   	retq   
   2717f:	90                   	nop

0000000000027180 <_ZNKSt9type_info14__is_pointer_pEv>:
   27180:	55                   	push   %rbp
   27181:	48 89 e5             	mov    %rsp,%rbp
   27184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27188:	b8 00 00 00 00       	mov    $0x0,%eax
   2718d:	5d                   	pop    %rbp
   2718e:	c3                   	retq   
   2718f:	90                   	nop

0000000000027190 <_ZNKSt9type_info15__is_function_pEv>:
   27190:	55                   	push   %rbp
   27191:	48 89 e5             	mov    %rsp,%rbp
   27194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27198:	b8 00 00 00 00       	mov    $0x0,%eax
   2719d:	5d                   	pop    %rbp
   2719e:	c3                   	retq   
   2719f:	90                   	nop

00000000000271a0 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
   271a0:	55                   	push   %rbp
   271a1:	48 89 e5             	mov    %rsp,%rbp
   271a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   271a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   271ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   271b0:	b8 00 00 00 00       	mov    $0x0,%eax
   271b5:	5d                   	pop    %rbp
   271b6:	c3                   	retq   
   271b7:	90                   	nop

00000000000271b8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   271b8:	55                   	push   %rbp
   271b9:	48 89 e5             	mov    %rsp,%rbp
   271bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   271c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   271c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   271c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   271cc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   271d0:	0f 94 c0             	sete   %al
   271d3:	5d                   	pop    %rbp
   271d4:	c3                   	retq   

00000000000271d5 <tcxx_access_version_dummy4>:
   271d5:	55                   	push   %rbp
   271d6:	48 89 e5             	mov    %rsp,%rbp
   271d9:	c6 05 40 00 02 00 73 	movb   $0x73,0x20040(%rip)        # 47220 <sgx_tcxx_version>
   271e0:	48 8d 05 39 00 02 00 	lea    0x20039(%rip),%rax        # 47220 <sgx_tcxx_version>
   271e7:	5d                   	pop    %rbp
   271e8:	c3                   	retq   
   271e9:	90                   	nop

00000000000271ea <_ZNSt9type_infoD1Ev>:
   271ea:	55                   	push   %rbp
   271eb:	48 89 e5             	mov    %rsp,%rbp
   271ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   271f2:	48 8d 15 97 fb 01 00 	lea    0x1fb97(%rip),%rdx        # 46d90 <_ZTVSt9type_info+0x10>
   271f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   271fd:	48 89 10             	mov    %rdx,(%rax)
   27200:	90                   	nop
   27201:	5d                   	pop    %rbp
   27202:	c3                   	retq   
   27203:	90                   	nop

0000000000027204 <_ZNSt9type_infoD0Ev>:
   27204:	55                   	push   %rbp
   27205:	48 89 e5             	mov    %rsp,%rbp
   27208:	48 83 ec 10          	sub    $0x10,%rsp
   2720c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27214:	48 89 c7             	mov    %rax,%rdi
   27217:	e8 ce ff ff ff       	callq  271ea <_ZNSt9type_infoD1Ev>
   2721c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27220:	48 89 c7             	mov    %rax,%rdi
   27223:	e8 c6 00 00 00       	callq  272ee <_ZdlPv>
   27228:	c9                   	leaveq 
   27229:	c3                   	retq   

000000000002722a <_ZNKSt9type_infoeqERKS_>:
   2722a:	55                   	push   %rbp
   2722b:	48 89 e5             	mov    %rsp,%rbp
   2722e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27232:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2723a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2723e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27242:	48 8b 40 08          	mov    0x8(%rax),%rax
   27246:	48 39 c2             	cmp    %rax,%rdx
   27249:	0f 94 c0             	sete   %al
   2724c:	5d                   	pop    %rbp
   2724d:	c3                   	retq   

000000000002724e <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   2724e:	55                   	push   %rbp
   2724f:	48 89 e5             	mov    %rsp,%rbp
   27252:	48 83 ec 08          	sub    $0x8,%rsp
   27256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2725a:	48 8d 15 e7 fa 01 00 	lea    0x1fae7(%rip),%rdx        # 46d48 <_ZTVN10__cxxabiv117__class_type_infoE+0x10>
   27261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27265:	48 89 10             	mov    %rdx,(%rax)
   27268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2726c:	48 89 c7             	mov    %rax,%rdi
   2726f:	e8 76 ff ff ff       	callq  271ea <_ZNSt9type_infoD1Ev>
   27274:	90                   	nop
   27275:	c9                   	leaveq 
   27276:	c3                   	retq   
   27277:	90                   	nop

0000000000027278 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   27278:	55                   	push   %rbp
   27279:	48 89 e5             	mov    %rsp,%rbp
   2727c:	48 83 ec 10          	sub    $0x10,%rsp
   27280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27288:	48 89 c7             	mov    %rax,%rdi
   2728b:	e8 be ff ff ff       	callq  2724e <_ZN10__cxxabiv117__class_type_infoD1Ev>
   27290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27294:	48 89 c7             	mov    %rax,%rdi
   27297:	e8 52 00 00 00       	callq  272ee <_ZdlPv>
   2729c:	c9                   	leaveq 
   2729d:	c3                   	retq   

000000000002729e <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   2729e:	55                   	push   %rbp
   2729f:	48 89 e5             	mov    %rsp,%rbp
   272a2:	48 83 ec 08          	sub    $0x8,%rsp
   272a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   272aa:	48 8d 15 4f fa 01 00 	lea    0x1fa4f(%rip),%rdx        # 46d00 <_ZTVN10__cxxabiv120__si_class_type_infoE+0x10>
   272b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   272b5:	48 89 10             	mov    %rdx,(%rax)
   272b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   272bc:	48 89 c7             	mov    %rax,%rdi
   272bf:	e8 8a ff ff ff       	callq  2724e <_ZN10__cxxabiv117__class_type_infoD1Ev>
   272c4:	90                   	nop
   272c5:	c9                   	leaveq 
   272c6:	c3                   	retq   
   272c7:	90                   	nop

00000000000272c8 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   272c8:	55                   	push   %rbp
   272c9:	48 89 e5             	mov    %rsp,%rbp
   272cc:	48 83 ec 10          	sub    $0x10,%rsp
   272d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   272d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   272d8:	48 89 c7             	mov    %rax,%rdi
   272db:	e8 be ff ff ff       	callq  2729e <_ZN10__cxxabiv120__si_class_type_infoD1Ev>
   272e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   272e4:	48 89 c7             	mov    %rax,%rdi
   272e7:	e8 02 00 00 00       	callq  272ee <_ZdlPv>
   272ec:	c9                   	leaveq 
   272ed:	c3                   	retq   

00000000000272ee <_ZdlPv>:
   272ee:	55                   	push   %rbp
   272ef:	48 89 e5             	mov    %rsp,%rbp
   272f2:	48 83 ec 10          	sub    $0x10,%rsp
   272f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   272fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   272fe:	48 89 c7             	mov    %rax,%rdi
   27301:	e8 39 9c fe ff       	callq  10f3f <dlfree>
   27306:	90                   	nop
   27307:	c9                   	leaveq 
   27308:	c3                   	retq   

0000000000027309 <_ZdaPv>:
   27309:	55                   	push   %rbp
   2730a:	48 89 e5             	mov    %rsp,%rbp
   2730d:	48 83 ec 10          	sub    $0x10,%rsp
   27311:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27319:	48 89 c7             	mov    %rax,%rdi
   2731c:	e8 cd ff ff ff       	callq  272ee <_ZdlPv>
   27321:	90                   	nop
   27322:	c9                   	leaveq 
   27323:	c3                   	retq   

0000000000027324 <_Znwm>:
   27324:	55                   	push   %rbp
   27325:	48 89 e5             	mov    %rsp,%rbp
   27328:	53                   	push   %rbx
   27329:	48 83 ec 28          	sub    $0x28,%rsp
   2732d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27331:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27335:	48 89 c7             	mov    %rax,%rdi
   27338:	e8 0b 91 fe ff       	callq  10448 <dlmalloc>
   2733d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27341:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   27346:	75 4e                	jne    27396 <_Znwm+0x72>
   27348:	e8 a7 00 00 00       	callq  273f4 <_Z9call_newhv>
   2734d:	85 c0                	test   %eax,%eax
   2734f:	0f 94 c0             	sete   %al
   27352:	84 c0                	test   %al,%al
   27354:	74 2e                	je     27384 <_Znwm+0x60>
   27356:	bf 08 00 00 00       	mov    $0x8,%edi
   2735b:	e8 6f ed ff ff       	callq  260cf <__cxa_allocate_exception>
   27360:	48 89 c3             	mov    %rax,%rbx
   27363:	48 89 df             	mov    %rbx,%rdi
   27366:	e8 89 fd ff ff       	callq  270f4 <_ZNSt9bad_allocC1Ev>
   2736b:	48 8d 05 ac fd ff ff 	lea    -0x254(%rip),%rax        # 2711e <_ZNSt9bad_allocD1Ev>
   27372:	48 89 c2             	mov    %rax,%rdx
   27375:	48 8d 35 4c f9 01 00 	lea    0x1f94c(%rip),%rsi        # 46cc8 <_ZTISt9bad_alloc>
   2737c:	48 89 df             	mov    %rbx,%rdi
   2737f:	e8 50 f0 ff ff       	callq  263d4 <__cxa_throw>
   27384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27388:	48 89 c7             	mov    %rax,%rdi
   2738b:	e8 b8 90 fe ff       	callq  10448 <dlmalloc>
   27390:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27394:	eb ab                	jmp    27341 <_Znwm+0x1d>
   27396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2739a:	48 83 c4 28          	add    $0x28,%rsp
   2739e:	5b                   	pop    %rbx
   2739f:	5d                   	pop    %rbp
   273a0:	c3                   	retq   

00000000000273a1 <_ZnwmPv>:
   273a1:	55                   	push   %rbp
   273a2:	48 89 e5             	mov    %rsp,%rbp
   273a5:	48 83 ec 10          	sub    $0x10,%rsp
   273a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   273ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   273b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   273b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   273b9:	48 89 d6             	mov    %rdx,%rsi
   273bc:	48 89 c7             	mov    %rax,%rdi
   273bf:	e8 ed 09 fe ff       	callq  7db1 <sgx_is_within_enclave>
   273c4:	85 c0                	test   %eax,%eax
   273c6:	0f 94 c0             	sete   %al
   273c9:	84 c0                	test   %al,%al
   273cb:	74 07                	je     273d4 <_ZnwmPv+0x33>
   273cd:	b8 00 00 00 00       	mov    $0x0,%eax
   273d2:	eb 04                	jmp    273d8 <_ZnwmPv+0x37>
   273d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   273d8:	c9                   	leaveq 
   273d9:	c3                   	retq   

00000000000273da <_Znam>:
   273da:	55                   	push   %rbp
   273db:	48 89 e5             	mov    %rsp,%rbp
   273de:	48 83 ec 10          	sub    $0x10,%rsp
   273e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   273e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   273ea:	48 89 c7             	mov    %rax,%rdi
   273ed:	e8 32 ff ff ff       	callq  27324 <_Znwm>
   273f2:	c9                   	leaveq 
   273f3:	c3                   	retq   

00000000000273f4 <_Z9call_newhv>:
   273f4:	55                   	push   %rbp
   273f5:	48 89 e5             	mov    %rsp,%rbp
   273f8:	48 83 ec 10          	sub    $0x10,%rsp
   273fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   27403:	48 8d 3d ce 55 02 00 	lea    0x255ce(%rip),%rdi        # 4c9d8 <_ZStL12handler_lock>
   2740a:	e8 e2 c7 fe ff       	callq  13bf1 <sgx_spin_lock>
   2740f:	48 8b 05 ca 55 02 00 	mov    0x255ca(%rip),%rax        # 4c9e0 <_ZStL9new_handl>
   27416:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2741a:	48 8d 3d b7 55 02 00 	lea    0x255b7(%rip),%rdi        # 4c9d8 <_ZStL12handler_lock>
   27421:	e8 32 c8 fe ff       	callq  13c58 <sgx_spin_unlock>
   27426:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2742b:	74 0d                	je     2743a <_Z9call_newhv+0x46>
   2742d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27431:	ff d0                	callq  *%rax
   27433:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   2743a:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2743d:	c9                   	leaveq 
   2743e:	c3                   	retq   

000000000002743f <_ZNSt3__118__libcpp_refstring13rep_from_dataEPKc>:
   2743f:	55                   	push   %rbp
   27440:	48 89 e5             	mov    %rsp,%rbp
   27443:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27447:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2744b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2744f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27453:	48 83 e8 18          	sub    $0x18,%rax
   27457:	5d                   	pop    %rbp
   27458:	c3                   	retq   

0000000000027459 <_ZNSt3__118__libcpp_refstring13data_from_repEPNS0_9_Rep_baseE>:
   27459:	55                   	push   %rbp
   2745a:	48 89 e5             	mov    %rsp,%rbp
   2745d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27465:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2746d:	48 83 c0 18          	add    $0x18,%rax
   27471:	5d                   	pop    %rbp
   27472:	c3                   	retq   
   27473:	90                   	nop

0000000000027474 <_ZNKSt3__118__libcpp_refstring13uses_refcountEv>:
   27474:	55                   	push   %rbp
   27475:	48 89 e5             	mov    %rsp,%rbp
   27478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2747c:	b8 01 00 00 00       	mov    $0x1,%eax
   27481:	5d                   	pop    %rbp
   27482:	c3                   	retq   
   27483:	90                   	nop

0000000000027484 <_ZNSt3__118__libcpp_refstringC1EPKc>:
   27484:	55                   	push   %rbp
   27485:	48 89 e5             	mov    %rsp,%rbp
   27488:	48 83 ec 30          	sub    $0x30,%rsp
   2748c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27490:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   27494:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27498:	48 89 c7             	mov    %rax,%rdi
   2749b:	e8 d1 c7 fe ff       	callq  13c71 <strlen>
   274a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   274a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   274a8:	48 83 c0 19          	add    $0x19,%rax
   274ac:	48 89 c7             	mov    %rax,%rdi
   274af:	e8 70 fe ff ff       	callq  27324 <_Znwm>
   274b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   274b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   274bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   274c0:	48 89 10             	mov    %rdx,(%rax)
   274c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   274c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   274cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   274cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   274d3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   274da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   274de:	48 89 c7             	mov    %rax,%rdi
   274e1:	e8 73 ff ff ff       	callq  27459 <_ZNSt3__118__libcpp_refstring13data_from_repEPNS0_9_Rep_baseE>
   274e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   274ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   274ee:	48 8d 50 01          	lea    0x1(%rax),%rdx
   274f2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   274f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   274fa:	48 89 ce             	mov    %rcx,%rsi
   274fd:	48 89 c7             	mov    %rax,%rdi
   27500:	e8 c2 c1 fe ff       	callq  136c7 <memcpy>
   27505:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27509:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2750d:	48 89 10             	mov    %rdx,(%rax)
   27510:	90                   	nop
   27511:	c9                   	leaveq 
   27512:	c3                   	retq   
   27513:	90                   	nop

0000000000027514 <_ZNSt3__118__libcpp_refstringaSERKS0_>:
   27514:	55                   	push   %rbp
   27515:	48 89 e5             	mov    %rsp,%rbp
   27518:	48 83 ec 20          	sub    $0x20,%rsp
   2751c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27520:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27528:	48 89 c7             	mov    %rax,%rdi
   2752b:	e8 44 ff ff ff       	callq  27474 <_ZNKSt3__118__libcpp_refstring13uses_refcountEv>
   27530:	88 45 f7             	mov    %al,-0x9(%rbp)
   27533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27537:	48 8b 00             	mov    (%rax),%rax
   2753a:	48 89 c7             	mov    %rax,%rdi
   2753d:	e8 fd fe ff ff       	callq  2743f <_ZNSt3__118__libcpp_refstring13rep_from_dataEPKc>
   27542:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27546:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2754a:	48 8b 10             	mov    (%rax),%rdx
   2754d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27551:	48 89 10             	mov    %rdx,(%rax)
   27554:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27558:	48 89 c7             	mov    %rax,%rdi
   2755b:	e8 14 ff ff ff       	callq  27474 <_ZNKSt3__118__libcpp_refstring13uses_refcountEv>
   27560:	84 c0                	test   %al,%al
   27562:	74 17                	je     2757b <_ZNSt3__118__libcpp_refstringaSERKS0_+0x67>
   27564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27568:	48 8b 00             	mov    (%rax),%rax
   2756b:	48 89 c7             	mov    %rax,%rdi
   2756e:	e8 cc fe ff ff       	callq  2743f <_ZNSt3__118__libcpp_refstring13rep_from_dataEPKc>
   27573:	48 83 c0 10          	add    $0x10,%rax
   27577:	f0 83 00 01          	lock addl $0x1,(%rax)
   2757b:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
   2757f:	74 27                	je     275a8 <_ZNSt3__118__libcpp_refstringaSERKS0_+0x94>
   27581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27585:	48 8d 50 10          	lea    0x10(%rax),%rdx
   27589:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2758e:	f0 0f c1 02          	lock xadd %eax,(%rdx)
   27592:	83 e8 01             	sub    $0x1,%eax
   27595:	c1 e8 1f             	shr    $0x1f,%eax
   27598:	84 c0                	test   %al,%al
   2759a:	74 0c                	je     275a8 <_ZNSt3__118__libcpp_refstringaSERKS0_+0x94>
   2759c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   275a0:	48 89 c7             	mov    %rax,%rdi
   275a3:	e8 46 fd ff ff       	callq  272ee <_ZdlPv>
   275a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   275ac:	c9                   	leaveq 
   275ad:	c3                   	retq   

00000000000275ae <_ZNSt3__118__libcpp_refstringD1Ev>:
   275ae:	55                   	push   %rbp
   275af:	48 89 e5             	mov    %rsp,%rbp
   275b2:	48 83 ec 20          	sub    $0x20,%rsp
   275b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   275ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   275be:	48 89 c7             	mov    %rax,%rdi
   275c1:	e8 ae fe ff ff       	callq  27474 <_ZNKSt3__118__libcpp_refstring13uses_refcountEv>
   275c6:	84 c0                	test   %al,%al
   275c8:	74 3a                	je     27604 <_ZNSt3__118__libcpp_refstringD1Ev+0x56>
   275ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   275ce:	48 8b 00             	mov    (%rax),%rax
   275d1:	48 89 c7             	mov    %rax,%rdi
   275d4:	e8 66 fe ff ff       	callq  2743f <_ZNSt3__118__libcpp_refstring13rep_from_dataEPKc>
   275d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   275dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   275e1:	48 8d 50 10          	lea    0x10(%rax),%rdx
   275e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   275ea:	f0 0f c1 02          	lock xadd %eax,(%rdx)
   275ee:	83 e8 01             	sub    $0x1,%eax
   275f1:	c1 e8 1f             	shr    $0x1f,%eax
   275f4:	84 c0                	test   %al,%al
   275f6:	74 0c                	je     27604 <_ZNSt3__118__libcpp_refstringD1Ev+0x56>
   275f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   275fc:	48 89 c7             	mov    %rax,%rdi
   275ff:	e8 ea fc ff ff       	callq  272ee <_ZdlPv>
   27604:	90                   	nop
   27605:	c9                   	leaveq 
   27606:	c3                   	retq   
   27607:	90                   	nop

0000000000027608 <_ZNKSt3__118__libcpp_refstring5c_strEv>:
   27608:	55                   	push   %rbp
   27609:	48 89 e5             	mov    %rsp,%rbp
   2760c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27614:	48 8b 00             	mov    (%rax),%rax
   27617:	5d                   	pop    %rbp
   27618:	c3                   	retq   
   27619:	90                   	nop

000000000002761a <_ZNSt11logic_errorC1EPKc>:
   2761a:	55                   	push   %rbp
   2761b:	48 89 e5             	mov    %rsp,%rbp
   2761e:	53                   	push   %rbx
   2761f:	48 83 ec 18          	sub    $0x18,%rsp
   27623:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27627:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2762b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2762f:	48 89 c7             	mov    %rax,%rdi
   27632:	e8 51 fa ff ff       	callq  27088 <_ZNSt9exceptionC1Ev>
   27637:	48 8d 15 82 f3 01 00 	lea    0x1f382(%rip),%rdx        # 469c0 <_ZTVSt11logic_error+0x10>
   2763e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27642:	48 89 10             	mov    %rdx,(%rax)
   27645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27649:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2764d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27651:	48 89 c6             	mov    %rax,%rsi
   27654:	48 89 d7             	mov    %rdx,%rdi
   27657:	e8 28 fe ff ff       	callq  27484 <_ZNSt3__118__libcpp_refstringC1EPKc>
   2765c:	eb 1a                	jmp    27678 <_ZNSt11logic_errorC1EPKc+0x5e>
   2765e:	48 89 c3             	mov    %rax,%rbx
   27661:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27665:	48 89 c7             	mov    %rax,%rdi
   27668:	e8 35 fa ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   2766d:	48 89 d8             	mov    %rbx,%rax
   27670:	48 89 c7             	mov    %rax,%rdi
   27673:	e8 9b 96 ff ff       	callq  20d13 <_Unwind_Resume>
   27678:	48 83 c4 18          	add    $0x18,%rsp
   2767c:	5b                   	pop    %rbx
   2767d:	5d                   	pop    %rbp
   2767e:	c3                   	retq   
   2767f:	90                   	nop

0000000000027680 <_ZNSt11logic_errorD1Ev>:
   27680:	55                   	push   %rbp
   27681:	48 89 e5             	mov    %rsp,%rbp
   27684:	48 83 ec 10          	sub    $0x10,%rsp
   27688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2768c:	48 8d 15 2d f3 01 00 	lea    0x1f32d(%rip),%rdx        # 469c0 <_ZTVSt11logic_error+0x10>
   27693:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27697:	48 89 10             	mov    %rdx,(%rax)
   2769a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2769e:	48 83 c0 08          	add    $0x8,%rax
   276a2:	48 89 c7             	mov    %rax,%rdi
   276a5:	e8 04 ff ff ff       	callq  275ae <_ZNSt3__118__libcpp_refstringD1Ev>
   276aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   276ae:	48 89 c7             	mov    %rax,%rdi
   276b1:	e8 ec f9 ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   276b6:	90                   	nop
   276b7:	c9                   	leaveq 
   276b8:	c3                   	retq   
   276b9:	90                   	nop

00000000000276ba <_ZNSt11logic_errorD0Ev>:
   276ba:	55                   	push   %rbp
   276bb:	48 89 e5             	mov    %rsp,%rbp
   276be:	48 83 ec 10          	sub    $0x10,%rsp
   276c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   276c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   276ca:	48 89 c7             	mov    %rax,%rdi
   276cd:	e8 ae ff ff ff       	callq  27680 <_ZNSt11logic_errorD1Ev>
   276d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   276d6:	48 89 c7             	mov    %rax,%rdi
   276d9:	e8 10 fc ff ff       	callq  272ee <_ZdlPv>
   276de:	c9                   	leaveq 
   276df:	c3                   	retq   

00000000000276e0 <_ZNKSt11logic_error4whatEv>:
   276e0:	55                   	push   %rbp
   276e1:	48 89 e5             	mov    %rsp,%rbp
   276e4:	48 83 ec 10          	sub    $0x10,%rsp
   276e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   276ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   276f0:	48 83 c0 08          	add    $0x8,%rax
   276f4:	48 89 c7             	mov    %rax,%rdi
   276f7:	e8 0c ff ff ff       	callq  27608 <_ZNKSt3__118__libcpp_refstring5c_strEv>
   276fc:	c9                   	leaveq 
   276fd:	c3                   	retq   

00000000000276fe <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>:
   276fe:	55                   	push   %rbp
   276ff:	48 89 e5             	mov    %rsp,%rbp
   27702:	53                   	push   %rbx
   27703:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   2770a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   27711:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   27718:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2771f:	48 89 c7             	mov    %rax,%rdi
   27722:	e8 61 f9 ff ff       	callq  27088 <_ZNSt9exceptionC1Ev>
   27727:	48 8d 15 6a f2 01 00 	lea    0x1f26a(%rip),%rdx        # 46998 <_ZTVSt13runtime_error+0x10>
   2772e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   27735:	48 89 10             	mov    %rdx,(%rax)
   27738:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2773f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   27743:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   2774a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   27751:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   27758:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   2775c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   27760:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   27764:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27768:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2776c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27770:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   27774:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   27778:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2777c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   27780:	0f b6 00             	movzbl (%rax),%eax
   27783:	0f b6 c0             	movzbl %al,%eax
   27786:	83 e0 01             	and    $0x1,%eax
   27789:	85 c0                	test   %eax,%eax
   2778b:	0f 95 c0             	setne  %al
   2778e:	84 c0                	test   %al,%al
   27790:	74 22                	je     277b4 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE+0xb6>
   27792:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27796:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2779a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2779e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   277a2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   277a6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   277aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   277ae:	48 8b 40 10          	mov    0x10(%rax),%rax
   277b2:	eb 30                	jmp    277e4 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE+0xe6>
   277b4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   277b8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   277bc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   277c0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   277c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   277c8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   277cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   277d0:	48 83 c0 01          	add    $0x1,%rax
   277d4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   277d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   277dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   277e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   277e4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   277e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   277ec:	48 89 c6             	mov    %rax,%rsi
   277ef:	48 89 d7             	mov    %rdx,%rdi
   277f2:	e8 8d fc ff ff       	callq  27484 <_ZNSt3__118__libcpp_refstringC1EPKc>
   277f7:	eb 1d                	jmp    27816 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE+0x118>
   277f9:	48 89 c3             	mov    %rax,%rbx
   277fc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   27803:	48 89 c7             	mov    %rax,%rdi
   27806:	e8 97 f8 ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   2780b:	48 89 d8             	mov    %rbx,%rax
   2780e:	48 89 c7             	mov    %rax,%rdi
   27811:	e8 fd 94 ff ff       	callq  20d13 <_Unwind_Resume>
   27816:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   2781d:	5b                   	pop    %rbx
   2781e:	5d                   	pop    %rbp
   2781f:	c3                   	retq   

0000000000027820 <_ZNSt13runtime_errorC1EPKc>:
   27820:	55                   	push   %rbp
   27821:	48 89 e5             	mov    %rsp,%rbp
   27824:	53                   	push   %rbx
   27825:	48 83 ec 18          	sub    $0x18,%rsp
   27829:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2782d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27835:	48 89 c7             	mov    %rax,%rdi
   27838:	e8 4b f8 ff ff       	callq  27088 <_ZNSt9exceptionC1Ev>
   2783d:	48 8d 15 54 f1 01 00 	lea    0x1f154(%rip),%rdx        # 46998 <_ZTVSt13runtime_error+0x10>
   27844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27848:	48 89 10             	mov    %rdx,(%rax)
   2784b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2784f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   27853:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27857:	48 89 c6             	mov    %rax,%rsi
   2785a:	48 89 d7             	mov    %rdx,%rdi
   2785d:	e8 22 fc ff ff       	callq  27484 <_ZNSt3__118__libcpp_refstringC1EPKc>
   27862:	eb 1a                	jmp    2787e <_ZNSt13runtime_errorC1EPKc+0x5e>
   27864:	48 89 c3             	mov    %rax,%rbx
   27867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2786b:	48 89 c7             	mov    %rax,%rdi
   2786e:	e8 2f f8 ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   27873:	48 89 d8             	mov    %rbx,%rax
   27876:	48 89 c7             	mov    %rax,%rdi
   27879:	e8 95 94 ff ff       	callq  20d13 <_Unwind_Resume>
   2787e:	48 83 c4 18          	add    $0x18,%rsp
   27882:	5b                   	pop    %rbx
   27883:	5d                   	pop    %rbp
   27884:	c3                   	retq   
   27885:	90                   	nop

0000000000027886 <_ZNSt13runtime_erroraSERKS_>:
   27886:	55                   	push   %rbp
   27887:	48 89 e5             	mov    %rsp,%rbp
   2788a:	48 83 ec 10          	sub    $0x10,%rsp
   2788e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27892:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27896:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2789a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2789e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278a2:	48 83 c0 08          	add    $0x8,%rax
   278a6:	48 89 d6             	mov    %rdx,%rsi
   278a9:	48 89 c7             	mov    %rax,%rdi
   278ac:	e8 63 fc ff ff       	callq  27514 <_ZNSt3__118__libcpp_refstringaSERKS0_>
   278b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278b5:	c9                   	leaveq 
   278b6:	c3                   	retq   
   278b7:	90                   	nop

00000000000278b8 <_ZNSt13runtime_errorD1Ev>:
   278b8:	55                   	push   %rbp
   278b9:	48 89 e5             	mov    %rsp,%rbp
   278bc:	48 83 ec 10          	sub    $0x10,%rsp
   278c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   278c4:	48 8d 15 cd f0 01 00 	lea    0x1f0cd(%rip),%rdx        # 46998 <_ZTVSt13runtime_error+0x10>
   278cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278cf:	48 89 10             	mov    %rdx,(%rax)
   278d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278d6:	48 83 c0 08          	add    $0x8,%rax
   278da:	48 89 c7             	mov    %rax,%rdi
   278dd:	e8 cc fc ff ff       	callq  275ae <_ZNSt3__118__libcpp_refstringD1Ev>
   278e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278e6:	48 89 c7             	mov    %rax,%rdi
   278e9:	e8 b4 f7 ff ff       	callq  270a2 <_ZNSt9exceptionD1Ev>
   278ee:	90                   	nop
   278ef:	c9                   	leaveq 
   278f0:	c3                   	retq   
   278f1:	90                   	nop

00000000000278f2 <_ZNSt13runtime_errorD0Ev>:
   278f2:	55                   	push   %rbp
   278f3:	48 89 e5             	mov    %rsp,%rbp
   278f6:	48 83 ec 10          	sub    $0x10,%rsp
   278fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   278fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27902:	48 89 c7             	mov    %rax,%rdi
   27905:	e8 ae ff ff ff       	callq  278b8 <_ZNSt13runtime_errorD1Ev>
   2790a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2790e:	48 89 c7             	mov    %rax,%rdi
   27911:	e8 d8 f9 ff ff       	callq  272ee <_ZdlPv>
   27916:	c9                   	leaveq 
   27917:	c3                   	retq   

0000000000027918 <_ZNKSt13runtime_error4whatEv>:
   27918:	55                   	push   %rbp
   27919:	48 89 e5             	mov    %rsp,%rbp
   2791c:	48 83 ec 10          	sub    $0x10,%rsp
   27920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27928:	48 83 c0 08          	add    $0x8,%rax
   2792c:	48 89 c7             	mov    %rax,%rdi
   2792f:	e8 d4 fc ff ff       	callq  27608 <_ZNKSt3__118__libcpp_refstring5c_strEv>
   27934:	c9                   	leaveq 
   27935:	c3                   	retq   

0000000000027936 <_ZNSt12length_errorD1Ev>:
   27936:	55                   	push   %rbp
   27937:	48 89 e5             	mov    %rsp,%rbp
   2793a:	48 83 ec 10          	sub    $0x10,%rsp
   2793e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27942:	48 8d 15 27 f0 01 00 	lea    0x1f027(%rip),%rdx        # 46970 <_ZTVSt12length_error+0x10>
   27949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2794d:	48 89 10             	mov    %rdx,(%rax)
   27950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27954:	48 89 c7             	mov    %rax,%rdi
   27957:	e8 24 fd ff ff       	callq  27680 <_ZNSt11logic_errorD1Ev>
   2795c:	90                   	nop
   2795d:	c9                   	leaveq 
   2795e:	c3                   	retq   
   2795f:	90                   	nop

0000000000027960 <_ZNSt12length_errorD0Ev>:
   27960:	55                   	push   %rbp
   27961:	48 89 e5             	mov    %rsp,%rbp
   27964:	48 83 ec 10          	sub    $0x10,%rsp
   27968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2796c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27970:	48 89 c7             	mov    %rax,%rdi
   27973:	e8 be ff ff ff       	callq  27936 <_ZNSt12length_errorD1Ev>
   27978:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2797c:	48 89 c7             	mov    %rax,%rdi
   2797f:	e8 6a f9 ff ff       	callq  272ee <_ZdlPv>
   27984:	c9                   	leaveq 
   27985:	c3                   	retq   

0000000000027986 <_ZNSt12out_of_rangeD1Ev>:
   27986:	55                   	push   %rbp
   27987:	48 89 e5             	mov    %rsp,%rbp
   2798a:	48 83 ec 10          	sub    $0x10,%rsp
   2798e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27992:	48 8d 15 af ef 01 00 	lea    0x1efaf(%rip),%rdx        # 46948 <_ZTVSt12out_of_range+0x10>
   27999:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2799d:	48 89 10             	mov    %rdx,(%rax)
   279a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279a4:	48 89 c7             	mov    %rax,%rdi
   279a7:	e8 d4 fc ff ff       	callq  27680 <_ZNSt11logic_errorD1Ev>
   279ac:	90                   	nop
   279ad:	c9                   	leaveq 
   279ae:	c3                   	retq   
   279af:	90                   	nop

00000000000279b0 <_ZNSt12out_of_rangeD0Ev>:
   279b0:	55                   	push   %rbp
   279b1:	48 89 e5             	mov    %rsp,%rbp
   279b4:	48 83 ec 10          	sub    $0x10,%rsp
   279b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   279bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279c0:	48 89 c7             	mov    %rax,%rdi
   279c3:	e8 be ff ff ff       	callq  27986 <_ZNSt12out_of_rangeD1Ev>
   279c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279cc:	48 89 c7             	mov    %rax,%rdi
   279cf:	e8 1a f9 ff ff       	callq  272ee <_ZdlPv>
   279d4:	c9                   	leaveq 
   279d5:	c3                   	retq   

00000000000279d6 <_ZNSt3__111char_traitsIcE6assignERcRKc>:
   279d6:	55                   	push   %rbp
   279d7:	48 89 e5             	mov    %rsp,%rbp
   279da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   279de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   279e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   279e6:	0f b6 10             	movzbl (%rax),%edx
   279e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279ed:	88 10                	mov    %dl,(%rax)
   279ef:	90                   	nop
   279f0:	5d                   	pop    %rbp
   279f1:	c3                   	retq   

00000000000279f2 <_ZNSt3__111char_traitsIcE7compareEPKcS3_m>:
   279f2:	55                   	push   %rbp
   279f3:	48 89 e5             	mov    %rsp,%rbp
   279f6:	48 83 ec 20          	sub    $0x20,%rsp
   279fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   279fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27a02:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   27a06:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   27a0b:	74 19                	je     27a26 <_ZNSt3__111char_traitsIcE7compareEPKcS3_m+0x34>
   27a0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27a11:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   27a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27a19:	48 89 ce             	mov    %rcx,%rsi
   27a1c:	48 89 c7             	mov    %rax,%rdi
   27a1f:	e8 05 bb fe ff       	callq  13529 <memcmp>
   27a24:	eb 05                	jmp    27a2b <_ZNSt3__111char_traitsIcE7compareEPKcS3_m+0x39>
   27a26:	b8 00 00 00 00       	mov    $0x0,%eax
   27a2b:	c9                   	leaveq 
   27a2c:	c3                   	retq   

0000000000027a2d <_ZNSt3__111char_traitsIcE4copyEPcPKcm>:
   27a2d:	55                   	push   %rbp
   27a2e:	48 89 e5             	mov    %rsp,%rbp
   27a31:	48 83 ec 20          	sub    $0x20,%rsp
   27a35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27a39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27a3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   27a41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27a45:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   27a49:	72 30                	jb     27a7b <_ZNSt3__111char_traitsIcE4copyEPcPKcm+0x4e>
   27a4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27a4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27a53:	48 01 d0             	add    %rdx,%rax
   27a56:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   27a5a:	73 1f                	jae    27a7b <_ZNSt3__111char_traitsIcE4copyEPcPKcm+0x4e>
   27a5c:	48 8d 0d 4d 5d 01 00 	lea    0x15d4d(%rip),%rcx        # 3d7b0 <_ZTSSt11logic_error+0x10>
   27a63:	48 8d 15 ee 5e 01 00 	lea    0x15eee(%rip),%rdx        # 3d958 <_ZZNSt3__111char_traitsIcE4copyEPcPKcmE8__func__>
   27a6a:	be 94 02 00 00       	mov    $0x294,%esi
   27a6f:	48 8d 3d 5a 5d 01 00 	lea    0x15d5a(%rip),%rdi        # 3d7d0 <_ZTSSt11logic_error+0x30>
   27a76:	e8 1a 3a fe ff       	callq  b495 <__assert>
   27a7b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   27a80:	74 19                	je     27a9b <_ZNSt3__111char_traitsIcE4copyEPcPKcm+0x6e>
   27a82:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27a86:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   27a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27a8e:	48 89 ce             	mov    %rcx,%rsi
   27a91:	48 89 c7             	mov    %rax,%rdi
   27a94:	e8 2e bc fe ff       	callq  136c7 <memcpy>
   27a99:	eb 04                	jmp    27a9f <_ZNSt3__111char_traitsIcE4copyEPcPKcm+0x72>
   27a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27a9f:	c9                   	leaveq 
   27aa0:	c3                   	retq   
   27aa1:	90                   	nop

0000000000027aa2 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>:
   27aa2:	55                   	push   %rbp
   27aa3:	48 89 e5             	mov    %rsp,%rbp
   27aa6:	41 54                	push   %r12
   27aa8:	53                   	push   %rbx
   27aa9:	48 83 ec 20          	sub    $0x20,%rsp
   27aad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27ab1:	bf 10 00 00 00       	mov    $0x10,%edi
   27ab6:	e8 14 e6 ff ff       	callq  260cf <__cxa_allocate_exception>
   27abb:	48 89 c3             	mov    %rax,%rbx
   27abe:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   27ac2:	48 8d 05 18 5d 01 00 	lea    0x15d18(%rip),%rax        # 3d7e1 <_ZTSSt11logic_error+0x41>
   27ac9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27acd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27ad1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27ad5:	48 89 d6             	mov    %rdx,%rsi
   27ad8:	48 89 c7             	mov    %rax,%rdi
   27adb:	e8 3a fb ff ff       	callq  2761a <_ZNSt11logic_errorC1EPKc>
   27ae0:	48 8d 15 89 ee 01 00 	lea    0x1ee89(%rip),%rdx        # 46970 <_ZTVSt12length_error+0x10>
   27ae7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27aeb:	48 89 10             	mov    %rdx,(%rax)
   27aee:	48 8d 05 41 fe ff ff 	lea    -0x1bf(%rip),%rax        # 27936 <_ZNSt12length_errorD1Ev>
   27af5:	48 89 c2             	mov    %rax,%rdx
   27af8:	48 8d 35 d9 f2 01 00 	lea    0x1f2d9(%rip),%rsi        # 46dd8 <_ZTISt12length_error>
   27aff:	48 89 df             	mov    %rbx,%rdi
   27b02:	e8 cd e8 ff ff       	callq  263d4 <__cxa_throw>
   27b07:	49 89 c4             	mov    %rax,%r12
   27b0a:	48 89 df             	mov    %rbx,%rdi
   27b0d:	e8 ef e5 ff ff       	callq  26101 <__cxa_free_exception>
   27b12:	4c 89 e0             	mov    %r12,%rax
   27b15:	48 89 c7             	mov    %rax,%rdi
   27b18:	e8 f6 91 ff ff       	callq  20d13 <_Unwind_Resume>
   27b1d:	90                   	nop

0000000000027b1e <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>:
   27b1e:	55                   	push   %rbp
   27b1f:	48 89 e5             	mov    %rsp,%rbp
   27b22:	41 54                	push   %r12
   27b24:	53                   	push   %rbx
   27b25:	48 83 ec 20          	sub    $0x20,%rsp
   27b29:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27b2d:	bf 10 00 00 00       	mov    $0x10,%edi
   27b32:	e8 98 e5 ff ff       	callq  260cf <__cxa_allocate_exception>
   27b37:	48 89 c3             	mov    %rax,%rbx
   27b3a:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   27b3e:	48 8d 05 9c 5c 01 00 	lea    0x15c9c(%rip),%rax        # 3d7e1 <_ZTSSt11logic_error+0x41>
   27b45:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27b49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27b4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27b51:	48 89 d6             	mov    %rdx,%rsi
   27b54:	48 89 c7             	mov    %rax,%rdi
   27b57:	e8 be fa ff ff       	callq  2761a <_ZNSt11logic_errorC1EPKc>
   27b5c:	48 8d 15 e5 ed 01 00 	lea    0x1ede5(%rip),%rdx        # 46948 <_ZTVSt12out_of_range+0x10>
   27b63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27b67:	48 89 10             	mov    %rdx,(%rax)
   27b6a:	48 8d 05 15 fe ff ff 	lea    -0x1eb(%rip),%rax        # 27986 <_ZNSt12out_of_rangeD1Ev>
   27b71:	48 89 c2             	mov    %rax,%rdx
   27b74:	48 8d 35 45 f2 01 00 	lea    0x1f245(%rip),%rsi        # 46dc0 <_ZTISt12out_of_range>
   27b7b:	48 89 df             	mov    %rbx,%rdi
   27b7e:	e8 51 e8 ff ff       	callq  263d4 <__cxa_throw>
   27b83:	49 89 c4             	mov    %rax,%r12
   27b86:	48 89 df             	mov    %rbx,%rdi
   27b89:	e8 73 e5 ff ff       	callq  26101 <__cxa_free_exception>
   27b8e:	4c 89 e0             	mov    %r12,%rax
   27b91:	48 89 c7             	mov    %rax,%rdi
   27b94:	e8 7a 91 ff ff       	callq  20d13 <_Unwind_Resume>
   27b99:	90                   	nop

0000000000027b9a <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>:
   27b9a:	55                   	push   %rbp
   27b9b:	48 89 e5             	mov    %rsp,%rbp
   27b9e:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   27ba5:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   27bac:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   27bb3:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   27bba:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   27bc1:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   27bc8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   27bcf:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   27bd6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   27bdd:	0f b6 00             	movzbl (%rax),%eax
   27be0:	0f b6 c0             	movzbl %al,%eax
   27be3:	83 e0 01             	and    $0x1,%eax
   27be6:	85 c0                	test   %eax,%eax
   27be8:	0f 95 c0             	setne  %al
   27beb:	84 c0                	test   %al,%al
   27bed:	0f 84 a3 00 00 00    	je     27c96 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev+0xfc>
   27bf3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   27bfa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27bfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27c02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   27c06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27c0a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27c12:	48 8b 00             	mov    (%rax),%rax
   27c15:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   27c19:	48 89 c1             	mov    %rax,%rcx
   27c1c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   27c23:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   27c27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27c2b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   27c2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27c33:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   27c37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27c3b:	48 8b 40 10          	mov    0x10(%rax),%rax
   27c3f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   27c46:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   27c4a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   27c4e:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   27c52:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   27c56:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   27c5a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   27c5e:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
   27c62:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   27c66:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   27c6a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   27c6e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   27c72:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27c76:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   27c7a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27c7e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   27c82:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   27c86:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   27c8a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   27c8e:	48 89 c7             	mov    %rax,%rdi
   27c91:	e8 58 f6 ff ff       	callq  272ee <_ZdlPv>
   27c96:	90                   	nop
   27c97:	c9                   	leaveq 
   27c98:	c3                   	retq   
   27c99:	90                   	nop

0000000000027c9a <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>:
   27c9a:	55                   	push   %rbp
   27c9b:	48 89 e5             	mov    %rsp,%rbp
   27c9e:	41 54                	push   %r12
   27ca0:	53                   	push   %rbx
   27ca1:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
   27ca8:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
   27caf:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
   27cb6:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
   27cbd:	48 89 8d a0 fe ff ff 	mov    %rcx,-0x160(%rbp)
   27cc4:	4c 89 85 98 fe ff ff 	mov    %r8,-0x168(%rbp)
   27ccb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   27cd2:	00 00 
   27cd4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27cd8:	31 c0                	xor    %eax,%eax
   27cda:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   27ce1:	48 85 c0             	test   %rax,%rax
   27ce4:	74 29                	je     27d0f <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x75>
   27ce6:	48 83 bd a0 fe ff ff 	cmpq   $0x0,-0x160(%rbp)
   27ced:	00 
   27cee:	75 1f                	jne    27d0f <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x75>
   27cf0:	48 8d 0d 5b 5b 01 00 	lea    0x15b5b(%rip),%rcx        # 3d852 <_ZTSSt11logic_error+0xb2>
   27cf7:	48 8d 15 62 5c 01 00 	lea    0x15c62(%rip),%rdx        # 3d960 <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__>
   27cfe:	be c0 0e 00 00       	mov    $0xec0,%esi
   27d03:	48 8d 3d c6 5a 01 00 	lea    0x15ac6(%rip),%rdi        # 3d7d0 <_ZTSSt11logic_error+0x30>
   27d0a:	e8 86 37 fe ff       	callq  b495 <__assert>
   27d0f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   27d16:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   27d1d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   27d24:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   27d2b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   27d32:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   27d39:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   27d40:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   27d47:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   27d4e:	0f b6 00             	movzbl (%rax),%eax
   27d51:	0f b6 c0             	movzbl %al,%eax
   27d54:	83 e0 01             	and    $0x1,%eax
   27d57:	85 c0                	test   %eax,%eax
   27d59:	0f 95 c0             	setne  %al
   27d5c:	84 c0                	test   %al,%al
   27d5e:	74 37                	je     27d97 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xfd>
   27d60:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   27d67:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   27d6e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   27d75:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   27d7c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   27d83:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   27d8a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   27d91:	48 8b 40 08          	mov    0x8(%rax),%rax
   27d95:	eb 3b                	jmp    27dd2 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x138>
   27d97:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   27d9e:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   27da5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   27dac:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   27db3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   27dba:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   27dc1:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   27dc8:	0f b6 00             	movzbl (%rax),%eax
   27dcb:	0f b6 c0             	movzbl %al,%eax
   27dce:	d1 f8                	sar    %eax
   27dd0:	48 98                	cltq   
   27dd2:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   27dd9:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   27de0:	48 3b 85 e0 fe ff ff 	cmp    -0x120(%rbp),%rax
   27de7:	77 0d                	ja     27df6 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x15c>
   27de9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   27df0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   27df4:	75 0f                	jne    27e05 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x16b>
   27df6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   27dfd:	48 89 c7             	mov    %rax,%rdi
   27e00:	e8 19 fd ff ff       	callq  27b1e <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>
   27e05:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   27e0c:	48 2b 85 b0 fe ff ff 	sub    -0x150(%rbp),%rax
   27e13:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   27e1a:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
   27e21:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   27e28:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
   27e2f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   27e36:	44 88 a5 cb fe ff ff 	mov    %r12b,-0x135(%rbp)
   27e3d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   27e44:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   27e4b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   27e52:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   27e59:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   27e60:	48 8b 10             	mov    (%rax),%rdx
   27e63:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   27e6a:	48 8b 00             	mov    (%rax),%rax
   27e6d:	48 39 c2             	cmp    %rax,%rdx
   27e70:	0f 92 c0             	setb   %al
   27e73:	84 c0                	test   %al,%al
   27e75:	74 09                	je     27e80 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x1e6>
   27e77:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   27e7e:	eb 07                	jmp    27e87 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x1ed>
   27e80:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   27e87:	48 8b 00             	mov    (%rax),%rax
   27e8a:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   27e91:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   27e98:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   27e9f:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
   27ea6:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   27ead:	88 9d d8 fe ff ff    	mov    %bl,-0x128(%rbp)
   27eb3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   27eba:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   27ec1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   27ec8:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   27ecf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   27ed6:	48 8b 10             	mov    (%rax),%rdx
   27ed9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   27ee0:	48 8b 00             	mov    (%rax),%rax
   27ee3:	48 39 c2             	cmp    %rax,%rdx
   27ee6:	0f 92 c0             	setb   %al
   27ee9:	84 c0                	test   %al,%al
   27eeb:	74 09                	je     27ef6 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x25c>
   27eed:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   27ef4:	eb 07                	jmp    27efd <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x263>
   27ef6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   27efd:	48 8b 10             	mov    (%rax),%rdx
   27f00:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   27f07:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   27f0e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   27f15:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   27f19:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   27f1d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   27f21:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27f25:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   27f29:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27f2d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   27f31:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   27f35:	0f b6 00             	movzbl (%rax),%eax
   27f38:	0f b6 c0             	movzbl %al,%eax
   27f3b:	83 e0 01             	and    $0x1,%eax
   27f3e:	85 c0                	test   %eax,%eax
   27f40:	0f 95 c0             	setne  %al
   27f43:	84 c0                	test   %al,%al
   27f45:	74 22                	je     27f69 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x2cf>
   27f47:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   27f4b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   27f4f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   27f53:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   27f57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   27f5b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   27f5f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   27f63:	48 8b 40 10          	mov    0x10(%rax),%rax
   27f67:	eb 30                	jmp    27f99 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x2ff>
   27f69:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   27f6d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   27f71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   27f75:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   27f79:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   27f7d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   27f81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   27f85:	48 83 c0 01          	add    $0x1,%rax
   27f89:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   27f8d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27f91:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   27f95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27f99:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   27f9d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   27fa1:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   27fa8:	48 01 c1             	add    %rax,%rcx
   27fab:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   27fb2:	48 89 c6             	mov    %rax,%rsi
   27fb5:	48 89 cf             	mov    %rcx,%rdi
   27fb8:	e8 35 fa ff ff       	callq  279f2 <_ZNSt3__111char_traitsIcE7compareEPKcS3_m>
   27fbd:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
   27fc3:	83 bd cc fe ff ff 00 	cmpl   $0x0,-0x134(%rbp)
   27fca:	75 3c                	jne    28008 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x36e>
   27fcc:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   27fd3:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   27fda:	48 39 c2             	cmp    %rax,%rdx
   27fdd:	73 0c                	jae    27feb <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x351>
   27fdf:	c7 85 cc fe ff ff ff 	movl   $0xffffffff,-0x134(%rbp)
   27fe6:	ff ff ff 
   27fe9:	eb 1d                	jmp    28008 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x36e>
   27feb:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   27ff2:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   27ff9:	48 39 c2             	cmp    %rax,%rdx
   27ffc:	76 0a                	jbe    28008 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x36e>
   27ffe:	c7 85 cc fe ff ff 01 	movl   $0x1,-0x134(%rbp)
   28005:	00 00 00 
   28008:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   2800e:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   28012:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   28019:	00 00 
   2801b:	74 05                	je     28022 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x388>
   2801d:	e8 6a 34 fe ff       	callq  b48c <__stack_chk_fail>
   28022:	48 81 c4 60 01 00 00 	add    $0x160,%rsp
   28029:	5b                   	pop    %rbx
   2802a:	41 5c                	pop    %r12
   2802c:	5d                   	pop    %rbp
   2802d:	c3                   	retq   

000000000002802e <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>:
   2802e:	55                   	push   %rbp
   2802f:	48 89 e5             	mov    %rsp,%rbp
   28032:	53                   	push   %rbx
   28033:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   2803a:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
   28041:	48 89 b5 70 fe ff ff 	mov    %rsi,-0x190(%rbp)
   28048:	48 89 95 68 fe ff ff 	mov    %rdx,-0x198(%rbp)
   2804f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28056:	00 00 
   28058:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2805c:	31 c0                	xor    %eax,%eax
   2805e:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   28065:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
   2806c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   28073:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
   2807a:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   28081:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
   28088:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   2808f:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   28096:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   2809d:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
   280a4:	88 8d 86 fe ff ff    	mov    %cl,-0x17a(%rbp)
   280aa:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   280b1:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
   280b8:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
   280bf:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   280c6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   280cd:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   280d4:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   280db:	48 83 e8 10          	sub    $0x10,%rax
   280df:	48 39 85 68 fe ff ff 	cmp    %rax,-0x198(%rbp)
   280e6:	0f 97 c0             	seta   %al
   280e9:	84 c0                	test   %al,%al
   280eb:	74 0f                	je     280fc <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0xce>
   280ed:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   280f4:	48 89 c7             	mov    %rax,%rdi
   280f7:	e8 a6 f9 ff ff       	callq  27aa2 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>
   280fc:	48 83 bd 68 fe ff ff 	cmpq   $0x16,-0x198(%rbp)
   28103:	16 
   28104:	0f 87 a9 00 00 00    	ja     281b3 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x185>
   2810a:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   28111:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   28118:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   2811f:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   28126:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2812d:	89 c2                	mov    %eax,%edx
   2812f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   28136:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   2813d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   28144:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   2814b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   28152:	01 d2                	add    %edx,%edx
   28154:	88 10                	mov    %dl,(%rax)
   28156:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   2815d:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   28164:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   2816b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   28172:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   28179:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   28180:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   28187:	48 83 c0 01          	add    $0x1,%rax
   2818b:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   28192:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   28199:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   281a0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   281a7:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
   281ae:	e9 ce 01 00 00       	jmpq   28381 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x353>
   281b3:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   281ba:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   281be:	48 83 7d d0 16       	cmpq   $0x16,-0x30(%rbp)
   281c3:	76 1e                	jbe    281e3 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x1b5>
   281c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   281c9:	48 83 c0 01          	add    $0x1,%rax
   281cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   281d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   281d5:	48 83 c0 0f          	add    $0xf,%rax
   281d9:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   281dd:	48 83 e8 01          	sub    $0x1,%rax
   281e1:	eb 05                	jmp    281e8 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x1ba>
   281e3:	b8 16 00 00 00       	mov    $0x16,%eax
   281e8:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   281ef:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
   281f6:	48 8d 50 01          	lea    0x1(%rax),%rdx
   281fa:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   28201:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   28205:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   28209:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2820d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   28211:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   28215:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   28219:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   2821d:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   28221:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   28225:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   28229:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2822d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   28231:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   28238:	00 
   28239:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2823d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   28241:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   28248:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   2824c:	0f 97 c0             	seta   %al
   2824f:	84 c0                	test   %al,%al
   28251:	74 2e                	je     28281 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x253>
   28253:	bf 08 00 00 00       	mov    $0x8,%edi
   28258:	e8 72 de ff ff       	callq  260cf <__cxa_allocate_exception>
   2825d:	48 89 c3             	mov    %rax,%rbx
   28260:	48 89 df             	mov    %rbx,%rdi
   28263:	e8 8c ee ff ff       	callq  270f4 <_ZNSt9bad_allocC1Ev>
   28268:	48 8d 05 af ee ff ff 	lea    -0x1151(%rip),%rax        # 2711e <_ZNSt9bad_allocD1Ev>
   2826f:	48 89 c2             	mov    %rax,%rdx
   28272:	48 8d 35 4f ea 01 00 	lea    0x1ea4f(%rip),%rsi        # 46cc8 <_ZTISt9bad_alloc>
   28279:	48 89 df             	mov    %rbx,%rdi
   2827c:	e8 53 e1 ff ff       	callq  263d4 <__cxa_throw>
   28281:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   28285:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   28289:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2828d:	48 89 c7             	mov    %rax,%rdi
   28290:	e8 8f f0 ff ff       	callq  27324 <_Znwm>
   28295:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
   2829c:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   282a3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   282aa:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
   282b1:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   282b8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   282bf:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   282c6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   282cd:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   282d4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   282db:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   282e2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   282e6:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
   282ed:	48 8d 50 01          	lea    0x1(%rax),%rdx
   282f1:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   282f8:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   282ff:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   28306:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   2830d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   28314:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2831b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   28322:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   28329:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   28330:	48 83 ca 01          	or     $0x1,%rdx
   28334:	48 89 10             	mov    %rdx,(%rax)
   28337:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   2833e:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   28345:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   2834c:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   28353:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2835a:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   28361:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   28368:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   2836f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   28376:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   2837d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   28381:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
   28388:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2838c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28390:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
   28397:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
   2839e:	48 89 ce             	mov    %rcx,%rsi
   283a1:	48 89 c7             	mov    %rax,%rdi
   283a4:	e8 84 f6 ff ff       	callq  27a2d <_ZNSt3__111char_traitsIcE4copyEPcPKcm>
   283a9:	c6 85 87 fe ff ff 00 	movb   $0x0,-0x179(%rbp)
   283b0:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
   283b7:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
   283be:	48 01 c2             	add    %rax,%rdx
   283c1:	48 8d 85 87 fe ff ff 	lea    -0x179(%rbp),%rax
   283c8:	48 89 c6             	mov    %rax,%rsi
   283cb:	48 89 d7             	mov    %rdx,%rdi
   283ce:	e8 03 f6 ff ff       	callq  279d6 <_ZNSt3__111char_traitsIcE6assignERcRKc>
   283d3:	90                   	nop
   283d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   283d8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   283df:	00 00 
   283e1:	74 05                	je     283e8 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x3ba>
   283e3:	e8 a4 30 fe ff       	callq  b48c <__stack_chk_fail>
   283e8:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   283ef:	5b                   	pop    %rbx
   283f0:	5d                   	pop    %rbp
   283f1:	c3                   	retq   

00000000000283f2 <mark_as_used>:
   283f2:	55                   	push   %rbp
   283f3:	48 89 e5             	mov    %rsp,%rbp
   283f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   283fa:	90                   	nop
   283fb:	5d                   	pop    %rbp
   283fc:	c3                   	retq   

00000000000283fd <_UIx86_64__sos_alloc>:
   283fd:	55                   	push   %rbp
   283fe:	48 89 e5             	mov    %rsp,%rbp
   28401:	48 83 ec 20          	sub    $0x20,%rsp
   28405:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28409:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2840d:	48 83 c0 0f          	add    $0xf,%rax
   28411:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   28415:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   28419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2841d:	f0 48 0f c1 05 ca 85 	lock xadd %rax,0x285ca(%rip)        # 509f0 <sos_memory_freepos>
   28424:	02 00 
   28426:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2842a:	48 8d 15 bf 45 02 00 	lea    0x245bf(%rip),%rdx        # 4c9f0 <sos_memory>
   28431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28435:	48 01 d0             	add    %rdx,%rax
   28438:	83 e0 0f             	and    $0xf,%eax
   2843b:	48 85 c0             	test   %rax,%rax
   2843e:	74 1f                	je     2845f <_UIx86_64__sos_alloc+0x62>
   28440:	48 8d 0d 99 55 01 00 	lea    0x15599(%rip),%rcx        # 3d9e0 <__PRETTY_FUNCTION__.4888>
   28447:	ba 4d 00 00 00       	mov    $0x4d,%edx
   2844c:	48 8d 35 15 55 01 00 	lea    0x15515(%rip),%rsi        # 3d968 <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__+0x8>
   28453:	48 8d 3d 1e 55 01 00 	lea    0x1551e(%rip),%rdi        # 3d978 <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__+0x18>
   2845a:	e8 90 d0 ff ff       	callq  254ef <__assert_fail>
   2845f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   28463:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28467:	48 01 d0             	add    %rdx,%rax
   2846a:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
   28470:	76 1f                	jbe    28491 <_UIx86_64__sos_alloc+0x94>
   28472:	48 8d 0d 67 55 01 00 	lea    0x15567(%rip),%rcx        # 3d9e0 <__PRETTY_FUNCTION__.4888>
   28479:	ba 4e 00 00 00       	mov    $0x4e,%edx
   2847e:	48 8d 35 e3 54 01 00 	lea    0x154e3(%rip),%rsi        # 3d968 <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__+0x8>
   28485:	48 8d 3d 20 55 01 00 	lea    0x15520(%rip),%rdi        # 3d9ac <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__+0x4c>
   2848c:	e8 5e d0 ff ff       	callq  254ef <__assert_fail>
   28491:	48 8d 15 58 45 02 00 	lea    0x24558(%rip),%rdx        # 4c9f0 <sos_memory>
   28498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2849c:	48 01 d0             	add    %rdx,%rax
   2849f:	c9                   	leaveq 
   284a0:	c3                   	retq   

00000000000284a1 <free_object>:
   284a1:	55                   	push   %rbp
   284a2:	48 89 e5             	mov    %rsp,%rbp
   284a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   284a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   284ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   284b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   284b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   284b9:	48 8b 50 20          	mov    0x20(%rax),%rdx
   284bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   284c1:	48 89 10             	mov    %rdx,(%rax)
   284c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   284c8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   284cc:	48 89 50 20          	mov    %rdx,0x20(%rax)
   284d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   284d4:	8b 40 1c             	mov    0x1c(%rax),%eax
   284d7:	8d 50 01             	lea    0x1(%rax),%edx
   284da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   284de:	89 50 1c             	mov    %edx,0x1c(%rax)
   284e1:	90                   	nop
   284e2:	5d                   	pop    %rbp
   284e3:	c3                   	retq   

00000000000284e4 <add_memory>:
   284e4:	55                   	push   %rbp
   284e5:	48 89 e5             	mov    %rsp,%rbp
   284e8:	48 83 ec 30          	sub    $0x30,%rsp
   284ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   284f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   284f4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   284f8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   284fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28500:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28504:	eb 1b                	jmp    28521 <add_memory+0x3d>
   28506:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2850a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2850e:	48 89 d6             	mov    %rdx,%rsi
   28511:	48 89 c7             	mov    %rax,%rdi
   28514:	e8 88 ff ff ff       	callq  284a1 <free_object>
   28519:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2851d:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   28521:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28525:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
   28529:	48 89 c2             	mov    %rax,%rdx
   2852c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28530:	48 01 d0             	add    %rdx,%rax
   28533:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   28537:	76 cd                	jbe    28506 <add_memory+0x22>
   28539:	90                   	nop
   2853a:	c9                   	leaveq 
   2853b:	c3                   	retq   

000000000002853c <expand>:
   2853c:	55                   	push   %rbp
   2853d:	48 89 e5             	mov    %rsp,%rbp
   28540:	48 83 ec 20          	sub    $0x20,%rsp
   28544:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2854c:	48 8b 40 10          	mov    0x10(%rax),%rax
   28550:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28554:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28558:	48 89 c7             	mov    %rax,%rdi
   2855b:	e8 e8 7e fe ff       	callq  10448 <dlmalloc>
   28560:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28564:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   28569:	75 5a                	jne    285c5 <expand+0x89>
   2856b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2856f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   28573:	48 8b 05 7e 84 02 00 	mov    0x2847e(%rip),%rax        # 509f8 <pg_size>
   2857a:	48 01 d0             	add    %rdx,%rax
   2857d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   28581:	48 8b 05 70 84 02 00 	mov    0x28470(%rip),%rax        # 509f8 <pg_size>
   28588:	48 f7 d8             	neg    %rax
   2858b:	48 21 d0             	and    %rdx,%rax
   2858e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28592:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28596:	48 89 c7             	mov    %rax,%rdi
   28599:	e8 aa 7e fe ff       	callq  10448 <dlmalloc>
   2859e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   285a2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   285a7:	75 1c                	jne    285c5 <expand+0x89>
   285a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   285ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   285b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   285b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   285b9:	48 89 c7             	mov    %rax,%rdi
   285bc:	e8 3c fe ff ff       	callq  283fd <_UIx86_64__sos_alloc>
   285c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   285c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   285c9:	48 8b 48 08          	mov    0x8(%rax),%rcx
   285cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   285d1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   285d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   285d9:	48 89 c7             	mov    %rax,%rdi
   285dc:	e8 03 ff ff ff       	callq  284e4 <add_memory>
   285e1:	90                   	nop
   285e2:	c9                   	leaveq 
   285e3:	c3                   	retq   

00000000000285e4 <_UIx86_64__mempool_init>:
   285e4:	55                   	push   %rbp
   285e5:	48 89 e5             	mov    %rsp,%rbp
   285e8:	48 83 ec 20          	sub    $0x20,%rsp
   285ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   285f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   285f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   285f8:	48 8b 05 f9 83 02 00 	mov    0x283f9(%rip),%rax        # 509f8 <pg_size>
   285ff:	48 85 c0             	test   %rax,%rax
   28602:	75 0e                	jne    28612 <_UIx86_64__mempool_init+0x2e>
   28604:	e8 79 20 01 00       	callq  3a682 <getpagesize>
   28609:	48 98                	cltq   
   2860b:	48 89 05 e6 83 02 00 	mov    %rax,0x283e6(%rip)        # 509f8 <pg_size>
   28612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28616:	ba 28 00 00 00       	mov    $0x28,%edx
   2861b:	be 00 00 00 00       	mov    $0x0,%esi
   28620:	48 89 c7             	mov    %rax,%rdi
   28623:	e8 0d b1 fe ff       	callq  13735 <memset>
   28628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2862c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   28632:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28636:	48 83 c0 0f          	add    $0xf,%rax
   2863a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   2863e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28642:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   28647:	75 27                	jne    28670 <_UIx86_64__mempool_init+0x8c>
   28649:	48 8b 05 a8 83 02 00 	mov    0x283a8(%rip),%rax        # 509f8 <pg_size>
   28650:	ba 00 00 00 00       	mov    $0x0,%edx
   28655:	48 f7 75 f0          	divq   -0x10(%rbp)
   28659:	48 c1 e8 02          	shr    $0x2,%rax
   2865d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   28661:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   28666:	75 08                	jne    28670 <_UIx86_64__mempool_init+0x8c>
   28668:	48 c7 45 e8 10 00 00 	movq   $0x10,-0x18(%rbp)
   2866f:	00 
   28670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28674:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   28678:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2867c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28680:	89 c2                	mov    %eax,%edx
   28682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28686:	89 50 18             	mov    %edx,0x18(%rax)
   28689:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2868d:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
   28692:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   28696:	48 8b 05 5b 83 02 00 	mov    0x2835b(%rip),%rax        # 509f8 <pg_size>
   2869d:	48 01 d0             	add    %rdx,%rax
   286a0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   286a4:	48 8b 05 4d 83 02 00 	mov    0x2834d(%rip),%rax        # 509f8 <pg_size>
   286ab:	48 f7 d8             	neg    %rax
   286ae:	48 21 c2             	and    %rax,%rdx
   286b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   286b5:	48 89 50 10          	mov    %rdx,0x10(%rax)
   286b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   286bd:	48 89 c7             	mov    %rax,%rdi
   286c0:	e8 77 fe ff ff       	callq  2853c <expand>
   286c5:	90                   	nop
   286c6:	c9                   	leaveq 
   286c7:	c3                   	retq   

00000000000286c8 <_UIx86_64__mempool_alloc>:
   286c8:	55                   	push   %rbp
   286c9:	48 89 e5             	mov    %rsp,%rbp
   286cc:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   286d3:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   286da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   286e1:	00 00 
   286e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   286e7:	31 c0                	xor    %eax,%eax
   286e9:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   286f0:	48 89 c7             	mov    %rax,%rdi
   286f3:	e8 fa fc ff ff       	callq  283f2 <mark_as_used>
   286f8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   286ff:	48 89 c7             	mov    %rax,%rdi
   28702:	e8 ea b4 fe ff       	callq  13bf1 <sgx_spin_lock>
   28707:	85 c0                	test   %eax,%eax
   28709:	74 05                	je     28710 <_UIx86_64__mempool_alloc+0x48>
   2870b:	e8 c9 2e 01 00       	callq  3b5d9 <abort>
   28710:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   28717:	8b 50 1c             	mov    0x1c(%rax),%edx
   2871a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   28721:	8b 40 18             	mov    0x18(%rax),%eax
   28724:	39 c2                	cmp    %eax,%edx
   28726:	77 0f                	ja     28737 <_UIx86_64__mempool_alloc+0x6f>
   28728:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   2872f:	48 89 c7             	mov    %rax,%rdi
   28732:	e8 05 fe ff ff       	callq  2853c <expand>
   28737:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   2873e:	8b 40 1c             	mov    0x1c(%rax),%eax
   28741:	85 c0                	test   %eax,%eax
   28743:	75 1f                	jne    28764 <_UIx86_64__mempool_alloc+0x9c>
   28745:	48 8d 0d b4 52 01 00 	lea    0x152b4(%rip),%rcx        # 3da00 <__PRETTY_FUNCTION__.4919>
   2874c:	ba a4 00 00 00       	mov    $0xa4,%edx
   28751:	48 8d 35 10 52 01 00 	lea    0x15210(%rip),%rsi        # 3d968 <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__+0x8>
   28758:	48 8d 3d 6b 52 01 00 	lea    0x1526b(%rip),%rdi        # 3d9ca <_ZZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcmE8__func__+0x6a>
   2875f:	e8 8b cd ff ff       	callq  254ef <__assert_fail>
   28764:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   2876b:	8b 40 1c             	mov    0x1c(%rax),%eax
   2876e:	8d 50 ff             	lea    -0x1(%rax),%edx
   28771:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   28778:	89 50 1c             	mov    %edx,0x1c(%rax)
   2877b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   28782:	48 8b 40 20          	mov    0x20(%rax),%rax
   28786:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   2878d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   28794:	48 8b 10             	mov    (%rax),%rdx
   28797:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   2879e:	48 89 50 20          	mov    %rdx,0x20(%rax)
   287a2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   287a9:	48 89 c7             	mov    %rax,%rdi
   287ac:	e8 a7 b4 fe ff       	callq  13c58 <sgx_spin_unlock>
   287b1:	85 c0                	test   %eax,%eax
   287b3:	74 05                	je     287ba <_UIx86_64__mempool_alloc+0xf2>
   287b5:	e8 1f 2e 01 00       	callq  3b5d9 <abort>
   287ba:	bf 00 00 00 00       	mov    $0x0,%edi
   287bf:	e8 2e fc ff ff       	callq  283f2 <mark_as_used>
   287c4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   287cb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   287cf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   287d6:	00 00 
   287d8:	74 05                	je     287df <_UIx86_64__mempool_alloc+0x117>
   287da:	e8 ad 2c fe ff       	callq  b48c <__stack_chk_fail>
   287df:	c9                   	leaveq 
   287e0:	c3                   	retq   

00000000000287e1 <_UIx86_64__mempool_free>:
   287e1:	55                   	push   %rbp
   287e2:	48 89 e5             	mov    %rsp,%rbp
   287e5:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   287ec:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   287f3:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   287fa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28801:	00 00 
   28803:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28807:	31 c0                	xor    %eax,%eax
   28809:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   28810:	48 89 c7             	mov    %rax,%rdi
   28813:	e8 da fb ff ff       	callq  283f2 <mark_as_used>
   28818:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2881f:	48 89 c7             	mov    %rax,%rdi
   28822:	e8 ca b3 fe ff       	callq  13bf1 <sgx_spin_lock>
   28827:	85 c0                	test   %eax,%eax
   28829:	74 05                	je     28830 <_UIx86_64__mempool_free+0x4f>
   2882b:	e8 a9 2d 01 00       	callq  3b5d9 <abort>
   28830:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   28837:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2883e:	48 89 d6             	mov    %rdx,%rsi
   28841:	48 89 c7             	mov    %rax,%rdi
   28844:	e8 58 fc ff ff       	callq  284a1 <free_object>
   28849:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   28850:	48 89 c7             	mov    %rax,%rdi
   28853:	e8 00 b4 fe ff       	callq  13c58 <sgx_spin_unlock>
   28858:	85 c0                	test   %eax,%eax
   2885a:	74 05                	je     28861 <_UIx86_64__mempool_free+0x80>
   2885c:	e8 78 2d 01 00       	callq  3b5d9 <abort>
   28861:	bf 00 00 00 00       	mov    $0x0,%edi
   28866:	e8 87 fb ff ff       	callq  283f2 <mark_as_used>
   2886b:	90                   	nop
   2886c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28870:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   28877:	00 00 
   28879:	74 05                	je     28880 <_UIx86_64__mempool_free+0x9f>
   2887b:	e8 0c 2c fe ff       	callq  b48c <__stack_chk_fail>
   28880:	c9                   	leaveq 
   28881:	c3                   	retq   

0000000000028882 <_Ux86_64_is_fpreg>:
   28882:	55                   	push   %rbp
   28883:	48 89 e5             	mov    %rsp,%rbp
   28886:	89 7d fc             	mov    %edi,-0x4(%rbp)
   28889:	b8 00 00 00 00       	mov    $0x0,%eax
   2888e:	5d                   	pop    %rbp
   2888f:	c3                   	retq   

0000000000028890 <_ULx86_64_fetch_frame>:
   28890:	55                   	push   %rbp
   28891:	48 89 e5             	mov    %rsp,%rbp
   28894:	48 83 ec 30          	sub    $0x30,%rsp
   28898:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2889c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   288a0:	89 55 dc             	mov    %edx,-0x24(%rbp)
   288a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   288a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   288ab:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   288af:	74 31                	je     288e2 <_ULx86_64_fetch_frame+0x52>
   288b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   288b5:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   288bc:	83 e0 04             	and    $0x4,%eax
   288bf:	84 c0                	test   %al,%al
   288c1:	75 1f                	jne    288e2 <_ULx86_64_fetch_frame+0x52>
   288c3:	48 8d 0d 06 52 01 00 	lea    0x15206(%rip),%rcx        # 3dad0 <__PRETTY_FUNCTION__.4902>
   288ca:	ba 25 00 00 00       	mov    $0x25,%edx
   288cf:	48 8d 35 4a 51 01 00 	lea    0x1514a(%rip),%rsi        # 3da20 <__PRETTY_FUNCTION__.4919+0x20>
   288d6:	48 8d 3d 5b 51 01 00 	lea    0x1515b(%rip),%rdi        # 3da38 <__PRETTY_FUNCTION__.4919+0x38>
   288dd:	e8 0d cc ff ff       	callq  254ef <__assert_fail>
   288e2:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   288e6:	74 2f                	je     28917 <_ULx86_64_fetch_frame+0x87>
   288e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   288ec:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   288f3:	48 85 c0             	test   %rax,%rax
   288f6:	75 1f                	jne    28917 <_ULx86_64_fetch_frame+0x87>
   288f8:	48 8d 0d d1 51 01 00 	lea    0x151d1(%rip),%rcx        # 3dad0 <__PRETTY_FUNCTION__.4902>
   288ff:	ba 26 00 00 00       	mov    $0x26,%edx
   28904:	48 8d 35 15 51 01 00 	lea    0x15115(%rip),%rsi        # 3da20 <__PRETTY_FUNCTION__.4919+0x20>
   2890b:	48 8d 3d 4e 51 01 00 	lea    0x1514e(%rip),%rdi        # 3da60 <__PRETTY_FUNCTION__.4919+0x60>
   28912:	e8 d8 cb ff ff       	callq  254ef <__assert_fail>
   28917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2891b:	0f b6 80 50 01 00 00 	movzbl 0x150(%rax),%eax
   28922:	83 e0 04             	and    $0x4,%eax
   28925:	84 c0                	test   %al,%al
   28927:	74 36                	je     2895f <_ULx86_64_fetch_frame+0xcf>
   28929:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2892d:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   28934:	48 85 c0             	test   %rax,%rax
   28937:	74 26                	je     2895f <_ULx86_64_fetch_frame+0xcf>
   28939:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2893d:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   28944:	0f b6 40 46          	movzbl 0x46(%rax),%eax
   28948:	83 e0 04             	and    $0x4,%eax
   2894b:	84 c0                	test   %al,%al
   2894d:	74 10                	je     2895f <_ULx86_64_fetch_frame+0xcf>
   2894f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28953:	c7 80 b8 01 00 00 01 	movl   $0x1,0x1b8(%rax)
   2895a:	00 00 00 
   2895d:	eb 0e                	jmp    2896d <_ULx86_64_fetch_frame+0xdd>
   2895f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28963:	c7 80 b8 01 00 00 00 	movl   $0x0,0x1b8(%rax)
   2896a:	00 00 00 
   2896d:	90                   	nop
   2896e:	c9                   	leaveq 
   2896f:	c3                   	retq   

0000000000028970 <_ULx86_64_cache_frame>:
   28970:	55                   	push   %rbp
   28971:	48 89 e5             	mov    %rsp,%rbp
   28974:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28978:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2897c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28984:	8b 80 b8 01 00 00    	mov    0x1b8(%rax),%eax
   2898a:	5d                   	pop    %rbp
   2898b:	c3                   	retq   

000000000002898c <_ULx86_64_reuse_frame>:
   2898c:	55                   	push   %rbp
   2898d:	48 89 e5             	mov    %rsp,%rbp
   28990:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28994:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   28997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2899b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2899f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   289a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   289a6:	89 90 b8 01 00 00    	mov    %edx,0x1b8(%rax)
   289ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   289b0:	8b 80 b8 01 00 00    	mov    0x1b8(%rax),%eax
   289b6:	83 f8 01             	cmp    $0x1,%eax
   289b9:	75 46                	jne    28a01 <_ULx86_64_reuse_frame+0x75>
   289bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   289bf:	0f b6 90 b0 01 00 00 	movzbl 0x1b0(%rax),%edx
   289c6:	83 ca 07             	or     $0x7,%edx
   289c9:	88 90 b0 01 00 00    	mov    %dl,0x1b0(%rax)
   289cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   289d3:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   289da:	48 ba 1f 00 00 00 fc 	movabs $0xfffffffc0000001f,%rdx
   289e1:	ff ff ff 
   289e4:	48 21 ca             	and    %rcx,%rdx
   289e7:	48 89 90 b0 01 00 00 	mov    %rdx,0x1b0(%rax)
   289ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   289f2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   289f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   289fa:	48 89 90 c0 01 00 00 	mov    %rdx,0x1c0(%rax)
   28a01:	90                   	nop
   28a02:	5d                   	pop    %rbp
   28a03:	c3                   	retq   

0000000000028a04 <_ULx86_64_is_signal_frame>:
   28a04:	55                   	push   %rbp
   28a05:	48 89 e5             	mov    %rsp,%rbp
   28a08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28a10:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28a18:	8b 80 b8 01 00 00    	mov    0x1b8(%rax),%eax
   28a1e:	85 c0                	test   %eax,%eax
   28a20:	0f 95 c0             	setne  %al
   28a23:	0f b6 c0             	movzbl %al,%eax
   28a26:	5d                   	pop    %rbp
   28a27:	c3                   	retq   

0000000000028a28 <_ULx86_64_handle_signal_frame>:
   28a28:	55                   	push   %rbp
   28a29:	48 89 e5             	mov    %rsp,%rbp
   28a2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28a30:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   28a35:	5d                   	pop    %rbp
   28a36:	c3                   	retq   

0000000000028a37 <_ULx86_64_r_uc_addr>:
   28a37:	55                   	push   %rbp
   28a38:	48 89 e5             	mov    %rsp,%rbp
   28a3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28a3f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   28a42:	83 7d e4 10          	cmpl   $0x10,-0x1c(%rbp)
   28a46:	0f 87 37 01 00 00    	ja     28b83 <_ULx86_64_r_uc_addr+0x14c>
   28a4c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   28a4f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   28a56:	00 
   28a57:	48 8d 05 2e 50 01 00 	lea    0x1502e(%rip),%rax        # 3da8c <__PRETTY_FUNCTION__.4919+0x8c>
   28a5e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   28a61:	48 63 d0             	movslq %eax,%rdx
   28a64:	48 8d 05 21 50 01 00 	lea    0x15021(%rip),%rax        # 3da8c <__PRETTY_FUNCTION__.4919+0x8c>
   28a6b:	48 01 d0             	add    %rdx,%rax
   28a6e:	ff e0                	jmpq   *%rax
   28a70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28a74:	48 83 c0 28          	add    $0x28,%rax
   28a78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28a7c:	e9 0a 01 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28a81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28a85:	48 83 c0 30          	add    $0x30,%rax
   28a89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28a8d:	e9 f9 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28a96:	48 83 c0 38          	add    $0x38,%rax
   28a9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28a9e:	e9 e8 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28aa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28aa7:	48 83 c0 40          	add    $0x40,%rax
   28aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28aaf:	e9 d7 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28ab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28ab8:	48 83 c0 48          	add    $0x48,%rax
   28abc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28ac0:	e9 c6 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28ac5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28ac9:	48 83 c0 50          	add    $0x50,%rax
   28acd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28ad1:	e9 b5 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28ada:	48 83 c0 58          	add    $0x58,%rax
   28ade:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28ae2:	e9 a4 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28ae7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28aeb:	48 83 c0 60          	add    $0x60,%rax
   28aef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28af3:	e9 93 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28afc:	48 83 c0 68          	add    $0x68,%rax
   28b00:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b04:	e9 82 00 00 00       	jmpq   28b8b <_ULx86_64_r_uc_addr+0x154>
   28b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b0d:	48 83 c0 70          	add    $0x70,%rax
   28b11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b15:	eb 74                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b1b:	48 83 c0 78          	add    $0x78,%rax
   28b1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b23:	eb 66                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b29:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   28b2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b31:	eb 58                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b37:	48 05 88 00 00 00    	add    $0x88,%rax
   28b3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b41:	eb 48                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b47:	48 05 90 00 00 00    	add    $0x90,%rax
   28b4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b51:	eb 38                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b57:	48 05 98 00 00 00    	add    $0x98,%rax
   28b5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b61:	eb 28                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b67:	48 05 a0 00 00 00    	add    $0xa0,%rax
   28b6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b71:	eb 18                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28b77:	48 05 a8 00 00 00    	add    $0xa8,%rax
   28b7d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28b81:	eb 08                	jmp    28b8b <_ULx86_64_r_uc_addr+0x154>
   28b83:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   28b8a:	00 
   28b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28b8f:	5d                   	pop    %rbp
   28b90:	c3                   	retq   

0000000000028b91 <_ULx86_64_sigreturn>:
   28b91:	55                   	push   %rbp
   28b92:	48 89 e5             	mov    %rsp,%rbp
   28b95:	48 83 ec 30          	sub    $0x30,%rsp
   28b99:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   28b9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28ba1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   28ba5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28ba9:	48 8b 80 c0 01 00 00 	mov    0x1c0(%rax),%rax
   28bb0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28bb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28bb8:	48 83 c0 28          	add    $0x28,%rax
   28bbc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28bc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28bc4:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   28bcb:	48 8d 48 28          	lea    0x28(%rax),%rcx
   28bcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28bd3:	ba 88 00 00 00       	mov    $0x88,%edx
   28bd8:	48 89 ce             	mov    %rcx,%rsi
   28bdb:	48 89 c7             	mov    %rax,%rdi
   28bde:	e8 e4 aa fe ff       	callq  136c7 <memcpy>
   28be3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28be7:	48 89 c4             	mov    %rax,%rsp
   28bea:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
   28bf1:	0f 05                	syscall 
   28bf3:	e8 e1 29 01 00       	callq  3b5d9 <abort>

0000000000028bf8 <local_find_proc_info>:
   28bf8:	55                   	push   %rbp
   28bf9:	48 89 e5             	mov    %rsp,%rbp
   28bfc:	48 83 ec 40          	sub    $0x40,%rsp
   28c00:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28c04:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   28c08:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   28c0c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   28c0f:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   28c13:	e8 c3 4b 00 00       	callq  2d7db <_U_dyn_info_list_addr>
   28c18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28c20:	48 8b 40 08          	mov    0x8(%rax),%rax
   28c24:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28c28:	eb 4e                	jmp    28c78 <local_find_proc_info+0x80>
   28c2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28c2e:	48 8b 40 10          	mov    0x10(%rax),%rax
   28c32:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   28c36:	72 35                	jb     28c6d <local_find_proc_info+0x75>
   28c38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28c3c:	48 8b 40 18          	mov    0x18(%rax),%rax
   28c40:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   28c44:	73 27                	jae    28c6d <local_find_proc_info+0x75>
   28c46:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
   28c4a:	8b 7d d4             	mov    -0x2c(%rbp),%edi
   28c4d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   28c51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   28c55:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   28c59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28c5d:	4d 89 c1             	mov    %r8,%r9
   28c60:	41 89 f8             	mov    %edi,%r8d
   28c63:	48 89 c7             	mov    %rax,%rdi
   28c66:	e8 7d 4b 00 00       	callq  2d7e8 <_ULx86_64_Iextract_dynamic_proc_info>
   28c6b:	eb 17                	jmp    28c84 <local_find_proc_info+0x8c>
   28c6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28c71:	48 8b 00             	mov    (%rax),%rax
   28c74:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28c78:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   28c7d:	75 ab                	jne    28c2a <local_find_proc_info+0x32>
   28c7f:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   28c84:	c9                   	leaveq 
   28c85:	c3                   	retq   

0000000000028c86 <remote_find_proc_info>:
   28c86:	55                   	push   %rbp
   28c87:	48 89 e5             	mov    %rsp,%rbp
   28c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28c8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   28c92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   28c96:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   28c99:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   28c9d:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   28ca2:	5d                   	pop    %rbp
   28ca3:	c3                   	retq   

0000000000028ca4 <_ULx86_64_Ifind_dynamic_proc_info>:
   28ca4:	55                   	push   %rbp
   28ca5:	48 89 e5             	mov    %rsp,%rbp
   28ca8:	48 83 ec 30          	sub    $0x30,%rsp
   28cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28cb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   28cb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   28cb8:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   28cbb:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   28cbf:	48 8b 05 7a e5 01 00 	mov    0x1e57a(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   28cc6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   28cca:	75 20                	jne    28cec <_ULx86_64_Ifind_dynamic_proc_info+0x48>
   28ccc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
   28cd0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   28cd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   28cd7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   28cdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28cdf:	49 89 f8             	mov    %rdi,%r8
   28ce2:	48 89 c7             	mov    %rax,%rdi
   28ce5:	e8 0e ff ff ff       	callq  28bf8 <local_find_proc_info>
   28cea:	eb 1e                	jmp    28d0a <_ULx86_64_Ifind_dynamic_proc_info+0x66>
   28cec:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
   28cf0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   28cf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   28cf7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   28cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28cff:	49 89 f8             	mov    %rdi,%r8
   28d02:	48 89 c7             	mov    %rax,%rdi
   28d05:	e8 7c ff ff ff       	callq  28c86 <remote_find_proc_info>
   28d0a:	c9                   	leaveq 
   28d0b:	c3                   	retq   

0000000000028d0c <_Ux86_64_get_accessors>:
   28d0c:	55                   	push   %rbp
   28d0d:	48 89 e5             	mov    %rsp,%rbp
   28d10:	48 83 ec 10          	sub    $0x10,%rsp
   28d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28d18:	8b 05 0a e6 02 00    	mov    0x2e60a(%rip),%eax        # 57328 <_ULx86_64_init_done>
   28d1e:	85 c0                	test   %eax,%eax
   28d20:	75 05                	jne    28d27 <_Ux86_64_get_accessors+0x1b>
   28d22:	e8 6f 07 00 00       	callq  29496 <_ULx86_64_init>
   28d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28d2b:	c9                   	leaveq 
   28d2c:	c3                   	retq   

0000000000028d2d <_ULx86_64_Iput_dynamic_unwind_info>:
   28d2d:	55                   	push   %rbp
   28d2e:	48 89 e5             	mov    %rsp,%rbp
   28d31:	48 83 ec 20          	sub    $0x20,%rsp
   28d35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28d39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   28d3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   28d41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28d45:	8b 40 30             	mov    0x30(%rax),%eax
   28d48:	85 c0                	test   %eax,%eax
   28d4a:	74 22                	je     28d6e <_ULx86_64_Iput_dynamic_unwind_info+0x41>
   28d4c:	85 c0                	test   %eax,%eax
   28d4e:	78 21                	js     28d71 <_ULx86_64_Iput_dynamic_unwind_info+0x44>
   28d50:	83 f8 02             	cmp    $0x2,%eax
   28d53:	7f 1c                	jg     28d71 <_ULx86_64_Iput_dynamic_unwind_info+0x44>
   28d55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   28d59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   28d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28d61:	48 89 ce             	mov    %rcx,%rsi
   28d64:	48 89 c7             	mov    %rax,%rdi
   28d67:	e8 68 47 00 00       	callq  2d4d4 <_ULx86_64_dwarf_put_unwind_info>
   28d6c:	eb 04                	jmp    28d72 <_ULx86_64_Iput_dynamic_unwind_info+0x45>
   28d6e:	90                   	nop
   28d6f:	eb 01                	jmp    28d72 <_ULx86_64_Iput_dynamic_unwind_info+0x45>
   28d71:	90                   	nop
   28d72:	90                   	nop
   28d73:	c9                   	leaveq 
   28d74:	c3                   	retq   

0000000000028d75 <_ULx86_64_get_reg>:
   28d75:	55                   	push   %rbp
   28d76:	48 89 e5             	mov    %rsp,%rbp
   28d79:	48 83 ec 30          	sub    $0x30,%rsp
   28d7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28d81:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   28d84:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   28d88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28d8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28d90:	83 7d e4 10          	cmpl   $0x10,-0x1c(%rbp)
   28d94:	75 16                	jne    28dac <_ULx86_64_get_reg+0x37>
   28d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28d9a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   28d9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28da2:	48 89 10             	mov    %rdx,(%rax)
   28da5:	b8 00 00 00 00       	mov    $0x0,%eax
   28daa:	eb 18                	jmp    28dc4 <_ULx86_64_get_reg+0x4f>
   28dac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   28db0:	8b 75 e4             	mov    -0x1c(%rbp),%esi
   28db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28db7:	b9 00 00 00 00       	mov    $0x0,%ecx
   28dbc:	48 89 c7             	mov    %rax,%rdi
   28dbf:	e8 f5 0d 00 00       	callq  29bb9 <_ULx86_64_access_reg>
   28dc4:	c9                   	leaveq 
   28dc5:	c3                   	retq   

0000000000028dc6 <_Unwind_Backtrace>:
   28dc6:	55                   	push   %rbp
   28dc7:	48 89 e5             	mov    %rsp,%rbp
   28dca:	48 81 ec e0 07 00 00 	sub    $0x7e0,%rsp
   28dd1:	48 89 bd 28 f8 ff ff 	mov    %rdi,-0x7d8(%rbp)
   28dd8:	48 89 b5 20 f8 ff ff 	mov    %rsi,-0x7e0(%rbp)
   28ddf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28de6:	00 00 
   28de8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28dec:	31 c0                	xor    %eax,%eax
   28dee:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   28df5:	48 8d 85 40 f8 ff ff 	lea    -0x7c0(%rbp),%rax
   28dfc:	48 89 c7             	mov    %rax,%rdi
   28dff:	e8 70 91 ff ff       	callq  21f74 <_Ux86_64_getcontext>
   28e04:	85 c0                	test   %eax,%eax
   28e06:	78 1d                	js     28e25 <_Unwind_Backtrace+0x5f>
   28e08:	48 8d 95 40 f8 ff ff 	lea    -0x7c0(%rbp),%rdx
   28e0f:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   28e16:	48 89 d6             	mov    %rdx,%rsi
   28e19:	48 89 c7             	mov    %rax,%rdi
   28e1c:	e8 21 87 ff ff       	callq  21542 <_ULx86_64_init_local>
   28e21:	85 c0                	test   %eax,%eax
   28e23:	79 07                	jns    28e2c <_Unwind_Backtrace+0x66>
   28e25:	b8 03 00 00 00       	mov    $0x3,%eax
   28e2a:	eb 5b                	jmp    28e87 <_Unwind_Backtrace+0xc1>
   28e2c:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   28e33:	48 89 c7             	mov    %rax,%rdi
   28e36:	e8 18 8c ff ff       	callq  21a53 <_ULx86_64_step>
   28e3b:	89 85 3c f8 ff ff    	mov    %eax,-0x7c4(%rbp)
   28e41:	83 bd 3c f8 ff ff 00 	cmpl   $0x0,-0x7c4(%rbp)
   28e48:	7f 17                	jg     28e61 <_Unwind_Backtrace+0x9b>
   28e4a:	83 bd 3c f8 ff ff 00 	cmpl   $0x0,-0x7c4(%rbp)
   28e51:	75 07                	jne    28e5a <_Unwind_Backtrace+0x94>
   28e53:	b8 05 00 00 00       	mov    $0x5,%eax
   28e58:	eb 2d                	jmp    28e87 <_Unwind_Backtrace+0xc1>
   28e5a:	b8 03 00 00 00       	mov    $0x3,%eax
   28e5f:	eb 26                	jmp    28e87 <_Unwind_Backtrace+0xc1>
   28e61:	48 8b 8d 20 f8 ff ff 	mov    -0x7e0(%rbp),%rcx
   28e68:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   28e6f:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
   28e76:	48 89 ce             	mov    %rcx,%rsi
   28e79:	48 89 d7             	mov    %rdx,%rdi
   28e7c:	ff d0                	callq  *%rax
   28e7e:	85 c0                	test   %eax,%eax
   28e80:	74 aa                	je     28e2c <_Unwind_Backtrace+0x66>
   28e82:	b8 03 00 00 00       	mov    $0x3,%eax
   28e87:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   28e8b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   28e92:	00 00 
   28e94:	74 05                	je     28e9b <_Unwind_Backtrace+0xd5>
   28e96:	e8 f1 25 fe ff       	callq  b48c <__stack_chk_fail>
   28e9b:	c9                   	leaveq 
   28e9c:	c3                   	retq   

0000000000028e9d <_Unwind_GetDataRelBase>:
   28e9d:	55                   	push   %rbp
   28e9e:	48 89 e5             	mov    %rsp,%rbp
   28ea1:	48 83 ec 60          	sub    $0x60,%rsp
   28ea5:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   28ea9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28eb0:	00 00 
   28eb2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28eb6:	31 c0                	xor    %eax,%eax
   28eb8:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   28ebf:	00 
   28ec0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28ec4:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   28ec8:	48 89 d6             	mov    %rdx,%rsi
   28ecb:	48 89 c7             	mov    %rax,%rdi
   28ece:	e8 99 86 ff ff       	callq  2156c <_ULx86_64_get_proc_info>
   28ed3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   28ed7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   28edb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   28ee2:	00 00 
   28ee4:	74 05                	je     28eeb <_Unwind_GetDataRelBase+0x4e>
   28ee6:	e8 a1 25 fe ff       	callq  b48c <__stack_chk_fail>
   28eeb:	c9                   	leaveq 
   28eec:	c3                   	retq   

0000000000028eed <_Unwind_GetIP>:
   28eed:	55                   	push   %rbp
   28eee:	48 89 e5             	mov    %rsp,%rbp
   28ef1:	48 83 ec 20          	sub    $0x20,%rsp
   28ef5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28ef9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28f00:	00 00 
   28f02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28f06:	31 c0                	xor    %eax,%eax
   28f08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28f0c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   28f10:	be 10 00 00 00       	mov    $0x10,%esi
   28f15:	48 89 c7             	mov    %rax,%rdi
   28f18:	e8 58 fe ff ff       	callq  28d75 <_ULx86_64_get_reg>
   28f1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28f21:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   28f25:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   28f2c:	00 00 
   28f2e:	74 05                	je     28f35 <_Unwind_GetIP+0x48>
   28f30:	e8 57 25 fe ff       	callq  b48c <__stack_chk_fail>
   28f35:	c9                   	leaveq 
   28f36:	c3                   	retq   

0000000000028f37 <_Unwind_GetLanguageSpecificData>:
   28f37:	55                   	push   %rbp
   28f38:	48 89 e5             	mov    %rsp,%rbp
   28f3b:	48 83 ec 60          	sub    $0x60,%rsp
   28f3f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   28f43:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28f4a:	00 00 
   28f4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28f50:	31 c0                	xor    %eax,%eax
   28f52:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   28f59:	00 
   28f5a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28f5e:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   28f62:	48 89 d6             	mov    %rdx,%rsi
   28f65:	48 89 c7             	mov    %rax,%rdi
   28f68:	e8 ff 85 ff ff       	callq  2156c <_ULx86_64_get_proc_info>
   28f6d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   28f71:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   28f75:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   28f7c:	00 00 
   28f7e:	74 05                	je     28f85 <_Unwind_GetLanguageSpecificData+0x4e>
   28f80:	e8 07 25 fe ff       	callq  b48c <__stack_chk_fail>
   28f85:	c9                   	leaveq 
   28f86:	c3                   	retq   

0000000000028f87 <_Unwind_GetRegionStart>:
   28f87:	55                   	push   %rbp
   28f88:	48 89 e5             	mov    %rsp,%rbp
   28f8b:	48 83 ec 60          	sub    $0x60,%rsp
   28f8f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   28f93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28f9a:	00 00 
   28f9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28fa0:	31 c0                	xor    %eax,%eax
   28fa2:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   28fa9:	00 
   28faa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28fae:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   28fb2:	48 89 d6             	mov    %rdx,%rsi
   28fb5:	48 89 c7             	mov    %rax,%rdi
   28fb8:	e8 af 85 ff ff       	callq  2156c <_ULx86_64_get_proc_info>
   28fbd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   28fc1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   28fc5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   28fcc:	00 00 
   28fce:	74 05                	je     28fd5 <_Unwind_GetRegionStart+0x4e>
   28fd0:	e8 b7 24 fe ff       	callq  b48c <__stack_chk_fail>
   28fd5:	c9                   	leaveq 
   28fd6:	c3                   	retq   

0000000000028fd7 <_Unwind_GetTextRelBase>:
   28fd7:	55                   	push   %rbp
   28fd8:	48 89 e5             	mov    %rsp,%rbp
   28fdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28fdf:	b8 00 00 00 00       	mov    $0x0,%eax
   28fe4:	5d                   	pop    %rbp
   28fe5:	c3                   	retq   

0000000000028fe6 <_Unwind_RaiseException>:
   28fe6:	55                   	push   %rbp
   28fe7:	48 89 e5             	mov    %rsp,%rbp
   28fea:	48 81 ec e0 08 00 00 	sub    $0x8e0,%rsp
   28ff1:	48 89 bd 28 f7 ff ff 	mov    %rdi,-0x8d8(%rbp)
   28ff8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28fff:	00 00 
   29001:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   29005:	31 c0                	xor    %eax,%eax
   29007:	48 8b 85 28 f7 ff ff 	mov    -0x8d8(%rbp),%rax
   2900e:	48 8b 00             	mov    (%rax),%rax
   29011:	48 89 85 60 f7 ff ff 	mov    %rax,-0x8a0(%rbp)
   29018:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   2901f:	48 8d 85 40 f8 ff ff 	lea    -0x7c0(%rbp),%rax
   29026:	48 89 c7             	mov    %rax,%rdi
   29029:	e8 46 8f ff ff       	callq  21f74 <_Ux86_64_getcontext>
   2902e:	85 c0                	test   %eax,%eax
   29030:	78 1d                	js     2904f <_Unwind_RaiseException+0x69>
   29032:	48 8d 95 40 f8 ff ff 	lea    -0x7c0(%rbp),%rdx
   29039:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   29040:	48 89 d6             	mov    %rdx,%rsi
   29043:	48 89 c7             	mov    %rax,%rdi
   29046:	e8 f7 84 ff ff       	callq  21542 <_ULx86_64_init_local>
   2904b:	85 c0                	test   %eax,%eax
   2904d:	79 0a                	jns    29059 <_Unwind_RaiseException+0x73>
   2904f:	b8 03 00 00 00       	mov    $0x3,%eax
   29054:	e9 63 03 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   29059:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   29060:	48 89 c7             	mov    %rax,%rdi
   29063:	e8 eb 89 ff ff       	callq  21a53 <_ULx86_64_step>
   29068:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%rbp)
   2906e:	83 bd 3c f7 ff ff 00 	cmpl   $0x0,-0x8c4(%rbp)
   29075:	7f 1d                	jg     29094 <_Unwind_RaiseException+0xae>
   29077:	83 bd 3c f7 ff ff 00 	cmpl   $0x0,-0x8c4(%rbp)
   2907e:	75 0a                	jne    2908a <_Unwind_RaiseException+0xa4>
   29080:	b8 05 00 00 00       	mov    $0x5,%eax
   29085:	e9 32 03 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   2908a:	b8 03 00 00 00       	mov    $0x3,%eax
   2908f:	e9 28 03 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   29094:	48 8d 95 a0 f7 ff ff 	lea    -0x860(%rbp),%rdx
   2909b:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   290a2:	48 89 d6             	mov    %rdx,%rsi
   290a5:	48 89 c7             	mov    %rax,%rdi
   290a8:	e8 bf 84 ff ff       	callq  2156c <_ULx86_64_get_proc_info>
   290ad:	85 c0                	test   %eax,%eax
   290af:	79 0a                	jns    290bb <_Unwind_RaiseException+0xd5>
   290b1:	b8 03 00 00 00       	mov    $0x3,%eax
   290b6:	e9 01 03 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   290bb:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
   290c2:	48 89 85 68 f7 ff ff 	mov    %rax,-0x898(%rbp)
   290c9:	48 83 bd 68 f7 ff ff 	cmpq   $0x0,-0x898(%rbp)
   290d0:	00 
   290d1:	74 86                	je     29059 <_Unwind_RaiseException+0x73>
   290d3:	48 8d b5 f0 fb ff ff 	lea    -0x410(%rbp),%rsi
   290da:	48 8b 8d 28 f7 ff ff 	mov    -0x8d8(%rbp),%rcx
   290e1:	48 8b 95 60 f7 ff ff 	mov    -0x8a0(%rbp),%rdx
   290e8:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
   290ef:	49 89 f0             	mov    %rsi,%r8
   290f2:	be 01 00 00 00       	mov    $0x1,%esi
   290f7:	bf 01 00 00 00       	mov    $0x1,%edi
   290fc:	ff d0                	callq  *%rax
   290fe:	89 85 40 f7 ff ff    	mov    %eax,-0x8c0(%rbp)
   29104:	83 bd 40 f7 ff ff 08 	cmpl   $0x8,-0x8c0(%rbp)
   2910b:	0f 84 48 ff ff ff    	je     29059 <_Unwind_RaiseException+0x73>
   29111:	83 bd 40 f7 ff ff 06 	cmpl   $0x6,-0x8c0(%rbp)
   29118:	74 0a                	je     29124 <_Unwind_RaiseException+0x13e>
   2911a:	b8 03 00 00 00       	mov    $0x3,%eax
   2911f:	e9 98 02 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   29124:	90                   	nop
   29125:	48 8d 95 50 f7 ff ff 	lea    -0x8b0(%rbp),%rdx
   2912c:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   29133:	be 10 00 00 00       	mov    $0x10,%esi
   29138:	48 89 c7             	mov    %rax,%rdi
   2913b:	e8 35 fc ff ff       	callq  28d75 <_ULx86_64_get_reg>
   29140:	85 c0                	test   %eax,%eax
   29142:	79 0a                	jns    2914e <_Unwind_RaiseException+0x168>
   29144:	b8 03 00 00 00       	mov    $0x3,%eax
   29149:	e9 6e 02 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   2914e:	48 8b 85 28 f7 ff ff 	mov    -0x8d8(%rbp),%rax
   29155:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   2915c:	00 
   2915d:	48 8b 95 50 f7 ff ff 	mov    -0x8b0(%rbp),%rdx
   29164:	48 8b 85 28 f7 ff ff 	mov    -0x8d8(%rbp),%rax
   2916b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2916f:	48 8d 95 40 f8 ff ff 	lea    -0x7c0(%rbp),%rdx
   29176:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   2917d:	48 89 d6             	mov    %rdx,%rsi
   29180:	48 89 c7             	mov    %rax,%rdi
   29183:	e8 ba 83 ff ff       	callq  21542 <_ULx86_64_init_local>
   29188:	85 c0                	test   %eax,%eax
   2918a:	79 0a                	jns    29196 <_Unwind_RaiseException+0x1b0>
   2918c:	b8 03 00 00 00       	mov    $0x3,%eax
   29191:	e9 26 02 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   29196:	48 8b 85 28 f7 ff ff 	mov    -0x8d8(%rbp),%rax
   2919d:	48 89 85 70 f7 ff ff 	mov    %rax,-0x890(%rbp)
   291a4:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   291ab:	48 89 85 78 f7 ff ff 	mov    %rax,-0x888(%rbp)
   291b2:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
   291b9:	48 8b 40 10          	mov    0x10(%rax),%rax
   291bd:	48 89 85 80 f7 ff ff 	mov    %rax,-0x880(%rbp)
   291c4:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
   291cb:	48 8b 00             	mov    (%rax),%rax
   291ce:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
   291d5:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
   291dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   291e0:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
   291e7:	c7 85 44 f7 ff ff 02 	movl   $0x2,-0x8bc(%rbp)
   291ee:	00 00 00 
   291f1:	48 83 bd 80 f7 ff ff 	cmpq   $0x0,-0x880(%rbp)
   291f8:	00 
   291f9:	74 07                	je     29202 <_Unwind_RaiseException+0x21c>
   291fb:	83 8d 44 f7 ff ff 08 	orl    $0x8,-0x8bc(%rbp)
   29202:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   29209:	48 89 c7             	mov    %rax,%rdi
   2920c:	e8 42 88 ff ff       	callq  21a53 <_ULx86_64_step>
   29211:	89 85 48 f7 ff ff    	mov    %eax,-0x8b8(%rbp)
   29217:	83 bd 48 f7 ff ff 00 	cmpl   $0x0,-0x8b8(%rbp)
   2921e:	7f 2d                	jg     2924d <_Unwind_RaiseException+0x267>
   29220:	83 bd 48 f7 ff ff 00 	cmpl   $0x0,-0x8b8(%rbp)
   29227:	75 1a                	jne    29243 <_Unwind_RaiseException+0x25d>
   29229:	83 8d 44 f7 ff ff 10 	orl    $0x10,-0x8bc(%rbp)
   29230:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   29237:	c7 80 f8 03 00 00 01 	movl   $0x1,0x3f8(%rax)
   2923e:	00 00 00 
   29241:	eb 0a                	jmp    2924d <_Unwind_RaiseException+0x267>
   29243:	b8 02 00 00 00       	mov    $0x2,%eax
   29248:	e9 6f 01 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   2924d:	48 83 bd 80 f7 ff ff 	cmpq   $0x0,-0x880(%rbp)
   29254:	00 
   29255:	74 4f                	je     292a6 <_Unwind_RaiseException+0x2c0>
   29257:	4c 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%r8
   2925e:	48 8b bd 78 f7 ff ff 	mov    -0x888(%rbp),%rdi
   29265:	48 8b 8d 70 f7 ff ff 	mov    -0x890(%rbp),%rcx
   2926c:	48 8b 95 88 f7 ff ff 	mov    -0x878(%rbp),%rdx
   29273:	8b b5 44 f7 ff ff    	mov    -0x8bc(%rbp),%esi
   29279:	48 8b 85 80 f7 ff ff 	mov    -0x880(%rbp),%rax
   29280:	4d 89 c1             	mov    %r8,%r9
   29283:	49 89 f8             	mov    %rdi,%r8
   29286:	bf 01 00 00 00       	mov    $0x1,%edi
   2928b:	ff d0                	callq  *%rax
   2928d:	89 85 4c f7 ff ff    	mov    %eax,-0x8b4(%rbp)
   29293:	83 bd 4c f7 ff ff 00 	cmpl   $0x0,-0x8b4(%rbp)
   2929a:	74 0a                	je     292a6 <_Unwind_RaiseException+0x2c0>
   2929c:	b8 02 00 00 00       	mov    $0x2,%eax
   292a1:	e9 16 01 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   292a6:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   292ad:	8b 80 f8 03 00 00    	mov    0x3f8(%rax),%eax
   292b3:	85 c0                	test   %eax,%eax
   292b5:	75 1d                	jne    292d4 <_Unwind_RaiseException+0x2ee>
   292b7:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   292be:	48 8d 95 f0 f7 ff ff 	lea    -0x810(%rbp),%rdx
   292c5:	48 89 d6             	mov    %rdx,%rsi
   292c8:	48 89 c7             	mov    %rax,%rdi
   292cb:	e8 9c 82 ff ff       	callq  2156c <_ULx86_64_get_proc_info>
   292d0:	85 c0                	test   %eax,%eax
   292d2:	79 0a                	jns    292de <_Unwind_RaiseException+0x2f8>
   292d4:	b8 02 00 00 00       	mov    $0x2,%eax
   292d9:	e9 de 00 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   292de:	48 8b 85 08 f8 ff ff 	mov    -0x7f8(%rbp),%rax
   292e5:	48 89 85 98 f7 ff ff 	mov    %rax,-0x868(%rbp)
   292ec:	48 83 bd 98 f7 ff ff 	cmpq   $0x0,-0x868(%rbp)
   292f3:	00 
   292f4:	0f 84 08 ff ff ff    	je     29202 <_Unwind_RaiseException+0x21c>
   292fa:	48 83 bd 80 f7 ff ff 	cmpq   $0x0,-0x880(%rbp)
   29301:	00 
   29302:	75 43                	jne    29347 <_Unwind_RaiseException+0x361>
   29304:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   2930b:	48 8d 95 58 f7 ff ff 	lea    -0x8a8(%rbp),%rdx
   29312:	be 10 00 00 00       	mov    $0x10,%esi
   29317:	48 89 c7             	mov    %rax,%rdi
   2931a:	e8 56 fa ff ff       	callq  28d75 <_ULx86_64_get_reg>
   2931f:	85 c0                	test   %eax,%eax
   29321:	79 0a                	jns    2932d <_Unwind_RaiseException+0x347>
   29323:	b8 02 00 00 00       	mov    $0x2,%eax
   29328:	e9 8f 00 00 00       	jmpq   293bc <_Unwind_RaiseException+0x3d6>
   2932d:	48 8b 95 90 f7 ff ff 	mov    -0x870(%rbp),%rdx
   29334:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
   2933b:	48 39 c2             	cmp    %rax,%rdx
   2933e:	75 07                	jne    29347 <_Unwind_RaiseException+0x361>
   29340:	83 8d 44 f7 ff ff 04 	orl    $0x4,-0x8bc(%rbp)
   29347:	48 8b bd 78 f7 ff ff 	mov    -0x888(%rbp),%rdi
   2934e:	48 8b 8d 70 f7 ff ff 	mov    -0x890(%rbp),%rcx
   29355:	48 8b 95 88 f7 ff ff 	mov    -0x878(%rbp),%rdx
   2935c:	8b b5 44 f7 ff ff    	mov    -0x8bc(%rbp),%esi
   29362:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
   29369:	49 89 f8             	mov    %rdi,%r8
   2936c:	bf 01 00 00 00       	mov    $0x1,%edi
   29371:	ff d0                	callq  *%rax
   29373:	89 85 4c f7 ff ff    	mov    %eax,-0x8b4(%rbp)
   29379:	83 bd 4c f7 ff ff 08 	cmpl   $0x8,-0x8b4(%rbp)
   29380:	74 24                	je     293a6 <_Unwind_RaiseException+0x3c0>
   29382:	83 bd 4c f7 ff ff 07 	cmpl   $0x7,-0x8b4(%rbp)
   29389:	75 14                	jne    2939f <_Unwind_RaiseException+0x3b9>
   2938b:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   29392:	48 89 c7             	mov    %rax,%rdi
   29395:	e8 7e 84 ff ff       	callq  21818 <_ULx86_64_resume>
   2939a:	e8 3a 22 01 00       	callq  3b5d9 <abort>
   2939f:	b8 02 00 00 00       	mov    $0x2,%eax
   293a4:	eb 16                	jmp    293bc <_Unwind_RaiseException+0x3d6>
   293a6:	8b 85 44 f7 ff ff    	mov    -0x8bc(%rbp),%eax
   293ac:	83 e0 04             	and    $0x4,%eax
   293af:	85 c0                	test   %eax,%eax
   293b1:	0f 84 4b fe ff ff    	je     29202 <_Unwind_RaiseException+0x21c>
   293b7:	e8 1d 22 01 00       	callq  3b5d9 <abort>
   293bc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   293c0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   293c7:	00 00 
   293c9:	74 05                	je     293d0 <_Unwind_RaiseException+0x3ea>
   293cb:	e8 bc 20 fe ff       	callq  b48c <__stack_chk_fail>
   293d0:	c9                   	leaveq 
   293d1:	c3                   	retq   

00000000000293d2 <_Unwind_SetGR>:
   293d2:	55                   	push   %rbp
   293d3:	48 89 e5             	mov    %rsp,%rbp
   293d6:	48 83 ec 20          	sub    $0x20,%rsp
   293da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   293de:	89 75 f4             	mov    %esi,-0xc(%rbp)
   293e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   293e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   293e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   293ed:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   293f0:	89 ce                	mov    %ecx,%esi
   293f2:	48 89 c7             	mov    %rax,%rdi
   293f5:	e8 f7 44 00 00       	callq  2d8f1 <_ULx86_64_set_reg>
   293fa:	90                   	nop
   293fb:	c9                   	leaveq 
   293fc:	c3                   	retq   

00000000000293fd <_Unwind_SetIP>:
   293fd:	55                   	push   %rbp
   293fe:	48 89 e5             	mov    %rsp,%rbp
   29401:	48 83 ec 10          	sub    $0x10,%rsp
   29405:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29409:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2940d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29411:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   29415:	be 10 00 00 00       	mov    $0x10,%esi
   2941a:	48 89 c7             	mov    %rax,%rdi
   2941d:	e8 cf 44 00 00       	callq  2d8f1 <_ULx86_64_set_reg>
   29422:	90                   	nop
   29423:	c9                   	leaveq 
   29424:	c3                   	retq   

0000000000029425 <_Ux86_64_setcontext>:
   29425:	4c 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%r8
   2942c:	41 d9 20             	fldenv (%r8)
   2942f:	41 0f ae 50 18       	ldmxcsr 0x18(%r8)
   29434:	4c 8b 47 28          	mov    0x28(%rdi),%r8
   29438:	4c 8b 4f 30          	mov    0x30(%rdi),%r9
   2943c:	48 8b 9f 80 00 00 00 	mov    0x80(%rdi),%rbx
   29443:	48 8b 6f 78          	mov    0x78(%rdi),%rbp
   29447:	4c 8b 67 48          	mov    0x48(%rdi),%r12
   2944b:	4c 8b 6f 50          	mov    0x50(%rdi),%r13
   2944f:	4c 8b 77 58          	mov    0x58(%rdi),%r14
   29453:	4c 8b 7f 60          	mov    0x60(%rdi),%r15
   29457:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   2945b:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
   29462:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
   29469:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   29470:	48 8b a7 a0 00 00 00 	mov    0xa0(%rdi),%rsp
   29477:	48 8b 8f a8 00 00 00 	mov    0xa8(%rdi),%rcx
   2947e:	51                   	push   %rcx
   2947f:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   29486:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
   2948a:	c3                   	retq   

000000000002948b <mark_as_used>:
   2948b:	55                   	push   %rbp
   2948c:	48 89 e5             	mov    %rsp,%rbp
   2948f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29493:	90                   	nop
   29494:	5d                   	pop    %rbp
   29495:	c3                   	retq   

0000000000029496 <_ULx86_64_init>:
   29496:	55                   	push   %rbp
   29497:	48 89 e5             	mov    %rsp,%rbp
   2949a:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   294a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   294a8:	00 00 
   294aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   294ae:	31 c0                	xor    %eax,%eax
   294b0:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   294b7:	48 89 c7             	mov    %rax,%rdi
   294ba:	e8 cc ff ff ff       	callq  2948b <mark_as_used>
   294bf:	48 8d 3d 3a 75 02 00 	lea    0x2753a(%rip),%rdi        # 50a00 <_ULx86_64_lock>
   294c6:	e8 26 a7 fe ff       	callq  13bf1 <sgx_spin_lock>
   294cb:	85 c0                	test   %eax,%eax
   294cd:	74 05                	je     294d4 <_ULx86_64_init+0x3e>
   294cf:	e8 05 21 01 00       	callq  3b5d9 <abort>
   294d4:	8b 05 4e de 02 00    	mov    0x2de4e(%rip),%eax        # 57328 <_ULx86_64_init_done>
   294da:	85 c0                	test   %eax,%eax
   294dc:	75 20                	jne    294fe <_ULx86_64_init+0x68>
   294de:	e8 62 42 00 00       	callq  2d745 <_UIx86_64_mi_init>
   294e3:	e8 ba bf ff ff       	callq  254a2 <_Ux86_64_dwarf_init>
   294e8:	e8 eb 00 00 00       	callq  295d8 <_ULx86_64_init_mem_validate>
   294ed:	e8 4c 04 00 00       	callq  2993e <_ULx86_64_local_addr_space_init>
   294f2:	c7 05 2c de 02 00 01 	movl   $0x1,0x2de2c(%rip)        # 57328 <_ULx86_64_init_done>
   294f9:	00 00 00 
   294fc:	eb 01                	jmp    294ff <_ULx86_64_init+0x69>
   294fe:	90                   	nop
   294ff:	48 8d 3d fa 74 02 00 	lea    0x274fa(%rip),%rdi        # 50a00 <_ULx86_64_lock>
   29506:	e8 4d a7 fe ff       	callq  13c58 <sgx_spin_unlock>
   2950b:	85 c0                	test   %eax,%eax
   2950d:	74 05                	je     29514 <_ULx86_64_init+0x7e>
   2950f:	e8 c5 20 01 00       	callq  3b5d9 <abort>
   29514:	bf 00 00 00 00       	mov    $0x0,%edi
   29519:	e8 6d ff ff ff       	callq  2948b <mark_as_used>
   2951e:	90                   	nop
   2951f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29523:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2952a:	00 00 
   2952c:	74 05                	je     29533 <_ULx86_64_init+0x9d>
   2952e:	e8 59 1f fe ff       	callq  b48c <__stack_chk_fail>
   29533:	c9                   	leaveq 
   29534:	c3                   	retq   

0000000000029535 <put_unwind_info>:
   29535:	55                   	push   %rbp
   29536:	48 89 e5             	mov    %rsp,%rbp
   29539:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2953d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   29541:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   29545:	90                   	nop
   29546:	5d                   	pop    %rbp
   29547:	c3                   	retq   

0000000000029548 <get_dyn_info_list_addr>:
   29548:	55                   	push   %rbp
   29549:	48 89 e5             	mov    %rsp,%rbp
   2954c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29550:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   29554:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   29558:	48 8d 15 d1 dd 02 00 	lea    0x2ddd1(%rip),%rdx        # 57330 <_U_dyn_info_list>
   2955f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   29563:	48 89 10             	mov    %rdx,(%rax)
   29566:	b8 00 00 00 00       	mov    $0x0,%eax
   2956b:	5d                   	pop    %rbp
   2956c:	c3                   	retq   

000000000002956d <open_pipe>:
   2956d:	55                   	push   %rbp
   2956e:	48 89 e5             	mov    %rsp,%rbp
   29571:	90                   	nop
   29572:	5d                   	pop    %rbp
   29573:	c3                   	retq   

0000000000029574 <msync_validate>:
   29574:	55                   	push   %rbp
   29575:	48 89 e5             	mov    %rsp,%rbp
   29578:	48 83 ec 20          	sub    $0x20,%rsp
   2957c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   29580:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   29584:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   29588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2958c:	48 89 d6             	mov    %rdx,%rsi
   2958f:	48 89 c7             	mov    %rax,%rdi
   29592:	b8 00 00 00 00       	mov    $0x0,%eax
   29597:	e8 15 e8 fd ff       	callq  7db1 <sgx_is_within_enclave>
   2959c:	85 c0                	test   %eax,%eax
   2959e:	75 05                	jne    295a5 <msync_validate+0x31>
   295a0:	e8 34 20 01 00       	callq  3b5d9 <abort>
   295a5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   295a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   295ad:	ba 01 00 00 00       	mov    $0x1,%edx
   295b2:	48 89 ce             	mov    %rcx,%rsi
   295b5:	48 89 c7             	mov    %rax,%rdi
   295b8:	e8 1c bf ff ff       	callq  254d9 <msync>
   295bd:	85 c0                	test   %eax,%eax
   295bf:	74 07                	je     295c8 <msync_validate+0x54>
   295c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   295c6:	eb 0e                	jmp    295d6 <msync_validate+0x62>
   295c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   295cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   295d0:	b8 00 00 00 00       	mov    $0x0,%eax
   295d5:	90                   	nop
   295d6:	c9                   	leaveq 
   295d7:	c3                   	retq   

00000000000295d8 <_ULx86_64_init_mem_validate>:
   295d8:	55                   	push   %rbp
   295d9:	48 89 e5             	mov    %rsp,%rbp
   295dc:	e8 8c ff ff ff       	callq  2956d <open_pipe>
   295e1:	48 8d 05 8c ff ff ff 	lea    -0x74(%rip),%rax        # 29574 <msync_validate>
   295e8:	48 89 05 c1 da 02 00 	mov    %rax,0x2dac1(%rip)        # 570b0 <mem_validate_func>
   295ef:	90                   	nop
   295f0:	5d                   	pop    %rbp
   295f1:	c3                   	retq   

00000000000295f2 <validate_mem>:
   295f2:	55                   	push   %rbp
   295f3:	48 89 e5             	mov    %rsp,%rbp
   295f6:	48 83 ec 20          	sub    $0x20,%rsp
   295fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   295fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29602:	48 83 c0 07          	add    $0x7,%rax
   29606:	48 33 45 e8          	xor    -0x18(%rbp),%rax
   2960a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   29610:	48 85 c0             	test   %rax,%rax
   29613:	75 0a                	jne    2961f <validate_mem+0x2d>
   29615:	48 c7 45 f8 00 10 00 	movq   $0x1000,-0x8(%rbp)
   2961c:	00 
   2961d:	eb 08                	jmp    29627 <validate_mem+0x35>
   2961f:	48 c7 45 f8 00 20 00 	movq   $0x2000,-0x8(%rbp)
   29626:	00 
   29627:	48 81 65 e8 00 f0 ff 	andq   $0xfffffffffffff000,-0x18(%rbp)
   2962e:	ff 
   2962f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   29634:	75 0a                	jne    29640 <validate_mem+0x4e>
   29636:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2963b:	e9 3e 01 00 00       	jmpq   2977e <validate_mem+0x18c>
   29640:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   29647:	eb 49                	jmp    29692 <validate_mem+0xa0>
   29649:	8b 45 f0             	mov    -0x10(%rbp),%eax
   2964c:	48 98                	cltq   
   2964e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   29655:	00 
   29656:	48 8d 05 63 da 02 00 	lea    0x2da63(%rip),%rax        # 570c0 <last_good_addr>
   2965d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   29661:	48 85 c0             	test   %rax,%rax
   29664:	74 28                	je     2968e <validate_mem+0x9c>
   29666:	8b 45 f0             	mov    -0x10(%rbp),%eax
   29669:	48 98                	cltq   
   2966b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   29672:	00 
   29673:	48 8d 05 46 da 02 00 	lea    0x2da46(%rip),%rax        # 570c0 <last_good_addr>
   2967a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   2967e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   29682:	75 0a                	jne    2968e <validate_mem+0x9c>
   29684:	b8 00 00 00 00       	mov    $0x0,%eax
   29689:	e9 f0 00 00 00       	jmpq   2977e <validate_mem+0x18c>
   2968e:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
   29692:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
   29696:	7e b1                	jle    29649 <validate_mem+0x57>
   29698:	48 8b 05 11 da 02 00 	mov    0x2da11(%rip),%rax        # 570b0 <mem_validate_func>
   2969f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   296a3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   296a7:	48 89 ce             	mov    %rcx,%rsi
   296aa:	48 89 d7             	mov    %rdx,%rdi
   296ad:	ff d0                	callq  *%rax
   296af:	83 f8 ff             	cmp    $0xffffffff,%eax
   296b2:	75 0a                	jne    296be <validate_mem+0xcc>
   296b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   296b9:	e9 c0 00 00 00       	jmpq   2977e <validate_mem+0x18c>
   296be:	8b 05 1c da 02 00    	mov    0x2da1c(%rip),%eax        # 570e0 <lga_victim>
   296c4:	89 45 f4             	mov    %eax,-0xc(%rbp)
   296c7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   296ce:	eb 64                	jmp    29734 <validate_mem+0x142>
   296d0:	8b 45 f4             	mov    -0xc(%rbp),%eax
   296d3:	48 98                	cltq   
   296d5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   296dc:	00 
   296dd:	48 8d 05 dc d9 02 00 	lea    0x2d9dc(%rip),%rax        # 570c0 <last_good_addr>
   296e4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   296e8:	48 85 c0             	test   %rax,%rax
   296eb:	75 29                	jne    29716 <validate_mem+0x124>
   296ed:	8b 45 f4             	mov    -0xc(%rbp),%eax
   296f0:	8d 50 01             	lea    0x1(%rax),%edx
   296f3:	89 55 f4             	mov    %edx,-0xc(%rbp)
   296f6:	48 98                	cltq   
   296f8:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   296ff:	00 
   29700:	48 8d 05 b9 d9 02 00 	lea    0x2d9b9(%rip),%rax        # 570c0 <last_good_addr>
   29707:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2970b:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
   2970f:	b8 00 00 00 00       	mov    $0x0,%eax
   29714:	eb 68                	jmp    2977e <validate_mem+0x18c>
   29716:	8b 45 f4             	mov    -0xc(%rbp),%eax
   29719:	8d 50 01             	lea    0x1(%rax),%edx
   2971c:	89 d0                	mov    %edx,%eax
   2971e:	c1 f8 1f             	sar    $0x1f,%eax
   29721:	c1 e8 1e             	shr    $0x1e,%eax
   29724:	01 c2                	add    %eax,%edx
   29726:	83 e2 03             	and    $0x3,%edx
   29729:	29 c2                	sub    %eax,%edx
   2972b:	89 d0                	mov    %edx,%eax
   2972d:	89 45 f4             	mov    %eax,-0xc(%rbp)
   29730:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
   29734:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
   29738:	7e 96                	jle    296d0 <validate_mem+0xde>
   2973a:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2973d:	48 98                	cltq   
   2973f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   29746:	00 
   29747:	48 8d 05 72 d9 02 00 	lea    0x2d972(%rip),%rax        # 570c0 <last_good_addr>
   2974e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   29752:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
   29756:	8b 45 f4             	mov    -0xc(%rbp),%eax
   29759:	8d 50 01             	lea    0x1(%rax),%edx
   2975c:	89 d0                	mov    %edx,%eax
   2975e:	c1 f8 1f             	sar    $0x1f,%eax
   29761:	c1 e8 1e             	shr    $0x1e,%eax
   29764:	01 c2                	add    %eax,%edx
   29766:	83 e2 03             	and    $0x3,%edx
   29769:	29 c2                	sub    %eax,%edx
   2976b:	89 d0                	mov    %edx,%eax
   2976d:	89 45 f4             	mov    %eax,-0xc(%rbp)
   29770:	8b 45 f4             	mov    -0xc(%rbp),%eax
   29773:	89 05 67 d9 02 00    	mov    %eax,0x2d967(%rip)        # 570e0 <lga_victim>
   29779:	b8 00 00 00 00       	mov    $0x0,%eax
   2977e:	c9                   	leaveq 
   2977f:	c3                   	retq   

0000000000029780 <access_mem>:
   29780:	55                   	push   %rbp
   29781:	48 89 e5             	mov    %rsp,%rbp
   29784:	48 83 ec 40          	sub    $0x40,%rsp
   29788:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2978c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   29790:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   29794:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   29797:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2979b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2979e:	48 98                	cltq   
   297a0:	48 85 c0             	test   %rax,%rax
   297a3:	74 10                	je     297b5 <access_mem+0x35>
   297a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   297a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   297ad:	48 8b 12             	mov    (%rdx),%rdx
   297b0:	48 89 10             	mov    %rdx,(%rax)
   297b3:	eb 51                	jmp    29806 <access_mem+0x86>
   297b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   297b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   297bd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   297c2:	0f 95 c0             	setne  %al
   297c5:	0f b6 c0             	movzbl %al,%eax
   297c8:	48 85 c0             	test   %rax,%rax
   297cb:	74 2b                	je     297f8 <access_mem+0x78>
   297cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   297d1:	8b 80 c8 01 00 00    	mov    0x1c8(%rax),%eax
   297d7:	48 98                	cltq   
   297d9:	48 85 c0             	test   %rax,%rax
   297dc:	74 1a                	je     297f8 <access_mem+0x78>
   297de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   297e2:	48 89 c7             	mov    %rax,%rdi
   297e5:	e8 08 fe ff ff       	callq  295f2 <validate_mem>
   297ea:	48 98                	cltq   
   297ec:	48 85 c0             	test   %rax,%rax
   297ef:	74 07                	je     297f8 <access_mem+0x78>
   297f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   297f6:	eb 13                	jmp    2980b <access_mem+0x8b>
   297f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   297fc:	48 8b 10             	mov    (%rax),%rdx
   297ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29803:	48 89 10             	mov    %rdx,(%rax)
   29806:	b8 00 00 00 00       	mov    $0x0,%eax
   2980b:	c9                   	leaveq 
   2980c:	c3                   	retq   

000000000002980d <access_reg>:
   2980d:	55                   	push   %rbp
   2980e:	48 89 e5             	mov    %rsp,%rbp
   29811:	48 83 ec 30          	sub    $0x30,%rsp
   29815:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   29819:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2981c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   29820:	89 4d e0             	mov    %ecx,-0x20(%rbp)
   29823:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
   29827:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2982b:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   29832:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29836:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29839:	89 c7                	mov    %eax,%edi
   2983b:	e8 42 f0 ff ff       	callq  28882 <_Ux86_64_is_fpreg>
   29840:	85 c0                	test   %eax,%eax
   29842:	75 47                	jne    2988b <access_reg+0x7e>
   29844:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   29847:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2984b:	89 d6                	mov    %edx,%esi
   2984d:	48 89 c7             	mov    %rax,%rdi
   29850:	e8 e2 f1 ff ff       	callq  28a37 <_ULx86_64_r_uc_addr>
   29855:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   29859:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2985e:	74 2e                	je     2988e <access_reg+0x81>
   29860:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   29864:	74 10                	je     29876 <access_reg+0x69>
   29866:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2986a:	48 8b 10             	mov    (%rax),%rdx
   2986d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29871:	48 89 10             	mov    %rdx,(%rax)
   29874:	eb 0e                	jmp    29884 <access_reg+0x77>
   29876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2987a:	48 8b 10             	mov    (%rax),%rdx
   2987d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29881:	48 89 10             	mov    %rdx,(%rax)
   29884:	b8 00 00 00 00       	mov    $0x0,%eax
   29889:	eb 09                	jmp    29894 <access_reg+0x87>
   2988b:	90                   	nop
   2988c:	eb 01                	jmp    2988f <access_reg+0x82>
   2988e:	90                   	nop
   2988f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   29894:	c9                   	leaveq 
   29895:	c3                   	retq   

0000000000029896 <access_fpreg>:
   29896:	55                   	push   %rbp
   29897:	48 89 e5             	mov    %rsp,%rbp
   2989a:	48 83 ec 30          	sub    $0x30,%rsp
   2989e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   298a2:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   298a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   298a9:	89 4d e0             	mov    %ecx,-0x20(%rbp)
   298ac:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
   298b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   298b4:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
   298bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   298bf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   298c2:	89 c7                	mov    %eax,%edi
   298c4:	e8 b9 ef ff ff       	callq  28882 <_Ux86_64_is_fpreg>
   298c9:	85 c0                	test   %eax,%eax
   298cb:	74 43                	je     29910 <access_fpreg+0x7a>
   298cd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   298d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   298d4:	89 d6                	mov    %edx,%esi
   298d6:	48 89 c7             	mov    %rax,%rdi
   298d9:	e8 59 f1 ff ff       	callq  28a37 <_ULx86_64_r_uc_addr>
   298de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   298e2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   298e7:	74 2a                	je     29913 <access_fpreg+0x7d>
   298e9:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   298ed:	74 0e                	je     298fd <access_fpreg+0x67>
   298ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   298f3:	db 28                	fldt   (%rax)
   298f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   298f9:	db 38                	fstpt  (%rax)
   298fb:	eb 0c                	jmp    29909 <access_fpreg+0x73>
   298fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29901:	db 28                	fldt   (%rax)
   29903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29907:	db 38                	fstpt  (%rax)
   29909:	b8 00 00 00 00       	mov    $0x0,%eax
   2990e:	eb 09                	jmp    29919 <access_fpreg+0x83>
   29910:	90                   	nop
   29911:	eb 01                	jmp    29914 <access_fpreg+0x7e>
   29913:	90                   	nop
   29914:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   29919:	c9                   	leaveq 
   2991a:	c3                   	retq   

000000000002991b <get_static_proc_name>:
   2991b:	55                   	push   %rbp
   2991c:	48 89 e5             	mov    %rsp,%rbp
   2991f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29923:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   29927:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2992b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2992f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   29933:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   29937:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2993c:	5d                   	pop    %rbp
   2993d:	c3                   	retq   

000000000002993e <_ULx86_64_local_addr_space_init>:
   2993e:	55                   	push   %rbp
   2993f:	48 89 e5             	mov    %rsp,%rbp
   29942:	ba 90 66 00 00       	mov    $0x6690,%edx
   29947:	be 00 00 00 00       	mov    $0x0,%esi
   2994c:	48 8d 3d cd 70 02 00 	lea    0x270cd(%rip),%rdi        # 50a20 <local_addr_space>
   29953:	e8 dd 9d fe ff       	callq  13735 <memset>
   29958:	c7 05 fe 70 02 00 01 	movl   $0x1,0x270fe(%rip)        # 50a60 <local_addr_space+0x40>
   2995f:	00 00 00 
   29962:	48 8d 05 8a 35 00 00 	lea    0x358a(%rip),%rax        # 2cef3 <_ULx86_64_dwarf_find_proc_info>
   29969:	48 89 05 b0 70 02 00 	mov    %rax,0x270b0(%rip)        # 50a20 <local_addr_space>
   29970:	48 8d 05 be fb ff ff 	lea    -0x442(%rip),%rax        # 29535 <put_unwind_info>
   29977:	48 89 05 aa 70 02 00 	mov    %rax,0x270aa(%rip)        # 50a28 <local_addr_space+0x8>
   2997e:	48 8d 05 c3 fb ff ff 	lea    -0x43d(%rip),%rax        # 29548 <get_dyn_info_list_addr>
   29985:	48 89 05 a4 70 02 00 	mov    %rax,0x270a4(%rip)        # 50a30 <local_addr_space+0x10>
   2998c:	48 8d 05 ed fd ff ff 	lea    -0x213(%rip),%rax        # 29780 <access_mem>
   29993:	48 89 05 9e 70 02 00 	mov    %rax,0x2709e(%rip)        # 50a38 <local_addr_space+0x18>
   2999a:	48 8d 05 6c fe ff ff 	lea    -0x194(%rip),%rax        # 2980d <access_reg>
   299a1:	48 89 05 98 70 02 00 	mov    %rax,0x27098(%rip)        # 50a40 <local_addr_space+0x20>
   299a8:	48 8d 05 e7 fe ff ff 	lea    -0x119(%rip),%rax        # 29896 <access_fpreg>
   299af:	48 89 05 92 70 02 00 	mov    %rax,0x27092(%rip)        # 50a48 <local_addr_space+0x28>
   299b6:	48 8d 05 8e 7c ff ff 	lea    -0x8372(%rip),%rax        # 2164b <_ULx86_64_local_resume>
   299bd:	48 89 05 8c 70 02 00 	mov    %rax,0x2708c(%rip)        # 50a50 <local_addr_space+0x30>
   299c4:	48 8d 05 50 ff ff ff 	lea    -0xb0(%rip),%rax        # 2991b <get_static_proc_name>
   299cb:	48 89 05 86 70 02 00 	mov    %rax,0x27086(%rip)        # 50a58 <local_addr_space+0x38>
   299d2:	ba 00 00 00 00       	mov    $0x0,%edx
   299d7:	be 00 00 00 00       	mov    $0x0,%esi
   299dc:	48 8d 3d 3d 70 02 00 	lea    0x2703d(%rip),%rdi        # 50a20 <local_addr_space>
   299e3:	e8 64 3d 00 00       	callq  2d74c <_Ux86_64_flush_cache>
   299e8:	ba 20 00 00 00       	mov    $0x20,%edx
   299ed:	be 00 00 00 00       	mov    $0x0,%esi
   299f2:	48 8d 3d c7 d6 02 00 	lea    0x2d6c7(%rip),%rdi        # 570c0 <last_good_addr>
   299f9:	e8 37 9d fe ff       	callq  13735 <memset>
   299fe:	c7 05 d8 d6 02 00 00 	movl   $0x0,0x2d6d8(%rip)        # 570e0 <lga_victim>
   29a05:	00 00 00 
   29a08:	90                   	nop
   29a09:	5d                   	pop    %rbp
   29a0a:	c3                   	retq   

0000000000029a0b <dwarf_get>:
   29a0b:	55                   	push   %rbp
   29a0c:	48 89 e5             	mov    %rsp,%rbp
   29a0f:	48 83 ec 20          	sub    $0x20,%rsp
   29a13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29a17:	48 89 f0             	mov    %rsi,%rax
   29a1a:	48 89 d6             	mov    %rdx,%rsi
   29a1d:	48 89 f2             	mov    %rsi,%rdx
   29a20:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   29a24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   29a28:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   29a2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   29a30:	48 85 c0             	test   %rax,%rax
   29a33:	75 0a                	jne    29a3f <dwarf_get+0x34>
   29a35:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   29a3a:	e9 b0 00 00 00       	jmpq   29aef <dwarf_get+0xe4>
   29a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29a43:	83 e0 02             	and    $0x2,%eax
   29a46:	48 85 c0             	test   %rax,%rax
   29a49:	74 31                	je     29a7c <dwarf_get+0x71>
   29a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29a4f:	48 8b 40 08          	mov    0x8(%rax),%rax
   29a53:	48 8b 40 20          	mov    0x20(%rax),%rax
   29a57:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29a5b:	48 8b 0a             	mov    (%rdx),%rcx
   29a5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   29a62:	89 d6                	mov    %edx,%esi
   29a64:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29a68:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   29a6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   29a70:	49 89 c8             	mov    %rcx,%r8
   29a73:	b9 00 00 00 00       	mov    $0x0,%ecx
   29a78:	ff d0                	callq  *%rax
   29a7a:	eb 73                	jmp    29aef <dwarf_get+0xe4>
   29a7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29a80:	48 85 c0             	test   %rax,%rax
   29a83:	75 2f                	jne    29ab4 <dwarf_get+0xa9>
   29a85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29a89:	48 8b 40 08          	mov    0x8(%rax),%rax
   29a8d:	48 8b 40 18          	mov    0x18(%rax),%rax
   29a91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29a95:	48 8b 0a             	mov    (%rdx),%rcx
   29a98:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   29a9c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29aa0:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   29aa4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   29aa8:	49 89 c8             	mov    %rcx,%r8
   29aab:	b9 00 00 00 00       	mov    $0x0,%ecx
   29ab0:	ff d0                	callq  *%rax
   29ab2:	eb 3b                	jmp    29aef <dwarf_get+0xe4>
   29ab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29ab8:	83 e0 04             	and    $0x4,%eax
   29abb:	48 85 c0             	test   %rax,%rax
   29abe:	75 1f                	jne    29adf <dwarf_get+0xd4>
   29ac0:	48 8d 0d f1 40 01 00 	lea    0x140f1(%rip),%rcx        # 3dbb8 <__PRETTY_FUNCTION__.4821>
   29ac7:	ba aa 00 00 00       	mov    $0xaa,%edx
   29acc:	48 8d 35 35 40 01 00 	lea    0x14035(%rip),%rsi        # 3db08 <_ULx86_64_dwarf_to_unw_regnum_map+0x18>
   29ad3:	48 8d 3d 53 40 01 00 	lea    0x14053(%rip),%rdi        # 3db2d <_ULx86_64_dwarf_to_unw_regnum_map+0x3d>
   29ada:	e8 10 ba ff ff       	callq  254ef <__assert_fail>
   29adf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   29ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   29ae7:	48 89 10             	mov    %rdx,(%rax)
   29aea:	b8 00 00 00 00       	mov    $0x0,%eax
   29aef:	c9                   	leaveq 
   29af0:	c3                   	retq   

0000000000029af1 <dwarf_put>:
   29af1:	55                   	push   %rbp
   29af2:	48 89 e5             	mov    %rsp,%rbp
   29af5:	48 83 ec 20          	sub    $0x20,%rsp
   29af9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29afd:	48 89 f0             	mov    %rsi,%rax
   29b00:	48 89 d6             	mov    %rdx,%rsi
   29b03:	48 89 f2             	mov    %rsi,%rdx
   29b06:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   29b0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   29b0e:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   29b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29b16:	83 e0 04             	and    $0x4,%eax
   29b19:	48 85 c0             	test   %rax,%rax
   29b1c:	74 1f                	je     29b3d <dwarf_put+0x4c>
   29b1e:	48 8d 0d 83 40 01 00 	lea    0x14083(%rip),%rcx        # 3dba8 <__PRETTY_FUNCTION__.4827>
   29b25:	ba b2 00 00 00       	mov    $0xb2,%edx
   29b2a:	48 8d 35 d7 3f 01 00 	lea    0x13fd7(%rip),%rsi        # 3db08 <_ULx86_64_dwarf_to_unw_regnum_map+0x18>
   29b31:	48 8d 3d 0c 40 01 00 	lea    0x1400c(%rip),%rdi        # 3db44 <_ULx86_64_dwarf_to_unw_regnum_map+0x54>
   29b38:	e8 b2 b9 ff ff       	callq  254ef <__assert_fail>
   29b3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   29b41:	48 85 c0             	test   %rax,%rax
   29b44:	75 07                	jne    29b4d <dwarf_put+0x5c>
   29b46:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   29b4b:	eb 6a                	jmp    29bb7 <dwarf_put+0xc6>
   29b4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29b51:	83 e0 02             	and    $0x2,%eax
   29b54:	48 85 c0             	test   %rax,%rax
   29b57:	74 31                	je     29b8a <dwarf_put+0x99>
   29b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29b5d:	48 8b 40 08          	mov    0x8(%rax),%rax
   29b61:	48 8b 40 20          	mov    0x20(%rax),%rax
   29b65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29b69:	48 8b 0a             	mov    (%rdx),%rcx
   29b6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   29b70:	89 d6                	mov    %edx,%esi
   29b72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29b76:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   29b7a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   29b7e:	49 89 c8             	mov    %rcx,%r8
   29b81:	b9 01 00 00 00       	mov    $0x1,%ecx
   29b86:	ff d0                	callq  *%rax
   29b88:	eb 2d                	jmp    29bb7 <dwarf_put+0xc6>
   29b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29b8e:	48 8b 40 08          	mov    0x8(%rax),%rax
   29b92:	48 8b 40 18          	mov    0x18(%rax),%rax
   29b96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29b9a:	48 8b 0a             	mov    (%rdx),%rcx
   29b9d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   29ba1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29ba5:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   29ba9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   29bad:	49 89 c8             	mov    %rcx,%r8
   29bb0:	b9 01 00 00 00       	mov    $0x1,%ecx
   29bb5:	ff d0                	callq  *%rax
   29bb7:	c9                   	leaveq 
   29bb8:	c3                   	retq   

0000000000029bb9 <_ULx86_64_access_reg>:
   29bb9:	55                   	push   %rbp
   29bba:	48 89 e5             	mov    %rsp,%rbp
   29bbd:	48 83 ec 40          	sub    $0x40,%rsp
   29bc1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   29bc5:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   29bc8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   29bcc:	89 4d d0             	mov    %ecx,-0x30(%rbp)
   29bcf:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   29bd6:	00 
   29bd7:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   29bde:	00 
   29bdf:	83 7d d4 11          	cmpl   $0x11,-0x2c(%rbp)
   29be3:	0f 87 af 02 00 00    	ja     29e98 <_ULx86_64_access_reg+0x2df>
   29be9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   29bec:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   29bf3:	00 
   29bf4:	48 8d 05 61 3f 01 00 	lea    0x13f61(%rip),%rax        # 3db5c <_ULx86_64_dwarf_to_unw_regnum_map+0x6c>
   29bfb:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   29bfe:	48 63 d0             	movslq %eax,%rdx
   29c01:	48 8d 05 54 3f 01 00 	lea    0x13f54(%rip),%rax        # 3db5c <_ULx86_64_dwarf_to_unw_regnum_map+0x6c>
   29c08:	48 01 d0             	add    %rdx,%rax
   29c0b:	ff e0                	jmpq   *%rax
   29c0d:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   29c11:	74 0f                	je     29c22 <_ULx86_64_access_reg+0x69>
   29c13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29c17:	48 8b 10             	mov    (%rax),%rdx
   29c1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29c1e:	48 89 50 18          	mov    %rdx,0x18(%rax)
   29c22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29c26:	48 8b 90 48 01 00 00 	mov    0x148(%rax),%rdx
   29c2d:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   29c34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29c38:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29c3c:	e9 5e 02 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29c41:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   29c45:	74 0a                	je     29c51 <_ULx86_64_access_reg+0x98>
   29c47:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   29c4c:	e9 89 02 00 00       	jmpq   29eda <_ULx86_64_access_reg+0x321>
   29c51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29c55:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29c59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29c5d:	48 89 10             	mov    %rdx,(%rax)
   29c60:	b8 00 00 00 00       	mov    $0x0,%eax
   29c65:	e9 70 02 00 00       	jmpq   29eda <_ULx86_64_access_reg+0x321>
   29c6a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   29c6d:	89 45 e8             	mov    %eax,-0x18(%rbp)
   29c70:	8b 45 e8             	mov    -0x18(%rbp),%eax
   29c73:	ba 01 00 00 00       	mov    $0x1,%edx
   29c78:	89 c1                	mov    %eax,%ecx
   29c7a:	d3 e2                	shl    %cl,%edx
   29c7c:	89 d0                	mov    %edx,%eax
   29c7e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   29c81:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   29c85:	74 37                	je     29cbe <_ULx86_64_access_reg+0x105>
   29c87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29c8b:	48 8b 10             	mov    (%rax),%rdx
   29c8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29c92:	8b 4d e8             	mov    -0x18(%rbp),%ecx
   29c95:	48 63 c9             	movslq %ecx,%rcx
   29c98:	48 83 c1 04          	add    $0x4,%rcx
   29c9c:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
   29ca1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29ca5:	8b 40 38             	mov    0x38(%rax),%eax
   29ca8:	0b 45 ec             	or     -0x14(%rbp),%eax
   29cab:	89 c2                	mov    %eax,%edx
   29cad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29cb1:	89 50 38             	mov    %edx,0x38(%rax)
   29cb4:	b8 00 00 00 00       	mov    $0x0,%eax
   29cb9:	e9 1c 02 00 00       	jmpq   29eda <_ULx86_64_access_reg+0x321>
   29cbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29cc2:	8b 40 38             	mov    0x38(%rax),%eax
   29cc5:	23 45 ec             	and    -0x14(%rbp),%eax
   29cc8:	85 c0                	test   %eax,%eax
   29cca:	74 24                	je     29cf0 <_ULx86_64_access_reg+0x137>
   29ccc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29cd0:	8b 55 e8             	mov    -0x18(%rbp),%edx
   29cd3:	48 63 d2             	movslq %edx,%rdx
   29cd6:	48 83 c2 04          	add    $0x4,%rdx
   29cda:	48 8b 54 d0 08       	mov    0x8(%rax,%rdx,8),%rdx
   29cdf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29ce3:	48 89 10             	mov    %rdx,(%rax)
   29ce6:	b8 00 00 00 00       	mov    $0x0,%eax
   29ceb:	e9 ea 01 00 00       	jmpq   29eda <_ULx86_64_access_reg+0x321>
   29cf0:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   29cf4:	0f 95 c0             	setne  %al
   29cf7:	0f b6 d0             	movzbl %al,%edx
   29cfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29cfe:	48 63 d2             	movslq %edx,%rdx
   29d01:	48 83 c2 04          	add    $0x4,%rdx
   29d05:	48 c1 e2 04          	shl    $0x4,%rdx
   29d09:	48 01 d0             	add    %rdx,%rax
   29d0c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   29d10:	48 8b 00             	mov    (%rax),%rax
   29d13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29d17:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29d1b:	e9 7f 01 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29d20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29d24:	48 8b 50 68          	mov    0x68(%rax),%rdx
   29d28:	48 8b 40 60          	mov    0x60(%rax),%rax
   29d2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29d30:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29d34:	e9 66 01 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29d39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29d3d:	48 8b 50 78          	mov    0x78(%rax),%rdx
   29d41:	48 8b 40 70          	mov    0x70(%rax),%rax
   29d45:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29d49:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29d4d:	e9 4d 01 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29d52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29d56:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
   29d5d:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   29d64:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29d68:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29d6c:	e9 2e 01 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29d71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29d75:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   29d7c:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   29d83:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29d87:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29d8b:	e9 0f 01 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29d94:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
   29d9b:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   29da2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29da6:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29daa:	e9 f0 00 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29daf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29db3:	48 8b 90 c8 00 00 00 	mov    0xc8(%rax),%rdx
   29dba:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
   29dc1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29dc5:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29dc9:	e9 d1 00 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29dce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29dd2:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
   29dd9:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
   29de0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29de4:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29de8:	e9 b2 00 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29ded:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29df1:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
   29df8:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
   29dff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29e03:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29e07:	e9 93 00 00 00       	jmpq   29e9f <_ULx86_64_access_reg+0x2e6>
   29e0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e10:	48 8b 90 f8 00 00 00 	mov    0xf8(%rax),%rdx
   29e17:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   29e1e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29e22:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29e26:	eb 77                	jmp    29e9f <_ULx86_64_access_reg+0x2e6>
   29e28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e2c:	48 8b 90 08 01 00 00 	mov    0x108(%rax),%rdx
   29e33:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
   29e3a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29e3e:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29e42:	eb 5b                	jmp    29e9f <_ULx86_64_access_reg+0x2e6>
   29e44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e48:	48 8b 90 18 01 00 00 	mov    0x118(%rax),%rdx
   29e4f:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
   29e56:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29e5a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29e5e:	eb 3f                	jmp    29e9f <_ULx86_64_access_reg+0x2e6>
   29e60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e64:	48 8b 90 28 01 00 00 	mov    0x128(%rax),%rdx
   29e6b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   29e72:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29e76:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29e7a:	eb 23                	jmp    29e9f <_ULx86_64_access_reg+0x2e6>
   29e7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e80:	48 8b 90 38 01 00 00 	mov    0x138(%rax),%rdx
   29e87:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
   29e8e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29e92:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   29e96:	eb 07                	jmp    29e9f <_ULx86_64_access_reg+0x2e6>
   29e98:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   29e9d:	eb 3b                	jmp    29eda <_ULx86_64_access_reg+0x321>
   29e9f:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   29ea3:	74 1d                	je     29ec2 <_ULx86_64_access_reg+0x309>
   29ea5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29ea9:	48 8b 08             	mov    (%rax),%rcx
   29eac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29eb0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   29eb4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29eb8:	48 89 c7             	mov    %rax,%rdi
   29ebb:	e8 31 fc ff ff       	callq  29af1 <dwarf_put>
   29ec0:	eb 18                	jmp    29eda <_ULx86_64_access_reg+0x321>
   29ec2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29ec6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   29eca:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   29ece:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   29ed2:	48 89 c7             	mov    %rax,%rdi
   29ed5:	e8 31 fb ff ff       	callq  29a0b <dwarf_get>
   29eda:	c9                   	leaveq 
   29edb:	c3                   	retq   

0000000000029edc <_ULx86_64_access_fpreg>:
   29edc:	55                   	push   %rbp
   29edd:	48 89 e5             	mov    %rsp,%rbp
   29ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   29ee4:	89 75 f4             	mov    %esi,-0xc(%rbp)
   29ee7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   29eeb:	89 4d f0             	mov    %ecx,-0x10(%rbp)
   29eee:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   29ef3:	5d                   	pop    %rbp
   29ef4:	c3                   	retq   

0000000000029ef5 <_ULx86_64_stash_frame>:
   29ef5:	55                   	push   %rbp
   29ef6:	48 89 e5             	mov    %rsp,%rbp
   29ef9:	48 83 ec 50          	sub    $0x50,%rsp
   29efd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   29f01:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   29f05:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   29f0c:	00 00 
   29f0e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   29f12:	31 c0                	xor    %eax,%eax
   29f14:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   29f18:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   29f1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   29f20:	48 05 a8 01 00 00    	add    $0x1a8,%rax
   29f26:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   29f2a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29f2e:	0f b6 40 19          	movzbl 0x19(%rax),%eax
   29f32:	3c 04                	cmp    $0x4,%al
   29f34:	0f 85 9f 00 00 00    	jne    29fd9 <_ULx86_64_stash_frame+0xe4>
   29f3a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29f3e:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
   29f42:	3c 04                	cmp    $0x4,%al
   29f44:	0f 85 8f 00 00 00    	jne    29fd9 <_ULx86_64_stash_frame+0xe4>
   29f4a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29f4e:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   29f55:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   29f59:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29f5d:	48 8b 40 50          	mov    0x50(%rax),%rax
   29f61:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   29f65:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   29f69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   29f6d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   29f71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   29f75:	48 89 c7             	mov    %rax,%rdi
   29f78:	e8 8e 08 00 00       	callq  2a80b <_ULx86_64_dwarf_stack_aligned>
   29f7d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29f80:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   29f84:	74 53                	je     29fd9 <_ULx86_64_stash_frame+0xe4>
   29f86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29f8a:	0f b6 50 08          	movzbl 0x8(%rax),%edx
   29f8e:	83 e2 f8             	and    $0xfffffff8,%edx
   29f91:	83 ca 05             	or     $0x5,%edx
   29f94:	88 50 08             	mov    %dl,0x8(%rax)
   29f97:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29f9b:	c1 e0 03             	shl    $0x3,%eax
   29f9e:	c1 f8 03             	sar    $0x3,%eax
   29fa1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   29fa5:	89 c0                	mov    %eax,%eax
   29fa7:	25 ff ff ff 1f       	and    $0x1fffffff,%eax
   29fac:	48 c1 e0 05          	shl    $0x5,%rax
   29fb0:	48 89 c6             	mov    %rax,%rsi
   29fb3:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   29fb7:	48 b8 1f 00 00 00 fc 	movabs $0xfffffffc0000001f,%rax
   29fbe:	ff ff ff 
   29fc1:	48 21 c8             	and    %rcx,%rax
   29fc4:	48 09 f0             	or     %rsi,%rax
   29fc7:	48 89 42 08          	mov    %rax,0x8(%rdx)
   29fcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29fcf:	0f b6 50 08          	movzbl 0x8(%rax),%edx
   29fd3:	83 e2 ef             	and    $0xffffffef,%edx
   29fd6:	88 50 08             	mov    %dl,0x8(%rax)
   29fd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29fdd:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   29fe1:	83 e0 07             	and    $0x7,%eax
   29fe4:	84 c0                	test   %al,%al
   29fe6:	0f 85 1a 02 00 00    	jne    2a206 <_ULx86_64_stash_frame+0x311>
   29fec:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29ff0:	0f b6 40 19          	movzbl 0x19(%rax),%eax
   29ff4:	3c 03                	cmp    $0x3,%al
   29ff6:	0f 85 0a 02 00 00    	jne    2a206 <_ULx86_64_stash_frame+0x311>
   29ffc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a000:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   2a007:	48 83 f8 06          	cmp    $0x6,%rax
   2a00b:	74 15                	je     2a022 <_ULx86_64_stash_frame+0x12d>
   2a00d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a011:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   2a018:	48 83 f8 07          	cmp    $0x7,%rax
   2a01c:	0f 85 e4 01 00 00    	jne    2a206 <_ULx86_64_stash_frame+0x311>
   2a022:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a026:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
   2a02d:	48 89 c7             	mov    %rax,%rdi
   2a030:	e8 58 06 01 00       	callq  3a68d <labs>
   2a035:	48 3d ff ff ff 0f    	cmp    $0xfffffff,%rax
   2a03b:	0f 8f c5 01 00 00    	jg     2a206 <_ULx86_64_stash_frame+0x311>
   2a041:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a045:	48 8b 10             	mov    (%rax),%rdx
   2a048:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a04c:	48 83 c2 04          	add    $0x4,%rdx
   2a050:	48 c1 e2 04          	shl    $0x4,%rdx
   2a054:	48 01 d0             	add    %rdx,%rax
   2a057:	48 8b 10             	mov    (%rax),%rdx
   2a05a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a05e:	48 8b 40 10          	mov    0x10(%rax),%rax
   2a062:	48 83 e8 08          	sub    $0x8,%rax
   2a066:	48 39 c2             	cmp    %rax,%rdx
   2a069:	0f 85 97 01 00 00    	jne    2a206 <_ULx86_64_stash_frame+0x311>
   2a06f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a073:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
   2a077:	84 c0                	test   %al,%al
   2a079:	74 4a                	je     2a0c5 <_ULx86_64_stash_frame+0x1d0>
   2a07b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a07f:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
   2a083:	3c 01                	cmp    $0x1,%al
   2a085:	74 3e                	je     2a0c5 <_ULx86_64_stash_frame+0x1d0>
   2a087:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a08b:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
   2a08f:	3c 02                	cmp    $0x2,%al
   2a091:	0f 85 6f 01 00 00    	jne    2a206 <_ULx86_64_stash_frame+0x311>
   2a097:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a09b:	48 8b 40 50          	mov    0x50(%rax),%rax
   2a09f:	48 89 c7             	mov    %rax,%rdi
   2a0a2:	e8 e6 05 01 00       	callq  3a68d <labs>
   2a0a7:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   2a0ad:	0f 8f 53 01 00 00    	jg     2a206 <_ULx86_64_stash_frame+0x311>
   2a0b3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a0b7:	48 8b 40 50          	mov    0x50(%rax),%rax
   2a0bb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2a0bf:	0f 84 41 01 00 00    	je     2a206 <_ULx86_64_stash_frame+0x311>
   2a0c5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a0c9:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
   2a0cd:	84 c0                	test   %al,%al
   2a0cf:	74 4a                	je     2a11b <_ULx86_64_stash_frame+0x226>
   2a0d1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a0d5:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
   2a0d9:	3c 01                	cmp    $0x1,%al
   2a0db:	74 3e                	je     2a11b <_ULx86_64_stash_frame+0x226>
   2a0dd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a0e1:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
   2a0e5:	3c 02                	cmp    $0x2,%al
   2a0e7:	0f 85 19 01 00 00    	jne    2a206 <_ULx86_64_stash_frame+0x311>
   2a0ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a0f1:	48 8b 40 58          	mov    0x58(%rax),%rax
   2a0f5:	48 89 c7             	mov    %rax,%rdi
   2a0f8:	e8 90 05 01 00       	callq  3a68d <labs>
   2a0fd:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   2a103:	0f 8f fd 00 00 00    	jg     2a206 <_ULx86_64_stash_frame+0x311>
   2a109:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a10d:	48 8b 40 58          	mov    0x58(%rax),%rax
   2a111:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2a115:	0f 84 eb 00 00 00    	je     2a206 <_ULx86_64_stash_frame+0x311>
   2a11b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a11f:	0f b6 50 08          	movzbl 0x8(%rax),%edx
   2a123:	83 e2 f8             	and    $0xfffffff8,%edx
   2a126:	83 ca 06             	or     $0x6,%edx
   2a129:	88 50 08             	mov    %dl,0x8(%rax)
   2a12c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a130:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   2a137:	48 83 f8 07          	cmp    $0x7,%rax
   2a13b:	0f 94 c0             	sete   %al
   2a13e:	c1 e0 07             	shl    $0x7,%eax
   2a141:	c0 f8 07             	sar    $0x7,%al
   2a144:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2a148:	83 e0 01             	and    $0x1,%eax
   2a14b:	c1 e0 04             	shl    $0x4,%eax
   2a14e:	89 c1                	mov    %eax,%ecx
   2a150:	0f b6 42 08          	movzbl 0x8(%rdx),%eax
   2a154:	83 e0 ef             	and    $0xffffffef,%eax
   2a157:	09 c8                	or     %ecx,%eax
   2a159:	88 42 08             	mov    %al,0x8(%rdx)
   2a15c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a160:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
   2a167:	c1 e0 03             	shl    $0x3,%eax
   2a16a:	c1 f8 03             	sar    $0x3,%eax
   2a16d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2a171:	89 c0                	mov    %eax,%eax
   2a173:	25 ff ff ff 1f       	and    $0x1fffffff,%eax
   2a178:	48 c1 e0 05          	shl    $0x5,%rax
   2a17c:	48 89 c6             	mov    %rax,%rsi
   2a17f:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   2a183:	48 b8 1f 00 00 00 fc 	movabs $0xfffffffc0000001f,%rax
   2a18a:	ff ff ff 
   2a18d:	48 21 c8             	and    %rcx,%rax
   2a190:	48 09 f0             	or     %rsi,%rax
   2a193:	48 89 42 08          	mov    %rax,0x8(%rdx)
   2a197:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a19b:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
   2a19f:	3c 02                	cmp    $0x2,%al
   2a1a1:	75 2d                	jne    2a1d0 <_ULx86_64_stash_frame+0x2db>
   2a1a3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a1a7:	48 8b 40 50          	mov    0x50(%rax),%rax
   2a1ab:	01 c0                	add    %eax,%eax
   2a1ad:	66 d1 f8             	sar    %ax
   2a1b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2a1b4:	0f b7 c0             	movzwl %ax,%eax
   2a1b7:	25 ff 7f 00 00       	and    $0x7fff,%eax
   2a1bc:	8d 0c 85 00 00 00 00 	lea    0x0(,%rax,4),%ecx
   2a1c3:	8b 42 0c             	mov    0xc(%rdx),%eax
   2a1c6:	25 03 00 fe ff       	and    $0xfffe0003,%eax
   2a1cb:	09 c8                	or     %ecx,%eax
   2a1cd:	89 42 0c             	mov    %eax,0xc(%rdx)
   2a1d0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a1d4:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
   2a1d8:	3c 02                	cmp    $0x2,%al
   2a1da:	0f 85 e8 00 00 00    	jne    2a2c8 <_ULx86_64_stash_frame+0x3d3>
   2a1e0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a1e4:	48 8b 40 58          	mov    0x58(%rax),%rax
   2a1e8:	01 c0                	add    %eax,%eax
   2a1ea:	66 d1 f8             	sar    %ax
   2a1ed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2a1f1:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   2a1f4:	0f b7 42 0e          	movzwl 0xe(%rdx),%eax
   2a1f8:	83 e0 01             	and    $0x1,%eax
   2a1fb:	09 c8                	or     %ecx,%eax
   2a1fd:	66 89 42 0e          	mov    %ax,0xe(%rdx)
   2a201:	e9 c2 00 00 00       	jmpq   2a2c8 <_ULx86_64_stash_frame+0x3d3>
   2a206:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a20a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   2a20e:	83 e0 07             	and    $0x7,%eax
   2a211:	3c 07                	cmp    $0x7,%al
   2a213:	0f 85 af 00 00 00    	jne    2a2c8 <_ULx86_64_stash_frame+0x3d3>
   2a219:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a21d:	48 8b 80 c0 01 00 00 	mov    0x1c0(%rax),%rax
   2a224:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a228:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a22c:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   2a233:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   2a237:	48 3d a8 00 00 00    	cmp    $0xa8,%rax
   2a23d:	74 1f                	je     2a25e <_ULx86_64_stash_frame+0x369>
   2a23f:	48 8d 0d 5a 3a 01 00 	lea    0x13a5a(%rip),%rcx        # 3dca0 <__PRETTY_FUNCTION__.4907>
   2a246:	ba 68 00 00 00       	mov    $0x68,%edx
   2a24b:	48 8d 35 76 39 01 00 	lea    0x13976(%rip),%rsi        # 3dbc8 <__PRETTY_FUNCTION__.4821+0x10>
   2a252:	48 8d 3d 87 39 01 00 	lea    0x13987(%rip),%rdi        # 3dbe0 <__PRETTY_FUNCTION__.4821+0x28>
   2a259:	e8 91 b2 ff ff       	callq  254ef <__assert_fail>
   2a25e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a262:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   2a269:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   2a26d:	48 83 f8 78          	cmp    $0x78,%rax
   2a271:	74 1f                	je     2a292 <_ULx86_64_stash_frame+0x39d>
   2a273:	48 8d 0d 26 3a 01 00 	lea    0x13a26(%rip),%rcx        # 3dca0 <__PRETTY_FUNCTION__.4907>
   2a27a:	ba 69 00 00 00       	mov    $0x69,%edx
   2a27f:	48 8d 35 42 39 01 00 	lea    0x13942(%rip),%rsi        # 3dbc8 <__PRETTY_FUNCTION__.4821+0x10>
   2a286:	48 8d 3d 93 39 01 00 	lea    0x13993(%rip),%rdi        # 3dc20 <__PRETTY_FUNCTION__.4821+0x68>
   2a28d:	e8 5d b2 ff ff       	callq  254ef <__assert_fail>
   2a292:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a296:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
   2a29d:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   2a2a1:	48 3d a0 00 00 00    	cmp    $0xa0,%rax
   2a2a7:	74 1f                	je     2a2c8 <_ULx86_64_stash_frame+0x3d3>
   2a2a9:	48 8d 0d f0 39 01 00 	lea    0x139f0(%rip),%rcx        # 3dca0 <__PRETTY_FUNCTION__.4907>
   2a2b0:	ba 6a 00 00 00       	mov    $0x6a,%edx
   2a2b5:	48 8d 35 0c 39 01 00 	lea    0x1390c(%rip),%rsi        # 3dbc8 <__PRETTY_FUNCTION__.4821+0x10>
   2a2bc:	48 8d 3d 9d 39 01 00 	lea    0x1399d(%rip),%rdi        # 3dc60 <__PRETTY_FUNCTION__.4821+0xa8>
   2a2c3:	e8 27 b2 ff ff       	callq  254ef <__assert_fail>
   2a2c8:	90                   	nop
   2a2c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a2cd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2a2d4:	00 00 
   2a2d6:	74 05                	je     2a2dd <_ULx86_64_stash_frame+0x3e8>
   2a2d8:	e8 af 11 fe ff       	callq  b48c <__stack_chk_fail>
   2a2dd:	c9                   	leaveq 
   2a2de:	c3                   	retq   

000000000002a2df <dwarf_readu8>:
   2a2df:	55                   	push   %rbp
   2a2e0:	48 89 e5             	mov    %rsp,%rbp
   2a2e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a2e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2a2eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2a2ef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2a2f3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2a2f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a2fb:	48 8b 00             	mov    (%rax),%rax
   2a2fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a306:	0f b6 10             	movzbl (%rax),%edx
   2a309:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a30d:	88 10                	mov    %dl,(%rax)
   2a30f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a313:	48 8b 00             	mov    (%rax),%rax
   2a316:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a31a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a31e:	48 89 10             	mov    %rdx,(%rax)
   2a321:	b8 00 00 00 00       	mov    $0x0,%eax
   2a326:	5d                   	pop    %rbp
   2a327:	c3                   	retq   

000000000002a328 <dwarf_readu16>:
   2a328:	55                   	push   %rbp
   2a329:	48 89 e5             	mov    %rsp,%rbp
   2a32c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a330:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2a334:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2a338:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2a33c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2a340:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a344:	48 8b 00             	mov    (%rax),%rax
   2a347:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a34b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a34f:	0f b7 10             	movzwl (%rax),%edx
   2a352:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a356:	66 89 10             	mov    %dx,(%rax)
   2a359:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a35d:	48 8b 00             	mov    (%rax),%rax
   2a360:	48 8d 50 02          	lea    0x2(%rax),%rdx
   2a364:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a368:	48 89 10             	mov    %rdx,(%rax)
   2a36b:	b8 00 00 00 00       	mov    $0x0,%eax
   2a370:	5d                   	pop    %rbp
   2a371:	c3                   	retq   

000000000002a372 <dwarf_readu32>:
   2a372:	55                   	push   %rbp
   2a373:	48 89 e5             	mov    %rsp,%rbp
   2a376:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a37a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2a37e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2a382:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2a386:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2a38a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a38e:	48 8b 00             	mov    (%rax),%rax
   2a391:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a399:	8b 10                	mov    (%rax),%edx
   2a39b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a39f:	89 10                	mov    %edx,(%rax)
   2a3a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a3a5:	48 8b 00             	mov    (%rax),%rax
   2a3a8:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2a3ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a3b0:	48 89 10             	mov    %rdx,(%rax)
   2a3b3:	b8 00 00 00 00       	mov    $0x0,%eax
   2a3b8:	5d                   	pop    %rbp
   2a3b9:	c3                   	retq   

000000000002a3ba <dwarf_readu64>:
   2a3ba:	55                   	push   %rbp
   2a3bb:	48 89 e5             	mov    %rsp,%rbp
   2a3be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a3c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2a3c6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2a3ca:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2a3ce:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2a3d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a3d6:	48 8b 00             	mov    (%rax),%rax
   2a3d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a3e1:	48 8b 10             	mov    (%rax),%rdx
   2a3e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a3e8:	48 89 10             	mov    %rdx,(%rax)
   2a3eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a3ef:	48 8b 00             	mov    (%rax),%rax
   2a3f2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2a3f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a3fa:	48 89 10             	mov    %rdx,(%rax)
   2a3fd:	b8 00 00 00 00       	mov    $0x0,%eax
   2a402:	5d                   	pop    %rbp
   2a403:	c3                   	retq   

000000000002a404 <dwarf_readw>:
   2a404:	55                   	push   %rbp
   2a405:	48 89 e5             	mov    %rsp,%rbp
   2a408:	48 83 ec 50          	sub    $0x50,%rsp
   2a40c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a410:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2a414:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2a418:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2a41c:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2a420:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a427:	00 00 
   2a429:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a42d:	31 c0                	xor    %eax,%eax
   2a42f:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2a433:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
   2a437:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a43b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a43f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a443:	49 89 f8             	mov    %rdi,%r8
   2a446:	48 89 c7             	mov    %rax,%rdi
   2a449:	e8 6c ff ff ff       	callq  2a3ba <dwarf_readu64>
   2a44e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a451:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2a455:	79 05                	jns    2a45c <dwarf_readw+0x58>
   2a457:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a45a:	eb 0e                	jmp    2a46a <dwarf_readw+0x66>
   2a45c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2a460:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2a464:	48 89 10             	mov    %rdx,(%rax)
   2a467:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a46a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2a46e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2a475:	00 00 
   2a477:	74 05                	je     2a47e <dwarf_readw+0x7a>
   2a479:	e8 0e 10 fe ff       	callq  b48c <__stack_chk_fail>
   2a47e:	c9                   	leaveq 
   2a47f:	c3                   	retq   

000000000002a480 <dwarf_read_uleb128>:
   2a480:	55                   	push   %rbp
   2a481:	48 89 e5             	mov    %rsp,%rbp
   2a484:	48 83 ec 50          	sub    $0x50,%rsp
   2a488:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a48c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2a490:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2a494:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2a498:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2a49c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a4a3:	00 00 
   2a4a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a4a9:	31 c0                	xor    %eax,%eax
   2a4ab:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2a4b2:	00 
   2a4b3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2a4ba:	00 
   2a4bb:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2a4bf:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   2a4c3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a4c7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a4cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a4cf:	49 89 f8             	mov    %rdi,%r8
   2a4d2:	48 89 c7             	mov    %rax,%rdi
   2a4d5:	e8 05 fe ff ff       	callq  2a2df <dwarf_readu8>
   2a4da:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2a4dd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2a4e1:	79 05                	jns    2a4e8 <dwarf_read_uleb128+0x68>
   2a4e3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a4e6:	eb 3a                	jmp    2a522 <dwarf_read_uleb128+0xa2>
   2a4e8:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2a4ec:	0f b6 c0             	movzbl %al,%eax
   2a4ef:	83 e0 7f             	and    $0x7f,%eax
   2a4f2:	48 89 c2             	mov    %rax,%rdx
   2a4f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a4f9:	89 c1                	mov    %eax,%ecx
   2a4fb:	48 d3 e2             	shl    %cl,%rdx
   2a4fe:	48 89 d0             	mov    %rdx,%rax
   2a501:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2a505:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   2a50a:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2a50e:	84 c0                	test   %al,%al
   2a510:	78 a9                	js     2a4bb <dwarf_read_uleb128+0x3b>
   2a512:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2a516:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a51a:	48 89 10             	mov    %rdx,(%rax)
   2a51d:	b8 00 00 00 00       	mov    $0x0,%eax
   2a522:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2a526:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2a52d:	00 00 
   2a52f:	74 05                	je     2a536 <dwarf_read_uleb128+0xb6>
   2a531:	e8 56 0f fe ff       	callq  b48c <__stack_chk_fail>
   2a536:	c9                   	leaveq 
   2a537:	c3                   	retq   

000000000002a538 <dwarf_read_sleb128>:
   2a538:	55                   	push   %rbp
   2a539:	48 89 e5             	mov    %rsp,%rbp
   2a53c:	48 83 ec 50          	sub    $0x50,%rsp
   2a540:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a544:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2a548:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2a54c:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2a550:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2a554:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a55b:	00 00 
   2a55d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a561:	31 c0                	xor    %eax,%eax
   2a563:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2a56a:	00 
   2a56b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2a572:	00 
   2a573:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2a577:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   2a57b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a57f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a583:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a587:	49 89 f8             	mov    %rdi,%r8
   2a58a:	48 89 c7             	mov    %rax,%rdi
   2a58d:	e8 4d fd ff ff       	callq  2a2df <dwarf_readu8>
   2a592:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2a595:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2a599:	79 05                	jns    2a5a0 <dwarf_read_sleb128+0x68>
   2a59b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a59e:	eb 66                	jmp    2a606 <dwarf_read_sleb128+0xce>
   2a5a0:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2a5a4:	0f b6 c0             	movzbl %al,%eax
   2a5a7:	83 e0 7f             	and    $0x7f,%eax
   2a5aa:	48 89 c2             	mov    %rax,%rdx
   2a5ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a5b1:	89 c1                	mov    %eax,%ecx
   2a5b3:	48 d3 e2             	shl    %cl,%rdx
   2a5b6:	48 89 d0             	mov    %rdx,%rax
   2a5b9:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2a5bd:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   2a5c2:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2a5c6:	84 c0                	test   %al,%al
   2a5c8:	78 a9                	js     2a573 <dwarf_read_sleb128+0x3b>
   2a5ca:	48 83 7d f0 3f       	cmpq   $0x3f,-0x10(%rbp)
   2a5cf:	77 25                	ja     2a5f6 <dwarf_read_sleb128+0xbe>
   2a5d1:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2a5d5:	0f b6 c0             	movzbl %al,%eax
   2a5d8:	83 e0 40             	and    $0x40,%eax
   2a5db:	85 c0                	test   %eax,%eax
   2a5dd:	74 17                	je     2a5f6 <dwarf_read_sleb128+0xbe>
   2a5df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a5e3:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2a5ea:	89 c1                	mov    %eax,%ecx
   2a5ec:	48 d3 e2             	shl    %cl,%rdx
   2a5ef:	48 89 d0             	mov    %rdx,%rax
   2a5f2:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2a5f6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2a5fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a5fe:	48 89 10             	mov    %rdx,(%rax)
   2a601:	b8 00 00 00 00       	mov    $0x0,%eax
   2a606:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2a60a:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2a611:	00 00 
   2a613:	74 05                	je     2a61a <dwarf_read_sleb128+0xe2>
   2a615:	e8 72 0e fe ff       	callq  b48c <__stack_chk_fail>
   2a61a:	c9                   	leaveq 
   2a61b:	c3                   	retq   

000000000002a61c <sword>:
   2a61c:	55                   	push   %rbp
   2a61d:	48 89 e5             	mov    %rsp,%rbp
   2a620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2a624:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2a628:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a62c:	5d                   	pop    %rbp
   2a62d:	c3                   	retq   

000000000002a62e <read_operand>:
   2a62e:	55                   	push   %rbp
   2a62f:	48 89 e5             	mov    %rsp,%rbp
   2a632:	48 83 ec 50          	sub    $0x50,%rsp
   2a636:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a63a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2a63e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2a642:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
   2a645:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2a649:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
   2a64d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a654:	00 00 
   2a656:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a65a:	31 c0                	xor    %eax,%eax
   2a65c:	83 7d c4 07          	cmpl   $0x7,-0x3c(%rbp)
   2a660:	75 08                	jne    2a66a <read_operand+0x3c>
   2a662:	c7 45 c4 03 00 00 00 	movl   $0x3,-0x3c(%rbp)
   2a669:	90                   	nop
   2a66a:	83 7d c4 05          	cmpl   $0x5,-0x3c(%rbp)
   2a66e:	0f 87 75 01 00 00    	ja     2a7e9 <read_operand+0x1bb>
   2a674:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2a677:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2a67e:	00 
   2a67f:	48 8d 05 3a 37 01 00 	lea    0x1373a(%rip),%rax        # 3ddc0 <operands+0x100>
   2a686:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2a689:	48 63 d0             	movslq %eax,%rdx
   2a68c:	48 8d 05 2d 37 01 00 	lea    0x1372d(%rip),%rax        # 3ddc0 <operands+0x100>
   2a693:	48 01 d0             	add    %rdx,%rax
   2a696:	ff e0                	jmpq   *%rax
   2a698:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2a69c:	48 8d 4d e5          	lea    -0x1b(%rbp),%rcx
   2a6a0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a6a4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a6a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a6ac:	49 89 f8             	mov    %rdi,%r8
   2a6af:	48 89 c7             	mov    %rax,%rdi
   2a6b2:	e8 28 fc ff ff       	callq  2a2df <dwarf_readu8>
   2a6b7:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a6ba:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2a6be:	79 0a                	jns    2a6ca <read_operand+0x9c>
   2a6c0:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a6c3:	48 98                	cltq   
   2a6c5:	e9 2b 01 00 00       	jmpq   2a7f5 <read_operand+0x1c7>
   2a6ca:	0f b6 45 e5          	movzbl -0x1b(%rbp),%eax
   2a6ce:	0f b6 d0             	movzbl %al,%edx
   2a6d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a6d5:	48 89 10             	mov    %rdx,(%rax)
   2a6d8:	e9 13 01 00 00       	jmpq   2a7f0 <read_operand+0x1c2>
   2a6dd:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2a6e1:	48 8d 4d e6          	lea    -0x1a(%rbp),%rcx
   2a6e5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a6e9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a6ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a6f1:	49 89 f8             	mov    %rdi,%r8
   2a6f4:	48 89 c7             	mov    %rax,%rdi
   2a6f7:	e8 2c fc ff ff       	callq  2a328 <dwarf_readu16>
   2a6fc:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a6ff:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2a703:	79 0a                	jns    2a70f <read_operand+0xe1>
   2a705:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a708:	48 98                	cltq   
   2a70a:	e9 e6 00 00 00       	jmpq   2a7f5 <read_operand+0x1c7>
   2a70f:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
   2a713:	0f b7 d0             	movzwl %ax,%edx
   2a716:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a71a:	48 89 10             	mov    %rdx,(%rax)
   2a71d:	e9 ce 00 00 00       	jmpq   2a7f0 <read_operand+0x1c2>
   2a722:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2a726:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   2a72a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a72e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a732:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a736:	49 89 f8             	mov    %rdi,%r8
   2a739:	48 89 c7             	mov    %rax,%rdi
   2a73c:	e8 31 fc ff ff       	callq  2a372 <dwarf_readu32>
   2a741:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a744:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2a748:	79 0a                	jns    2a754 <read_operand+0x126>
   2a74a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a74d:	48 98                	cltq   
   2a74f:	e9 a1 00 00 00       	jmpq   2a7f5 <read_operand+0x1c7>
   2a754:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2a757:	89 c2                	mov    %eax,%edx
   2a759:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a75d:	48 89 10             	mov    %rdx,(%rax)
   2a760:	e9 8b 00 00 00       	jmpq   2a7f0 <read_operand+0x1c2>
   2a765:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2a769:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
   2a76d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a771:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a775:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a779:	49 89 f8             	mov    %rdi,%r8
   2a77c:	48 89 c7             	mov    %rax,%rdi
   2a77f:	e8 36 fc ff ff       	callq  2a3ba <dwarf_readu64>
   2a784:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a787:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2a78b:	79 07                	jns    2a794 <read_operand+0x166>
   2a78d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a790:	48 98                	cltq   
   2a792:	eb 61                	jmp    2a7f5 <read_operand+0x1c7>
   2a794:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2a798:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a79c:	48 89 10             	mov    %rdx,(%rax)
   2a79f:	eb 4f                	jmp    2a7f0 <read_operand+0x1c2>
   2a7a1:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2a7a5:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   2a7a9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a7ad:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a7b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a7b5:	49 89 f8             	mov    %rdi,%r8
   2a7b8:	48 89 c7             	mov    %rax,%rdi
   2a7bb:	e8 c0 fc ff ff       	callq  2a480 <dwarf_read_uleb128>
   2a7c0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a7c3:	eb 2b                	jmp    2a7f0 <read_operand+0x1c2>
   2a7c5:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2a7c9:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   2a7cd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2a7d1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2a7d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a7d9:	49 89 f8             	mov    %rdi,%r8
   2a7dc:	48 89 c7             	mov    %rax,%rdi
   2a7df:	e8 54 fd ff ff       	callq  2a538 <dwarf_read_sleb128>
   2a7e4:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a7e7:	eb 07                	jmp    2a7f0 <read_operand+0x1c2>
   2a7e9:	c7 45 ec f8 ff ff ff 	movl   $0xfffffff8,-0x14(%rbp)
   2a7f0:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a7f3:	48 98                	cltq   
   2a7f5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2a7f9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2a800:	00 00 
   2a802:	74 05                	je     2a809 <read_operand+0x1db>
   2a804:	e8 83 0c fe ff       	callq  b48c <__stack_chk_fail>
   2a809:	c9                   	leaveq 
   2a80a:	c3                   	retq   

000000000002a80b <_ULx86_64_dwarf_stack_aligned>:
   2a80b:	55                   	push   %rbp
   2a80c:	48 89 e5             	mov    %rsp,%rbp
   2a80f:	48 83 ec 50          	sub    $0x50,%rsp
   2a813:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2a817:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2a81b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2a81f:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   2a823:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a82a:	00 00 
   2a82c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a830:	31 c0                	xor    %eax,%eax
   2a832:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a836:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a83a:	48 89 c7             	mov    %rax,%rdi
   2a83d:	e8 ca e4 ff ff       	callq  28d0c <_Ux86_64_get_accessors>
   2a842:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a846:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a84a:	48 8b 00             	mov    (%rax),%rax
   2a84d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a851:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a855:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a859:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   2a85d:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   2a861:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2a865:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2a869:	49 89 f8             	mov    %rdi,%r8
   2a86c:	48 89 c7             	mov    %rax,%rdi
   2a86f:	e8 0c fc ff ff       	callq  2a480 <dwarf_read_uleb128>
   2a874:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a877:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a87b:	48 83 f8 02          	cmp    $0x2,%rax
   2a87f:	75 06                	jne    2a887 <_ULx86_64_dwarf_stack_aligned+0x7c>
   2a881:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a885:	79 0a                	jns    2a891 <_ULx86_64_dwarf_stack_aligned+0x86>
   2a887:	b8 00 00 00 00       	mov    $0x0,%eax
   2a88c:	e9 bf 01 00 00       	jmpq   2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2a891:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a895:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a899:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   2a89d:	48 8d 4d d3          	lea    -0x2d(%rbp),%rcx
   2a8a1:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2a8a5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2a8a9:	49 89 f8             	mov    %rdi,%r8
   2a8ac:	48 89 c7             	mov    %rax,%rdi
   2a8af:	e8 2b fa ff ff       	callq  2a2df <dwarf_readu8>
   2a8b4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a8b7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a8bb:	78 08                	js     2a8c5 <_ULx86_64_dwarf_stack_aligned+0xba>
   2a8bd:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
   2a8c1:	3c 76                	cmp    $0x76,%al
   2a8c3:	74 0a                	je     2a8cf <_ULx86_64_dwarf_stack_aligned+0xc4>
   2a8c5:	b8 00 00 00 00       	mov    $0x0,%eax
   2a8ca:	e9 81 01 00 00       	jmpq   2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2a8cf:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
   2a8d3:	0f b6 c0             	movzbl %al,%eax
   2a8d6:	48 63 d0             	movslq %eax,%rdx
   2a8d9:	48 8d 05 e0 33 01 00 	lea    0x133e0(%rip),%rax        # 3dcc0 <operands>
   2a8e0:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2a8e4:	c0 e8 03             	shr    $0x3,%al
   2a8e7:	0f b6 c0             	movzbl %al,%eax
   2a8ea:	83 e0 07             	and    $0x7,%eax
   2a8ed:	89 c1                	mov    %eax,%ecx
   2a8ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a8f3:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a8f7:	4c 8b 45 f0          	mov    -0x10(%rbp),%r8
   2a8fb:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   2a8ff:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2a903:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2a907:	4d 89 c1             	mov    %r8,%r9
   2a90a:	49 89 f8             	mov    %rdi,%r8
   2a90d:	48 89 c7             	mov    %rax,%rdi
   2a910:	e8 19 fd ff ff       	callq  2a62e <read_operand>
   2a915:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a918:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a91c:	78 09                	js     2a927 <_ULx86_64_dwarf_stack_aligned+0x11c>
   2a91e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a922:	48 85 c0             	test   %rax,%rax
   2a925:	74 0a                	je     2a931 <_ULx86_64_dwarf_stack_aligned+0x126>
   2a927:	b8 00 00 00 00       	mov    $0x0,%eax
   2a92c:	e9 1f 01 00 00       	jmpq   2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2a931:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a935:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a939:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   2a93d:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   2a941:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   2a945:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2a949:	49 89 f8             	mov    %rdi,%r8
   2a94c:	48 89 c7             	mov    %rax,%rdi
   2a94f:	e8 2c fb ff ff       	callq  2a480 <dwarf_read_uleb128>
   2a954:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a957:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a95b:	78 0a                	js     2a967 <_ULx86_64_dwarf_stack_aligned+0x15c>
   2a95d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a961:	48 83 f8 03          	cmp    $0x3,%rax
   2a965:	74 0a                	je     2a971 <_ULx86_64_dwarf_stack_aligned+0x166>
   2a967:	b8 00 00 00 00       	mov    $0x0,%eax
   2a96c:	e9 df 00 00 00       	jmpq   2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2a971:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a975:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a979:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   2a97d:	48 8d 4d d3          	lea    -0x2d(%rbp),%rcx
   2a981:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   2a985:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2a989:	49 89 f8             	mov    %rdi,%r8
   2a98c:	48 89 c7             	mov    %rax,%rdi
   2a98f:	e8 4b f9 ff ff       	callq  2a2df <dwarf_readu8>
   2a994:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a997:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a99b:	78 08                	js     2a9a5 <_ULx86_64_dwarf_stack_aligned+0x19a>
   2a99d:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
   2a9a1:	3c 76                	cmp    $0x76,%al
   2a9a3:	74 0a                	je     2a9af <_ULx86_64_dwarf_stack_aligned+0x1a4>
   2a9a5:	b8 00 00 00 00       	mov    $0x0,%eax
   2a9aa:	e9 a1 00 00 00       	jmpq   2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2a9af:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
   2a9b3:	0f b6 c0             	movzbl %al,%eax
   2a9b6:	48 63 d0             	movslq %eax,%rdx
   2a9b9:	48 8d 05 00 33 01 00 	lea    0x13300(%rip),%rax        # 3dcc0 <operands>
   2a9c0:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2a9c4:	c0 e8 03             	shr    $0x3,%al
   2a9c7:	0f b6 c0             	movzbl %al,%eax
   2a9ca:	83 e0 07             	and    $0x7,%eax
   2a9cd:	89 c1                	mov    %eax,%ecx
   2a9cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a9d3:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a9d7:	4c 8b 45 f0          	mov    -0x10(%rbp),%r8
   2a9db:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   2a9df:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   2a9e3:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2a9e7:	4d 89 c1             	mov    %r8,%r9
   2a9ea:	49 89 f8             	mov    %rdi,%r8
   2a9ed:	48 89 c7             	mov    %rax,%rdi
   2a9f0:	e8 39 fc ff ff       	callq  2a62e <read_operand>
   2a9f5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a9f8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a9fc:	79 07                	jns    2aa05 <_ULx86_64_dwarf_stack_aligned+0x1fa>
   2a9fe:	b8 00 00 00 00       	mov    $0x0,%eax
   2aa03:	eb 4b                	jmp    2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2aa05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2aa09:	48 8b 40 08          	mov    0x8(%rax),%rax
   2aa0d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   2aa11:	48 8d 4d d3          	lea    -0x2d(%rbp),%rcx
   2aa15:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   2aa19:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2aa1d:	49 89 f8             	mov    %rdi,%r8
   2aa20:	48 89 c7             	mov    %rax,%rdi
   2aa23:	e8 b7 f8 ff ff       	callq  2a2df <dwarf_readu8>
   2aa28:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2aa2b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2aa2f:	78 08                	js     2aa39 <_ULx86_64_dwarf_stack_aligned+0x22e>
   2aa31:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
   2aa35:	3c 06                	cmp    $0x6,%al
   2aa37:	74 07                	je     2aa40 <_ULx86_64_dwarf_stack_aligned+0x235>
   2aa39:	b8 00 00 00 00       	mov    $0x0,%eax
   2aa3e:	eb 10                	jmp    2aa50 <_ULx86_64_dwarf_stack_aligned+0x245>
   2aa40:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2aa44:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2aa48:	48 89 10             	mov    %rdx,(%rax)
   2aa4b:	b8 01 00 00 00       	mov    $0x1,%eax
   2aa50:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2aa54:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2aa5b:	00 00 
   2aa5d:	74 05                	je     2aa64 <_ULx86_64_dwarf_stack_aligned+0x259>
   2aa5f:	e8 28 0a fe ff       	callq  b48c <__stack_chk_fail>
   2aa64:	c9                   	leaveq 
   2aa65:	c3                   	retq   

000000000002aa66 <_ULx86_64_dwarf_eval_expr>:
   2aa66:	55                   	push   %rbp
   2aa67:	48 89 e5             	mov    %rsp,%rbp
   2aa6a:	53                   	push   %rbx
   2aa6b:	48 81 ec f8 03 00 00 	sub    $0x3f8,%rsp
   2aa72:	48 89 bd 28 fc ff ff 	mov    %rdi,-0x3d8(%rbp)
   2aa79:	48 89 b5 20 fc ff ff 	mov    %rsi,-0x3e0(%rbp)
   2aa80:	48 89 95 18 fc ff ff 	mov    %rdx,-0x3e8(%rbp)
   2aa87:	48 89 8d 10 fc ff ff 	mov    %rcx,-0x3f0(%rbp)
   2aa8e:	4c 89 85 08 fc ff ff 	mov    %r8,-0x3f8(%rbp)
   2aa95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2aa9c:	00 00 
   2aa9e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2aaa2:	31 c0                	xor    %eax,%eax
   2aaa4:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
   2aaab:	00 00 00 00 
   2aaaf:	48 c7 85 60 fc ff ff 	movq   $0x0,-0x3a0(%rbp)
   2aab6:	00 00 00 00 
   2aaba:	48 c7 85 70 fc ff ff 	movq   $0x0,-0x390(%rbp)
   2aac1:	00 00 00 00 
   2aac5:	c7 85 44 fc ff ff 00 	movl   $0x0,-0x3bc(%rbp)
   2aacc:	00 00 00 
   2aacf:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
   2aad6:	48 8b 40 08          	mov    0x8(%rax),%rax
   2aada:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
   2aae1:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
   2aae8:	48 8b 00             	mov    (%rax),%rax
   2aaeb:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
   2aaf2:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2aaf9:	48 89 c7             	mov    %rax,%rdi
   2aafc:	e8 0b e2 ff ff       	callq  28d0c <_Ux86_64_get_accessors>
   2ab01:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
   2ab08:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
   2ab0f:	48 8b 10             	mov    (%rax),%rdx
   2ab12:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
   2ab19:	48 01 d0             	add    %rdx,%rax
   2ab1c:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
   2ab23:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
   2ab2a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2ab30:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
   2ab37:	48 8b 40 10          	mov    0x10(%rax),%rax
   2ab3b:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
   2ab42:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2ab49:	76 0a                	jbe    2ab55 <_ULx86_64_dwarf_eval_expr+0xef>
   2ab4b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ab50:	e9 74 1d 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ab55:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ab5b:	8d 50 01             	lea    0x1(%rax),%edx
   2ab5e:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2ab64:	89 c2                	mov    %eax,%edx
   2ab66:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
   2ab6d:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2ab74:	ff 
   2ab75:	e9 ff 1c 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2ab7a:	48 8b bd 88 fc ff ff 	mov    -0x378(%rbp),%rdi
   2ab81:	48 8d 8d 3b fc ff ff 	lea    -0x3c5(%rbp),%rcx
   2ab88:	48 8b 95 20 fc ff ff 	mov    -0x3e0(%rbp),%rdx
   2ab8f:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2ab96:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2ab9d:	49 89 f8             	mov    %rdi,%r8
   2aba0:	48 89 c7             	mov    %rax,%rdi
   2aba3:	e8 37 f7 ff ff       	callq  2a2df <dwarf_readu8>
   2aba8:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2abae:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2abb5:	79 0b                	jns    2abc2 <_ULx86_64_dwarf_eval_expr+0x15c>
   2abb7:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2abbd:	e9 07 1d 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2abc2:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2abc9:	0f b6 c0             	movzbl %al,%eax
   2abcc:	48 63 d0             	movslq %eax,%rdx
   2abcf:	48 8d 05 ea 30 01 00 	lea    0x130ea(%rip),%rax        # 3dcc0 <operands>
   2abd6:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2abda:	88 85 3d fc ff ff    	mov    %al,-0x3c3(%rbp)
   2abe0:	0f b6 85 3d fc ff ff 	movzbl -0x3c3(%rbp),%eax
   2abe7:	c0 e8 06             	shr    $0x6,%al
   2abea:	0f b6 c0             	movzbl %al,%eax
   2abed:	83 e0 03             	and    $0x3,%eax
   2abf0:	85 c0                	test   %eax,%eax
   2abf2:	0f 9f c0             	setg   %al
   2abf5:	0f b6 c0             	movzbl %al,%eax
   2abf8:	48 85 c0             	test   %rax,%rax
   2abfb:	0f 84 c9 00 00 00    	je     2acca <_ULx86_64_dwarf_eval_expr+0x264>
   2ac01:	0f b6 85 3d fc ff ff 	movzbl -0x3c3(%rbp),%eax
   2ac08:	c0 e8 03             	shr    $0x3,%al
   2ac0b:	0f b6 c0             	movzbl %al,%eax
   2ac0e:	83 e0 07             	and    $0x7,%eax
   2ac11:	89 c1                	mov    %eax,%ecx
   2ac13:	4c 8b 85 88 fc ff ff 	mov    -0x378(%rbp),%r8
   2ac1a:	48 8d bd 58 fc ff ff 	lea    -0x3a8(%rbp),%rdi
   2ac21:	48 8b 95 20 fc ff ff 	mov    -0x3e0(%rbp),%rdx
   2ac28:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2ac2f:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2ac36:	4d 89 c1             	mov    %r8,%r9
   2ac39:	49 89 f8             	mov    %rdi,%r8
   2ac3c:	48 89 c7             	mov    %rax,%rdi
   2ac3f:	e8 ea f9 ff ff       	callq  2a62e <read_operand>
   2ac44:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2ac4a:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2ac51:	79 0b                	jns    2ac5e <_ULx86_64_dwarf_eval_expr+0x1f8>
   2ac53:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2ac59:	e9 6b 1c 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ac5e:	0f b6 85 3d fc ff ff 	movzbl -0x3c3(%rbp),%eax
   2ac65:	c0 e8 06             	shr    $0x6,%al
   2ac68:	0f b6 c0             	movzbl %al,%eax
   2ac6b:	83 e0 03             	and    $0x3,%eax
   2ac6e:	83 f8 01             	cmp    $0x1,%eax
   2ac71:	7e 57                	jle    2acca <_ULx86_64_dwarf_eval_expr+0x264>
   2ac73:	0f b6 85 3d fc ff ff 	movzbl -0x3c3(%rbp),%eax
   2ac7a:	83 e0 07             	and    $0x7,%eax
   2ac7d:	89 c1                	mov    %eax,%ecx
   2ac7f:	4c 8b 85 88 fc ff ff 	mov    -0x378(%rbp),%r8
   2ac86:	48 8d bd 60 fc ff ff 	lea    -0x3a0(%rbp),%rdi
   2ac8d:	48 8b 95 20 fc ff ff 	mov    -0x3e0(%rbp),%rdx
   2ac94:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2ac9b:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2aca2:	4d 89 c1             	mov    %r8,%r9
   2aca5:	49 89 f8             	mov    %rdi,%r8
   2aca8:	48 89 c7             	mov    %rax,%rdi
   2acab:	e8 7e f9 ff ff       	callq  2a62e <read_operand>
   2acb0:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2acb6:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2acbd:	79 0b                	jns    2acca <_ULx86_64_dwarf_eval_expr+0x264>
   2acbf:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2acc5:	e9 ff 1b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2acca:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2acd1:	0f b6 c0             	movzbl %al,%eax
   2acd4:	83 e8 03             	sub    $0x3,%eax
   2acd7:	3d 93 00 00 00       	cmp    $0x93,%eax
   2acdc:	0f 87 90 1b 00 00    	ja     2c872 <_ULx86_64_dwarf_eval_expr+0x1e0c>
   2ace2:	89 c0                	mov    %eax,%eax
   2ace4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2aceb:	00 
   2acec:	48 8d 05 e5 30 01 00 	lea    0x130e5(%rip),%rax        # 3ddd8 <operands+0x118>
   2acf3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2acf6:	48 63 d0             	movslq %eax,%rdx
   2acf9:	48 8d 05 d8 30 01 00 	lea    0x130d8(%rip),%rax        # 3ddd8 <operands+0x118>
   2ad00:	48 01 d0             	add    %rdx,%rax
   2ad03:	ff e0                	jmpq   *%rax
   2ad05:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2ad0c:	0f b6 c0             	movzbl %al,%eax
   2ad0f:	83 e8 30             	sub    $0x30,%eax
   2ad12:	48 98                	cltq   
   2ad14:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
   2ad1b:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2ad22:	76 0a                	jbe    2ad2e <_ULx86_64_dwarf_eval_expr+0x2c8>
   2ad24:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ad29:	e9 9b 1b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ad2e:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ad34:	8d 50 01             	lea    0x1(%rax),%edx
   2ad37:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2ad3d:	89 c2                	mov    %eax,%edx
   2ad3f:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
   2ad46:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2ad4d:	ff 
   2ad4e:	e9 26 1b 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2ad53:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2ad5a:	0f b6 c0             	movzbl %al,%eax
   2ad5d:	83 e8 70             	sub    $0x70,%eax
   2ad60:	83 f8 10             	cmp    $0x10,%eax
   2ad63:	7f 20                	jg     2ad85 <_ULx86_64_dwarf_eval_expr+0x31f>
   2ad65:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2ad6c:	0f b6 c0             	movzbl %al,%eax
   2ad6f:	83 e8 70             	sub    $0x70,%eax
   2ad72:	48 63 d0             	movslq %eax,%rdx
   2ad75:	48 8d 05 74 2d 01 00 	lea    0x12d74(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   2ad7c:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2ad80:	0f b6 c0             	movzbl %al,%eax
   2ad83:	eb 05                	jmp    2ad8a <_ULx86_64_dwarf_eval_expr+0x324>
   2ad85:	b8 00 00 00 00       	mov    $0x0,%eax
   2ad8a:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2ad91:	48 8b 8d 28 fc ff ff 	mov    -0x3d8(%rbp),%rcx
   2ad98:	89 c6                	mov    %eax,%esi
   2ad9a:	48 89 cf             	mov    %rcx,%rdi
   2ad9d:	e8 d3 df ff ff       	callq  28d75 <_ULx86_64_get_reg>
   2ada2:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2ada8:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2adaf:	79 0b                	jns    2adbc <_ULx86_64_dwarf_eval_expr+0x356>
   2adb1:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2adb7:	e9 0d 1b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2adbc:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2adc3:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2adca:	48 01 d0             	add    %rdx,%rax
   2adcd:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
   2add4:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2addb:	76 0a                	jbe    2ade7 <_ULx86_64_dwarf_eval_expr+0x381>
   2addd:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ade2:	e9 e2 1a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ade7:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2aded:	8d 50 01             	lea    0x1(%rax),%edx
   2adf0:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2adf6:	89 c2                	mov    %eax,%edx
   2adf8:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
   2adff:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2ae06:	ff 
   2ae07:	e9 6d 1a 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2ae0c:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2ae13:	48 83 f8 10          	cmp    $0x10,%rax
   2ae17:	77 17                	ja     2ae30 <_ULx86_64_dwarf_eval_expr+0x3ca>
   2ae19:	48 8b 95 58 fc ff ff 	mov    -0x3a8(%rbp),%rdx
   2ae20:	48 8d 05 c9 2c 01 00 	lea    0x12cc9(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   2ae27:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2ae2b:	0f b6 c0             	movzbl %al,%eax
   2ae2e:	eb 05                	jmp    2ae35 <_ULx86_64_dwarf_eval_expr+0x3cf>
   2ae30:	b8 00 00 00 00       	mov    $0x0,%eax
   2ae35:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2ae3c:	48 8b 8d 28 fc ff ff 	mov    -0x3d8(%rbp),%rcx
   2ae43:	89 c6                	mov    %eax,%esi
   2ae45:	48 89 cf             	mov    %rcx,%rdi
   2ae48:	e8 28 df ff ff       	callq  28d75 <_ULx86_64_get_reg>
   2ae4d:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2ae53:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2ae5a:	79 0b                	jns    2ae67 <_ULx86_64_dwarf_eval_expr+0x401>
   2ae5c:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2ae62:	e9 62 1a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ae67:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2ae6e:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
   2ae75:	48 01 d0             	add    %rdx,%rax
   2ae78:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
   2ae7f:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2ae86:	76 0a                	jbe    2ae92 <_ULx86_64_dwarf_eval_expr+0x42c>
   2ae88:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ae8d:	e9 37 1a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ae92:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ae98:	8d 50 01             	lea    0x1(%rax),%edx
   2ae9b:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2aea1:	89 c2                	mov    %eax,%edx
   2aea3:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
   2aeaa:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2aeb1:	ff 
   2aeb2:	e9 c2 19 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2aeb7:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2aebe:	0f b6 c0             	movzbl %al,%eax
   2aec1:	83 e8 50             	sub    $0x50,%eax
   2aec4:	83 f8 10             	cmp    $0x10,%eax
   2aec7:	7f 20                	jg     2aee9 <_ULx86_64_dwarf_eval_expr+0x483>
   2aec9:	0f b6 85 3b fc ff ff 	movzbl -0x3c5(%rbp),%eax
   2aed0:	0f b6 c0             	movzbl %al,%eax
   2aed3:	83 e8 50             	sub    $0x50,%eax
   2aed6:	48 63 d0             	movslq %eax,%rdx
   2aed9:	48 8d 05 10 2c 01 00 	lea    0x12c10(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   2aee0:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2aee4:	0f b6 c0             	movzbl %al,%eax
   2aee7:	eb 05                	jmp    2aeee <_ULx86_64_dwarf_eval_expr+0x488>
   2aee9:	b8 00 00 00 00       	mov    $0x0,%eax
   2aeee:	48 8b 95 10 fc ff ff 	mov    -0x3f0(%rbp),%rdx
   2aef5:	48 89 02             	mov    %rax,(%rdx)
   2aef8:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
   2aeff:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2af05:	b8 00 00 00 00       	mov    $0x0,%eax
   2af0a:	e9 ba 19 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2af0f:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2af16:	48 83 f8 10          	cmp    $0x10,%rax
   2af1a:	77 17                	ja     2af33 <_ULx86_64_dwarf_eval_expr+0x4cd>
   2af1c:	48 8b 95 58 fc ff ff 	mov    -0x3a8(%rbp),%rdx
   2af23:	48 8d 05 c6 2b 01 00 	lea    0x12bc6(%rip),%rax        # 3daf0 <_ULx86_64_dwarf_to_unw_regnum_map>
   2af2a:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   2af2e:	0f b6 c0             	movzbl %al,%eax
   2af31:	eb 05                	jmp    2af38 <_ULx86_64_dwarf_eval_expr+0x4d2>
   2af33:	b8 00 00 00 00       	mov    $0x0,%eax
   2af38:	48 8b 95 10 fc ff ff 	mov    -0x3f0(%rbp),%rdx
   2af3f:	48 89 02             	mov    %rax,(%rdx)
   2af42:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
   2af49:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2af4f:	b8 00 00 00 00       	mov    $0x0,%eax
   2af54:	e9 70 19 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2af59:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2af60:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   2af67:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2af6e:	76 0a                	jbe    2af7a <_ULx86_64_dwarf_eval_expr+0x514>
   2af70:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2af75:	e9 4f 19 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2af7a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2af80:	8d 50 01             	lea    0x1(%rax),%edx
   2af83:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2af89:	89 c2                	mov    %eax,%edx
   2af8b:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   2af92:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2af99:	ff 
   2af9a:	e9 da 18 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2af9f:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2afa6:	25 80 00 00 00       	and    $0x80,%eax
   2afab:	48 85 c0             	test   %rax,%rax
   2afae:	74 14                	je     2afc4 <_ULx86_64_dwarf_eval_expr+0x55e>
   2afb0:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2afb7:	48 0d 00 ff ff ff    	or     $0xffffffffffffff00,%rax
   2afbd:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
   2afc4:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2afcb:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2afd2:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2afd9:	76 0a                	jbe    2afe5 <_ULx86_64_dwarf_eval_expr+0x57f>
   2afdb:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2afe0:	e9 e4 18 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2afe5:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2afeb:	8d 50 01             	lea    0x1(%rax),%edx
   2afee:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2aff4:	89 c2                	mov    %eax,%edx
   2aff6:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2affd:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b004:	ff 
   2b005:	e9 6f 18 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b00a:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b011:	25 00 80 00 00       	and    $0x8000,%eax
   2b016:	48 85 c0             	test   %rax,%rax
   2b019:	74 14                	je     2b02f <_ULx86_64_dwarf_eval_expr+0x5c9>
   2b01b:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b022:	48 0d 00 00 ff ff    	or     $0xffffffffffff0000,%rax
   2b028:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
   2b02f:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b036:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   2b03d:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b044:	76 0a                	jbe    2b050 <_ULx86_64_dwarf_eval_expr+0x5ea>
   2b046:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b04b:	e9 79 18 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b050:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b056:	8d 50 01             	lea    0x1(%rax),%edx
   2b059:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b05f:	89 c2                	mov    %eax,%edx
   2b061:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   2b068:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b06f:	ff 
   2b070:	e9 04 18 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b075:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b07c:	25 00 00 00 80       	and    $0x80000000,%eax
   2b081:	48 85 c0             	test   %rax,%rax
   2b084:	74 1b                	je     2b0a1 <_ULx86_64_dwarf_eval_expr+0x63b>
   2b086:	48 8b 95 58 fc ff ff 	mov    -0x3a8(%rbp),%rdx
   2b08d:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   2b094:	ff ff ff 
   2b097:	48 09 d0             	or     %rdx,%rax
   2b09a:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
   2b0a1:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b0a8:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
   2b0af:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b0b6:	76 0a                	jbe    2b0c2 <_ULx86_64_dwarf_eval_expr+0x65c>
   2b0b8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b0bd:	e9 07 18 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b0c2:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b0c8:	8d 50 01             	lea    0x1(%rax),%edx
   2b0cb:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b0d1:	89 c2                	mov    %eax,%edx
   2b0d3:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
   2b0da:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b0e1:	ff 
   2b0e2:	e9 92 17 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b0e7:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b0ed:	83 e8 01             	sub    $0x1,%eax
   2b0f0:	83 f8 3f             	cmp    $0x3f,%eax
   2b0f3:	76 0a                	jbe    2b0ff <_ULx86_64_dwarf_eval_expr+0x699>
   2b0f5:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b0fa:	e9 ca 17 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b0ff:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b106:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b10c:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b113:	ff 
   2b114:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b11b:	48 8b bd 88 fc ff ff 	mov    -0x378(%rbp),%rdi
   2b122:	48 8d 8d 70 fc ff ff 	lea    -0x390(%rbp),%rcx
   2b129:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2b130:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2b137:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b13e:	49 89 f8             	mov    %rdi,%r8
   2b141:	48 89 c7             	mov    %rax,%rdi
   2b144:	e8 bb f2 ff ff       	callq  2a404 <dwarf_readw>
   2b149:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2b14f:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2b156:	79 0b                	jns    2b163 <_ULx86_64_dwarf_eval_expr+0x6fd>
   2b158:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2b15e:	e9 66 17 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b163:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b16a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2b171:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b178:	76 0a                	jbe    2b184 <_ULx86_64_dwarf_eval_expr+0x71e>
   2b17a:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b17f:	e9 45 17 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b184:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b18a:	8d 50 01             	lea    0x1(%rax),%edx
   2b18d:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b193:	89 c2                	mov    %eax,%edx
   2b195:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2b19c:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b1a3:	ff 
   2b1a4:	e9 d0 16 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b1a9:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b1af:	83 e8 01             	sub    $0x1,%eax
   2b1b2:	83 f8 3f             	cmp    $0x3f,%eax
   2b1b5:	76 0a                	jbe    2b1c1 <_ULx86_64_dwarf_eval_expr+0x75b>
   2b1b7:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b1bc:	e9 08 17 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b1c1:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b1c8:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b1ce:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b1d5:	ff 
   2b1d6:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b1dd:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b1e4:	48 83 f8 08          	cmp    $0x8,%rax
   2b1e8:	77 21                	ja     2b20b <_ULx86_64_dwarf_eval_expr+0x7a5>
   2b1ea:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b1f1:	00 
   2b1f2:	48 8d 05 2f 2e 01 00 	lea    0x12e2f(%rip),%rax        # 3e028 <operands+0x368>
   2b1f9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2b1fc:	48 63 d0             	movslq %eax,%rdx
   2b1ff:	48 8d 05 22 2e 01 00 	lea    0x12e22(%rip),%rax        # 3e028 <operands+0x368>
   2b206:	48 01 d0             	add    %rdx,%rax
   2b209:	ff e0                	jmpq   *%rax
   2b20b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b210:	e9 b4 16 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b215:	48 8b bd 88 fc ff ff 	mov    -0x378(%rbp),%rdi
   2b21c:	48 8d 8d 3c fc ff ff 	lea    -0x3c4(%rbp),%rcx
   2b223:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2b22a:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2b231:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b238:	49 89 f8             	mov    %rdi,%r8
   2b23b:	48 89 c7             	mov    %rax,%rdi
   2b23e:	e8 9c f0 ff ff       	callq  2a2df <dwarf_readu8>
   2b243:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2b249:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2b250:	79 0b                	jns    2b25d <_ULx86_64_dwarf_eval_expr+0x7f7>
   2b252:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2b258:	e9 6c 16 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b25d:	0f b6 85 3c fc ff ff 	movzbl -0x3c4(%rbp),%eax
   2b264:	0f b6 c0             	movzbl %al,%eax
   2b267:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b26e:	e9 6e 01 00 00       	jmpq   2b3e1 <_ULx86_64_dwarf_eval_expr+0x97b>
   2b273:	48 8b bd 88 fc ff ff 	mov    -0x378(%rbp),%rdi
   2b27a:	48 8d 8d 3e fc ff ff 	lea    -0x3c2(%rbp),%rcx
   2b281:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2b288:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2b28f:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b296:	49 89 f8             	mov    %rdi,%r8
   2b299:	48 89 c7             	mov    %rax,%rdi
   2b29c:	e8 87 f0 ff ff       	callq  2a328 <dwarf_readu16>
   2b2a1:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2b2a7:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2b2ae:	79 0b                	jns    2b2bb <_ULx86_64_dwarf_eval_expr+0x855>
   2b2b0:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2b2b6:	e9 0e 16 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b2bb:	0f b7 85 3e fc ff ff 	movzwl -0x3c2(%rbp),%eax
   2b2c2:	0f b7 c0             	movzwl %ax,%eax
   2b2c5:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b2cc:	e9 10 01 00 00       	jmpq   2b3e1 <_ULx86_64_dwarf_eval_expr+0x97b>
   2b2d1:	48 8b bd 88 fc ff ff 	mov    -0x378(%rbp),%rdi
   2b2d8:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
   2b2df:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2b2e6:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2b2ed:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b2f4:	49 89 f8             	mov    %rdi,%r8
   2b2f7:	48 89 c7             	mov    %rax,%rdi
   2b2fa:	e8 73 f0 ff ff       	callq  2a372 <dwarf_readu32>
   2b2ff:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2b305:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2b30c:	79 0b                	jns    2b319 <_ULx86_64_dwarf_eval_expr+0x8b3>
   2b30e:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2b314:	e9 b0 15 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b319:	8b 85 40 fc ff ff    	mov    -0x3c0(%rbp),%eax
   2b31f:	89 c0                	mov    %eax,%eax
   2b321:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b328:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b32f:	48 83 f8 03          	cmp    $0x3,%rax
   2b333:	0f 85 a4 00 00 00    	jne    2b3dd <_ULx86_64_dwarf_eval_expr+0x977>
   2b339:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b340:	25 ff ff ff 00       	and    $0xffffff,%eax
   2b345:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b34c:	e9 8c 00 00 00       	jmpq   2b3dd <_ULx86_64_dwarf_eval_expr+0x977>
   2b351:	48 8b bd 88 fc ff ff 	mov    -0x378(%rbp),%rdi
   2b358:	48 8d 8d 78 fc ff ff 	lea    -0x388(%rbp),%rcx
   2b35f:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
   2b366:	48 8b b5 90 fc ff ff 	mov    -0x370(%rbp),%rsi
   2b36d:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b374:	49 89 f8             	mov    %rdi,%r8
   2b377:	48 89 c7             	mov    %rax,%rdi
   2b37a:	e8 3b f0 ff ff       	callq  2a3ba <dwarf_readu64>
   2b37f:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
   2b385:	83 bd 48 fc ff ff 00 	cmpl   $0x0,-0x3b8(%rbp)
   2b38c:	79 0b                	jns    2b399 <_ULx86_64_dwarf_eval_expr+0x933>
   2b38e:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
   2b394:	e9 30 15 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b399:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
   2b3a0:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b3a7:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b3ae:	48 83 f8 08          	cmp    $0x8,%rax
   2b3b2:	74 2c                	je     2b3e0 <_ULx86_64_dwarf_eval_expr+0x97a>
   2b3b4:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b3bb:	c1 e0 03             	shl    $0x3,%eax
   2b3be:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2b3c5:	89 c1                	mov    %eax,%ecx
   2b3c7:	48 d3 e2             	shl    %cl,%rdx
   2b3ca:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b3d1:	48 21 d0             	and    %rdx,%rax
   2b3d4:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b3db:	eb 03                	jmp    2b3e0 <_ULx86_64_dwarf_eval_expr+0x97a>
   2b3dd:	90                   	nop
   2b3de:	eb 01                	jmp    2b3e1 <_ULx86_64_dwarf_eval_expr+0x97b>
   2b3e0:	90                   	nop
   2b3e1:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b3e8:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
   2b3ef:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b3f6:	76 0a                	jbe    2b402 <_ULx86_64_dwarf_eval_expr+0x99c>
   2b3f8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b3fd:	e9 c7 14 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b402:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b408:	8d 50 01             	lea    0x1(%rax),%edx
   2b40b:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b411:	89 c2                	mov    %eax,%edx
   2b413:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
   2b41a:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b421:	ff 
   2b422:	e9 52 14 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b427:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b42d:	83 e8 01             	sub    $0x1,%eax
   2b430:	89 85 54 fc ff ff    	mov    %eax,-0x3ac(%rbp)
   2b436:	83 bd 54 fc ff ff 3f 	cmpl   $0x3f,-0x3ac(%rbp)
   2b43d:	76 0a                	jbe    2b449 <_ULx86_64_dwarf_eval_expr+0x9e3>
   2b43f:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b444:	e9 80 14 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b449:	8b 85 54 fc ff ff    	mov    -0x3ac(%rbp),%eax
   2b44f:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b456:	ff 
   2b457:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   2b45e:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b465:	76 0a                	jbe    2b471 <_ULx86_64_dwarf_eval_expr+0xa0b>
   2b467:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b46c:	e9 58 14 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b471:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b477:	8d 50 01             	lea    0x1(%rax),%edx
   2b47a:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b480:	89 c2                	mov    %eax,%edx
   2b482:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2b489:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b490:	ff 
   2b491:	e9 e3 13 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b496:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b49c:	83 e8 01             	sub    $0x1,%eax
   2b49f:	83 f8 3f             	cmp    $0x3f,%eax
   2b4a2:	76 0a                	jbe    2b4ae <_ULx86_64_dwarf_eval_expr+0xa48>
   2b4a4:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b4a9:	e9 1b 14 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b4ae:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b4b5:	e9 bf 13 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b4ba:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2b4c1:	89 c2                	mov    %eax,%edx
   2b4c3:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b4c9:	29 d0                	sub    %edx,%eax
   2b4cb:	83 e8 01             	sub    $0x1,%eax
   2b4ce:	89 85 4c fc ff ff    	mov    %eax,-0x3b4(%rbp)
   2b4d4:	83 bd 4c fc ff ff 3f 	cmpl   $0x3f,-0x3b4(%rbp)
   2b4db:	76 0a                	jbe    2b4e7 <_ULx86_64_dwarf_eval_expr+0xa81>
   2b4dd:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b4e2:	e9 e2 13 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b4e7:	8b 85 4c fc ff ff    	mov    -0x3b4(%rbp),%eax
   2b4ed:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b4f4:	ff 
   2b4f5:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
   2b4fc:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b503:	76 0a                	jbe    2b50f <_ULx86_64_dwarf_eval_expr+0xaa9>
   2b505:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b50a:	e9 ba 13 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b50f:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b515:	8d 50 01             	lea    0x1(%rax),%edx
   2b518:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b51e:	89 c2                	mov    %eax,%edx
   2b520:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
   2b527:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b52e:	ff 
   2b52f:	e9 45 13 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b534:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b53a:	83 e8 02             	sub    $0x2,%eax
   2b53d:	89 85 50 fc ff ff    	mov    %eax,-0x3b0(%rbp)
   2b543:	83 bd 50 fc ff ff 3f 	cmpl   $0x3f,-0x3b0(%rbp)
   2b54a:	76 0a                	jbe    2b556 <_ULx86_64_dwarf_eval_expr+0xaf0>
   2b54c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b551:	e9 73 13 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b556:	8b 85 50 fc ff ff    	mov    -0x3b0(%rbp),%eax
   2b55c:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b563:	ff 
   2b564:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
   2b56b:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b572:	76 0a                	jbe    2b57e <_ULx86_64_dwarf_eval_expr+0xb18>
   2b574:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b579:	e9 4b 13 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b57e:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b584:	8d 50 01             	lea    0x1(%rax),%edx
   2b587:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b58d:	89 c2                	mov    %eax,%edx
   2b58f:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   2b596:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b59d:	ff 
   2b59e:	e9 d6 12 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b5a3:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b5a9:	83 e8 01             	sub    $0x1,%eax
   2b5ac:	83 f8 3f             	cmp    $0x3f,%eax
   2b5af:	76 0a                	jbe    2b5bb <_ULx86_64_dwarf_eval_expr+0xb55>
   2b5b1:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b5b6:	e9 0e 13 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b5bb:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b5c2:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b5c8:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b5cf:	ff 
   2b5d0:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b5d7:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b5dd:	83 e8 01             	sub    $0x1,%eax
   2b5e0:	83 f8 3f             	cmp    $0x3f,%eax
   2b5e3:	76 0a                	jbe    2b5ef <_ULx86_64_dwarf_eval_expr+0xb89>
   2b5e5:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b5ea:	e9 da 12 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b5ef:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b5f6:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b5fc:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b603:	ff 
   2b604:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b60b:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2b612:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   2b619:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b620:	76 0a                	jbe    2b62c <_ULx86_64_dwarf_eval_expr+0xbc6>
   2b622:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b627:	e9 9d 12 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b62c:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b632:	8d 50 01             	lea    0x1(%rax),%edx
   2b635:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b63b:	89 c2                	mov    %eax,%edx
   2b63d:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   2b644:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b64b:	ff 
   2b64c:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b653:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
   2b65a:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b661:	76 0a                	jbe    2b66d <_ULx86_64_dwarf_eval_expr+0xc07>
   2b663:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b668:	e9 5c 12 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b66d:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b673:	8d 50 01             	lea    0x1(%rax),%edx
   2b676:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b67c:	89 c2                	mov    %eax,%edx
   2b67e:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
   2b685:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b68c:	ff 
   2b68d:	e9 e7 11 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b692:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b698:	83 e8 01             	sub    $0x1,%eax
   2b69b:	83 f8 3f             	cmp    $0x3f,%eax
   2b69e:	76 0a                	jbe    2b6aa <_ULx86_64_dwarf_eval_expr+0xc44>
   2b6a0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b6a5:	e9 1f 12 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b6aa:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b6b1:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b6b7:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b6be:	ff 
   2b6bf:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b6c6:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b6cc:	83 e8 01             	sub    $0x1,%eax
   2b6cf:	83 f8 3f             	cmp    $0x3f,%eax
   2b6d2:	76 0a                	jbe    2b6de <_ULx86_64_dwarf_eval_expr+0xc78>
   2b6d4:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b6d9:	e9 eb 11 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b6de:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b6e5:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b6eb:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b6f2:	ff 
   2b6f3:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b6fa:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b700:	83 e8 01             	sub    $0x1,%eax
   2b703:	83 f8 3f             	cmp    $0x3f,%eax
   2b706:	76 0a                	jbe    2b712 <_ULx86_64_dwarf_eval_expr+0xcac>
   2b708:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b70d:	e9 b7 11 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b712:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b719:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b71f:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b726:	ff 
   2b727:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
   2b72e:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2b735:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
   2b73c:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b743:	76 0a                	jbe    2b74f <_ULx86_64_dwarf_eval_expr+0xce9>
   2b745:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b74a:	e9 7a 11 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b74f:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b755:	8d 50 01             	lea    0x1(%rax),%edx
   2b758:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b75e:	89 c2                	mov    %eax,%edx
   2b760:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
   2b767:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b76e:	ff 
   2b76f:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
   2b776:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
   2b77d:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b784:	76 0a                	jbe    2b790 <_ULx86_64_dwarf_eval_expr+0xd2a>
   2b786:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b78b:	e9 39 11 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b790:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b796:	8d 50 01             	lea    0x1(%rax),%edx
   2b799:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b79f:	89 c2                	mov    %eax,%edx
   2b7a1:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
   2b7a8:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b7af:	ff 
   2b7b0:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b7b7:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
   2b7be:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b7c5:	76 0a                	jbe    2b7d1 <_ULx86_64_dwarf_eval_expr+0xd6b>
   2b7c7:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b7cc:	e9 f8 10 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b7d1:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b7d7:	8d 50 01             	lea    0x1(%rax),%edx
   2b7da:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b7e0:	89 c2                	mov    %eax,%edx
   2b7e2:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
   2b7e9:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b7f0:	ff 
   2b7f1:	e9 83 10 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b7f6:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b7fc:	83 e8 01             	sub    $0x1,%eax
   2b7ff:	83 f8 3f             	cmp    $0x3f,%eax
   2b802:	76 0a                	jbe    2b80e <_ULx86_64_dwarf_eval_expr+0xda8>
   2b804:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b809:	e9 bb 10 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b80e:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b815:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b81b:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b822:	ff 
   2b823:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b82a:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2b831:	48 85 c0             	test   %rax,%rax
   2b834:	79 11                	jns    2b847 <_ULx86_64_dwarf_eval_expr+0xde1>
   2b836:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2b83d:	48 f7 d8             	neg    %rax
   2b840:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b847:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2b84e:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
   2b855:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b85c:	76 0a                	jbe    2b868 <_ULx86_64_dwarf_eval_expr+0xe02>
   2b85e:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b863:	e9 61 10 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b868:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b86e:	8d 50 01             	lea    0x1(%rax),%edx
   2b871:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b877:	89 c2                	mov    %eax,%edx
   2b879:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
   2b880:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b887:	ff 
   2b888:	e9 ec 0f 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b88d:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b893:	83 e8 01             	sub    $0x1,%eax
   2b896:	83 f8 3f             	cmp    $0x3f,%eax
   2b899:	76 0a                	jbe    2b8a5 <_ULx86_64_dwarf_eval_expr+0xe3f>
   2b89b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b8a0:	e9 24 10 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b8a5:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b8ac:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b8b2:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b8b9:	ff 
   2b8ba:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b8c1:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b8c7:	83 e8 01             	sub    $0x1,%eax
   2b8ca:	83 f8 3f             	cmp    $0x3f,%eax
   2b8cd:	76 0a                	jbe    2b8d9 <_ULx86_64_dwarf_eval_expr+0xe73>
   2b8cf:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b8d4:	e9 f0 0f 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b8d9:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b8e0:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b8e6:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b8ed:	ff 
   2b8ee:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b8f5:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2b8fc:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2b903:	48 21 d0             	and    %rdx,%rax
   2b906:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
   2b90d:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2b914:	76 0a                	jbe    2b920 <_ULx86_64_dwarf_eval_expr+0xeba>
   2b916:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b91b:	e9 a9 0f 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b920:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b926:	8d 50 01             	lea    0x1(%rax),%edx
   2b929:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2b92f:	89 c2                	mov    %eax,%edx
   2b931:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
   2b938:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2b93f:	ff 
   2b940:	e9 34 0f 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2b945:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b94b:	83 e8 01             	sub    $0x1,%eax
   2b94e:	83 f8 3f             	cmp    $0x3f,%eax
   2b951:	76 0a                	jbe    2b95d <_ULx86_64_dwarf_eval_expr+0xef7>
   2b953:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b958:	e9 6c 0f 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b95d:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b964:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b96a:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b971:	ff 
   2b972:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2b979:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b97f:	83 e8 01             	sub    $0x1,%eax
   2b982:	83 f8 3f             	cmp    $0x3f,%eax
   2b985:	76 0a                	jbe    2b991 <_ULx86_64_dwarf_eval_expr+0xf2b>
   2b987:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2b98c:	e9 38 0f 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2b991:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2b998:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2b99e:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2b9a5:	ff 
   2b9a6:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2b9ad:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2b9b4:	48 85 c0             	test   %rax,%rax
   2b9b7:	74 47                	je     2ba00 <_ULx86_64_dwarf_eval_expr+0xf9a>
   2b9b9:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2b9c0:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b9c7:	48 89 d6             	mov    %rdx,%rsi
   2b9ca:	48 89 c7             	mov    %rax,%rdi
   2b9cd:	e8 4a ec ff ff       	callq  2a61c <sword>
   2b9d2:	48 89 c3             	mov    %rax,%rbx
   2b9d5:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2b9dc:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2b9e3:	48 89 d6             	mov    %rdx,%rsi
   2b9e6:	48 89 c7             	mov    %rax,%rdi
   2b9e9:	e8 2e ec ff ff       	callq  2a61c <sword>
   2b9ee:	48 89 c1             	mov    %rax,%rcx
   2b9f1:	48 89 d8             	mov    %rbx,%rax
   2b9f4:	48 99                	cqto   
   2b9f6:	48 f7 f9             	idiv   %rcx
   2b9f9:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2ba00:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2ba07:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
   2ba0e:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2ba15:	76 0a                	jbe    2ba21 <_ULx86_64_dwarf_eval_expr+0xfbb>
   2ba17:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ba1c:	e9 a8 0e 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ba21:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ba27:	8d 50 01             	lea    0x1(%rax),%edx
   2ba2a:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2ba30:	89 c2                	mov    %eax,%edx
   2ba32:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
   2ba39:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2ba40:	ff 
   2ba41:	e9 33 0e 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2ba46:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ba4c:	83 e8 01             	sub    $0x1,%eax
   2ba4f:	83 f8 3f             	cmp    $0x3f,%eax
   2ba52:	76 0a                	jbe    2ba5e <_ULx86_64_dwarf_eval_expr+0xff8>
   2ba54:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ba59:	e9 6b 0e 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ba5e:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2ba65:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ba6b:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2ba72:	ff 
   2ba73:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2ba7a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ba80:	83 e8 01             	sub    $0x1,%eax
   2ba83:	83 f8 3f             	cmp    $0x3f,%eax
   2ba86:	76 0a                	jbe    2ba92 <_ULx86_64_dwarf_eval_expr+0x102c>
   2ba88:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ba8d:	e9 37 0e 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2ba92:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2ba99:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2ba9f:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2baa6:	ff 
   2baa7:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2baae:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2bab5:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2babc:	48 29 c2             	sub    %rax,%rdx
   2babf:	48 89 d0             	mov    %rdx,%rax
   2bac2:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bac9:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2bad0:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
   2bad7:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bade:	76 0a                	jbe    2baea <_ULx86_64_dwarf_eval_expr+0x1084>
   2bae0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bae5:	e9 df 0d 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2baea:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2baf0:	8d 50 01             	lea    0x1(%rax),%edx
   2baf3:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2baf9:	89 c2                	mov    %eax,%edx
   2bafb:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
   2bb02:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bb09:	ff 
   2bb0a:	e9 6a 0d 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bb0f:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bb15:	83 e8 01             	sub    $0x1,%eax
   2bb18:	83 f8 3f             	cmp    $0x3f,%eax
   2bb1b:	76 0a                	jbe    2bb27 <_ULx86_64_dwarf_eval_expr+0x10c1>
   2bb1d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bb22:	e9 a2 0d 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bb27:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bb2e:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bb34:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bb3b:	ff 
   2bb3c:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bb43:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bb49:	83 e8 01             	sub    $0x1,%eax
   2bb4c:	83 f8 3f             	cmp    $0x3f,%eax
   2bb4f:	76 0a                	jbe    2bb5b <_ULx86_64_dwarf_eval_expr+0x10f5>
   2bb51:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bb56:	e9 6e 0d 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bb5b:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bb62:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bb68:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bb6f:	ff 
   2bb70:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2bb77:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2bb7e:	48 85 c0             	test   %rax,%rax
   2bb81:	74 20                	je     2bba3 <_ULx86_64_dwarf_eval_expr+0x113d>
   2bb83:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2bb8a:	48 8b 8d 68 fc ff ff 	mov    -0x398(%rbp),%rcx
   2bb91:	ba 00 00 00 00       	mov    $0x0,%edx
   2bb96:	48 f7 f1             	div    %rcx
   2bb99:	48 89 d0             	mov    %rdx,%rax
   2bb9c:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bba3:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2bbaa:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
   2bbb1:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bbb8:	76 0a                	jbe    2bbc4 <_ULx86_64_dwarf_eval_expr+0x115e>
   2bbba:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bbbf:	e9 05 0d 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bbc4:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bbca:	8d 50 01             	lea    0x1(%rax),%edx
   2bbcd:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2bbd3:	89 c2                	mov    %eax,%edx
   2bbd5:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2bbdc:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bbe3:	ff 
   2bbe4:	e9 90 0c 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bbe9:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bbef:	83 e8 01             	sub    $0x1,%eax
   2bbf2:	83 f8 3f             	cmp    $0x3f,%eax
   2bbf5:	76 0a                	jbe    2bc01 <_ULx86_64_dwarf_eval_expr+0x119b>
   2bbf7:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bbfc:	e9 c8 0c 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bc01:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bc08:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bc0e:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bc15:	ff 
   2bc16:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bc1d:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bc23:	83 e8 01             	sub    $0x1,%eax
   2bc26:	83 f8 3f             	cmp    $0x3f,%eax
   2bc29:	76 0a                	jbe    2bc35 <_ULx86_64_dwarf_eval_expr+0x11cf>
   2bc2b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bc30:	e9 94 0c 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bc35:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bc3c:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bc42:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bc49:	ff 
   2bc4a:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2bc51:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2bc58:	48 85 c0             	test   %rax,%rax
   2bc5b:	74 19                	je     2bc76 <_ULx86_64_dwarf_eval_expr+0x1210>
   2bc5d:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2bc64:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2bc6b:	48 0f af c2          	imul   %rdx,%rax
   2bc6f:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bc76:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2bc7d:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
   2bc84:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bc8b:	76 0a                	jbe    2bc97 <_ULx86_64_dwarf_eval_expr+0x1231>
   2bc8d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bc92:	e9 32 0c 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bc97:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bc9d:	8d 50 01             	lea    0x1(%rax),%edx
   2bca0:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2bca6:	89 c2                	mov    %eax,%edx
   2bca8:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   2bcaf:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bcb6:	ff 
   2bcb7:	e9 bd 0b 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bcbc:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bcc2:	83 e8 01             	sub    $0x1,%eax
   2bcc5:	83 f8 3f             	cmp    $0x3f,%eax
   2bcc8:	76 0a                	jbe    2bcd4 <_ULx86_64_dwarf_eval_expr+0x126e>
   2bcca:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bccf:	e9 f5 0b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bcd4:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bcdb:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bce1:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bce8:	ff 
   2bce9:	48 f7 d8             	neg    %rax
   2bcec:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
   2bcf3:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bcfa:	76 0a                	jbe    2bd06 <_ULx86_64_dwarf_eval_expr+0x12a0>
   2bcfc:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bd01:	e9 c3 0b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bd06:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bd0c:	8d 50 01             	lea    0x1(%rax),%edx
   2bd0f:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2bd15:	89 c2                	mov    %eax,%edx
   2bd17:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2bd1e:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bd25:	ff 
   2bd26:	e9 4e 0b 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bd2b:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bd31:	83 e8 01             	sub    $0x1,%eax
   2bd34:	83 f8 3f             	cmp    $0x3f,%eax
   2bd37:	76 0a                	jbe    2bd43 <_ULx86_64_dwarf_eval_expr+0x12dd>
   2bd39:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bd3e:	e9 86 0b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bd43:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bd4a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bd50:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bd57:	ff 
   2bd58:	48 f7 d0             	not    %rax
   2bd5b:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
   2bd62:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bd69:	76 0a                	jbe    2bd75 <_ULx86_64_dwarf_eval_expr+0x130f>
   2bd6b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bd70:	e9 54 0b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bd75:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bd7b:	8d 50 01             	lea    0x1(%rax),%edx
   2bd7e:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2bd84:	89 c2                	mov    %eax,%edx
   2bd86:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
   2bd8d:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bd94:	ff 
   2bd95:	e9 df 0a 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bd9a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bda0:	83 e8 01             	sub    $0x1,%eax
   2bda3:	83 f8 3f             	cmp    $0x3f,%eax
   2bda6:	76 0a                	jbe    2bdb2 <_ULx86_64_dwarf_eval_expr+0x134c>
   2bda8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bdad:	e9 17 0b 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bdb2:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bdb9:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bdbf:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bdc6:	ff 
   2bdc7:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bdce:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bdd4:	83 e8 01             	sub    $0x1,%eax
   2bdd7:	83 f8 3f             	cmp    $0x3f,%eax
   2bdda:	76 0a                	jbe    2bde6 <_ULx86_64_dwarf_eval_expr+0x1380>
   2bddc:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bde1:	e9 e3 0a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bde6:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bded:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bdf3:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bdfa:	ff 
   2bdfb:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2be02:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2be09:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2be10:	48 09 d0             	or     %rdx,%rax
   2be13:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
   2be1a:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2be21:	76 0a                	jbe    2be2d <_ULx86_64_dwarf_eval_expr+0x13c7>
   2be23:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2be28:	e9 9c 0a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2be2d:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2be33:	8d 50 01             	lea    0x1(%rax),%edx
   2be36:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2be3c:	89 c2                	mov    %eax,%edx
   2be3e:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
   2be45:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2be4c:	ff 
   2be4d:	e9 27 0a 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2be52:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2be58:	83 e8 01             	sub    $0x1,%eax
   2be5b:	83 f8 3f             	cmp    $0x3f,%eax
   2be5e:	76 0a                	jbe    2be6a <_ULx86_64_dwarf_eval_expr+0x1404>
   2be60:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2be65:	e9 5f 0a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2be6a:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2be71:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2be77:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2be7e:	ff 
   2be7f:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2be86:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2be8c:	83 e8 01             	sub    $0x1,%eax
   2be8f:	83 f8 3f             	cmp    $0x3f,%eax
   2be92:	76 0a                	jbe    2be9e <_ULx86_64_dwarf_eval_expr+0x1438>
   2be94:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2be99:	e9 2b 0a 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2be9e:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bea5:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2beab:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2beb2:	ff 
   2beb3:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2beba:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2bec1:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2bec8:	48 01 d0             	add    %rdx,%rax
   2becb:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
   2bed2:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bed9:	76 0a                	jbe    2bee5 <_ULx86_64_dwarf_eval_expr+0x147f>
   2bedb:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bee0:	e9 e4 09 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bee5:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2beeb:	8d 50 01             	lea    0x1(%rax),%edx
   2beee:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2bef4:	89 c2                	mov    %eax,%edx
   2bef6:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
   2befd:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bf04:	ff 
   2bf05:	e9 6f 09 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bf0a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bf10:	83 e8 01             	sub    $0x1,%eax
   2bf13:	83 f8 3f             	cmp    $0x3f,%eax
   2bf16:	76 0a                	jbe    2bf22 <_ULx86_64_dwarf_eval_expr+0x14bc>
   2bf18:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bf1d:	e9 a7 09 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bf22:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bf29:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bf2f:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bf36:	ff 
   2bf37:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bf3e:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2bf45:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2bf4c:	48 01 d0             	add    %rdx,%rax
   2bf4f:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
   2bf56:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2bf5d:	76 0a                	jbe    2bf69 <_ULx86_64_dwarf_eval_expr+0x1503>
   2bf5f:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bf64:	e9 60 09 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bf69:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bf6f:	8d 50 01             	lea    0x1(%rax),%edx
   2bf72:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2bf78:	89 c2                	mov    %eax,%edx
   2bf7a:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
   2bf81:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2bf88:	ff 
   2bf89:	e9 eb 08 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2bf8e:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bf94:	83 e8 01             	sub    $0x1,%eax
   2bf97:	83 f8 3f             	cmp    $0x3f,%eax
   2bf9a:	76 0a                	jbe    2bfa6 <_ULx86_64_dwarf_eval_expr+0x1540>
   2bf9c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bfa1:	e9 23 09 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bfa6:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bfad:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bfb3:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bfba:	ff 
   2bfbb:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2bfc2:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bfc8:	83 e8 01             	sub    $0x1,%eax
   2bfcb:	83 f8 3f             	cmp    $0x3f,%eax
   2bfce:	76 0a                	jbe    2bfda <_ULx86_64_dwarf_eval_expr+0x1574>
   2bfd0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2bfd5:	e9 ef 08 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2bfda:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2bfe1:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2bfe7:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2bfee:	ff 
   2bfef:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2bff6:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2bffd:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c004:	89 d1                	mov    %edx,%ecx
   2c006:	48 d3 e0             	shl    %cl,%rax
   2c009:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
   2c010:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c017:	76 0a                	jbe    2c023 <_ULx86_64_dwarf_eval_expr+0x15bd>
   2c019:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c01e:	e9 a6 08 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c023:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c029:	8d 50 01             	lea    0x1(%rax),%edx
   2c02c:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c032:	89 c2                	mov    %eax,%edx
   2c034:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
   2c03b:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c042:	ff 
   2c043:	e9 31 08 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c048:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c04e:	83 e8 01             	sub    $0x1,%eax
   2c051:	83 f8 3f             	cmp    $0x3f,%eax
   2c054:	76 0a                	jbe    2c060 <_ULx86_64_dwarf_eval_expr+0x15fa>
   2c056:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c05b:	e9 69 08 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c060:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c067:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c06d:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c074:	ff 
   2c075:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c07c:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c082:	83 e8 01             	sub    $0x1,%eax
   2c085:	83 f8 3f             	cmp    $0x3f,%eax
   2c088:	76 0a                	jbe    2c094 <_ULx86_64_dwarf_eval_expr+0x162e>
   2c08a:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c08f:	e9 35 08 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c094:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c09b:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c0a1:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c0a8:	ff 
   2c0a9:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c0b0:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2c0b7:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c0be:	89 d1                	mov    %edx,%ecx
   2c0c0:	48 d3 e8             	shr    %cl,%rax
   2c0c3:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
   2c0ca:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c0d1:	76 0a                	jbe    2c0dd <_ULx86_64_dwarf_eval_expr+0x1677>
   2c0d3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c0d8:	e9 ec 07 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c0dd:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c0e3:	8d 50 01             	lea    0x1(%rax),%edx
   2c0e6:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c0ec:	89 c2                	mov    %eax,%edx
   2c0ee:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
   2c0f5:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c0fc:	ff 
   2c0fd:	e9 77 07 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c102:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c108:	83 e8 01             	sub    $0x1,%eax
   2c10b:	83 f8 3f             	cmp    $0x3f,%eax
   2c10e:	76 0a                	jbe    2c11a <_ULx86_64_dwarf_eval_expr+0x16b4>
   2c110:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c115:	e9 af 07 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c11a:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c121:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c127:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c12e:	ff 
   2c12f:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c136:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c13c:	83 e8 01             	sub    $0x1,%eax
   2c13f:	83 f8 3f             	cmp    $0x3f,%eax
   2c142:	76 0a                	jbe    2c14e <_ULx86_64_dwarf_eval_expr+0x16e8>
   2c144:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c149:	e9 7b 07 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c14e:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c155:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c15b:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c162:	ff 
   2c163:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c16a:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c171:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c178:	48 89 d6             	mov    %rdx,%rsi
   2c17b:	48 89 c7             	mov    %rax,%rdi
   2c17e:	e8 99 e4 ff ff       	callq  2a61c <sword>
   2c183:	48 89 c2             	mov    %rax,%rdx
   2c186:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2c18d:	89 c1                	mov    %eax,%ecx
   2c18f:	48 d3 fa             	sar    %cl,%rdx
   2c192:	48 89 d0             	mov    %rdx,%rax
   2c195:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
   2c19c:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c1a3:	76 0a                	jbe    2c1af <_ULx86_64_dwarf_eval_expr+0x1749>
   2c1a5:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c1aa:	e9 1a 07 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c1af:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c1b5:	8d 50 01             	lea    0x1(%rax),%edx
   2c1b8:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c1be:	89 c2                	mov    %eax,%edx
   2c1c0:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
   2c1c7:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c1ce:	ff 
   2c1cf:	e9 a5 06 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c1d4:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c1da:	83 e8 01             	sub    $0x1,%eax
   2c1dd:	83 f8 3f             	cmp    $0x3f,%eax
   2c1e0:	76 0a                	jbe    2c1ec <_ULx86_64_dwarf_eval_expr+0x1786>
   2c1e2:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c1e7:	e9 dd 06 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c1ec:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c1f3:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c1f9:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c200:	ff 
   2c201:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c208:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c20e:	83 e8 01             	sub    $0x1,%eax
   2c211:	83 f8 3f             	cmp    $0x3f,%eax
   2c214:	76 0a                	jbe    2c220 <_ULx86_64_dwarf_eval_expr+0x17ba>
   2c216:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c21b:	e9 a9 06 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c220:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c227:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c22d:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c234:	ff 
   2c235:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c23c:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c243:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
   2c24a:	48 31 d0             	xor    %rdx,%rax
   2c24d:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
   2c254:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c25b:	76 0a                	jbe    2c267 <_ULx86_64_dwarf_eval_expr+0x1801>
   2c25d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c262:	e9 62 06 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c267:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c26d:	8d 50 01             	lea    0x1(%rax),%edx
   2c270:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c276:	89 c2                	mov    %eax,%edx
   2c278:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
   2c27f:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c286:	ff 
   2c287:	e9 ed 05 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c28c:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c292:	83 e8 01             	sub    $0x1,%eax
   2c295:	83 f8 3f             	cmp    $0x3f,%eax
   2c298:	76 0a                	jbe    2c2a4 <_ULx86_64_dwarf_eval_expr+0x183e>
   2c29a:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c29f:	e9 25 06 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c2a4:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c2ab:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c2b1:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c2b8:	ff 
   2c2b9:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c2c0:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c2c6:	83 e8 01             	sub    $0x1,%eax
   2c2c9:	83 f8 3f             	cmp    $0x3f,%eax
   2c2cc:	76 0a                	jbe    2c2d8 <_ULx86_64_dwarf_eval_expr+0x1872>
   2c2ce:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c2d3:	e9 f1 05 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c2d8:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c2df:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c2e5:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c2ec:	ff 
   2c2ed:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c2f4:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c2fb:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c302:	48 89 d6             	mov    %rdx,%rsi
   2c305:	48 89 c7             	mov    %rax,%rdi
   2c308:	e8 0f e3 ff ff       	callq  2a61c <sword>
   2c30d:	48 89 c3             	mov    %rax,%rbx
   2c310:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c317:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c31e:	48 89 d6             	mov    %rdx,%rsi
   2c321:	48 89 c7             	mov    %rax,%rdi
   2c324:	e8 f3 e2 ff ff       	callq  2a61c <sword>
   2c329:	48 39 c3             	cmp    %rax,%rbx
   2c32c:	0f 9e c0             	setle  %al
   2c32f:	0f b6 c0             	movzbl %al,%eax
   2c332:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
   2c339:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c340:	76 0a                	jbe    2c34c <_ULx86_64_dwarf_eval_expr+0x18e6>
   2c342:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c347:	e9 7d 05 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c34c:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c352:	8d 50 01             	lea    0x1(%rax),%edx
   2c355:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c35b:	89 c2                	mov    %eax,%edx
   2c35d:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
   2c364:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c36b:	ff 
   2c36c:	e9 08 05 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c371:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c377:	83 e8 01             	sub    $0x1,%eax
   2c37a:	83 f8 3f             	cmp    $0x3f,%eax
   2c37d:	76 0a                	jbe    2c389 <_ULx86_64_dwarf_eval_expr+0x1923>
   2c37f:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c384:	e9 40 05 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c389:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c390:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c396:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c39d:	ff 
   2c39e:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c3a5:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c3ab:	83 e8 01             	sub    $0x1,%eax
   2c3ae:	83 f8 3f             	cmp    $0x3f,%eax
   2c3b1:	76 0a                	jbe    2c3bd <_ULx86_64_dwarf_eval_expr+0x1957>
   2c3b3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c3b8:	e9 0c 05 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c3bd:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c3c4:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c3ca:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c3d1:	ff 
   2c3d2:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c3d9:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c3e0:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c3e7:	48 89 d6             	mov    %rdx,%rsi
   2c3ea:	48 89 c7             	mov    %rax,%rdi
   2c3ed:	e8 2a e2 ff ff       	callq  2a61c <sword>
   2c3f2:	48 89 c3             	mov    %rax,%rbx
   2c3f5:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c3fc:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c403:	48 89 d6             	mov    %rdx,%rsi
   2c406:	48 89 c7             	mov    %rax,%rdi
   2c409:	e8 0e e2 ff ff       	callq  2a61c <sword>
   2c40e:	48 39 c3             	cmp    %rax,%rbx
   2c411:	0f 9d c0             	setge  %al
   2c414:	0f b6 c0             	movzbl %al,%eax
   2c417:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
   2c41e:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c425:	76 0a                	jbe    2c431 <_ULx86_64_dwarf_eval_expr+0x19cb>
   2c427:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c42c:	e9 98 04 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c431:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c437:	8d 50 01             	lea    0x1(%rax),%edx
   2c43a:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c440:	89 c2                	mov    %eax,%edx
   2c442:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
   2c449:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c450:	ff 
   2c451:	e9 23 04 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c456:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c45c:	83 e8 01             	sub    $0x1,%eax
   2c45f:	83 f8 3f             	cmp    $0x3f,%eax
   2c462:	76 0a                	jbe    2c46e <_ULx86_64_dwarf_eval_expr+0x1a08>
   2c464:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c469:	e9 5b 04 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c46e:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c475:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c47b:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c482:	ff 
   2c483:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c48a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c490:	83 e8 01             	sub    $0x1,%eax
   2c493:	83 f8 3f             	cmp    $0x3f,%eax
   2c496:	76 0a                	jbe    2c4a2 <_ULx86_64_dwarf_eval_expr+0x1a3c>
   2c498:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c49d:	e9 27 04 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c4a2:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c4a9:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c4af:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c4b6:	ff 
   2c4b7:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c4be:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c4c5:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c4cc:	48 89 d6             	mov    %rdx,%rsi
   2c4cf:	48 89 c7             	mov    %rax,%rdi
   2c4d2:	e8 45 e1 ff ff       	callq  2a61c <sword>
   2c4d7:	48 89 c3             	mov    %rax,%rbx
   2c4da:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c4e1:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c4e8:	48 89 d6             	mov    %rdx,%rsi
   2c4eb:	48 89 c7             	mov    %rax,%rdi
   2c4ee:	e8 29 e1 ff ff       	callq  2a61c <sword>
   2c4f3:	48 39 c3             	cmp    %rax,%rbx
   2c4f6:	0f 94 c0             	sete   %al
   2c4f9:	0f b6 c0             	movzbl %al,%eax
   2c4fc:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
   2c503:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c50a:	76 0a                	jbe    2c516 <_ULx86_64_dwarf_eval_expr+0x1ab0>
   2c50c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c511:	e9 b3 03 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c516:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c51c:	8d 50 01             	lea    0x1(%rax),%edx
   2c51f:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c525:	89 c2                	mov    %eax,%edx
   2c527:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
   2c52e:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c535:	ff 
   2c536:	e9 3e 03 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c53b:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c541:	83 e8 01             	sub    $0x1,%eax
   2c544:	83 f8 3f             	cmp    $0x3f,%eax
   2c547:	76 0a                	jbe    2c553 <_ULx86_64_dwarf_eval_expr+0x1aed>
   2c549:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c54e:	e9 76 03 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c553:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c55a:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c560:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c567:	ff 
   2c568:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c56f:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c575:	83 e8 01             	sub    $0x1,%eax
   2c578:	83 f8 3f             	cmp    $0x3f,%eax
   2c57b:	76 0a                	jbe    2c587 <_ULx86_64_dwarf_eval_expr+0x1b21>
   2c57d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c582:	e9 42 03 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c587:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c58e:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c594:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c59b:	ff 
   2c59c:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c5a3:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c5aa:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c5b1:	48 89 d6             	mov    %rdx,%rsi
   2c5b4:	48 89 c7             	mov    %rax,%rdi
   2c5b7:	e8 60 e0 ff ff       	callq  2a61c <sword>
   2c5bc:	48 89 c3             	mov    %rax,%rbx
   2c5bf:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c5c6:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c5cd:	48 89 d6             	mov    %rdx,%rsi
   2c5d0:	48 89 c7             	mov    %rax,%rdi
   2c5d3:	e8 44 e0 ff ff       	callq  2a61c <sword>
   2c5d8:	48 39 c3             	cmp    %rax,%rbx
   2c5db:	0f 9c c0             	setl   %al
   2c5de:	0f b6 c0             	movzbl %al,%eax
   2c5e1:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
   2c5e8:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c5ef:	76 0a                	jbe    2c5fb <_ULx86_64_dwarf_eval_expr+0x1b95>
   2c5f1:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c5f6:	e9 ce 02 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c5fb:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c601:	8d 50 01             	lea    0x1(%rax),%edx
   2c604:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c60a:	89 c2                	mov    %eax,%edx
   2c60c:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
   2c613:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c61a:	ff 
   2c61b:	e9 59 02 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c620:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c626:	83 e8 01             	sub    $0x1,%eax
   2c629:	83 f8 3f             	cmp    $0x3f,%eax
   2c62c:	76 0a                	jbe    2c638 <_ULx86_64_dwarf_eval_expr+0x1bd2>
   2c62e:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c633:	e9 91 02 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c638:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c63f:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c645:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c64c:	ff 
   2c64d:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c654:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c65a:	83 e8 01             	sub    $0x1,%eax
   2c65d:	83 f8 3f             	cmp    $0x3f,%eax
   2c660:	76 0a                	jbe    2c66c <_ULx86_64_dwarf_eval_expr+0x1c06>
   2c662:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c667:	e9 5d 02 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c66c:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c673:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c679:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c680:	ff 
   2c681:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c688:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c68f:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c696:	48 89 d6             	mov    %rdx,%rsi
   2c699:	48 89 c7             	mov    %rax,%rdi
   2c69c:	e8 7b df ff ff       	callq  2a61c <sword>
   2c6a1:	48 89 c3             	mov    %rax,%rbx
   2c6a4:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c6ab:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c6b2:	48 89 d6             	mov    %rdx,%rsi
   2c6b5:	48 89 c7             	mov    %rax,%rdi
   2c6b8:	e8 5f df ff ff       	callq  2a61c <sword>
   2c6bd:	48 39 c3             	cmp    %rax,%rbx
   2c6c0:	0f 9f c0             	setg   %al
   2c6c3:	0f b6 c0             	movzbl %al,%eax
   2c6c6:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
   2c6cd:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c6d4:	76 0a                	jbe    2c6e0 <_ULx86_64_dwarf_eval_expr+0x1c7a>
   2c6d6:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c6db:	e9 e9 01 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c6e0:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c6e6:	8d 50 01             	lea    0x1(%rax),%edx
   2c6e9:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c6ef:	89 c2                	mov    %eax,%edx
   2c6f1:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
   2c6f8:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c6ff:	ff 
   2c700:	e9 74 01 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c705:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c70b:	83 e8 01             	sub    $0x1,%eax
   2c70e:	83 f8 3f             	cmp    $0x3f,%eax
   2c711:	76 0a                	jbe    2c71d <_ULx86_64_dwarf_eval_expr+0x1cb7>
   2c713:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c718:	e9 ac 01 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c71d:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c724:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c72a:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c731:	ff 
   2c732:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c739:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c73f:	83 e8 01             	sub    $0x1,%eax
   2c742:	83 f8 3f             	cmp    $0x3f,%eax
   2c745:	76 0a                	jbe    2c751 <_ULx86_64_dwarf_eval_expr+0x1ceb>
   2c747:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c74c:	e9 78 01 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c751:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c758:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c75e:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c765:	ff 
   2c766:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
   2c76d:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
   2c774:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c77b:	48 89 d6             	mov    %rdx,%rsi
   2c77e:	48 89 c7             	mov    %rax,%rdi
   2c781:	e8 96 de ff ff       	callq  2a61c <sword>
   2c786:	48 89 c3             	mov    %rax,%rbx
   2c789:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
   2c790:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
   2c797:	48 89 d6             	mov    %rdx,%rsi
   2c79a:	48 89 c7             	mov    %rax,%rdi
   2c79d:	e8 7a de ff ff       	callq  2a61c <sword>
   2c7a2:	48 39 c3             	cmp    %rax,%rbx
   2c7a5:	0f 95 c0             	setne  %al
   2c7a8:	0f b6 c0             	movzbl %al,%eax
   2c7ab:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
   2c7b2:	83 bd 44 fc ff ff 3f 	cmpl   $0x3f,-0x3bc(%rbp)
   2c7b9:	76 0a                	jbe    2c7c5 <_ULx86_64_dwarf_eval_expr+0x1d5f>
   2c7bb:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c7c0:	e9 04 01 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c7c5:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c7cb:	8d 50 01             	lea    0x1(%rax),%edx
   2c7ce:	89 95 44 fc ff ff    	mov    %edx,-0x3bc(%rbp)
   2c7d4:	89 c2                	mov    %eax,%edx
   2c7d6:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
   2c7dd:	48 89 84 d5 e0 fd ff 	mov    %rax,-0x220(%rbp,%rdx,8)
   2c7e4:	ff 
   2c7e5:	e9 8f 00 00 00       	jmpq   2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c7ea:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
   2c7f1:	48 8b 10             	mov    (%rax),%rdx
   2c7f4:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2c7fb:	48 0f bf c0          	movswq %ax,%rax
   2c7ff:	48 01 c2             	add    %rax,%rdx
   2c802:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
   2c809:	48 89 10             	mov    %rdx,(%rax)
   2c80c:	eb 6b                	jmp    2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c80e:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c814:	83 e8 01             	sub    $0x1,%eax
   2c817:	83 f8 3f             	cmp    $0x3f,%eax
   2c81a:	76 0a                	jbe    2c826 <_ULx86_64_dwarf_eval_expr+0x1dc0>
   2c81c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c821:	e9 a3 00 00 00       	jmpq   2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c826:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c82d:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c833:	48 8b 84 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rax
   2c83a:	ff 
   2c83b:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
   2c842:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
   2c849:	48 85 c0             	test   %rax,%rax
   2c84c:	74 2b                	je     2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c84e:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
   2c855:	48 8b 10             	mov    (%rax),%rdx
   2c858:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
   2c85f:	48 0f bf c0          	movswq %ax,%rax
   2c863:	48 01 c2             	add    %rax,%rdx
   2c866:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
   2c86d:	48 89 10             	mov    %rdx,(%rax)
   2c870:	eb 07                	jmp    2c879 <_ULx86_64_dwarf_eval_expr+0x1e13>
   2c872:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c877:	eb 50                	jmp    2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c879:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
   2c880:	48 8b 00             	mov    (%rax),%rax
   2c883:	48 39 85 98 fc ff ff 	cmp    %rax,-0x368(%rbp)
   2c88a:	0f 87 ea e2 ff ff    	ja     2ab7a <_ULx86_64_dwarf_eval_expr+0x114>
   2c890:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c896:	83 e8 01             	sub    $0x1,%eax
   2c899:	83 f8 3f             	cmp    $0x3f,%eax
   2c89c:	76 07                	jbe    2c8a5 <_ULx86_64_dwarf_eval_expr+0x1e3f>
   2c89e:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2c8a3:	eb 24                	jmp    2c8c9 <_ULx86_64_dwarf_eval_expr+0x1e63>
   2c8a5:	83 ad 44 fc ff ff 01 	subl   $0x1,-0x3bc(%rbp)
   2c8ac:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
   2c8b2:	48 8b 94 c5 e0 fd ff 	mov    -0x220(%rbp,%rax,8),%rdx
   2c8b9:	ff 
   2c8ba:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
   2c8c1:	48 89 10             	mov    %rdx,(%rax)
   2c8c4:	b8 00 00 00 00       	mov    $0x0,%eax
   2c8c9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   2c8cd:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   2c8d4:	00 00 
   2c8d6:	74 05                	je     2c8dd <_ULx86_64_dwarf_eval_expr+0x1e77>
   2c8d8:	e8 af eb fd ff       	callq  b48c <__stack_chk_fail>
   2c8dd:	48 81 c4 f8 03 00 00 	add    $0x3f8,%rsp
   2c8e4:	5b                   	pop    %rbx
   2c8e5:	5d                   	pop    %rbp
   2c8e6:	c3                   	retq   

000000000002c8e7 <mark_as_used>:
   2c8e7:	55                   	push   %rbp
   2c8e8:	48 89 e5             	mov    %rsp,%rbp
   2c8eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2c8ef:	90                   	nop
   2c8f0:	5d                   	pop    %rbp
   2c8f1:	c3                   	retq   

000000000002c8f2 <linear_search>:
   2c8f2:	55                   	push   %rbp
   2c8f3:	48 89 e5             	mov    %rsp,%rbp
   2c8f6:	48 83 ec 70          	sub    $0x70,%rsp
   2c8fa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2c8fe:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2c902:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2c906:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   2c90a:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   2c90e:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
   2c912:	48 8b 45 18          	mov    0x18(%rbp),%rax
   2c916:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2c91a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2c921:	00 00 
   2c923:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2c927:	31 c0                	xor    %eax,%eax
   2c929:	48 8b 05 10 a9 01 00 	mov    0x1a910(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2c930:	48 89 c7             	mov    %rax,%rdi
   2c933:	e8 d4 c3 ff ff       	callq  28d0c <_Ux86_64_get_accessors>
   2c938:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c93c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   2c943:	00 
   2c944:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c948:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2c94c:	e9 b8 00 00 00       	jmpq   2ca09 <linear_search+0x117>
   2c951:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c955:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2c959:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2c95d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   2c961:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   2c965:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2c969:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c96d:	ff 75 98             	pushq  -0x68(%rbp)
   2c970:	6a 00                	pushq  $0x0
   2c972:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   2c978:	49 89 f8             	mov    %rdi,%r8
   2c97b:	48 89 c7             	mov    %rax,%rdi
   2c97e:	e8 c7 18 00 00       	callq  2e24a <_ULx86_64_dwarf_extract_proc_info_from_fde>
   2c983:	48 83 c4 10          	add    $0x10,%rsp
   2c987:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2c98a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2c98e:	79 08                	jns    2c998 <linear_search+0xa6>
   2c990:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2c993:	e9 96 00 00 00       	jmpq   2ca2e <linear_search+0x13c>
   2c998:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c99c:	48 8b 00             	mov    (%rax),%rax
   2c99f:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   2c9a3:	72 64                	jb     2ca09 <linear_search+0x117>
   2c9a5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c9a9:	48 8b 40 08          	mov    0x8(%rax),%rax
   2c9ad:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   2c9b1:	73 56                	jae    2ca09 <linear_search+0x117>
   2c9b3:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
   2c9b7:	75 07                	jne    2c9c0 <linear_search+0xce>
   2c9b9:	b8 01 00 00 00       	mov    $0x1,%eax
   2c9be:	eb 6e                	jmp    2ca2e <linear_search+0x13c>
   2c9c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c9c4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2c9c8:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2c9cc:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   2c9d0:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   2c9d4:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2c9d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c9dc:	ff 75 98             	pushq  -0x68(%rbp)
   2c9df:	6a 00                	pushq  $0x0
   2c9e1:	44 8b 4d 10          	mov    0x10(%rbp),%r9d
   2c9e5:	49 89 f8             	mov    %rdi,%r8
   2c9e8:	48 89 c7             	mov    %rax,%rdi
   2c9eb:	e8 5a 18 00 00       	callq  2e24a <_ULx86_64_dwarf_extract_proc_info_from_fde>
   2c9f0:	48 83 c4 10          	add    $0x10,%rsp
   2c9f4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2c9f7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2c9fb:	79 05                	jns    2ca02 <linear_search+0x110>
   2c9fd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2ca00:	eb 2c                	jmp    2ca2e <linear_search+0x13c>
   2ca02:	b8 01 00 00 00       	mov    $0x1,%eax
   2ca07:	eb 25                	jmp    2ca2e <linear_search+0x13c>
   2ca09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ca0d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2ca11:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2ca15:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   2ca19:	76 0e                	jbe    2ca29 <linear_search+0x137>
   2ca1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2ca1f:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   2ca23:	0f 87 28 ff ff ff    	ja     2c951 <linear_search+0x5f>
   2ca29:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   2ca2e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2ca32:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2ca39:	00 00 
   2ca3b:	74 05                	je     2ca42 <linear_search+0x150>
   2ca3d:	e8 4a ea fd ff       	callq  b48c <__stack_chk_fail>
   2ca42:	c9                   	leaveq 
   2ca43:	c3                   	retq   

000000000002ca44 <_ULx86_64_dwarf_callback>:
   2ca44:	55                   	push   %rbp
   2ca45:	48 89 e5             	mov    %rsp,%rbp
   2ca48:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   2ca4f:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
   2ca56:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
   2ca5d:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   2ca64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ca6b:	00 00 
   2ca6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ca71:	31 c0                	xor    %eax,%eax
   2ca73:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2ca7a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2ca7e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2ca82:	48 83 c0 18          	add    $0x18,%rax
   2ca86:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2ca8a:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
   2ca91:	00 
   2ca92:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2ca96:	8b 40 10             	mov    0x10(%rax),%eax
   2ca99:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2ca9f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2caa3:	48 8b 40 08          	mov    0x8(%rax),%rax
   2caa7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2caab:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   2cab2:	00 
   2cab3:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
   2caba:	00 00 00 
   2cabd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2cac1:	48 8b 00             	mov    (%rax),%rax
   2cac4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2cac8:	48 83 bd 30 ff ff ff 	cmpq   $0x19,-0xd0(%rbp)
   2cacf:	19 
   2cad0:	77 0a                	ja     2cadc <_ULx86_64_dwarf_callback+0x98>
   2cad2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2cad7:	e9 01 04 00 00       	jmpq   2cedd <_ULx86_64_dwarf_callback+0x499>
   2cadc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2cae3:	48 8b 40 10          	mov    0x10(%rax),%rax
   2cae7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   2caee:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2caf5:	48 8b 00             	mov    (%rax),%rax
   2caf8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2cafc:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   2cb03:	00 
   2cb04:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
   2cb0b:	00 00 00 00 
   2cb0f:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
   2cb16:	00 00 00 00 
   2cb1a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2cb21:	0f b7 40 18          	movzwl 0x18(%rax),%eax
   2cb25:	0f b7 c0             	movzwl %ax,%eax
   2cb28:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2cb2c:	e9 c5 00 00 00       	jmpq   2cbf6 <_ULx86_64_dwarf_callback+0x1b2>
   2cb31:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cb38:	8b 00                	mov    (%rax),%eax
   2cb3a:	83 f8 01             	cmp    $0x1,%eax
   2cb3d:	75 73                	jne    2cbb2 <_ULx86_64_dwarf_callback+0x16e>
   2cb3f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cb46:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2cb4a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cb4e:	48 01 d0             	add    %rdx,%rax
   2cb51:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2cb55:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2cb59:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2cb5d:	72 23                	jb     2cb82 <_ULx86_64_dwarf_callback+0x13e>
   2cb5f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cb66:	48 8b 50 28          	mov    0x28(%rax),%rdx
   2cb6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2cb6e:	48 01 d0             	add    %rdx,%rax
   2cb71:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   2cb75:	73 0b                	jae    2cb82 <_ULx86_64_dwarf_callback+0x13e>
   2cb77:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cb7e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   2cb82:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cb89:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2cb8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2cb91:	48 01 d0             	add    %rdx,%rax
   2cb94:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   2cb98:	73 54                	jae    2cbee <_ULx86_64_dwarf_callback+0x1aa>
   2cb9a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cba1:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2cba5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2cba9:	48 01 d0             	add    %rdx,%rax
   2cbac:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   2cbb0:	eb 3c                	jmp    2cbee <_ULx86_64_dwarf_callback+0x1aa>
   2cbb2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cbb9:	8b 00                	mov    (%rax),%eax
   2cbbb:	3d 50 e5 74 64       	cmp    $0x6474e550,%eax
   2cbc0:	75 10                	jne    2cbd2 <_ULx86_64_dwarf_callback+0x18e>
   2cbc2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cbc9:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   2cbd0:	eb 1c                	jmp    2cbee <_ULx86_64_dwarf_callback+0x1aa>
   2cbd2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cbd9:	8b 00                	mov    (%rax),%eax
   2cbdb:	83 f8 02             	cmp    $0x2,%eax
   2cbde:	75 0e                	jne    2cbee <_ULx86_64_dwarf_callback+0x1aa>
   2cbe0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2cbe7:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   2cbee:	48 83 85 68 ff ff ff 	addq   $0x38,-0x98(%rbp)
   2cbf5:	38 
   2cbf6:	48 83 6d 90 01       	subq   $0x1,-0x70(%rbp)
   2cbfb:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2cc00:	0f 89 2b ff ff ff    	jns    2cb31 <_ULx86_64_dwarf_callback+0xed>
   2cc06:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   2cc0b:	75 0a                	jne    2cc17 <_ULx86_64_dwarf_callback+0x1d3>
   2cc0d:	b8 00 00 00 00       	mov    $0x0,%eax
   2cc12:	e9 c6 02 00 00       	jmpq   2cedd <_ULx86_64_dwarf_callback+0x499>
   2cc17:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
   2cc1e:	00 
   2cc1f:	74 23                	je     2cc44 <_ULx86_64_dwarf_callback+0x200>
   2cc21:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2cc28:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2cc2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cc30:	48 01 d0             	add    %rdx,%rax
   2cc33:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2cc37:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2cc3c:	0f 84 95 02 00 00    	je     2ced7 <_ULx86_64_dwarf_callback+0x493>
   2cc42:	eb 05                	jmp    2cc49 <_ULx86_64_dwarf_callback+0x205>
   2cc44:	e8 90 e9 00 00       	callq  3b5d9 <abort>
   2cc49:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   2cc50:	00 
   2cc51:	74 4a                	je     2cc9d <_ULx86_64_dwarf_callback+0x259>
   2cc53:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2cc5a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2cc5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cc62:	48 01 d0             	add    %rdx,%rax
   2cc65:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2cc69:	eb 24                	jmp    2cc8f <_ULx86_64_dwarf_callback+0x24b>
   2cc6b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2cc6f:	48 8b 00             	mov    (%rax),%rax
   2cc72:	48 83 f8 03          	cmp    $0x3,%rax
   2cc76:	75 12                	jne    2cc8a <_ULx86_64_dwarf_callback+0x246>
   2cc78:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2cc7c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2cc80:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2cc84:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2cc88:	eb 1f                	jmp    2cca9 <_ULx86_64_dwarf_callback+0x265>
   2cc8a:	48 83 45 98 10       	addq   $0x10,-0x68(%rbp)
   2cc8f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2cc93:	48 8b 00             	mov    (%rax),%rax
   2cc96:	48 85 c0             	test   %rax,%rax
   2cc99:	75 d0                	jne    2cc6b <_ULx86_64_dwarf_callback+0x227>
   2cc9b:	eb 0c                	jmp    2cca9 <_ULx86_64_dwarf_callback+0x265>
   2cc9d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2cca1:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   2cca8:	00 
   2cca9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ccad:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2ccb1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2ccb5:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2ccb9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2ccbd:	0f b6 00             	movzbl (%rax),%eax
   2ccc0:	3c 01                	cmp    $0x1,%al
   2ccc2:	74 0a                	je     2ccce <_ULx86_64_dwarf_callback+0x28a>
   2ccc4:	b8 00 00 00 00       	mov    $0x0,%eax
   2ccc9:	e9 0f 02 00 00       	jmpq   2cedd <_ULx86_64_dwarf_callback+0x499>
   2ccce:	48 8b 05 6b a5 01 00 	mov    0x1a56b(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2ccd5:	48 89 c7             	mov    %rax,%rdi
   2ccd8:	e8 2f c0 ff ff       	callq  28d0c <_Ux86_64_get_accessors>
   2ccdd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2cce1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cce5:	48 83 c0 04          	add    $0x4,%rax
   2cce9:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   2ccf0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2ccf4:	0f b6 40 01          	movzbl 0x1(%rax),%eax
   2ccf8:	0f b6 c8             	movzbl %al,%ecx
   2ccfb:	48 8b 05 3e a5 01 00 	mov    0x1a53e(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2cd02:	4c 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%r8
   2cd09:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2cd0d:	48 8d 95 58 ff ff ff 	lea    -0xa8(%rbp),%rdx
   2cd14:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2cd18:	48 83 ec 08          	sub    $0x8,%rsp
   2cd1c:	6a 00                	pushq  $0x0
   2cd1e:	4d 89 c1             	mov    %r8,%r9
   2cd21:	49 89 f8             	mov    %rdi,%r8
   2cd24:	48 89 c7             	mov    %rax,%rdi
   2cd27:	e8 1f 83 ff ff       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   2cd2c:	48 83 c4 10          	add    $0x10,%rsp
   2cd30:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   2cd36:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2cd3d:	79 0b                	jns    2cd4a <_ULx86_64_dwarf_callback+0x306>
   2cd3f:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   2cd45:	e9 93 01 00 00       	jmpq   2cedd <_ULx86_64_dwarf_callback+0x499>
   2cd4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cd4e:	0f b6 40 02          	movzbl 0x2(%rax),%eax
   2cd52:	0f b6 c8             	movzbl %al,%ecx
   2cd55:	48 8b 05 e4 a4 01 00 	mov    0x1a4e4(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2cd5c:	4c 8d 45 e8          	lea    -0x18(%rbp),%r8
   2cd60:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   2cd64:	48 8d 95 58 ff ff ff 	lea    -0xa8(%rbp),%rdx
   2cd6b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2cd6f:	48 83 ec 08          	sub    $0x8,%rsp
   2cd73:	6a 00                	pushq  $0x0
   2cd75:	4d 89 c1             	mov    %r8,%r9
   2cd78:	49 89 f8             	mov    %rdi,%r8
   2cd7b:	48 89 c7             	mov    %rax,%rdi
   2cd7e:	e8 c8 82 ff ff       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   2cd83:	48 83 c4 10          	add    $0x10,%rsp
   2cd87:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   2cd8d:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2cd94:	79 0b                	jns    2cda1 <_ULx86_64_dwarf_callback+0x35d>
   2cd96:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   2cd9c:	e9 3c 01 00 00       	jmpq   2cedd <_ULx86_64_dwarf_callback+0x499>
   2cda1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cda5:	0f b6 40 03          	movzbl 0x3(%rax),%eax
   2cda9:	3c 3b                	cmp    $0x3b,%al
   2cdab:	0f 84 8e 00 00 00    	je     2ce3f <_ULx86_64_dwarf_callback+0x3fb>
   2cdb1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2cdb5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2cdb9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cdbd:	0f b6 40 02          	movzbl 0x2(%rax),%eax
   2cdc1:	3c ff                	cmp    $0xff,%al
   2cdc3:	75 08                	jne    2cdcd <_ULx86_64_dwarf_callback+0x389>
   2cdc5:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
   2cdcc:	ff 
   2cdcd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cdd1:	0f b6 40 01          	movzbl 0x1(%rax),%eax
   2cdd5:	3c ff                	cmp    $0xff,%al
   2cdd7:	75 05                	jne    2cdde <_ULx86_64_dwarf_callback+0x39a>
   2cdd9:	e8 fb e7 00 00       	callq  3b5d9 <abort>
   2cdde:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
   2cde2:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   2cde9:	48 8b 05 50 a4 01 00 	mov    0x1a450(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2cdf0:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
   2cdf4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2cdf8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   2cdfc:	6a 00                	pushq  $0x0
   2cdfe:	8b bd 50 ff ff ff    	mov    -0xb0(%rbp),%edi
   2ce04:	57                   	push   %rdi
   2ce05:	48 89 c7             	mov    %rax,%rdi
   2ce08:	e8 e5 fa ff ff       	callq  2c8f2 <linear_search>
   2ce0d:	48 83 c4 10          	add    $0x10,%rsp
   2ce11:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2ce17:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%rbp)
   2ce1e:	74 0f                	je     2ce2f <_ULx86_64_dwarf_callback+0x3eb>
   2ce20:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
   2ce27:	00 00 00 
   2ce2a:	e9 a8 00 00 00       	jmpq   2ced7 <_ULx86_64_dwarf_callback+0x493>
   2ce2f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2ce33:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2ce3a:	e9 98 00 00 00       	jmpq   2ced7 <_ULx86_64_dwarf_callback+0x493>
   2ce3f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ce43:	c7 40 28 02 00 00 00 	movl   $0x2,0x28(%rax)
   2ce4a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2ce4e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2ce52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2ce56:	48 01 c2             	add    %rax,%rdx
   2ce59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ce5d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2ce61:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2ce65:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2ce69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2ce6d:	48 01 c2             	add    %rax,%rdx
   2ce70:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2ce74:	48 8b 40 28          	mov    0x28(%rax),%rax
   2ce78:	48 01 c2             	add    %rax,%rdx
   2ce7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ce7f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2ce83:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2ce8a:	48 8b 40 08          	mov    0x8(%rax),%rax
   2ce8e:	48 89 c2             	mov    %rax,%rdx
   2ce91:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ce95:	48 89 50 30          	mov    %rdx,0x30(%rax)
   2ce99:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   2cea0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2cea4:	48 89 50 48          	mov    %rdx,0x48(%rax)
   2cea8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2ceac:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   2ceb3:	ff ff 1f 
   2ceb6:	48 21 c2             	and    %rax,%rdx
   2ceb9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2cebd:	48 89 50 40          	mov    %rdx,0x40(%rax)
   2cec1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   2cec5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2cec9:	48 89 50 38          	mov    %rdx,0x38(%rax)
   2cecd:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%rbp)
   2ced4:	00 00 00 
   2ced7:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2cedd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2cee1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2cee8:	00 00 
   2ceea:	74 05                	je     2cef1 <_ULx86_64_dwarf_callback+0x4ad>
   2ceec:	e8 9b e5 fd ff       	callq  b48c <__stack_chk_fail>
   2cef1:	c9                   	leaveq 
   2cef2:	c3                   	retq   

000000000002cef3 <_ULx86_64_dwarf_find_proc_info>:
   2cef3:	55                   	push   %rbp
   2cef4:	48 89 e5             	mov    %rsp,%rbp
   2cef7:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
   2cefe:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
   2cf05:	48 89 b5 90 fe ff ff 	mov    %rsi,-0x170(%rbp)
   2cf0c:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
   2cf13:	89 8d 84 fe ff ff    	mov    %ecx,-0x17c(%rbp)
   2cf19:	4c 89 85 78 fe ff ff 	mov    %r8,-0x188(%rbp)
   2cf20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2cf27:	00 00 
   2cf29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2cf2d:	31 c0                	xor    %eax,%eax
   2cf2f:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   2cf36:	ba b8 00 00 00       	mov    $0xb8,%edx
   2cf3b:	be 00 00 00 00       	mov    $0x0,%esi
   2cf40:	48 89 c7             	mov    %rax,%rdi
   2cf43:	e8 ed 67 fe ff       	callq  13735 <memset>
   2cf48:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
   2cf4f:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   2cf56:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
   2cf5d:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
   2cf64:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
   2cf6a:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   2cf70:	c7 85 f0 fe ff ff ff 	movl   $0xffffffff,-0x110(%rbp)
   2cf77:	ff ff ff 
   2cf7a:	c7 85 40 ff ff ff ff 	movl   $0xffffffff,-0xc0(%rbp)
   2cf81:	ff ff ff 
   2cf84:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   2cf8b:	48 89 c7             	mov    %rax,%rdi
   2cf8e:	e8 54 f9 ff ff       	callq  2c8e7 <mark_as_used>
   2cf93:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   2cf9a:	48 89 c6             	mov    %rax,%rsi
   2cf9d:	48 8d 3d a0 fa ff ff 	lea    -0x560(%rip),%rdi        # 2ca44 <_ULx86_64_dwarf_callback>
   2cfa4:	e8 3e 05 00 00       	callq  2d4e7 <dl_iterate_phdr>
   2cfa9:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
   2cfaf:	bf 00 00 00 00       	mov    $0x0,%edi
   2cfb4:	e8 2e f9 ff ff       	callq  2c8e7 <mark_as_used>
   2cfb9:	83 bd ac fe ff ff 00 	cmpl   $0x0,-0x154(%rbp)
   2cfc0:	0f 8e cf 00 00 00    	jle    2d095 <_ULx86_64_dwarf_find_proc_info+0x1a2>
   2cfc6:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   2cfcc:	85 c0                	test   %eax,%eax
   2cfce:	74 0a                	je     2cfda <_ULx86_64_dwarf_find_proc_info+0xe7>
   2cfd0:	b8 00 00 00 00       	mov    $0x0,%eax
   2cfd5:	e9 cb 00 00 00       	jmpq   2d0a5 <_ULx86_64_dwarf_find_proc_info+0x1b2>
   2cfda:	8b 85 f0 fe ff ff    	mov    -0x110(%rbp),%eax
   2cfe0:	83 f8 ff             	cmp    $0xffffffff,%eax
   2cfe3:	74 49                	je     2d02e <_ULx86_64_dwarf_find_proc_info+0x13b>
   2cfe5:	4c 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%r8
   2cfec:	8b 8d 84 fe ff ff    	mov    -0x17c(%rbp),%ecx
   2cff2:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
   2cff9:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   2d000:	48 8d 78 18          	lea    0x18(%rax),%rdi
   2d004:	48 8b b5 90 fe ff ff 	mov    -0x170(%rbp),%rsi
   2d00b:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   2d012:	4d 89 c1             	mov    %r8,%r9
   2d015:	41 89 c8             	mov    %ecx,%r8d
   2d018:	48 89 d1             	mov    %rdx,%rcx
   2d01b:	48 89 fa             	mov    %rdi,%rdx
   2d01e:	48 89 c7             	mov    %rax,%rdi
   2d021:	e8 6a 01 00 00       	callq  2d190 <_ULx86_64_dwarf_search_unwind_table>
   2d026:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
   2d02c:	eb 0a                	jmp    2d038 <_ULx86_64_dwarf_find_proc_info+0x145>
   2d02e:	c7 85 ac fe ff ff f6 	movl   $0xfffffff6,-0x154(%rbp)
   2d035:	ff ff ff 
   2d038:	83 bd ac fe ff ff f6 	cmpl   $0xfffffff6,-0x154(%rbp)
   2d03f:	75 5e                	jne    2d09f <_ULx86_64_dwarf_find_proc_info+0x1ac>
   2d041:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2d047:	83 f8 ff             	cmp    $0xffffffff,%eax
   2d04a:	74 53                	je     2d09f <_ULx86_64_dwarf_find_proc_info+0x1ac>
   2d04c:	4c 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%r8
   2d053:	8b 8d 84 fe ff ff    	mov    -0x17c(%rbp),%ecx
   2d059:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
   2d060:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   2d067:	48 8d 78 68          	lea    0x68(%rax),%rdi
   2d06b:	48 8b b5 90 fe ff ff 	mov    -0x170(%rbp),%rsi
   2d072:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   2d079:	4d 89 c1             	mov    %r8,%r9
   2d07c:	41 89 c8             	mov    %ecx,%r8d
   2d07f:	48 89 d1             	mov    %rdx,%rcx
   2d082:	48 89 fa             	mov    %rdi,%rdx
   2d085:	48 89 c7             	mov    %rax,%rdi
   2d088:	e8 03 01 00 00       	callq  2d190 <_ULx86_64_dwarf_search_unwind_table>
   2d08d:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
   2d093:	eb 0a                	jmp    2d09f <_ULx86_64_dwarf_find_proc_info+0x1ac>
   2d095:	c7 85 ac fe ff ff f6 	movl   $0xfffffff6,-0x154(%rbp)
   2d09c:	ff ff ff 
   2d09f:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
   2d0a5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2d0a9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2d0b0:	00 00 
   2d0b2:	74 05                	je     2d0b9 <_ULx86_64_dwarf_find_proc_info+0x1c6>
   2d0b4:	e8 d3 e3 fd ff       	callq  b48c <__stack_chk_fail>
   2d0b9:	c9                   	leaveq 
   2d0ba:	c3                   	retq   

000000000002d0bb <lookup>:
   2d0bb:	55                   	push   %rbp
   2d0bc:	48 89 e5             	mov    %rsp,%rbp
   2d0bf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2d0c3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2d0c7:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2d0ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d0ce:	48 c1 e8 03          	shr    $0x3,%rax
   2d0d2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d0d6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2d0dd:	00 
   2d0de:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   2d0e5:	00 
   2d0e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d0ea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d0ee:	eb 4a                	jmp    2d13a <lookup+0x7f>
   2d0f0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2d0f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d0f8:	48 01 d0             	add    %rdx,%rax
   2d0fb:	48 d1 e8             	shr    %rax
   2d0fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d106:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2d10d:	00 
   2d10e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d112:	48 01 d0             	add    %rdx,%rax
   2d115:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d119:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d11d:	8b 00                	mov    (%rax),%eax
   2d11f:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2d122:	7d 0a                	jge    2d12e <lookup+0x73>
   2d124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d128:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d12c:	eb 0c                	jmp    2d13a <lookup+0x7f>
   2d12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d132:	48 83 c0 01          	add    $0x1,%rax
   2d136:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d13a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d13e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2d142:	72 ac                	jb     2d0f0 <lookup+0x35>
   2d144:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2d149:	75 07                	jne    2d152 <lookup+0x97>
   2d14b:	b8 00 00 00 00       	mov    $0x0,%eax
   2d150:	eb 1b                	jmp    2d16d <lookup+0xb2>
   2d152:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d156:	48 c1 e0 03          	shl    $0x3,%rax
   2d15a:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
   2d15e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d162:	48 01 d0             	add    %rdx,%rax
   2d165:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d169:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d16d:	5d                   	pop    %rbp
   2d16e:	c3                   	retq   

000000000002d16f <is_remote_table>:
   2d16f:	55                   	push   %rbp
   2d170:	48 89 e5             	mov    %rsp,%rbp
   2d173:	89 7d fc             	mov    %edi,-0x4(%rbp)
   2d176:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   2d17a:	74 06                	je     2d182 <is_remote_table+0x13>
   2d17c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
   2d180:	75 07                	jne    2d189 <is_remote_table+0x1a>
   2d182:	b8 01 00 00 00       	mov    $0x1,%eax
   2d187:	eb 05                	jmp    2d18e <is_remote_table+0x1f>
   2d189:	b8 00 00 00 00       	mov    $0x0,%eax
   2d18e:	5d                   	pop    %rbp
   2d18f:	c3                   	retq   

000000000002d190 <_ULx86_64_dwarf_search_unwind_table>:
   2d190:	55                   	push   %rbp
   2d191:	48 89 e5             	mov    %rsp,%rbp
   2d194:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   2d19b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   2d19f:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   2d1a3:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   2d1a7:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   2d1ab:	44 89 85 7c ff ff ff 	mov    %r8d,-0x84(%rbp)
   2d1b2:	4c 89 8d 70 ff ff ff 	mov    %r9,-0x90(%rbp)
   2d1b9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2d1c0:	00 00 
   2d1c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d1c6:	31 c0                	xor    %eax,%eax
   2d1c8:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   2d1cf:	00 
   2d1d0:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   2d1d7:	00 
   2d1d8:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   2d1df:	00 
   2d1e0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d1e4:	8b 40 28             	mov    0x28(%rax),%eax
   2d1e7:	89 c7                	mov    %eax,%edi
   2d1e9:	e8 81 ff ff ff       	callq  2d16f <is_remote_table>
   2d1ee:	85 c0                	test   %eax,%eax
   2d1f0:	75 2b                	jne    2d21d <_ULx86_64_dwarf_search_unwind_table+0x8d>
   2d1f2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d1f6:	8b 40 28             	mov    0x28(%rax),%eax
   2d1f9:	83 f8 01             	cmp    $0x1,%eax
   2d1fc:	74 1f                	je     2d21d <_ULx86_64_dwarf_search_unwind_table+0x8d>
   2d1fe:	48 8d 0d 1b 0f 01 00 	lea    0x10f1b(%rip),%rcx        # 3e120 <__PRETTY_FUNCTION__.5606>
   2d205:	ba 47 03 00 00       	mov    $0x347,%edx
   2d20a:	48 8d 35 3f 0e 01 00 	lea    0x10e3f(%rip),%rsi        # 3e050 <operands+0x390>
   2d211:	48 8d 3d 58 0e 01 00 	lea    0x10e58(%rip),%rdi        # 3e070 <operands+0x3b0>
   2d218:	e8 d2 82 ff ff       	callq  254ef <__assert_fail>
   2d21d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d221:	48 8b 40 10          	mov    0x10(%rax),%rax
   2d225:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   2d229:	72 0e                	jb     2d239 <_ULx86_64_dwarf_search_unwind_table+0xa9>
   2d22b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d22f:	48 8b 40 18          	mov    0x18(%rax),%rax
   2d233:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   2d237:	72 1f                	jb     2d258 <_ULx86_64_dwarf_search_unwind_table+0xc8>
   2d239:	48 8d 0d e0 0e 01 00 	lea    0x10ee0(%rip),%rcx        # 3e120 <__PRETTY_FUNCTION__.5606>
   2d240:	ba 49 03 00 00       	mov    $0x349,%edx
   2d245:	48 8d 35 04 0e 01 00 	lea    0x10e04(%rip),%rsi        # 3e050 <operands+0x390>
   2d24c:	48 8d 3d 65 0e 01 00 	lea    0x10e65(%rip),%rdi        # 3e0b8 <operands+0x3f8>
   2d253:	e8 97 82 ff ff       	callq  254ef <__assert_fail>
   2d258:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d25c:	8b 40 28             	mov    0x28(%rax),%eax
   2d25f:	89 c7                	mov    %eax,%edi
   2d261:	e8 09 ff ff ff       	callq  2d16f <is_remote_table>
   2d266:	85 c0                	test   %eax,%eax
   2d268:	74 26                	je     2d290 <_ULx86_64_dwarf_search_unwind_table+0x100>
   2d26a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d26e:	48 8b 40 48          	mov    0x48(%rax),%rax
   2d272:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2d276:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d27a:	48 8b 40 40          	mov    0x40(%rax),%rax
   2d27e:	48 c1 e0 03          	shl    $0x3,%rax
   2d282:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d286:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   2d28d:	00 
   2d28e:	eb 6a                	jmp    2d2fa <_ULx86_64_dwarf_search_unwind_table+0x16a>
   2d290:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d294:	8b 40 28             	mov    0x28(%rax),%eax
   2d297:	83 f8 01             	cmp    $0x1,%eax
   2d29a:	74 1f                	je     2d2bb <_ULx86_64_dwarf_search_unwind_table+0x12b>
   2d29c:	48 8d 0d 7d 0e 01 00 	lea    0x10e7d(%rip),%rcx        # 3e120 <__PRETTY_FUNCTION__.5606>
   2d2a3:	ba 53 03 00 00       	mov    $0x353,%edx
   2d2a8:	48 8d 35 a1 0d 01 00 	lea    0x10da1(%rip),%rsi        # 3e050 <operands+0x390>
   2d2af:	48 8d 3d 2a 0e 01 00 	lea    0x10e2a(%rip),%rdi        # 3e0e0 <operands+0x420>
   2d2b6:	e8 34 82 ff ff       	callq  254ef <__assert_fail>
   2d2bb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d2bf:	48 8b 40 48          	mov    0x48(%rax),%rax
   2d2c3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d2c7:	48 8b 05 72 9f 01 00 	mov    0x19f72(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2d2ce:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2d2d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d2d6:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d2da:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2d2de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d2e2:	48 8b 40 28          	mov    0x28(%rax),%rax
   2d2e6:	48 c1 e0 03          	shl    $0x3,%rax
   2d2ea:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d2ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d2f2:	48 8b 40 10          	mov    0x10(%rax),%rax
   2d2f6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2d2fa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d2fe:	48 89 c7             	mov    %rax,%rdi
   2d301:	e8 06 ba ff ff       	callq  28d0c <_Ux86_64_get_accessors>
   2d306:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d30a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d30e:	48 8b 40 38          	mov    0x38(%rax),%rax
   2d312:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d316:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d31a:	8b 40 28             	mov    0x28(%rax),%eax
   2d31d:	83 f8 04             	cmp    $0x4,%eax
   2d320:	75 0e                	jne    2d330 <_ULx86_64_dwarf_search_unwind_table+0x1a0>
   2d322:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d326:	48 8b 40 10          	mov    0x10(%rax),%rax
   2d32a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2d32e:	eb 08                	jmp    2d338 <_ULx86_64_dwarf_search_unwind_table+0x1a8>
   2d330:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d334:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2d338:	48 8b 05 01 9f 01 00 	mov    0x19f01(%rip),%rax        # 47240 <_ULx86_64_local_addr_space>
   2d33f:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   2d343:	75 74                	jne    2d3b9 <_ULx86_64_dwarf_search_unwind_table+0x229>
   2d345:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d349:	89 c2                	mov    %eax,%edx
   2d34b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d34f:	29 c2                	sub    %eax,%edx
   2d351:	89 d0                	mov    %edx,%eax
   2d353:	89 c2                	mov    %eax,%edx
   2d355:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2d359:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d35d:	48 89 ce             	mov    %rcx,%rsi
   2d360:	48 89 c7             	mov    %rax,%rdi
   2d363:	e8 53 fd ff ff       	callq  2d0bb <lookup>
   2d368:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2d36c:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2d371:	74 3a                	je     2d3ad <_ULx86_64_dwarf_search_unwind_table+0x21d>
   2d373:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2d377:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2d37b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d37f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   2d386:	00 
   2d387:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d38b:	48 01 c8             	add    %rcx,%rax
   2d38e:	48 39 c2             	cmp    %rax,%rdx
   2d391:	73 1a                	jae    2d3ad <_ULx86_64_dwarf_search_unwind_table+0x21d>
   2d393:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2d397:	48 83 c0 08          	add    $0x8,%rax
   2d39b:	8b 00                	mov    (%rax),%eax
   2d39d:	48 63 d0             	movslq %eax,%rdx
   2d3a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d3a4:	48 01 d0             	add    %rdx,%rax
   2d3a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d3ab:	eb 0c                	jmp    2d3b9 <_ULx86_64_dwarf_search_unwind_table+0x229>
   2d3ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d3b1:	48 8b 40 18          	mov    0x18(%rax),%rax
   2d3b5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d3b9:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2d3be:	75 0a                	jne    2d3ca <_ULx86_64_dwarf_search_unwind_table+0x23a>
   2d3c0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   2d3c5:	e9 f4 00 00 00       	jmpq   2d4be <_ULx86_64_dwarf_search_unwind_table+0x32e>
   2d3ca:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   2d3cf:	74 17                	je     2d3e8 <_ULx86_64_dwarf_search_unwind_table+0x258>
   2d3d1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2d3d5:	8b 40 04             	mov    0x4(%rax),%eax
   2d3d8:	48 63 d0             	movslq %eax,%rdx
   2d3db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d3df:	48 01 d0             	add    %rdx,%rax
   2d3e2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d3e6:	eb 15                	jmp    2d3fd <_ULx86_64_dwarf_search_unwind_table+0x26d>
   2d3e8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2d3ec:	8b 40 04             	mov    0x4(%rax),%eax
   2d3ef:	48 63 d0             	movslq %eax,%rdx
   2d3f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d3f6:	48 01 d0             	add    %rdx,%rax
   2d3f9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d3fd:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   2d402:	0f 95 c0             	setne  %al
   2d405:	44 0f b6 c0          	movzbl %al,%r8d
   2d409:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   2d40e:	74 06                	je     2d416 <_ULx86_64_dwarf_search_unwind_table+0x286>
   2d410:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d414:	eb 04                	jmp    2d41a <_ULx86_64_dwarf_search_unwind_table+0x28a>
   2d416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d41a:	44 8b 8d 7c ff ff ff 	mov    -0x84(%rbp),%r9d
   2d421:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   2d425:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   2d429:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2d42d:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   2d431:	ff b5 70 ff ff ff    	pushq  -0x90(%rbp)
   2d437:	41 50                	push   %r8
   2d439:	49 89 c0             	mov    %rax,%r8
   2d43c:	e8 09 0e 00 00       	callq  2e24a <_ULx86_64_dwarf_extract_proc_info_from_fde>
   2d441:	48 83 c4 10          	add    $0x10,%rsp
   2d445:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   2d448:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   2d44c:	79 05                	jns    2d453 <_ULx86_64_dwarf_search_unwind_table+0x2c3>
   2d44e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   2d451:	eb 6b                	jmp    2d4be <_ULx86_64_dwarf_search_unwind_table+0x32e>
   2d453:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2d457:	8b 40 28             	mov    0x28(%rax),%eax
   2d45a:	83 f8 01             	cmp    $0x1,%eax
   2d45d:	75 38                	jne    2d497 <_ULx86_64_dwarf_search_unwind_table+0x307>
   2d45f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d463:	48 8b 10             	mov    (%rax),%rdx
   2d466:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d46a:	48 01 c2             	add    %rax,%rdx
   2d46d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d471:	48 89 10             	mov    %rdx,(%rax)
   2d474:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d478:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2d47c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d480:	48 01 c2             	add    %rax,%rdx
   2d483:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d487:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2d48b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d48f:	48 c7 40 28 20 00 00 	movq   $0x20,0x28(%rax)
   2d496:	00 
   2d497:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d49b:	48 8b 00             	mov    (%rax),%rax
   2d49e:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   2d4a2:	72 0e                	jb     2d4b2 <_ULx86_64_dwarf_search_unwind_table+0x322>
   2d4a4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2d4a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   2d4ac:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   2d4b0:	72 07                	jb     2d4b9 <_ULx86_64_dwarf_search_unwind_table+0x329>
   2d4b2:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   2d4b7:	eb 05                	jmp    2d4be <_ULx86_64_dwarf_search_unwind_table+0x32e>
   2d4b9:	b8 00 00 00 00       	mov    $0x0,%eax
   2d4be:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2d4c2:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2d4c9:	00 00 
   2d4cb:	74 05                	je     2d4d2 <_ULx86_64_dwarf_search_unwind_table+0x342>
   2d4cd:	e8 ba df fd ff       	callq  b48c <__stack_chk_fail>
   2d4d2:	c9                   	leaveq 
   2d4d3:	c3                   	retq   

000000000002d4d4 <_ULx86_64_dwarf_put_unwind_info>:
   2d4d4:	55                   	push   %rbp
   2d4d5:	48 89 e5             	mov    %rsp,%rbp
   2d4d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2d4dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2d4e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d4e4:	90                   	nop
   2d4e5:	5d                   	pop    %rbp
   2d4e6:	c3                   	retq   

000000000002d4e7 <dl_iterate_phdr>:
   2d4e7:	55                   	push   %rbp
   2d4e8:	48 89 e5             	mov    %rsp,%rbp
   2d4eb:	48 83 ec 70          	sub    $0x70,%rsp
   2d4ef:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   2d4f3:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   2d4f7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2d4fe:	00 00 
   2d500:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d504:	31 c0                	xor    %eax,%eax
   2d506:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2d50a:	ba 40 00 00 00       	mov    $0x40,%edx
   2d50f:	be 00 00 00 00       	mov    $0x0,%esi
   2d514:	48 89 c7             	mov    %rax,%rdi
   2d517:	e8 19 62 fe ff       	callq  13735 <memset>
   2d51c:	48 8d 05 dd 2a fd ff 	lea    -0x2d523(%rip),%rax        # 0 <enclave.so>
   2d523:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d527:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d52b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2d52f:	48 8d 05 0e 0c 01 00 	lea    0x10c0e(%rip),%rax        # 3e144 <__PRETTY_FUNCTION__.5606+0x24>
   2d536:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2d53a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d53e:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2d542:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d546:	48 01 d0             	add    %rdx,%rax
   2d549:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2d54d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d551:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   2d555:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
   2d559:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2d55d:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   2d561:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d565:	be 40 00 00 00       	mov    $0x40,%esi
   2d56a:	48 89 cf             	mov    %rcx,%rdi
   2d56d:	ff d0                	callq  *%rax
   2d56f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2d573:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2d57a:	00 00 
   2d57c:	74 05                	je     2d583 <dl_iterate_phdr+0x9c>
   2d57e:	e8 09 df fd ff       	callq  b48c <__stack_chk_fail>
   2d583:	c9                   	leaveq 
   2d584:	c3                   	retq   
   2d585:	90                   	nop

000000000002d586 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   2d586:	55                   	push   %rbp
   2d587:	48 89 e5             	mov    %rsp,%rbp
   2d58a:	48 83 ec 30          	sub    $0x30,%rsp
   2d58e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2d592:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2d596:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d59a:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   2d59d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d5a1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d5a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d5a9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2d5ad:	75 07                	jne    2d5b6 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x30>
   2d5af:	b8 01 00 00 00       	mov    $0x1,%eax
   2d5b4:	eb 5c                	jmp    2d612 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x8c>
   2d5b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d5ba:	48 85 c0             	test   %rax,%rax
   2d5bd:	74 1d                	je     2d5dc <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x56>
   2d5bf:	b9 00 00 00 00       	mov    $0x0,%ecx
   2d5c4:	48 8d 15 45 93 01 00 	lea    0x19345(%rip),%rdx        # 46910 <_ZTIN10__cxxabiv117__class_type_infoE>
   2d5cb:	48 8d 35 56 93 01 00 	lea    0x19356(%rip),%rsi        # 46928 <_ZTISt9type_info>
   2d5d2:	48 89 c7             	mov    %rax,%rdi
   2d5d5:	e8 fe 00 00 00       	callq  2d6d8 <__dynamic_cast>
   2d5da:	eb 05                	jmp    2d5e1 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x5b>
   2d5dc:	b8 00 00 00 00       	mov    $0x0,%eax
   2d5e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d5e5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2d5ea:	74 21                	je     2d60d <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x87>
   2d5ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d5f0:	48 8b 00             	mov    (%rax),%rax
   2d5f3:	48 83 c0 28          	add    $0x28,%rax
   2d5f7:	48 8b 00             	mov    (%rax),%rax
   2d5fa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2d5fe:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2d602:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   2d606:	48 89 cf             	mov    %rcx,%rdi
   2d609:	ff d0                	callq  *%rax
   2d60b:	eb 05                	jmp    2d612 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x8c>
   2d60d:	b8 00 00 00 00       	mov    $0x0,%eax
   2d612:	c9                   	leaveq 
   2d613:	c3                   	retq   

000000000002d614 <_ZNK10__cxxabiv117__class_type_info7cast_toEPvPKS0_>:
   2d614:	55                   	push   %rbp
   2d615:	48 89 e5             	mov    %rsp,%rbp
   2d618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2d61c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2d620:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d628:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2d62c:	75 06                	jne    2d634 <_ZNK10__cxxabiv117__class_type_info7cast_toEPvPKS0_+0x20>
   2d62e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d632:	eb 05                	jmp    2d639 <_ZNK10__cxxabiv117__class_type_info7cast_toEPvPKS0_+0x25>
   2d634:	b8 00 00 00 00       	mov    $0x0,%eax
   2d639:	5d                   	pop    %rbp
   2d63a:	c3                   	retq   
   2d63b:	90                   	nop

000000000002d63c <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE>:
   2d63c:	55                   	push   %rbp
   2d63d:	48 89 e5             	mov    %rsp,%rbp
   2d640:	48 83 ec 20          	sub    $0x20,%rsp
   2d644:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2d648:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2d64c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d654:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2d658:	75 06                	jne    2d660 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE+0x24>
   2d65a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d65e:	eb 27                	jmp    2d687 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE+0x4b>
   2d660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d664:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d66c:	48 8b 40 10          	mov    0x10(%rax),%rax
   2d670:	48 8b 00             	mov    (%rax),%rax
   2d673:	48 83 c0 30          	add    $0x30,%rax
   2d677:	48 8b 00             	mov    (%rax),%rax
   2d67a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2d67e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2d682:	48 89 cf             	mov    %rcx,%rdi
   2d685:	ff d0                	callq  *%rax
   2d687:	c9                   	leaveq 
   2d688:	c3                   	retq   
   2d689:	90                   	nop

000000000002d68a <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv>:
   2d68a:	55                   	push   %rbp
   2d68b:	48 89 e5             	mov    %rsp,%rbp
   2d68e:	48 83 ec 20          	sub    $0x20,%rsp
   2d692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2d696:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2d69a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d69e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d6a2:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   2d6a6:	75 07                	jne    2d6af <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv+0x25>
   2d6a8:	b8 01 00 00 00       	mov    $0x1,%eax
   2d6ad:	eb 27                	jmp    2d6d6 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv+0x4c>
   2d6af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d6b3:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d6b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d6bb:	48 8b 40 10          	mov    0x10(%rax),%rax
   2d6bf:	48 8b 00             	mov    (%rax),%rax
   2d6c2:	48 83 c0 28          	add    $0x28,%rax
   2d6c6:	48 8b 00             	mov    (%rax),%rax
   2d6c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2d6cd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2d6d1:	48 89 cf             	mov    %rcx,%rdi
   2d6d4:	ff d0                	callq  *%rax
   2d6d6:	c9                   	leaveq 
   2d6d7:	c3                   	retq   

000000000002d6d8 <__dynamic_cast>:
   2d6d8:	55                   	push   %rbp
   2d6d9:	48 89 e5             	mov    %rsp,%rbp
   2d6dc:	48 83 ec 40          	sub    $0x40,%rsp
   2d6e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2d6e4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2d6e8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2d6ec:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2d6f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d6f4:	48 8b 00             	mov    (%rax),%rax
   2d6f7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d6fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d6ff:	48 83 e8 10          	sub    $0x10,%rax
   2d703:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d707:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d70b:	48 8b 00             	mov    (%rax),%rax
   2d70e:	48 89 c2             	mov    %rax,%rdx
   2d711:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d715:	48 01 d0             	add    %rdx,%rax
   2d718:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d71c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d720:	48 8b 48 08          	mov    0x8(%rax),%rcx
   2d724:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d728:	48 8b 40 08          	mov    0x8(%rax),%rax
   2d72c:	48 8b 00             	mov    (%rax),%rax
   2d72f:	48 83 c0 30          	add    $0x30,%rax
   2d733:	48 8b 00             	mov    (%rax),%rax
   2d736:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2d73a:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2d73e:	48 89 cf             	mov    %rcx,%rdi
   2d741:	ff d0                	callq  *%rax
   2d743:	c9                   	leaveq 
   2d744:	c3                   	retq   

000000000002d745 <_UIx86_64_mi_init>:
   2d745:	55                   	push   %rbp
   2d746:	48 89 e5             	mov    %rsp,%rbp
   2d749:	90                   	nop
   2d74a:	5d                   	pop    %rbp
   2d74b:	c3                   	retq   

000000000002d74c <_Ux86_64_flush_cache>:
   2d74c:	55                   	push   %rbp
   2d74d:	48 89 e5             	mov    %rsp,%rbp
   2d750:	48 83 ec 30          	sub    $0x30,%rsp
   2d754:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2d758:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2d75c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d760:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d764:	48 8b 80 88 66 00 00 	mov    0x6688(%rax),%rax
   2d76b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d76f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d773:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
   2d77a:	00 
   2d77b:	eb 39                	jmp    2d7b6 <_Ux86_64_flush_cache+0x6a>
   2d77d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d781:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d785:	48 85 c0             	test   %rax,%rax
   2d788:	74 10                	je     2d79a <_Ux86_64_flush_cache+0x4e>
   2d78a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d78e:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d792:	48 89 c7             	mov    %rax,%rdi
   2d795:	e8 a5 37 fe ff       	callq  10f3f <dlfree>
   2d79a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d79e:	48 8b 40 10          	mov    0x10(%rax),%rax
   2d7a2:	48 89 c7             	mov    %rax,%rdi
   2d7a5:	e8 95 37 fe ff       	callq  10f3f <dlfree>
   2d7aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d7ae:	48 8b 40 30          	mov    0x30(%rax),%rax
   2d7b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d7b6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2d7bb:	75 c0                	jne    2d77d <_Ux86_64_flush_cache+0x31>
   2d7bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d7c1:	48 c7 80 88 66 00 00 	movq   $0x0,0x6688(%rax)
   2d7c8:	00 00 00 00 
   2d7cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d7d0:	48 83 c0 44          	add    $0x44,%rax
   2d7d4:	f0 83 00 01          	lock addl $0x1,(%rax)
   2d7d8:	90                   	nop
   2d7d9:	c9                   	leaveq 
   2d7da:	c3                   	retq   

000000000002d7db <_U_dyn_info_list_addr>:
   2d7db:	55                   	push   %rbp
   2d7dc:	48 89 e5             	mov    %rsp,%rbp
   2d7df:	48 8d 05 4a 9b 02 00 	lea    0x29b4a(%rip),%rax        # 57330 <_U_dyn_info_list>
   2d7e6:	5d                   	pop    %rbp
   2d7e7:	c3                   	retq   

000000000002d7e8 <_ULx86_64_Iextract_dynamic_proc_info>:
   2d7e8:	55                   	push   %rbp
   2d7e9:	48 89 e5             	mov    %rsp,%rbp
   2d7ec:	48 83 ec 30          	sub    $0x30,%rsp
   2d7f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2d7f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2d7f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d7fc:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2d800:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
   2d804:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   2d808:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d80c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2d810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d814:	48 89 10             	mov    %rdx,(%rax)
   2d817:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d81b:	48 8b 50 18          	mov    0x18(%rax),%rdx
   2d81f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d823:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2d827:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d82b:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2d82f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d833:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2d837:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d83b:	8b 50 28             	mov    0x28(%rax),%edx
   2d83e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d842:	89 50 30             	mov    %edx,0x30(%rax)
   2d845:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d849:	8b 40 28             	mov    0x28(%rax),%eax
   2d84c:	85 c0                	test   %eax,%eax
   2d84e:	74 13                	je     2d863 <_ULx86_64_Iextract_dynamic_proc_info+0x7b>
   2d850:	85 c0                	test   %eax,%eax
   2d852:	0f 88 91 00 00 00    	js     2d8e9 <_ULx86_64_Iextract_dynamic_proc_info+0x101>
   2d858:	83 f8 04             	cmp    $0x4,%eax
   2d85b:	0f 8f 88 00 00 00    	jg     2d8e9 <_ULx86_64_Iextract_dynamic_proc_info+0x101>
   2d861:	eb 5f                	jmp    2d8c2 <_ULx86_64_Iextract_dynamic_proc_info+0xda>
   2d863:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d867:	48 8b 50 38          	mov    0x38(%rax),%rdx
   2d86b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d86f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2d873:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d877:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   2d87e:	00 
   2d87f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d883:	8b 40 40             	mov    0x40(%rax),%eax
   2d886:	89 c2                	mov    %eax,%edx
   2d888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d88c:	48 89 50 28          	mov    %rdx,0x28(%rax)
   2d890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d894:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
   2d89b:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   2d89f:	74 0e                	je     2d8af <_ULx86_64_Iextract_dynamic_proc_info+0xc7>
   2d8a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d8a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2d8a9:	48 89 50 38          	mov    %rdx,0x38(%rax)
   2d8ad:	eb 0c                	jmp    2d8bb <_ULx86_64_Iextract_dynamic_proc_info+0xd3>
   2d8af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d8b3:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   2d8ba:	00 
   2d8bb:	b8 00 00 00 00       	mov    $0x0,%eax
   2d8c0:	eb 2d                	jmp    2d8ef <_ULx86_64_Iextract_dynamic_proc_info+0x107>
   2d8c2:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
   2d8c6:	8b 7d dc             	mov    -0x24(%rbp),%edi
   2d8c9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   2d8cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2d8d1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2d8d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d8d9:	4d 89 c1             	mov    %r8,%r9
   2d8dc:	41 89 f8             	mov    %edi,%r8d
   2d8df:	48 89 c7             	mov    %rax,%rdi
   2d8e2:	e8 a9 f8 ff ff       	callq  2d190 <_ULx86_64_dwarf_search_unwind_table>
   2d8e7:	eb 06                	jmp    2d8ef <_ULx86_64_Iextract_dynamic_proc_info+0x107>
   2d8e9:	90                   	nop
   2d8ea:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2d8ef:	c9                   	leaveq 
   2d8f0:	c3                   	retq   

000000000002d8f1 <_ULx86_64_set_reg>:
   2d8f1:	55                   	push   %rbp
   2d8f2:	48 89 e5             	mov    %rsp,%rbp
   2d8f5:	48 83 ec 30          	sub    $0x30,%rsp
   2d8f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2d8fd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2d900:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d908:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d90c:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   2d910:	8b 75 e4             	mov    -0x1c(%rbp),%esi
   2d913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d917:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d91c:	48 89 c7             	mov    %rax,%rdi
   2d91f:	e8 95 c2 ff ff       	callq  29bb9 <_ULx86_64_access_reg>
   2d924:	c9                   	leaveq 
   2d925:	c3                   	retq   

000000000002d926 <dwarf_reads32>:
   2d926:	55                   	push   %rbp
   2d927:	48 89 e5             	mov    %rsp,%rbp
   2d92a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2d92e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2d932:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d936:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2d93a:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2d93e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d942:	48 8b 00             	mov    (%rax),%rax
   2d945:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d94d:	8b 10                	mov    (%rax),%edx
   2d94f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d953:	89 10                	mov    %edx,(%rax)
   2d955:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d959:	48 8b 00             	mov    (%rax),%rax
   2d95c:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d960:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d964:	48 89 10             	mov    %rdx,(%rax)
   2d967:	b8 00 00 00 00       	mov    $0x0,%eax
   2d96c:	5d                   	pop    %rbp
   2d96d:	c3                   	retq   

000000000002d96e <dwarf_reads64>:
   2d96e:	55                   	push   %rbp
   2d96f:	48 89 e5             	mov    %rsp,%rbp
   2d972:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2d976:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2d97a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d97e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2d982:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2d986:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d98a:	48 8b 00             	mov    (%rax),%rax
   2d98d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d995:	48 8b 10             	mov    (%rax),%rdx
   2d998:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d99c:	48 89 10             	mov    %rdx,(%rax)
   2d99f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d9a3:	48 8b 00             	mov    (%rax),%rax
   2d9a6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2d9aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d9ae:	48 89 10             	mov    %rdx,(%rax)
   2d9b1:	b8 00 00 00 00       	mov    $0x0,%eax
   2d9b6:	5d                   	pop    %rbp
   2d9b7:	c3                   	retq   

000000000002d9b8 <dwarf_readu8>:
   2d9b8:	55                   	push   %rbp
   2d9b9:	48 89 e5             	mov    %rsp,%rbp
   2d9bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2d9c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2d9c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d9c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2d9cc:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2d9d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d9d4:	48 8b 00             	mov    (%rax),%rax
   2d9d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d9df:	0f b6 10             	movzbl (%rax),%edx
   2d9e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d9e6:	88 10                	mov    %dl,(%rax)
   2d9e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d9ec:	48 8b 00             	mov    (%rax),%rax
   2d9ef:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d9f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d9f7:	48 89 10             	mov    %rdx,(%rax)
   2d9fa:	b8 00 00 00 00       	mov    $0x0,%eax
   2d9ff:	5d                   	pop    %rbp
   2da00:	c3                   	retq   

000000000002da01 <dwarf_readu16>:
   2da01:	55                   	push   %rbp
   2da02:	48 89 e5             	mov    %rsp,%rbp
   2da05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2da09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2da0d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2da11:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2da15:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2da19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2da1d:	48 8b 00             	mov    (%rax),%rax
   2da20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2da24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2da28:	0f b7 10             	movzwl (%rax),%edx
   2da2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2da2f:	66 89 10             	mov    %dx,(%rax)
   2da32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2da36:	48 8b 00             	mov    (%rax),%rax
   2da39:	48 8d 50 02          	lea    0x2(%rax),%rdx
   2da3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2da41:	48 89 10             	mov    %rdx,(%rax)
   2da44:	b8 00 00 00 00       	mov    $0x0,%eax
   2da49:	5d                   	pop    %rbp
   2da4a:	c3                   	retq   

000000000002da4b <dwarf_readu32>:
   2da4b:	55                   	push   %rbp
   2da4c:	48 89 e5             	mov    %rsp,%rbp
   2da4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2da53:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2da57:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2da5b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2da5f:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2da63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2da67:	48 8b 00             	mov    (%rax),%rax
   2da6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2da6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2da72:	8b 10                	mov    (%rax),%edx
   2da74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2da78:	89 10                	mov    %edx,(%rax)
   2da7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2da7e:	48 8b 00             	mov    (%rax),%rax
   2da81:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2da85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2da89:	48 89 10             	mov    %rdx,(%rax)
   2da8c:	b8 00 00 00 00       	mov    $0x0,%eax
   2da91:	5d                   	pop    %rbp
   2da92:	c3                   	retq   

000000000002da93 <dwarf_readu64>:
   2da93:	55                   	push   %rbp
   2da94:	48 89 e5             	mov    %rsp,%rbp
   2da97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2da9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2da9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2daa3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2daa7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2daab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2daaf:	48 8b 00             	mov    (%rax),%rax
   2dab2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2dab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2daba:	48 8b 10             	mov    (%rax),%rdx
   2dabd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2dac1:	48 89 10             	mov    %rdx,(%rax)
   2dac4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dac8:	48 8b 00             	mov    (%rax),%rax
   2dacb:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2dacf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dad3:	48 89 10             	mov    %rdx,(%rax)
   2dad6:	b8 00 00 00 00       	mov    $0x0,%eax
   2dadb:	5d                   	pop    %rbp
   2dadc:	c3                   	retq   

000000000002dadd <dwarf_read_uleb128>:
   2dadd:	55                   	push   %rbp
   2dade:	48 89 e5             	mov    %rsp,%rbp
   2dae1:	48 83 ec 50          	sub    $0x50,%rsp
   2dae5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2dae9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2daed:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2daf1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2daf5:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2daf9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2db00:	00 00 
   2db02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2db06:	31 c0                	xor    %eax,%eax
   2db08:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2db0f:	00 
   2db10:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2db17:	00 
   2db18:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2db1c:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   2db20:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2db24:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2db28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2db2c:	49 89 f8             	mov    %rdi,%r8
   2db2f:	48 89 c7             	mov    %rax,%rdi
   2db32:	e8 81 fe ff ff       	callq  2d9b8 <dwarf_readu8>
   2db37:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2db3a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2db3e:	79 05                	jns    2db45 <dwarf_read_uleb128+0x68>
   2db40:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2db43:	eb 3a                	jmp    2db7f <dwarf_read_uleb128+0xa2>
   2db45:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2db49:	0f b6 c0             	movzbl %al,%eax
   2db4c:	83 e0 7f             	and    $0x7f,%eax
   2db4f:	48 89 c2             	mov    %rax,%rdx
   2db52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2db56:	89 c1                	mov    %eax,%ecx
   2db58:	48 d3 e2             	shl    %cl,%rdx
   2db5b:	48 89 d0             	mov    %rdx,%rax
   2db5e:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2db62:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   2db67:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2db6b:	84 c0                	test   %al,%al
   2db6d:	78 a9                	js     2db18 <dwarf_read_uleb128+0x3b>
   2db6f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2db73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2db77:	48 89 10             	mov    %rdx,(%rax)
   2db7a:	b8 00 00 00 00       	mov    $0x0,%eax
   2db7f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2db83:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2db8a:	00 00 
   2db8c:	74 05                	je     2db93 <dwarf_read_uleb128+0xb6>
   2db8e:	e8 f9 d8 fd ff       	callq  b48c <__stack_chk_fail>
   2db93:	c9                   	leaveq 
   2db94:	c3                   	retq   

000000000002db95 <dwarf_read_sleb128>:
   2db95:	55                   	push   %rbp
   2db96:	48 89 e5             	mov    %rsp,%rbp
   2db99:	48 83 ec 50          	sub    $0x50,%rsp
   2db9d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2dba1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2dba5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2dba9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2dbad:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2dbb1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2dbb8:	00 00 
   2dbba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2dbbe:	31 c0                	xor    %eax,%eax
   2dbc0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2dbc7:	00 
   2dbc8:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2dbcf:	00 
   2dbd0:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   2dbd4:	48 8d 4d e3          	lea    -0x1d(%rbp),%rcx
   2dbd8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2dbdc:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2dbe0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dbe4:	49 89 f8             	mov    %rdi,%r8
   2dbe7:	48 89 c7             	mov    %rax,%rdi
   2dbea:	e8 c9 fd ff ff       	callq  2d9b8 <dwarf_readu8>
   2dbef:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2dbf2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2dbf6:	79 05                	jns    2dbfd <dwarf_read_sleb128+0x68>
   2dbf8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2dbfb:	eb 66                	jmp    2dc63 <dwarf_read_sleb128+0xce>
   2dbfd:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2dc01:	0f b6 c0             	movzbl %al,%eax
   2dc04:	83 e0 7f             	and    $0x7f,%eax
   2dc07:	48 89 c2             	mov    %rax,%rdx
   2dc0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2dc0e:	89 c1                	mov    %eax,%ecx
   2dc10:	48 d3 e2             	shl    %cl,%rdx
   2dc13:	48 89 d0             	mov    %rdx,%rax
   2dc16:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2dc1a:	48 83 45 f0 07       	addq   $0x7,-0x10(%rbp)
   2dc1f:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2dc23:	84 c0                	test   %al,%al
   2dc25:	78 a9                	js     2dbd0 <dwarf_read_sleb128+0x3b>
   2dc27:	48 83 7d f0 3f       	cmpq   $0x3f,-0x10(%rbp)
   2dc2c:	77 25                	ja     2dc53 <dwarf_read_sleb128+0xbe>
   2dc2e:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
   2dc32:	0f b6 c0             	movzbl %al,%eax
   2dc35:	83 e0 40             	and    $0x40,%eax
   2dc38:	85 c0                	test   %eax,%eax
   2dc3a:	74 17                	je     2dc53 <dwarf_read_sleb128+0xbe>
   2dc3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2dc40:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2dc47:	89 c1                	mov    %eax,%ecx
   2dc49:	48 d3 e2             	shl    %cl,%rdx
   2dc4c:	48 89 d0             	mov    %rdx,%rax
   2dc4f:	48 09 45 e8          	or     %rax,-0x18(%rbp)
   2dc53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2dc57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2dc5b:	48 89 10             	mov    %rdx,(%rax)
   2dc5e:	b8 00 00 00 00       	mov    $0x0,%eax
   2dc63:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2dc67:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2dc6e:	00 00 
   2dc70:	74 05                	je     2dc77 <dwarf_read_sleb128+0xe2>
   2dc72:	e8 15 d8 fd ff       	callq  b48c <__stack_chk_fail>
   2dc77:	c9                   	leaveq 
   2dc78:	c3                   	retq   

000000000002dc79 <is_cie_id>:
   2dc79:	55                   	push   %rbp
   2dc7a:	48 89 e5             	mov    %rsp,%rbp
   2dc7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2dc81:	89 75 f4             	mov    %esi,-0xc(%rbp)
   2dc84:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   2dc88:	74 20                	je     2dcaa <is_cie_id+0x31>
   2dc8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2dc8f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   2dc93:	74 07                	je     2dc9c <is_cie_id+0x23>
   2dc95:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
   2dc9a:	75 07                	jne    2dca3 <is_cie_id+0x2a>
   2dc9c:	b8 01 00 00 00       	mov    $0x1,%eax
   2dca1:	eb 12                	jmp    2dcb5 <is_cie_id+0x3c>
   2dca3:	b8 00 00 00 00       	mov    $0x0,%eax
   2dca8:	eb 0b                	jmp    2dcb5 <is_cie_id+0x3c>
   2dcaa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2dcaf:	0f 94 c0             	sete   %al
   2dcb2:	0f b6 c0             	movzbl %al,%eax
   2dcb5:	5d                   	pop    %rbp
   2dcb6:	c3                   	retq   

000000000002dcb7 <parse_cie>:
   2dcb7:	55                   	push   %rbp
   2dcb8:	48 89 e5             	mov    %rsp,%rbp
   2dcbb:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   2dcc2:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2dcc6:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2dcca:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   2dcce:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   2dcd2:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
   2dcd6:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
   2dcda:	48 8b 45 10          	mov    0x10(%rbp),%rax
   2dcde:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   2dce5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2dcec:	00 00 
   2dcee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2dcf2:	31 c0                	xor    %eax,%eax
   2dcf4:	c6 45 b2 04          	movb   $0x4,-0x4e(%rbp)
   2dcf8:	90                   	nop
   2dcf9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2dcfd:	c6 40 45 ff          	movb   $0xff,0x45(%rax)
   2dd01:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2dd05:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   2dd0c:	00 
   2dd0d:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2dd14:	48 8d 4d b4          	lea    -0x4c(%rbp),%rcx
   2dd18:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2dd1c:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2dd20:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2dd24:	49 89 f8             	mov    %rdi,%r8
   2dd27:	48 89 c7             	mov    %rax,%rdi
   2dd2a:	e8 1c fd ff ff       	callq  2da4b <dwarf_readu32>
   2dd2f:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2dd32:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2dd36:	79 08                	jns    2dd40 <parse_cie+0x89>
   2dd38:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2dd3b:	e9 f4 04 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2dd40:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2dd43:	83 f8 ff             	cmp    $0xffffffff,%eax
   2dd46:	74 76                	je     2ddbe <parse_cie+0x107>
   2dd48:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   2dd4c:	74 07                	je     2dd55 <parse_cie+0x9e>
   2dd4e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2dd53:	eb 05                	jmp    2dd5a <parse_cie+0xa3>
   2dd55:	b8 00 00 00 00       	mov    $0x0,%eax
   2dd5a:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2dd5d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2dd60:	89 c0                	mov    %eax,%eax
   2dd62:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2dd66:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2dd6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2dd6e:	48 01 d0             	add    %rdx,%rax
   2dd71:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2dd75:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2dd7c:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   2dd80:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2dd84:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2dd88:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2dd8c:	49 89 f8             	mov    %rdi,%r8
   2dd8f:	48 89 c7             	mov    %rax,%rdi
   2dd92:	e8 b4 fc ff ff       	callq  2da4b <dwarf_readu32>
   2dd97:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2dd9a:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2dd9e:	79 08                	jns    2dda8 <parse_cie+0xf1>
   2dda0:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2dda3:	e9 8c 04 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2dda8:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2ddab:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2ddae:	0f 84 b3 00 00 00    	je     2de67 <parse_cie+0x1b0>
   2ddb4:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2ddb9:	e9 76 04 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2ddbe:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   2ddc2:	74 09                	je     2ddcd <parse_cie+0x116>
   2ddc4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2ddcb:	eb 05                	jmp    2ddd2 <parse_cie+0x11b>
   2ddcd:	b8 00 00 00 00       	mov    $0x0,%eax
   2ddd2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2ddd6:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2dddd:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   2dde1:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2dde5:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2dde9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2dded:	49 89 f8             	mov    %rdi,%r8
   2ddf0:	48 89 c7             	mov    %rax,%rdi
   2ddf3:	e8 9b fc ff ff       	callq  2da93 <dwarf_readu64>
   2ddf8:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2ddfb:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2ddff:	79 08                	jns    2de09 <parse_cie+0x152>
   2de01:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2de04:	e9 2b 04 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2de09:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2de0d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2de11:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2de15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2de19:	48 01 d0             	add    %rdx,%rax
   2de1c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2de20:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2de27:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   2de2b:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2de2f:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2de33:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2de37:	49 89 f8             	mov    %rdi,%r8
   2de3a:	48 89 c7             	mov    %rax,%rdi
   2de3d:	e8 51 fc ff ff       	callq  2da93 <dwarf_readu64>
   2de42:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2de45:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2de49:	79 08                	jns    2de53 <parse_cie+0x19c>
   2de4b:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2de4e:	e9 e1 03 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2de53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2de57:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   2de5b:	74 0a                	je     2de67 <parse_cie+0x1b0>
   2de5d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2de62:	e9 cd 03 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2de67:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2de6b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2de6f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2de73:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2de7a:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   2de7e:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2de82:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2de86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2de8a:	49 89 f8             	mov    %rdi,%r8
   2de8d:	48 89 c7             	mov    %rax,%rdi
   2de90:	e8 23 fb ff ff       	callq  2d9b8 <dwarf_readu8>
   2de95:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2de98:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2de9c:	79 08                	jns    2dea6 <parse_cie+0x1ef>
   2de9e:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2dea1:	e9 8e 03 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2dea6:	0f b6 45 b0          	movzbl -0x50(%rbp),%eax
   2deaa:	3c 01                	cmp    $0x1,%al
   2deac:	74 1a                	je     2dec8 <parse_cie+0x211>
   2deae:	0f b6 45 b0          	movzbl -0x50(%rbp),%eax
   2deb2:	3c 02                	cmp    $0x2,%al
   2deb4:	76 08                	jbe    2debe <parse_cie+0x207>
   2deb6:	0f b6 45 b0          	movzbl -0x50(%rbp),%eax
   2deba:	3c 04                	cmp    $0x4,%al
   2debc:	76 0a                	jbe    2dec8 <parse_cie+0x211>
   2debe:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   2dec3:	e9 6c 03 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2dec8:	48 8d 45 f3          	lea    -0xd(%rbp),%rax
   2decc:	ba 05 00 00 00       	mov    $0x5,%edx
   2ded1:	be 00 00 00 00       	mov    $0x0,%esi
   2ded6:	48 89 c7             	mov    %rax,%rdi
   2ded9:	e8 57 58 fe ff       	callq  13735 <memset>
   2dede:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   2dee5:	00 
   2dee6:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2deed:	48 8d 4d b1          	lea    -0x4f(%rbp),%rcx
   2def1:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2def5:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2def9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2defd:	49 89 f8             	mov    %rdi,%r8
   2df00:	48 89 c7             	mov    %rax,%rdi
   2df03:	e8 b0 fa ff ff       	callq  2d9b8 <dwarf_readu8>
   2df08:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2df0b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2df0f:	79 08                	jns    2df19 <parse_cie+0x262>
   2df11:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2df14:	e9 1b 03 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2df19:	0f b6 45 b1          	movzbl -0x4f(%rbp),%eax
   2df1d:	84 c0                	test   %al,%al
   2df1f:	74 1d                	je     2df3e <parse_cie+0x287>
   2df21:	48 83 7d d8 03       	cmpq   $0x3,-0x28(%rbp)
   2df26:	77 be                	ja     2dee6 <parse_cie+0x22f>
   2df28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2df2c:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2df30:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2df34:	0f b6 55 b1          	movzbl -0x4f(%rbp),%edx
   2df38:	88 54 05 f3          	mov    %dl,-0xd(%rbp,%rax,1)
   2df3c:	eb a8                	jmp    2dee6 <parse_cie+0x22f>
   2df3e:	90                   	nop
   2df3f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2df43:	48 8d 48 20          	lea    0x20(%rax),%rcx
   2df47:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2df4e:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2df52:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2df56:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2df5a:	49 89 f8             	mov    %rdi,%r8
   2df5d:	48 89 c7             	mov    %rax,%rdi
   2df60:	e8 78 fb ff ff       	callq  2dadd <dwarf_read_uleb128>
   2df65:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2df68:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2df6c:	78 2f                	js     2df9d <parse_cie+0x2e6>
   2df6e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2df72:	48 8d 48 28          	lea    0x28(%rax),%rcx
   2df76:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2df7d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2df81:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2df85:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2df89:	49 89 f8             	mov    %rdi,%r8
   2df8c:	48 89 c7             	mov    %rax,%rdi
   2df8f:	e8 01 fc ff ff       	callq  2db95 <dwarf_read_sleb128>
   2df94:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2df97:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2df9b:	79 08                	jns    2dfa5 <parse_cie+0x2ee>
   2df9d:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2dfa0:	e9 8f 02 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2dfa5:	0f b6 45 b0          	movzbl -0x50(%rbp),%eax
   2dfa9:	3c 01                	cmp    $0x1,%al
   2dfab:	75 44                	jne    2dff1 <parse_cie+0x33a>
   2dfad:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2dfb4:	48 8d 4d b1          	lea    -0x4f(%rbp),%rcx
   2dfb8:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2dfbc:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2dfc0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2dfc4:	49 89 f8             	mov    %rdi,%r8
   2dfc7:	48 89 c7             	mov    %rax,%rdi
   2dfca:	e8 e9 f9 ff ff       	callq  2d9b8 <dwarf_readu8>
   2dfcf:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2dfd2:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2dfd6:	79 08                	jns    2dfe0 <parse_cie+0x329>
   2dfd8:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2dfdb:	e9 54 02 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2dfe0:	0f b6 45 b1          	movzbl -0x4f(%rbp),%eax
   2dfe4:	0f b6 d0             	movzbl %al,%edx
   2dfe7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2dfeb:	48 89 50 30          	mov    %rdx,0x30(%rax)
   2dfef:	eb 37                	jmp    2e028 <parse_cie+0x371>
   2dff1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2dff5:	48 8d 48 30          	lea    0x30(%rax),%rcx
   2dff9:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2e000:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2e004:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2e008:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e00c:	49 89 f8             	mov    %rdi,%r8
   2e00f:	48 89 c7             	mov    %rax,%rdi
   2e012:	e8 c6 fa ff ff       	callq  2dadd <dwarf_read_uleb128>
   2e017:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2e01a:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2e01e:	79 08                	jns    2e028 <parse_cie+0x371>
   2e020:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2e023:	e9 0c 02 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2e028:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   2e02f:	00 
   2e030:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
   2e034:	3c 7a                	cmp    $0x7a,%al
   2e036:	0f 85 ba 01 00 00    	jne    2e1f6 <parse_cie+0x53f>
   2e03c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e040:	0f b6 50 46          	movzbl 0x46(%rax),%edx
   2e044:	83 ca 01             	or     $0x1,%edx
   2e047:	88 50 46             	mov    %dl,0x46(%rax)
   2e04a:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2e051:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   2e055:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2e059:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2e05d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e061:	49 89 f8             	mov    %rdi,%r8
   2e064:	48 89 c7             	mov    %rax,%rdi
   2e067:	e8 71 fa ff ff       	callq  2dadd <dwarf_read_uleb128>
   2e06c:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2e06f:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2e073:	79 08                	jns    2e07d <parse_cie+0x3c6>
   2e075:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2e078:	e9 b7 01 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2e07d:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   2e082:	e9 6f 01 00 00       	jmpq   2e1f6 <parse_cie+0x53f>
   2e087:	48 8d 55 f3          	lea    -0xd(%rbp),%rdx
   2e08b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e08f:	48 01 d0             	add    %rdx,%rax
   2e092:	0f b6 00             	movzbl (%rax),%eax
   2e095:	0f b6 c0             	movzbl %al,%eax
   2e098:	83 f8 50             	cmp    $0x50,%eax
   2e09b:	0f 84 9c 00 00 00    	je     2e13d <parse_cie+0x486>
   2e0a1:	83 f8 50             	cmp    $0x50,%eax
   2e0a4:	7f 0a                	jg     2e0b0 <parse_cie+0x3f9>
   2e0a6:	83 f8 4c             	cmp    $0x4c,%eax
   2e0a9:	74 18                	je     2e0c3 <parse_cie+0x40c>
   2e0ab:	e9 27 01 00 00       	jmpq   2e1d7 <parse_cie+0x520>
   2e0b0:	83 f8 52             	cmp    $0x52,%eax
   2e0b3:	74 51                	je     2e106 <parse_cie+0x44f>
   2e0b5:	83 f8 53             	cmp    $0x53,%eax
   2e0b8:	0f 84 fb 00 00 00    	je     2e1b9 <parse_cie+0x502>
   2e0be:	e9 14 01 00 00       	jmpq   2e1d7 <parse_cie+0x520>
   2e0c3:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2e0ca:	48 8d 4d b1          	lea    -0x4f(%rbp),%rcx
   2e0ce:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2e0d2:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2e0d6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e0da:	49 89 f8             	mov    %rdi,%r8
   2e0dd:	48 89 c7             	mov    %rax,%rdi
   2e0e0:	e8 d3 f8 ff ff       	callq  2d9b8 <dwarf_readu8>
   2e0e5:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2e0e8:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2e0ec:	79 08                	jns    2e0f6 <parse_cie+0x43f>
   2e0ee:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2e0f1:	e9 3e 01 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2e0f6:	0f b6 55 b1          	movzbl -0x4f(%rbp),%edx
   2e0fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e0fe:	88 50 45             	mov    %dl,0x45(%rax)
   2e101:	e9 eb 00 00 00       	jmpq   2e1f1 <parse_cie+0x53a>
   2e106:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2e10d:	48 8d 4d b2          	lea    -0x4e(%rbp),%rcx
   2e111:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2e115:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2e119:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e11d:	49 89 f8             	mov    %rdi,%r8
   2e120:	48 89 c7             	mov    %rax,%rdi
   2e123:	e8 90 f8 ff ff       	callq  2d9b8 <dwarf_readu8>
   2e128:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2e12b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2e12f:	0f 89 b8 00 00 00    	jns    2e1ed <parse_cie+0x536>
   2e135:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2e138:	e9 f7 00 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2e13d:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   2e144:	48 8d 4d b3          	lea    -0x4d(%rbp),%rcx
   2e148:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2e14c:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2e150:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e154:	49 89 f8             	mov    %rdi,%r8
   2e157:	48 89 c7             	mov    %rax,%rdi
   2e15a:	e8 59 f8 ff ff       	callq  2d9b8 <dwarf_readu8>
   2e15f:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2e162:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2e166:	79 08                	jns    2e170 <parse_cie+0x4b9>
   2e168:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2e16b:	e9 c4 00 00 00       	jmpq   2e234 <parse_cie+0x57d>
   2e170:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e174:	4c 8d 40 38          	lea    0x38(%rax),%r8
   2e178:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax
   2e17c:	0f b6 c8             	movzbl %al,%ecx
   2e17f:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
   2e183:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   2e187:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2e18b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e18f:	48 83 ec 08          	sub    $0x8,%rsp
   2e193:	ff b5 78 ff ff ff    	pushq  -0x88(%rbp)
   2e199:	4d 89 c1             	mov    %r8,%r9
   2e19c:	49 89 f8             	mov    %rdi,%r8
   2e19f:	48 89 c7             	mov    %rax,%rdi
   2e1a2:	e8 a4 6e ff ff       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   2e1a7:	48 83 c4 10          	add    $0x10,%rsp
   2e1ab:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2e1ae:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2e1b2:	79 3c                	jns    2e1f0 <parse_cie+0x539>
   2e1b4:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2e1b7:	eb 7b                	jmp    2e234 <parse_cie+0x57d>
   2e1b9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e1bd:	0f b6 50 46          	movzbl 0x46(%rax),%edx
   2e1c1:	83 ca 04             	or     $0x4,%edx
   2e1c4:	88 50 46             	mov    %dl,0x46(%rax)
   2e1c7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e1cb:	0f b6 50 46          	movzbl 0x46(%rax),%edx
   2e1cf:	83 ca 02             	or     $0x2,%edx
   2e1d2:	88 50 46             	mov    %dl,0x46(%rax)
   2e1d5:	eb 1a                	jmp    2e1f1 <parse_cie+0x53a>
   2e1d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e1db:	0f b6 40 46          	movzbl 0x46(%rax),%eax
   2e1df:	83 e0 01             	and    $0x1,%eax
   2e1e2:	84 c0                	test   %al,%al
   2e1e4:	75 2f                	jne    2e215 <parse_cie+0x55e>
   2e1e6:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2e1eb:	eb 47                	jmp    2e234 <parse_cie+0x57d>
   2e1ed:	90                   	nop
   2e1ee:	eb 01                	jmp    2e1f1 <parse_cie+0x53a>
   2e1f0:	90                   	nop
   2e1f1:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   2e1f6:	48 83 7d d8 04       	cmpq   $0x4,-0x28(%rbp)
   2e1fb:	77 1b                	ja     2e218 <parse_cie+0x561>
   2e1fd:	48 8d 55 f3          	lea    -0xd(%rbp),%rdx
   2e201:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e205:	48 01 d0             	add    %rdx,%rax
   2e208:	0f b6 00             	movzbl (%rax),%eax
   2e20b:	84 c0                	test   %al,%al
   2e20d:	0f 85 74 fe ff ff    	jne    2e087 <parse_cie+0x3d0>
   2e213:	eb 03                	jmp    2e218 <parse_cie+0x561>
   2e215:	90                   	nop
   2e216:	eb 01                	jmp    2e219 <parse_cie+0x562>
   2e218:	90                   	nop
   2e219:	0f b6 55 b2          	movzbl -0x4e(%rbp),%edx
   2e21d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e221:	88 50 44             	mov    %dl,0x44(%rax)
   2e224:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2e228:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e22c:	48 89 10             	mov    %rdx,(%rax)
   2e22f:	b8 00 00 00 00       	mov    $0x0,%eax
   2e234:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2e238:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2e23f:	00 00 
   2e241:	74 05                	je     2e248 <parse_cie+0x591>
   2e243:	e8 44 d2 fd ff       	callq  b48c <__stack_chk_fail>
   2e248:	c9                   	leaveq 
   2e249:	c3                   	retq   

000000000002e24a <_ULx86_64_dwarf_extract_proc_info_from_fde>:
   2e24a:	55                   	push   %rbp
   2e24b:	48 89 e5             	mov    %rsp,%rbp
   2e24e:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   2e255:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   2e25c:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
   2e263:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
   2e26a:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
   2e271:	4c 89 85 28 ff ff ff 	mov    %r8,-0xd8(%rbp)
   2e278:	44 89 8d 24 ff ff ff 	mov    %r9d,-0xdc(%rbp)
   2e27f:	48 8b 45 18          	mov    0x18(%rbp),%rax
   2e283:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   2e28a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2e291:	00 00 
   2e293:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e297:	31 c0                	xor    %eax,%eax
   2e299:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2e2a0:	00 
   2e2a1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2e2a8:	48 8b 00             	mov    (%rax),%rax
   2e2ab:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   2e2b2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2e2b6:	ba 48 00 00 00       	mov    $0x48,%edx
   2e2bb:	be 00 00 00 00       	mov    $0x0,%esi
   2e2c0:	48 89 c7             	mov    %rax,%rdi
   2e2c3:	e8 6d 54 fe ff       	callq  13735 <memset>
   2e2c8:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e2cf:	48 8d 8d 5c ff ff ff 	lea    -0xa4(%rbp),%rcx
   2e2d6:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e2dd:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e2e4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e2eb:	49 89 f8             	mov    %rdi,%r8
   2e2ee:	48 89 c7             	mov    %rax,%rdi
   2e2f1:	e8 55 f7 ff ff       	callq  2da4b <dwarf_readu32>
   2e2f6:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e2fc:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e303:	79 0b                	jns    2e310 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xc6>
   2e305:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e30b:	e9 55 05 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e310:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2e316:	83 f8 ff             	cmp    $0xffffffff,%eax
   2e319:	0f 84 e4 00 00 00    	je     2e403 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1b9>
   2e31f:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
   2e326:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2e32c:	85 c0                	test   %eax,%eax
   2e32e:	75 0a                	jne    2e33a <_ULx86_64_dwarf_extract_proc_info_from_fde+0xf0>
   2e330:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   2e335:	e9 2b 05 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e33a:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2e340:	89 c2                	mov    %eax,%edx
   2e342:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2e349:	48 01 d0             	add    %rdx,%rax
   2e34c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2e350:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2e357:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2e35b:	48 89 10             	mov    %rdx,(%rax)
   2e35e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2e365:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2e369:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e370:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
   2e374:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e37b:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e382:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e389:	49 89 f8             	mov    %rdi,%r8
   2e38c:	48 89 c7             	mov    %rax,%rdi
   2e38f:	e8 92 f5 ff ff       	callq  2d926 <dwarf_reads32>
   2e394:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e39a:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e3a1:	79 0b                	jns    2e3ae <_ULx86_64_dwarf_extract_proc_info_from_fde+0x164>
   2e3a3:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e3a9:	e9 b7 04 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e3ae:	8b 45 88             	mov    -0x78(%rbp),%eax
   2e3b1:	48 98                	cltq   
   2e3b3:	8b 75 10             	mov    0x10(%rbp),%esi
   2e3b6:	48 89 c7             	mov    %rax,%rdi
   2e3b9:	e8 bb f8 ff ff       	callq  2dc79 <is_cie_id>
   2e3be:	85 c0                	test   %eax,%eax
   2e3c0:	74 0a                	je     2e3cc <_ULx86_64_dwarf_extract_proc_info_from_fde+0x182>
   2e3c2:	b8 00 00 00 00       	mov    $0x0,%eax
   2e3c7:	e9 99 04 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e3cc:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
   2e3d0:	74 19                	je     2e3eb <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1a1>
   2e3d2:	8b 45 88             	mov    -0x78(%rbp),%eax
   2e3d5:	48 63 d0             	movslq %eax,%rdx
   2e3d8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2e3df:	48 01 d0             	add    %rdx,%rax
   2e3e2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2e3e6:	e9 21 01 00 00       	jmpq   2e50c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2c2>
   2e3eb:	8b 45 88             	mov    -0x78(%rbp),%eax
   2e3ee:	48 98                	cltq   
   2e3f0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2e3f4:	48 29 c2             	sub    %rax,%rdx
   2e3f7:	48 89 d0             	mov    %rdx,%rax
   2e3fa:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2e3fe:	e9 09 01 00 00       	jmpq   2e50c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2c2>
   2e403:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
   2e40a:	00 
   2e40b:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e412:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
   2e416:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e41d:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e424:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e42b:	49 89 f8             	mov    %rdi,%r8
   2e42e:	48 89 c7             	mov    %rax,%rdi
   2e431:	e8 5d f6 ff ff       	callq  2da93 <dwarf_readu64>
   2e436:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e43c:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e443:	79 0b                	jns    2e450 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x206>
   2e445:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e44b:	e9 15 04 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e450:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   2e457:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2e45b:	48 01 d0             	add    %rdx,%rax
   2e45e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2e462:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   2e469:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2e46d:	48 89 10             	mov    %rdx,(%rax)
   2e470:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2e477:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2e47b:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e482:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
   2e486:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e48d:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e494:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e49b:	49 89 f8             	mov    %rdi,%r8
   2e49e:	48 89 c7             	mov    %rax,%rdi
   2e4a1:	e8 c8 f4 ff ff       	callq  2d96e <dwarf_reads64>
   2e4a6:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e4ac:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e4b3:	79 0b                	jns    2e4c0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x276>
   2e4b5:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e4bb:	e9 a5 03 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e4c0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e4c4:	8b 75 10             	mov    0x10(%rbp),%esi
   2e4c7:	48 89 c7             	mov    %rax,%rdi
   2e4ca:	e8 aa f7 ff ff       	callq  2dc79 <is_cie_id>
   2e4cf:	85 c0                	test   %eax,%eax
   2e4d1:	74 0a                	je     2e4dd <_ULx86_64_dwarf_extract_proc_info_from_fde+0x293>
   2e4d3:	b8 00 00 00 00       	mov    $0x0,%eax
   2e4d8:	e9 88 03 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e4dd:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
   2e4e1:	74 17                	je     2e4fa <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b0>
   2e4e3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e4e7:	48 89 c2             	mov    %rax,%rdx
   2e4ea:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2e4f1:	48 01 d0             	add    %rdx,%rax
   2e4f4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2e4f8:	eb 12                	jmp    2e50c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2c2>
   2e4fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e4fe:	48 89 c2             	mov    %rax,%rdx
   2e501:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e505:	48 29 d0             	sub    %rdx,%rax
   2e508:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2e50c:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
   2e510:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
   2e517:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2e51b:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e522:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e529:	48 83 ec 08          	sub    $0x8,%rsp
   2e52d:	ff b5 18 ff ff ff    	pushq  -0xe8(%rbp)
   2e533:	44 8b 4d 10          	mov    0x10(%rbp),%r9d
   2e537:	49 89 f8             	mov    %rdi,%r8
   2e53a:	48 89 c7             	mov    %rax,%rdi
   2e53d:	e8 75 f7 ff ff       	callq  2dcb7 <parse_cie>
   2e542:	48 83 c4 10          	add    $0x10,%rsp
   2e546:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e54c:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e553:	79 0b                	jns    2e560 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x316>
   2e555:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e55b:	e9 05 03 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e560:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
   2e564:	0f b6 c0             	movzbl %al,%eax
   2e567:	83 e0 0f             	and    $0xf,%eax
   2e56a:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
   2e570:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
   2e574:	0f b6 c8             	movzbl %al,%ecx
   2e577:	4c 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%r8
   2e57e:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
   2e585:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e58c:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e593:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e59a:	48 83 ec 08          	sub    $0x8,%rsp
   2e59e:	ff b5 18 ff ff ff    	pushq  -0xe8(%rbp)
   2e5a4:	4d 89 c1             	mov    %r8,%r9
   2e5a7:	49 89 f8             	mov    %rdi,%r8
   2e5aa:	48 89 c7             	mov    %rax,%rdi
   2e5ad:	e8 99 6a ff ff       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   2e5b2:	48 83 c4 10          	add    $0x10,%rsp
   2e5b6:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e5bc:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e5c3:	78 57                	js     2e61c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x3d2>
   2e5c5:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
   2e5cb:	0f b6 c8             	movzbl %al,%ecx
   2e5ce:	4c 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%r8
   2e5d5:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
   2e5dc:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e5e3:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e5ea:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e5f1:	48 83 ec 08          	sub    $0x8,%rsp
   2e5f5:	ff b5 18 ff ff ff    	pushq  -0xe8(%rbp)
   2e5fb:	4d 89 c1             	mov    %r8,%r9
   2e5fe:	49 89 f8             	mov    %rdi,%r8
   2e601:	48 89 c7             	mov    %rax,%rdi
   2e604:	e8 42 6a ff ff       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   2e609:	48 83 c4 10          	add    $0x10,%rsp
   2e60d:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e613:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e61a:	79 0b                	jns    2e627 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x3dd>
   2e61c:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e622:	e9 3e 02 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e627:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   2e62e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e635:	48 89 10             	mov    %rdx,(%rax)
   2e638:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   2e63f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2e646:	48 01 c2             	add    %rax,%rdx
   2e649:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e650:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2e654:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e658:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e65f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2e663:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
   2e667:	83 e0 01             	and    $0x1,%eax
   2e66a:	84 c0                	test   %al,%al
   2e66c:	74 57                	je     2e6c5 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x47b>
   2e66e:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e675:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
   2e679:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e680:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e687:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e68e:	49 89 f8             	mov    %rdi,%r8
   2e691:	48 89 c7             	mov    %rax,%rdi
   2e694:	e8 44 f4 ff ff       	callq  2dadd <dwarf_read_uleb128>
   2e699:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e69f:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e6a6:	79 0b                	jns    2e6b3 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x469>
   2e6a8:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e6ae:	e9 b2 01 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e6b3:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   2e6ba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2e6be:	48 01 d0             	add    %rdx,%rax
   2e6c1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2e6c5:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e6cc:	4c 8d 40 10          	lea    0x10(%rax),%r8
   2e6d0:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
   2e6d4:	0f b6 c8             	movzbl %al,%ecx
   2e6d7:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
   2e6de:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e6e5:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e6ec:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e6f3:	48 83 ec 08          	sub    $0x8,%rsp
   2e6f7:	ff b5 18 ff ff ff    	pushq  -0xe8(%rbp)
   2e6fd:	4d 89 c1             	mov    %r8,%r9
   2e700:	49 89 f8             	mov    %rdi,%r8
   2e703:	48 89 c7             	mov    %rax,%rdi
   2e706:	e8 40 69 ff ff       	callq  2504b <_ULx86_64_dwarf_read_encoded_pointer>
   2e70b:	48 83 c4 10          	add    $0x10,%rsp
   2e70f:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e715:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e71c:	79 0b                	jns    2e729 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4df>
   2e71e:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e724:	e9 3c 01 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e729:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
   2e730:	0f 84 2a 01 00 00    	je     2e860 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x616>
   2e736:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e73d:	c7 40 30 01 00 00 00 	movl   $0x1,0x30(%rax)
   2e744:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e74b:	c7 40 34 48 00 00 00 	movl   $0x48,0x34(%rax)
   2e752:	48 8d 3d 67 8b 02 00 	lea    0x28b67(%rip),%rdi        # 572c0 <dwarf_cie_info_pool>
   2e759:	e8 6a 9f ff ff       	callq  286c8 <_UIx86_64__mempool_alloc>
   2e75e:	48 89 c2             	mov    %rax,%rdx
   2e761:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e768:	48 89 50 38          	mov    %rdx,0x38(%rax)
   2e76c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e773:	48 8b 40 38          	mov    0x38(%rax),%rax
   2e777:	48 85 c0             	test   %rax,%rax
   2e77a:	75 0a                	jne    2e786 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x53c>
   2e77c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2e781:	e9 df 00 00 00       	jmpq   2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e786:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
   2e78a:	83 e0 02             	and    $0x2,%eax
   2e78d:	84 c0                	test   %al,%al
   2e78f:	0f 84 84 00 00 00    	je     2e819 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5cf>
   2e795:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e79c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2e7a0:	48 8d 48 40          	lea    0x40(%rax),%rcx
   2e7a4:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e7ab:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e7b2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e7b9:	49 89 f8             	mov    %rdi,%r8
   2e7bc:	48 89 c7             	mov    %rax,%rdi
   2e7bf:	e8 3d f2 ff ff       	callq  2da01 <dwarf_readu16>
   2e7c4:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e7ca:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e7d1:	78 3e                	js     2e811 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5c7>
   2e7d3:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   2e7da:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2e7de:	48 8d 48 42          	lea    0x42(%rax),%rcx
   2e7e2:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   2e7e9:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   2e7f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2e7f7:	49 89 f8             	mov    %rdi,%r8
   2e7fa:	48 89 c7             	mov    %rax,%rdi
   2e7fd:	e8 ff f1 ff ff       	callq  2da01 <dwarf_readu16>
   2e802:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2e808:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2e80f:	79 08                	jns    2e819 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5cf>
   2e811:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   2e817:	eb 4c                	jmp    2e865 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x61b>
   2e819:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
   2e81d:	83 e0 01             	and    $0x1,%eax
   2e820:	84 c0                	test   %al,%al
   2e822:	74 0a                	je     2e82e <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5e4>
   2e824:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e828:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2e82c:	eb 0b                	jmp    2e839 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5ef>
   2e82e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2e835:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2e839:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2e83d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2e841:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2e848:	48 8b 40 38          	mov    0x38(%rax),%rax
   2e84c:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   2e850:	ba 48 00 00 00       	mov    $0x48,%edx
   2e855:	48 89 ce             	mov    %rcx,%rsi
   2e858:	48 89 c7             	mov    %rax,%rdi
   2e85b:	e8 67 4e fe ff       	callq  136c7 <memcpy>
   2e860:	b8 00 00 00 00       	mov    $0x0,%eax
   2e865:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2e869:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2e870:	00 00 
   2e872:	74 05                	je     2e879 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x62f>
   2e874:	e8 13 cc fd ff       	callq  b48c <__stack_chk_fail>
   2e879:	c9                   	leaveq 
   2e87a:	c3                   	retq   

000000000002e87b <tcrypto_access_version_dummy1>:
   2e87b:	55                   	push   %rbp
   2e87c:	48 89 e5             	mov    %rsp,%rbp
   2e87f:	c6 05 ca 89 01 00 73 	movb   $0x73,0x189ca(%rip)        # 47250 <sgx_tcrypto_version>
   2e886:	48 8d 05 c3 89 01 00 	lea    0x189c3(%rip),%rax        # 47250 <sgx_tcrypto_version>
   2e88d:	5d                   	pop    %rbp
   2e88e:	c3                   	retq   

000000000002e88f <sgx_init_crypto_lib>:
   2e88f:	55                   	push   %rbp
   2e890:	48 89 e5             	mov    %rsp,%rbp
   2e893:	48 83 ec 10          	sub    $0x10,%rsp
   2e897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2e89b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2e89f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e8a3:	48 89 c7             	mov    %rax,%rdi
   2e8a6:	e8 34 02 00 00       	callq  2eadf <init_ipp_cpuid>
   2e8ab:	c9                   	leaveq 
   2e8ac:	c3                   	retq   

000000000002e8ad <sgx_rijndael128_cmac_msg>:
   2e8ad:	55                   	push   %rbp
   2e8ae:	48 89 e5             	mov    %rsp,%rbp
   2e8b1:	48 83 ec 40          	sub    $0x40,%rsp
   2e8b5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2e8b9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2e8bd:	89 55 cc             	mov    %edx,-0x34(%rbp)
   2e8c0:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2e8c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2e8cb:	00 00 
   2e8cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e8d1:	31 c0                	xor    %eax,%eax
   2e8d3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2e8da:	00 
   2e8db:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   2e8e2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   2e8e9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2e8ee:	74 0e                	je     2e8fe <sgx_rijndael128_cmac_msg+0x51>
   2e8f0:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2e8f5:	74 07                	je     2e8fe <sgx_rijndael128_cmac_msg+0x51>
   2e8f7:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   2e8fc:	75 0a                	jne    2e908 <sgx_rijndael128_cmac_msg+0x5b>
   2e8fe:	b8 02 00 00 00       	mov    $0x2,%eax
   2e903:	e9 c1 01 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2e908:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   2e90c:	48 89 c7             	mov    %rax,%rdi
   2e90f:	e8 77 04 00 00       	callq  2ed8b <sgx_disp_ippsAES_CMACGetSize>
   2e914:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2e917:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2e91b:	74 0a                	je     2e927 <sgx_rijndael128_cmac_msg+0x7a>
   2e91d:	b8 01 00 00 00       	mov    $0x1,%eax
   2e922:	e9 a2 01 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2e927:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2e92a:	48 98                	cltq   
   2e92c:	48 89 c7             	mov    %rax,%rdi
   2e92f:	e8 14 1b fe ff       	callq  10448 <dlmalloc>
   2e934:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2e938:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2e93d:	75 0a                	jne    2e949 <sgx_rijndael128_cmac_msg+0x9c>
   2e93f:	b8 03 00 00 00       	mov    $0x3,%eax
   2e944:	e9 80 01 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2e949:	8b 4d e8             	mov    -0x18(%rbp),%ecx
   2e94c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2e950:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e954:	be 10 00 00 00       	mov    $0x10,%esi
   2e959:	48 89 c7             	mov    %rax,%rdi
   2e95c:	e8 c3 04 00 00       	callq  2ee24 <sgx_disp_ippsAES_CMACInit>
   2e961:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2e964:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2e968:	74 5e                	je     2e9c8 <sgx_rijndael128_cmac_msg+0x11b>
   2e96a:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2e96d:	48 63 d0             	movslq %eax,%rdx
   2e970:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2e973:	48 63 f0             	movslq %eax,%rsi
   2e976:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e97a:	48 89 d1             	mov    %rdx,%rcx
   2e97d:	ba 00 00 00 00       	mov    $0x0,%edx
   2e982:	48 89 c7             	mov    %rax,%rdi
   2e985:	e8 d5 4d fe ff       	callq  1375f <memset_s>
   2e98a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e98e:	48 89 c7             	mov    %rax,%rdi
   2e991:	e8 a9 25 fe ff       	callq  10f3f <dlfree>
   2e996:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2e999:	83 f8 f7             	cmp    $0xfffffff7,%eax
   2e99c:	74 0c                	je     2e9aa <sgx_rijndael128_cmac_msg+0xfd>
   2e99e:	83 f8 f8             	cmp    $0xfffffff8,%eax
   2e9a1:	74 11                	je     2e9b4 <sgx_rijndael128_cmac_msg+0x107>
   2e9a3:	83 f8 f1             	cmp    $0xfffffff1,%eax
   2e9a6:	74 0c                	je     2e9b4 <sgx_rijndael128_cmac_msg+0x107>
   2e9a8:	eb 14                	jmp    2e9be <sgx_rijndael128_cmac_msg+0x111>
   2e9aa:	b8 03 00 00 00       	mov    $0x3,%eax
   2e9af:	e9 15 01 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2e9b4:	b8 02 00 00 00       	mov    $0x2,%eax
   2e9b9:	e9 0b 01 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2e9be:	b8 01 00 00 00       	mov    $0x1,%eax
   2e9c3:	e9 01 01 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2e9c8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
   2e9cb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2e9cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e9d3:	89 ce                	mov    %ecx,%esi
   2e9d5:	48 89 c7             	mov    %rax,%rdi
   2e9d8:	e8 08 05 00 00       	callq  2eee5 <sgx_disp_ippsAES_CMACUpdate>
   2e9dd:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2e9e0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2e9e4:	74 4d                	je     2ea33 <sgx_rijndael128_cmac_msg+0x186>
   2e9e6:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2e9e9:	48 63 d0             	movslq %eax,%rdx
   2e9ec:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2e9ef:	48 63 f0             	movslq %eax,%rsi
   2e9f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e9f6:	48 89 d1             	mov    %rdx,%rcx
   2e9f9:	ba 00 00 00 00       	mov    $0x0,%edx
   2e9fe:	48 89 c7             	mov    %rax,%rdi
   2ea01:	e8 59 4d fe ff       	callq  1375f <memset_s>
   2ea06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ea0a:	48 89 c7             	mov    %rax,%rdi
   2ea0d:	e8 2d 25 fe ff       	callq  10f3f <dlfree>
   2ea12:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2ea15:	83 f8 f1             	cmp    $0xfffffff1,%eax
   2ea18:	74 05                	je     2ea1f <sgx_rijndael128_cmac_msg+0x172>
   2ea1a:	83 f8 f8             	cmp    $0xfffffff8,%eax
   2ea1d:	75 0a                	jne    2ea29 <sgx_rijndael128_cmac_msg+0x17c>
   2ea1f:	b8 02 00 00 00       	mov    $0x2,%eax
   2ea24:	e9 a0 00 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2ea29:	b8 01 00 00 00       	mov    $0x1,%eax
   2ea2e:	e9 96 00 00 00       	jmpq   2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2ea33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2ea37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ea3b:	be 10 00 00 00       	mov    $0x10,%esi
   2ea40:	48 89 c7             	mov    %rax,%rdi
   2ea43:	e8 58 05 00 00       	callq  2efa0 <sgx_disp_ippsAES_CMACFinal>
   2ea48:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2ea4b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2ea4f:	74 47                	je     2ea98 <sgx_rijndael128_cmac_msg+0x1eb>
   2ea51:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2ea54:	48 63 d0             	movslq %eax,%rdx
   2ea57:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2ea5a:	48 63 f0             	movslq %eax,%rsi
   2ea5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ea61:	48 89 d1             	mov    %rdx,%rcx
   2ea64:	ba 00 00 00 00       	mov    $0x0,%edx
   2ea69:	48 89 c7             	mov    %rax,%rdi
   2ea6c:	e8 ee 4c fe ff       	callq  1375f <memset_s>
   2ea71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ea75:	48 89 c7             	mov    %rax,%rdi
   2ea78:	e8 c2 24 fe ff       	callq  10f3f <dlfree>
   2ea7d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2ea80:	83 f8 f1             	cmp    $0xfffffff1,%eax
   2ea83:	74 05                	je     2ea8a <sgx_rijndael128_cmac_msg+0x1dd>
   2ea85:	83 f8 f8             	cmp    $0xfffffff8,%eax
   2ea88:	75 07                	jne    2ea91 <sgx_rijndael128_cmac_msg+0x1e4>
   2ea8a:	b8 02 00 00 00       	mov    $0x2,%eax
   2ea8f:	eb 38                	jmp    2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2ea91:	b8 01 00 00 00       	mov    $0x1,%eax
   2ea96:	eb 31                	jmp    2eac9 <sgx_rijndael128_cmac_msg+0x21c>
   2ea98:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2ea9b:	48 63 d0             	movslq %eax,%rdx
   2ea9e:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2eaa1:	48 63 f0             	movslq %eax,%rsi
   2eaa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2eaa8:	48 89 d1             	mov    %rdx,%rcx
   2eaab:	ba 00 00 00 00       	mov    $0x0,%edx
   2eab0:	48 89 c7             	mov    %rax,%rdi
   2eab3:	e8 a7 4c fe ff       	callq  1375f <memset_s>
   2eab8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2eabc:	48 89 c7             	mov    %rax,%rdi
   2eabf:	e8 7b 24 fe ff       	callq  10f3f <dlfree>
   2eac4:	b8 00 00 00 00       	mov    $0x0,%eax
   2eac9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2eacd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2ead4:	00 00 
   2ead6:	74 05                	je     2eadd <sgx_rijndael128_cmac_msg+0x230>
   2ead8:	e8 af c9 fd ff       	callq  b48c <__stack_chk_fail>
   2eadd:	c9                   	leaveq 
   2eade:	c3                   	retq   

000000000002eadf <init_ipp_cpuid>:
   2eadf:	55                   	push   %rbp
   2eae0:	48 89 e5             	mov    %rsp,%rbp
   2eae3:	48 83 ec 20          	sub    $0x20,%rsp
   2eae7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2eaeb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   2eaf2:	48 8d 05 c7 0d 00 00 	lea    0xdc7(%rip),%rax        # 2f8c0 <ippcpSetCpuFeatures>
   2eaf9:	48 85 c0             	test   %rax,%rax
   2eafc:	75 0a                	jne    2eb08 <init_ipp_cpuid+0x29>
   2eafe:	b8 00 00 00 00       	mov    $0x0,%eax
   2eb03:	e9 81 02 00 00       	jmpq   2ed89 <init_ipp_cpuid+0x2aa>
   2eb08:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   2eb0f:	00 
   2eb10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb14:	25 00 02 00 00       	and    $0x200,%eax
   2eb19:	48 85 c0             	test   %rax,%rax
   2eb1c:	0f 84 31 02 00 00    	je     2ed53 <init_ipp_cpuid+0x274>
   2eb22:	48 83 4d f8 5f       	orq    $0x5f,-0x8(%rbp)
   2eb27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb2b:	25 00 08 00 00       	and    $0x800,%eax
   2eb30:	48 85 c0             	test   %rax,%rax
   2eb33:	74 05                	je     2eb3a <init_ipp_cpuid+0x5b>
   2eb35:	48 83 4d f8 20       	orq    $0x20,-0x8(%rbp)
   2eb3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb3e:	25 00 04 00 00       	and    $0x400,%eax
   2eb43:	48 85 c0             	test   %rax,%rax
   2eb46:	74 08                	je     2eb50 <init_ipp_cpuid+0x71>
   2eb48:	48 81 4d f8 80 00 00 	orq    $0x80,-0x8(%rbp)
   2eb4f:	00 
   2eb50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb54:	25 00 00 01 00       	and    $0x10000,%eax
   2eb59:	48 85 c0             	test   %rax,%rax
   2eb5c:	74 10                	je     2eb6e <init_ipp_cpuid+0x8f>
   2eb5e:	48 81 4d f8 00 01 00 	orq    $0x100,-0x8(%rbp)
   2eb65:	00 
   2eb66:	48 81 4d f8 00 02 00 	orq    $0x200,-0x8(%rbp)
   2eb6d:	00 
   2eb6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb72:	25 00 40 00 00       	and    $0x4000,%eax
   2eb77:	48 85 c0             	test   %rax,%rax
   2eb7a:	74 08                	je     2eb84 <init_ipp_cpuid+0xa5>
   2eb7c:	48 81 4d f8 00 04 00 	orq    $0x400,-0x8(%rbp)
   2eb83:	00 
   2eb84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb88:	25 00 20 00 00       	and    $0x2000,%eax
   2eb8d:	48 85 c0             	test   %rax,%rax
   2eb90:	74 08                	je     2eb9a <init_ipp_cpuid+0xbb>
   2eb92:	48 81 4d f8 00 08 00 	orq    $0x800,-0x8(%rbp)
   2eb99:	00 
   2eb9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eb9e:	25 00 00 02 00       	and    $0x20000,%eax
   2eba3:	48 85 c0             	test   %rax,%rax
   2eba6:	74 08                	je     2ebb0 <init_ipp_cpuid+0xd1>
   2eba8:	48 81 4d f8 00 20 00 	orq    $0x2000,-0x8(%rbp)
   2ebaf:	00 
   2ebb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ebb4:	25 00 80 00 00       	and    $0x8000,%eax
   2ebb9:	48 85 c0             	test   %rax,%rax
   2ebbc:	74 08                	je     2ebc6 <init_ipp_cpuid+0xe7>
   2ebbe:	48 81 4d f8 00 40 00 	orq    $0x4000,-0x8(%rbp)
   2ebc5:	00 
   2ebc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ebca:	25 00 00 80 00       	and    $0x800000,%eax
   2ebcf:	48 85 c0             	test   %rax,%rax
   2ebd2:	74 08                	je     2ebdc <init_ipp_cpuid+0xfd>
   2ebd4:	48 81 4d f8 00 80 00 	orq    $0x8000,-0x8(%rbp)
   2ebdb:	00 
   2ebdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ebe0:	25 00 00 00 10       	and    $0x10000000,%eax
   2ebe5:	48 85 c0             	test   %rax,%rax
   2ebe8:	74 08                	je     2ebf2 <init_ipp_cpuid+0x113>
   2ebea:	48 81 4d f8 00 00 01 	orq    $0x10000,-0x8(%rbp)
   2ebf1:	00 
   2ebf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ebf6:	25 00 00 00 20       	and    $0x20000000,%eax
   2ebfb:	48 85 c0             	test   %rax,%rax
   2ebfe:	74 08                	je     2ec08 <init_ipp_cpuid+0x129>
   2ec00:	48 81 4d f8 00 00 02 	orq    $0x20000,-0x8(%rbp)
   2ec07:	00 
   2ec08:	48 b8 00 00 00 00 08 	movabs $0x800000000,%rax
   2ec0f:	00 00 00 
   2ec12:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ec16:	48 85 c0             	test   %rax,%rax
   2ec19:	74 08                	je     2ec23 <init_ipp_cpuid+0x144>
   2ec1b:	48 81 4d f8 00 00 08 	orq    $0x80000,-0x8(%rbp)
   2ec22:	00 
   2ec23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ec27:	25 00 00 00 08       	and    $0x8000000,%eax
   2ec2c:	48 85 c0             	test   %rax,%rax
   2ec2f:	74 16                	je     2ec47 <init_ipp_cpuid+0x168>
   2ec31:	48 81 4d f8 00 00 10 	orq    $0x100000,-0x8(%rbp)
   2ec38:	00 
   2ec39:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   2ec40:	00 00 00 
   2ec43:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   2ec47:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   2ec4e:	00 00 00 
   2ec51:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ec55:	48 85 c0             	test   %rax,%rax
   2ec58:	74 08                	je     2ec62 <init_ipp_cpuid+0x183>
   2ec5a:	48 81 4d f8 00 00 80 	orq    $0x800000,-0x8(%rbp)
   2ec61:	00 
   2ec62:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   2ec69:	00 00 00 
   2ec6c:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ec70:	48 85 c0             	test   %rax,%rax
   2ec73:	74 08                	je     2ec7d <init_ipp_cpuid+0x19e>
   2ec75:	48 81 4d f8 00 00 40 	orq    $0x400000,-0x8(%rbp)
   2ec7c:	00 
   2ec7d:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   2ec84:	00 00 00 
   2ec87:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ec8b:	48 85 c0             	test   %rax,%rax
   2ec8e:	74 08                	je     2ec98 <init_ipp_cpuid+0x1b9>
   2ec90:	48 81 4d f8 00 00 20 	orq    $0x200000,-0x8(%rbp)
   2ec97:	00 
   2ec98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ec9c:	25 00 00 00 01       	and    $0x1000000,%eax
   2eca1:	48 85 c0             	test   %rax,%rax
   2eca4:	74 08                	je     2ecae <init_ipp_cpuid+0x1cf>
   2eca6:	48 81 4d f8 00 00 00 	orq    $0x2000000,-0x8(%rbp)
   2ecad:	02 
   2ecae:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
   2ecb5:	00 00 00 
   2ecb8:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ecbc:	48 85 c0             	test   %rax,%rax
   2ecbf:	74 08                	je     2ecc9 <init_ipp_cpuid+0x1ea>
   2ecc1:	48 81 4d f8 00 00 00 	orq    $0x1000000,-0x8(%rbp)
   2ecc8:	01 
   2ecc9:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
   2ecd0:	00 00 00 
   2ecd3:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ecd7:	48 85 c0             	test   %rax,%rax
   2ecda:	74 08                	je     2ece4 <init_ipp_cpuid+0x205>
   2ecdc:	48 81 4d f8 00 00 00 	orq    $0x4000000,-0x8(%rbp)
   2ece3:	04 
   2ece4:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
   2eceb:	00 00 00 
   2ecee:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ecf2:	48 85 c0             	test   %rax,%rax
   2ecf5:	74 08                	je     2ecff <init_ipp_cpuid+0x220>
   2ecf7:	48 81 4d f8 00 00 00 	orq    $0x8000000,-0x8(%rbp)
   2ecfe:	08 
   2ecff:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
   2ed06:	02 00 00 
   2ed09:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ed0d:	48 85 c0             	test   %rax,%rax
   2ed10:	74 08                	je     2ed1a <init_ipp_cpuid+0x23b>
   2ed12:	48 81 4d f8 00 00 00 	orq    $0x40000000,-0x8(%rbp)
   2ed19:	40 
   2ed1a:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
   2ed21:	01 00 00 
   2ed24:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2ed28:	48 85 c0             	test   %rax,%rax
   2ed2b:	74 08                	je     2ed35 <init_ipp_cpuid+0x256>
   2ed2d:	48 81 4d f8 00 00 00 	orq    $0x20000000,-0x8(%rbp)
   2ed34:	20 
   2ed35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ed39:	25 00 00 00 40       	and    $0x40000000,%eax
   2ed3e:	48 85 c0             	test   %rax,%rax
   2ed41:	74 17                	je     2ed5a <init_ipp_cpuid+0x27b>
   2ed43:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   2ed4a:	00 00 00 
   2ed4d:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   2ed51:	eb 07                	jmp    2ed5a <init_ipp_cpuid+0x27b>
   2ed53:	b8 02 00 00 00       	mov    $0x2,%eax
   2ed58:	eb 2f                	jmp    2ed89 <init_ipp_cpuid+0x2aa>
   2ed5a:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   2ed61:	00 00 80 
   2ed64:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   2ed68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ed6c:	48 89 c7             	mov    %rax,%rdi
   2ed6f:	e8 4c 0b 00 00       	callq  2f8c0 <ippcpSetCpuFeatures>
   2ed74:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2ed77:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   2ed7b:	74 07                	je     2ed84 <init_ipp_cpuid+0x2a5>
   2ed7d:	b8 02 00 00 00       	mov    $0x2,%eax
   2ed82:	eb 05                	jmp    2ed89 <init_ipp_cpuid+0x2aa>
   2ed84:	b8 00 00 00 00       	mov    $0x0,%eax
   2ed89:	c9                   	leaveq 
   2ed8a:	c3                   	retq   

000000000002ed8b <sgx_disp_ippsAES_CMACGetSize>:
   2ed8b:	55                   	push   %rbp
   2ed8c:	48 89 e5             	mov    %rsp,%rbp
   2ed8f:	48 83 ec 20          	sub    $0x20,%rsp
   2ed93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2ed97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ed9e:	00 00 
   2eda0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2eda4:	31 c0                	xor    %eax,%eax
   2eda6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2edaa:	48 89 c7             	mov    %rax,%rdi
   2edad:	e8 0e 06 00 00       	callq  2f3c0 <ippcpGetCpuFeatures>
   2edb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2edb6:	25 00 00 30 07       	and    $0x7300000,%eax
   2edbb:	48 3d 00 00 30 07    	cmp    $0x7300000,%rax
   2edc1:	75 0e                	jne    2edd1 <sgx_disp_ippsAES_CMACGetSize+0x46>
   2edc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2edc7:	48 89 c7             	mov    %rax,%rdi
   2edca:	e8 11 65 00 00       	callq  352e0 <k0_ippsAES_CMACGetSize>
   2edcf:	eb 3d                	jmp    2ee0e <sgx_disp_ippsAES_CMACGetSize+0x83>
   2edd1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2edd5:	25 00 80 00 00       	and    $0x8000,%eax
   2edda:	48 85 c0             	test   %rax,%rax
   2eddd:	74 0e                	je     2eded <sgx_disp_ippsAES_CMACGetSize+0x62>
   2eddf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ede3:	48 89 c7             	mov    %rax,%rdi
   2ede6:	e8 15 3d 00 00       	callq  32b00 <l9_ippsAES_CMACGetSize>
   2edeb:	eb 21                	jmp    2ee0e <sgx_disp_ippsAES_CMACGetSize+0x83>
   2eded:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2edf1:	25 80 00 00 00       	and    $0x80,%eax
   2edf6:	48 85 c0             	test   %rax,%rax
   2edf9:	74 0e                	je     2ee09 <sgx_disp_ippsAES_CMACGetSize+0x7e>
   2edfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2edff:	48 89 c7             	mov    %rax,%rdi
   2ee02:	e8 59 14 00 00       	callq  30260 <y8_ippsAES_CMACGetSize>
   2ee07:	eb 05                	jmp    2ee0e <sgx_disp_ippsAES_CMACGetSize+0x83>
   2ee09:	b8 f1 d8 ff ff       	mov    $0xffffd8f1,%eax
   2ee0e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2ee12:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   2ee19:	00 00 
   2ee1b:	74 05                	je     2ee22 <sgx_disp_ippsAES_CMACGetSize+0x97>
   2ee1d:	e8 6a c6 fd ff       	callq  b48c <__stack_chk_fail>
   2ee22:	c9                   	leaveq 
   2ee23:	c3                   	retq   

000000000002ee24 <sgx_disp_ippsAES_CMACInit>:
   2ee24:	55                   	push   %rbp
   2ee25:	48 89 e5             	mov    %rsp,%rbp
   2ee28:	48 83 ec 30          	sub    $0x30,%rsp
   2ee2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2ee30:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2ee33:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2ee37:	89 4d e0             	mov    %ecx,-0x20(%rbp)
   2ee3a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ee41:	00 00 
   2ee43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ee47:	31 c0                	xor    %eax,%eax
   2ee49:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2ee4d:	48 89 c7             	mov    %rax,%rdi
   2ee50:	e8 6b 05 00 00       	callq  2f3c0 <ippcpGetCpuFeatures>
   2ee55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ee59:	25 00 00 30 07       	and    $0x7300000,%eax
   2ee5e:	48 3d 00 00 30 07    	cmp    $0x7300000,%rax
   2ee64:	75 18                	jne    2ee7e <sgx_disp_ippsAES_CMACInit+0x5a>
   2ee66:	8b 4d e0             	mov    -0x20(%rbp),%ecx
   2ee69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2ee6d:	8b 75 e4             	mov    -0x1c(%rbp),%esi
   2ee70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ee74:	48 89 c7             	mov    %rax,%rdi
   2ee77:	e8 e4 66 00 00       	callq  35560 <k0_ippsAES_CMACInit>
   2ee7c:	eb 51                	jmp    2eecf <sgx_disp_ippsAES_CMACInit+0xab>
   2ee7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ee82:	25 00 80 00 00       	and    $0x8000,%eax
   2ee87:	48 85 c0             	test   %rax,%rax
   2ee8a:	74 18                	je     2eea4 <sgx_disp_ippsAES_CMACInit+0x80>
   2ee8c:	8b 4d e0             	mov    -0x20(%rbp),%ecx
   2ee8f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2ee93:	8b 75 e4             	mov    -0x1c(%rbp),%esi
   2ee96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ee9a:	48 89 c7             	mov    %rax,%rdi
   2ee9d:	e8 fe 3e 00 00       	callq  32da0 <l9_ippsAES_CMACInit>
   2eea2:	eb 2b                	jmp    2eecf <sgx_disp_ippsAES_CMACInit+0xab>
   2eea4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2eea8:	25 80 00 00 00       	and    $0x80,%eax
   2eead:	48 85 c0             	test   %rax,%rax
   2eeb0:	74 18                	je     2eeca <sgx_disp_ippsAES_CMACInit+0xa6>
   2eeb2:	8b 4d e0             	mov    -0x20(%rbp),%ecx
   2eeb5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2eeb9:	8b 75 e4             	mov    -0x1c(%rbp),%esi
   2eebc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eec0:	48 89 c7             	mov    %rax,%rdi
   2eec3:	e8 18 18 00 00       	callq  306e0 <y8_ippsAES_CMACInit>
   2eec8:	eb 05                	jmp    2eecf <sgx_disp_ippsAES_CMACInit+0xab>
   2eeca:	b8 f1 d8 ff ff       	mov    $0xffffd8f1,%eax
   2eecf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   2eed3:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   2eeda:	00 00 
   2eedc:	74 05                	je     2eee3 <sgx_disp_ippsAES_CMACInit+0xbf>
   2eede:	e8 a9 c5 fd ff       	callq  b48c <__stack_chk_fail>
   2eee3:	c9                   	leaveq 
   2eee4:	c3                   	retq   

000000000002eee5 <sgx_disp_ippsAES_CMACUpdate>:
   2eee5:	55                   	push   %rbp
   2eee6:	48 89 e5             	mov    %rsp,%rbp
   2eee9:	48 83 ec 30          	sub    $0x30,%rsp
   2eeed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2eef1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2eef4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2eef8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2eeff:	00 00 
   2ef01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ef05:	31 c0                	xor    %eax,%eax
   2ef07:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2ef0b:	48 89 c7             	mov    %rax,%rdi
   2ef0e:	e8 ad 04 00 00       	callq  2f3c0 <ippcpGetCpuFeatures>
   2ef13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ef17:	25 00 00 30 07       	and    $0x7300000,%eax
   2ef1c:	48 3d 00 00 30 07    	cmp    $0x7300000,%rax
   2ef22:	75 17                	jne    2ef3b <sgx_disp_ippsAES_CMACUpdate+0x56>
   2ef24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2ef28:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   2ef2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ef2f:	89 ce                	mov    %ecx,%esi
   2ef31:	48 89 c7             	mov    %rax,%rdi
   2ef34:	e8 e7 68 00 00       	callq  35820 <k0_ippsAES_CMACUpdate>
   2ef39:	eb 4f                	jmp    2ef8a <sgx_disp_ippsAES_CMACUpdate+0xa5>
   2ef3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ef3f:	25 00 80 00 00       	and    $0x8000,%eax
   2ef44:	48 85 c0             	test   %rax,%rax
   2ef47:	74 17                	je     2ef60 <sgx_disp_ippsAES_CMACUpdate+0x7b>
   2ef49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2ef4d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   2ef50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ef54:	89 ce                	mov    %ecx,%esi
   2ef56:	48 89 c7             	mov    %rax,%rdi
   2ef59:	e8 02 41 00 00       	callq  33060 <l9_ippsAES_CMACUpdate>
   2ef5e:	eb 2a                	jmp    2ef8a <sgx_disp_ippsAES_CMACUpdate+0xa5>
   2ef60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ef64:	25 80 00 00 00       	and    $0x80,%eax
   2ef69:	48 85 c0             	test   %rax,%rax
   2ef6c:	74 17                	je     2ef85 <sgx_disp_ippsAES_CMACUpdate+0xa0>
   2ef6e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2ef72:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   2ef75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ef79:	89 ce                	mov    %ecx,%esi
   2ef7b:	48 89 c7             	mov    %rax,%rdi
   2ef7e:	e8 1d 1a 00 00       	callq  309a0 <y8_ippsAES_CMACUpdate>
   2ef83:	eb 05                	jmp    2ef8a <sgx_disp_ippsAES_CMACUpdate+0xa5>
   2ef85:	b8 f1 d8 ff ff       	mov    $0xffffd8f1,%eax
   2ef8a:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2ef8e:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2ef95:	00 00 
   2ef97:	74 05                	je     2ef9e <sgx_disp_ippsAES_CMACUpdate+0xb9>
   2ef99:	e8 ee c4 fd ff       	callq  b48c <__stack_chk_fail>
   2ef9e:	c9                   	leaveq 
   2ef9f:	c3                   	retq   

000000000002efa0 <sgx_disp_ippsAES_CMACFinal>:
   2efa0:	55                   	push   %rbp
   2efa1:	48 89 e5             	mov    %rsp,%rbp
   2efa4:	48 83 ec 30          	sub    $0x30,%rsp
   2efa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2efac:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2efaf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2efb3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2efba:	00 00 
   2efbc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2efc0:	31 c0                	xor    %eax,%eax
   2efc2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2efc6:	48 89 c7             	mov    %rax,%rdi
   2efc9:	e8 f2 03 00 00       	callq  2f3c0 <ippcpGetCpuFeatures>
   2efce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2efd2:	25 00 00 30 07       	and    $0x7300000,%eax
   2efd7:	48 3d 00 00 30 07    	cmp    $0x7300000,%rax
   2efdd:	75 17                	jne    2eff6 <sgx_disp_ippsAES_CMACFinal+0x56>
   2efdf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2efe3:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   2efe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2efea:	89 ce                	mov    %ecx,%esi
   2efec:	48 89 c7             	mov    %rax,%rdi
   2efef:	e8 ac 61 00 00       	callq  351a0 <k0_ippsAES_CMACFinal>
   2eff4:	eb 4f                	jmp    2f045 <sgx_disp_ippsAES_CMACFinal+0xa5>
   2eff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2effa:	25 00 80 00 00       	and    $0x8000,%eax
   2efff:	48 85 c0             	test   %rax,%rax
   2f002:	74 17                	je     2f01b <sgx_disp_ippsAES_CMACFinal+0x7b>
   2f004:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2f008:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   2f00b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2f00f:	89 ce                	mov    %ecx,%esi
   2f011:	48 89 c7             	mov    %rax,%rdi
   2f014:	e8 a7 39 00 00       	callq  329c0 <l9_ippsAES_CMACFinal>
   2f019:	eb 2a                	jmp    2f045 <sgx_disp_ippsAES_CMACFinal+0xa5>
   2f01b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2f01f:	25 80 00 00 00       	and    $0x80,%eax
   2f024:	48 85 c0             	test   %rax,%rax
   2f027:	74 17                	je     2f040 <sgx_disp_ippsAES_CMACFinal+0xa0>
   2f029:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2f02d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   2f030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2f034:	89 ce                	mov    %ecx,%esi
   2f036:	48 89 c7             	mov    %rax,%rdi
   2f039:	e8 a2 0f 00 00       	callq  2ffe0 <y8_ippsAES_CMACFinal>
   2f03e:	eb 05                	jmp    2f045 <sgx_disp_ippsAES_CMACFinal+0xa5>
   2f040:	b8 f1 d8 ff ff       	mov    $0xffffd8f1,%eax
   2f045:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2f049:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2f050:	00 00 
   2f052:	74 05                	je     2f059 <sgx_disp_ippsAES_CMACFinal+0xb9>
   2f054:	e8 33 c4 fd ff       	callq  b48c <__stack_chk_fail>
   2f059:	c9                   	leaveq 
   2f05a:	c3                   	retq   
   2f05b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f060 <cpGetFeatures>:
   2f060:	41 57                	push   %r15
   2f062:	41 56                	push   %r14
   2f064:	41 55                	push   %r13
   2f066:	41 54                	push   %r12
   2f068:	55                   	push   %rbp
   2f069:	53                   	push   %rbx
   2f06a:	48 83 ec 28          	sub    $0x28,%rsp
   2f06e:	49 89 fd             	mov    %rdi,%r13
   2f071:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   2f076:	31 d2                	xor    %edx,%edx
   2f078:	31 f6                	xor    %esi,%esi
   2f07a:	4c 89 e7             	mov    %r12,%rdi
   2f07d:	e8 fe 0c 00 00       	callq  2fd80 <cpGetReg>
   2f082:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   2f087:	31 d2                	xor    %edx,%edx
   2f089:	be 00 00 00 80       	mov    $0x80000000,%esi
   2f08e:	4c 89 e7             	mov    %r12,%rdi
   2f091:	e8 ea 0c 00 00       	callq  2fd80 <cpGetReg>
   2f096:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   2f09b:	31 d2                	xor    %edx,%edx
   2f09d:	be 01 00 00 00       	mov    $0x1,%esi
   2f0a2:	4c 89 e7             	mov    %r12,%rdi
   2f0a5:	e8 d6 0c 00 00       	callq  2fd80 <cpGetReg>
   2f0aa:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
   2f0ae:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
   2f0b2:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   2f0b6:	89 c3                	mov    %eax,%ebx
   2f0b8:	c1 eb 17             	shr    $0x17,%ebx
   2f0bb:	83 e3 01             	and    $0x1,%ebx
   2f0be:	a9 00 00 00 02       	test   $0x2000000,%eax
   2f0c3:	74 04                	je     2f0c9 <cpGetFeatures+0x69>
   2f0c5:	48 83 cb 02          	or     $0x2,%rbx
   2f0c9:	a9 00 00 00 04       	test   $0x4000000,%eax
   2f0ce:	74 04                	je     2f0d4 <cpGetFeatures+0x74>
   2f0d0:	48 83 cb 04          	or     $0x4,%rbx
   2f0d4:	f6 c1 01             	test   $0x1,%cl
   2f0d7:	74 04                	je     2f0dd <cpGetFeatures+0x7d>
   2f0d9:	48 83 cb 08          	or     $0x8,%rbx
   2f0dd:	f6 c5 02             	test   $0x2,%ch
   2f0e0:	74 04                	je     2f0e6 <cpGetFeatures+0x86>
   2f0e2:	48 83 cb 10          	or     $0x10,%rbx
   2f0e6:	f7 c1 00 00 40 00    	test   $0x400000,%ecx
   2f0ec:	74 04                	je     2f0f2 <cpGetFeatures+0x92>
   2f0ee:	48 83 cb 20          	or     $0x20,%rbx
   2f0f2:	f7 c1 00 00 08 00    	test   $0x80000,%ecx
   2f0f8:	74 04                	je     2f0fe <cpGetFeatures+0x9e>
   2f0fa:	48 83 cb 40          	or     $0x40,%rbx
   2f0fe:	f7 c1 00 00 10 00    	test   $0x100000,%ecx
   2f104:	74 03                	je     2f109 <cpGetFeatures+0xa9>
   2f106:	80 cb 80             	or     $0x80,%bl
   2f109:	f7 c1 00 00 00 10    	test   $0x10000000,%ecx
   2f10f:	74 03                	je     2f114 <cpGetFeatures+0xb4>
   2f111:	80 cf 01             	or     $0x1,%bh
   2f114:	89 c8                	mov    %ecx,%eax
   2f116:	25 00 00 00 18       	and    $0x18000000,%eax
   2f11b:	3d 00 00 00 18       	cmp    $0x18000000,%eax
   2f120:	0f 84 fa 01 00 00    	je     2f320 <cpGetFeatures+0x2c0>
   2f126:	f7 c1 00 00 00 02    	test   $0x2000000,%ecx
   2f12c:	74 03                	je     2f131 <cpGetFeatures+0xd1>
   2f12e:	80 cf 04             	or     $0x4,%bh
   2f131:	f6 c1 02             	test   $0x2,%cl
   2f134:	74 03                	je     2f139 <cpGetFeatures+0xd9>
   2f136:	80 cf 08             	or     $0x8,%bh
   2f139:	f7 c1 00 00 00 40    	test   $0x40000000,%ecx
   2f13f:	74 03                	je     2f144 <cpGetFeatures+0xe4>
   2f141:	80 cf 20             	or     $0x20,%bh
   2f144:	f7 c1 00 00 00 20    	test   $0x20000000,%ecx
   2f14a:	74 03                	je     2f14f <cpGetFeatures+0xef>
   2f14c:	80 cf 40             	or     $0x40,%bh
   2f14f:	41 83 ff 06          	cmp    $0x6,%r15d
   2f153:	77 64                	ja     2f1b9 <cpGetFeatures+0x159>
   2f155:	41 81 fe 00 00 00 80 	cmp    $0x80000000,%r14d
   2f15c:	77 3c                	ja     2f19a <cpGetFeatures+0x13a>
   2f15e:	c1 e5 14             	shl    $0x14,%ebp
   2f161:	c1 ed 18             	shr    $0x18,%ebp
   2f164:	81 fd b1 00 00 00    	cmp    $0xb1,%ebp
   2f16a:	75 08                	jne    2f174 <cpGetFeatures+0x114>
   2f16c:	b8 00 00 00 80       	mov    $0x80000000,%eax
   2f171:	48 09 c3             	or     %rax,%rbx
   2f174:	48 89 1d 75 7f 02 00 	mov    %rbx,0x27f75(%rip)        # 570f0 <cpFeatures>
   2f17b:	48 89 1d 66 7f 02 00 	mov    %rbx,0x27f66(%rip)        # 570e8 <cpFeaturesMask>
   2f182:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   2f186:	b8 01 00 00 00       	mov    $0x1,%eax
   2f18b:	48 83 c4 28          	add    $0x28,%rsp
   2f18f:	5b                   	pop    %rbx
   2f190:	5d                   	pop    %rbp
   2f191:	41 5c                	pop    %r12
   2f193:	41 5d                	pop    %r13
   2f195:	41 5e                	pop    %r14
   2f197:	41 5f                	pop    %r15
   2f199:	c3                   	retq   
   2f19a:	31 d2                	xor    %edx,%edx
   2f19c:	be 01 00 00 80       	mov    $0x80000001,%esi
   2f1a1:	4c 89 e7             	mov    %r12,%rdi
   2f1a4:	e8 d7 0b 00 00       	callq  2fd80 <cpGetReg>
   2f1a9:	f6 44 24 19 01       	testb  $0x1,0x19(%rsp)
   2f1ae:	74 ae                	je     2f15e <cpGetFeatures+0xfe>
   2f1b0:	48 81 cb 00 00 04 00 	or     $0x40000,%rbx
   2f1b7:	eb a5                	jmp    2f15e <cpGetFeatures+0xfe>
   2f1b9:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2f1bd:	31 d2                	xor    %edx,%edx
   2f1bf:	be 07 00 00 00       	mov    $0x7,%esi
   2f1c4:	4c 89 e7             	mov    %r12,%rdi
   2f1c7:	e8 b4 0b 00 00       	callq  2fd80 <cpGetReg>
   2f1cc:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
   2f1d1:	8b 44 24 18          	mov    0x18(%rsp),%eax
   2f1d5:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
   2f1d9:	44 89 fe             	mov    %r15d,%esi
   2f1dc:	81 e6 08 01 00 00    	and    $0x108,%esi
   2f1e2:	41 f7 c7 00 00 08 00 	test   $0x80000,%r15d
   2f1e9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2f1ed:	74 07                	je     2f1f6 <cpGetFeatures+0x196>
   2f1ef:	48 81 cb 00 00 01 00 	or     $0x10000,%rbx
   2f1f6:	41 f7 c7 00 00 04 00 	test   $0x40000,%r15d
   2f1fd:	74 07                	je     2f206 <cpGetFeatures+0x1a6>
   2f1ff:	48 81 cb 00 00 02 00 	or     $0x20000,%rbx
   2f206:	41 f7 c7 00 00 00 20 	test   $0x20000000,%r15d
   2f20d:	74 07                	je     2f216 <cpGetFeatures+0x1b6>
   2f20f:	48 81 cb 00 00 08 00 	or     $0x80000,%rbx
   2f216:	41 f7 c7 00 00 01 00 	test   $0x10000,%r15d
   2f21d:	74 07                	je     2f226 <cpGetFeatures+0x1c6>
   2f21f:	48 81 cb 00 00 10 00 	or     $0x100000,%rbx
   2f226:	41 f7 c7 00 00 00 04 	test   $0x4000000,%r15d
   2f22d:	74 07                	je     2f236 <cpGetFeatures+0x1d6>
   2f22f:	48 81 cb 00 00 80 00 	or     $0x800000,%rbx
   2f236:	41 f7 c7 00 00 00 08 	test   $0x8000000,%r15d
   2f23d:	74 07                	je     2f246 <cpGetFeatures+0x1e6>
   2f23f:	48 81 cb 00 00 40 00 	or     $0x400000,%rbx
   2f246:	41 f7 c7 00 00 00 10 	test   $0x10000000,%r15d
   2f24d:	74 07                	je     2f256 <cpGetFeatures+0x1f6>
   2f24f:	48 81 cb 00 00 20 00 	or     $0x200000,%rbx
   2f256:	41 f7 c7 00 00 02 00 	test   $0x20000,%r15d
   2f25d:	74 07                	je     2f266 <cpGetFeatures+0x206>
   2f25f:	48 81 cb 00 00 00 02 	or     $0x2000000,%rbx
   2f266:	41 f7 c7 00 00 00 40 	test   $0x40000000,%r15d
   2f26d:	74 07                	je     2f276 <cpGetFeatures+0x216>
   2f26f:	48 81 cb 00 00 00 01 	or     $0x1000000,%rbx
   2f276:	45 85 ff             	test   %r15d,%r15d
   2f279:	0f 88 02 01 00 00    	js     2f381 <cpGetFeatures+0x321>
   2f27f:	a8 02                	test   $0x2,%al
   2f281:	74 07                	je     2f28a <cpGetFeatures+0x22a>
   2f283:	48 81 cb 00 00 00 08 	or     $0x8000000,%rbx
   2f28a:	f6 c2 04             	test   $0x4,%dl
   2f28d:	74 07                	je     2f296 <cpGetFeatures+0x236>
   2f28f:	48 81 cb 00 00 00 40 	or     $0x40000000,%rbx
   2f296:	83 e2 08             	and    $0x8,%edx
   2f299:	74 07                	je     2f2a2 <cpGetFeatures+0x242>
   2f29b:	48 81 cb 00 00 00 20 	or     $0x20000000,%rbx
   2f2a2:	41 f7 c7 00 40 00 00 	test   $0x4000,%r15d
   2f2a9:	74 07                	je     2f2b2 <cpGetFeatures+0x252>
   2f2ab:	48 81 cb 00 00 00 10 	or     $0x10000000,%rbx
   2f2b2:	41 f7 c7 00 00 20 00 	test   $0x200000,%r15d
   2f2b9:	74 0d                	je     2f2c8 <cpGetFeatures+0x268>
   2f2bb:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
   2f2c2:	00 00 00 
   2f2c5:	48 09 d3             	or     %rdx,%rbx
   2f2c8:	f6 c4 01             	test   $0x1,%ah
   2f2cb:	74 0d                	je     2f2da <cpGetFeatures+0x27a>
   2f2cd:	48 ba 00 00 00 00 04 	movabs $0x400000000,%rdx
   2f2d4:	00 00 00 
   2f2d7:	48 09 d3             	or     %rdx,%rbx
   2f2da:	f6 c4 02             	test   $0x2,%ah
   2f2dd:	74 0d                	je     2f2ec <cpGetFeatures+0x28c>
   2f2df:	48 ba 00 00 00 00 08 	movabs $0x800000000,%rdx
   2f2e6:	00 00 00 
   2f2e9:	48 09 d3             	or     %rdx,%rbx
   2f2ec:	f6 c4 04             	test   $0x4,%ah
   2f2ef:	75 4e                	jne    2f33f <cpGetFeatures+0x2df>
   2f2f1:	f7 c3 00 00 10 00    	test   $0x100000,%ebx
   2f2f7:	75 5b                	jne    2f354 <cpGetFeatures+0x2f4>
   2f2f9:	80 e5 10             	and    $0x10,%ch
   2f2fc:	0f 84 53 fe ff ff    	je     2f155 <cpGetFeatures+0xf5>
   2f302:	41 83 e7 20          	and    $0x20,%r15d
   2f306:	0f 84 49 fe ff ff    	je     2f155 <cpGetFeatures+0xf5>
   2f30c:	81 fe 08 01 00 00    	cmp    $0x108,%esi
   2f312:	0f 85 3d fe ff ff    	jne    2f155 <cpGetFeatures+0xf5>
   2f318:	80 cf 80             	or     $0x80,%bh
   2f31b:	e9 35 fe ff ff       	jmpq   2f155 <cpGetFeatures+0xf5>
   2f320:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2f324:	31 c0                	xor    %eax,%eax
   2f326:	e8 95 0a 00 00       	callq  2fdc0 <cp_is_avx_extension>
   2f32b:	a8 01                	test   $0x1,%al
   2f32d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2f331:	0f 84 ef fd ff ff    	je     2f126 <cpGetFeatures+0xc6>
   2f337:	80 cf 02             	or     $0x2,%bh
   2f33a:	e9 e7 fd ff ff       	jmpq   2f126 <cpGetFeatures+0xc6>
   2f33f:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
   2f346:	00 00 00 
   2f349:	48 09 c3             	or     %rax,%rbx
   2f34c:	f7 c3 00 00 10 00    	test   $0x100000,%ebx
   2f352:	74 a5                	je     2f2f9 <cpGetFeatures+0x299>
   2f354:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   2f358:	89 74 24 08          	mov    %esi,0x8(%rsp)
   2f35c:	31 c0                	xor    %eax,%eax
   2f35e:	e8 9d 0a 00 00       	callq  2fe00 <cp_is_avx512_extension>
   2f363:	85 c0                	test   %eax,%eax
   2f365:	8b 74 24 08          	mov    0x8(%rsp),%esi
   2f369:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   2f36d:	74 8a                	je     2f2f9 <cpGetFeatures+0x299>
   2f36f:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   2f376:	00 00 00 
   2f379:	48 09 c3             	or     %rax,%rbx
   2f37c:	e9 78 ff ff ff       	jmpq   2f2f9 <cpGetFeatures+0x299>
   2f381:	48 81 cb 00 00 00 04 	or     $0x4000000,%rbx
   2f388:	a8 02                	test   $0x2,%al
   2f38a:	0f 84 fa fe ff ff    	je     2f28a <cpGetFeatures+0x22a>
   2f390:	e9 ee fe ff ff       	jmpq   2f283 <cpGetFeatures+0x223>
   2f395:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f39c:	00 00 00 00 

000000000002f3a0 <ippcpGetEnabledCpuFeatures>:
   2f3a0:	48 8b 05 41 7d 02 00 	mov    0x27d41(%rip),%rax        # 570e8 <cpFeaturesMask>
   2f3a7:	c3                   	retq   
   2f3a8:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f3af:	00 00 00 00 
   2f3b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f3ba:	00 00 00 00 
   2f3be:	66 90                	xchg   %ax,%ax

000000000002f3c0 <ippcpGetCpuFeatures>:
   2f3c0:	48 85 ff             	test   %rdi,%rdi
   2f3c3:	74 28                	je     2f3ed <ippcpGetCpuFeatures+0x2d>
   2f3c5:	48 8b 05 24 7d 02 00 	mov    0x27d24(%rip),%rax        # 570f0 <cpFeatures>
   2f3cc:	48 85 c0             	test   %rax,%rax
   2f3cf:	74 06                	je     2f3d7 <ippcpGetCpuFeatures+0x17>
   2f3d1:	48 89 07             	mov    %rax,(%rdi)
   2f3d4:	31 c0                	xor    %eax,%eax
   2f3d6:	c3                   	retq   
   2f3d7:	48 83 ec 08          	sub    $0x8,%rsp
   2f3db:	e8 80 fc ff ff       	callq  2f060 <cpGetFeatures>
   2f3e0:	83 f8 01             	cmp    $0x1,%eax
   2f3e3:	19 c0                	sbb    %eax,%eax
   2f3e5:	83 e0 24             	and    $0x24,%eax
   2f3e8:	48 83 c4 08          	add    $0x8,%rsp
   2f3ec:	c3                   	retq   
   2f3ed:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2f3f2:	c3                   	retq   
   2f3f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f3fa:	00 00 00 00 
   2f3fe:	66 90                	xchg   %ax,%ax

000000000002f400 <cpGetFeature>:
   2f400:	48 8b 05 e1 7c 02 00 	mov    0x27ce1(%rip),%rax        # 570e8 <cpFeaturesMask>
   2f407:	48 21 f8             	and    %rdi,%rax
   2f40a:	48 39 f8             	cmp    %rdi,%rax
   2f40d:	0f 94 c0             	sete   %al
   2f410:	0f b6 c0             	movzbl %al,%eax
   2f413:	c3                   	retq   
   2f414:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f41b:	00 00 00 00 
   2f41f:	90                   	nop

000000000002f420 <ippcpGetEnabledNumThreads>:
   2f420:	b8 01 00 00 00       	mov    $0x1,%eax
   2f425:	c3                   	retq   
   2f426:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f42d:	00 00 00 00 
   2f431:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f438:	00 00 00 00 
   2f43c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f440 <owncpFeaturesToIdx>:
   2f440:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
   2f446:	48 8b 17             	mov    (%rdi),%rdx
   2f449:	48 89 d0             	mov    %rdx,%rax
   2f44c:	25 00 00 30 07       	and    $0x7300000,%eax
   2f451:	48 3d 00 00 30 07    	cmp    $0x7300000,%rax
   2f457:	0f 84 e7 00 00 00    	je     2f544 <owncpFeaturesToIdx+0x104>
   2f45d:	48 89 d0             	mov    %rdx,%rax
   2f460:	25 00 00 f0 00       	and    $0xf00000,%eax
   2f465:	48 3d 00 00 f0 00    	cmp    $0xf00000,%rax
   2f46b:	74 75                	je     2f4e2 <owncpFeaturesToIdx+0xa2>
   2f46d:	f6 c6 80             	test   $0x80,%dh
   2f470:	74 3a                	je     2f4ac <owncpFeaturesToIdx+0x6c>
   2f472:	f6 05 78 7c 02 00 02 	testb  $0x2,0x27c78(%rip)        # 570f1 <cpFeatures+0x1>
   2f479:	0f 84 94 00 00 00    	je     2f513 <owncpFeaturesToIdx+0xd3>
   2f47f:	c7 06 04 00 00 00    	movl   $0x4,(%rsi)
   2f485:	48 89 d1             	mov    %rdx,%rcx
   2f488:	81 e1 df 81 00 00    	and    $0x81df,%ecx
   2f48e:	48 81 f9 df 81 00 00 	cmp    $0x81df,%rcx
   2f495:	0f 84 08 01 00 00    	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f49b:	b9 df 81 00 00       	mov    $0x81df,%ecx
   2f4a0:	b8 33 00 00 00       	mov    $0x33,%eax
   2f4a5:	48 09 ca             	or     %rcx,%rdx
   2f4a8:	48 89 17             	mov    %rdx,(%rdi)
   2f4ab:	c3                   	retq   
   2f4ac:	f6 c6 01             	test   $0x1,%dh
   2f4af:	74 62                	je     2f513 <owncpFeaturesToIdx+0xd3>
   2f4b1:	f6 05 39 7c 02 00 02 	testb  $0x2,0x27c39(%rip)        # 570f1 <cpFeatures+0x1>
   2f4b8:	74 59                	je     2f513 <owncpFeaturesToIdx+0xd3>
   2f4ba:	c7 06 03 00 00 00    	movl   $0x3,(%rsi)
   2f4c0:	48 89 d1             	mov    %rdx,%rcx
   2f4c3:	81 e1 df 01 00 00    	and    $0x1df,%ecx
   2f4c9:	48 81 f9 df 01 00 00 	cmp    $0x1df,%rcx
   2f4d0:	0f 84 cd 00 00 00    	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f4d6:	b9 df 01 00 00       	mov    $0x1df,%ecx
   2f4db:	b8 33 00 00 00       	mov    $0x33,%eax
   2f4e0:	eb 5b                	jmp    2f53d <owncpFeaturesToIdx+0xfd>
   2f4e2:	f6 05 0b 7c 02 00 02 	testb  $0x2,0x27c0b(%rip)        # 570f4 <cpFeatures+0x4>
   2f4e9:	74 82                	je     2f46d <owncpFeaturesToIdx+0x2d>
   2f4eb:	c7 06 05 00 00 00    	movl   $0x5,(%rsi)
   2f4f1:	48 89 d1             	mov    %rdx,%rcx
   2f4f4:	81 e1 df 81 f0 00    	and    $0xf081df,%ecx
   2f4fa:	48 81 f9 df 81 f0 00 	cmp    $0xf081df,%rcx
   2f501:	0f 84 9c 00 00 00    	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f507:	b9 df 81 f0 00       	mov    $0xf081df,%ecx
   2f50c:	b8 33 00 00 00       	mov    $0x33,%eax
   2f511:	eb 2a                	jmp    2f53d <owncpFeaturesToIdx+0xfd>
   2f513:	f6 c2 80             	test   $0x80,%dl
   2f516:	75 62                	jne    2f57a <owncpFeaturesToIdx+0x13a>
   2f518:	f6 c2 40             	test   $0x40,%dl
   2f51b:	0f 84 8b 00 00 00    	je     2f5ac <owncpFeaturesToIdx+0x16c>
   2f521:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
   2f527:	48 89 d1             	mov    %rdx,%rcx
   2f52a:	83 e1 5f             	and    $0x5f,%ecx
   2f52d:	48 83 f9 5f          	cmp    $0x5f,%rcx
   2f531:	74 70                	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f533:	b9 5f 00 00 00       	mov    $0x5f,%ecx
   2f538:	b8 33 00 00 00       	mov    $0x33,%eax
   2f53d:	48 09 ca             	or     %rcx,%rdx
   2f540:	48 89 17             	mov    %rdx,(%rdi)
   2f543:	c3                   	retq   
   2f544:	f6 05 a9 7b 02 00 02 	testb  $0x2,0x27ba9(%rip)        # 570f4 <cpFeatures+0x4>
   2f54b:	0f 84 1c ff ff ff    	je     2f46d <owncpFeaturesToIdx+0x2d>
   2f551:	c7 06 06 00 00 00    	movl   $0x6,(%rsi)
   2f557:	48 89 d1             	mov    %rdx,%rcx
   2f55a:	81 e1 df 81 30 07    	and    $0x73081df,%ecx
   2f560:	48 81 f9 df 81 30 07 	cmp    $0x73081df,%rcx
   2f567:	74 3a                	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f569:	b9 df 81 30 07       	mov    $0x73081df,%ecx
   2f56e:	b8 33 00 00 00       	mov    $0x33,%eax
   2f573:	48 09 ca             	or     %rcx,%rdx
   2f576:	48 89 17             	mov    %rdx,(%rdi)
   2f579:	c3                   	retq   
   2f57a:	c7 06 02 00 00 00    	movl   $0x2,(%rsi)
   2f580:	48 89 d1             	mov    %rdx,%rcx
   2f583:	81 e1 df 00 00 00    	and    $0xdf,%ecx
   2f589:	48 81 f9 df 00 00 00 	cmp    $0xdf,%rcx
   2f590:	74 11                	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f592:	b9 df 00 00 00       	mov    $0xdf,%ecx
   2f597:	b8 33 00 00 00       	mov    $0x33,%eax
   2f59c:	48 09 ca             	or     %rcx,%rdx
   2f59f:	48 89 17             	mov    %rdx,(%rdi)
   2f5a2:	c3                   	retq   
   2f5a3:	31 c0                	xor    %eax,%eax
   2f5a5:	48 09 ca             	or     %rcx,%rdx
   2f5a8:	48 89 17             	mov    %rdx,(%rdi)
   2f5ab:	c3                   	retq   
   2f5ac:	f6 c2 20             	test   $0x20,%dl
   2f5af:	75 26                	jne    2f5d7 <owncpFeaturesToIdx+0x197>
   2f5b1:	f6 c2 10             	test   $0x10,%dl
   2f5b4:	74 42                	je     2f5f8 <owncpFeaturesToIdx+0x1b8>
   2f5b6:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
   2f5bc:	48 89 d1             	mov    %rdx,%rcx
   2f5bf:	83 e1 1f             	and    $0x1f,%ecx
   2f5c2:	48 83 f9 1f          	cmp    $0x1f,%rcx
   2f5c6:	74 db                	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f5c8:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   2f5cd:	b8 33 00 00 00       	mov    $0x33,%eax
   2f5d2:	e9 66 ff ff ff       	jmpq   2f53d <owncpFeaturesToIdx+0xfd>
   2f5d7:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
   2f5dd:	48 89 d1             	mov    %rdx,%rcx
   2f5e0:	83 e1 3f             	and    $0x3f,%ecx
   2f5e3:	48 83 f9 3f          	cmp    $0x3f,%rcx
   2f5e7:	74 ba                	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f5e9:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   2f5ee:	b8 33 00 00 00       	mov    $0x33,%eax
   2f5f3:	e9 45 ff ff ff       	jmpq   2f53d <owncpFeaturesToIdx+0xfd>
   2f5f8:	f6 c2 08             	test   $0x8,%dl
   2f5fb:	75 24                	jne    2f621 <owncpFeaturesToIdx+0x1e1>
   2f5fd:	f6 c2 04             	test   $0x4,%dl
   2f600:	75 3e                	jne    2f640 <owncpFeaturesToIdx+0x200>
   2f602:	48 89 d0             	mov    %rdx,%rax
   2f605:	83 e0 02             	and    $0x2,%eax
   2f608:	48 83 f8 01          	cmp    $0x1,%rax
   2f60c:	48 19 c9             	sbb    %rcx,%rcx
   2f60f:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
   2f613:	48 83 c1 03          	add    $0x3,%rcx
   2f617:	b8 24 00 00 00       	mov    $0x24,%eax
   2f61c:	e9 1c ff ff ff       	jmpq   2f53d <owncpFeaturesToIdx+0xfd>
   2f621:	48 89 d1             	mov    %rdx,%rcx
   2f624:	83 e1 0f             	and    $0xf,%ecx
   2f627:	48 83 f9 0f          	cmp    $0xf,%rcx
   2f62b:	0f 84 72 ff ff ff    	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f631:	b9 0f 00 00 00       	mov    $0xf,%ecx
   2f636:	b8 33 00 00 00       	mov    $0x33,%eax
   2f63b:	e9 fd fe ff ff       	jmpq   2f53d <owncpFeaturesToIdx+0xfd>
   2f640:	48 89 d1             	mov    %rdx,%rcx
   2f643:	83 e1 07             	and    $0x7,%ecx
   2f646:	48 83 f9 07          	cmp    $0x7,%rcx
   2f64a:	0f 84 53 ff ff ff    	je     2f5a3 <owncpFeaturesToIdx+0x163>
   2f650:	b9 07 00 00 00       	mov    $0x7,%ecx
   2f655:	b8 33 00 00 00       	mov    $0x33,%eax
   2f65a:	e9 de fe ff ff       	jmpq   2f53d <owncpFeaturesToIdx+0xfd>
   2f65f:	90                   	nop

000000000002f660 <ippcpSetNumThreads>:
   2f660:	b8 01 00 00 00       	mov    $0x1,%eax
   2f665:	c3                   	retq   
   2f666:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f66d:	00 00 00 00 
   2f671:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f678:	00 00 00 00 
   2f67c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f680 <ippcpGetNumThreads>:
   2f680:	48 85 ff             	test   %rdi,%rdi
   2f683:	74 0c                	je     2f691 <ippcpGetNumThreads+0x11>
   2f685:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   2f68b:	b8 01 00 00 00       	mov    $0x1,%eax
   2f690:	c3                   	retq   
   2f691:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   2f696:	c3                   	retq   
   2f697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f69e:	00 00 

000000000002f6a0 <ippcpInit>:
   2f6a0:	53                   	push   %rbx
   2f6a1:	48 83 ec 10          	sub    $0x10,%rsp
   2f6a5:	48 8b 1d 44 7a 02 00 	mov    0x27a44(%rip),%rbx        # 570f0 <cpFeatures>
   2f6ac:	48 85 db             	test   %rbx,%rbx
   2f6af:	0f 84 3d 01 00 00    	je     2f7f2 <ippcpInit+0x152>
   2f6b5:	48 89 1c 24          	mov    %rbx,(%rsp)
   2f6b9:	48 85 db             	test   %rbx,%rbx
   2f6bc:	0f 89 f2 00 00 00    	jns    2f7b4 <ippcpInit+0x114>
   2f6c2:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   2f6c9:	ff ff 7f 
   2f6cc:	48 21 d8             	and    %rbx,%rax
   2f6cf:	48 89 05 1a 7a 02 00 	mov    %rax,0x27a1a(%rip)        # 570f0 <cpFeatures>
   2f6d6:	48 89 c2             	mov    %rax,%rdx
   2f6d9:	81 e2 00 00 30 07    	and    $0x7300000,%edx
   2f6df:	48 81 fa 00 00 30 07 	cmp    $0x7300000,%rdx
   2f6e6:	0f 84 da 00 00 00    	je     2f7c6 <ippcpInit+0x126>
   2f6ec:	48 89 c2             	mov    %rax,%rdx
   2f6ef:	81 e2 00 00 f0 00    	and    $0xf00000,%edx
   2f6f5:	48 81 fa 00 00 f0 00 	cmp    $0xf00000,%rdx
   2f6fc:	74 5a                	je     2f758 <ippcpInit+0xb8>
   2f6fe:	f6 c4 80             	test   $0x80,%ah
   2f701:	74 28                	je     2f72b <ippcpInit+0x8b>
   2f703:	f6 05 e7 79 02 00 02 	testb  $0x2,0x279e7(%rip)        # 570f1 <cpFeatures+0x1>
   2f70a:	74 74                	je     2f780 <ippcpInit+0xe0>
   2f70c:	25 df 81 00 00       	and    $0x81df,%eax
   2f711:	ba 04 00 00 00       	mov    $0x4,%edx
   2f716:	48 3d df 81 00 00    	cmp    $0x81df,%rax
   2f71c:	b8 00 00 00 00       	mov    $0x0,%eax
   2f721:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f726:	0f 45 c1             	cmovne %ecx,%eax
   2f729:	eb 76                	jmp    2f7a1 <ippcpInit+0x101>
   2f72b:	f6 c4 01             	test   $0x1,%ah
   2f72e:	74 50                	je     2f780 <ippcpInit+0xe0>
   2f730:	f6 05 ba 79 02 00 02 	testb  $0x2,0x279ba(%rip)        # 570f1 <cpFeatures+0x1>
   2f737:	74 47                	je     2f780 <ippcpInit+0xe0>
   2f739:	25 df 01 00 00       	and    $0x1df,%eax
   2f73e:	ba 03 00 00 00       	mov    $0x3,%edx
   2f743:	48 3d df 01 00 00    	cmp    $0x1df,%rax
   2f749:	b8 00 00 00 00       	mov    $0x0,%eax
   2f74e:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f753:	0f 45 c1             	cmovne %ecx,%eax
   2f756:	eb 49                	jmp    2f7a1 <ippcpInit+0x101>
   2f758:	f6 05 95 79 02 00 02 	testb  $0x2,0x27995(%rip)        # 570f4 <cpFeatures+0x4>
   2f75f:	74 9d                	je     2f6fe <ippcpInit+0x5e>
   2f761:	25 df 81 f0 00       	and    $0xf081df,%eax
   2f766:	ba 05 00 00 00       	mov    $0x5,%edx
   2f76b:	48 3d df 81 f0 00    	cmp    $0xf081df,%rax
   2f771:	b8 00 00 00 00       	mov    $0x0,%eax
   2f776:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f77b:	0f 45 c1             	cmovne %ecx,%eax
   2f77e:	eb 21                	jmp    2f7a1 <ippcpInit+0x101>
   2f780:	a8 80                	test   $0x80,%al
   2f782:	74 7f                	je     2f803 <ippcpInit+0x163>
   2f784:	25 df 00 00 00       	and    $0xdf,%eax
   2f789:	ba 02 00 00 00       	mov    $0x2,%edx
   2f78e:	48 3d df 00 00 00    	cmp    $0xdf,%rax
   2f794:	b8 00 00 00 00       	mov    $0x0,%eax
   2f799:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f79e:	0f 45 c1             	cmovne %ecx,%eax
   2f7a1:	89 15 c9 7a 01 00    	mov    %edx,0x17ac9(%rip)        # 47270 <ippcpJumpIndexForMergedLibs>
   2f7a7:	48 89 1d 3a 79 02 00 	mov    %rbx,0x2793a(%rip)        # 570e8 <cpFeaturesMask>
   2f7ae:	48 83 c4 10          	add    $0x10,%rsp
   2f7b2:	5b                   	pop    %rbx
   2f7b3:	c3                   	retq   
   2f7b4:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2f7b9:	e8 a2 f8 ff ff       	callq  2f060 <cpGetFeatures>
   2f7be:	48 89 d8             	mov    %rbx,%rax
   2f7c1:	e9 10 ff ff ff       	jmpq   2f6d6 <ippcpInit+0x36>
   2f7c6:	f6 05 27 79 02 00 02 	testb  $0x2,0x27927(%rip)        # 570f4 <cpFeatures+0x4>
   2f7cd:	0f 84 2b ff ff ff    	je     2f6fe <ippcpInit+0x5e>
   2f7d3:	25 df 81 30 07       	and    $0x73081df,%eax
   2f7d8:	ba 06 00 00 00       	mov    $0x6,%edx
   2f7dd:	48 3d df 81 30 07    	cmp    $0x73081df,%rax
   2f7e3:	b8 00 00 00 00       	mov    $0x0,%eax
   2f7e8:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f7ed:	0f 45 c1             	cmovne %ecx,%eax
   2f7f0:	eb af                	jmp    2f7a1 <ippcpInit+0x101>
   2f7f2:	48 89 e7             	mov    %rsp,%rdi
   2f7f5:	e8 66 f8 ff ff       	callq  2f060 <cpGetFeatures>
   2f7fa:	48 8b 1c 24          	mov    (%rsp),%rbx
   2f7fe:	e9 b6 fe ff ff       	jmpq   2f6b9 <ippcpInit+0x19>
   2f803:	a8 40                	test   $0x40,%al
   2f805:	75 2d                	jne    2f834 <ippcpInit+0x194>
   2f807:	a8 20                	test   $0x20,%al
   2f809:	75 47                	jne    2f852 <ippcpInit+0x1b2>
   2f80b:	a8 10                	test   $0x10,%al
   2f80d:	0f 1f 00             	nopl   (%rax)
   2f810:	75 5e                	jne    2f870 <ippcpInit+0x1d0>
   2f812:	a8 08                	test   $0x8,%al
   2f814:	75 78                	jne    2f88e <ippcpInit+0x1ee>
   2f816:	a8 04                	test   $0x4,%al
   2f818:	0f 84 86 00 00 00    	je     2f8a4 <ippcpInit+0x204>
   2f81e:	83 e0 07             	and    $0x7,%eax
   2f821:	31 d2                	xor    %edx,%edx
   2f823:	48 83 f8 07          	cmp    $0x7,%rax
   2f827:	b8 33 00 00 00       	mov    $0x33,%eax
   2f82c:	0f 44 c2             	cmove  %edx,%eax
   2f82f:	e9 6d ff ff ff       	jmpq   2f7a1 <ippcpInit+0x101>
   2f834:	83 e0 5f             	and    $0x5f,%eax
   2f837:	ba 01 00 00 00       	mov    $0x1,%edx
   2f83c:	48 83 f8 5f          	cmp    $0x5f,%rax
   2f840:	b8 00 00 00 00       	mov    $0x0,%eax
   2f845:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f84a:	0f 45 c1             	cmovne %ecx,%eax
   2f84d:	e9 4f ff ff ff       	jmpq   2f7a1 <ippcpInit+0x101>
   2f852:	83 e0 3f             	and    $0x3f,%eax
   2f855:	ba 01 00 00 00       	mov    $0x1,%edx
   2f85a:	48 83 f8 3f          	cmp    $0x3f,%rax
   2f85e:	b8 00 00 00 00       	mov    $0x0,%eax
   2f863:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f868:	0f 45 c1             	cmovne %ecx,%eax
   2f86b:	e9 31 ff ff ff       	jmpq   2f7a1 <ippcpInit+0x101>
   2f870:	83 e0 1f             	and    $0x1f,%eax
   2f873:	ba 01 00 00 00       	mov    $0x1,%edx
   2f878:	48 83 f8 1f          	cmp    $0x1f,%rax
   2f87c:	b8 00 00 00 00       	mov    $0x0,%eax
   2f881:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f886:	0f 45 c1             	cmovne %ecx,%eax
   2f889:	e9 13 ff ff ff       	jmpq   2f7a1 <ippcpInit+0x101>
   2f88e:	83 e0 0f             	and    $0xf,%eax
   2f891:	31 d2                	xor    %edx,%edx
   2f893:	48 83 f8 0f          	cmp    $0xf,%rax
   2f897:	b8 33 00 00 00       	mov    $0x33,%eax
   2f89c:	0f 44 c2             	cmove  %edx,%eax
   2f89f:	e9 fd fe ff ff       	jmpq   2f7a1 <ippcpInit+0x101>
   2f8a4:	31 d2                	xor    %edx,%edx
   2f8a6:	b8 24 00 00 00       	mov    $0x24,%eax
   2f8ab:	e9 f1 fe ff ff       	jmpq   2f7a1 <ippcpInit+0x101>
   2f8b0:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f8b7:	00 00 00 00 
   2f8bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f8c0 <ippcpSetCpuFeatures>:
   2f8c0:	53                   	push   %rbx
   2f8c1:	48 83 ec 10          	sub    $0x10,%rsp
   2f8c5:	48 89 fb             	mov    %rdi,%rbx
   2f8c8:	48 85 ff             	test   %rdi,%rdi
   2f8cb:	0f 89 f2 00 00 00    	jns    2f9c3 <ippcpSetCpuFeatures+0x103>
   2f8d1:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   2f8d8:	ff ff 7f 
   2f8db:	48 21 f8             	and    %rdi,%rax
   2f8de:	48 89 05 0b 78 02 00 	mov    %rax,0x2780b(%rip)        # 570f0 <cpFeatures>
   2f8e5:	48 89 c2             	mov    %rax,%rdx
   2f8e8:	81 e2 00 00 30 07    	and    $0x7300000,%edx
   2f8ee:	48 81 fa 00 00 30 07 	cmp    $0x7300000,%rdx
   2f8f5:	0f 84 da 00 00 00    	je     2f9d5 <ippcpSetCpuFeatures+0x115>
   2f8fb:	48 89 c2             	mov    %rax,%rdx
   2f8fe:	81 e2 00 00 f0 00    	and    $0xf00000,%edx
   2f904:	48 81 fa 00 00 f0 00 	cmp    $0xf00000,%rdx
   2f90b:	74 5a                	je     2f967 <ippcpSetCpuFeatures+0xa7>
   2f90d:	f6 c4 80             	test   $0x80,%ah
   2f910:	74 28                	je     2f93a <ippcpSetCpuFeatures+0x7a>
   2f912:	f6 05 d8 77 02 00 02 	testb  $0x2,0x277d8(%rip)        # 570f1 <cpFeatures+0x1>
   2f919:	74 74                	je     2f98f <ippcpSetCpuFeatures+0xcf>
   2f91b:	25 df 81 00 00       	and    $0x81df,%eax
   2f920:	ba 04 00 00 00       	mov    $0x4,%edx
   2f925:	48 3d df 81 00 00    	cmp    $0x81df,%rax
   2f92b:	b8 00 00 00 00       	mov    $0x0,%eax
   2f930:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f935:	0f 45 c1             	cmovne %ecx,%eax
   2f938:	eb 76                	jmp    2f9b0 <ippcpSetCpuFeatures+0xf0>
   2f93a:	f6 c4 01             	test   $0x1,%ah
   2f93d:	74 50                	je     2f98f <ippcpSetCpuFeatures+0xcf>
   2f93f:	f6 05 ab 77 02 00 02 	testb  $0x2,0x277ab(%rip)        # 570f1 <cpFeatures+0x1>
   2f946:	74 47                	je     2f98f <ippcpSetCpuFeatures+0xcf>
   2f948:	25 df 01 00 00       	and    $0x1df,%eax
   2f94d:	ba 03 00 00 00       	mov    $0x3,%edx
   2f952:	48 3d df 01 00 00    	cmp    $0x1df,%rax
   2f958:	b8 00 00 00 00       	mov    $0x0,%eax
   2f95d:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f962:	0f 45 c1             	cmovne %ecx,%eax
   2f965:	eb 49                	jmp    2f9b0 <ippcpSetCpuFeatures+0xf0>
   2f967:	f6 05 86 77 02 00 02 	testb  $0x2,0x27786(%rip)        # 570f4 <cpFeatures+0x4>
   2f96e:	74 9d                	je     2f90d <ippcpSetCpuFeatures+0x4d>
   2f970:	25 df 81 f0 00       	and    $0xf081df,%eax
   2f975:	ba 05 00 00 00       	mov    $0x5,%edx
   2f97a:	48 3d df 81 f0 00    	cmp    $0xf081df,%rax
   2f980:	b8 00 00 00 00       	mov    $0x0,%eax
   2f985:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f98a:	0f 45 c1             	cmovne %ecx,%eax
   2f98d:	eb 21                	jmp    2f9b0 <ippcpSetCpuFeatures+0xf0>
   2f98f:	a8 80                	test   $0x80,%al
   2f991:	74 6e                	je     2fa01 <ippcpSetCpuFeatures+0x141>
   2f993:	25 df 00 00 00       	and    $0xdf,%eax
   2f998:	ba 02 00 00 00       	mov    $0x2,%edx
   2f99d:	48 3d df 00 00 00    	cmp    $0xdf,%rax
   2f9a3:	b8 00 00 00 00       	mov    $0x0,%eax
   2f9a8:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f9ad:	0f 45 c1             	cmovne %ecx,%eax
   2f9b0:	89 15 ba 78 01 00    	mov    %edx,0x178ba(%rip)        # 47270 <ippcpJumpIndexForMergedLibs>
   2f9b6:	48 89 1d 2b 77 02 00 	mov    %rbx,0x2772b(%rip)        # 570e8 <cpFeaturesMask>
   2f9bd:	48 83 c4 10          	add    $0x10,%rsp
   2f9c1:	5b                   	pop    %rbx
   2f9c2:	c3                   	retq   
   2f9c3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2f9c8:	e8 93 f6 ff ff       	callq  2f060 <cpGetFeatures>
   2f9cd:	48 89 d8             	mov    %rbx,%rax
   2f9d0:	e9 10 ff ff ff       	jmpq   2f8e5 <ippcpSetCpuFeatures+0x25>
   2f9d5:	f6 05 18 77 02 00 02 	testb  $0x2,0x27718(%rip)        # 570f4 <cpFeatures+0x4>
   2f9dc:	0f 84 2b ff ff ff    	je     2f90d <ippcpSetCpuFeatures+0x4d>
   2f9e2:	25 df 81 30 07       	and    $0x73081df,%eax
   2f9e7:	ba 06 00 00 00       	mov    $0x6,%edx
   2f9ec:	48 3d df 81 30 07    	cmp    $0x73081df,%rax
   2f9f2:	b8 00 00 00 00       	mov    $0x0,%eax
   2f9f7:	b9 33 00 00 00       	mov    $0x33,%ecx
   2f9fc:	0f 45 c1             	cmovne %ecx,%eax
   2f9ff:	eb af                	jmp    2f9b0 <ippcpSetCpuFeatures+0xf0>
   2fa01:	a8 40                	test   $0x40,%al
   2fa03:	75 2f                	jne    2fa34 <ippcpSetCpuFeatures+0x174>
   2fa05:	a8 20                	test   $0x20,%al
   2fa07:	75 49                	jne    2fa52 <ippcpSetCpuFeatures+0x192>
   2fa09:	a8 10                	test   $0x10,%al
   2fa0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2fa10:	75 5e                	jne    2fa70 <ippcpSetCpuFeatures+0x1b0>
   2fa12:	a8 08                	test   $0x8,%al
   2fa14:	75 78                	jne    2fa8e <ippcpSetCpuFeatures+0x1ce>
   2fa16:	a8 04                	test   $0x4,%al
   2fa18:	0f 84 86 00 00 00    	je     2faa4 <ippcpSetCpuFeatures+0x1e4>
   2fa1e:	83 e0 07             	and    $0x7,%eax
   2fa21:	31 d2                	xor    %edx,%edx
   2fa23:	48 83 f8 07          	cmp    $0x7,%rax
   2fa27:	b8 33 00 00 00       	mov    $0x33,%eax
   2fa2c:	0f 44 c2             	cmove  %edx,%eax
   2fa2f:	e9 7c ff ff ff       	jmpq   2f9b0 <ippcpSetCpuFeatures+0xf0>
   2fa34:	83 e0 5f             	and    $0x5f,%eax
   2fa37:	ba 01 00 00 00       	mov    $0x1,%edx
   2fa3c:	48 83 f8 5f          	cmp    $0x5f,%rax
   2fa40:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa45:	b9 33 00 00 00       	mov    $0x33,%ecx
   2fa4a:	0f 45 c1             	cmovne %ecx,%eax
   2fa4d:	e9 5e ff ff ff       	jmpq   2f9b0 <ippcpSetCpuFeatures+0xf0>
   2fa52:	83 e0 3f             	and    $0x3f,%eax
   2fa55:	ba 01 00 00 00       	mov    $0x1,%edx
   2fa5a:	48 83 f8 3f          	cmp    $0x3f,%rax
   2fa5e:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa63:	b9 33 00 00 00       	mov    $0x33,%ecx
   2fa68:	0f 45 c1             	cmovne %ecx,%eax
   2fa6b:	e9 40 ff ff ff       	jmpq   2f9b0 <ippcpSetCpuFeatures+0xf0>
   2fa70:	83 e0 1f             	and    $0x1f,%eax
   2fa73:	ba 01 00 00 00       	mov    $0x1,%edx
   2fa78:	48 83 f8 1f          	cmp    $0x1f,%rax
   2fa7c:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa81:	b9 33 00 00 00       	mov    $0x33,%ecx
   2fa86:	0f 45 c1             	cmovne %ecx,%eax
   2fa89:	e9 22 ff ff ff       	jmpq   2f9b0 <ippcpSetCpuFeatures+0xf0>
   2fa8e:	83 e0 0f             	and    $0xf,%eax
   2fa91:	31 d2                	xor    %edx,%edx
   2fa93:	48 83 f8 0f          	cmp    $0xf,%rax
   2fa97:	b8 33 00 00 00       	mov    $0x33,%eax
   2fa9c:	0f 44 c2             	cmove  %edx,%eax
   2fa9f:	e9 0c ff ff ff       	jmpq   2f9b0 <ippcpSetCpuFeatures+0xf0>
   2faa4:	31 d2                	xor    %edx,%edx
   2faa6:	b8 24 00 00 00       	mov    $0x24,%eax
   2faab:	e9 00 ff ff ff       	jmpq   2f9b0 <ippcpSetCpuFeatures+0xf0>
   2fab0:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fab7:	00 00 00 00 
   2fabb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002fac0 <owncpSetCpuFeaturesAndIdx>:
   2fac0:	55                   	push   %rbp
   2fac1:	53                   	push   %rbx
   2fac2:	48 83 ec 18          	sub    $0x18,%rsp
   2fac6:	48 89 fb             	mov    %rdi,%rbx
   2fac9:	48 89 f5             	mov    %rsi,%rbp
   2facc:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
   2fad2:	48 85 ff             	test   %rdi,%rdi
   2fad5:	0f 89 26 01 00 00    	jns    2fc01 <owncpSetCpuFeaturesAndIdx+0x141>
   2fadb:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   2fae2:	ff ff 7f 
   2fae5:	48 21 c3             	and    %rax,%rbx
   2fae8:	48 89 1d 01 76 02 00 	mov    %rbx,0x27601(%rip)        # 570f0 <cpFeatures>
   2faef:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   2faf6:	48 89 d8             	mov    %rbx,%rax
   2faf9:	25 00 00 30 07       	and    $0x7300000,%eax
   2fafe:	48 3d 00 00 30 07    	cmp    $0x7300000,%rax
   2fb04:	0f 84 06 01 00 00    	je     2fc10 <owncpSetCpuFeaturesAndIdx+0x150>
   2fb0a:	48 89 d8             	mov    %rbx,%rax
   2fb0d:	25 00 00 f0 00       	and    $0xf00000,%eax
   2fb12:	48 3d 00 00 f0 00    	cmp    $0xf00000,%rax
   2fb18:	74 75                	je     2fb8f <owncpSetCpuFeaturesAndIdx+0xcf>
   2fb1a:	f6 c7 80             	test   $0x80,%bh
   2fb1d:	74 39                	je     2fb58 <owncpSetCpuFeaturesAndIdx+0x98>
   2fb1f:	f6 05 cb 75 02 00 02 	testb  $0x2,0x275cb(%rip)        # 570f1 <cpFeatures+0x1>
   2fb26:	0f 84 95 00 00 00    	je     2fbc1 <owncpSetCpuFeaturesAndIdx+0x101>
   2fb2c:	c7 45 00 04 00 00 00 	movl   $0x4,0x0(%rbp)
   2fb33:	48 89 da             	mov    %rbx,%rdx
   2fb36:	81 e2 df 81 00 00    	and    $0x81df,%edx
   2fb3c:	48 81 fa df 81 00 00 	cmp    $0x81df,%rdx
   2fb43:	0f 84 1e 01 00 00    	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fb49:	ba df 81 00 00       	mov    $0x81df,%edx
   2fb4e:	b8 33 00 00 00       	mov    $0x33,%eax
   2fb53:	e9 98 00 00 00       	jmpq   2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fb58:	f6 c7 01             	test   $0x1,%bh
   2fb5b:	74 64                	je     2fbc1 <owncpSetCpuFeaturesAndIdx+0x101>
   2fb5d:	f6 05 8d 75 02 00 02 	testb  $0x2,0x2758d(%rip)        # 570f1 <cpFeatures+0x1>
   2fb64:	74 5b                	je     2fbc1 <owncpSetCpuFeaturesAndIdx+0x101>
   2fb66:	c7 45 00 03 00 00 00 	movl   $0x3,0x0(%rbp)
   2fb6d:	48 89 da             	mov    %rbx,%rdx
   2fb70:	81 e2 df 01 00 00    	and    $0x1df,%edx
   2fb76:	48 81 fa df 01 00 00 	cmp    $0x1df,%rdx
   2fb7d:	0f 84 e4 00 00 00    	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fb83:	ba df 01 00 00       	mov    $0x1df,%edx
   2fb88:	b8 33 00 00 00       	mov    $0x33,%eax
   2fb8d:	eb 61                	jmp    2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fb8f:	f6 05 5e 75 02 00 02 	testb  $0x2,0x2755e(%rip)        # 570f4 <cpFeatures+0x4>
   2fb96:	74 82                	je     2fb1a <owncpSetCpuFeaturesAndIdx+0x5a>
   2fb98:	c7 45 00 05 00 00 00 	movl   $0x5,0x0(%rbp)
   2fb9f:	48 89 da             	mov    %rbx,%rdx
   2fba2:	81 e2 df 81 f0 00    	and    $0xf081df,%edx
   2fba8:	48 81 fa df 81 f0 00 	cmp    $0xf081df,%rdx
   2fbaf:	0f 84 b2 00 00 00    	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fbb5:	ba df 81 f0 00       	mov    $0xf081df,%edx
   2fbba:	b8 33 00 00 00       	mov    $0x33,%eax
   2fbbf:	eb 2f                	jmp    2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fbc1:	f6 c3 80             	test   $0x80,%bl
   2fbc4:	75 7c                	jne    2fc42 <owncpSetCpuFeaturesAndIdx+0x182>
   2fbc6:	f6 c3 40             	test   $0x40,%bl
   2fbc9:	0f 84 9c 00 00 00    	je     2fc6b <owncpSetCpuFeaturesAndIdx+0x1ab>
   2fbcf:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   2fbd6:	48 89 da             	mov    %rbx,%rdx
   2fbd9:	83 e2 5f             	and    $0x5f,%edx
   2fbdc:	48 83 fa 5f          	cmp    $0x5f,%rdx
   2fbe0:	0f 84 81 00 00 00    	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fbe6:	ba 5f 00 00 00       	mov    $0x5f,%edx
   2fbeb:	b8 33 00 00 00       	mov    $0x33,%eax
   2fbf0:	48 09 d3             	or     %rdx,%rbx
   2fbf3:	48 89 1d ee 74 02 00 	mov    %rbx,0x274ee(%rip)        # 570e8 <cpFeaturesMask>
   2fbfa:	48 83 c4 18          	add    $0x18,%rsp
   2fbfe:	5b                   	pop    %rbx
   2fbff:	5d                   	pop    %rbp
   2fc00:	c3                   	retq   
   2fc01:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2fc06:	e8 55 f4 ff ff       	callq  2f060 <cpGetFeatures>
   2fc0b:	e9 df fe ff ff       	jmpq   2faef <owncpSetCpuFeaturesAndIdx+0x2f>
   2fc10:	f6 05 dd 74 02 00 02 	testb  $0x2,0x274dd(%rip)        # 570f4 <cpFeatures+0x4>
   2fc17:	0f 84 fd fe ff ff    	je     2fb1a <owncpSetCpuFeaturesAndIdx+0x5a>
   2fc1d:	c7 45 00 06 00 00 00 	movl   $0x6,0x0(%rbp)
   2fc24:	48 89 da             	mov    %rbx,%rdx
   2fc27:	81 e2 df 81 30 07    	and    $0x73081df,%edx
   2fc2d:	48 81 fa df 81 30 07 	cmp    $0x73081df,%rdx
   2fc34:	74 31                	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fc36:	ba df 81 30 07       	mov    $0x73081df,%edx
   2fc3b:	b8 33 00 00 00       	mov    $0x33,%eax
   2fc40:	eb ae                	jmp    2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fc42:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%rbp)
   2fc49:	48 89 da             	mov    %rbx,%rdx
   2fc4c:	81 e2 df 00 00 00    	and    $0xdf,%edx
   2fc52:	48 81 fa df 00 00 00 	cmp    $0xdf,%rdx
   2fc59:	74 0c                	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fc5b:	ba df 00 00 00       	mov    $0xdf,%edx
   2fc60:	b8 33 00 00 00       	mov    $0x33,%eax
   2fc65:	eb 89                	jmp    2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fc67:	31 c0                	xor    %eax,%eax
   2fc69:	eb 85                	jmp    2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fc6b:	f6 c3 20             	test   $0x20,%bl
   2fc6e:	75 27                	jne    2fc97 <owncpSetCpuFeaturesAndIdx+0x1d7>
   2fc70:	f6 c3 10             	test   $0x10,%bl
   2fc73:	74 44                	je     2fcb9 <owncpSetCpuFeaturesAndIdx+0x1f9>
   2fc75:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   2fc7c:	48 89 da             	mov    %rbx,%rdx
   2fc7f:	83 e2 1f             	and    $0x1f,%edx
   2fc82:	48 83 fa 1f          	cmp    $0x1f,%rdx
   2fc86:	74 df                	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fc88:	ba 1f 00 00 00       	mov    $0x1f,%edx
   2fc8d:	b8 33 00 00 00       	mov    $0x33,%eax
   2fc92:	e9 59 ff ff ff       	jmpq   2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fc97:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   2fc9e:	48 89 da             	mov    %rbx,%rdx
   2fca1:	83 e2 3f             	and    $0x3f,%edx
   2fca4:	48 83 fa 3f          	cmp    $0x3f,%rdx
   2fca8:	74 bd                	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fcaa:	ba 3f 00 00 00       	mov    $0x3f,%edx
   2fcaf:	b8 33 00 00 00       	mov    $0x33,%eax
   2fcb4:	e9 37 ff ff ff       	jmpq   2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fcb9:	f6 c3 08             	test   $0x8,%bl
   2fcbc:	75 24                	jne    2fce2 <owncpSetCpuFeaturesAndIdx+0x222>
   2fcbe:	f6 c3 04             	test   $0x4,%bl
   2fcc1:	75 3e                	jne    2fd01 <owncpSetCpuFeaturesAndIdx+0x241>
   2fcc3:	48 89 d8             	mov    %rbx,%rax
   2fcc6:	83 e0 02             	and    $0x2,%eax
   2fcc9:	48 83 f8 01          	cmp    $0x1,%rax
   2fccd:	48 19 d2             	sbb    %rdx,%rdx
   2fcd0:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
   2fcd4:	48 83 c2 03          	add    $0x3,%rdx
   2fcd8:	b8 24 00 00 00       	mov    $0x24,%eax
   2fcdd:	e9 0e ff ff ff       	jmpq   2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fce2:	48 89 da             	mov    %rbx,%rdx
   2fce5:	83 e2 0f             	and    $0xf,%edx
   2fce8:	48 83 fa 0f          	cmp    $0xf,%rdx
   2fcec:	0f 84 75 ff ff ff    	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fcf2:	ba 0f 00 00 00       	mov    $0xf,%edx
   2fcf7:	b8 33 00 00 00       	mov    $0x33,%eax
   2fcfc:	e9 ef fe ff ff       	jmpq   2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>
   2fd01:	48 89 da             	mov    %rbx,%rdx
   2fd04:	83 e2 07             	and    $0x7,%edx
   2fd07:	48 83 fa 07          	cmp    $0x7,%rdx
   2fd0b:	0f 84 56 ff ff ff    	je     2fc67 <owncpSetCpuFeaturesAndIdx+0x1a7>
   2fd11:	ba 07 00 00 00       	mov    $0x7,%edx
   2fd16:	b8 33 00 00 00       	mov    $0x33,%eax
   2fd1b:	e9 d0 fe ff ff       	jmpq   2fbf0 <owncpSetCpuFeaturesAndIdx+0x130>

000000000002fd20 <ippcpGetStatusString>:
   2fd20:	b9 28 ff ff ff       	mov    $0xffffff28,%ecx
   2fd25:	48 8d 15 b4 6c 01 00 	lea    0x16cb4(%rip),%rdx        # 469e0 <ippcpMsg>
   2fd2c:	31 c0                	xor    %eax,%eax
   2fd2e:	eb 0c                	jmp    2fd3c <ippcpGetStatusString+0x1c>
   2fd30:	83 c0 01             	add    $0x1,%eax
   2fd33:	48 83 c2 10          	add    $0x10,%rdx
   2fd37:	83 f8 29             	cmp    $0x29,%eax
   2fd3a:	74 15                	je     2fd51 <ippcpGetStatusString+0x31>
   2fd3c:	39 3a                	cmp    %edi,(%rdx)
   2fd3e:	75 f0                	jne    2fd30 <ippcpGetStatusString+0x10>
   2fd40:	48 c1 e0 04          	shl    $0x4,%rax
   2fd44:	48 8d 15 95 6c 01 00 	lea    0x16c95(%rip),%rdx        # 469e0 <ippcpMsg>
   2fd4b:	48 8b 44 02 08       	mov    0x8(%rdx,%rax,1),%rax
   2fd50:	c3                   	retq   
   2fd51:	89 cf                	mov    %ecx,%edi
   2fd53:	eb d0                	jmp    2fd25 <ippcpGetStatusString+0x5>
   2fd55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fd5c:	00 00 00 00 

000000000002fd60 <ippcpGetCpuClocks>:
   2fd60:	e9 1b 01 00 00       	jmpq   2fe80 <cp_get_pentium_counter>
   2fd65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fd6c:	00 00 00 
   2fd6f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fd76:	00 00 00 
   2fd79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002fd80 <cpGetReg>:
   2fd80:	53                   	push   %rbx
   2fd81:	4c 63 ce             	movslq %esi,%r9
   2fd84:	4c 63 d2             	movslq %edx,%r10
   2fd87:	49 89 fb             	mov    %rdi,%r11
   2fd8a:	4c 89 c8             	mov    %r9,%rax
   2fd8d:	4c 89 d1             	mov    %r10,%rcx
   2fd90:	31 db                	xor    %ebx,%ebx
   2fd92:	31 d2                	xor    %edx,%edx
   2fd94:	0f a2                	cpuid  
   2fd96:	41 89 03             	mov    %eax,(%r11)
   2fd99:	41 89 5b 04          	mov    %ebx,0x4(%r11)
   2fd9d:	41 89 4b 08          	mov    %ecx,0x8(%r11)
   2fda1:	41 89 53 0c          	mov    %edx,0xc(%r11)
   2fda5:	5b                   	pop    %rbx
   2fda6:	c3                   	retq   
   2fda7:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fdae:	00 00 00 00 
   2fdb2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fdb9:	00 00 00 00 
   2fdbd:	0f 1f 00             	nopl   (%rax)

000000000002fdc0 <cp_is_avx_extension>:
   2fdc0:	53                   	push   %rbx
   2fdc1:	b8 01 00 00 00       	mov    $0x1,%eax
   2fdc6:	0f a2                	cpuid  
   2fdc8:	31 c0                	xor    %eax,%eax
   2fdca:	81 e1 00 00 00 18    	and    $0x18000000,%ecx
   2fdd0:	81 f9 00 00 00 18    	cmp    $0x18000000,%ecx
   2fdd6:	75 16                	jne    2fdee <cp_is_avx_extension+0x2e>
   2fdd8:	31 c9                	xor    %ecx,%ecx
   2fdda:	0f 01 d0             	xgetbv 
   2fddd:	89 c1                	mov    %eax,%ecx
   2fddf:	31 c0                	xor    %eax,%eax
   2fde1:	83 e1 06             	and    $0x6,%ecx
   2fde4:	83 f9 06             	cmp    $0x6,%ecx
   2fde7:	75 05                	jne    2fdee <cp_is_avx_extension+0x2e>
   2fde9:	b8 01 00 00 00       	mov    $0x1,%eax
   2fdee:	5b                   	pop    %rbx
   2fdef:	c3                   	retq   
   2fdf0:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fdf7:	00 00 00 00 
   2fdfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002fe00 <cp_is_avx512_extension>:
   2fe00:	53                   	push   %rbx
   2fe01:	b8 01 00 00 00       	mov    $0x1,%eax
   2fe06:	0f a2                	cpuid  
   2fe08:	31 c0                	xor    %eax,%eax
   2fe0a:	81 e1 00 00 00 08    	and    $0x8000000,%ecx
   2fe10:	81 f9 00 00 00 08    	cmp    $0x8000000,%ecx
   2fe16:	75 1c                	jne    2fe34 <cp_is_avx512_extension+0x34>
   2fe18:	31 c9                	xor    %ecx,%ecx
   2fe1a:	0f 01 d0             	xgetbv 
   2fe1d:	89 c1                	mov    %eax,%ecx
   2fe1f:	31 c0                	xor    %eax,%eax
   2fe21:	81 e1 e0 00 00 00    	and    $0xe0,%ecx
   2fe27:	81 f9 e0 00 00 00    	cmp    $0xe0,%ecx
   2fe2d:	75 05                	jne    2fe34 <cp_is_avx512_extension+0x34>
   2fe2f:	b8 01 00 00 00       	mov    $0x1,%eax
   2fe34:	5b                   	pop    %rbx
   2fe35:	c3                   	retq   
   2fe36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fe3d:	00 00 00 

000000000002fe40 <cp_issue_avx512_instruction>:
   2fe40:	62 f1 7d 48 ef c0    	vpxord %zmm0,%zmm0,%zmm0
   2fe46:	31 c0                	xor    %eax,%eax
   2fe48:	c3                   	retq   
   2fe49:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fe50:	00 00 00 00 
   2fe54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fe5b:	00 00 00 00 
   2fe5f:	90                   	nop

000000000002fe60 <ippcpSafeInit>:
   2fe60:	51                   	push   %rcx
   2fe61:	52                   	push   %rdx
   2fe62:	57                   	push   %rdi
   2fe63:	56                   	push   %rsi
   2fe64:	41 50                	push   %r8
   2fe66:	41 51                	push   %r9
   2fe68:	e8 33 f8 ff ff       	callq  2f6a0 <ippcpInit>
   2fe6d:	41 59                	pop    %r9
   2fe6f:	41 58                	pop    %r8
   2fe71:	5e                   	pop    %rsi
   2fe72:	5f                   	pop    %rdi
   2fe73:	5a                   	pop    %rdx
   2fe74:	59                   	pop    %rcx
   2fe75:	c3                   	retq   
   2fe76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fe7d:	00 00 00 

000000000002fe80 <cp_get_pentium_counter>:
   2fe80:	0f 31                	rdtsc  
   2fe82:	48 c1 e2 20          	shl    $0x20,%rdx
   2fe86:	48 09 d0             	or     %rdx,%rax
   2fe89:	c3                   	retq   
   2fe8a:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fe91:	00 00 00 00 
   2fe95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fe9c:	00 00 00 00 

000000000002fea0 <cpStartTscp>:
   2fea0:	53                   	push   %rbx
   2fea1:	48 31 c0             	xor    %rax,%rax
   2fea4:	0f a2                	cpuid  
   2fea6:	5b                   	pop    %rbx
   2fea7:	0f 01 f9             	rdtscp 
   2feaa:	48 c1 e2 20          	shl    $0x20,%rdx
   2feae:	48 09 d0             	or     %rdx,%rax
   2feb1:	c3                   	retq   
   2feb2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2feb9:	00 00 00 00 
   2febd:	0f 1f 00             	nopl   (%rax)

000000000002fec0 <cpStopTscp>:
   2fec0:	0f 01 f9             	rdtscp 
   2fec3:	48 c1 e2 20          	shl    $0x20,%rdx
   2fec7:	48 09 d0             	or     %rdx,%rax
   2feca:	50                   	push   %rax
   2fecb:	53                   	push   %rbx
   2fecc:	48 31 c0             	xor    %rax,%rax
   2fecf:	0f a2                	cpuid  
   2fed1:	5b                   	pop    %rbx
   2fed2:	58                   	pop    %rax
   2fed3:	c3                   	retq   
   2fed4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fedb:	00 00 00 00 
   2fedf:	90                   	nop

000000000002fee0 <cpStartTsc>:
   2fee0:	53                   	push   %rbx
   2fee1:	48 31 c0             	xor    %rax,%rax
   2fee4:	0f a2                	cpuid  
   2fee6:	5b                   	pop    %rbx
   2fee7:	0f 31                	rdtsc  
   2fee9:	48 c1 e2 20          	shl    $0x20,%rdx
   2feed:	48 09 d0             	or     %rdx,%rax
   2fef0:	c3                   	retq   
   2fef1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fef8:	00 00 00 00 
   2fefc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002ff00 <cpStopTsc>:
   2ff00:	0f 31                	rdtsc  
   2ff02:	48 c1 e2 20          	shl    $0x20,%rdx
   2ff06:	48 09 d0             	or     %rdx,%rax
   2ff09:	50                   	push   %rax
   2ff0a:	53                   	push   %rbx
   2ff0b:	48 31 c0             	xor    %rax,%rax
   2ff0e:	0f a2                	cpuid  
   2ff10:	5b                   	pop    %rbx
   2ff11:	58                   	pop    %rax
   2ff12:	c3                   	retq   
   2ff13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2ff1a:	00 00 00 00 
   2ff1e:	66 90                	xchg   %ax,%ax

000000000002ff20 <cpGetCacheSize>:
   2ff20:	53                   	push   %rbx
   2ff21:	55                   	push   %rbp
   2ff22:	48 83 ec 18          	sub    $0x18,%rsp
   2ff26:	48 89 e5             	mov    %rsp,%rbp
   2ff29:	31 f6                	xor    %esi,%esi
   2ff2b:	b8 02 00 00 00       	mov    $0x2,%eax
   2ff30:	0f a2                	cpuid  
   2ff32:	3c 01                	cmp    $0x1,%al
   2ff34:	0f 85 88 00 00 00    	jne    2ffc2 <cpGetCacheSize+0xa2>
   2ff3a:	a9 00 00 00 80       	test   $0x80000000,%eax
   2ff3f:	74 02                	je     2ff43 <cpGetCacheSize+0x23>
   2ff41:	31 c0                	xor    %eax,%eax
   2ff43:	f7 c3 00 00 00 80    	test   $0x80000000,%ebx
   2ff49:	74 02                	je     2ff4d <cpGetCacheSize+0x2d>
   2ff4b:	31 db                	xor    %ebx,%ebx
   2ff4d:	f7 c1 00 00 00 80    	test   $0x80000000,%ecx
   2ff53:	74 02                	je     2ff57 <cpGetCacheSize+0x37>
   2ff55:	31 c9                	xor    %ecx,%ecx
   2ff57:	f7 c2 00 00 00 80    	test   $0x80000000,%edx
   2ff5d:	74 02                	je     2ff61 <cpGetCacheSize+0x41>
   2ff5f:	31 d2                	xor    %edx,%edx
   2ff61:	85 c0                	test   %eax,%eax
   2ff63:	74 0a                	je     2ff6f <cpGetCacheSize+0x4f>
   2ff65:	89 45 00             	mov    %eax,0x0(%rbp)
   2ff68:	48 83 c5 04          	add    $0x4,%rbp
   2ff6c:	83 c6 03             	add    $0x3,%esi
   2ff6f:	85 db                	test   %ebx,%ebx
   2ff71:	74 0a                	je     2ff7d <cpGetCacheSize+0x5d>
   2ff73:	89 5d 00             	mov    %ebx,0x0(%rbp)
   2ff76:	48 83 c5 04          	add    $0x4,%rbp
   2ff7a:	83 c6 04             	add    $0x4,%esi
   2ff7d:	85 c9                	test   %ecx,%ecx
   2ff7f:	74 0a                	je     2ff8b <cpGetCacheSize+0x6b>
   2ff81:	89 4d 00             	mov    %ecx,0x0(%rbp)
   2ff84:	48 83 c5 04          	add    $0x4,%rbp
   2ff88:	83 c6 04             	add    $0x4,%esi
   2ff8b:	85 d2                	test   %edx,%edx
   2ff8d:	74 06                	je     2ff95 <cpGetCacheSize+0x75>
   2ff8f:	89 55 00             	mov    %edx,0x0(%rbp)
   2ff92:	83 c6 04             	add    $0x4,%esi
   2ff95:	85 f6                	test   %esi,%esi
   2ff97:	74 29                	je     2ffc2 <cpGetCacheSize+0xa2>
   2ff99:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ff9e:	31 d2                	xor    %edx,%edx
   2ffa0:	03 17                	add    (%rdi),%edx
   2ffa2:	74 14                	je     2ffb8 <cpGetCacheSize+0x98>
   2ffa4:	48 83 c7 08          	add    $0x8,%rdi
   2ffa8:	89 f1                	mov    %esi,%ecx
   2ffaa:	3a 14 0c             	cmp    (%rsp,%rcx,1),%dl
   2ffad:	74 06                	je     2ffb5 <cpGetCacheSize+0x95>
   2ffaf:	ff c9                	dec    %ecx
   2ffb1:	75 f7                	jne    2ffaa <cpGetCacheSize+0x8a>
   2ffb3:	eb e9                	jmp    2ff9e <cpGetCacheSize+0x7e>
   2ffb5:	8b 47 fc             	mov    -0x4(%rdi),%eax
   2ffb8:	48 83 c4 18          	add    $0x18,%rsp
   2ffbc:	c5 f8 77             	vzeroupper 
   2ffbf:	5d                   	pop    %rbp
   2ffc0:	5b                   	pop    %rbx
   2ffc1:	c3                   	retq   
   2ffc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ffc7:	eb ef                	jmp    2ffb8 <cpGetCacheSize+0x98>
   2ffc9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ffd0:	00 00 00 
   2ffd3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ffda:	00 00 00 
   2ffdd:	0f 1f 00             	nopl   (%rax)

000000000002ffe0 <y8_ippsAES_CMACFinal>:
   2ffe0:	41 56                	push   %r14
   2ffe2:	41 55                	push   %r13
   2ffe4:	41 54                	push   %r12
   2ffe6:	55                   	push   %rbp
   2ffe7:	53                   	push   %rbx
   2ffe8:	48 83 ec 20          	sub    $0x20,%rsp
   2ffec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2fff3:	00 00 
   2fff5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2fffa:	31 c0                	xor    %eax,%eax
   2fffc:	48 85 d2             	test   %rdx,%rdx
   2ffff:	0f 84 35 02 00 00    	je     3023a <y8_ippsAES_CMACFinal+0x25a>
   30005:	48 89 d5             	mov    %rdx,%rbp
   30008:	49 89 fd             	mov    %rdi,%r13
   3000b:	48 f7 dd             	neg    %rbp
   3000e:	83 e5 0f             	and    $0xf,%ebp
   30011:	48 01 d5             	add    %rdx,%rbp
   30014:	48 85 ff             	test   %rdi,%rdi
   30017:	0f 84 1d 02 00 00    	je     3023a <y8_ippsAES_CMACFinal+0x25a>
   3001d:	44 8d 76 ff          	lea    -0x1(%rsi),%r14d
   30021:	41 89 f4             	mov    %esi,%r12d
   30024:	41 83 fe 0f          	cmp    $0xf,%r14d
   30028:	0f 87 05 02 00 00    	ja     30233 <y8_ippsAES_CMACFinal+0x253>
   3002e:	48 89 e3             	mov    %rsp,%rbx
   30031:	48 89 ea             	mov    %rbp,%rdx
   30034:	be 10 00 00 00       	mov    $0x10,%esi
   30039:	48 89 df             	mov    %rbx,%rdi
   3003c:	e8 3f 02 00 00       	callq  30280 <y8_ippsAES_CMACGetTag>
   30041:	85 c0                	test   %eax,%eax
   30043:	0f 85 c6 01 00 00    	jne    3020f <y8_ippsAES_CMACFinal+0x22f>
   30049:	45 85 e4             	test   %r12d,%r12d
   3004c:	0f 8e ae 01 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   30052:	41 83 fe 0e          	cmp    $0xe,%r14d
   30056:	0f 86 d0 01 00 00    	jbe    3022c <y8_ippsAES_CMACFinal+0x24c>
   3005c:	44 89 e2             	mov    %r12d,%edx
   3005f:	48 89 df             	mov    %rbx,%rdi
   30062:	4c 89 e9             	mov    %r13,%rcx
   30065:	c1 ea 04             	shr    $0x4,%edx
   30068:	48 c1 e2 04          	shl    $0x4,%rdx
   3006c:	4c 01 ea             	add    %r13,%rdx
   3006f:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   30076:	00 00 00 00 
   3007a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30080:	66 0f 6f 0f          	movdqa (%rdi),%xmm1
   30084:	48 83 c1 10          	add    $0x10,%rcx
   30088:	48 83 c7 10          	add    $0x10,%rdi
   3008c:	0f 11 49 f0          	movups %xmm1,-0x10(%rcx)
   30090:	48 39 d1             	cmp    %rdx,%rcx
   30093:	75 eb                	jne    30080 <y8_ippsAES_CMACFinal+0xa0>
   30095:	44 89 e2             	mov    %r12d,%edx
   30098:	83 e2 f0             	and    $0xfffffff0,%edx
   3009b:	41 39 d4             	cmp    %edx,%r12d
   3009e:	0f 84 5c 01 00 00    	je     30200 <y8_ippsAES_CMACFinal+0x220>
   300a4:	48 63 ca             	movslq %edx,%rcx
   300a7:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   300ab:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   300b0:	8d 4a 01             	lea    0x1(%rdx),%ecx
   300b3:	41 39 cc             	cmp    %ecx,%r12d
   300b6:	0f 8e 44 01 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   300bc:	48 63 c9             	movslq %ecx,%rcx
   300bf:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   300c3:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   300c8:	8d 4a 02             	lea    0x2(%rdx),%ecx
   300cb:	41 39 cc             	cmp    %ecx,%r12d
   300ce:	0f 8e 2c 01 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   300d4:	48 63 c9             	movslq %ecx,%rcx
   300d7:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   300db:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   300e0:	8d 4a 03             	lea    0x3(%rdx),%ecx
   300e3:	41 39 cc             	cmp    %ecx,%r12d
   300e6:	0f 8e 14 01 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   300ec:	48 63 c9             	movslq %ecx,%rcx
   300ef:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   300f3:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   300f8:	8d 4a 04             	lea    0x4(%rdx),%ecx
   300fb:	41 39 cc             	cmp    %ecx,%r12d
   300fe:	0f 8e fc 00 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   30104:	48 63 c9             	movslq %ecx,%rcx
   30107:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   3010b:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   30110:	8d 4a 05             	lea    0x5(%rdx),%ecx
   30113:	41 39 cc             	cmp    %ecx,%r12d
   30116:	0f 8e e4 00 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   3011c:	48 63 c9             	movslq %ecx,%rcx
   3011f:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   30123:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   30128:	8d 4a 06             	lea    0x6(%rdx),%ecx
   3012b:	41 39 cc             	cmp    %ecx,%r12d
   3012e:	0f 8e cc 00 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   30134:	48 63 c9             	movslq %ecx,%rcx
   30137:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   3013b:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   30140:	8d 4a 07             	lea    0x7(%rdx),%ecx
   30143:	41 39 cc             	cmp    %ecx,%r12d
   30146:	0f 8e b4 00 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   3014c:	48 63 c9             	movslq %ecx,%rcx
   3014f:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   30153:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   30158:	8d 4a 08             	lea    0x8(%rdx),%ecx
   3015b:	41 39 cc             	cmp    %ecx,%r12d
   3015e:	0f 8e 9c 00 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   30164:	48 63 c9             	movslq %ecx,%rcx
   30167:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   3016b:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   30170:	8d 4a 09             	lea    0x9(%rdx),%ecx
   30173:	41 39 cc             	cmp    %ecx,%r12d
   30176:	0f 8e 84 00 00 00    	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   3017c:	48 63 c9             	movslq %ecx,%rcx
   3017f:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   30183:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   30188:	8d 4a 0a             	lea    0xa(%rdx),%ecx
   3018b:	41 39 cc             	cmp    %ecx,%r12d
   3018e:	7e 70                	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   30190:	48 63 c9             	movslq %ecx,%rcx
   30193:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   30197:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   3019c:	8d 4a 0b             	lea    0xb(%rdx),%ecx
   3019f:	41 39 cc             	cmp    %ecx,%r12d
   301a2:	7e 5c                	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   301a4:	48 63 c9             	movslq %ecx,%rcx
   301a7:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   301ab:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   301b0:	8d 4a 0c             	lea    0xc(%rdx),%ecx
   301b3:	41 39 cc             	cmp    %ecx,%r12d
   301b6:	7e 48                	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   301b8:	48 63 c9             	movslq %ecx,%rcx
   301bb:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   301bf:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   301c4:	8d 4a 0d             	lea    0xd(%rdx),%ecx
   301c7:	41 39 cc             	cmp    %ecx,%r12d
   301ca:	7e 34                	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   301cc:	48 63 c9             	movslq %ecx,%rcx
   301cf:	83 c2 0e             	add    $0xe,%edx
   301d2:	0f b6 34 0c          	movzbl (%rsp,%rcx,1),%esi
   301d6:	41 88 74 0d 00       	mov    %sil,0x0(%r13,%rcx,1)
   301db:	41 39 d4             	cmp    %edx,%r12d
   301de:	7e 20                	jle    30200 <y8_ippsAES_CMACFinal+0x220>
   301e0:	48 63 d2             	movslq %edx,%rdx
   301e3:	0f b6 0c 14          	movzbl (%rsp,%rdx,1),%ecx
   301e7:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
   301ec:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   301f3:	00 00 00 00 
   301f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   301fe:	00 00 
   30200:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30204:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%rbp)
   3020b:	0f 11 45 40          	movups %xmm0,0x40(%rbp)
   3020f:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   30214:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   3021b:	00 00 
   3021d:	75 22                	jne    30241 <y8_ippsAES_CMACFinal+0x261>
   3021f:	48 83 c4 20          	add    $0x20,%rsp
   30223:	5b                   	pop    %rbx
   30224:	5d                   	pop    %rbp
   30225:	41 5c                	pop    %r12
   30227:	41 5d                	pop    %r13
   30229:	41 5e                	pop    %r14
   3022b:	c3                   	retq   
   3022c:	31 d2                	xor    %edx,%edx
   3022e:	e9 71 fe ff ff       	jmpq   300a4 <y8_ippsAES_CMACFinal+0xc4>
   30233:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   30238:	eb d5                	jmp    3020f <y8_ippsAES_CMACFinal+0x22f>
   3023a:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   3023f:	eb ce                	jmp    3020f <y8_ippsAES_CMACFinal+0x22f>
   30241:	e8 46 b2 fd ff       	callq  b48c <__stack_chk_fail>
   30246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3024d:	00 00 00 
   30250:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30257:	00 00 00 
   3025a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000030260 <y8_ippsAES_CMACGetSize>:
   30260:	48 85 ff             	test   %rdi,%rdi
   30263:	74 09                	je     3026e <y8_ippsAES_CMACGetSize+0xe>
   30265:	c7 07 9f 02 00 00    	movl   $0x29f,(%rdi)
   3026b:	31 c0                	xor    %eax,%eax
   3026d:	c3                   	retq   
   3026e:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   30273:	c3                   	retq   
   30274:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3027b:	00 00 00 
   3027e:	66 90                	xchg   %ax,%ax

0000000000030280 <y8_ippsAES_CMACGetTag>:
   30280:	41 55                	push   %r13
   30282:	41 54                	push   %r12
   30284:	55                   	push   %rbp
   30285:	53                   	push   %rbx
   30286:	48 83 ec 38          	sub    $0x38,%rsp
   3028a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30291:	00 00 
   30293:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   30298:	31 c0                	xor    %eax,%eax
   3029a:	48 85 d2             	test   %rdx,%rdx
   3029d:	0f 84 17 04 00 00    	je     306ba <y8_ippsAES_CMACGetTag+0x43a>
   302a3:	48 89 d0             	mov    %rdx,%rax
   302a6:	48 f7 d8             	neg    %rax
   302a9:	83 e0 0f             	and    $0xf,%eax
   302ac:	48 01 c2             	add    %rax,%rdx
   302af:	81 3a 43 41 4d 43    	cmpl   $0x434d4143,(%rdx)
   302b5:	0f 85 f1 03 00 00    	jne    306ac <y8_ippsAES_CMACGetTag+0x42c>
   302bb:	49 89 fc             	mov    %rdi,%r12
   302be:	48 85 ff             	test   %rdi,%rdi
   302c1:	0f 84 f3 03 00 00    	je     306ba <y8_ippsAES_CMACGetTag+0x43a>
   302c7:	44 8d 6e ff          	lea    -0x1(%rsi),%r13d
   302cb:	89 f5                	mov    %esi,%ebp
   302cd:	41 83 fd 0f          	cmp    $0xf,%r13d
   302d1:	0f 87 dc 03 00 00    	ja     306b3 <y8_ippsAES_CMACGetTag+0x433>
   302d7:	4c 63 42 04          	movslq 0x4(%rdx),%r8
   302db:	66 0f 6f 5a 30       	movdqa 0x30(%rdx),%xmm3
   302e0:	4c 8b 4a 60          	mov    0x60(%rdx),%r9
   302e4:	48 8b 42 30          	mov    0x30(%rdx),%rax
   302e8:	0f 29 1c 24          	movaps %xmm3,(%rsp)
   302ec:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
   302f0:	f3 0f 7e 4a 40       	movq   0x40(%rdx),%xmm1
   302f5:	48 8b 7a 48          	mov    0x48(%rdx),%rdi
   302f9:	41 83 f8 10          	cmp    $0x10,%r8d
   302fd:	0f 84 7d 03 00 00    	je     30680 <y8_ippsAES_CMACGetTag+0x400>
   30303:	b9 10 00 00 00       	mov    $0x10,%ecx
   30308:	44 29 c1             	sub    %r8d,%ecx
   3030b:	85 c9                	test   %ecx,%ecx
   3030d:	0f 8e 6d 01 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30313:	8d 41 ff             	lea    -0x1(%rcx),%eax
   30316:	83 f8 0e             	cmp    $0xe,%eax
   30319:	0f 86 86 03 00 00    	jbe    306a5 <y8_ippsAES_CMACGetTag+0x425>
   3031f:	4a 8d 04 04          	lea    (%rsp,%r8,1),%rax
   30323:	89 ce                	mov    %ecx,%esi
   30325:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30329:	c1 ee 04             	shr    $0x4,%esi
   3032c:	48 c1 e6 04          	shl    $0x4,%rsi
   30330:	48 01 c6             	add    %rax,%rsi
   30333:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3033a:	00 00 00 00 
   3033e:	66 90                	xchg   %ax,%ax
   30340:	0f 11 00             	movups %xmm0,(%rax)
   30343:	48 83 c0 10          	add    $0x10,%rax
   30347:	48 39 f0             	cmp    %rsi,%rax
   3034a:	75 f4                	jne    30340 <y8_ippsAES_CMACGetTag+0xc0>
   3034c:	89 c8                	mov    %ecx,%eax
   3034e:	83 e0 f0             	and    $0xfffffff0,%eax
   30351:	39 c1                	cmp    %eax,%ecx
   30353:	0f 84 27 01 00 00    	je     30480 <y8_ippsAES_CMACGetTag+0x200>
   30359:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
   3035e:	4c 63 d0             	movslq %eax,%r10
   30361:	4a 8d 34 03          	lea    (%rbx,%r8,1),%rsi
   30365:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   3036b:	44 8d 50 01          	lea    0x1(%rax),%r10d
   3036f:	44 39 d1             	cmp    %r10d,%ecx
   30372:	0f 8e 08 01 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30378:	4d 63 d2             	movslq %r10d,%r10
   3037b:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   30381:	44 8d 50 02          	lea    0x2(%rax),%r10d
   30385:	44 39 d1             	cmp    %r10d,%ecx
   30388:	0f 8e f2 00 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   3038e:	4d 63 d2             	movslq %r10d,%r10
   30391:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   30397:	44 8d 50 03          	lea    0x3(%rax),%r10d
   3039b:	44 39 d1             	cmp    %r10d,%ecx
   3039e:	0f 8e dc 00 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   303a4:	4d 63 d2             	movslq %r10d,%r10
   303a7:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   303ad:	44 8d 50 04          	lea    0x4(%rax),%r10d
   303b1:	44 39 d1             	cmp    %r10d,%ecx
   303b4:	0f 8e c6 00 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   303ba:	4d 63 d2             	movslq %r10d,%r10
   303bd:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   303c3:	44 8d 50 05          	lea    0x5(%rax),%r10d
   303c7:	44 39 d1             	cmp    %r10d,%ecx
   303ca:	0f 8e b0 00 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   303d0:	4d 63 d2             	movslq %r10d,%r10
   303d3:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   303d9:	44 8d 50 06          	lea    0x6(%rax),%r10d
   303dd:	44 39 d1             	cmp    %r10d,%ecx
   303e0:	0f 8e 9a 00 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   303e6:	4d 63 d2             	movslq %r10d,%r10
   303e9:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   303ef:	44 8d 50 07          	lea    0x7(%rax),%r10d
   303f3:	44 39 d1             	cmp    %r10d,%ecx
   303f6:	0f 8e 84 00 00 00    	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   303fc:	4d 63 d2             	movslq %r10d,%r10
   303ff:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   30405:	44 8d 50 08          	lea    0x8(%rax),%r10d
   30409:	44 39 d1             	cmp    %r10d,%ecx
   3040c:	7e 72                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   3040e:	4d 63 d2             	movslq %r10d,%r10
   30411:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   30417:	44 8d 50 09          	lea    0x9(%rax),%r10d
   3041b:	44 39 d1             	cmp    %r10d,%ecx
   3041e:	7e 60                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30420:	4d 63 d2             	movslq %r10d,%r10
   30423:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   30429:	44 8d 50 0a          	lea    0xa(%rax),%r10d
   3042d:	44 39 d1             	cmp    %r10d,%ecx
   30430:	7e 4e                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30432:	4d 63 d2             	movslq %r10d,%r10
   30435:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   3043b:	44 8d 50 0b          	lea    0xb(%rax),%r10d
   3043f:	44 39 d1             	cmp    %r10d,%ecx
   30442:	7e 3c                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30444:	4d 63 d2             	movslq %r10d,%r10
   30447:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   3044d:	44 8d 50 0c          	lea    0xc(%rax),%r10d
   30451:	44 39 d1             	cmp    %r10d,%ecx
   30454:	7e 2a                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30456:	4d 63 d2             	movslq %r10d,%r10
   30459:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   3045f:	44 8d 50 0d          	lea    0xd(%rax),%r10d
   30463:	44 39 d1             	cmp    %r10d,%ecx
   30466:	7e 18                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30468:	4d 63 d2             	movslq %r10d,%r10
   3046b:	83 c0 0e             	add    $0xe,%eax
   3046e:	41 c6 44 32 d0 00    	movb   $0x0,-0x30(%r10,%rsi,1)
   30474:	39 c1                	cmp    %eax,%ecx
   30476:	7e 08                	jle    30480 <y8_ippsAES_CMACGetTag+0x200>
   30478:	48 98                	cltq   
   3047a:	c6 44 30 d0 00       	movb   $0x0,-0x30(%rax,%rsi,1)
   3047f:	90                   	nop
   30480:	42 c6 04 04 80       	movb   $0x80,(%rsp,%r8,1)
   30485:	48 8b 04 24          	mov    (%rsp),%rax
   30489:	48 33 42 20          	xor    0x20(%rdx),%rax
   3048d:	66 48 0f 6e c0       	movq   %rax,%xmm0
   30492:	48 89 04 24          	mov    %rax,(%rsp)
   30496:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3049b:	48 33 42 28          	xor    0x28(%rdx),%rax
   3049f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   304a4:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   304a9:	66 48 0f 3a 22 cf 01 	pinsrq $0x1,%rdi,%xmm1
   304b0:	45 31 c0             	xor    %r8d,%r8d
   304b3:	66 48 0f 3a 22 c0 01 	pinsrq $0x1,%rax,%xmm0
   304ba:	48 8d 8a 80 00 00 00 	lea    0x80(%rdx),%rcx
   304c1:	66 0f ef c1          	pxor   %xmm1,%xmm0
   304c5:	8b 52 5c             	mov    0x5c(%rdx),%edx
   304c8:	48 89 de             	mov    %rbx,%rsi
   304cb:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   304d0:	48 89 df             	mov    %rbx,%rdi
   304d3:	41 ff d1             	callq  *%r9
   304d6:	85 ed                	test   %ebp,%ebp
   304d8:	0f 8e 82 01 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   304de:	41 83 fd 0e          	cmp    $0xe,%r13d
   304e2:	0f 86 b6 01 00 00    	jbe    3069e <y8_ippsAES_CMACGetTag+0x41e>
   304e8:	89 ea                	mov    %ebp,%edx
   304ea:	48 89 de             	mov    %rbx,%rsi
   304ed:	4c 89 e0             	mov    %r12,%rax
   304f0:	c1 ea 04             	shr    $0x4,%edx
   304f3:	48 c1 e2 04          	shl    $0x4,%rdx
   304f7:	4c 01 e2             	add    %r12,%rdx
   304fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30500:	66 0f 6f 16          	movdqa (%rsi),%xmm2
   30504:	48 83 c0 10          	add    $0x10,%rax
   30508:	48 83 c6 10          	add    $0x10,%rsi
   3050c:	0f 11 50 f0          	movups %xmm2,-0x10(%rax)
   30510:	48 39 d0             	cmp    %rdx,%rax
   30513:	75 eb                	jne    30500 <y8_ippsAES_CMACGetTag+0x280>
   30515:	89 e8                	mov    %ebp,%eax
   30517:	83 e0 f0             	and    $0xfffffff0,%eax
   3051a:	39 e8                	cmp    %ebp,%eax
   3051c:	0f 84 3e 01 00 00    	je     30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30522:	48 63 d0             	movslq %eax,%rdx
   30525:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   3052a:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   3052e:	8d 50 01             	lea    0x1(%rax),%edx
   30531:	39 d5                	cmp    %edx,%ebp
   30533:	0f 8e 27 01 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30539:	48 63 d2             	movslq %edx,%rdx
   3053c:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   30541:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   30545:	8d 50 02             	lea    0x2(%rax),%edx
   30548:	39 d5                	cmp    %edx,%ebp
   3054a:	0f 8e 10 01 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30550:	48 63 d2             	movslq %edx,%rdx
   30553:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   30558:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   3055c:	8d 50 03             	lea    0x3(%rax),%edx
   3055f:	39 d5                	cmp    %edx,%ebp
   30561:	0f 8e f9 00 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30567:	48 63 d2             	movslq %edx,%rdx
   3056a:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   3056f:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   30573:	8d 50 04             	lea    0x4(%rax),%edx
   30576:	39 d5                	cmp    %edx,%ebp
   30578:	0f 8e e2 00 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   3057e:	48 63 d2             	movslq %edx,%rdx
   30581:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   30586:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   3058a:	8d 50 05             	lea    0x5(%rax),%edx
   3058d:	39 d5                	cmp    %edx,%ebp
   3058f:	0f 8e cb 00 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30595:	48 63 d2             	movslq %edx,%rdx
   30598:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   3059d:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   305a1:	8d 50 06             	lea    0x6(%rax),%edx
   305a4:	39 d5                	cmp    %edx,%ebp
   305a6:	0f 8e b4 00 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   305ac:	48 63 d2             	movslq %edx,%rdx
   305af:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   305b4:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   305b8:	8d 50 07             	lea    0x7(%rax),%edx
   305bb:	39 d5                	cmp    %edx,%ebp
   305bd:	0f 8e 9d 00 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   305c3:	48 63 d2             	movslq %edx,%rdx
   305c6:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   305cb:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   305cf:	8d 50 08             	lea    0x8(%rax),%edx
   305d2:	39 d5                	cmp    %edx,%ebp
   305d4:	0f 8e 86 00 00 00    	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   305da:	48 63 d2             	movslq %edx,%rdx
   305dd:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   305e2:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   305e6:	8d 50 09             	lea    0x9(%rax),%edx
   305e9:	39 d5                	cmp    %edx,%ebp
   305eb:	7e 73                	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   305ed:	48 63 d2             	movslq %edx,%rdx
   305f0:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   305f5:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   305f9:	8d 50 0a             	lea    0xa(%rax),%edx
   305fc:	39 d5                	cmp    %edx,%ebp
   305fe:	7e 60                	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30600:	48 63 d2             	movslq %edx,%rdx
   30603:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   30608:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   3060c:	8d 50 0b             	lea    0xb(%rax),%edx
   3060f:	39 d5                	cmp    %edx,%ebp
   30611:	7e 4d                	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30613:	48 63 d2             	movslq %edx,%rdx
   30616:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   3061b:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   3061f:	8d 50 0c             	lea    0xc(%rax),%edx
   30622:	39 d5                	cmp    %edx,%ebp
   30624:	7e 3a                	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30626:	48 63 d2             	movslq %edx,%rdx
   30629:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   3062e:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   30632:	8d 50 0d             	lea    0xd(%rax),%edx
   30635:	39 d5                	cmp    %edx,%ebp
   30637:	7e 27                	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   30639:	48 63 d2             	movslq %edx,%rdx
   3063c:	83 c0 0e             	add    $0xe,%eax
   3063f:	0f b6 4c 14 10       	movzbl 0x10(%rsp,%rdx,1),%ecx
   30644:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   30648:	39 c5                	cmp    %eax,%ebp
   3064a:	7e 14                	jle    30660 <y8_ippsAES_CMACGetTag+0x3e0>
   3064c:	48 98                	cltq   
   3064e:	0f b6 54 04 10       	movzbl 0x10(%rsp,%rax,1),%edx
   30653:	41 88 14 04          	mov    %dl,(%r12,%rax,1)
   30657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3065e:	00 00 
   30660:	31 c0                	xor    %eax,%eax
   30662:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   30667:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   3066e:	00 00 
   30670:	75 4f                	jne    306c1 <y8_ippsAES_CMACGetTag+0x441>
   30672:	48 83 c4 38          	add    $0x38,%rsp
   30676:	5b                   	pop    %rbx
   30677:	5d                   	pop    %rbp
   30678:	41 5c                	pop    %r12
   3067a:	41 5d                	pop    %r13
   3067c:	c3                   	retq   
   3067d:	0f 1f 00             	nopl   (%rax)
   30680:	48 33 42 10          	xor    0x10(%rdx),%rax
   30684:	66 48 0f 6e c0       	movq   %rax,%xmm0
   30689:	48 89 04 24          	mov    %rax,(%rsp)
   3068d:	48 8b 42 18          	mov    0x18(%rdx),%rax
   30691:	48 31 c8             	xor    %rcx,%rax
   30694:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30699:	e9 06 fe ff ff       	jmpq   304a4 <y8_ippsAES_CMACGetTag+0x224>
   3069e:	31 c0                	xor    %eax,%eax
   306a0:	e9 7d fe ff ff       	jmpq   30522 <y8_ippsAES_CMACGetTag+0x2a2>
   306a5:	31 c0                	xor    %eax,%eax
   306a7:	e9 ad fc ff ff       	jmpq   30359 <y8_ippsAES_CMACGetTag+0xd9>
   306ac:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   306b1:	eb af                	jmp    30662 <y8_ippsAES_CMACGetTag+0x3e2>
   306b3:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   306b8:	eb a8                	jmp    30662 <y8_ippsAES_CMACGetTag+0x3e2>
   306ba:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   306bf:	eb a1                	jmp    30662 <y8_ippsAES_CMACGetTag+0x3e2>
   306c1:	e8 c6 ad fd ff       	callq  b48c <__stack_chk_fail>
   306c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   306cd:	00 00 00 
   306d0:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   306d7:	00 00 00 
   306da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000306e0 <y8_ippsAES_CMACInit>:
   306e0:	48 85 d2             	test   %rdx,%rdx
   306e3:	0f 84 a2 02 00 00    	je     3098b <y8_ippsAES_CMACInit+0x2ab>
   306e9:	81 f9 9e 02 00 00    	cmp    $0x29e,%ecx
   306ef:	0f 8e 90 02 00 00    	jle    30985 <y8_ippsAES_CMACInit+0x2a5>
   306f5:	41 57                	push   %r15
   306f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   306fb:	b9 48 02 00 00       	mov    $0x248,%ecx
   30700:	41 56                	push   %r14
   30702:	41 55                	push   %r13
   30704:	41 54                	push   %r12
   30706:	55                   	push   %rbp
   30707:	53                   	push   %rbx
   30708:	48 89 d3             	mov    %rdx,%rbx
   3070b:	48 f7 db             	neg    %rbx
   3070e:	48 83 ec 18          	sub    $0x18,%rsp
   30712:	83 e3 0f             	and    $0xf,%ebx
   30715:	48 01 d3             	add    %rdx,%rbx
   30718:	48 c7 03 43 41 4d 43 	movq   $0x434d4143,(%rbx)
   3071f:	48 8d 53 50          	lea    0x50(%rbx),%rdx
   30723:	0f 11 43 40          	movups %xmm0,0x40(%rbx)
   30727:	48 8d 6b 40          	lea    0x40(%rbx),%rbp
   3072b:	e8 30 08 00 00       	callq  30f60 <y8_ippsAESInit>
   30730:	85 c0                	test   %eax,%eax
   30732:	0f 85 3e 02 00 00    	jne    30976 <y8_ippsAES_CMACInit+0x296>
   30738:	45 31 c0             	xor    %r8d,%r8d
   3073b:	48 89 ef             	mov    %rbp,%rdi
   3073e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   30742:	8b 53 5c             	mov    0x5c(%rbx),%edx
   30745:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   3074c:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   30750:	ff 53 60             	callq  *0x60(%rbx)
   30753:	0f b6 53 1f          	movzbl 0x1f(%rbx),%edx
   30757:	0f b6 4b 1e          	movzbl 0x1e(%rbx),%ecx
   3075b:	44 0f b6 7b 10       	movzbl 0x10(%rbx),%r15d
   30760:	01 d2                	add    %edx,%edx
   30762:	88 53 1f             	mov    %dl,0x1f(%rbx)
   30765:	c1 ea 08             	shr    $0x8,%edx
   30768:	44 8d 34 4a          	lea    (%rdx,%rcx,2),%r14d
   3076c:	0f b6 4b 1d          	movzbl 0x1d(%rbx),%ecx
   30770:	44 89 f2             	mov    %r14d,%edx
   30773:	44 88 73 1e          	mov    %r14b,0x1e(%rbx)
   30777:	45 0f b6 f6          	movzbl %r14b,%r14d
   3077b:	c1 ea 08             	shr    $0x8,%edx
   3077e:	44 8d 2c 4a          	lea    (%rdx,%rcx,2),%r13d
   30782:	0f b6 4b 1c          	movzbl 0x1c(%rbx),%ecx
   30786:	44 89 ea             	mov    %r13d,%edx
   30789:	44 88 6b 1d          	mov    %r13b,0x1d(%rbx)
   3078d:	45 0f b6 ed          	movzbl %r13b,%r13d
   30791:	c1 ea 08             	shr    $0x8,%edx
   30794:	44 8d 24 4a          	lea    (%rdx,%rcx,2),%r12d
   30798:	0f b6 4b 1b          	movzbl 0x1b(%rbx),%ecx
   3079c:	44 89 e2             	mov    %r12d,%edx
   3079f:	44 88 63 1c          	mov    %r12b,0x1c(%rbx)
   307a3:	45 0f b6 e4          	movzbl %r12b,%r12d
   307a7:	c1 ea 08             	shr    $0x8,%edx
   307aa:	8d 2c 4a             	lea    (%rdx,%rcx,2),%ebp
   307ad:	0f b6 4b 1a          	movzbl 0x1a(%rbx),%ecx
   307b1:	89 ea                	mov    %ebp,%edx
   307b3:	40 88 6b 1b          	mov    %bpl,0x1b(%rbx)
   307b7:	40 0f b6 ed          	movzbl %bpl,%ebp
   307bb:	c1 ea 08             	shr    $0x8,%edx
   307be:	44 8d 1c 4a          	lea    (%rdx,%rcx,2),%r11d
   307c2:	0f b6 4b 19          	movzbl 0x19(%rbx),%ecx
   307c6:	44 89 da             	mov    %r11d,%edx
   307c9:	44 88 5b 1a          	mov    %r11b,0x1a(%rbx)
   307cd:	45 0f b6 db          	movzbl %r11b,%r11d
   307d1:	c1 ea 08             	shr    $0x8,%edx
   307d4:	44 8d 14 4a          	lea    (%rdx,%rcx,2),%r10d
   307d8:	0f b6 4b 18          	movzbl 0x18(%rbx),%ecx
   307dc:	44 89 d2             	mov    %r10d,%edx
   307df:	44 88 53 19          	mov    %r10b,0x19(%rbx)
   307e3:	45 0f b6 d2          	movzbl %r10b,%r10d
   307e7:	c1 ea 08             	shr    $0x8,%edx
   307ea:	44 8d 0c 4a          	lea    (%rdx,%rcx,2),%r9d
   307ee:	0f b6 4b 17          	movzbl 0x17(%rbx),%ecx
   307f2:	44 89 ca             	mov    %r9d,%edx
   307f5:	44 88 4b 18          	mov    %r9b,0x18(%rbx)
   307f9:	45 0f b6 c9          	movzbl %r9b,%r9d
   307fd:	c1 ea 08             	shr    $0x8,%edx
   30800:	44 8d 04 4a          	lea    (%rdx,%rcx,2),%r8d
   30804:	0f b6 4b 16          	movzbl 0x16(%rbx),%ecx
   30808:	44 89 c2             	mov    %r8d,%edx
   3080b:	44 88 43 17          	mov    %r8b,0x17(%rbx)
   3080f:	45 0f b6 c0          	movzbl %r8b,%r8d
   30813:	c1 ea 08             	shr    $0x8,%edx
   30816:	8d 3c 4a             	lea    (%rdx,%rcx,2),%edi
   30819:	0f b6 4b 15          	movzbl 0x15(%rbx),%ecx
   3081d:	89 fa                	mov    %edi,%edx
   3081f:	40 88 7b 16          	mov    %dil,0x16(%rbx)
   30823:	40 0f b6 ff          	movzbl %dil,%edi
   30827:	c1 ea 08             	shr    $0x8,%edx
   3082a:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
   3082d:	0f b6 4b 14          	movzbl 0x14(%rbx),%ecx
   30831:	89 c2                	mov    %eax,%edx
   30833:	88 43 15             	mov    %al,0x15(%rbx)
   30836:	c1 ea 08             	shr    $0x8,%edx
   30839:	8d 34 4a             	lea    (%rdx,%rcx,2),%esi
   3083c:	0f b6 4b 13          	movzbl 0x13(%rbx),%ecx
   30840:	89 f2                	mov    %esi,%edx
   30842:	40 88 73 14          	mov    %sil,0x14(%rbx)
   30846:	c1 ea 08             	shr    $0x8,%edx
   30849:	89 74 24 04          	mov    %esi,0x4(%rsp)
   3084d:	8d 0c 4a             	lea    (%rdx,%rcx,2),%ecx
   30850:	88 4b 13             	mov    %cl,0x13(%rbx)
   30853:	89 ca                	mov    %ecx,%edx
   30855:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   30859:	0f b6 4b 12          	movzbl 0x12(%rbx),%ecx
   3085d:	c1 ea 08             	shr    $0x8,%edx
   30860:	8d 34 4a             	lea    (%rdx,%rcx,2),%esi
   30863:	0f b6 4b 11          	movzbl 0x11(%rbx),%ecx
   30867:	89 f2                	mov    %esi,%edx
   30869:	40 88 73 12          	mov    %sil,0x12(%rbx)
   3086d:	40 0f b6 f6          	movzbl %sil,%esi
   30871:	c1 ea 08             	shr    $0x8,%edx
   30874:	8d 0c 4a             	lea    (%rdx,%rcx,2),%ecx
   30877:	89 ca                	mov    %ecx,%edx
   30879:	88 4b 11             	mov    %cl,0x11(%rbx)
   3087c:	0f b6 c9             	movzbl %cl,%ecx
   3087f:	c1 ea 08             	shr    $0x8,%edx
   30882:	42 8d 14 7a          	lea    (%rdx,%r15,2),%edx
   30886:	41 c1 ff 07          	sar    $0x7,%r15d
   3088a:	41 f7 df             	neg    %r15d
   3088d:	88 53 10             	mov    %dl,0x10(%rbx)
   30890:	0f b6 d2             	movzbl %dl,%edx
   30893:	41 83 e7 87          	and    $0xffffff87,%r15d
   30897:	44 30 7b 1f          	xor    %r15b,0x1f(%rbx)
   3089b:	44 0f b6 7b 1f       	movzbl 0x1f(%rbx),%r15d
   308a0:	45 01 ff             	add    %r15d,%r15d
   308a3:	44 88 7b 2f          	mov    %r15b,0x2f(%rbx)
   308a7:	41 c1 ef 08          	shr    $0x8,%r15d
   308ab:	47 8d 34 77          	lea    (%r15,%r14,2),%r14d
   308af:	44 88 73 2e          	mov    %r14b,0x2e(%rbx)
   308b3:	41 c1 ee 08          	shr    $0x8,%r14d
   308b7:	47 8d 2c 6e          	lea    (%r14,%r13,2),%r13d
   308bb:	44 88 6b 2d          	mov    %r13b,0x2d(%rbx)
   308bf:	41 c1 ed 08          	shr    $0x8,%r13d
   308c3:	47 8d 64 65 00       	lea    0x0(%r13,%r12,2),%r12d
   308c8:	44 88 63 2c          	mov    %r12b,0x2c(%rbx)
   308cc:	41 c1 ec 08          	shr    $0x8,%r12d
   308d0:	41 8d 2c 6c          	lea    (%r12,%rbp,2),%ebp
   308d4:	40 88 6b 2b          	mov    %bpl,0x2b(%rbx)
   308d8:	c1 ed 08             	shr    $0x8,%ebp
   308db:	46 8d 5c 5d 00       	lea    0x0(%rbp,%r11,2),%r11d
   308e0:	44 88 5b 2a          	mov    %r11b,0x2a(%rbx)
   308e4:	41 c1 eb 08          	shr    $0x8,%r11d
   308e8:	47 8d 14 53          	lea    (%r11,%r10,2),%r10d
   308ec:	44 88 53 29          	mov    %r10b,0x29(%rbx)
   308f0:	41 c1 ea 08          	shr    $0x8,%r10d
   308f4:	47 8d 0c 4a          	lea    (%r10,%r9,2),%r9d
   308f8:	44 88 4b 28          	mov    %r9b,0x28(%rbx)
   308fc:	41 c1 e9 08          	shr    $0x8,%r9d
   30900:	47 8d 04 41          	lea    (%r9,%r8,2),%r8d
   30904:	44 88 43 27          	mov    %r8b,0x27(%rbx)
   30908:	41 c1 e8 08          	shr    $0x8,%r8d
   3090c:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   30910:	40 88 7b 26          	mov    %dil,0x26(%rbx)
   30914:	c1 ef 08             	shr    $0x8,%edi
   30917:	41 89 f8             	mov    %edi,%r8d
   3091a:	0f b6 f8             	movzbl %al,%edi
   3091d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   30921:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   30925:	40 88 7b 25          	mov    %dil,0x25(%rbx)
   30929:	c1 ef 08             	shr    $0x8,%edi
   3092c:	41 89 f8             	mov    %edi,%r8d
   3092f:	0f b6 7c 24 04       	movzbl 0x4(%rsp),%edi
   30934:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   30938:	40 88 7b 24          	mov    %dil,0x24(%rbx)
   3093c:	c1 ef 08             	shr    $0x8,%edi
   3093f:	41 89 f8             	mov    %edi,%r8d
   30942:	0f b6 7c 24 08       	movzbl 0x8(%rsp),%edi
   30947:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   3094b:	40 88 7b 23          	mov    %dil,0x23(%rbx)
   3094f:	c1 ef 08             	shr    $0x8,%edi
   30952:	8d 34 77             	lea    (%rdi,%rsi,2),%esi
   30955:	40 88 73 22          	mov    %sil,0x22(%rbx)
   30959:	c1 ee 08             	shr    $0x8,%esi
   3095c:	8d 0c 4e             	lea    (%rsi,%rcx,2),%ecx
   3095f:	88 4b 21             	mov    %cl,0x21(%rbx)
   30962:	c1 e9 08             	shr    $0x8,%ecx
   30965:	8d 0c 51             	lea    (%rcx,%rdx,2),%ecx
   30968:	c1 fa 07             	sar    $0x7,%edx
   3096b:	f7 da                	neg    %edx
   3096d:	88 4b 20             	mov    %cl,0x20(%rbx)
   30970:	83 e2 87             	and    $0xffffff87,%edx
   30973:	30 53 2f             	xor    %dl,0x2f(%rbx)
   30976:	48 83 c4 18          	add    $0x18,%rsp
   3097a:	5b                   	pop    %rbx
   3097b:	5d                   	pop    %rbp
   3097c:	41 5c                	pop    %r12
   3097e:	41 5d                	pop    %r13
   30980:	41 5e                	pop    %r14
   30982:	41 5f                	pop    %r15
   30984:	c3                   	retq   
   30985:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   3098a:	c3                   	retq   
   3098b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   30990:	c3                   	retq   
   30991:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30998:	00 00 00 
   3099b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000309a0 <y8_ippsAES_CMACUpdate>:
   309a0:	48 85 d2             	test   %rdx,%rdx
   309a3:	0f 84 a9 05 00 00    	je     30f52 <y8_ippsAES_CMACUpdate+0x5b2>
   309a9:	41 57                	push   %r15
   309ab:	41 56                	push   %r14
   309ad:	41 55                	push   %r13
   309af:	41 54                	push   %r12
   309b1:	55                   	push   %rbp
   309b2:	53                   	push   %rbx
   309b3:	48 89 d3             	mov    %rdx,%rbx
   309b6:	48 f7 db             	neg    %rbx
   309b9:	48 83 ec 28          	sub    $0x28,%rsp
   309bd:	83 e3 0f             	and    $0xf,%ebx
   309c0:	48 01 d3             	add    %rdx,%rbx
   309c3:	81 3b 43 41 4d 43    	cmpl   $0x434d4143,(%rbx)
   309c9:	0f 85 79 05 00 00    	jne    30f48 <y8_ippsAES_CMACUpdate+0x5a8>
   309cf:	48 89 fd             	mov    %rdi,%rbp
   309d2:	41 89 f6             	mov    %esi,%r14d
   309d5:	85 f6                	test   %esi,%esi
   309d7:	79 09                	jns    309e2 <y8_ippsAES_CMACUpdate+0x42>
   309d9:	48 85 ff             	test   %rdi,%rdi
   309dc:	0f 85 39 05 00 00    	jne    30f1b <y8_ippsAES_CMACUpdate+0x57b>
   309e2:	45 85 f6             	test   %r14d,%r14d
   309e5:	74 09                	je     309f0 <y8_ippsAES_CMACUpdate+0x50>
   309e7:	48 85 ed             	test   %rbp,%rbp
   309ea:	0f 84 35 05 00 00    	je     30f25 <y8_ippsAES_CMACUpdate+0x585>
   309f0:	45 85 f6             	test   %r14d,%r14d
   309f3:	0f 84 eb 03 00 00    	je     30de4 <y8_ippsAES_CMACUpdate+0x444>
   309f9:	8b 53 04             	mov    0x4(%rbx),%edx
   309fc:	85 d2                	test   %edx,%edx
   309fe:	0f 84 fc 01 00 00    	je     30c00 <y8_ippsAES_CMACUpdate+0x260>
   30a04:	4c 8d 4b 30          	lea    0x30(%rbx),%r9
   30a08:	b9 10 00 00 00       	mov    $0x10,%ecx
   30a0d:	4c 63 c2             	movslq %edx,%r8
   30a10:	29 d1                	sub    %edx,%ecx
   30a12:	44 39 f1             	cmp    %r14d,%ecx
   30a15:	41 0f 4f ce          	cmovg  %r14d,%ecx
   30a19:	85 c9                	test   %ecx,%ecx
   30a1b:	0f 8e c2 01 00 00    	jle    30be3 <y8_ippsAES_CMACUpdate+0x243>
   30a21:	4a 8d 74 03 40       	lea    0x40(%rbx,%r8,1),%rsi
   30a26:	4a 8d 7c 03 30       	lea    0x30(%rbx,%r8,1),%rdi
   30a2b:	48 39 f5             	cmp    %rsi,%rbp
   30a2e:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   30a32:	41 0f 93 c2          	setae  %r10b
   30a36:	8d 51 ff             	lea    -0x1(%rcx),%edx
   30a39:	48 39 f7             	cmp    %rsi,%rdi
   30a3c:	40 0f 93 c6          	setae  %sil
   30a40:	41 08 f2             	or     %sil,%r10b
   30a43:	0f 84 7f 04 00 00    	je     30ec8 <y8_ippsAES_CMACUpdate+0x528>
   30a49:	83 fa 0e             	cmp    $0xe,%edx
   30a4c:	0f 86 76 04 00 00    	jbe    30ec8 <y8_ippsAES_CMACUpdate+0x528>
   30a52:	89 ce                	mov    %ecx,%esi
   30a54:	31 d2                	xor    %edx,%edx
   30a56:	c1 ee 04             	shr    $0x4,%esi
   30a59:	48 c1 e6 04          	shl    $0x4,%rsi
   30a5d:	0f 1f 00             	nopl   (%rax)
   30a60:	f3 0f 6f 4c 15 00    	movdqu 0x0(%rbp,%rdx,1),%xmm1
   30a66:	0f 11 0c 17          	movups %xmm1,(%rdi,%rdx,1)
   30a6a:	48 83 c2 10          	add    $0x10,%rdx
   30a6e:	48 39 f2             	cmp    %rsi,%rdx
   30a71:	75 ed                	jne    30a60 <y8_ippsAES_CMACUpdate+0xc0>
   30a73:	89 ca                	mov    %ecx,%edx
   30a75:	83 e2 f0             	and    $0xfffffff0,%edx
   30a78:	39 d1                	cmp    %edx,%ecx
   30a7a:	0f 84 60 01 00 00    	je     30be0 <y8_ippsAES_CMACUpdate+0x240>
   30a80:	4b 8d 34 01          	lea    (%r9,%r8,1),%rsi
   30a84:	89 d7                	mov    %edx,%edi
   30a86:	44 0f b6 54 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r10d
   30a8c:	44 88 14 3e          	mov    %r10b,(%rsi,%rdi,1)
   30a90:	8d 7a 01             	lea    0x1(%rdx),%edi
   30a93:	39 f9                	cmp    %edi,%ecx
   30a95:	0f 8e 45 01 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30a9b:	48 63 ff             	movslq %edi,%rdi
   30a9e:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30aa4:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30aa8:	8d 7a 02             	lea    0x2(%rdx),%edi
   30aab:	39 f9                	cmp    %edi,%ecx
   30aad:	0f 8e 2d 01 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30ab3:	48 63 ff             	movslq %edi,%rdi
   30ab6:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30abc:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30ac0:	8d 7a 03             	lea    0x3(%rdx),%edi
   30ac3:	39 f9                	cmp    %edi,%ecx
   30ac5:	0f 8e 15 01 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30acb:	48 63 ff             	movslq %edi,%rdi
   30ace:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30ad4:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30ad8:	8d 7a 04             	lea    0x4(%rdx),%edi
   30adb:	39 f9                	cmp    %edi,%ecx
   30add:	0f 8e fd 00 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30ae3:	48 63 ff             	movslq %edi,%rdi
   30ae6:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30aec:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30af0:	8d 7a 05             	lea    0x5(%rdx),%edi
   30af3:	39 f9                	cmp    %edi,%ecx
   30af5:	0f 8e e5 00 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30afb:	48 63 ff             	movslq %edi,%rdi
   30afe:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b04:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b08:	8d 7a 06             	lea    0x6(%rdx),%edi
   30b0b:	39 f9                	cmp    %edi,%ecx
   30b0d:	0f 8e cd 00 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b13:	48 63 ff             	movslq %edi,%rdi
   30b16:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b1c:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b20:	8d 7a 07             	lea    0x7(%rdx),%edi
   30b23:	39 f9                	cmp    %edi,%ecx
   30b25:	0f 8e b5 00 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b2b:	48 63 ff             	movslq %edi,%rdi
   30b2e:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b34:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b38:	8d 7a 08             	lea    0x8(%rdx),%edi
   30b3b:	39 f9                	cmp    %edi,%ecx
   30b3d:	0f 8e 9d 00 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b43:	48 63 ff             	movslq %edi,%rdi
   30b46:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b4c:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b50:	8d 7a 09             	lea    0x9(%rdx),%edi
   30b53:	39 f9                	cmp    %edi,%ecx
   30b55:	0f 8e 85 00 00 00    	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b5b:	48 63 ff             	movslq %edi,%rdi
   30b5e:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b64:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b68:	8d 7a 0a             	lea    0xa(%rdx),%edi
   30b6b:	39 f9                	cmp    %edi,%ecx
   30b6d:	7e 71                	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b6f:	48 63 ff             	movslq %edi,%rdi
   30b72:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b78:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b7c:	8d 7a 0b             	lea    0xb(%rdx),%edi
   30b7f:	39 f9                	cmp    %edi,%ecx
   30b81:	7e 5d                	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b83:	48 63 ff             	movslq %edi,%rdi
   30b86:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30b8c:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30b90:	8d 7a 0c             	lea    0xc(%rdx),%edi
   30b93:	39 f9                	cmp    %edi,%ecx
   30b95:	7e 49                	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30b97:	48 63 ff             	movslq %edi,%rdi
   30b9a:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30ba0:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30ba4:	8d 7a 0d             	lea    0xd(%rdx),%edi
   30ba7:	39 f9                	cmp    %edi,%ecx
   30ba9:	7e 35                	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30bab:	48 63 ff             	movslq %edi,%rdi
   30bae:	83 c2 0e             	add    $0xe,%edx
   30bb1:	44 0f b6 44 3d 00    	movzbl 0x0(%rbp,%rdi,1),%r8d
   30bb7:	44 88 04 3e          	mov    %r8b,(%rsi,%rdi,1)
   30bbb:	39 d1                	cmp    %edx,%ecx
   30bbd:	7e 21                	jle    30be0 <y8_ippsAES_CMACUpdate+0x240>
   30bbf:	48 63 d2             	movslq %edx,%rdx
   30bc2:	0f b6 7c 15 00       	movzbl 0x0(%rbp,%rdx,1),%edi
   30bc7:	40 88 3c 16          	mov    %dil,(%rsi,%rdx,1)
   30bcb:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   30bd2:	00 00 00 00 
   30bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30bdd:	00 00 00 
   30be0:	8b 53 04             	mov    0x4(%rbx),%edx
   30be3:	48 63 f1             	movslq %ecx,%rsi
   30be6:	01 ca                	add    %ecx,%edx
   30be8:	48 01 f5             	add    %rsi,%rbp
   30beb:	41 29 ce             	sub    %ecx,%r14d
   30bee:	89 53 04             	mov    %edx,0x4(%rbx)
   30bf1:	0f 84 ed 01 00 00    	je     30de4 <y8_ippsAES_CMACUpdate+0x444>
   30bf7:	83 fa 10             	cmp    $0x10,%edx
   30bfa:	0f 84 90 02 00 00    	je     30e90 <y8_ippsAES_CMACUpdate+0x4f0>
   30c00:	45 89 f5             	mov    %r14d,%r13d
   30c03:	41 83 e5 f0          	and    $0xfffffff0,%r13d
   30c07:	41 f6 c6 0f          	test   $0xf,%r14b
   30c0b:	41 8d 55 f0          	lea    -0x10(%r13),%edx
   30c0f:	44 0f 44 ea          	cmove  %edx,%r13d
   30c13:	45 85 ed             	test   %r13d,%r13d
   30c16:	0f 85 dc 01 00 00    	jne    30df8 <y8_ippsAES_CMACUpdate+0x458>
   30c1c:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
   30c20:	45 85 f6             	test   %r14d,%r14d
   30c23:	0f 8e b7 01 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30c29:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   30c2d:	41 8d 56 ff          	lea    -0x1(%r14),%edx
   30c31:	48 39 f1             	cmp    %rsi,%rcx
   30c34:	48 8d 4b 40          	lea    0x40(%rbx),%rcx
   30c38:	40 0f 93 c6          	setae  %sil
   30c3c:	48 39 cd             	cmp    %rcx,%rbp
   30c3f:	0f 93 c1             	setae  %cl
   30c42:	40 08 ce             	or     %cl,%sil
   30c45:	0f 84 ad 02 00 00    	je     30ef8 <y8_ippsAES_CMACUpdate+0x558>
   30c4b:	83 fa 0e             	cmp    $0xe,%edx
   30c4e:	0f 86 a4 02 00 00    	jbe    30ef8 <y8_ippsAES_CMACUpdate+0x558>
   30c54:	44 89 f1             	mov    %r14d,%ecx
   30c57:	31 d2                	xor    %edx,%edx
   30c59:	c1 e9 04             	shr    $0x4,%ecx
   30c5c:	48 c1 e1 04          	shl    $0x4,%rcx
   30c60:	f3 0f 6f 54 15 00    	movdqu 0x0(%rbp,%rdx,1),%xmm2
   30c66:	0f 11 54 13 30       	movups %xmm2,0x30(%rbx,%rdx,1)
   30c6b:	48 83 c2 10          	add    $0x10,%rdx
   30c6f:	48 39 ca             	cmp    %rcx,%rdx
   30c72:	75 ec                	jne    30c60 <y8_ippsAES_CMACUpdate+0x2c0>
   30c74:	44 89 f2             	mov    %r14d,%edx
   30c77:	83 e2 f0             	and    $0xfffffff0,%edx
   30c7a:	44 39 f2             	cmp    %r14d,%edx
   30c7d:	0f 84 5d 01 00 00    	je     30de0 <y8_ippsAES_CMACUpdate+0x440>
   30c83:	89 d1                	mov    %edx,%ecx
   30c85:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30c8a:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30c8f:	8d 4a 01             	lea    0x1(%rdx),%ecx
   30c92:	44 39 f1             	cmp    %r14d,%ecx
   30c95:	0f 8d 45 01 00 00    	jge    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30c9b:	48 63 c9             	movslq %ecx,%rcx
   30c9e:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30ca3:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30ca8:	8d 4a 02             	lea    0x2(%rdx),%ecx
   30cab:	41 39 ce             	cmp    %ecx,%r14d
   30cae:	0f 8e 2c 01 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30cb4:	48 63 c9             	movslq %ecx,%rcx
   30cb7:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30cbc:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30cc1:	8d 4a 03             	lea    0x3(%rdx),%ecx
   30cc4:	41 39 ce             	cmp    %ecx,%r14d
   30cc7:	0f 8e 13 01 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30ccd:	48 63 c9             	movslq %ecx,%rcx
   30cd0:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30cd5:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30cda:	8d 4a 04             	lea    0x4(%rdx),%ecx
   30cdd:	41 39 ce             	cmp    %ecx,%r14d
   30ce0:	0f 8e fa 00 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30ce6:	48 63 c9             	movslq %ecx,%rcx
   30ce9:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30cee:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30cf3:	8d 4a 05             	lea    0x5(%rdx),%ecx
   30cf6:	41 39 ce             	cmp    %ecx,%r14d
   30cf9:	0f 8e e1 00 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30cff:	48 63 c9             	movslq %ecx,%rcx
   30d02:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d07:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d0c:	8d 4a 06             	lea    0x6(%rdx),%ecx
   30d0f:	41 39 ce             	cmp    %ecx,%r14d
   30d12:	0f 8e c8 00 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30d18:	48 63 c9             	movslq %ecx,%rcx
   30d1b:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d20:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d25:	8d 4a 07             	lea    0x7(%rdx),%ecx
   30d28:	41 39 ce             	cmp    %ecx,%r14d
   30d2b:	0f 8e af 00 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30d31:	48 63 c9             	movslq %ecx,%rcx
   30d34:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d39:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d3e:	8d 4a 08             	lea    0x8(%rdx),%ecx
   30d41:	41 39 ce             	cmp    %ecx,%r14d
   30d44:	0f 8e 96 00 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30d4a:	48 63 c9             	movslq %ecx,%rcx
   30d4d:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d52:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d57:	8d 4a 09             	lea    0x9(%rdx),%ecx
   30d5a:	41 39 ce             	cmp    %ecx,%r14d
   30d5d:	0f 8e 7d 00 00 00    	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30d63:	48 63 c9             	movslq %ecx,%rcx
   30d66:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d6b:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d70:	8d 4a 0a             	lea    0xa(%rdx),%ecx
   30d73:	41 39 ce             	cmp    %ecx,%r14d
   30d76:	7e 68                	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30d78:	48 63 c9             	movslq %ecx,%rcx
   30d7b:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d80:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d85:	8d 4a 0b             	lea    0xb(%rdx),%ecx
   30d88:	41 39 ce             	cmp    %ecx,%r14d
   30d8b:	7e 53                	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30d8d:	48 63 c9             	movslq %ecx,%rcx
   30d90:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30d95:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30d9a:	8d 4a 0c             	lea    0xc(%rdx),%ecx
   30d9d:	41 39 ce             	cmp    %ecx,%r14d
   30da0:	7e 3e                	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30da2:	48 63 c9             	movslq %ecx,%rcx
   30da5:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30daa:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30daf:	8d 4a 0d             	lea    0xd(%rdx),%ecx
   30db2:	41 39 ce             	cmp    %ecx,%r14d
   30db5:	7e 29                	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30db7:	48 63 c9             	movslq %ecx,%rcx
   30dba:	83 c2 0e             	add    $0xe,%edx
   30dbd:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
   30dc2:	40 88 74 0b 30       	mov    %sil,0x30(%rbx,%rcx,1)
   30dc7:	41 39 d6             	cmp    %edx,%r14d
   30dca:	7e 14                	jle    30de0 <y8_ippsAES_CMACUpdate+0x440>
   30dcc:	48 63 d2             	movslq %edx,%rdx
   30dcf:	0f b6 4c 15 00       	movzbl 0x0(%rbp,%rdx,1),%ecx
   30dd4:	88 4c 13 30          	mov    %cl,0x30(%rbx,%rdx,1)
   30dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   30ddf:	00 
   30de0:	44 01 73 04          	add    %r14d,0x4(%rbx)
   30de4:	31 c0                	xor    %eax,%eax
   30de6:	48 83 c4 28          	add    $0x28,%rsp
   30dea:	5b                   	pop    %rbx
   30deb:	5d                   	pop    %rbp
   30dec:	41 5c                	pop    %r12
   30dee:	41 5d                	pop    %r13
   30df0:	41 5e                	pop    %r14
   30df2:	41 5f                	pop    %r15
   30df4:	c3                   	retq   
   30df5:	0f 1f 00             	nopl   (%rax)
   30df8:	81 bb 80 02 00 00 00 	cmpl   $0x400,0x280(%rbx)
   30dff:	04 00 00 
   30e02:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   30e09:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30e0e:	8b 53 5c             	mov    0x5c(%rbx),%edx
   30e11:	4c 8d 63 40          	lea    0x40(%rbx),%r12
   30e15:	0f 84 15 01 00 00    	je     30f30 <y8_ippsAES_CMACUpdate+0x590>
   30e1b:	48 8b 43 60          	mov    0x60(%rbx),%rax
   30e1f:	49 89 ef             	mov    %rbp,%r15
   30e22:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   30e27:	41 8d 44 2d 00       	lea    0x0(%r13,%rbp,1),%eax
   30e2c:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   30e30:	eb 09                	jmp    30e3b <y8_ippsAES_CMACUpdate+0x49b>
   30e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30e38:	8b 53 5c             	mov    0x5c(%rbx),%edx
   30e3b:	41 8b 0f             	mov    (%r15),%ecx
   30e3e:	45 31 c0             	xor    %r8d,%r8d
   30e41:	4c 89 e6             	mov    %r12,%rsi
   30e44:	4c 89 e7             	mov    %r12,%rdi
   30e47:	31 4b 40             	xor    %ecx,0x40(%rbx)
   30e4a:	49 83 c7 10          	add    $0x10,%r15
   30e4e:	41 8b 4f f4          	mov    -0xc(%r15),%ecx
   30e52:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   30e57:	31 4b 44             	xor    %ecx,0x44(%rbx)
   30e5a:	41 8b 4f f8          	mov    -0x8(%r15),%ecx
   30e5e:	31 4b 48             	xor    %ecx,0x48(%rbx)
   30e61:	41 8b 4f fc          	mov    -0x4(%r15),%ecx
   30e65:	31 4b 4c             	xor    %ecx,0x4c(%rbx)
   30e68:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   30e6d:	ff d0                	callq  *%rax
   30e6f:	44 39 7c 24 1c       	cmp    %r15d,0x1c(%rsp)
   30e74:	75 c2                	jne    30e38 <y8_ippsAES_CMACUpdate+0x498>
   30e76:	45 29 ee             	sub    %r13d,%r14d
   30e79:	0f 84 65 ff ff ff    	je     30de4 <y8_ippsAES_CMACUpdate+0x444>
   30e7f:	4d 63 d5             	movslq %r13d,%r10
   30e82:	4c 01 d5             	add    %r10,%rbp
   30e85:	e9 92 fd ff ff       	jmpq   30c1c <y8_ippsAES_CMACUpdate+0x27c>
   30e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30e90:	f3 0f 6f 5b 40       	movdqu 0x40(%rbx),%xmm3
   30e95:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   30e99:	45 31 c0             	xor    %r8d,%r8d
   30e9c:	f3 0f 6f 43 30       	movdqu 0x30(%rbx),%xmm0
   30ea1:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   30ea8:	48 89 fe             	mov    %rdi,%rsi
   30eab:	8b 53 5c             	mov    0x5c(%rbx),%edx
   30eae:	66 0f ef c3          	pxor   %xmm3,%xmm0
   30eb2:	0f 11 43 40          	movups %xmm0,0x40(%rbx)
   30eb6:	ff 53 60             	callq  *0x60(%rbx)
   30eb9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
   30ec0:	e9 3b fd ff ff       	jmpq   30c00 <y8_ippsAES_CMACUpdate+0x260>
   30ec5:	0f 1f 00             	nopl   (%rax)
   30ec8:	89 d7                	mov    %edx,%edi
   30eca:	49 01 d8             	add    %rbx,%r8
   30ecd:	31 d2                	xor    %edx,%edx
   30ecf:	eb 0a                	jmp    30edb <y8_ippsAES_CMACUpdate+0x53b>
   30ed1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   30ed8:	48 89 f2             	mov    %rsi,%rdx
   30edb:	0f b6 74 15 00       	movzbl 0x0(%rbp,%rdx,1),%esi
   30ee0:	41 88 74 10 30       	mov    %sil,0x30(%r8,%rdx,1)
   30ee5:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   30ee9:	48 39 fa             	cmp    %rdi,%rdx
   30eec:	75 ea                	jne    30ed8 <y8_ippsAES_CMACUpdate+0x538>
   30eee:	e9 ed fc ff ff       	jmpq   30be0 <y8_ippsAES_CMACUpdate+0x240>
   30ef3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   30ef8:	89 d1                	mov    %edx,%ecx
   30efa:	31 d2                	xor    %edx,%edx
   30efc:	eb 05                	jmp    30f03 <y8_ippsAES_CMACUpdate+0x563>
   30efe:	66 90                	xchg   %ax,%ax
   30f00:	48 89 f2             	mov    %rsi,%rdx
   30f03:	0f b6 74 15 00       	movzbl 0x0(%rbp,%rdx,1),%esi
   30f08:	40 88 74 13 30       	mov    %sil,0x30(%rbx,%rdx,1)
   30f0d:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   30f11:	48 39 ca             	cmp    %rcx,%rdx
   30f14:	75 ea                	jne    30f00 <y8_ippsAES_CMACUpdate+0x560>
   30f16:	e9 c5 fe ff ff       	jmpq   30de0 <y8_ippsAES_CMACUpdate+0x440>
   30f1b:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   30f20:	e9 c1 fe ff ff       	jmpq   30de6 <y8_ippsAES_CMACUpdate+0x446>
   30f25:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   30f2a:	e9 b7 fe ff ff       	jmpq   30de6 <y8_ippsAES_CMACUpdate+0x446>
   30f2f:	90                   	nop
   30f30:	89 d1                	mov    %edx,%ecx
   30f32:	49 89 c0             	mov    %rax,%r8
   30f35:	44 89 ea             	mov    %r13d,%edx
   30f38:	48 89 ee             	mov    %rbp,%rsi
   30f3b:	4c 89 e7             	mov    %r12,%rdi
   30f3e:	e8 1d 10 00 00       	callq  31f60 <y8_cpAESCMAC_Update_AES_NI>
   30f43:	e9 2e ff ff ff       	jmpq   30e76 <y8_ippsAES_CMACUpdate+0x4d6>
   30f48:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   30f4d:	e9 94 fe ff ff       	jmpq   30de6 <y8_ippsAES_CMACUpdate+0x446>
   30f52:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   30f57:	c3                   	retq   
   30f58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   30f5f:	00 

0000000000030f60 <y8_ippsAESInit>:
   30f60:	41 57                	push   %r15
   30f62:	41 56                	push   %r14
   30f64:	41 55                	push   %r13
   30f66:	41 54                	push   %r12
   30f68:	55                   	push   %rbp
   30f69:	48 89 d5             	mov    %rdx,%rbp
   30f6c:	53                   	push   %rbx
   30f6d:	48 f7 dd             	neg    %rbp
   30f70:	48 83 ec 48          	sub    $0x48,%rsp
   30f74:	83 e5 0f             	and    $0xf,%ebp
   30f77:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30f7e:	00 00 
   30f80:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   30f85:	31 c0                	xor    %eax,%eax
   30f87:	48 01 d5             	add    %rdx,%rbp
   30f8a:	48 85 d2             	test   %rdx,%rdx
   30f8d:	0f 84 d1 01 00 00    	je     31164 <y8_ippsAESInit+0x204>
   30f93:	89 f0                	mov    %esi,%eax
   30f95:	48 89 fb             	mov    %rdi,%rbx
   30f98:	83 e0 f7             	and    $0xfffffff7,%eax
   30f9b:	83 f8 10             	cmp    $0x10,%eax
   30f9e:	74 09                	je     30fa9 <y8_ippsAESInit+0x49>
   30fa0:	83 fe 20             	cmp    $0x20,%esi
   30fa3:	0f 85 ad 01 00 00    	jne    31156 <y8_ippsAESInit+0x1f6>
   30fa9:	48 8d 85 38 02 00 00 	lea    0x238(%rbp),%rax
   30fb0:	48 63 c9             	movslq %ecx,%rcx
   30fb3:	48 01 ca             	add    %rcx,%rdx
   30fb6:	48 39 d0             	cmp    %rdx,%rax
   30fb9:	0f 87 9e 01 00 00    	ja     3115d <y8_ippsAESInit+0x1fd>
   30fbf:	48 8d 15 f2 da 00 00 	lea    0xdaf2(%rip),%rdx        # 3eab8 <rij128nKeys>
   30fc6:	c1 e6 03             	shl    $0x3,%esi
   30fc9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30fcd:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   30fd2:	8d 46 1f             	lea    0x1f(%rsi),%eax
   30fd5:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   30fda:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30fde:	0f 48 f0             	cmovs  %eax,%esi
   30fe1:	c1 fe 05             	sar    $0x5,%esi
   30fe4:	8d 46 fc             	lea    -0x4(%rsi),%eax
   30fe7:	d1 f8                	sar    %eax
   30fe9:	48 85 db             	test   %rbx,%rbx
   30fec:	48 98                	cltq   
   30fee:	8b 0c 82             	mov    (%rdx,%rax,4),%ecx
   30ff1:	48 8d 15 d0 da 00 00 	lea    0xdad0(%rip),%rdx        # 3eac8 <rij128nRounds>
   30ff8:	44 8b 24 82          	mov    (%rdx,%rax,4),%r12d
   30ffc:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   31001:	48 0f 44 d8          	cmove  %rax,%rbx
   31005:	48 89 e8             	mov    %rbp,%rax
   31008:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   3100c:	48 8d 95 30 02 00 00 	lea    0x230(%rbp),%rdx
   31013:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3101a:	00 00 00 00 
   3101e:	66 90                	xchg   %ax,%ax
   31020:	0f 11 00             	movups %xmm0,(%rax)
   31023:	48 83 c0 10          	add    $0x10,%rax
   31027:	48 39 c2             	cmp    %rax,%rdx
   3102a:	75 f4                	jne    31020 <y8_ippsAESInit+0xc0>
   3102c:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   31033:	00 00 00 
   31036:	89 75 04             	mov    %esi,0x4(%rbp)
   31039:	bf 00 04 00 00       	mov    $0x400,%edi
   3103e:	c7 45 00 4a 49 52 20 	movl   $0x2052494a,0x0(%rbp)
   31045:	c7 45 08 04 00 00 00 	movl   $0x4,0x8(%rbp)
   3104c:	44 89 65 0c          	mov    %r12d,0xc(%rbp)
   31050:	48 89 85 30 02 00 00 	mov    %rax,0x230(%rbp)
   31057:	89 74 24 08          	mov    %esi,0x8(%rsp)
   3105b:	e8 a0 e3 ff ff       	callq  2f400 <cpGetFeature>
   31060:	8b 74 24 08          	mov    0x8(%rsp),%esi
   31064:	85 c0                	test   %eax,%eax
   31066:	41 89 c7             	mov    %eax,%r15d
   31069:	0f 85 b9 00 00 00    	jne    31128 <y8_ippsAESInit+0x1c8>
   3106f:	48 83 ec 08          	sub    $0x8,%rsp
   31073:	44 89 e1             	mov    %r12d,%ecx
   31076:	ba 04 00 00 00       	mov    $0x4,%edx
   3107b:	4c 8d b5 30 01 00 00 	lea    0x130(%rbp),%r14
   31082:	48 89 df             	mov    %rbx,%rdi
   31085:	41 83 c4 01          	add    $0x1,%r12d
   31089:	41 56                	push   %r14
   3108b:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
   31090:	4c 8d 6d 30          	lea    0x30(%rbp),%r13
   31094:	4d 89 e9             	mov    %r13,%r9
   31097:	e8 e4 00 00 00       	callq  31180 <y8_ExpandRijndaelKey>
   3109c:	58                   	pop    %rax
   3109d:	5a                   	pop    %rdx
   3109e:	45 85 e4             	test   %r12d,%r12d
   310a1:	7e 48                	jle    310eb <y8_ippsAESInit+0x18b>
   310a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   310aa:	00 00 00 00 
   310ae:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   310b5:	00 00 00 00 
   310b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   310c0:	44 89 fb             	mov    %r15d,%ebx
   310c3:	41 83 c7 01          	add    $0x1,%r15d
   310c7:	c1 e3 04             	shl    $0x4,%ebx
   310ca:	48 63 db             	movslq %ebx,%rbx
   310cd:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
   310d2:	48 89 fe             	mov    %rdi,%rsi
   310d5:	e8 c6 15 00 00       	callq  326a0 <y8_TransformNative2Composite>
   310da:	49 8d 3c 1e          	lea    (%r14,%rbx,1),%rdi
   310de:	48 89 fe             	mov    %rdi,%rsi
   310e1:	e8 ba 15 00 00       	callq  326a0 <y8_TransformNative2Composite>
   310e6:	45 39 e7             	cmp    %r12d,%r15d
   310e9:	75 d5                	jne    310c0 <y8_ippsAESInit+0x160>
   310eb:	f3 0f 7e 05 05 5f 01 	movq   0x15f05(%rip),%xmm0        # 46ff8 <_GLOBAL_OFFSET_TABLE_+0x58>
   310f2:	00 
   310f3:	66 48 0f 3a 22 05 da 	pinsrq $0x1,0x15eda(%rip),%xmm0        # 46fd8 <_GLOBAL_OFFSET_TABLE_+0x38>
   310fa:	5e 01 00 01 
   310fe:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   31102:	31 c0                	xor    %eax,%eax
   31104:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   31109:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   31110:	00 00 
   31112:	75 57                	jne    3116b <y8_ippsAESInit+0x20b>
   31114:	48 83 c4 48          	add    $0x48,%rsp
   31118:	5b                   	pop    %rbx
   31119:	5d                   	pop    %rbp
   3111a:	41 5c                	pop    %r12
   3111c:	41 5d                	pop    %r13
   3111e:	41 5e                	pop    %r14
   31120:	41 5f                	pop    %r15
   31122:	c3                   	retq   
   31123:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31128:	c7 85 30 02 00 00 00 	movl   $0x400,0x230(%rbp)
   3112f:	04 00 00 
   31132:	48 89 ee             	mov    %rbp,%rsi
   31135:	48 89 df             	mov    %rbx,%rdi
   31138:	f3 0f 7e 05 88 5e 01 	movq   0x15e88(%rip),%xmm0        # 46fc8 <_GLOBAL_OFFSET_TABLE_+0x28>
   3113f:	00 
   31140:	66 48 0f 3a 22 05 95 	pinsrq $0x1,0x15e95(%rip),%xmm0        # 46fe0 <_GLOBAL_OFFSET_TABLE_+0x40>
   31147:	5e 01 00 01 
   3114b:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   3114f:	e8 8c 79 00 00       	callq  38ae0 <y8_cpExpandAesKey_NI>
   31154:	eb ac                	jmp    31102 <y8_ippsAESInit+0x1a2>
   31156:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   3115b:	eb a7                	jmp    31104 <y8_ippsAESInit+0x1a4>
   3115d:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   31162:	eb a0                	jmp    31104 <y8_ippsAESInit+0x1a4>
   31164:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   31169:	eb 99                	jmp    31104 <y8_ippsAESInit+0x1a4>
   3116b:	e8 1c a3 fd ff       	callq  b48c <__stack_chk_fail>
   31170:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31177:	00 00 00 
   3117a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000031180 <y8_ExpandRijndaelKey>:
   31180:	41 57                	push   %r15
   31182:	41 56                	push   %r14
   31184:	41 55                	push   %r13
   31186:	41 54                	push   %r12
   31188:	55                   	push   %rbp
   31189:	53                   	push   %rbx
   3118a:	89 4c 24 f4          	mov    %ecx,-0xc(%rsp)
   3118e:	31 c9                	xor    %ecx,%ecx
   31190:	44 89 44 24 dc       	mov    %r8d,-0x24(%rsp)
   31195:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
   31199:	89 54 24 f0          	mov    %edx,-0x10(%rsp)
   3119d:	85 f6                	test   %esi,%esi
   3119f:	7f 12                	jg     311b3 <y8_ExpandRijndaelKey+0x33>
   311a1:	e9 a3 0d 00 00       	jmpq   31f49 <y8_ExpandRijndaelKey+0xdc9>
   311a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   311ad:	00 00 00 
   311b0:	48 89 c1             	mov    %rax,%rcx
   311b3:	8d 14 8d 00 00 00 00 	lea    0x0(,%rcx,4),%edx
   311ba:	48 63 d2             	movslq %edx,%rdx
   311bd:	0f b6 44 17 03       	movzbl 0x3(%rdi,%rdx,1),%eax
   311c2:	44 0f b6 54 17 02    	movzbl 0x2(%rdi,%rdx,1),%r10d
   311c8:	c1 e0 18             	shl    $0x18,%eax
   311cb:	41 c1 e2 10          	shl    $0x10,%r10d
   311cf:	44 09 d0             	or     %r10d,%eax
   311d2:	44 0f b6 14 17       	movzbl (%rdi,%rdx,1),%r10d
   311d7:	0f b6 54 17 01       	movzbl 0x1(%rdi,%rdx,1),%edx
   311dc:	44 09 d0             	or     %r10d,%eax
   311df:	c1 e2 08             	shl    $0x8,%edx
   311e2:	09 d0                	or     %edx,%eax
   311e4:	41 89 04 89          	mov    %eax,(%r9,%rcx,4)
   311e8:	48 8d 41 01          	lea    0x1(%rcx),%rax
   311ec:	49 39 c8             	cmp    %rcx,%r8
   311ef:	75 bf                	jne    311b0 <y8_ExpandRijndaelKey+0x30>
   311f1:	45 8b 19             	mov    (%r9),%r11d
   311f4:	45 8b 51 04          	mov    0x4(%r9),%r10d
   311f8:	45 8b 41 08          	mov    0x8(%r9),%r8d
   311fc:	41 8b 79 0c          	mov    0xc(%r9),%edi
   31200:	83 fe 04             	cmp    $0x4,%esi
   31203:	0f 84 36 0b 00 00    	je     31d3f <y8_ExpandRijndaelKey+0xbbf>
   31209:	41 8b 41 10          	mov    0x10(%r9),%eax
   3120d:	41 8b 59 14          	mov    0x14(%r9),%ebx
   31211:	89 44 24 ec          	mov    %eax,-0x14(%rsp)
   31215:	83 fe 06             	cmp    $0x6,%esi
   31218:	0f 84 1b 09 00 00    	je     31b39 <y8_ExpandRijndaelKey+0x9b9>
   3121e:	83 7c 24 dc 08       	cmpl   $0x8,-0x24(%rsp)
   31223:	41 8b 49 18          	mov    0x18(%r9),%ecx
   31227:	41 8b 71 1c          	mov    0x1c(%r9),%esi
   3122b:	0f 8e b9 03 00 00    	jle    315ea <y8_ExpandRijndaelKey+0x46a>
   31231:	48 8d 05 a8 d8 00 00 	lea    0xd8a8(%rip),%rax        # 3eae0 <RconTbl>
   31238:	44 89 44 24 d8       	mov    %r8d,-0x28(%rsp)
   3123d:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
   31242:	48 89 44 24 e0       	mov    %rax,-0x20(%rsp)
   31247:	48 8d 05 f2 db 00 00 	lea    0xdbf2(%rip),%rax        # 3ee40 <RijEncSbox>
   3124e:	44 89 5c 24 d0       	mov    %r11d,-0x30(%rsp)
   31253:	41 89 cb             	mov    %ecx,%r11d
   31256:	c7 44 24 e8 08 00 00 	movl   $0x8,-0x18(%rsp)
   3125d:	00 
   3125e:	66 90                	xchg   %ax,%ax
   31260:	41 89 f5             	mov    %esi,%r13d
   31263:	41 89 f6             	mov    %esi,%r14d
   31266:	31 c9                	xor    %ecx,%ecx
   31268:	41 c0 ed 03          	shr    $0x3,%r13b
   3126c:	45 31 e4             	xor    %r12d,%r12d
   3126f:	45 0f b6 ed          	movzbl %r13b,%r13d
   31273:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3127a:	00 00 00 00 
   3127e:	66 90                	xchg   %ax,%ax
   31280:	48 89 cd             	mov    %rcx,%rbp
   31283:	4c 31 ed             	xor    %r13,%rbp
   31286:	48 89 ea             	mov    %rbp,%rdx
   31289:	48 83 ed 01          	sub    $0x1,%rbp
   3128d:	48 f7 d2             	not    %rdx
   31290:	48 21 ea             	and    %rbp,%rdx
   31293:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31297:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   3129b:	48 83 c1 01          	add    $0x1,%rcx
   3129f:	49 09 d4             	or     %rdx,%r12
   312a2:	48 83 f9 20          	cmp    $0x20,%rcx
   312a6:	75 d8                	jne    31280 <y8_ExpandRijndaelKey+0x100>
   312a8:	41 83 e6 07          	and    $0x7,%r14d
   312ac:	41 89 f5             	mov    %esi,%r13d
   312af:	42 8d 0c f5 00 00 00 	lea    0x0(,%r14,8),%ecx
   312b6:	00 
   312b7:	41 c1 ed 18          	shr    $0x18,%r13d
   312bb:	45 31 f6             	xor    %r14d,%r14d
   312be:	49 d3 ec             	shr    %cl,%r12
   312c1:	31 c9                	xor    %ecx,%ecx
   312c3:	45 89 e7             	mov    %r12d,%r15d
   312c6:	45 89 ec             	mov    %r13d,%r12d
   312c9:	41 c0 ec 03          	shr    $0x3,%r12b
   312cd:	41 c1 e7 18          	shl    $0x18,%r15d
   312d1:	45 0f b6 e4          	movzbl %r12b,%r12d
   312d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   312dc:	00 00 00 00 
   312e0:	48 89 cd             	mov    %rcx,%rbp
   312e3:	4c 31 e5             	xor    %r12,%rbp
   312e6:	48 89 ea             	mov    %rbp,%rdx
   312e9:	48 83 ed 01          	sub    $0x1,%rbp
   312ed:	48 f7 d2             	not    %rdx
   312f0:	48 21 ea             	and    %rbp,%rdx
   312f3:	48 c1 fa 3f          	sar    $0x3f,%rdx
   312f7:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   312fb:	48 83 c1 01          	add    $0x1,%rcx
   312ff:	49 09 d6             	or     %rdx,%r14
   31302:	48 83 f9 20          	cmp    $0x20,%rcx
   31306:	75 d8                	jne    312e0 <y8_ExpandRijndaelKey+0x160>
   31308:	41 83 e5 07          	and    $0x7,%r13d
   3130c:	42 8d 0c ed 00 00 00 	lea    0x0(,%r13,8),%ecx
   31313:	00 
   31314:	49 d3 ee             	shr    %cl,%r14
   31317:	31 c9                	xor    %ecx,%ecx
   31319:	45 0f b6 ee          	movzbl %r14b,%r13d
   3131d:	41 c1 e5 10          	shl    $0x10,%r13d
   31321:	45 09 fd             	or     %r15d,%r13d
   31324:	41 89 f7             	mov    %esi,%r15d
   31327:	41 c1 ef 10          	shr    $0x10,%r15d
   3132b:	45 89 ec             	mov    %r13d,%r12d
   3132e:	45 31 ed             	xor    %r13d,%r13d
   31331:	45 89 fe             	mov    %r15d,%r14d
   31334:	41 c0 ee 03          	shr    $0x3,%r14b
   31338:	45 0f b6 f6          	movzbl %r14b,%r14d
   3133c:	0f 1f 40 00          	nopl   0x0(%rax)
   31340:	48 89 cd             	mov    %rcx,%rbp
   31343:	4c 31 f5             	xor    %r14,%rbp
   31346:	48 89 ea             	mov    %rbp,%rdx
   31349:	48 83 ed 01          	sub    $0x1,%rbp
   3134d:	48 f7 d2             	not    %rdx
   31350:	48 21 ea             	and    %rbp,%rdx
   31353:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31357:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   3135b:	48 83 c1 01          	add    $0x1,%rcx
   3135f:	49 09 d5             	or     %rdx,%r13
   31362:	48 83 f9 20          	cmp    $0x20,%rcx
   31366:	75 d8                	jne    31340 <y8_ExpandRijndaelKey+0x1c0>
   31368:	41 83 e7 07          	and    $0x7,%r15d
   3136c:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31373:	00 
   31374:	41 89 f7             	mov    %esi,%r15d
   31377:	49 d3 ed             	shr    %cl,%r13
   3137a:	41 c1 ef 08          	shr    $0x8,%r15d
   3137e:	31 c9                	xor    %ecx,%ecx
   31380:	45 0f b6 ed          	movzbl %r13b,%r13d
   31384:	45 89 fe             	mov    %r15d,%r14d
   31387:	41 c1 e5 08          	shl    $0x8,%r13d
   3138b:	41 c0 ee 03          	shr    $0x3,%r14b
   3138f:	45 09 e5             	or     %r12d,%r13d
   31392:	45 0f b6 f6          	movzbl %r14b,%r14d
   31396:	45 31 e4             	xor    %r12d,%r12d
   31399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   313a0:	48 89 cd             	mov    %rcx,%rbp
   313a3:	4c 31 f5             	xor    %r14,%rbp
   313a6:	48 89 ea             	mov    %rbp,%rdx
   313a9:	48 83 ed 01          	sub    $0x1,%rbp
   313ad:	48 f7 d2             	not    %rdx
   313b0:	48 21 ea             	and    %rbp,%rdx
   313b3:	48 c1 fa 3f          	sar    $0x3f,%rdx
   313b7:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   313bb:	48 83 c1 01          	add    $0x1,%rcx
   313bf:	49 09 d4             	or     %rdx,%r12
   313c2:	48 83 f9 20          	cmp    $0x20,%rcx
   313c6:	75 d8                	jne    313a0 <y8_ExpandRijndaelKey+0x220>
   313c8:	41 83 e7 07          	and    $0x7,%r15d
   313cc:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   313d3:	00 
   313d4:	49 d3 ec             	shr    %cl,%r12
   313d7:	48 8b 4c 24 e0       	mov    -0x20(%rsp),%rcx
   313dc:	45 0f b6 e4          	movzbl %r12b,%r12d
   313e0:	45 09 e5             	or     %r12d,%r13d
   313e3:	44 33 29             	xor    (%rcx),%r13d
   313e6:	44 31 6c 24 d0       	xor    %r13d,-0x30(%rsp)
   313eb:	45 31 ed             	xor    %r13d,%r13d
   313ee:	8b 4c 24 d0          	mov    -0x30(%rsp),%ecx
   313f2:	41 31 ca             	xor    %ecx,%r10d
   313f5:	44 31 54 24 d8       	xor    %r10d,-0x28(%rsp)
   313fa:	8b 4c 24 d8          	mov    -0x28(%rsp),%ecx
   313fe:	31 cf                	xor    %ecx,%edi
   31400:	31 c9                	xor    %ecx,%ecx
   31402:	41 89 fe             	mov    %edi,%r14d
   31405:	41 c1 ee 18          	shr    $0x18,%r14d
   31409:	45 89 f4             	mov    %r14d,%r12d
   3140c:	41 c0 ec 03          	shr    $0x3,%r12b
   31410:	45 0f b6 e4          	movzbl %r12b,%r12d
   31414:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3141b:	00 00 00 00 
   3141f:	90                   	nop
   31420:	48 89 cd             	mov    %rcx,%rbp
   31423:	4c 31 e5             	xor    %r12,%rbp
   31426:	48 89 ea             	mov    %rbp,%rdx
   31429:	48 83 ed 01          	sub    $0x1,%rbp
   3142d:	48 f7 d2             	not    %rdx
   31430:	48 21 ea             	and    %rbp,%rdx
   31433:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31437:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   3143b:	48 83 c1 01          	add    $0x1,%rcx
   3143f:	49 09 d5             	or     %rdx,%r13
   31442:	48 83 f9 20          	cmp    $0x20,%rcx
   31446:	75 d8                	jne    31420 <y8_ExpandRijndaelKey+0x2a0>
   31448:	41 83 e6 07          	and    $0x7,%r14d
   3144c:	42 8d 0c f5 00 00 00 	lea    0x0(,%r14,8),%ecx
   31453:	00 
   31454:	45 31 f6             	xor    %r14d,%r14d
   31457:	49 d3 ed             	shr    %cl,%r13
   3145a:	31 c9                	xor    %ecx,%ecx
   3145c:	45 89 ef             	mov    %r13d,%r15d
   3145f:	41 89 fd             	mov    %edi,%r13d
   31462:	41 c1 ed 10          	shr    $0x10,%r13d
   31466:	41 c1 e7 18          	shl    $0x18,%r15d
   3146a:	45 89 ec             	mov    %r13d,%r12d
   3146d:	41 c0 ec 03          	shr    $0x3,%r12b
   31471:	45 0f b6 e4          	movzbl %r12b,%r12d
   31475:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3147c:	00 00 00 00 
   31480:	48 89 cd             	mov    %rcx,%rbp
   31483:	4c 31 e5             	xor    %r12,%rbp
   31486:	48 89 ea             	mov    %rbp,%rdx
   31489:	48 83 ed 01          	sub    $0x1,%rbp
   3148d:	48 f7 d2             	not    %rdx
   31490:	48 21 ea             	and    %rbp,%rdx
   31493:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31497:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   3149b:	48 83 c1 01          	add    $0x1,%rcx
   3149f:	49 09 d6             	or     %rdx,%r14
   314a2:	48 83 f9 20          	cmp    $0x20,%rcx
   314a6:	75 d8                	jne    31480 <y8_ExpandRijndaelKey+0x300>
   314a8:	41 83 e5 07          	and    $0x7,%r13d
   314ac:	42 8d 0c ed 00 00 00 	lea    0x0(,%r13,8),%ecx
   314b3:	00 
   314b4:	49 d3 ee             	shr    %cl,%r14
   314b7:	31 c9                	xor    %ecx,%ecx
   314b9:	45 0f b6 e6          	movzbl %r14b,%r12d
   314bd:	41 c1 e4 10          	shl    $0x10,%r12d
   314c1:	45 89 e5             	mov    %r12d,%r13d
   314c4:	45 31 e4             	xor    %r12d,%r12d
   314c7:	45 09 fd             	or     %r15d,%r13d
   314ca:	41 89 ff             	mov    %edi,%r15d
   314cd:	41 c1 ef 08          	shr    $0x8,%r15d
   314d1:	45 89 fe             	mov    %r15d,%r14d
   314d4:	41 c0 ee 03          	shr    $0x3,%r14b
   314d8:	45 0f b6 f6          	movzbl %r14b,%r14d
   314dc:	0f 1f 40 00          	nopl   0x0(%rax)
   314e0:	48 89 cd             	mov    %rcx,%rbp
   314e3:	4c 31 f5             	xor    %r14,%rbp
   314e6:	48 89 ea             	mov    %rbp,%rdx
   314e9:	48 83 ed 01          	sub    $0x1,%rbp
   314ed:	48 f7 d2             	not    %rdx
   314f0:	48 21 ea             	and    %rbp,%rdx
   314f3:	48 c1 fa 3f          	sar    $0x3f,%rdx
   314f7:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   314fb:	48 83 c1 01          	add    $0x1,%rcx
   314ff:	49 09 d4             	or     %rdx,%r12
   31502:	48 83 f9 20          	cmp    $0x20,%rcx
   31506:	75 d8                	jne    314e0 <y8_ExpandRijndaelKey+0x360>
   31508:	41 83 e7 07          	and    $0x7,%r15d
   3150c:	41 89 fe             	mov    %edi,%r14d
   3150f:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31516:	00 
   31517:	41 c0 ee 03          	shr    $0x3,%r14b
   3151b:	41 89 ff             	mov    %edi,%r15d
   3151e:	49 d3 ec             	shr    %cl,%r12
   31521:	45 0f b6 f6          	movzbl %r14b,%r14d
   31525:	31 c9                	xor    %ecx,%ecx
   31527:	45 0f b6 e4          	movzbl %r12b,%r12d
   3152b:	41 c1 e4 08          	shl    $0x8,%r12d
   3152f:	45 09 ec             	or     %r13d,%r12d
   31532:	45 31 ed             	xor    %r13d,%r13d
   31535:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3153c:	00 00 00 00 
   31540:	48 89 cd             	mov    %rcx,%rbp
   31543:	4c 31 f5             	xor    %r14,%rbp
   31546:	48 89 ea             	mov    %rbp,%rdx
   31549:	48 83 ed 01          	sub    $0x1,%rbp
   3154d:	48 f7 d2             	not    %rdx
   31550:	48 21 ea             	and    %rbp,%rdx
   31553:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31557:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   3155b:	48 83 c1 01          	add    $0x1,%rcx
   3155f:	49 09 d5             	or     %rdx,%r13
   31562:	48 83 f9 20          	cmp    $0x20,%rcx
   31566:	75 d8                	jne    31540 <y8_ExpandRijndaelKey+0x3c0>
   31568:	41 83 e7 07          	and    $0x7,%r15d
   3156c:	66 0f 6e 44 24 d0    	movd   -0x30(%rsp),%xmm0
   31572:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31579:	00 
   3157a:	66 0f 6e 4c 24 d8    	movd   -0x28(%rsp),%xmm1
   31580:	66 41 0f 3a 22 c2 01 	pinsrd $0x1,%r10d,%xmm0
   31587:	48 83 44 24 e0 04    	addq   $0x4,-0x20(%rsp)
   3158d:	49 d3 ed             	shr    %cl,%r13
   31590:	45 0f b6 ed          	movzbl %r13b,%r13d
   31594:	48 63 4c 24 e8       	movslq -0x18(%rsp),%rcx
   31599:	66 0f 3a 22 cf 01    	pinsrd $0x1,%edi,%xmm1
   3159f:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
   315a3:	45 09 ec             	or     %r13d,%r12d
   315a6:	45 31 e0             	xor    %r12d,%r8d
   315a9:	44 31 c3             	xor    %r8d,%ebx
   315ac:	41 31 db             	xor    %ebx,%r11d
   315af:	49 89 cf             	mov    %rcx,%r15
   315b2:	41 0f 11 04 89       	movups %xmm0,(%r9,%rcx,4)
   315b7:	48 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%rdx
   315be:	00 
   315bf:	44 31 de             	xor    %r11d,%esi
   315c2:	41 83 c7 08          	add    $0x8,%r15d
   315c6:	45 89 44 11 10       	mov    %r8d,0x10(%r9,%rdx,1)
   315cb:	41 89 5c 11 14       	mov    %ebx,0x14(%r9,%rdx,1)
   315d0:	45 89 5c 11 18       	mov    %r11d,0x18(%r9,%rdx,1)
   315d5:	41 89 74 11 1c       	mov    %esi,0x1c(%r9,%rdx,1)
   315da:	44 89 7c 24 e8       	mov    %r15d,-0x18(%rsp)
   315df:	44 39 7c 24 dc       	cmp    %r15d,-0x24(%rsp)
   315e4:	0f 8f 76 fc ff ff    	jg     31260 <y8_ExpandRijndaelKey+0xe0>
   315ea:	8b 54 24 dc          	mov    -0x24(%rsp),%edx
   315ee:	c1 e2 02             	shl    $0x2,%edx
   315f1:	85 d2                	test   %edx,%edx
   315f3:	0f 8e 9b 01 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   315f9:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   315fe:	8d 42 ff             	lea    -0x1(%rdx),%eax
   31601:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   31605:	49 39 c9             	cmp    %rcx,%r9
   31608:	49 8d 49 10          	lea    0x10(%r9),%rcx
   3160c:	40 0f 93 c6          	setae  %sil
   31610:	48 39 cb             	cmp    %rcx,%rbx
   31613:	0f 93 c1             	setae  %cl
   31616:	40 08 ce             	or     %cl,%sil
   31619:	0f 84 00 09 00 00    	je     31f1f <y8_ExpandRijndaelKey+0xd9f>
   3161f:	83 f8 0e             	cmp    $0xe,%eax
   31622:	0f 86 f7 08 00 00    	jbe    31f1f <y8_ExpandRijndaelKey+0xd9f>
   31628:	89 d1                	mov    %edx,%ecx
   3162a:	31 c0                	xor    %eax,%eax
   3162c:	48 89 de             	mov    %rbx,%rsi
   3162f:	c1 e9 04             	shr    $0x4,%ecx
   31632:	48 c1 e1 04          	shl    $0x4,%rcx
   31636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3163d:	00 00 00 
   31640:	f3 41 0f 6f 24 01    	movdqu (%r9,%rax,1),%xmm4
   31646:	0f 11 24 06          	movups %xmm4,(%rsi,%rax,1)
   3164a:	48 83 c0 10          	add    $0x10,%rax
   3164e:	48 39 c8             	cmp    %rcx,%rax
   31651:	75 ed                	jne    31640 <y8_ExpandRijndaelKey+0x4c0>
   31653:	89 d0                	mov    %edx,%eax
   31655:	83 e0 f0             	and    $0xfffffff0,%eax
   31658:	39 d0                	cmp    %edx,%eax
   3165a:	0f 84 34 01 00 00    	je     31794 <y8_ExpandRijndaelKey+0x614>
   31660:	89 c1                	mov    %eax,%ecx
   31662:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   31667:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   3166c:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31670:	8d 48 01             	lea    0x1(%rax),%ecx
   31673:	39 ca                	cmp    %ecx,%edx
   31675:	0f 8e 19 01 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   3167b:	48 63 c9             	movslq %ecx,%rcx
   3167e:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   31683:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31687:	8d 48 02             	lea    0x2(%rax),%ecx
   3168a:	39 ca                	cmp    %ecx,%edx
   3168c:	0f 8e 02 01 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   31692:	48 63 c9             	movslq %ecx,%rcx
   31695:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   3169a:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   3169e:	8d 48 03             	lea    0x3(%rax),%ecx
   316a1:	39 ca                	cmp    %ecx,%edx
   316a3:	0f 8e eb 00 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   316a9:	48 63 c9             	movslq %ecx,%rcx
   316ac:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   316b1:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   316b5:	8d 48 04             	lea    0x4(%rax),%ecx
   316b8:	39 ca                	cmp    %ecx,%edx
   316ba:	0f 8e d4 00 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   316c0:	48 63 c9             	movslq %ecx,%rcx
   316c3:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   316c8:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   316cc:	8d 48 05             	lea    0x5(%rax),%ecx
   316cf:	39 ca                	cmp    %ecx,%edx
   316d1:	0f 8e bd 00 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   316d7:	48 63 c9             	movslq %ecx,%rcx
   316da:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   316df:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   316e3:	8d 48 06             	lea    0x6(%rax),%ecx
   316e6:	39 ca                	cmp    %ecx,%edx
   316e8:	0f 8e a6 00 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   316ee:	48 63 c9             	movslq %ecx,%rcx
   316f1:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   316f6:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   316fa:	8d 48 07             	lea    0x7(%rax),%ecx
   316fd:	39 ca                	cmp    %ecx,%edx
   316ff:	0f 8e 8f 00 00 00    	jle    31794 <y8_ExpandRijndaelKey+0x614>
   31705:	48 63 c9             	movslq %ecx,%rcx
   31708:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   3170d:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31711:	8d 48 08             	lea    0x8(%rax),%ecx
   31714:	39 ca                	cmp    %ecx,%edx
   31716:	7e 7c                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   31718:	48 63 c9             	movslq %ecx,%rcx
   3171b:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   31720:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31724:	8d 48 09             	lea    0x9(%rax),%ecx
   31727:	39 ca                	cmp    %ecx,%edx
   31729:	7e 69                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   3172b:	48 63 c9             	movslq %ecx,%rcx
   3172e:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   31733:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31737:	8d 48 0a             	lea    0xa(%rax),%ecx
   3173a:	39 ca                	cmp    %ecx,%edx
   3173c:	7e 56                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   3173e:	48 63 c9             	movslq %ecx,%rcx
   31741:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   31746:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   3174a:	8d 48 0b             	lea    0xb(%rax),%ecx
   3174d:	39 ca                	cmp    %ecx,%edx
   3174f:	7e 43                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   31751:	48 63 c9             	movslq %ecx,%rcx
   31754:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   31759:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   3175d:	8d 48 0c             	lea    0xc(%rax),%ecx
   31760:	39 ca                	cmp    %ecx,%edx
   31762:	7e 30                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   31764:	48 63 c9             	movslq %ecx,%rcx
   31767:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   3176c:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31770:	8d 48 0d             	lea    0xd(%rax),%ecx
   31773:	39 ca                	cmp    %ecx,%edx
   31775:	7e 1d                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   31777:	48 63 c9             	movslq %ecx,%rcx
   3177a:	83 c0 0e             	add    $0xe,%eax
   3177d:	41 0f b6 34 09       	movzbl (%r9,%rcx,1),%esi
   31782:	40 88 34 0b          	mov    %sil,(%rbx,%rcx,1)
   31786:	39 c2                	cmp    %eax,%edx
   31788:	7e 0a                	jle    31794 <y8_ExpandRijndaelKey+0x614>
   3178a:	48 98                	cltq   
   3178c:	41 0f b6 14 01       	movzbl (%r9,%rax,1),%edx
   31791:	88 14 03             	mov    %dl,(%rbx,%rax,1)
   31794:	8b 74 24 f4          	mov    -0xc(%rsp),%esi
   31798:	8b 44 24 f0          	mov    -0x10(%rsp),%eax
   3179c:	0f af f0             	imul   %eax,%esi
   3179f:	39 c6                	cmp    %eax,%esi
   317a1:	0f 8e 87 03 00 00    	jle    31b2e <y8_ExpandRijndaelKey+0x9ae>
   317a7:	89 f7                	mov    %esi,%edi
   317a9:	89 c3                	mov    %eax,%ebx
   317ab:	29 c7                	sub    %eax,%edi
   317ad:	8d 47 ff             	lea    -0x1(%rdi),%eax
   317b0:	83 f8 02             	cmp    $0x2,%eax
   317b3:	0f 86 69 01 00 00    	jbe    31922 <y8_ExpandRijndaelKey+0x7a2>
   317b9:	48 63 c3             	movslq %ebx,%rax
   317bc:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   317c1:	89 f9                	mov    %edi,%ecx
   317c3:	c1 e9 02             	shr    $0x2,%ecx
   317c6:	66 0f 6f 35 92 d3 00 	movdqa 0xd392(%rip),%xmm6        # 3eb60 <RconTbl+0x80>
   317cd:	00 
   317ce:	66 0f 6f 2d 9a d3 00 	movdqa 0xd39a(%rip),%xmm5        # 3eb70 <RconTbl+0x90>
   317d5:	00 
   317d6:	48 c1 e1 04          	shl    $0x4,%rcx
   317da:	66 0f 6f 25 9e d3 00 	movdqa 0xd39e(%rip),%xmm4        # 3eb80 <RconTbl+0xa0>
   317e1:	00 
   317e2:	48 8d 14 83          	lea    (%rbx,%rax,4),%rdx
   317e6:	31 c0                	xor    %eax,%eax
   317e8:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   317ef:	00 00 00 00 
   317f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   317fa:	00 00 00 00 
   317fe:	66 90                	xchg   %ax,%ax
   31800:	f3 0f 6f 14 02       	movdqu (%rdx,%rax,1),%xmm2
   31805:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   31809:	66 0f 6f da          	movdqa %xmm2,%xmm3
   3180d:	66 0f db ce          	pand   %xmm6,%xmm1
   31811:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   31815:	66 0f 72 d1 07       	psrld  $0x7,%xmm1
   3181a:	66 0f 72 f0 01       	pslld  $0x1,%xmm0
   3181f:	66 0f fa c1          	psubd  %xmm1,%xmm0
   31823:	66 0f 72 f3 01       	pslld  $0x1,%xmm3
   31828:	66 0f db c5          	pand   %xmm5,%xmm0
   3182c:	66 0f db dc          	pand   %xmm4,%xmm3
   31830:	66 0f ef d8          	pxor   %xmm0,%xmm3
   31834:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   31838:	66 0f db ce          	pand   %xmm6,%xmm1
   3183c:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   31840:	66 0f 6f fb          	movdqa %xmm3,%xmm7
   31844:	66 44 0f 6f c3       	movdqa %xmm3,%xmm8
   31849:	66 0f 72 d1 07       	psrld  $0x7,%xmm1
   3184e:	66 44 0f ef c2       	pxor   %xmm2,%xmm8
   31853:	66 0f 72 f0 01       	pslld  $0x1,%xmm0
   31858:	66 0f fa c1          	psubd  %xmm1,%xmm0
   3185c:	66 0f 72 f7 01       	pslld  $0x1,%xmm7
   31861:	66 0f db c5          	pand   %xmm5,%xmm0
   31865:	66 0f db fc          	pand   %xmm4,%xmm7
   31869:	66 0f ef f8          	pxor   %xmm0,%xmm7
   3186d:	66 0f 6f c7          	movdqa %xmm7,%xmm0
   31871:	66 0f db c6          	pand   %xmm6,%xmm0
   31875:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   31879:	66 0f 72 d0 07       	psrld  $0x7,%xmm0
   3187e:	66 0f 72 f1 01       	pslld  $0x1,%xmm1
   31883:	66 0f fa c8          	psubd  %xmm0,%xmm1
   31887:	66 0f 6f c7          	movdqa %xmm7,%xmm0
   3188b:	66 0f 72 f0 01       	pslld  $0x1,%xmm0
   31890:	66 0f db cd          	pand   %xmm5,%xmm1
   31894:	66 0f db c4          	pand   %xmm4,%xmm0
   31898:	66 0f ef c1          	pxor   %xmm1,%xmm0
   3189c:	66 44 0f 6f c8       	movdqa %xmm0,%xmm9
   318a1:	66 44 0f ef c0       	pxor   %xmm0,%xmm8
   318a6:	66 44 0f ef ca       	pxor   %xmm2,%xmm9
   318ab:	66 0f ef c7          	pxor   %xmm7,%xmm0
   318af:	66 41 0f 6f c9       	movdqa %xmm9,%xmm1
   318b4:	66 41 0f 6f f8       	movdqa %xmm8,%xmm7
   318b9:	66 0f 72 f1 08       	pslld  $0x8,%xmm1
   318be:	66 0f ef d0          	pxor   %xmm0,%xmm2
   318c2:	66 0f ef c3          	pxor   %xmm3,%xmm0
   318c6:	66 41 0f 72 d1 18    	psrld  $0x18,%xmm9
   318cc:	66 0f 72 f7 18       	pslld  $0x18,%xmm7
   318d1:	66 41 0f eb c9       	por    %xmm9,%xmm1
   318d6:	66 41 0f 72 d0 08    	psrld  $0x8,%xmm8
   318dc:	66 44 0f eb c7       	por    %xmm7,%xmm8
   318e1:	66 41 0f ef c8       	pxor   %xmm8,%xmm1
   318e6:	66 0f ef c1          	pxor   %xmm1,%xmm0
   318ea:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   318ee:	66 0f 72 f1 10       	pslld  $0x10,%xmm1
   318f3:	66 0f 72 d2 10       	psrld  $0x10,%xmm2
   318f8:	66 0f eb d1          	por    %xmm1,%xmm2
   318fc:	66 0f ef c2          	pxor   %xmm2,%xmm0
   31900:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
   31904:	48 83 c0 10          	add    $0x10,%rax
   31908:	48 39 c8             	cmp    %rcx,%rax
   3190b:	0f 85 ef fe ff ff    	jne    31800 <y8_ExpandRijndaelKey+0x680>
   31911:	89 f8                	mov    %edi,%eax
   31913:	83 e0 fc             	and    $0xfffffffc,%eax
   31916:	01 44 24 f0          	add    %eax,-0x10(%rsp)
   3191a:	39 f8                	cmp    %edi,%eax
   3191c:	0f 84 0c 02 00 00    	je     31b2e <y8_ExpandRijndaelKey+0x9ae>
   31922:	48 63 44 24 f0       	movslq -0x10(%rsp),%rax
   31927:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   3192c:	48 89 c3             	mov    %rax,%rbx
   3192f:	48 8d 0c 87          	lea    (%rdi,%rax,4),%rcx
   31933:	8b 39                	mov    (%rcx),%edi
   31935:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
   31939:	89 f8                	mov    %edi,%eax
   3193b:	25 80 80 80 80       	and    $0x80808080,%eax
   31940:	44 89 ca             	mov    %r9d,%edx
   31943:	44 8d 0c 00          	lea    (%rax,%rax,1),%r9d
   31947:	c1 e8 07             	shr    $0x7,%eax
   3194a:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   31950:	41 29 c1             	sub    %eax,%r9d
   31953:	41 81 e1 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r9d
   3195a:	41 31 d1             	xor    %edx,%r9d
   3195d:	47 8d 04 09          	lea    (%r9,%r9,1),%r8d
   31961:	44 89 c8             	mov    %r9d,%eax
   31964:	25 80 80 80 80       	and    $0x80808080,%eax
   31969:	44 89 c2             	mov    %r8d,%edx
   3196c:	44 8d 04 00          	lea    (%rax,%rax,1),%r8d
   31970:	c1 e8 07             	shr    $0x7,%eax
   31973:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   31979:	41 29 c0             	sub    %eax,%r8d
   3197c:	41 81 e0 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r8d
   31983:	41 31 d0             	xor    %edx,%r8d
   31986:	43 8d 04 00          	lea    (%r8,%r8,1),%eax
   3198a:	44 89 c2             	mov    %r8d,%edx
   3198d:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   31992:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   31998:	41 89 c2             	mov    %eax,%r10d
   3199b:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   3199e:	c1 ea 07             	shr    $0x7,%edx
   319a1:	29 d0                	sub    %edx,%eax
   319a3:	89 fa                	mov    %edi,%edx
   319a5:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   319aa:	44 31 ca             	xor    %r9d,%edx
   319ad:	44 31 d0             	xor    %r10d,%eax
   319b0:	41 31 c0             	xor    %eax,%r8d
   319b3:	31 c2                	xor    %eax,%edx
   319b5:	31 f8                	xor    %edi,%eax
   319b7:	c1 ca 08             	ror    $0x8,%edx
   319ba:	45 31 c1             	xor    %r8d,%r9d
   319bd:	c1 c0 08             	rol    $0x8,%eax
   319c0:	44 31 ca             	xor    %r9d,%edx
   319c3:	44 31 c7             	xor    %r8d,%edi
   319c6:	31 d0                	xor    %edx,%eax
   319c8:	c1 c7 10             	rol    $0x10,%edi
   319cb:	31 f8                	xor    %edi,%eax
   319cd:	89 01                	mov    %eax,(%rcx)
   319cf:	8d 43 01             	lea    0x1(%rbx),%eax
   319d2:	39 c6                	cmp    %eax,%esi
   319d4:	0f 8e 54 01 00 00    	jle    31b2e <y8_ExpandRijndaelKey+0x9ae>
   319da:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   319df:	48 98                	cltq   
   319e1:	48 8d 0c 87          	lea    (%rdi,%rax,4),%rcx
   319e5:	8b 39                	mov    (%rcx),%edi
   319e7:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
   319eb:	89 f8                	mov    %edi,%eax
   319ed:	25 80 80 80 80       	and    $0x80808080,%eax
   319f2:	44 89 ca             	mov    %r9d,%edx
   319f5:	44 8d 0c 00          	lea    (%rax,%rax,1),%r9d
   319f9:	c1 e8 07             	shr    $0x7,%eax
   319fc:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   31a02:	41 29 c1             	sub    %eax,%r9d
   31a05:	41 81 e1 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r9d
   31a0c:	41 31 d1             	xor    %edx,%r9d
   31a0f:	47 8d 04 09          	lea    (%r9,%r9,1),%r8d
   31a13:	44 89 c8             	mov    %r9d,%eax
   31a16:	25 80 80 80 80       	and    $0x80808080,%eax
   31a1b:	44 89 c2             	mov    %r8d,%edx
   31a1e:	44 8d 04 00          	lea    (%rax,%rax,1),%r8d
   31a22:	c1 e8 07             	shr    $0x7,%eax
   31a25:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   31a2b:	41 29 c0             	sub    %eax,%r8d
   31a2e:	41 81 e0 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r8d
   31a35:	41 31 d0             	xor    %edx,%r8d
   31a38:	43 8d 04 00          	lea    (%r8,%r8,1),%eax
   31a3c:	44 89 c2             	mov    %r8d,%edx
   31a3f:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   31a44:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   31a4a:	41 89 c2             	mov    %eax,%r10d
   31a4d:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   31a50:	c1 ea 07             	shr    $0x7,%edx
   31a53:	29 d0                	sub    %edx,%eax
   31a55:	89 fa                	mov    %edi,%edx
   31a57:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   31a5c:	44 31 ca             	xor    %r9d,%edx
   31a5f:	44 31 d0             	xor    %r10d,%eax
   31a62:	41 31 c0             	xor    %eax,%r8d
   31a65:	31 c2                	xor    %eax,%edx
   31a67:	31 f8                	xor    %edi,%eax
   31a69:	c1 ca 08             	ror    $0x8,%edx
   31a6c:	45 31 c1             	xor    %r8d,%r9d
   31a6f:	c1 c0 08             	rol    $0x8,%eax
   31a72:	44 31 ca             	xor    %r9d,%edx
   31a75:	44 31 c7             	xor    %r8d,%edi
   31a78:	31 d0                	xor    %edx,%eax
   31a7a:	c1 c7 10             	rol    $0x10,%edi
   31a7d:	31 f8                	xor    %edi,%eax
   31a7f:	89 01                	mov    %eax,(%rcx)
   31a81:	89 d8                	mov    %ebx,%eax
   31a83:	83 c0 02             	add    $0x2,%eax
   31a86:	39 c6                	cmp    %eax,%esi
   31a88:	0f 8e a0 00 00 00    	jle    31b2e <y8_ExpandRijndaelKey+0x9ae>
   31a8e:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   31a93:	48 98                	cltq   
   31a95:	48 8d 34 83          	lea    (%rbx,%rax,4),%rsi
   31a99:	8b 3e                	mov    (%rsi),%edi
   31a9b:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
   31a9e:	89 f8                	mov    %edi,%eax
   31aa0:	81 e1 fe fe fe fe    	and    $0xfefefefe,%ecx
   31aa6:	25 80 80 80 80       	and    $0x80808080,%eax
   31aab:	89 ca                	mov    %ecx,%edx
   31aad:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   31ab0:	c1 e8 07             	shr    $0x7,%eax
   31ab3:	29 c1                	sub    %eax,%ecx
   31ab5:	81 e1 1b 1b 1b 1b    	and    $0x1b1b1b1b,%ecx
   31abb:	31 d1                	xor    %edx,%ecx
   31abd:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   31ac0:	89 ca                	mov    %ecx,%edx
   31ac2:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   31ac7:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   31acd:	41 89 c0             	mov    %eax,%r8d
   31ad0:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   31ad3:	c1 ea 07             	shr    $0x7,%edx
   31ad6:	29 d0                	sub    %edx,%eax
   31ad8:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   31add:	44 31 c0             	xor    %r8d,%eax
   31ae0:	8d 14 00             	lea    (%rax,%rax,1),%edx
   31ae3:	41 89 c0             	mov    %eax,%r8d
   31ae6:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   31aec:	41 81 e0 80 80 80 80 	and    $0x80808080,%r8d
   31af3:	41 89 d1             	mov    %edx,%r9d
   31af6:	43 8d 14 00          	lea    (%r8,%r8,1),%edx
   31afa:	41 c1 e8 07          	shr    $0x7,%r8d
   31afe:	44 29 c2             	sub    %r8d,%edx
   31b01:	41 89 c8             	mov    %ecx,%r8d
   31b04:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   31b0a:	41 31 f8             	xor    %edi,%r8d
   31b0d:	44 31 ca             	xor    %r9d,%edx
   31b10:	31 d0                	xor    %edx,%eax
   31b12:	41 31 d0             	xor    %edx,%r8d
   31b15:	31 fa                	xor    %edi,%edx
   31b17:	41 c1 c8 08          	ror    $0x8,%r8d
   31b1b:	31 c1                	xor    %eax,%ecx
   31b1d:	c1 c2 08             	rol    $0x8,%edx
   31b20:	44 31 c1             	xor    %r8d,%ecx
   31b23:	31 f8                	xor    %edi,%eax
   31b25:	31 ca                	xor    %ecx,%edx
   31b27:	c1 c0 10             	rol    $0x10,%eax
   31b2a:	31 d0                	xor    %edx,%eax
   31b2c:	89 06                	mov    %eax,(%rsi)
   31b2e:	5b                   	pop    %rbx
   31b2f:	5d                   	pop    %rbp
   31b30:	41 5c                	pop    %r12
   31b32:	41 5d                	pop    %r13
   31b34:	41 5e                	pop    %r14
   31b36:	41 5f                	pop    %r15
   31b38:	c3                   	retq   
   31b39:	83 7c 24 dc 06       	cmpl   $0x6,-0x24(%rsp)
   31b3e:	0f 8e a6 fa ff ff    	jle    315ea <y8_ExpandRijndaelKey+0x46a>
   31b44:	48 8d 05 95 cf 00 00 	lea    0xcf95(%rip),%rax        # 3eae0 <RconTbl>
   31b4b:	48 89 44 24 d0       	mov    %rax,-0x30(%rsp)
   31b50:	48 8d 05 e9 d2 00 00 	lea    0xd2e9(%rip),%rax        # 3ee40 <RijEncSbox>
   31b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   31b5e:	00 00 
   31b60:	41 89 dd             	mov    %ebx,%r13d
   31b63:	41 89 de             	mov    %ebx,%r14d
   31b66:	31 c9                	xor    %ecx,%ecx
   31b68:	41 c0 ed 03          	shr    $0x3,%r13b
   31b6c:	45 31 e4             	xor    %r12d,%r12d
   31b6f:	45 0f b6 ed          	movzbl %r13b,%r13d
   31b73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31b7a:	00 00 00 00 
   31b7e:	66 90                	xchg   %ax,%ax
   31b80:	48 89 cd             	mov    %rcx,%rbp
   31b83:	4c 31 ed             	xor    %r13,%rbp
   31b86:	48 89 ea             	mov    %rbp,%rdx
   31b89:	48 83 ed 01          	sub    $0x1,%rbp
   31b8d:	48 f7 d2             	not    %rdx
   31b90:	48 21 ea             	and    %rbp,%rdx
   31b93:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31b97:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31b9b:	48 83 c1 01          	add    $0x1,%rcx
   31b9f:	49 09 d4             	or     %rdx,%r12
   31ba2:	48 83 f9 20          	cmp    $0x20,%rcx
   31ba6:	75 d8                	jne    31b80 <y8_ExpandRijndaelKey+0xa00>
   31ba8:	41 83 e6 07          	and    $0x7,%r14d
   31bac:	41 89 dd             	mov    %ebx,%r13d
   31baf:	42 8d 0c f5 00 00 00 	lea    0x0(,%r14,8),%ecx
   31bb6:	00 
   31bb7:	41 c1 ed 18          	shr    $0x18,%r13d
   31bbb:	45 31 f6             	xor    %r14d,%r14d
   31bbe:	49 d3 ec             	shr    %cl,%r12
   31bc1:	31 c9                	xor    %ecx,%ecx
   31bc3:	45 89 e7             	mov    %r12d,%r15d
   31bc6:	45 89 ec             	mov    %r13d,%r12d
   31bc9:	41 c0 ec 03          	shr    $0x3,%r12b
   31bcd:	41 c1 e7 18          	shl    $0x18,%r15d
   31bd1:	45 0f b6 e4          	movzbl %r12b,%r12d
   31bd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31bdc:	00 00 00 00 
   31be0:	48 89 cd             	mov    %rcx,%rbp
   31be3:	4c 31 e5             	xor    %r12,%rbp
   31be6:	48 89 ea             	mov    %rbp,%rdx
   31be9:	48 83 ed 01          	sub    $0x1,%rbp
   31bed:	48 f7 d2             	not    %rdx
   31bf0:	48 21 ea             	and    %rbp,%rdx
   31bf3:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31bf7:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31bfb:	48 83 c1 01          	add    $0x1,%rcx
   31bff:	49 09 d6             	or     %rdx,%r14
   31c02:	48 83 f9 20          	cmp    $0x20,%rcx
   31c06:	75 d8                	jne    31be0 <y8_ExpandRijndaelKey+0xa60>
   31c08:	41 83 e5 07          	and    $0x7,%r13d
   31c0c:	42 8d 0c ed 00 00 00 	lea    0x0(,%r13,8),%ecx
   31c13:	00 
   31c14:	49 d3 ee             	shr    %cl,%r14
   31c17:	31 c9                	xor    %ecx,%ecx
   31c19:	45 0f b6 ee          	movzbl %r14b,%r13d
   31c1d:	41 c1 e5 10          	shl    $0x10,%r13d
   31c21:	45 09 fd             	or     %r15d,%r13d
   31c24:	41 89 df             	mov    %ebx,%r15d
   31c27:	41 c1 ef 10          	shr    $0x10,%r15d
   31c2b:	45 89 ec             	mov    %r13d,%r12d
   31c2e:	45 31 ed             	xor    %r13d,%r13d
   31c31:	45 89 fe             	mov    %r15d,%r14d
   31c34:	41 c0 ee 03          	shr    $0x3,%r14b
   31c38:	45 0f b6 f6          	movzbl %r14b,%r14d
   31c3c:	0f 1f 40 00          	nopl   0x0(%rax)
   31c40:	48 89 cd             	mov    %rcx,%rbp
   31c43:	4c 31 f5             	xor    %r14,%rbp
   31c46:	48 89 ea             	mov    %rbp,%rdx
   31c49:	48 83 ed 01          	sub    $0x1,%rbp
   31c4d:	48 f7 d2             	not    %rdx
   31c50:	48 21 ea             	and    %rbp,%rdx
   31c53:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31c57:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31c5b:	48 83 c1 01          	add    $0x1,%rcx
   31c5f:	49 09 d5             	or     %rdx,%r13
   31c62:	48 83 f9 20          	cmp    $0x20,%rcx
   31c66:	75 d8                	jne    31c40 <y8_ExpandRijndaelKey+0xac0>
   31c68:	41 83 e7 07          	and    $0x7,%r15d
   31c6c:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31c73:	00 
   31c74:	41 89 df             	mov    %ebx,%r15d
   31c77:	49 d3 ed             	shr    %cl,%r13
   31c7a:	41 c1 ef 08          	shr    $0x8,%r15d
   31c7e:	31 c9                	xor    %ecx,%ecx
   31c80:	45 0f b6 ed          	movzbl %r13b,%r13d
   31c84:	45 89 fe             	mov    %r15d,%r14d
   31c87:	41 c1 e5 08          	shl    $0x8,%r13d
   31c8b:	41 c0 ee 03          	shr    $0x3,%r14b
   31c8f:	45 09 e5             	or     %r12d,%r13d
   31c92:	45 0f b6 f6          	movzbl %r14b,%r14d
   31c96:	45 31 e4             	xor    %r12d,%r12d
   31c99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31ca0:	48 89 cd             	mov    %rcx,%rbp
   31ca3:	4c 31 f5             	xor    %r14,%rbp
   31ca6:	48 89 ea             	mov    %rbp,%rdx
   31ca9:	48 83 ed 01          	sub    $0x1,%rbp
   31cad:	48 f7 d2             	not    %rdx
   31cb0:	48 21 ea             	and    %rbp,%rdx
   31cb3:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31cb7:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31cbb:	48 83 c1 01          	add    $0x1,%rcx
   31cbf:	49 09 d4             	or     %rdx,%r12
   31cc2:	48 83 f9 20          	cmp    $0x20,%rcx
   31cc6:	75 d8                	jne    31ca0 <y8_ExpandRijndaelKey+0xb20>
   31cc8:	48 83 44 24 d0 04    	addq   $0x4,-0x30(%rsp)
   31cce:	41 83 e7 07          	and    $0x7,%r15d
   31cd2:	4c 8b 74 24 d0       	mov    -0x30(%rsp),%r14
   31cd7:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31cde:	00 
   31cdf:	49 d3 ec             	shr    %cl,%r12
   31ce2:	48 63 ce             	movslq %esi,%rcx
   31ce5:	83 c6 06             	add    $0x6,%esi
   31ce8:	41 0f b6 d4          	movzbl %r12b,%edx
   31cec:	41 09 d5             	or     %edx,%r13d
   31cef:	45 33 6e fc          	xor    -0x4(%r14),%r13d
   31cf3:	48 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%rdx
   31cfa:	00 
   31cfb:	45 31 eb             	xor    %r13d,%r11d
   31cfe:	45 31 da             	xor    %r11d,%r10d
   31d01:	45 89 1c 89          	mov    %r11d,(%r9,%rcx,4)
   31d05:	45 31 d0             	xor    %r10d,%r8d
   31d08:	45 89 54 11 04       	mov    %r10d,0x4(%r9,%rdx,1)
   31d0d:	44 31 c7             	xor    %r8d,%edi
   31d10:	45 89 44 11 08       	mov    %r8d,0x8(%r9,%rdx,1)
   31d15:	31 7c 24 ec          	xor    %edi,-0x14(%rsp)
   31d19:	41 89 7c 11 0c       	mov    %edi,0xc(%r9,%rdx,1)
   31d1e:	44 8b 7c 24 ec       	mov    -0x14(%rsp),%r15d
   31d23:	44 31 fb             	xor    %r15d,%ebx
   31d26:	45 89 7c 11 10       	mov    %r15d,0x10(%r9,%rdx,1)
   31d2b:	41 89 5c 11 14       	mov    %ebx,0x14(%r9,%rdx,1)
   31d30:	39 74 24 dc          	cmp    %esi,-0x24(%rsp)
   31d34:	0f 8f 26 fe ff ff    	jg     31b60 <y8_ExpandRijndaelKey+0x9e0>
   31d3a:	e9 ab f8 ff ff       	jmpq   315ea <y8_ExpandRijndaelKey+0x46a>
   31d3f:	83 7c 24 dc 04       	cmpl   $0x4,-0x24(%rsp)
   31d44:	0f 8e a0 f8 ff ff    	jle    315ea <y8_ExpandRijndaelKey+0x46a>
   31d4a:	48 8d 05 ef d0 00 00 	lea    0xd0ef(%rip),%rax        # 3ee40 <RijEncSbox>
   31d51:	48 8d 1d 88 cd 00 00 	lea    0xcd88(%rip),%rbx        # 3eae0 <RconTbl>
   31d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   31d5f:	00 
   31d60:	89 fd                	mov    %edi,%ebp
   31d62:	41 89 fd             	mov    %edi,%r13d
   31d65:	31 c9                	xor    %ecx,%ecx
   31d67:	40 c0 ed 03          	shr    $0x3,%bpl
   31d6b:	45 31 e4             	xor    %r12d,%r12d
   31d6e:	40 0f b6 ed          	movzbl %bpl,%ebp
   31d72:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31d79:	00 00 00 00 
   31d7d:	0f 1f 00             	nopl   (%rax)
   31d80:	49 89 ce             	mov    %rcx,%r14
   31d83:	49 31 ee             	xor    %rbp,%r14
   31d86:	4c 89 f2             	mov    %r14,%rdx
   31d89:	49 83 ee 01          	sub    $0x1,%r14
   31d8d:	48 f7 d2             	not    %rdx
   31d90:	4c 21 f2             	and    %r14,%rdx
   31d93:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31d97:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31d9b:	48 83 c1 01          	add    $0x1,%rcx
   31d9f:	49 09 d4             	or     %rdx,%r12
   31da2:	48 83 f9 20          	cmp    $0x20,%rcx
   31da6:	75 d8                	jne    31d80 <y8_ExpandRijndaelKey+0xc00>
   31da8:	41 83 e5 07          	and    $0x7,%r13d
   31dac:	45 31 f6             	xor    %r14d,%r14d
   31daf:	42 8d 0c ed 00 00 00 	lea    0x0(,%r13,8),%ecx
   31db6:	00 
   31db7:	41 89 fd             	mov    %edi,%r13d
   31dba:	49 d3 ec             	shr    %cl,%r12
   31dbd:	41 c1 ed 18          	shr    $0x18,%r13d
   31dc1:	31 c9                	xor    %ecx,%ecx
   31dc3:	45 89 e7             	mov    %r12d,%r15d
   31dc6:	45 89 ec             	mov    %r13d,%r12d
   31dc9:	41 c0 ec 03          	shr    $0x3,%r12b
   31dcd:	41 c1 e7 18          	shl    $0x18,%r15d
   31dd1:	45 0f b6 e4          	movzbl %r12b,%r12d
   31dd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31ddc:	00 00 00 00 
   31de0:	48 89 cd             	mov    %rcx,%rbp
   31de3:	4c 31 e5             	xor    %r12,%rbp
   31de6:	48 89 ea             	mov    %rbp,%rdx
   31de9:	48 83 ed 01          	sub    $0x1,%rbp
   31ded:	48 f7 d2             	not    %rdx
   31df0:	48 21 ea             	and    %rbp,%rdx
   31df3:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31df7:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31dfb:	48 83 c1 01          	add    $0x1,%rcx
   31dff:	49 09 d6             	or     %rdx,%r14
   31e02:	48 83 f9 20          	cmp    $0x20,%rcx
   31e06:	75 d8                	jne    31de0 <y8_ExpandRijndaelKey+0xc60>
   31e08:	41 83 e5 07          	and    $0x7,%r13d
   31e0c:	42 8d 0c ed 00 00 00 	lea    0x0(,%r13,8),%ecx
   31e13:	00 
   31e14:	49 d3 ee             	shr    %cl,%r14
   31e17:	31 c9                	xor    %ecx,%ecx
   31e19:	45 0f b6 ee          	movzbl %r14b,%r13d
   31e1d:	41 c1 e5 10          	shl    $0x10,%r13d
   31e21:	45 09 fd             	or     %r15d,%r13d
   31e24:	41 89 ff             	mov    %edi,%r15d
   31e27:	41 c1 ef 10          	shr    $0x10,%r15d
   31e2b:	45 89 ec             	mov    %r13d,%r12d
   31e2e:	45 31 ed             	xor    %r13d,%r13d
   31e31:	45 89 fe             	mov    %r15d,%r14d
   31e34:	41 c0 ee 03          	shr    $0x3,%r14b
   31e38:	45 0f b6 f6          	movzbl %r14b,%r14d
   31e3c:	0f 1f 40 00          	nopl   0x0(%rax)
   31e40:	48 89 cd             	mov    %rcx,%rbp
   31e43:	4c 31 f5             	xor    %r14,%rbp
   31e46:	48 89 ea             	mov    %rbp,%rdx
   31e49:	48 83 ed 01          	sub    $0x1,%rbp
   31e4d:	48 f7 d2             	not    %rdx
   31e50:	48 21 ea             	and    %rbp,%rdx
   31e53:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31e57:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31e5b:	48 83 c1 01          	add    $0x1,%rcx
   31e5f:	49 09 d5             	or     %rdx,%r13
   31e62:	48 83 f9 20          	cmp    $0x20,%rcx
   31e66:	75 d8                	jne    31e40 <y8_ExpandRijndaelKey+0xcc0>
   31e68:	41 83 e7 07          	and    $0x7,%r15d
   31e6c:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31e73:	00 
   31e74:	41 89 ff             	mov    %edi,%r15d
   31e77:	49 d3 ed             	shr    %cl,%r13
   31e7a:	41 c1 ef 08          	shr    $0x8,%r15d
   31e7e:	31 c9                	xor    %ecx,%ecx
   31e80:	45 0f b6 ed          	movzbl %r13b,%r13d
   31e84:	45 89 fe             	mov    %r15d,%r14d
   31e87:	41 c1 e5 08          	shl    $0x8,%r13d
   31e8b:	41 c0 ee 03          	shr    $0x3,%r14b
   31e8f:	45 09 e5             	or     %r12d,%r13d
   31e92:	45 0f b6 f6          	movzbl %r14b,%r14d
   31e96:	45 31 e4             	xor    %r12d,%r12d
   31e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31ea0:	48 89 cd             	mov    %rcx,%rbp
   31ea3:	4c 31 f5             	xor    %r14,%rbp
   31ea6:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
   31eaa:	48 f7 d5             	not    %rbp
   31ead:	48 21 ea             	and    %rbp,%rdx
   31eb0:	48 c1 fa 3f          	sar    $0x3f,%rdx
   31eb4:	48 23 14 c8          	and    (%rax,%rcx,8),%rdx
   31eb8:	48 83 c1 01          	add    $0x1,%rcx
   31ebc:	49 09 d4             	or     %rdx,%r12
   31ebf:	48 83 f9 20          	cmp    $0x20,%rcx
   31ec3:	75 db                	jne    31ea0 <y8_ExpandRijndaelKey+0xd20>
   31ec5:	41 83 e7 07          	and    $0x7,%r15d
   31ec9:	48 83 c3 04          	add    $0x4,%rbx
   31ecd:	42 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%ecx
   31ed4:	00 
   31ed5:	49 d3 ec             	shr    %cl,%r12
   31ed8:	48 63 ce             	movslq %esi,%rcx
   31edb:	83 c6 04             	add    $0x4,%esi
   31ede:	48 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%rdx
   31ee5:	00 
   31ee6:	45 0f b6 e4          	movzbl %r12b,%r12d
   31eea:	45 09 e5             	or     %r12d,%r13d
   31eed:	44 33 6b fc          	xor    -0x4(%rbx),%r13d
   31ef1:	45 31 eb             	xor    %r13d,%r11d
   31ef4:	45 31 da             	xor    %r11d,%r10d
   31ef7:	45 89 1c 89          	mov    %r11d,(%r9,%rcx,4)
   31efb:	45 31 d0             	xor    %r10d,%r8d
   31efe:	45 89 54 11 04       	mov    %r10d,0x4(%r9,%rdx,1)
   31f03:	44 31 c7             	xor    %r8d,%edi
   31f06:	45 89 44 11 08       	mov    %r8d,0x8(%r9,%rdx,1)
   31f0b:	41 89 7c 11 0c       	mov    %edi,0xc(%r9,%rdx,1)
   31f10:	39 74 24 dc          	cmp    %esi,-0x24(%rsp)
   31f14:	0f 8f 46 fe ff ff    	jg     31d60 <y8_ExpandRijndaelKey+0xbe0>
   31f1a:	e9 cb f6 ff ff       	jmpq   315ea <y8_ExpandRijndaelKey+0x46a>
   31f1f:	89 c2                	mov    %eax,%edx
   31f21:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   31f26:	31 c0                	xor    %eax,%eax
   31f28:	eb 09                	jmp    31f33 <y8_ExpandRijndaelKey+0xdb3>
   31f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   31f30:	48 89 c8             	mov    %rcx,%rax
   31f33:	41 0f b6 0c 01       	movzbl (%r9,%rax,1),%ecx
   31f38:	88 0c 06             	mov    %cl,(%rsi,%rax,1)
   31f3b:	48 8d 48 01          	lea    0x1(%rax),%rcx
   31f3f:	48 39 d0             	cmp    %rdx,%rax
   31f42:	75 ec                	jne    31f30 <y8_ExpandRijndaelKey+0xdb0>
   31f44:	e9 4b f8 ff ff       	jmpq   31794 <y8_ExpandRijndaelKey+0x614>
   31f49:	45 8b 19             	mov    (%r9),%r11d
   31f4c:	45 8b 51 04          	mov    0x4(%r9),%r10d
   31f50:	45 8b 41 08          	mov    0x8(%r9),%r8d
   31f54:	41 8b 79 0c          	mov    0xc(%r9),%edi
   31f58:	e9 ac f2 ff ff       	jmpq   31209 <y8_ExpandRijndaelKey+0x89>
   31f5d:	0f 1f 00             	nopl   (%rax)

0000000000031f60 <y8_cpAESCMAC_Update_AES_NI>:
   31f60:	48 63 d2             	movslq %edx,%rdx
   31f63:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   31f67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   31f6e:	00 00 
   31f70:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   31f74:	66 41 0f 6f 20       	movdqa (%r8),%xmm4
   31f79:	4d 89 c1             	mov    %r8,%r9
   31f7c:	66 0f ef c1          	pxor   %xmm1,%xmm0
   31f80:	66 0f ef c4          	pxor   %xmm4,%xmm0
   31f84:	66 41 0f 6f 61 10    	movdqa 0x10(%r9),%xmm4
   31f8a:	49 83 c1 10          	add    $0x10,%r9
   31f8e:	49 89 ca             	mov    %rcx,%r10
   31f91:	49 83 ea 01          	sub    $0x1,%r10
   31f95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31f9c:	00 00 00 00 
   31fa0:	66 0f 38 dc c4       	aesenc %xmm4,%xmm0
   31fa5:	66 41 0f 6f 61 10    	movdqa 0x10(%r9),%xmm4
   31fab:	49 83 c1 10          	add    $0x10,%r9
   31faf:	49 ff ca             	dec    %r10
   31fb2:	75 ec                	jne    31fa0 <y8_cpAESCMAC_Update_AES_NI+0x40>
   31fb4:	66 0f 38 dd c4       	aesenclast %xmm4,%xmm0
   31fb9:	48 83 c6 10          	add    $0x10,%rsi
   31fbd:	48 83 ea 10          	sub    $0x10,%rdx
   31fc1:	75 ad                	jne    31f70 <y8_cpAESCMAC_Update_AES_NI+0x10>
   31fc3:	66 0f ef e4          	pxor   %xmm4,%xmm4
   31fc7:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   31fcb:	c3                   	retq   
   31fcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031fd0 <y8_Decrypt_RIJ128_AES_NI>:
   31fd0:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   31fd7:	00 
   31fd8:	48 8d 04 85 00 00 00 	lea    0x0(,%rax,4),%rax
   31fdf:	00 
   31fe0:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   31fe4:	66 0f ef 04 01       	pxor   (%rcx,%rax,1),%xmm0
   31fe9:	48 83 fa 0c          	cmp    $0xc,%rdx
   31fed:	7c 26                	jl     32015 <y8_Decrypt_RIJ128_AES_NI+0x45>
   31fef:	74 12                	je     32003 <y8_Decrypt_RIJ128_AES_NI+0x33>
   31ff1:	66 0f 38 de 81 d0 00 	aesdec 0xd0(%rcx),%xmm0
   31ff8:	00 00 
   31ffa:	66 0f 38 de 81 c0 00 	aesdec 0xc0(%rcx),%xmm0
   32001:	00 00 
   32003:	66 0f 38 de 81 b0 00 	aesdec 0xb0(%rcx),%xmm0
   3200a:	00 00 
   3200c:	66 0f 38 de 81 a0 00 	aesdec 0xa0(%rcx),%xmm0
   32013:	00 00 
   32015:	66 0f 38 de 81 90 00 	aesdec 0x90(%rcx),%xmm0
   3201c:	00 00 
   3201e:	66 0f 38 de 81 80 00 	aesdec 0x80(%rcx),%xmm0
   32025:	00 00 
   32027:	66 0f 38 de 41 70    	aesdec 0x70(%rcx),%xmm0
   3202d:	66 0f 38 de 41 60    	aesdec 0x60(%rcx),%xmm0
   32033:	66 0f 38 de 41 50    	aesdec 0x50(%rcx),%xmm0
   32039:	66 0f 38 de 41 40    	aesdec 0x40(%rcx),%xmm0
   3203f:	66 0f 38 de 41 30    	aesdec 0x30(%rcx),%xmm0
   32045:	66 0f 38 de 41 20    	aesdec 0x20(%rcx),%xmm0
   3204b:	66 0f 38 de 41 10    	aesdec 0x10(%rcx),%xmm0
   32051:	66 0f 38 df 01       	aesdeclast (%rcx),%xmm0
   32056:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   3205a:	c3                   	retq   
   3205b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000032060 <y8_Encrypt_RIJ128_AES_NI>:
   32060:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   32064:	66 0f ef 01          	pxor   (%rcx),%xmm0
   32068:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   3206f:	00 
   32070:	48 8d 8c 81 70 ff ff 	lea    -0x90(%rcx,%rax,4),%rcx
   32077:	ff 
   32078:	48 83 fa 0c          	cmp    $0xc,%rdx
   3207c:	7c 1a                	jl     32098 <y8_Encrypt_RIJ128_AES_NI+0x38>
   3207e:	74 0c                	je     3208c <y8_Encrypt_RIJ128_AES_NI+0x2c>
   32080:	66 0f 38 dc 41 c0    	aesenc -0x40(%rcx),%xmm0
   32086:	66 0f 38 dc 41 d0    	aesenc -0x30(%rcx),%xmm0
   3208c:	66 0f 38 dc 41 e0    	aesenc -0x20(%rcx),%xmm0
   32092:	66 0f 38 dc 41 f0    	aesenc -0x10(%rcx),%xmm0
   32098:	66 0f 38 dc 01       	aesenc (%rcx),%xmm0
   3209d:	66 0f 38 dc 41 10    	aesenc 0x10(%rcx),%xmm0
   320a3:	66 0f 38 dc 41 20    	aesenc 0x20(%rcx),%xmm0
   320a9:	66 0f 38 dc 41 30    	aesenc 0x30(%rcx),%xmm0
   320af:	66 0f 38 dc 41 40    	aesenc 0x40(%rcx),%xmm0
   320b5:	66 0f 38 dc 41 50    	aesenc 0x50(%rcx),%xmm0
   320bb:	66 0f 38 dc 41 60    	aesenc 0x60(%rcx),%xmm0
   320c1:	66 0f 38 dc 41 70    	aesenc 0x70(%rcx),%xmm0
   320c7:	66 0f 38 dc 81 80 00 	aesenc 0x80(%rcx),%xmm0
   320ce:	00 00 
   320d0:	66 0f 38 dd 81 90 00 	aesenclast 0x90(%rcx),%xmm0
   320d7:	00 00 
   320d9:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   320dd:	c3                   	retq   
   320de:	66 90                	xchg   %ax,%ax

00000000000320e0 <DECODE_DATA>:
   320e0:	00 01                	add    %al,(%rcx)
   320e2:	2e 2f                	cs (bad) 
   320e4:	49                   	rex.WB
   320e5:	48                   	rex.W
   320e6:	67 66 43             	addr32 data16 rex.XB
   320e9:	42 6d                	rex.X insl (%dx),%es:(%rdi)
   320eb:	6c                   	insb   (%dx),%es:(%rdi)
   320ec:	0a 0b                	or     (%rbx),%cl
   320ee:	24 25                	and    $0x25,%al

00000000000320f0 <TransFwdHI>:
   320f0:	00 35 d0 e5 3d 08    	add    %dh,0x83de5d0(%rip)        # 84106c6 <_end+0x83b9386>
   320f6:	ed                   	in     (%dx),%eax
   320f7:	d8 e9                	fsubr  %st(1),%st
   320f9:	dc 39                	fdivrl (%rcx)
   320fb:	0c d4                	or     $0xd4,%al
   320fd:	e1 04                	loope  32103 <TransInvLO+0x3>
   320ff:	31                   	.byte 0x31

0000000000032100 <TransInvLO>:
   32100:	00 01                	add    %al,(%rcx)
   32102:	5c                   	pop    %rsp
   32103:	5d                   	pop    %rbp
   32104:	e0 e1                	loopne 320e7 <DECODE_DATA+0x7>
   32106:	bc bd 50 51 0c       	mov    $0xc5150bd,%esp
   3210b:	0d b0 b1 ec ed       	or     $0xedecb1b0,%eax

0000000000032110 <TransInvHI>:
   32110:	00 1f                	add    %bl,(%rdi)
   32112:	ee                   	out    %al,(%dx)
   32113:	f1                   	icebp  
   32114:	55                   	push   %rbp
   32115:	4a bb a4 6a 75 84 9b 	rex.WX movabs $0xd1203f9b84756aa4,%rbx
   3211c:	3f 20 d1 
   3211f:	ce                   	(bad)  

0000000000032120 <GF16_csize>:
   32120:	0f                   	(bad)  
   32121:	0f                   	(bad)  
   32122:	0f                   	(bad)  
   32123:	0f                   	(bad)  
   32124:	0f                   	(bad)  
   32125:	0f                   	(bad)  
   32126:	0f                   	(bad)  
   32127:	0f                   	(bad)  
   32128:	0f                   	(bad)  
   32129:	0f                   	(bad)  
   3212a:	0f                   	(bad)  
   3212b:	0f                   	(bad)  
   3212c:	0f                   	(bad)  
   3212d:	0f                   	.byte 0xf
   3212e:	0f                   	.byte 0xf
   3212f:	0f                   	.byte 0xf

0000000000032130 <GF16_logTbl>:
   32130:	c0 00 01             	rolb   $0x1,(%rax)
   32133:	04 02                	add    $0x2,%al
   32135:	08 05 0a 03 0e 09    	or     %al,0x90e030a(%rip)        # 9112445 <_end+0x90bb105>
   3213b:	07                   	(bad)  
   3213c:	06                   	(bad)  
   3213d:	0d                   	.byte 0xd
   3213e:	0b                   	.byte 0xb
   3213f:	0c                   	.byte 0xc

0000000000032140 <GF16_expTbl>:
   32140:	01 02                	add    %eax,(%rdx)
   32142:	04 08                	add    $0x8,%al
   32144:	03 06                	add    (%rsi),%eax
   32146:	0c 0b                	or     $0xb,%al
   32148:	05 0a 07 0e 0f       	add    $0xf0e070a,%eax
   3214d:	0d                   	.byte 0xd
   3214e:	09 01                	or     %eax,(%rcx)

0000000000032150 <GF16_sqr1>:
   32150:	00 09                	add    %cl,(%rcx)
   32152:	02 0b                	add    (%rbx),%cl
   32154:	08 01                	or     %al,(%rcx)
   32156:	0a 03                	or     (%rbx),%al
   32158:	06                   	(bad)  
   32159:	0f 04                	(bad)  
   3215b:	0d 0e 07 0c 05       	or     $0x50c070e,%eax

0000000000032160 <GF16_invLog>:
   32160:	c0 00 0e             	rolb   $0xe,(%rax)
   32163:	0b 0d 07 0a 05 0c    	or     0xc050a07(%rip),%ecx        # c082b70 <_end+0xc02b830>
   32169:	01 06                	add    %eax,(%rsi)
   3216b:	08 09                	or     %cl,(%rcx)
   3216d:	02 04 03             	add    (%rbx,%rax,1),%al

0000000000032170 <InvAffineLO>:
   32170:	00 50 36             	add    %dl,0x36(%rax)
   32173:	66 15 45 23          	adc    $0x2345,%ax
   32177:	73 82                	jae    320fb <TransFwdHI+0xb>
   32179:	d2 b4 e4 97 c7 a1 f1 	shlb   %cl,-0xe5e3869(%rsp,%riz,8)

0000000000032180 <InvAffineHI>:
   32180:	00 01                	add    %al,(%rcx)
   32182:	34 35                	xor    $0x35,%al
   32184:	40                   	rex
   32185:	41 74 75             	rex.B je 321fd <GF16mul_B_0x+0xd>
   32188:	3e 3f                	ds (bad) 
   3218a:	0a 0b                	or     (%rbx),%cl
   3218c:	7e 7f                	jle    3220d <GF16mul_0_Bx+0xd>
   3218e:	4a                   	rex.WX
   3218f:	4b                   	rex.WXB

0000000000032190 <InvAffineCnt>:
   32190:	48                   	rex.W
   32191:	48                   	rex.W
   32192:	48                   	rex.W
   32193:	48                   	rex.W
   32194:	48                   	rex.W
   32195:	48                   	rex.W
   32196:	48                   	rex.W
   32197:	48                   	rex.W
   32198:	48                   	rex.W
   32199:	48                   	rex.W
   3219a:	48                   	rex.W
   3219b:	48                   	rex.W
   3219c:	48                   	rex.W
   3219d:	48                   	rex.W
   3219e:	48                   	rex.W
   3219f:	48                   	rex.W

00000000000321a0 <InvShiftRows>:
   321a0:	00 0d 0a 07 04 01    	add    %cl,0x104070a(%rip)        # 10728b0 <_end+0x101b570>
   321a6:	0e                   	(bad)  
   321a7:	0b 08                	or     (%rax),%ecx
   321a9:	05 02 0f 0c 09       	add    $0x90c0f02,%eax
   321ae:	06                   	(bad)  
   321af:	03                   	.byte 0x3

00000000000321b0 <GF16mul_4_2x>:
   321b0:	00 24 48             	add    %ah,(%rax,%rcx,2)
   321b3:	6c                   	insb   (%dx),%es:(%rdi)
   321b4:	83 a7 cb ef 36 12 7e 	andl   $0x7e,0x1236efcb(%rdi)
   321bb:	5a                   	pop    %rdx
   321bc:	b5 91                	mov    $0x91,%ch
   321be:	fd                   	std    
   321bf:	d9                   	.byte 0xd9

00000000000321c0 <GF16mul_1_6x>:
   321c0:	00 61 c2             	add    %ah,-0x3e(%rcx)
   321c3:	a3 b4 d5 76 17 58 39 	movabs %eax,0xfb9a39581776d5b4
   321ca:	9a fb 
   321cc:	ec                   	in     (%dx),%al
   321cd:	8d 2e                	lea    (%rsi),%ebp
   321cf:	4f                   	rex.WRXB

00000000000321d0 <GF16mul_C_6x>:
   321d0:	00 6c cb a7          	add    %ch,-0x59(%rbx,%rcx,8)
   321d4:	b5 d9                	mov    $0xd9,%ch
   321d6:	7e 12                	jle    321ea <GF16mul_3_Ax+0xa>
   321d8:	5a                   	pop    %rdx
   321d9:	36 91                	ss xchg %eax,%ecx
   321db:	fd                   	std    
   321dc:	ef                   	out    %eax,(%dx)
   321dd:	83                   	.byte 0x83
   321de:	24 48                	and    $0x48,%al

00000000000321e0 <GF16mul_3_Ax>:
   321e0:	00 a3 76 d5 ec 4f    	add    %ah,0x4fecd576(%rbx)
   321e6:	9a                   	(bad)  
   321e7:	39 fb                	cmp    %edi,%ebx
   321e9:	58                   	pop    %rax
   321ea:	8d 2e                	lea    (%rsi),%ebp
   321ec:	17                   	(bad)  
   321ed:	b4 61                	mov    $0x61,%ah
   321ef:	c2                   	.byte 0xc2

00000000000321f0 <GF16mul_B_0x>:
   321f0:	00 0b                	add    %cl,(%rbx)
   321f2:	05 0e 0a 01 0f       	add    $0xf010a0e,%eax
   321f7:	04 07                	add    $0x7,%al
   321f9:	0c 02                	or     $0x2,%al
   321fb:	09                   	.byte 0x9
   321fc:	0d                   	.byte 0xd
   321fd:	06                   	(bad)  
   321fe:	08 03                	or     %al,(%rbx)

0000000000032200 <GF16mul_0_Bx>:
   32200:	00 b0 50 e0 a0 10    	add    %dh,0x10a0e050(%rax)
   32206:	f0 40 70 c0          	lock rex jo 321ca <GF16mul_1_6x+0xa>
   3220a:	20 90 d0 60 80 30    	and    %dl,0x308060d0(%rax)

0000000000032210 <GF16mul_2_4x>:
   32210:	00 42 84             	add    %al,-0x7c(%rdx)
   32213:	c6                   	(bad)  
   32214:	38 7a bc             	cmp    %bh,-0x44(%rdx)
   32217:	fe                   	(bad)  
   32218:	63 21                	movslq (%rcx),%esp
   3221a:	e7 a5                	out    %eax,$0xa5
   3221c:	5b                   	pop    %rbx
   3221d:	19 df                	sbb    %ebx,%edi
   3221f:	9d                   	popfq  

0000000000032220 <GF16mul_2_6x>:
   32220:	00 62 c4             	add    %ah,-0x3c(%rdx)
   32223:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   32224:	b8 da 7c 1e 53       	mov    $0x531e7cda,%eax
   32229:	31 97 f5 eb 89 2f    	xor    %edx,0x2f89ebf5(%rdi)
   3222f:	4d                   	rex.WRB

0000000000032230 <ColumnROR>:
   32230:	01 02                	add    %eax,(%rdx)
   32232:	03 00                	add    (%rax),%eax
   32234:	05 06 07 04 09       	add    $0x9040706,%eax
   32239:	0a 0b                	or     (%rbx),%cl
   3223b:	08                   	.byte 0x8
   3223c:	0d                   	.byte 0xd
   3223d:	0e                   	(bad)  
   3223e:	0f 0c                	(bad)  

0000000000032240 <y8_SafeDecrypt_RIJ128>:
   32240:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   32247:	00 
   32248:	48 8d 0c 81          	lea    (%rcx,%rax,4),%rcx
   3224c:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   32250:	66 0f 6f 3d c8 fe ff 	movdqa -0x138(%rip),%xmm7        # 32120 <GF16_csize>
   32257:	ff 
   32258:	66 0f 6f 15 80 fe ff 	movdqa -0x180(%rip),%xmm2        # 320e0 <DECODE_DATA>
   3225f:	ff 
   32260:	66 0f 6f 0d 88 fe ff 	movdqa -0x178(%rip),%xmm1        # 320f0 <TransFwdHI>
   32267:	ff 
   32268:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   3226c:	66 0f 71 d0 04       	psrlw  $0x4,%xmm0
   32271:	66 0f db df          	pand   %xmm7,%xmm3
   32275:	66 0f db c7          	pand   %xmm7,%xmm0
   32279:	66 0f 38 00 d3       	pshufb %xmm3,%xmm2
   3227e:	66 0f 38 00 c8       	pshufb %xmm0,%xmm1
   32283:	66 0f ef d1          	pxor   %xmm1,%xmm2
   32287:	66 0f ef 11          	pxor   (%rcx),%xmm2
   3228b:	48 83 e9 10          	sub    $0x10,%rcx
   3228f:	48 83 ea 01          	sub    $0x1,%rdx
   32293:	66 0f 6f 05 d5 fe ff 	movdqa -0x12b(%rip),%xmm0        # 32170 <InvAffineLO>
   3229a:	ff 
   3229b:	66 0f 6f 0d dd fe ff 	movdqa -0x123(%rip),%xmm1        # 32180 <InvAffineHI>
   322a2:	ff 
   322a3:	66 0f 6f da          	movdqa %xmm2,%xmm3
   322a7:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   322ac:	66 0f db df          	pand   %xmm7,%xmm3
   322b0:	66 0f db d7          	pand   %xmm7,%xmm2
   322b4:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   322b9:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   322be:	66 0f ef c1          	pxor   %xmm1,%xmm0
   322c2:	66 0f ef 05 c6 fe ff 	pxor   -0x13a(%rip),%xmm0        # 32190 <InvAffineCnt>
   322c9:	ff 
   322ca:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   322ce:	66 0f db c7          	pand   %xmm7,%xmm0
   322d2:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   322d7:	66 0f db cf          	pand   %xmm7,%xmm1
   322db:	66 0f 6f 2d 4d fe ff 	movdqa -0x1b3(%rip),%xmm5        # 32130 <GF16_logTbl>
   322e2:	ff 
   322e3:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   322e8:	66 0f ef c1          	pxor   %xmm1,%xmm0
   322ec:	66 0f 6f 15 3c fe ff 	movdqa -0x1c4(%rip),%xmm2        # 32130 <GF16_logTbl>
   322f3:	ff 
   322f4:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   322f9:	66 0f 6f 25 4f fe ff 	movdqa -0x1b1(%rip),%xmm4        # 32150 <GF16_sqr1>
   32300:	ff 
   32301:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   32306:	66 0f 6f 1d 22 fe ff 	movdqa -0x1de(%rip),%xmm3        # 32130 <GF16_logTbl>
   3230d:	ff 
   3230e:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   32313:	66 0f fc ea          	paddb  %xmm2,%xmm5
   32317:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   3231b:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   3231f:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   32323:	66 0f 6f 2d 15 fe ff 	movdqa -0x1eb(%rip),%xmm5        # 32140 <GF16_expTbl>
   3232a:	ff 
   3232b:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   32330:	66 0f ef e5          	pxor   %xmm5,%xmm4
   32334:	66 0f 6f 2d 24 fe ff 	movdqa -0x1dc(%rip),%xmm5        # 32160 <GF16_invLog>
   3233b:	ff 
   3233c:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   32341:	66 0f fc d5          	paddb  %xmm5,%xmm2
   32345:	66 0f fc dd          	paddb  %xmm5,%xmm3
   32349:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   3234d:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   32351:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   32355:	66 0f 6f 05 e3 fd ff 	movdqa -0x21d(%rip),%xmm0        # 32140 <GF16_expTbl>
   3235c:	ff 
   3235d:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   32362:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   32366:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   3236a:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   3236e:	66 0f 6f 0d ca fd ff 	movdqa -0x236(%rip),%xmm1        # 32140 <GF16_expTbl>
   32375:	ff 
   32376:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   3237b:	66 0f 38 00 05 1c fe 	pshufb -0x1e4(%rip),%xmm0        # 321a0 <InvShiftRows>
   32382:	ff ff 
   32384:	66 0f 38 00 0d 13 fe 	pshufb -0x1ed(%rip),%xmm1        # 321a0 <InvShiftRows>
   3238b:	ff ff 
   3238d:	66 0f 6f 15 1b fe ff 	movdqa -0x1e5(%rip),%xmm2        # 321b0 <GF16mul_4_2x>
   32394:	ff 
   32395:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   3239a:	66 0f 38 00 05 8d fe 	pshufb -0x173(%rip),%xmm0        # 32230 <ColumnROR>
   323a1:	ff ff 
   323a3:	66 0f 6f 1d 15 fe ff 	movdqa -0x1eb(%rip),%xmm3        # 321c0 <GF16mul_1_6x>
   323aa:	ff 
   323ab:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   323b0:	66 0f 38 00 0d 77 fe 	pshufb -0x189(%rip),%xmm1        # 32230 <ColumnROR>
   323b7:	ff ff 
   323b9:	66 0f ef d3          	pxor   %xmm3,%xmm2
   323bd:	66 0f 6f 1d 0b fe ff 	movdqa -0x1f5(%rip),%xmm3        # 321d0 <GF16mul_C_6x>
   323c4:	ff 
   323c5:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   323ca:	66 0f 38 00 05 5d fe 	pshufb -0x1a3(%rip),%xmm0        # 32230 <ColumnROR>
   323d1:	ff ff 
   323d3:	66 0f ef d3          	pxor   %xmm3,%xmm2
   323d7:	66 0f 6f 1d 01 fe ff 	movdqa -0x1ff(%rip),%xmm3        # 321e0 <GF16mul_3_Ax>
   323de:	ff 
   323df:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   323e4:	66 0f 38 00 0d 43 fe 	pshufb -0x1bd(%rip),%xmm1        # 32230 <ColumnROR>
   323eb:	ff ff 
   323ed:	66 0f ef d3          	pxor   %xmm3,%xmm2
   323f1:	66 0f 6f 1d f7 fd ff 	movdqa -0x209(%rip),%xmm3        # 321f0 <GF16mul_B_0x>
   323f8:	ff 
   323f9:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   323fe:	66 0f 38 00 05 29 fe 	pshufb -0x1d7(%rip),%xmm0        # 32230 <ColumnROR>
   32405:	ff ff 
   32407:	66 0f ef d3          	pxor   %xmm3,%xmm2
   3240b:	66 0f 6f 1d ed fd ff 	movdqa -0x213(%rip),%xmm3        # 32200 <GF16mul_0_Bx>
   32412:	ff 
   32413:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   32418:	66 0f 38 00 0d 0f fe 	pshufb -0x1f1(%rip),%xmm1        # 32230 <ColumnROR>
   3241f:	ff ff 
   32421:	66 0f ef d3          	pxor   %xmm3,%xmm2
   32425:	66 0f 6f 1d e3 fd ff 	movdqa -0x21d(%rip),%xmm3        # 32210 <GF16mul_2_4x>
   3242c:	ff 
   3242d:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   32432:	66 0f ef d3          	pxor   %xmm3,%xmm2
   32436:	66 0f 6f 1d e2 fd ff 	movdqa -0x21e(%rip),%xmm3        # 32220 <GF16mul_2_6x>
   3243d:	ff 
   3243e:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   32443:	66 0f ef d3          	pxor   %xmm3,%xmm2
   32447:	66 0f ef 11          	pxor   (%rcx),%xmm2
   3244b:	48 83 e9 10          	sub    $0x10,%rcx
   3244f:	48 83 ea 01          	sub    $0x1,%rdx
   32453:	0f 8f 3a fe ff ff    	jg     32293 <y8_SafeDecrypt_RIJ128+0x53>
   32459:	66 0f 6f 05 0f fd ff 	movdqa -0x2f1(%rip),%xmm0        # 32170 <InvAffineLO>
   32460:	ff 
   32461:	66 0f 6f 0d 17 fd ff 	movdqa -0x2e9(%rip),%xmm1        # 32180 <InvAffineHI>
   32468:	ff 
   32469:	66 0f 6f da          	movdqa %xmm2,%xmm3
   3246d:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   32472:	66 0f db df          	pand   %xmm7,%xmm3
   32476:	66 0f db d7          	pand   %xmm7,%xmm2
   3247a:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   3247f:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   32484:	66 0f ef c1          	pxor   %xmm1,%xmm0
   32488:	66 0f ef 05 00 fd ff 	pxor   -0x300(%rip),%xmm0        # 32190 <InvAffineCnt>
   3248f:	ff 
   32490:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   32494:	66 0f db c7          	pand   %xmm7,%xmm0
   32498:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   3249d:	66 0f db cf          	pand   %xmm7,%xmm1
   324a1:	66 0f 6f 2d 87 fc ff 	movdqa -0x379(%rip),%xmm5        # 32130 <GF16_logTbl>
   324a8:	ff 
   324a9:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   324ae:	66 0f ef c1          	pxor   %xmm1,%xmm0
   324b2:	66 0f 6f 15 76 fc ff 	movdqa -0x38a(%rip),%xmm2        # 32130 <GF16_logTbl>
   324b9:	ff 
   324ba:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   324bf:	66 0f 6f 25 89 fc ff 	movdqa -0x377(%rip),%xmm4        # 32150 <GF16_sqr1>
   324c6:	ff 
   324c7:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   324cc:	66 0f 6f 1d 5c fc ff 	movdqa -0x3a4(%rip),%xmm3        # 32130 <GF16_logTbl>
   324d3:	ff 
   324d4:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   324d9:	66 0f fc ea          	paddb  %xmm2,%xmm5
   324dd:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   324e1:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   324e5:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   324e9:	66 0f 6f 2d 4f fc ff 	movdqa -0x3b1(%rip),%xmm5        # 32140 <GF16_expTbl>
   324f0:	ff 
   324f1:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   324f6:	66 0f ef e5          	pxor   %xmm5,%xmm4
   324fa:	66 0f 6f 2d 5e fc ff 	movdqa -0x3a2(%rip),%xmm5        # 32160 <GF16_invLog>
   32501:	ff 
   32502:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   32507:	66 0f fc d5          	paddb  %xmm5,%xmm2
   3250b:	66 0f fc dd          	paddb  %xmm5,%xmm3
   3250f:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   32513:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   32517:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   3251b:	66 0f 6f 05 1d fc ff 	movdqa -0x3e3(%rip),%xmm0        # 32140 <GF16_expTbl>
   32522:	ff 
   32523:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   32528:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   3252c:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   32530:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   32534:	66 0f 6f 0d 04 fc ff 	movdqa -0x3fc(%rip),%xmm1        # 32140 <GF16_expTbl>
   3253b:	ff 
   3253c:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   32541:	66 0f 71 f1 04       	psllw  $0x4,%xmm1
   32546:	66 0f eb c8          	por    %xmm0,%xmm1
   3254a:	66 0f 38 00 0d 4d fc 	pshufb -0x3b3(%rip),%xmm1        # 321a0 <InvShiftRows>
   32551:	ff ff 
   32553:	66 0f ef 09          	pxor   (%rcx),%xmm1
   32557:	66 0f 6f 05 a1 fb ff 	movdqa -0x45f(%rip),%xmm0        # 32100 <TransInvLO>
   3255e:	ff 
   3255f:	66 0f 6f 15 a9 fb ff 	movdqa -0x457(%rip),%xmm2        # 32110 <TransInvHI>
   32566:	ff 
   32567:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   3256b:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   32570:	66 0f db df          	pand   %xmm7,%xmm3
   32574:	66 0f db cf          	pand   %xmm7,%xmm1
   32578:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   3257d:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   32582:	66 0f ef c2          	pxor   %xmm2,%xmm0
   32586:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   3258a:	c3                   	retq   
   3258b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000032590 <ENCODE_DATA>:
   32590:	00 01                	add    %al,(%rcx)
   32592:	2e 2f                	cs (bad) 
   32594:	49                   	rex.WB
   32595:	48                   	rex.W
   32596:	67 66 43             	addr32 data16 rex.XB
   32599:	42 6d                	rex.X insl (%dx),%es:(%rdi)
   3259b:	6c                   	insb   (%dx),%es:(%rdi)
   3259c:	0a 0b                	or     (%rbx),%cl
   3259e:	24 25                	and    $0x25,%al

00000000000325a0 <TransFwdHI>:
   325a0:	00 35 d0 e5 3d 08    	add    %dh,0x83de5d0(%rip)        # 8410b76 <_end+0x83b9836>
   325a6:	ed                   	in     (%dx),%eax
   325a7:	d8 e9                	fsubr  %st(1),%st
   325a9:	dc 39                	fdivrl (%rcx)
   325ab:	0c d4                	or     $0xd4,%al
   325ad:	e1 04                	loope  325b3 <TransInvLO+0x3>
   325af:	31                   	.byte 0x31

00000000000325b0 <TransInvLO>:
   325b0:	00 01                	add    %al,(%rcx)
   325b2:	5c                   	pop    %rsp
   325b3:	5d                   	pop    %rbp
   325b4:	e0 e1                	loopne 32597 <ENCODE_DATA+0x7>
   325b6:	bc bd 50 51 0c       	mov    $0xc5150bd,%esp
   325bb:	0d b0 b1 ec ed       	or     $0xedecb1b0,%eax

00000000000325c0 <TransInvHI>:
   325c0:	00 1f                	add    %bl,(%rdi)
   325c2:	ee                   	out    %al,(%dx)
   325c3:	f1                   	icebp  
   325c4:	55                   	push   %rbp
   325c5:	4a bb a4 6a 75 84 9b 	rex.WX movabs $0xd1203f9b84756aa4,%rbx
   325cc:	3f 20 d1 
   325cf:	ce                   	(bad)  

00000000000325d0 <GF16_csize>:
   325d0:	0f                   	(bad)  
   325d1:	0f                   	(bad)  
   325d2:	0f                   	(bad)  
   325d3:	0f                   	(bad)  
   325d4:	0f                   	(bad)  
   325d5:	0f                   	(bad)  
   325d6:	0f                   	(bad)  
   325d7:	0f                   	(bad)  
   325d8:	0f                   	(bad)  
   325d9:	0f                   	(bad)  
   325da:	0f                   	(bad)  
   325db:	0f                   	(bad)  
   325dc:	0f                   	(bad)  
   325dd:	0f                   	.byte 0xf
   325de:	0f                   	.byte 0xf
   325df:	0f                   	.byte 0xf

00000000000325e0 <GF16_logTbl>:
   325e0:	c0 00 01             	rolb   $0x1,(%rax)
   325e3:	04 02                	add    $0x2,%al
   325e5:	08 05 0a 03 0e 09    	or     %al,0x90e030a(%rip)        # 91128f5 <_end+0x90bb5b5>
   325eb:	07                   	(bad)  
   325ec:	06                   	(bad)  
   325ed:	0d                   	.byte 0xd
   325ee:	0b                   	.byte 0xb
   325ef:	0c                   	.byte 0xc

00000000000325f0 <GF16_expTbl>:
   325f0:	01 02                	add    %eax,(%rdx)
   325f2:	04 08                	add    $0x8,%al
   325f4:	03 06                	add    (%rsi),%eax
   325f6:	0c 0b                	or     $0xb,%al
   325f8:	05 0a 07 0e 0f       	add    $0xf0e070a,%eax
   325fd:	0d                   	.byte 0xd
   325fe:	09 01                	or     %eax,(%rcx)

0000000000032600 <GF16_sqr1>:
   32600:	00 09                	add    %cl,(%rcx)
   32602:	02 0b                	add    (%rbx),%cl
   32604:	08 01                	or     %al,(%rcx)
   32606:	0a 03                	or     (%rbx),%al
   32608:	06                   	(bad)  
   32609:	0f 04                	(bad)  
   3260b:	0d 0e 07 0c 05       	or     $0x50c070e,%eax

0000000000032610 <GF16_invLog>:
   32610:	c0 00 0e             	rolb   $0xe,(%rax)
   32613:	0b 0d 07 0a 05 0c    	or     0xc050a07(%rip),%ecx        # c083020 <_end+0xc02bce0>
   32619:	01 06                	add    %eax,(%rsi)
   3261b:	08 09                	or     %cl,(%rcx)
   3261d:	02 04 03             	add    (%rbx,%rax,1),%al

0000000000032620 <GF16_expTbl_shift>:
   32620:	10 20                	adc    %ah,(%rax)
   32622:	40 80 30 60          	rex xorb $0x60,(%rax)
   32626:	c0 b0 50 a0 70 e0 f0 	shlb   $0xf0,-0x1f8f5fb0(%rax)
   3262d:	d0                   	.byte 0xd0
   3262e:	90                   	nop
   3262f:	10                   	.byte 0x10

0000000000032630 <FwdAffineLO>:
   32630:	00 10                	add    %dl,(%rax)
   32632:	22 32                	and    (%rdx),%dh
   32634:	55                   	push   %rbp
   32635:	45 77 67             	rex.RB ja 3269f <ColumnROR+0xf>
   32638:	82                   	(bad)  
   32639:	92                   	xchg   %eax,%edx
   3263a:	a0                   	.byte 0xa0
   3263b:	b0 d7                	mov    $0xd7,%al
   3263d:	c7                   	(bad)  
   3263e:	f5                   	cmc    
   3263f:	e5                   	.byte 0xe5

0000000000032640 <FwdAffineHI>:
   32640:	00 41 34             	add    %al,0x34(%rcx)
   32643:	75 40                	jne    32685 <GF16mul_1_Cx+0x5>
   32645:	01 74 35 2a          	add    %esi,0x2a(%rbp,%rsi,1)
   32649:	6b 1e 5f             	imul   $0x5f,(%rsi),%ebx
   3264c:	6a 2b                	pushq  $0x2b
   3264e:	5e                   	pop    %rsi
   3264f:	1f                   	(bad)  

0000000000032650 <FwdAffineCnt>:
   32650:	c2 c2 c2             	retq   $0xc2c2
   32653:	c2 c2 c2             	retq   $0xc2c2
   32656:	c2 c2 c2             	retq   $0xc2c2
   32659:	c2 c2 c2             	retq   $0xc2c2
   3265c:	c2 c2 c2             	retq   $0xc2c2
   3265f:	c2                   	.byte 0xc2

0000000000032660 <FwdShiftRows>:
   32660:	00 05 0a 0f 04 09    	add    %al,0x9040f0a(%rip)        # 9073570 <_end+0x901c230>
   32666:	0e                   	(bad)  
   32667:	03 08                	add    (%rax),%ecx
   32669:	0d 02 07 0c 01       	or     $0x10c0702,%eax
   3266e:	06                   	(bad)  
   3266f:	0b                   	.byte 0xb

0000000000032670 <GF16mul_E_2x>:
   32670:	00 2e                	add    %ch,(%rsi)
   32672:	4f 61                	rex.WRXB (bad) 
   32674:	8d a3 c2 ec 39 17    	lea    0x1739ecc2(%rbx),%esp
   3267a:	76 58                	jbe    326d4 <y8_TransformNative2Composite+0x34>
   3267c:	b4 9a                	mov    $0x9a,%ah
   3267e:	fb                   	sti    
   3267f:	d5                   	(bad)  

0000000000032680 <GF16mul_1_Cx>:
   32680:	00 c1                	add    %al,%cl
   32682:	b2 73                	mov    $0x73,%dl
   32684:	54                   	push   %rsp
   32685:	95                   	xchg   %eax,%ebp
   32686:	e6 27                	out    %al,$0x27
   32688:	a8 69                	test   $0x69,%al
   3268a:	1a db                	sbb    %bl,%bl
   3268c:	fc                   	cld    
   3268d:	3d                   	.byte 0x3d
   3268e:	4e                   	rex.WRX
   3268f:	8f                   	.byte 0x8f

0000000000032690 <ColumnROR>:
   32690:	01 02                	add    %eax,(%rdx)
   32692:	03 00                	add    (%rax),%eax
   32694:	05 06 07 04 09       	add    $0x9040706,%eax
   32699:	0a 0b                	or     (%rbx),%cl
   3269b:	08                   	.byte 0x8
   3269c:	0d                   	.byte 0xd
   3269d:	0e                   	(bad)  
   3269e:	0f 0c                	(bad)  

00000000000326a0 <y8_TransformNative2Composite>:
   326a0:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   326a4:	66 0f 6f 3d 24 ff ff 	movdqa -0xdc(%rip),%xmm7        # 325d0 <GF16_csize>
   326ab:	ff 
   326ac:	66 0f 6f 0d dc fe ff 	movdqa -0x124(%rip),%xmm1        # 32590 <ENCODE_DATA>
   326b3:	ff 
   326b4:	66 0f 6f 15 e4 fe ff 	movdqa -0x11c(%rip),%xmm2        # 325a0 <TransFwdHI>
   326bb:	ff 
   326bc:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   326c0:	66 0f 71 d0 04       	psrlw  $0x4,%xmm0
   326c5:	66 0f db df          	pand   %xmm7,%xmm3
   326c9:	66 0f db c7          	pand   %xmm7,%xmm0
   326cd:	66 0f 38 00 cb       	pshufb %xmm3,%xmm1
   326d2:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   326d7:	66 0f ef ca          	pxor   %xmm2,%xmm1
   326db:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   326df:	c3                   	retq   

00000000000326e0 <y8_SafeEncrypt_RIJ128>:
   326e0:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   326e4:	66 0f 6f 3d e4 fe ff 	movdqa -0x11c(%rip),%xmm7        # 325d0 <GF16_csize>
   326eb:	ff 
   326ec:	66 0f 6f 05 9c fe ff 	movdqa -0x164(%rip),%xmm0        # 32590 <ENCODE_DATA>
   326f3:	ff 
   326f4:	66 0f 6f 15 a4 fe ff 	movdqa -0x15c(%rip),%xmm2        # 325a0 <TransFwdHI>
   326fb:	ff 
   326fc:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   32700:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   32705:	66 0f db df          	pand   %xmm7,%xmm3
   32709:	66 0f db cf          	pand   %xmm7,%xmm1
   3270d:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   32712:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   32717:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3271b:	66 0f ef 01          	pxor   (%rcx),%xmm0
   3271f:	48 83 c1 10          	add    $0x10,%rcx
   32723:	48 83 ea 01          	sub    $0x1,%rdx
   32727:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   3272b:	66 0f db c7          	pand   %xmm7,%xmm0
   3272f:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   32734:	66 0f db cf          	pand   %xmm7,%xmm1
   32738:	66 0f 6f 2d a0 fe ff 	movdqa -0x160(%rip),%xmm5        # 325e0 <GF16_logTbl>
   3273f:	ff 
   32740:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   32745:	66 0f ef c1          	pxor   %xmm1,%xmm0
   32749:	66 0f 6f 15 8f fe ff 	movdqa -0x171(%rip),%xmm2        # 325e0 <GF16_logTbl>
   32750:	ff 
   32751:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   32756:	66 0f 6f 25 a2 fe ff 	movdqa -0x15e(%rip),%xmm4        # 32600 <GF16_sqr1>
   3275d:	ff 
   3275e:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   32763:	66 0f 6f 1d 75 fe ff 	movdqa -0x18b(%rip),%xmm3        # 325e0 <GF16_logTbl>
   3276a:	ff 
   3276b:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   32770:	66 0f fc ea          	paddb  %xmm2,%xmm5
   32774:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   32778:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   3277c:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   32780:	66 0f 6f 2d 68 fe ff 	movdqa -0x198(%rip),%xmm5        # 325f0 <GF16_expTbl>
   32787:	ff 
   32788:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   3278d:	66 0f ef e5          	pxor   %xmm5,%xmm4
   32791:	66 0f 6f 2d 77 fe ff 	movdqa -0x189(%rip),%xmm5        # 32610 <GF16_invLog>
   32798:	ff 
   32799:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   3279e:	66 0f fc d5          	paddb  %xmm5,%xmm2
   327a2:	66 0f fc dd          	paddb  %xmm5,%xmm3
   327a6:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   327aa:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   327ae:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   327b2:	66 0f 6f 05 36 fe ff 	movdqa -0x1ca(%rip),%xmm0        # 325f0 <GF16_expTbl>
   327b9:	ff 
   327ba:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   327bf:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   327c3:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   327c7:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   327cb:	66 0f 6f 0d 1d fe ff 	movdqa -0x1e3(%rip),%xmm1        # 325f0 <GF16_expTbl>
   327d2:	ff 
   327d3:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   327d8:	66 0f 6f 1d 50 fe ff 	movdqa -0x1b0(%rip),%xmm3        # 32630 <FwdAffineLO>
   327df:	ff 
   327e0:	66 0f 6f 15 58 fe ff 	movdqa -0x1a8(%rip),%xmm2        # 32640 <FwdAffineHI>
   327e7:	ff 
   327e8:	66 0f 6f 25 60 fe ff 	movdqa -0x1a0(%rip),%xmm4        # 32650 <FwdAffineCnt>
   327ef:	ff 
   327f0:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   327f5:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   327fa:	66 0f ef dc          	pxor   %xmm4,%xmm3
   327fe:	66 0f ef da          	pxor   %xmm2,%xmm3
   32802:	66 0f 38 00 1d 55 fe 	pshufb -0x1ab(%rip),%xmm3        # 32660 <FwdShiftRows>
   32809:	ff ff 
   3280b:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   3280f:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   32813:	66 0f ef e4          	pxor   %xmm4,%xmm4
   32817:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   3281c:	66 0f db cf          	pand   %xmm7,%xmm1
   32820:	66 0f 6f 05 48 fe ff 	movdqa -0x1b8(%rip),%xmm0        # 32670 <GF16mul_E_2x>
   32827:	ff 
   32828:	66 0f 38 00 c1       	pshufb %xmm1,%xmm0
   3282d:	66 0f db d7          	pand   %xmm7,%xmm2
   32831:	66 0f 6f 0d 47 fe ff 	movdqa -0x1b9(%rip),%xmm1        # 32680 <GF16mul_1_Cx>
   32838:	ff 
   32839:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   3283e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   32842:	66 0f 38 00 1d 45 fe 	pshufb -0x1bb(%rip),%xmm3        # 32690 <ColumnROR>
   32849:	ff ff 
   3284b:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3284f:	66 0f 38 00 1d 38 fe 	pshufb -0x1c8(%rip),%xmm3        # 32690 <ColumnROR>
   32856:	ff ff 
   32858:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3285c:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   32860:	66 0f 38 00 15 27 fe 	pshufb -0x1d9(%rip),%xmm2        # 32690 <ColumnROR>
   32867:	ff ff 
   32869:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3286d:	66 0f 38 00 1d 1a fe 	pshufb -0x1e6(%rip),%xmm3        # 32690 <ColumnROR>
   32874:	ff ff 
   32876:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3287a:	66 0f ef c4          	pxor   %xmm4,%xmm0
   3287e:	66 0f ef 01          	pxor   (%rcx),%xmm0
   32882:	48 83 c1 10          	add    $0x10,%rcx
   32886:	48 83 ea 01          	sub    $0x1,%rdx
   3288a:	0f 8f 97 fe ff ff    	jg     32727 <y8_SafeEncrypt_RIJ128+0x47>
   32890:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   32894:	66 0f db c7          	pand   %xmm7,%xmm0
   32898:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   3289d:	66 0f db cf          	pand   %xmm7,%xmm1
   328a1:	66 0f 6f 2d 37 fd ff 	movdqa -0x2c9(%rip),%xmm5        # 325e0 <GF16_logTbl>
   328a8:	ff 
   328a9:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   328ae:	66 0f ef c1          	pxor   %xmm1,%xmm0
   328b2:	66 0f 6f 15 26 fd ff 	movdqa -0x2da(%rip),%xmm2        # 325e0 <GF16_logTbl>
   328b9:	ff 
   328ba:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   328bf:	66 0f 6f 25 39 fd ff 	movdqa -0x2c7(%rip),%xmm4        # 32600 <GF16_sqr1>
   328c6:	ff 
   328c7:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   328cc:	66 0f 6f 1d 0c fd ff 	movdqa -0x2f4(%rip),%xmm3        # 325e0 <GF16_logTbl>
   328d3:	ff 
   328d4:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   328d9:	66 0f fc ea          	paddb  %xmm2,%xmm5
   328dd:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   328e1:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   328e5:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   328e9:	66 0f 6f 2d ff fc ff 	movdqa -0x301(%rip),%xmm5        # 325f0 <GF16_expTbl>
   328f0:	ff 
   328f1:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   328f6:	66 0f ef e5          	pxor   %xmm5,%xmm4
   328fa:	66 0f 6f 2d 0e fd ff 	movdqa -0x2f2(%rip),%xmm5        # 32610 <GF16_invLog>
   32901:	ff 
   32902:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   32907:	66 0f fc d5          	paddb  %xmm5,%xmm2
   3290b:	66 0f fc dd          	paddb  %xmm5,%xmm3
   3290f:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   32913:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   32917:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   3291b:	66 0f 6f 05 cd fc ff 	movdqa -0x333(%rip),%xmm0        # 325f0 <GF16_expTbl>
   32922:	ff 
   32923:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   32928:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   3292c:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   32930:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   32934:	66 0f 6f 0d b4 fc ff 	movdqa -0x34c(%rip),%xmm1        # 325f0 <GF16_expTbl>
   3293b:	ff 
   3293c:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   32941:	66 0f 6f 1d e7 fc ff 	movdqa -0x319(%rip),%xmm3        # 32630 <FwdAffineLO>
   32948:	ff 
   32949:	66 0f 6f 15 ef fc ff 	movdqa -0x311(%rip),%xmm2        # 32640 <FwdAffineHI>
   32950:	ff 
   32951:	66 0f 6f 25 f7 fc ff 	movdqa -0x309(%rip),%xmm4        # 32650 <FwdAffineCnt>
   32958:	ff 
   32959:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   3295e:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   32963:	66 0f ef dc          	pxor   %xmm4,%xmm3
   32967:	66 0f ef da          	pxor   %xmm2,%xmm3
   3296b:	66 0f 38 00 1d ec fc 	pshufb -0x314(%rip),%xmm3        # 32660 <FwdShiftRows>
   32972:	ff ff 
   32974:	66 0f ef 19          	pxor   (%rcx),%xmm3
   32978:	66 0f 6f 05 30 fc ff 	movdqa -0x3d0(%rip),%xmm0        # 325b0 <TransInvLO>
   3297f:	ff 
   32980:	66 0f 6f 15 38 fc ff 	movdqa -0x3c8(%rip),%xmm2        # 325c0 <TransInvHI>
   32987:	ff 
   32988:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   3298c:	66 0f 71 d3 04       	psrlw  $0x4,%xmm3
   32991:	66 0f db cf          	pand   %xmm7,%xmm1
   32995:	66 0f db df          	pand   %xmm7,%xmm3
   32999:	66 0f 38 00 c1       	pshufb %xmm1,%xmm0
   3299e:	66 0f 38 00 d3       	pshufb %xmm3,%xmm2
   329a3:	66 0f ef c2          	pxor   %xmm2,%xmm0
   329a7:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   329ab:	c3                   	retq   
   329ac:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   329b3:	00 00 00 
   329b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   329bd:	00 00 00 

00000000000329c0 <l9_ippsAES_CMACFinal>:
   329c0:	55                   	push   %rbp
   329c1:	48 89 e5             	mov    %rsp,%rbp
   329c4:	41 57                	push   %r15
   329c6:	41 56                	push   %r14
   329c8:	41 55                	push   %r13
   329ca:	41 54                	push   %r12
   329cc:	53                   	push   %rbx
   329cd:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   329d1:	48 83 ec 20          	sub    $0x20,%rsp
   329d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   329dc:	00 00 
   329de:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   329e3:	31 c0                	xor    %eax,%eax
   329e5:	48 85 d2             	test   %rdx,%rdx
   329e8:	0f 84 05 01 00 00    	je     32af3 <l9_ippsAES_CMACFinal+0x133>
   329ee:	49 89 d5             	mov    %rdx,%r13
   329f1:	49 89 fe             	mov    %rdi,%r14
   329f4:	49 f7 dd             	neg    %r13
   329f7:	41 83 e5 0f          	and    $0xf,%r13d
   329fb:	49 01 d5             	add    %rdx,%r13
   329fe:	48 85 ff             	test   %rdi,%rdi
   32a01:	0f 84 ec 00 00 00    	je     32af3 <l9_ippsAES_CMACFinal+0x133>
   32a07:	44 8d 7e ff          	lea    -0x1(%rsi),%r15d
   32a0b:	41 89 f4             	mov    %esi,%r12d
   32a0e:	41 83 ff 0f          	cmp    $0xf,%r15d
   32a12:	0f 87 cf 00 00 00    	ja     32ae7 <l9_ippsAES_CMACFinal+0x127>
   32a18:	48 89 e3             	mov    %rsp,%rbx
   32a1b:	4c 89 ea             	mov    %r13,%rdx
   32a1e:	be 10 00 00 00       	mov    $0x10,%esi
   32a23:	48 89 df             	mov    %rbx,%rdi
   32a26:	e8 f5 00 00 00       	callq  32b20 <l9_ippsAES_CMACGetTag>
   32a2b:	85 c0                	test   %eax,%eax
   32a2d:	0f 85 91 00 00 00    	jne    32ac4 <l9_ippsAES_CMACFinal+0x104>
   32a33:	45 85 e4             	test   %r12d,%r12d
   32a36:	7e 7a                	jle    32ab2 <l9_ippsAES_CMACFinal+0xf2>
   32a38:	41 83 ff 1e          	cmp    $0x1e,%r15d
   32a3c:	0f 86 a1 00 00 00    	jbe    32ae3 <l9_ippsAES_CMACFinal+0x123>
   32a42:	44 89 e2             	mov    %r12d,%edx
   32a45:	48 89 df             	mov    %rbx,%rdi
   32a48:	4c 89 f1             	mov    %r14,%rcx
   32a4b:	c1 ea 05             	shr    $0x5,%edx
   32a4e:	48 c1 e2 05          	shl    $0x5,%rdx
   32a52:	4c 01 f2             	add    %r14,%rdx
   32a55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32a5c:	00 00 00 00 
   32a60:	c5 fd 6f 0f          	vmovdqa (%rdi),%ymm1
   32a64:	48 83 c1 20          	add    $0x20,%rcx
   32a68:	48 83 c7 20          	add    $0x20,%rdi
   32a6c:	c5 fe 7f 49 e0       	vmovdqu %ymm1,-0x20(%rcx)
   32a71:	48 39 d1             	cmp    %rdx,%rcx
   32a74:	75 ea                	jne    32a60 <l9_ippsAES_CMACFinal+0xa0>
   32a76:	44 89 e1             	mov    %r12d,%ecx
   32a79:	83 e1 e0             	and    $0xffffffe0,%ecx
   32a7c:	41 39 cc             	cmp    %ecx,%r12d
   32a7f:	74 6d                	je     32aee <l9_ippsAES_CMACFinal+0x12e>
   32a81:	c5 f8 77             	vzeroupper 
   32a84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32a8b:	00 00 00 00 
   32a8f:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32a96:	00 00 00 00 
   32a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   32aa0:	48 63 f1             	movslq %ecx,%rsi
   32aa3:	ff c1                	inc    %ecx
   32aa5:	0f b6 3c 34          	movzbl (%rsp,%rsi,1),%edi
   32aa9:	41 88 3c 36          	mov    %dil,(%r14,%rsi,1)
   32aad:	41 39 cc             	cmp    %ecx,%r12d
   32ab0:	7f ee                	jg     32aa0 <l9_ippsAES_CMACFinal+0xe0>
   32ab2:	41 c7 45 04 00 00 00 	movl   $0x0,0x4(%r13)
   32ab9:	00 
   32aba:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   32abe:	c4 c1 78 11 45 40    	vmovups %xmm0,0x40(%r13)
   32ac4:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   32ac9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   32ad0:	00 00 
   32ad2:	75 26                	jne    32afa <l9_ippsAES_CMACFinal+0x13a>
   32ad4:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   32ad8:	5b                   	pop    %rbx
   32ad9:	41 5c                	pop    %r12
   32adb:	41 5d                	pop    %r13
   32add:	41 5e                	pop    %r14
   32adf:	41 5f                	pop    %r15
   32ae1:	5d                   	pop    %rbp
   32ae2:	c3                   	retq   
   32ae3:	31 c9                	xor    %ecx,%ecx
   32ae5:	eb b9                	jmp    32aa0 <l9_ippsAES_CMACFinal+0xe0>
   32ae7:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   32aec:	eb d6                	jmp    32ac4 <l9_ippsAES_CMACFinal+0x104>
   32aee:	c5 f8 77             	vzeroupper 
   32af1:	eb bf                	jmp    32ab2 <l9_ippsAES_CMACFinal+0xf2>
   32af3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   32af8:	eb ca                	jmp    32ac4 <l9_ippsAES_CMACFinal+0x104>
   32afa:	e8 8d 89 fd ff       	callq  b48c <__stack_chk_fail>
   32aff:	90                   	nop

0000000000032b00 <l9_ippsAES_CMACGetSize>:
   32b00:	48 85 ff             	test   %rdi,%rdi
   32b03:	74 09                	je     32b0e <l9_ippsAES_CMACGetSize+0xe>
   32b05:	c7 07 9f 02 00 00    	movl   $0x29f,(%rdi)
   32b0b:	31 c0                	xor    %eax,%eax
   32b0d:	c3                   	retq   
   32b0e:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   32b13:	c3                   	retq   
   32b14:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32b1b:	00 00 00 
   32b1e:	66 90                	xchg   %ax,%ax

0000000000032b20 <l9_ippsAES_CMACGetTag>:
   32b20:	55                   	push   %rbp
   32b21:	48 89 e5             	mov    %rsp,%rbp
   32b24:	41 56                	push   %r14
   32b26:	41 55                	push   %r13
   32b28:	41 54                	push   %r12
   32b2a:	53                   	push   %rbx
   32b2b:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   32b2f:	48 83 ec 40          	sub    $0x40,%rsp
   32b33:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32b3a:	00 00 
   32b3c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   32b41:	31 c0                	xor    %eax,%eax
   32b43:	48 85 d2             	test   %rdx,%rdx
   32b46:	0f 84 31 02 00 00    	je     32d7d <l9_ippsAES_CMACGetTag+0x25d>
   32b4c:	48 89 d0             	mov    %rdx,%rax
   32b4f:	48 f7 d8             	neg    %rax
   32b52:	83 e0 0f             	and    $0xf,%eax
   32b55:	48 01 c2             	add    %rax,%rdx
   32b58:	81 3a 43 41 4d 43    	cmpl   $0x434d4143,(%rdx)
   32b5e:	0f 85 0b 02 00 00    	jne    32d6f <l9_ippsAES_CMACGetTag+0x24f>
   32b64:	49 89 fd             	mov    %rdi,%r13
   32b67:	48 85 ff             	test   %rdi,%rdi
   32b6a:	0f 84 0d 02 00 00    	je     32d7d <l9_ippsAES_CMACGetTag+0x25d>
   32b70:	44 8d 76 ff          	lea    -0x1(%rsi),%r14d
   32b74:	41 89 f4             	mov    %esi,%r12d
   32b77:	41 83 fe 0f          	cmp    $0xf,%r14d
   32b7b:	0f 87 f5 01 00 00    	ja     32d76 <l9_ippsAES_CMACGetTag+0x256>
   32b81:	c5 f9 6f 5a 30       	vmovdqa 0x30(%rdx),%xmm3
   32b86:	4c 63 42 04          	movslq 0x4(%rdx),%r8
   32b8a:	4c 8b 4a 60          	mov    0x60(%rdx),%r9
   32b8e:	48 8b 42 30          	mov    0x30(%rdx),%rax
   32b92:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
   32b96:	c5 f8 29 5c 24 20    	vmovaps %xmm3,0x20(%rsp)
   32b9c:	c5 fa 7e 4a 40       	vmovq  0x40(%rdx),%xmm1
   32ba1:	48 8b 7a 48          	mov    0x48(%rdx),%rdi
   32ba5:	41 83 f8 10          	cmp    $0x10,%r8d
   32ba9:	0f 84 89 01 00 00    	je     32d38 <l9_ippsAES_CMACGetTag+0x218>
   32baf:	be 10 00 00 00       	mov    $0x10,%esi
   32bb4:	44 29 c6             	sub    %r8d,%esi
   32bb7:	85 f6                	test   %esi,%esi
   32bb9:	7e 74                	jle    32c2f <l9_ippsAES_CMACGetTag+0x10f>
   32bbb:	8d 46 ff             	lea    -0x1(%rsi),%eax
   32bbe:	83 f8 1e             	cmp    $0x1e,%eax
   32bc1:	0f 86 94 01 00 00    	jbe    32d5b <l9_ippsAES_CMACGetTag+0x23b>
   32bc7:	89 f1                	mov    %esi,%ecx
   32bc9:	4a 8d 44 04 20       	lea    0x20(%rsp,%r8,1),%rax
   32bce:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   32bd2:	c1 e9 05             	shr    $0x5,%ecx
   32bd5:	48 c1 e1 05          	shl    $0x5,%rcx
   32bd9:	48 01 c1             	add    %rax,%rcx
   32bdc:	0f 1f 40 00          	nopl   0x0(%rax)
   32be0:	c5 fe 7f 00          	vmovdqu %ymm0,(%rax)
   32be4:	48 83 c0 20          	add    $0x20,%rax
   32be8:	48 39 c8             	cmp    %rcx,%rax
   32beb:	75 f3                	jne    32be0 <l9_ippsAES_CMACGetTag+0xc0>
   32bed:	89 f0                	mov    %esi,%eax
   32bef:	83 e0 e0             	and    $0xffffffe0,%eax
   32bf2:	39 c6                	cmp    %eax,%esi
   32bf4:	0f 84 68 01 00 00    	je     32d62 <l9_ippsAES_CMACGetTag+0x242>
   32bfa:	c5 f8 77             	vzeroupper 
   32bfd:	4e 8d 54 04 40       	lea    0x40(%rsp,%r8,1),%r10
   32c02:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32c09:	00 00 00 00 
   32c0d:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32c14:	00 00 00 00 
   32c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   32c1f:	00 
   32c20:	48 63 c8             	movslq %eax,%rcx
   32c23:	ff c0                	inc    %eax
   32c25:	42 c6 44 11 e0 00    	movb   $0x0,-0x20(%rcx,%r10,1)
   32c2b:	39 c6                	cmp    %eax,%esi
   32c2d:	7f f1                	jg     32c20 <l9_ippsAES_CMACGetTag+0x100>
   32c2f:	42 c6 44 04 20 80    	movb   $0x80,0x20(%rsp,%r8,1)
   32c35:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   32c3a:	48 33 42 20          	xor    0x20(%rdx),%rax
   32c3e:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   32c43:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   32c48:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   32c4d:	48 33 42 28          	xor    0x28(%rdx),%rax
   32c51:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   32c56:	c4 e3 f1 22 cf 01    	vpinsrq $0x1,%rdi,%xmm1,%xmm1
   32c5c:	c4 e3 f9 22 c0 01    	vpinsrq $0x1,%rax,%xmm0,%xmm0
   32c62:	48 89 e3             	mov    %rsp,%rbx
   32c65:	45 31 c0             	xor    %r8d,%r8d
   32c68:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   32c6c:	48 8d 8a 80 00 00 00 	lea    0x80(%rdx),%rcx
   32c73:	48 89 de             	mov    %rbx,%rsi
   32c76:	8b 52 5c             	mov    0x5c(%rdx),%edx
   32c79:	c5 f8 29 04 24       	vmovaps %xmm0,(%rsp)
   32c7e:	48 89 df             	mov    %rbx,%rdi
   32c81:	41 ff d1             	callq  *%r9
   32c84:	45 85 e4             	test   %r12d,%r12d
   32c87:	0f 8e 86 00 00 00    	jle    32d13 <l9_ippsAES_CMACGetTag+0x1f3>
   32c8d:	41 83 fe 1e          	cmp    $0x1e,%r14d
   32c91:	0f 86 c0 00 00 00    	jbe    32d57 <l9_ippsAES_CMACGetTag+0x237>
   32c97:	44 89 e2             	mov    %r12d,%edx
   32c9a:	48 89 de             	mov    %rbx,%rsi
   32c9d:	4c 89 e8             	mov    %r13,%rax
   32ca0:	c1 ea 05             	shr    $0x5,%edx
   32ca3:	48 c1 e2 05          	shl    $0x5,%rdx
   32ca7:	4c 01 ea             	add    %r13,%rdx
   32caa:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32cb1:	00 00 00 00 
   32cb5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32cbc:	00 00 00 00 
   32cc0:	c5 fd 6f 16          	vmovdqa (%rsi),%ymm2
   32cc4:	48 83 c0 20          	add    $0x20,%rax
   32cc8:	48 83 c6 20          	add    $0x20,%rsi
   32ccc:	c5 fe 7f 50 e0       	vmovdqu %ymm2,-0x20(%rax)
   32cd1:	48 39 d0             	cmp    %rdx,%rax
   32cd4:	75 ea                	jne    32cc0 <l9_ippsAES_CMACGetTag+0x1a0>
   32cd6:	44 89 e0             	mov    %r12d,%eax
   32cd9:	83 e0 e0             	and    $0xffffffe0,%eax
   32cdc:	44 39 e0             	cmp    %r12d,%eax
   32cdf:	0f 84 85 00 00 00    	je     32d6a <l9_ippsAES_CMACGetTag+0x24a>
   32ce5:	c5 f8 77             	vzeroupper 
   32ce8:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32cef:	00 00 00 00 
   32cf3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32cfa:	00 00 00 00 
   32cfe:	66 90                	xchg   %ax,%ax
   32d00:	48 63 d0             	movslq %eax,%rdx
   32d03:	ff c0                	inc    %eax
   32d05:	0f b6 0c 14          	movzbl (%rsp,%rdx,1),%ecx
   32d09:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
   32d0e:	41 39 c4             	cmp    %eax,%r12d
   32d11:	7f ed                	jg     32d00 <l9_ippsAES_CMACGetTag+0x1e0>
   32d13:	31 c0                	xor    %eax,%eax
   32d15:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   32d1a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   32d21:	00 00 
   32d23:	75 5f                	jne    32d84 <l9_ippsAES_CMACGetTag+0x264>
   32d25:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
   32d29:	5b                   	pop    %rbx
   32d2a:	41 5c                	pop    %r12
   32d2c:	41 5d                	pop    %r13
   32d2e:	41 5e                	pop    %r14
   32d30:	5d                   	pop    %rbp
   32d31:	c3                   	retq   
   32d32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   32d38:	48 33 42 10          	xor    0x10(%rdx),%rax
   32d3c:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   32d41:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   32d46:	48 8b 42 18          	mov    0x18(%rdx),%rax
   32d4a:	48 31 c8             	xor    %rcx,%rax
   32d4d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   32d52:	e9 ff fe ff ff       	jmpq   32c56 <l9_ippsAES_CMACGetTag+0x136>
   32d57:	31 c0                	xor    %eax,%eax
   32d59:	eb a5                	jmp    32d00 <l9_ippsAES_CMACGetTag+0x1e0>
   32d5b:	31 c0                	xor    %eax,%eax
   32d5d:	e9 9b fe ff ff       	jmpq   32bfd <l9_ippsAES_CMACGetTag+0xdd>
   32d62:	c5 f8 77             	vzeroupper 
   32d65:	e9 c5 fe ff ff       	jmpq   32c2f <l9_ippsAES_CMACGetTag+0x10f>
   32d6a:	c5 f8 77             	vzeroupper 
   32d6d:	eb a4                	jmp    32d13 <l9_ippsAES_CMACGetTag+0x1f3>
   32d6f:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   32d74:	eb 9f                	jmp    32d15 <l9_ippsAES_CMACGetTag+0x1f5>
   32d76:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   32d7b:	eb 98                	jmp    32d15 <l9_ippsAES_CMACGetTag+0x1f5>
   32d7d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   32d82:	eb 91                	jmp    32d15 <l9_ippsAES_CMACGetTag+0x1f5>
   32d84:	e8 03 87 fd ff       	callq  b48c <__stack_chk_fail>
   32d89:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32d90:	00 00 00 
   32d93:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32d9a:	00 00 00 
   32d9d:	0f 1f 00             	nopl   (%rax)

0000000000032da0 <l9_ippsAES_CMACInit>:
   32da0:	48 85 d2             	test   %rdx,%rdx
   32da3:	0f 84 a3 02 00 00    	je     3304c <l9_ippsAES_CMACInit+0x2ac>
   32da9:	81 f9 9e 02 00 00    	cmp    $0x29e,%ecx
   32daf:	0f 8e 91 02 00 00    	jle    33046 <l9_ippsAES_CMACInit+0x2a6>
   32db5:	41 57                	push   %r15
   32db7:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   32dbb:	b9 48 02 00 00       	mov    $0x248,%ecx
   32dc0:	41 56                	push   %r14
   32dc2:	41 55                	push   %r13
   32dc4:	41 54                	push   %r12
   32dc6:	55                   	push   %rbp
   32dc7:	53                   	push   %rbx
   32dc8:	48 89 d3             	mov    %rdx,%rbx
   32dcb:	48 f7 db             	neg    %rbx
   32dce:	83 e3 0f             	and    $0xf,%ebx
   32dd1:	48 01 d3             	add    %rdx,%rbx
   32dd4:	48 83 ec 18          	sub    $0x18,%rsp
   32dd8:	48 c7 03 43 41 4d 43 	movq   $0x434d4143,(%rbx)
   32ddf:	48 8d 53 50          	lea    0x50(%rbx),%rdx
   32de3:	48 8d 6b 40          	lea    0x40(%rbx),%rbp
   32de7:	c5 f8 11 43 40       	vmovups %xmm0,0x40(%rbx)
   32dec:	e8 4f 06 00 00       	callq  33440 <l9_ippsAESInit>
   32df1:	85 c0                	test   %eax,%eax
   32df3:	0f 85 3e 02 00 00    	jne    33037 <l9_ippsAES_CMACInit+0x297>
   32df9:	45 31 c0             	xor    %r8d,%r8d
   32dfc:	48 89 ef             	mov    %rbp,%rdi
   32dff:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   32e03:	8b 53 5c             	mov    0x5c(%rbx),%edx
   32e06:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   32e0d:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   32e11:	ff 53 60             	callq  *0x60(%rbx)
   32e14:	0f b6 53 1f          	movzbl 0x1f(%rbx),%edx
   32e18:	0f b6 4b 1e          	movzbl 0x1e(%rbx),%ecx
   32e1c:	44 0f b6 7b 10       	movzbl 0x10(%rbx),%r15d
   32e21:	01 d2                	add    %edx,%edx
   32e23:	88 53 1f             	mov    %dl,0x1f(%rbx)
   32e26:	c1 ea 08             	shr    $0x8,%edx
   32e29:	44 8d 34 4a          	lea    (%rdx,%rcx,2),%r14d
   32e2d:	0f b6 4b 1d          	movzbl 0x1d(%rbx),%ecx
   32e31:	44 89 f2             	mov    %r14d,%edx
   32e34:	44 88 73 1e          	mov    %r14b,0x1e(%rbx)
   32e38:	45 0f b6 f6          	movzbl %r14b,%r14d
   32e3c:	c1 ea 08             	shr    $0x8,%edx
   32e3f:	44 8d 2c 4a          	lea    (%rdx,%rcx,2),%r13d
   32e43:	0f b6 4b 1c          	movzbl 0x1c(%rbx),%ecx
   32e47:	44 89 ea             	mov    %r13d,%edx
   32e4a:	44 88 6b 1d          	mov    %r13b,0x1d(%rbx)
   32e4e:	45 0f b6 ed          	movzbl %r13b,%r13d
   32e52:	c1 ea 08             	shr    $0x8,%edx
   32e55:	44 8d 24 4a          	lea    (%rdx,%rcx,2),%r12d
   32e59:	0f b6 4b 1b          	movzbl 0x1b(%rbx),%ecx
   32e5d:	44 89 e2             	mov    %r12d,%edx
   32e60:	44 88 63 1c          	mov    %r12b,0x1c(%rbx)
   32e64:	45 0f b6 e4          	movzbl %r12b,%r12d
   32e68:	c1 ea 08             	shr    $0x8,%edx
   32e6b:	8d 2c 4a             	lea    (%rdx,%rcx,2),%ebp
   32e6e:	0f b6 4b 1a          	movzbl 0x1a(%rbx),%ecx
   32e72:	89 ea                	mov    %ebp,%edx
   32e74:	40 88 6b 1b          	mov    %bpl,0x1b(%rbx)
   32e78:	40 0f b6 ed          	movzbl %bpl,%ebp
   32e7c:	c1 ea 08             	shr    $0x8,%edx
   32e7f:	44 8d 1c 4a          	lea    (%rdx,%rcx,2),%r11d
   32e83:	0f b6 4b 19          	movzbl 0x19(%rbx),%ecx
   32e87:	44 89 da             	mov    %r11d,%edx
   32e8a:	44 88 5b 1a          	mov    %r11b,0x1a(%rbx)
   32e8e:	45 0f b6 db          	movzbl %r11b,%r11d
   32e92:	c1 ea 08             	shr    $0x8,%edx
   32e95:	44 8d 14 4a          	lea    (%rdx,%rcx,2),%r10d
   32e99:	0f b6 4b 18          	movzbl 0x18(%rbx),%ecx
   32e9d:	44 89 d2             	mov    %r10d,%edx
   32ea0:	44 88 53 19          	mov    %r10b,0x19(%rbx)
   32ea4:	45 0f b6 d2          	movzbl %r10b,%r10d
   32ea8:	c1 ea 08             	shr    $0x8,%edx
   32eab:	44 8d 0c 4a          	lea    (%rdx,%rcx,2),%r9d
   32eaf:	0f b6 4b 17          	movzbl 0x17(%rbx),%ecx
   32eb3:	44 89 ca             	mov    %r9d,%edx
   32eb6:	44 88 4b 18          	mov    %r9b,0x18(%rbx)
   32eba:	45 0f b6 c9          	movzbl %r9b,%r9d
   32ebe:	c1 ea 08             	shr    $0x8,%edx
   32ec1:	44 8d 04 4a          	lea    (%rdx,%rcx,2),%r8d
   32ec5:	0f b6 4b 16          	movzbl 0x16(%rbx),%ecx
   32ec9:	44 89 c2             	mov    %r8d,%edx
   32ecc:	44 88 43 17          	mov    %r8b,0x17(%rbx)
   32ed0:	45 0f b6 c0          	movzbl %r8b,%r8d
   32ed4:	c1 ea 08             	shr    $0x8,%edx
   32ed7:	8d 3c 4a             	lea    (%rdx,%rcx,2),%edi
   32eda:	0f b6 4b 15          	movzbl 0x15(%rbx),%ecx
   32ede:	89 fa                	mov    %edi,%edx
   32ee0:	40 88 7b 16          	mov    %dil,0x16(%rbx)
   32ee4:	40 0f b6 ff          	movzbl %dil,%edi
   32ee8:	c1 ea 08             	shr    $0x8,%edx
   32eeb:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
   32eee:	0f b6 4b 14          	movzbl 0x14(%rbx),%ecx
   32ef2:	89 c2                	mov    %eax,%edx
   32ef4:	88 43 15             	mov    %al,0x15(%rbx)
   32ef7:	c1 ea 08             	shr    $0x8,%edx
   32efa:	8d 34 4a             	lea    (%rdx,%rcx,2),%esi
   32efd:	0f b6 4b 13          	movzbl 0x13(%rbx),%ecx
   32f01:	89 f2                	mov    %esi,%edx
   32f03:	40 88 73 14          	mov    %sil,0x14(%rbx)
   32f07:	c1 ea 08             	shr    $0x8,%edx
   32f0a:	89 74 24 04          	mov    %esi,0x4(%rsp)
   32f0e:	8d 0c 4a             	lea    (%rdx,%rcx,2),%ecx
   32f11:	88 4b 13             	mov    %cl,0x13(%rbx)
   32f14:	89 ca                	mov    %ecx,%edx
   32f16:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   32f1a:	0f b6 4b 12          	movzbl 0x12(%rbx),%ecx
   32f1e:	c1 ea 08             	shr    $0x8,%edx
   32f21:	8d 34 4a             	lea    (%rdx,%rcx,2),%esi
   32f24:	0f b6 4b 11          	movzbl 0x11(%rbx),%ecx
   32f28:	89 f2                	mov    %esi,%edx
   32f2a:	40 88 73 12          	mov    %sil,0x12(%rbx)
   32f2e:	40 0f b6 f6          	movzbl %sil,%esi
   32f32:	c1 ea 08             	shr    $0x8,%edx
   32f35:	8d 0c 4a             	lea    (%rdx,%rcx,2),%ecx
   32f38:	89 ca                	mov    %ecx,%edx
   32f3a:	88 4b 11             	mov    %cl,0x11(%rbx)
   32f3d:	0f b6 c9             	movzbl %cl,%ecx
   32f40:	c1 ea 08             	shr    $0x8,%edx
   32f43:	42 8d 14 7a          	lea    (%rdx,%r15,2),%edx
   32f47:	41 c1 ff 07          	sar    $0x7,%r15d
   32f4b:	41 f7 df             	neg    %r15d
   32f4e:	88 53 10             	mov    %dl,0x10(%rbx)
   32f51:	0f b6 d2             	movzbl %dl,%edx
   32f54:	41 83 e7 87          	and    $0xffffff87,%r15d
   32f58:	44 30 7b 1f          	xor    %r15b,0x1f(%rbx)
   32f5c:	44 0f b6 7b 1f       	movzbl 0x1f(%rbx),%r15d
   32f61:	45 01 ff             	add    %r15d,%r15d
   32f64:	44 88 7b 2f          	mov    %r15b,0x2f(%rbx)
   32f68:	41 c1 ef 08          	shr    $0x8,%r15d
   32f6c:	47 8d 34 77          	lea    (%r15,%r14,2),%r14d
   32f70:	44 88 73 2e          	mov    %r14b,0x2e(%rbx)
   32f74:	41 c1 ee 08          	shr    $0x8,%r14d
   32f78:	47 8d 2c 6e          	lea    (%r14,%r13,2),%r13d
   32f7c:	44 88 6b 2d          	mov    %r13b,0x2d(%rbx)
   32f80:	41 c1 ed 08          	shr    $0x8,%r13d
   32f84:	47 8d 64 65 00       	lea    0x0(%r13,%r12,2),%r12d
   32f89:	44 88 63 2c          	mov    %r12b,0x2c(%rbx)
   32f8d:	41 c1 ec 08          	shr    $0x8,%r12d
   32f91:	41 8d 2c 6c          	lea    (%r12,%rbp,2),%ebp
   32f95:	40 88 6b 2b          	mov    %bpl,0x2b(%rbx)
   32f99:	c1 ed 08             	shr    $0x8,%ebp
   32f9c:	46 8d 5c 5d 00       	lea    0x0(%rbp,%r11,2),%r11d
   32fa1:	44 88 5b 2a          	mov    %r11b,0x2a(%rbx)
   32fa5:	41 c1 eb 08          	shr    $0x8,%r11d
   32fa9:	47 8d 14 53          	lea    (%r11,%r10,2),%r10d
   32fad:	44 88 53 29          	mov    %r10b,0x29(%rbx)
   32fb1:	41 c1 ea 08          	shr    $0x8,%r10d
   32fb5:	47 8d 0c 4a          	lea    (%r10,%r9,2),%r9d
   32fb9:	44 88 4b 28          	mov    %r9b,0x28(%rbx)
   32fbd:	41 c1 e9 08          	shr    $0x8,%r9d
   32fc1:	47 8d 04 41          	lea    (%r9,%r8,2),%r8d
   32fc5:	44 88 43 27          	mov    %r8b,0x27(%rbx)
   32fc9:	41 c1 e8 08          	shr    $0x8,%r8d
   32fcd:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   32fd1:	40 88 7b 26          	mov    %dil,0x26(%rbx)
   32fd5:	c1 ef 08             	shr    $0x8,%edi
   32fd8:	41 89 f8             	mov    %edi,%r8d
   32fdb:	0f b6 f8             	movzbl %al,%edi
   32fde:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   32fe2:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   32fe6:	40 88 7b 25          	mov    %dil,0x25(%rbx)
   32fea:	c1 ef 08             	shr    $0x8,%edi
   32fed:	41 89 f8             	mov    %edi,%r8d
   32ff0:	0f b6 7c 24 04       	movzbl 0x4(%rsp),%edi
   32ff5:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   32ff9:	40 88 7b 24          	mov    %dil,0x24(%rbx)
   32ffd:	c1 ef 08             	shr    $0x8,%edi
   33000:	41 89 f8             	mov    %edi,%r8d
   33003:	0f b6 7c 24 08       	movzbl 0x8(%rsp),%edi
   33008:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   3300c:	40 88 7b 23          	mov    %dil,0x23(%rbx)
   33010:	c1 ef 08             	shr    $0x8,%edi
   33013:	8d 34 77             	lea    (%rdi,%rsi,2),%esi
   33016:	40 88 73 22          	mov    %sil,0x22(%rbx)
   3301a:	c1 ee 08             	shr    $0x8,%esi
   3301d:	8d 0c 4e             	lea    (%rsi,%rcx,2),%ecx
   33020:	88 4b 21             	mov    %cl,0x21(%rbx)
   33023:	c1 e9 08             	shr    $0x8,%ecx
   33026:	8d 0c 51             	lea    (%rcx,%rdx,2),%ecx
   33029:	c1 fa 07             	sar    $0x7,%edx
   3302c:	f7 da                	neg    %edx
   3302e:	88 4b 20             	mov    %cl,0x20(%rbx)
   33031:	83 e2 87             	and    $0xffffff87,%edx
   33034:	30 53 2f             	xor    %dl,0x2f(%rbx)
   33037:	48 83 c4 18          	add    $0x18,%rsp
   3303b:	5b                   	pop    %rbx
   3303c:	5d                   	pop    %rbp
   3303d:	41 5c                	pop    %r12
   3303f:	41 5d                	pop    %r13
   33041:	41 5e                	pop    %r14
   33043:	41 5f                	pop    %r15
   33045:	c3                   	retq   
   33046:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   3304b:	c3                   	retq   
   3304c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   33051:	c3                   	retq   
   33052:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33059:	00 00 00 
   3305c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033060 <l9_ippsAES_CMACUpdate>:
   33060:	48 85 d2             	test   %rdx,%rdx
   33063:	0f 84 c1 03 00 00    	je     3342a <l9_ippsAES_CMACUpdate+0x3ca>
   33069:	55                   	push   %rbp
   3306a:	48 89 e5             	mov    %rsp,%rbp
   3306d:	41 57                	push   %r15
   3306f:	41 56                	push   %r14
   33071:	41 55                	push   %r13
   33073:	41 54                	push   %r12
   33075:	53                   	push   %rbx
   33076:	48 89 d3             	mov    %rdx,%rbx
   33079:	48 f7 db             	neg    %rbx
   3307c:	83 e3 0f             	and    $0xf,%ebx
   3307f:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   33083:	48 01 d3             	add    %rdx,%rbx
   33086:	48 83 ec 20          	sub    $0x20,%rsp
   3308a:	81 3b 43 41 4d 43    	cmpl   $0x434d4143,(%rbx)
   33090:	0f 85 8a 03 00 00    	jne    33420 <l9_ippsAES_CMACUpdate+0x3c0>
   33096:	49 89 fd             	mov    %rdi,%r13
   33099:	41 89 f6             	mov    %esi,%r14d
   3309c:	85 f6                	test   %esi,%esi
   3309e:	79 09                	jns    330a9 <l9_ippsAES_CMACUpdate+0x49>
   330a0:	48 85 ff             	test   %rdi,%rdi
   330a3:	0f 85 63 03 00 00    	jne    3340c <l9_ippsAES_CMACUpdate+0x3ac>
   330a9:	45 85 f6             	test   %r14d,%r14d
   330ac:	74 09                	je     330b7 <l9_ippsAES_CMACUpdate+0x57>
   330ae:	4d 85 ed             	test   %r13,%r13
   330b1:	0f 84 5f 03 00 00    	je     33416 <l9_ippsAES_CMACUpdate+0x3b6>
   330b7:	45 85 f6             	test   %r14d,%r14d
   330ba:	0f 84 00 02 00 00    	je     332c0 <l9_ippsAES_CMACUpdate+0x260>
   330c0:	8b 53 04             	mov    0x4(%rbx),%edx
   330c3:	85 d2                	test   %edx,%edx
   330c5:	0f 84 e8 00 00 00    	je     331b3 <l9_ippsAES_CMACUpdate+0x153>
   330cb:	b9 10 00 00 00       	mov    $0x10,%ecx
   330d0:	4c 8d 53 30          	lea    0x30(%rbx),%r10
   330d4:	4c 63 c2             	movslq %edx,%r8
   330d7:	29 d1                	sub    %edx,%ecx
   330d9:	44 39 f1             	cmp    %r14d,%ecx
   330dc:	41 0f 4f ce          	cmovg  %r14d,%ecx
   330e0:	85 c9                	test   %ecx,%ecx
   330e2:	0f 8e ae 00 00 00    	jle    33196 <l9_ippsAES_CMACUpdate+0x136>
   330e8:	4a 8d 74 03 50       	lea    0x50(%rbx,%r8,1),%rsi
   330ed:	4a 8d 7c 03 30       	lea    0x30(%rbx,%r8,1),%rdi
   330f2:	49 39 f5             	cmp    %rsi,%r13
   330f5:	49 8d 75 20          	lea    0x20(%r13),%rsi
   330f9:	8d 51 ff             	lea    -0x1(%rcx),%edx
   330fc:	41 0f 93 c3          	setae  %r11b
   33100:	48 39 f7             	cmp    %rsi,%rdi
   33103:	40 0f 93 c6          	setae  %sil
   33107:	41 08 f3             	or     %sil,%r11b
   3310a:	0f 84 a0 02 00 00    	je     333b0 <l9_ippsAES_CMACUpdate+0x350>
   33110:	83 fa 1e             	cmp    $0x1e,%edx
   33113:	0f 86 97 02 00 00    	jbe    333b0 <l9_ippsAES_CMACUpdate+0x350>
   33119:	89 ce                	mov    %ecx,%esi
   3311b:	31 d2                	xor    %edx,%edx
   3311d:	c1 ee 05             	shr    $0x5,%esi
   33120:	48 c1 e6 05          	shl    $0x5,%rsi
   33124:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3312b:	00 00 00 00 
   3312f:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33136:	00 00 00 00 
   3313a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33140:	c4 c1 7e 6f 4c 15 00 	vmovdqu 0x0(%r13,%rdx,1),%ymm1
   33147:	c5 fe 7f 0c 17       	vmovdqu %ymm1,(%rdi,%rdx,1)
   3314c:	48 83 c2 20          	add    $0x20,%rdx
   33150:	48 39 f2             	cmp    %rsi,%rdx
   33153:	75 eb                	jne    33140 <l9_ippsAES_CMACUpdate+0xe0>
   33155:	89 ca                	mov    %ecx,%edx
   33157:	83 e2 e0             	and    $0xffffffe0,%edx
   3315a:	39 d1                	cmp    %edx,%ecx
   3315c:	74 35                	je     33193 <l9_ippsAES_CMACUpdate+0x133>
   3315e:	4d 01 d0             	add    %r10,%r8
   33161:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33168:	00 00 00 00 
   3316c:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33173:	00 00 00 00 
   33177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3317e:	00 00 
   33180:	48 63 f2             	movslq %edx,%rsi
   33183:	ff c2                	inc    %edx
   33185:	41 0f b6 7c 35 00    	movzbl 0x0(%r13,%rsi,1),%edi
   3318b:	41 88 3c 30          	mov    %dil,(%r8,%rsi,1)
   3318f:	39 d1                	cmp    %edx,%ecx
   33191:	7f ed                	jg     33180 <l9_ippsAES_CMACUpdate+0x120>
   33193:	8b 53 04             	mov    0x4(%rbx),%edx
   33196:	01 ca                	add    %ecx,%edx
   33198:	48 63 f1             	movslq %ecx,%rsi
   3319b:	89 53 04             	mov    %edx,0x4(%rbx)
   3319e:	49 01 f5             	add    %rsi,%r13
   331a1:	41 29 ce             	sub    %ecx,%r14d
   331a4:	0f 84 fe 01 00 00    	je     333a8 <l9_ippsAES_CMACUpdate+0x348>
   331aa:	83 fa 10             	cmp    $0x10,%edx
   331ad:	0f 84 bd 01 00 00    	je     33370 <l9_ippsAES_CMACUpdate+0x310>
   331b3:	45 89 f7             	mov    %r14d,%r15d
   331b6:	41 83 e7 f0          	and    $0xfffffff0,%r15d
   331ba:	41 f6 c6 0f          	test   $0xf,%r14b
   331be:	41 8d 57 f0          	lea    -0x10(%r15),%edx
   331c2:	44 0f 44 fa          	cmove  %edx,%r15d
   331c6:	45 85 ff             	test   %r15d,%r15d
   331c9:	0f 85 09 01 00 00    	jne    332d8 <l9_ippsAES_CMACUpdate+0x278>
   331cf:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   331d3:	45 85 f6             	test   %r14d,%r14d
   331d6:	0f 8e 98 00 00 00    	jle    33274 <l9_ippsAES_CMACUpdate+0x214>
   331dc:	49 8d 4d 20          	lea    0x20(%r13),%rcx
   331e0:	41 8d 56 ff          	lea    -0x1(%r14),%edx
   331e4:	48 39 cf             	cmp    %rcx,%rdi
   331e7:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   331eb:	40 0f 93 c6          	setae  %sil
   331ef:	49 39 cd             	cmp    %rcx,%r13
   331f2:	0f 93 c1             	setae  %cl
   331f5:	40 08 ce             	or     %cl,%sil
   331f8:	0f 84 e2 01 00 00    	je     333e0 <l9_ippsAES_CMACUpdate+0x380>
   331fe:	83 fa 1e             	cmp    $0x1e,%edx
   33201:	0f 86 d9 01 00 00    	jbe    333e0 <l9_ippsAES_CMACUpdate+0x380>
   33207:	44 89 f1             	mov    %r14d,%ecx
   3320a:	31 d2                	xor    %edx,%edx
   3320c:	c1 e9 05             	shr    $0x5,%ecx
   3320f:	48 c1 e1 05          	shl    $0x5,%rcx
   33213:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3321a:	00 00 00 00 
   3321e:	66 90                	xchg   %ax,%ax
   33220:	c4 c1 7e 6f 54 15 00 	vmovdqu 0x0(%r13,%rdx,1),%ymm2
   33227:	c5 fe 7f 54 13 30    	vmovdqu %ymm2,0x30(%rbx,%rdx,1)
   3322d:	48 83 c2 20          	add    $0x20,%rdx
   33231:	48 39 ca             	cmp    %rcx,%rdx
   33234:	75 ea                	jne    33220 <l9_ippsAES_CMACUpdate+0x1c0>
   33236:	44 89 f2             	mov    %r14d,%edx
   33239:	83 e2 e0             	and    $0xffffffe0,%edx
   3323c:	44 39 f2             	cmp    %r14d,%edx
   3323f:	74 33                	je     33274 <l9_ippsAES_CMACUpdate+0x214>
   33241:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33248:	00 00 00 00 
   3324c:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33253:	00 00 00 00 
   33257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3325e:	00 00 
   33260:	48 63 ca             	movslq %edx,%rcx
   33263:	ff c2                	inc    %edx
   33265:	41 0f b6 74 0d 00    	movzbl 0x0(%r13,%rcx,1),%esi
   3326b:	40 88 34 0f          	mov    %sil,(%rdi,%rcx,1)
   3326f:	44 39 f2             	cmp    %r14d,%edx
   33272:	7c ec                	jl     33260 <l9_ippsAES_CMACUpdate+0x200>
   33274:	44 01 73 04          	add    %r14d,0x4(%rbx)
   33278:	31 c0                	xor    %eax,%eax
   3327a:	c5 f8 77             	vzeroupper 
   3327d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   33281:	5b                   	pop    %rbx
   33282:	41 5c                	pop    %r12
   33284:	41 5d                	pop    %r13
   33286:	41 5e                	pop    %r14
   33288:	41 5f                	pop    %r15
   3328a:	5d                   	pop    %rbp
   3328b:	c3                   	retq   
   3328c:	0f 1f 40 00          	nopl   0x0(%rax)
   33290:	89 d1                	mov    %edx,%ecx
   33292:	49 89 c0             	mov    %rax,%r8
   33295:	44 89 fa             	mov    %r15d,%edx
   33298:	4c 89 ee             	mov    %r13,%rsi
   3329b:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   3329f:	c5 f8 77             	vzeroupper 
   332a2:	e8 f9 13 00 00       	callq  346a0 <l9_cpAESCMAC_Update_AES_NI>
   332a7:	45 29 fe             	sub    %r15d,%r14d
   332aa:	0f 85 80 01 00 00    	jne    33430 <l9_ippsAES_CMACUpdate+0x3d0>
   332b0:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   332b7:	00 00 00 00 
   332bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   332c0:	31 c0                	xor    %eax,%eax
   332c2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   332c6:	5b                   	pop    %rbx
   332c7:	41 5c                	pop    %r12
   332c9:	41 5d                	pop    %r13
   332cb:	41 5e                	pop    %r14
   332cd:	41 5f                	pop    %r15
   332cf:	5d                   	pop    %rbp
   332d0:	c3                   	retq   
   332d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   332d8:	48 8d 43 40          	lea    0x40(%rbx),%rax
   332dc:	8b 53 5c             	mov    0x5c(%rbx),%edx
   332df:	81 bb 80 02 00 00 00 	cmpl   $0x400,0x280(%rbx)
   332e6:	04 00 00 
   332e9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   332ee:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   332f5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   332fa:	74 94                	je     33290 <l9_ippsAES_CMACUpdate+0x230>
   332fc:	48 8b 43 60          	mov    0x60(%rbx),%rax
   33300:	4d 89 ec             	mov    %r13,%r12
   33303:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33308:	43 8d 04 2f          	lea    (%r15,%r13,1),%eax
   3330c:	89 44 24 04          	mov    %eax,0x4(%rsp)
   33310:	c5 f8 77             	vzeroupper 
   33313:	eb 06                	jmp    3331b <l9_ippsAES_CMACUpdate+0x2bb>
   33315:	0f 1f 00             	nopl   (%rax)
   33318:	8b 53 5c             	mov    0x5c(%rbx),%edx
   3331b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   33320:	41 8b 0c 24          	mov    (%r12),%ecx
   33324:	45 31 c0             	xor    %r8d,%r8d
   33327:	49 83 c4 10          	add    $0x10,%r12
   3332b:	31 4b 40             	xor    %ecx,0x40(%rbx)
   3332e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   33333:	41 8b 4c 24 f4       	mov    -0xc(%r12),%ecx
   33338:	48 89 fe             	mov    %rdi,%rsi
   3333b:	31 4b 44             	xor    %ecx,0x44(%rbx)
   3333e:	41 8b 4c 24 f8       	mov    -0x8(%r12),%ecx
   33343:	31 4b 48             	xor    %ecx,0x48(%rbx)
   33346:	41 8b 4c 24 fc       	mov    -0x4(%r12),%ecx
   3334b:	31 4b 4c             	xor    %ecx,0x4c(%rbx)
   3334e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   33353:	ff d0                	callq  *%rax
   33355:	44 39 64 24 04       	cmp    %r12d,0x4(%rsp)
   3335a:	75 bc                	jne    33318 <l9_ippsAES_CMACUpdate+0x2b8>
   3335c:	45 29 fe             	sub    %r15d,%r14d
   3335f:	0f 84 5b ff ff ff    	je     332c0 <l9_ippsAES_CMACUpdate+0x260>
   33365:	e9 c6 00 00 00       	jmpq   33430 <l9_ippsAES_CMACUpdate+0x3d0>
   3336a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33370:	c5 fa 6f 5b 40       	vmovdqu 0x40(%rbx),%xmm3
   33375:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   33379:	8b 53 5c             	mov    0x5c(%rbx),%edx
   3337c:	45 31 c0             	xor    %r8d,%r8d
   3337f:	c5 e1 ef 43 30       	vpxor  0x30(%rbx),%xmm3,%xmm0
   33384:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   3338b:	48 89 fe             	mov    %rdi,%rsi
   3338e:	c5 f8 11 43 40       	vmovups %xmm0,0x40(%rbx)
   33393:	c5 f8 77             	vzeroupper 
   33396:	ff 53 60             	callq  *0x60(%rbx)
   33399:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
   333a0:	e9 0e fe ff ff       	jmpq   331b3 <l9_ippsAES_CMACUpdate+0x153>
   333a5:	0f 1f 00             	nopl   (%rax)
   333a8:	c5 f8 77             	vzeroupper 
   333ab:	e9 10 ff ff ff       	jmpq   332c0 <l9_ippsAES_CMACUpdate+0x260>
   333b0:	89 d6                	mov    %edx,%esi
   333b2:	49 01 d8             	add    %rbx,%r8
   333b5:	31 d2                	xor    %edx,%edx
   333b7:	eb 0a                	jmp    333c3 <l9_ippsAES_CMACUpdate+0x363>
   333b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   333c0:	48 89 fa             	mov    %rdi,%rdx
   333c3:	41 0f b6 7c 15 00    	movzbl 0x0(%r13,%rdx,1),%edi
   333c9:	41 88 7c 10 30       	mov    %dil,0x30(%r8,%rdx,1)
   333ce:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   333d2:	48 39 f2             	cmp    %rsi,%rdx
   333d5:	75 e9                	jne    333c0 <l9_ippsAES_CMACUpdate+0x360>
   333d7:	e9 b7 fd ff ff       	jmpq   33193 <l9_ippsAES_CMACUpdate+0x133>
   333dc:	0f 1f 40 00          	nopl   0x0(%rax)
   333e0:	89 d1                	mov    %edx,%ecx
   333e2:	31 d2                	xor    %edx,%edx
   333e4:	eb 0d                	jmp    333f3 <l9_ippsAES_CMACUpdate+0x393>
   333e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   333ed:	00 00 00 
   333f0:	48 89 f2             	mov    %rsi,%rdx
   333f3:	41 0f b6 74 15 00    	movzbl 0x0(%r13,%rdx,1),%esi
   333f9:	40 88 74 13 30       	mov    %sil,0x30(%rbx,%rdx,1)
   333fe:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   33402:	48 39 d1             	cmp    %rdx,%rcx
   33405:	75 e9                	jne    333f0 <l9_ippsAES_CMACUpdate+0x390>
   33407:	e9 68 fe ff ff       	jmpq   33274 <l9_ippsAES_CMACUpdate+0x214>
   3340c:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   33411:	e9 ac fe ff ff       	jmpq   332c2 <l9_ippsAES_CMACUpdate+0x262>
   33416:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   3341b:	e9 a2 fe ff ff       	jmpq   332c2 <l9_ippsAES_CMACUpdate+0x262>
   33420:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   33425:	e9 98 fe ff ff       	jmpq   332c2 <l9_ippsAES_CMACUpdate+0x262>
   3342a:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   3342f:	c3                   	retq   
   33430:	4d 63 df             	movslq %r15d,%r11
   33433:	4d 01 dd             	add    %r11,%r13
   33436:	e9 94 fd ff ff       	jmpq   331cf <l9_ippsAES_CMACUpdate+0x16f>
   3343b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000033440 <l9_ippsAESInit>:
   33440:	55                   	push   %rbp
   33441:	48 89 e5             	mov    %rsp,%rbp
   33444:	41 57                	push   %r15
   33446:	41 56                	push   %r14
   33448:	41 55                	push   %r13
   3344a:	41 54                	push   %r12
   3344c:	41 52                	push   %r10
   3344e:	53                   	push   %rbx
   3344f:	48 89 d3             	mov    %rdx,%rbx
   33452:	48 f7 db             	neg    %rbx
   33455:	83 e3 0f             	and    $0xf,%ebx
   33458:	48 83 ec 40          	sub    $0x40,%rsp
   3345c:	48 01 d3             	add    %rdx,%rbx
   3345f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33466:	00 00 
   33468:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   3346c:	31 c0                	xor    %eax,%eax
   3346e:	48 85 d2             	test   %rdx,%rdx
   33471:	0f 84 35 02 00 00    	je     336ac <l9_ippsAESInit+0x26c>
   33477:	89 f0                	mov    %esi,%eax
   33479:	49 89 fe             	mov    %rdi,%r14
   3347c:	83 e0 f7             	and    $0xfffffff7,%eax
   3347f:	83 f8 10             	cmp    $0x10,%eax
   33482:	74 09                	je     3348d <l9_ippsAESInit+0x4d>
   33484:	83 fe 20             	cmp    $0x20,%esi
   33487:	0f 85 11 02 00 00    	jne    3369e <l9_ippsAESInit+0x25e>
   3348d:	48 63 c9             	movslq %ecx,%rcx
   33490:	48 8d bb 38 02 00 00 	lea    0x238(%rbx),%rdi
   33497:	48 01 ca             	add    %rcx,%rdx
   3349a:	48 39 d7             	cmp    %rdx,%rdi
   3349d:	0f 87 02 02 00 00    	ja     336a5 <l9_ippsAESInit+0x265>
   334a3:	c1 e6 03             	shl    $0x3,%esi
   334a6:	48 8d 15 e3 b6 00 00 	lea    0xb6e3(%rip),%rdx        # 3eb90 <rij128nKeys>
   334ad:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   334b1:	8d 46 1f             	lea    0x1f(%rsi),%eax
   334b4:	c5 f8 29 45 a0       	vmovaps %xmm0,-0x60(%rbp)
   334b9:	0f 48 f0             	cmovs  %eax,%esi
   334bc:	c5 f8 29 45 b0       	vmovaps %xmm0,-0x50(%rbp)
   334c1:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   334c5:	c5 fe 7f 03          	vmovdqu %ymm0,(%rbx)
   334c9:	c1 fe 05             	sar    $0x5,%esi
   334cc:	c5 fe 7f 43 20       	vmovdqu %ymm0,0x20(%rbx)
   334d1:	8d 46 fc             	lea    -0x4(%rsi),%eax
   334d4:	c5 fe 7f 43 40       	vmovdqu %ymm0,0x40(%rbx)
   334d9:	d1 f8                	sar    %eax
   334db:	4d 85 f6             	test   %r14,%r14
   334de:	c5 fe 7f 43 60       	vmovdqu %ymm0,0x60(%rbx)
   334e3:	48 98                	cltq   
   334e5:	c5 fe 7f 83 80 00 00 	vmovdqu %ymm0,0x80(%rbx)
   334ec:	00 
   334ed:	8b 0c 82             	mov    (%rdx,%rax,4),%ecx
   334f0:	48 8d 15 a9 b6 00 00 	lea    0xb6a9(%rip),%rdx        # 3eba0 <rij128nRounds>
   334f7:	c5 fe 7f 83 a0 00 00 	vmovdqu %ymm0,0xa0(%rbx)
   334fe:	00 
   334ff:	44 8b 24 82          	mov    (%rdx,%rax,4),%r12d
   33503:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   33507:	c5 fe 7f 83 c0 00 00 	vmovdqu %ymm0,0xc0(%rbx)
   3350e:	00 
   3350f:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
   33512:	4c 0f 44 f0          	cmove  %rax,%r14
   33516:	48 8d 83 20 02 00 00 	lea    0x220(%rbx),%rax
   3351d:	c5 fe 7f 83 e0 00 00 	vmovdqu %ymm0,0xe0(%rbx)
   33524:	00 
   33525:	c5 fe 7f 83 00 01 00 	vmovdqu %ymm0,0x100(%rbx)
   3352c:	00 
   3352d:	c5 fe 7f 83 20 01 00 	vmovdqu %ymm0,0x120(%rbx)
   33534:	00 
   33535:	c5 fe 7f 83 40 01 00 	vmovdqu %ymm0,0x140(%rbx)
   3353c:	00 
   3353d:	c5 fe 7f 83 60 01 00 	vmovdqu %ymm0,0x160(%rbx)
   33544:	00 
   33545:	c5 fe 7f 83 80 01 00 	vmovdqu %ymm0,0x180(%rbx)
   3354c:	00 
   3354d:	c5 fe 7f 83 a0 01 00 	vmovdqu %ymm0,0x1a0(%rbx)
   33554:	00 
   33555:	c5 fe 7f 83 c0 01 00 	vmovdqu %ymm0,0x1c0(%rbx)
   3355c:	00 
   3355d:	c5 fe 7f 83 e0 01 00 	vmovdqu %ymm0,0x1e0(%rbx)
   33564:	00 
   33565:	c5 fe 7f 83 00 02 00 	vmovdqu %ymm0,0x200(%rbx)
   3356c:	00 
   3356d:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33574:	00 00 00 00 
   33578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3357f:	00 
   33580:	c6 00 00             	movb   $0x0,(%rax)
   33583:	48 ff c0             	inc    %rax
   33586:	48 39 c7             	cmp    %rax,%rdi
   33589:	75 f5                	jne    33580 <l9_ippsAESInit+0x140>
   3358b:	bf 00 04 00 00       	mov    $0x400,%edi
   33590:	c7 03 4a 49 52 20    	movl   $0x2052494a,(%rbx)
   33596:	c7 43 08 04 00 00 00 	movl   $0x4,0x8(%rbx)
   3359d:	89 73 04             	mov    %esi,0x4(%rbx)
   335a0:	89 75 98             	mov    %esi,-0x68(%rbp)
   335a3:	44 89 63 0c          	mov    %r12d,0xc(%rbx)
   335a7:	c7 83 34 02 00 00 01 	movl   $0x1,0x234(%rbx)
   335ae:	00 00 00 
   335b1:	c5 f8 77             	vzeroupper 
   335b4:	e8 47 be ff ff       	callq  2f400 <cpGetFeature>
   335b9:	8b 75 98             	mov    -0x68(%rbp),%esi
   335bc:	85 c0                	test   %eax,%eax
   335be:	41 89 c7             	mov    %eax,%r15d
   335c1:	0f 85 a9 00 00 00    	jne    33670 <l9_ippsAESInit+0x230>
   335c7:	48 83 ec 08          	sub    $0x8,%rsp
   335cb:	4c 8d 6b 30          	lea    0x30(%rbx),%r13
   335cf:	44 8b 45 94          	mov    -0x6c(%rbp),%r8d
   335d3:	44 89 e1             	mov    %r12d,%ecx
   335d6:	48 8d 83 30 01 00 00 	lea    0x130(%rbx),%rax
   335dd:	4d 89 e9             	mov    %r13,%r9
   335e0:	4c 89 f7             	mov    %r14,%rdi
   335e3:	41 ff c4             	inc    %r12d
   335e6:	50                   	push   %rax
   335e7:	ba 04 00 00 00       	mov    $0x4,%edx
   335ec:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   335f0:	e8 cb 00 00 00       	callq  336c0 <l9_ExpandRijndaelKey>
   335f5:	58                   	pop    %rax
   335f6:	5a                   	pop    %rdx
   335f7:	45 85 e4             	test   %r12d,%r12d
   335fa:	7e 33                	jle    3362f <l9_ippsAESInit+0x1ef>
   335fc:	0f 1f 40 00          	nopl   0x0(%rax)
   33600:	45 89 fe             	mov    %r15d,%r14d
   33603:	41 ff c7             	inc    %r15d
   33606:	41 c1 e6 04          	shl    $0x4,%r14d
   3360a:	4d 63 f6             	movslq %r14d,%r14
   3360d:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
   33612:	48 89 fe             	mov    %rdi,%rsi
   33615:	e8 46 18 00 00       	callq  34e60 <l9_TransformNative2Composite>
   3361a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   3361e:	4a 8d 3c 30          	lea    (%rax,%r14,1),%rdi
   33622:	48 89 fe             	mov    %rdi,%rsi
   33625:	e8 36 18 00 00       	callq  34e60 <l9_TransformNative2Composite>
   3362a:	45 39 e7             	cmp    %r12d,%r15d
   3362d:	75 d1                	jne    33600 <l9_ippsAESInit+0x1c0>
   3362f:	c5 fa 7e 15 b9 39 01 	vmovq  0x139b9(%rip),%xmm2        # 46ff0 <_GLOBAL_OFFSET_TABLE_+0x50>
   33636:	00 
   33637:	c4 e3 e9 22 05 7f 39 	vpinsrq $0x1,0x1397f(%rip),%xmm2,%xmm0        # 46fc0 <_GLOBAL_OFFSET_TABLE_+0x20>
   3363e:	01 00 01 
   33641:	c5 f8 11 43 10       	vmovups %xmm0,0x10(%rbx)
   33646:	31 c0                	xor    %eax,%eax
   33648:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   3364c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   33653:	00 00 
   33655:	75 5c                	jne    336b3 <l9_ippsAESInit+0x273>
   33657:	48 8d 65 d0          	lea    -0x30(%rbp),%rsp
   3365b:	5b                   	pop    %rbx
   3365c:	41 5a                	pop    %r10
   3365e:	41 5c                	pop    %r12
   33660:	41 5d                	pop    %r13
   33662:	41 5e                	pop    %r14
   33664:	41 5f                	pop    %r15
   33666:	5d                   	pop    %rbp
   33667:	c3                   	retq   
   33668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3366f:	00 
   33670:	c5 fa 7e 0d 40 39 01 	vmovq  0x13940(%rip),%xmm1        # 46fb8 <_GLOBAL_OFFSET_TABLE_+0x18>
   33677:	00 
   33678:	48 89 de             	mov    %rbx,%rsi
   3367b:	4c 89 f7             	mov    %r14,%rdi
   3367e:	c4 e3 f1 22 05 48 39 	vpinsrq $0x1,0x13948(%rip),%xmm1,%xmm0        # 46fd0 <_GLOBAL_OFFSET_TABLE_+0x30>
   33685:	01 00 01 
   33688:	c7 83 30 02 00 00 00 	movl   $0x400,0x230(%rbx)
   3368f:	04 00 00 
   33692:	c5 f8 11 43 10       	vmovups %xmm0,0x10(%rbx)
   33697:	e8 a4 54 00 00       	callq  38b40 <l9_cpExpandAesKey_NI>
   3369c:	eb a8                	jmp    33646 <l9_ippsAESInit+0x206>
   3369e:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   336a3:	eb a3                	jmp    33648 <l9_ippsAESInit+0x208>
   336a5:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   336aa:	eb 9c                	jmp    33648 <l9_ippsAESInit+0x208>
   336ac:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   336b1:	eb 95                	jmp    33648 <l9_ippsAESInit+0x208>
   336b3:	e8 d4 7d fd ff       	callq  b48c <__stack_chk_fail>
   336b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   336bf:	00 

00000000000336c0 <l9_ExpandRijndaelKey>:
   336c0:	55                   	push   %rbp
   336c1:	48 89 e5             	mov    %rsp,%rbp
   336c4:	41 57                	push   %r15
   336c6:	41 56                	push   %r14
   336c8:	41 55                	push   %r13
   336ca:	41 54                	push   %r12
   336cc:	53                   	push   %rbx
   336cd:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   336d1:	89 54 24 e0          	mov    %edx,-0x20(%rsp)
   336d5:	31 d2                	xor    %edx,%edx
   336d7:	89 4c 24 d4          	mov    %ecx,-0x2c(%rsp)
   336db:	8d 4e ff             	lea    -0x1(%rsi),%ecx
   336de:	44 89 44 24 f8       	mov    %r8d,-0x8(%rsp)
   336e3:	85 f6                	test   %esi,%esi
   336e5:	7f 0c                	jg     336f3 <l9_ExpandRijndaelKey+0x33>
   336e7:	e9 7d 0f 00 00       	jmpq   34669 <l9_ExpandRijndaelKey+0xfa9>
   336ec:	0f 1f 40 00          	nopl   0x0(%rax)
   336f0:	48 89 c2             	mov    %rax,%rdx
   336f3:	44 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%r8d
   336fa:	00 
   336fb:	4d 63 c0             	movslq %r8d,%r8
   336fe:	42 0f b6 44 07 03    	movzbl 0x3(%rdi,%r8,1),%eax
   33704:	46 0f b6 54 07 02    	movzbl 0x2(%rdi,%r8,1),%r10d
   3370a:	c1 e0 18             	shl    $0x18,%eax
   3370d:	41 c1 e2 10          	shl    $0x10,%r10d
   33711:	44 09 d0             	or     %r10d,%eax
   33714:	46 0f b6 14 07       	movzbl (%rdi,%r8,1),%r10d
   33719:	46 0f b6 44 07 01    	movzbl 0x1(%rdi,%r8,1),%r8d
   3371f:	44 09 d0             	or     %r10d,%eax
   33722:	41 c1 e0 08          	shl    $0x8,%r8d
   33726:	44 09 c0             	or     %r8d,%eax
   33729:	41 89 04 91          	mov    %eax,(%r9,%rdx,4)
   3372d:	48 8d 42 01          	lea    0x1(%rdx),%rax
   33731:	48 39 d1             	cmp    %rdx,%rcx
   33734:	75 ba                	jne    336f0 <l9_ExpandRijndaelKey+0x30>
   33736:	41 8b 41 08          	mov    0x8(%r9),%eax
   3373a:	45 8b 01             	mov    (%r9),%r8d
   3373d:	41 8b 79 04          	mov    0x4(%r9),%edi
   33741:	41 8b 49 0c          	mov    0xc(%r9),%ecx
   33745:	89 44 24 fc          	mov    %eax,-0x4(%rsp)
   33749:	83 fe 04             	cmp    $0x4,%esi
   3374c:	0f 84 ed 0c 00 00    	je     3443f <l9_ExpandRijndaelKey+0xd7f>
   33752:	41 8b 41 10          	mov    0x10(%r9),%eax
   33756:	45 8b 51 14          	mov    0x14(%r9),%r10d
   3375a:	89 44 24 f0          	mov    %eax,-0x10(%rsp)
   3375e:	83 fe 06             	cmp    $0x6,%esi
   33761:	0f 84 ca 0a 00 00    	je     34231 <l9_ExpandRijndaelKey+0xb71>
   33767:	83 7c 24 f8 08       	cmpl   $0x8,-0x8(%rsp)
   3376c:	41 8b 59 18          	mov    0x18(%r9),%ebx
   33770:	45 8b 59 1c          	mov    0x1c(%r9),%r11d
   33774:	0f 8e af 03 00 00    	jle    33b29 <l9_ExpandRijndaelKey+0x469>
   3377a:	48 8d 05 3f b4 00 00 	lea    0xb43f(%rip),%rax        # 3ebc0 <RconTbl>
   33781:	c7 44 24 e4 08 00 00 	movl   $0x8,-0x1c(%rsp)
   33788:	00 
   33789:	48 89 44 24 d8       	mov    %rax,-0x28(%rsp)
   3378e:	48 8d 05 ab b6 00 00 	lea    0xb6ab(%rip),%rax        # 3ee40 <RijEncSbox>
   33795:	44 89 44 24 e8       	mov    %r8d,-0x18(%rsp)
   3379a:	41 89 d8             	mov    %ebx,%r8d
   3379d:	0f 1f 00             	nopl   (%rax)
   337a0:	45 89 dd             	mov    %r11d,%r13d
   337a3:	45 89 de             	mov    %r11d,%r14d
   337a6:	31 f6                	xor    %esi,%esi
   337a8:	45 31 e4             	xor    %r12d,%r12d
   337ab:	41 c0 ed 03          	shr    $0x3,%r13b
   337af:	45 0f b6 ed          	movzbl %r13b,%r13d
   337b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   337ba:	00 00 00 00 
   337be:	66 90                	xchg   %ax,%ax
   337c0:	48 89 f2             	mov    %rsi,%rdx
   337c3:	4c 31 ea             	xor    %r13,%rdx
   337c6:	48 8d 5a ff          	lea    -0x1(%rdx),%rbx
   337ca:	c4 e2 e8 f2 d3       	andn   %rbx,%rdx,%rdx
   337cf:	48 c1 fa 3f          	sar    $0x3f,%rdx
   337d3:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   337d7:	48 ff c6             	inc    %rsi
   337da:	49 09 d4             	or     %rdx,%r12
   337dd:	48 83 fe 20          	cmp    $0x20,%rsi
   337e1:	75 dd                	jne    337c0 <l9_ExpandRijndaelKey+0x100>
   337e3:	45 89 df             	mov    %r11d,%r15d
   337e6:	41 83 e6 07          	and    $0x7,%r14d
   337ea:	31 f6                	xor    %esi,%esi
   337ec:	31 db                	xor    %ebx,%ebx
   337ee:	41 c1 ef 18          	shr    $0x18,%r15d
   337f2:	46 8d 2c f5 00 00 00 	lea    0x0(,%r14,8),%r13d
   337f9:	00 
   337fa:	45 89 fe             	mov    %r15d,%r14d
   337fd:	c4 42 93 f7 e4       	shrx   %r13,%r12,%r12
   33802:	45 89 e5             	mov    %r12d,%r13d
   33805:	41 c0 ee 03          	shr    $0x3,%r14b
   33809:	41 c1 e5 18          	shl    $0x18,%r13d
   3380d:	45 0f b6 f6          	movzbl %r14b,%r14d
   33811:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33818:	00 00 00 00 
   3381c:	0f 1f 40 00          	nopl   0x0(%rax)
   33820:	48 89 f2             	mov    %rsi,%rdx
   33823:	4c 31 f2             	xor    %r14,%rdx
   33826:	4c 8d 62 ff          	lea    -0x1(%rdx),%r12
   3382a:	c4 c2 e8 f2 d4       	andn   %r12,%rdx,%rdx
   3382f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   33833:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   33837:	48 ff c6             	inc    %rsi
   3383a:	48 09 d3             	or     %rdx,%rbx
   3383d:	48 83 fe 20          	cmp    $0x20,%rsi
   33841:	75 dd                	jne    33820 <l9_ExpandRijndaelKey+0x160>
   33843:	41 83 e7 07          	and    $0x7,%r15d
   33847:	31 f6                	xor    %esi,%esi
   33849:	41 c1 e7 03          	shl    $0x3,%r15d
   3384d:	c4 62 83 f7 e3       	shrx   %r15,%rbx,%r12
   33852:	45 89 df             	mov    %r11d,%r15d
   33855:	45 0f b6 e4          	movzbl %r12b,%r12d
   33859:	31 db                	xor    %ebx,%ebx
   3385b:	41 c1 ef 10          	shr    $0x10,%r15d
   3385f:	41 c1 e4 10          	shl    $0x10,%r12d
   33863:	45 89 fe             	mov    %r15d,%r14d
   33866:	45 09 ec             	or     %r13d,%r12d
   33869:	41 c0 ee 03          	shr    $0x3,%r14b
   3386d:	45 0f b6 f6          	movzbl %r14b,%r14d
   33871:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33878:	00 00 00 00 
   3387c:	0f 1f 40 00          	nopl   0x0(%rax)
   33880:	48 89 f2             	mov    %rsi,%rdx
   33883:	4c 31 f2             	xor    %r14,%rdx
   33886:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   3388a:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   3388f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   33893:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   33897:	48 ff c6             	inc    %rsi
   3389a:	48 09 d3             	or     %rdx,%rbx
   3389d:	48 83 fe 20          	cmp    $0x20,%rsi
   338a1:	75 dd                	jne    33880 <l9_ExpandRijndaelKey+0x1c0>
   338a3:	41 83 e7 07          	and    $0x7,%r15d
   338a7:	31 f6                	xor    %esi,%esi
   338a9:	41 c1 e7 03          	shl    $0x3,%r15d
   338ad:	c4 e2 83 f7 d3       	shrx   %r15,%rbx,%rdx
   338b2:	45 89 df             	mov    %r11d,%r15d
   338b5:	0f b6 d2             	movzbl %dl,%edx
   338b8:	31 db                	xor    %ebx,%ebx
   338ba:	41 c1 ef 08          	shr    $0x8,%r15d
   338be:	c1 e2 08             	shl    $0x8,%edx
   338c1:	45 89 fe             	mov    %r15d,%r14d
   338c4:	41 09 d4             	or     %edx,%r12d
   338c7:	41 c0 ee 03          	shr    $0x3,%r14b
   338cb:	45 0f b6 f6          	movzbl %r14b,%r14d
   338cf:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   338d6:	00 00 00 00 
   338da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   338e0:	48 89 f2             	mov    %rsi,%rdx
   338e3:	4c 31 f2             	xor    %r14,%rdx
   338e6:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   338ea:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   338ef:	48 c1 fa 3f          	sar    $0x3f,%rdx
   338f3:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   338f7:	48 ff c6             	inc    %rsi
   338fa:	48 09 d3             	or     %rdx,%rbx
   338fd:	48 83 fe 20          	cmp    $0x20,%rsi
   33901:	75 dd                	jne    338e0 <l9_ExpandRijndaelKey+0x220>
   33903:	41 83 e7 07          	and    $0x7,%r15d
   33907:	48 8b 74 24 d8       	mov    -0x28(%rsp),%rsi
   3390c:	41 c1 e7 03          	shl    $0x3,%r15d
   33910:	c4 e2 83 f7 db       	shrx   %r15,%rbx,%rbx
   33915:	0f b6 db             	movzbl %bl,%ebx
   33918:	44 09 e3             	or     %r12d,%ebx
   3391b:	33 1e                	xor    (%rsi),%ebx
   3391d:	31 5c 24 e8          	xor    %ebx,-0x18(%rsp)
   33921:	45 31 e4             	xor    %r12d,%r12d
   33924:	8b 74 24 e8          	mov    -0x18(%rsp),%esi
   33928:	31 f7                	xor    %esi,%edi
   3392a:	31 7c 24 fc          	xor    %edi,-0x4(%rsp)
   3392e:	8b 5c 24 fc          	mov    -0x4(%rsp),%ebx
   33932:	31 f6                	xor    %esi,%esi
   33934:	31 d9                	xor    %ebx,%ecx
   33936:	41 89 ce             	mov    %ecx,%r14d
   33939:	41 c1 ee 18          	shr    $0x18,%r14d
   3393d:	45 89 f5             	mov    %r14d,%r13d
   33940:	41 c0 ed 03          	shr    $0x3,%r13b
   33944:	45 0f b6 ed          	movzbl %r13b,%r13d
   33948:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3394f:	00 00 00 00 
   33953:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3395a:	00 00 00 00 
   3395e:	66 90                	xchg   %ax,%ax
   33960:	48 89 f2             	mov    %rsi,%rdx
   33963:	4c 31 ea             	xor    %r13,%rdx
   33966:	48 8d 5a ff          	lea    -0x1(%rdx),%rbx
   3396a:	c4 e2 e8 f2 d3       	andn   %rbx,%rdx,%rdx
   3396f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   33973:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   33977:	48 ff c6             	inc    %rsi
   3397a:	49 09 d4             	or     %rdx,%r12
   3397d:	48 83 fe 20          	cmp    $0x20,%rsi
   33981:	75 dd                	jne    33960 <l9_ExpandRijndaelKey+0x2a0>
   33983:	41 89 cf             	mov    %ecx,%r15d
   33986:	41 83 e6 07          	and    $0x7,%r14d
   3398a:	31 f6                	xor    %esi,%esi
   3398c:	41 c1 ef 10          	shr    $0x10,%r15d
   33990:	46 8d 2c f5 00 00 00 	lea    0x0(,%r14,8),%r13d
   33997:	00 
   33998:	45 89 fe             	mov    %r15d,%r14d
   3399b:	c4 42 93 f7 e4       	shrx   %r13,%r12,%r12
   339a0:	45 89 e5             	mov    %r12d,%r13d
   339a3:	45 31 e4             	xor    %r12d,%r12d
   339a6:	41 c0 ee 03          	shr    $0x3,%r14b
   339aa:	41 c1 e5 18          	shl    $0x18,%r13d
   339ae:	45 0f b6 f6          	movzbl %r14b,%r14d
   339b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   339b9:	00 00 00 00 
   339bd:	0f 1f 00             	nopl   (%rax)
   339c0:	48 89 f2             	mov    %rsi,%rdx
   339c3:	4c 31 f2             	xor    %r14,%rdx
   339c6:	48 8d 5a ff          	lea    -0x1(%rdx),%rbx
   339ca:	c4 e2 e8 f2 d3       	andn   %rbx,%rdx,%rdx
   339cf:	48 c1 fa 3f          	sar    $0x3f,%rdx
   339d3:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   339d7:	48 ff c6             	inc    %rsi
   339da:	49 09 d4             	or     %rdx,%r12
   339dd:	48 83 fe 20          	cmp    $0x20,%rsi
   339e1:	75 dd                	jne    339c0 <l9_ExpandRijndaelKey+0x300>
   339e3:	41 83 e7 07          	and    $0x7,%r15d
   339e7:	31 f6                	xor    %esi,%esi
   339e9:	41 c1 e7 03          	shl    $0x3,%r15d
   339ed:	c4 c2 83 f7 dc       	shrx   %r15,%r12,%rbx
   339f2:	41 89 cf             	mov    %ecx,%r15d
   339f5:	0f b6 db             	movzbl %bl,%ebx
   339f8:	41 c1 ef 08          	shr    $0x8,%r15d
   339fc:	c1 e3 10             	shl    $0x10,%ebx
   339ff:	45 89 fe             	mov    %r15d,%r14d
   33a02:	44 09 eb             	or     %r13d,%ebx
   33a05:	41 c0 ee 03          	shr    $0x3,%r14b
   33a09:	41 89 dc             	mov    %ebx,%r12d
   33a0c:	31 db                	xor    %ebx,%ebx
   33a0e:	45 0f b6 f6          	movzbl %r14b,%r14d
   33a12:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33a19:	00 00 00 00 
   33a1d:	0f 1f 00             	nopl   (%rax)
   33a20:	48 89 f2             	mov    %rsi,%rdx
   33a23:	4c 31 f2             	xor    %r14,%rdx
   33a26:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   33a2a:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   33a2f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   33a33:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   33a37:	48 ff c6             	inc    %rsi
   33a3a:	48 09 d3             	or     %rdx,%rbx
   33a3d:	48 83 fe 20          	cmp    $0x20,%rsi
   33a41:	75 dd                	jne    33a20 <l9_ExpandRijndaelKey+0x360>
   33a43:	41 83 e7 07          	and    $0x7,%r15d
   33a47:	41 89 ce             	mov    %ecx,%r14d
   33a4a:	31 f6                	xor    %esi,%esi
   33a4c:	41 c1 e7 03          	shl    $0x3,%r15d
   33a50:	41 c0 ee 03          	shr    $0x3,%r14b
   33a54:	c4 e2 83 f7 db       	shrx   %r15,%rbx,%rbx
   33a59:	0f b6 db             	movzbl %bl,%ebx
   33a5c:	41 89 cf             	mov    %ecx,%r15d
   33a5f:	45 0f b6 f6          	movzbl %r14b,%r14d
   33a63:	c1 e3 08             	shl    $0x8,%ebx
   33a66:	44 09 e3             	or     %r12d,%ebx
   33a69:	45 31 e4             	xor    %r12d,%r12d
   33a6c:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33a73:	00 00 00 00 
   33a77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   33a7e:	00 00 
   33a80:	48 89 f2             	mov    %rsi,%rdx
   33a83:	4c 31 f2             	xor    %r14,%rdx
   33a86:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   33a8a:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   33a8f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   33a93:	48 23 14 f0          	and    (%rax,%rsi,8),%rdx
   33a97:	48 ff c6             	inc    %rsi
   33a9a:	49 09 d4             	or     %rdx,%r12
   33a9d:	48 83 fe 20          	cmp    $0x20,%rsi
   33aa1:	75 dd                	jne    33a80 <l9_ExpandRijndaelKey+0x3c0>
   33aa3:	41 83 e7 07          	and    $0x7,%r15d
   33aa7:	48 63 74 24 e4       	movslq -0x1c(%rsp),%rsi
   33aac:	c5 f9 6e 6c 24 e8    	vmovd  -0x18(%rsp),%xmm5
   33ab2:	41 c1 e7 03          	shl    $0x3,%r15d
   33ab6:	c5 f9 6e 74 24 fc    	vmovd  -0x4(%rsp),%xmm6
   33abc:	48 83 44 24 d8 04    	addq   $0x4,-0x28(%rsp)
   33ac2:	c4 42 83 f7 e4       	shrx   %r15,%r12,%r12
   33ac7:	45 0f b6 e4          	movzbl %r12b,%r12d
   33acb:	49 89 f7             	mov    %rsi,%r15
   33ace:	c4 e3 51 22 c7 01    	vpinsrd $0x1,%edi,%xmm5,%xmm0
   33ad4:	41 09 dc             	or     %ebx,%r12d
   33ad7:	44 31 64 24 f0       	xor    %r12d,-0x10(%rsp)
   33adc:	8b 5c 24 f0          	mov    -0x10(%rsp),%ebx
   33ae0:	41 83 c7 08          	add    $0x8,%r15d
   33ae4:	c4 e3 49 22 c9 01    	vpinsrd $0x1,%ecx,%xmm6,%xmm1
   33aea:	48 8d 14 b5 00 00 00 	lea    0x0(,%rsi,4),%rdx
   33af1:	00 
   33af2:	44 89 7c 24 e4       	mov    %r15d,-0x1c(%rsp)
   33af7:	41 31 da             	xor    %ebx,%r10d
   33afa:	c5 f9 6c c1          	vpunpcklqdq %xmm1,%xmm0,%xmm0
   33afe:	45 31 d0             	xor    %r10d,%r8d
   33b01:	c4 c1 78 11 04 b1    	vmovups %xmm0,(%r9,%rsi,4)
   33b07:	45 31 c3             	xor    %r8d,%r11d
   33b0a:	41 89 5c 11 10       	mov    %ebx,0x10(%r9,%rdx,1)
   33b0f:	45 89 54 11 14       	mov    %r10d,0x14(%r9,%rdx,1)
   33b14:	45 89 44 11 18       	mov    %r8d,0x18(%r9,%rdx,1)
   33b19:	45 89 5c 11 1c       	mov    %r11d,0x1c(%r9,%rdx,1)
   33b1e:	44 39 7c 24 f8       	cmp    %r15d,-0x8(%rsp)
   33b23:	0f 8f 77 fc ff ff    	jg     337a0 <l9_ExpandRijndaelKey+0xe0>
   33b29:	8b 74 24 f8          	mov    -0x8(%rsp),%esi
   33b2d:	c1 e6 02             	shl    $0x2,%esi
   33b30:	85 f6                	test   %esi,%esi
   33b32:	0f 8e 99 00 00 00    	jle    33bd1 <l9_ExpandRijndaelKey+0x511>
   33b38:	48 8b 45 10          	mov    0x10(%rbp),%rax
   33b3c:	8d 56 ff             	lea    -0x1(%rsi),%edx
   33b3f:	48 83 c0 20          	add    $0x20,%rax
   33b43:	49 39 c1             	cmp    %rax,%r9
   33b46:	49 8d 41 20          	lea    0x20(%r9),%rax
   33b4a:	0f 93 c1             	setae  %cl
   33b4d:	48 39 45 10          	cmp    %rax,0x10(%rbp)
   33b51:	0f 93 c0             	setae  %al
   33b54:	08 c1                	or     %al,%cl
   33b56:	0f 84 e4 0a 00 00    	je     34640 <l9_ExpandRijndaelKey+0xf80>
   33b5c:	83 fa 1e             	cmp    $0x1e,%edx
   33b5f:	0f 86 db 0a 00 00    	jbe    34640 <l9_ExpandRijndaelKey+0xf80>
   33b65:	89 f2                	mov    %esi,%edx
   33b67:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   33b6b:	31 c0                	xor    %eax,%eax
   33b6d:	c1 ea 05             	shr    $0x5,%edx
   33b70:	48 c1 e2 05          	shl    $0x5,%rdx
   33b74:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33b7b:	00 00 00 00 
   33b7f:	90                   	nop
   33b80:	c4 c1 7e 6f 24 01    	vmovdqu (%r9,%rax,1),%ymm4
   33b86:	c5 fe 7f 24 01       	vmovdqu %ymm4,(%rcx,%rax,1)
   33b8b:	48 83 c0 20          	add    $0x20,%rax
   33b8f:	48 39 d0             	cmp    %rdx,%rax
   33b92:	75 ec                	jne    33b80 <l9_ExpandRijndaelKey+0x4c0>
   33b94:	89 f0                	mov    %esi,%eax
   33b96:	83 e0 e0             	and    $0xffffffe0,%eax
   33b99:	39 f0                	cmp    %esi,%eax
   33b9b:	74 34                	je     33bd1 <l9_ExpandRijndaelKey+0x511>
   33b9d:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   33ba1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33ba8:	00 00 00 00 
   33bac:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33bb3:	00 00 00 00 
   33bb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   33bbe:	00 00 
   33bc0:	48 63 d0             	movslq %eax,%rdx
   33bc3:	ff c0                	inc    %eax
   33bc5:	41 0f b6 0c 11       	movzbl (%r9,%rdx,1),%ecx
   33bca:	88 0c 17             	mov    %cl,(%rdi,%rdx,1)
   33bcd:	39 c6                	cmp    %eax,%esi
   33bcf:	7f ef                	jg     33bc0 <l9_ExpandRijndaelKey+0x500>
   33bd1:	8b 4c 24 d4          	mov    -0x2c(%rsp),%ecx
   33bd5:	8b 44 24 e0          	mov    -0x20(%rsp),%eax
   33bd9:	0f af c8             	imul   %eax,%ecx
   33bdc:	39 c1                	cmp    %eax,%ecx
   33bde:	0f 8e 3b 06 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   33be4:	89 cf                	mov    %ecx,%edi
   33be6:	89 c3                	mov    %eax,%ebx
   33be8:	29 c7                	sub    %eax,%edi
   33bea:	8d 47 ff             	lea    -0x1(%rdi),%eax
   33bed:	83 f8 06             	cmp    $0x6,%eax
   33bf0:	0f 86 30 01 00 00    	jbe    33d26 <l9_ExpandRijndaelKey+0x666>
   33bf6:	48 63 c3             	movslq %ebx,%rax
   33bf9:	89 fe                	mov    %edi,%esi
   33bfb:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
   33bff:	c5 fd 6f 35 39 b0 00 	vmovdqa 0xb039(%rip),%ymm6        # 3ec40 <RconTbl+0x80>
   33c06:	00 
   33c07:	c1 ee 03             	shr    $0x3,%esi
   33c0a:	c5 fd 6f 2d 4e b0 00 	vmovdqa 0xb04e(%rip),%ymm5        # 3ec60 <RconTbl+0xa0>
   33c11:	00 
   33c12:	c5 fd 6f 25 66 b0 00 	vmovdqa 0xb066(%rip),%ymm4        # 3ec80 <RconTbl+0xc0>
   33c19:	00 
   33c1a:	48 8d 14 83          	lea    (%rbx,%rax,4),%rdx
   33c1e:	48 c1 e6 05          	shl    $0x5,%rsi
   33c22:	31 c0                	xor    %eax,%eax
   33c24:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33c2b:	00 00 00 00 
   33c2f:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33c36:	00 00 00 00 
   33c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33c40:	c5 fe 6f 14 02       	vmovdqu (%rdx,%rax,1),%ymm2
   33c45:	c5 ed db ce          	vpand  %ymm6,%ymm2,%ymm1
   33c49:	c5 e5 72 f2 01       	vpslld $0x1,%ymm2,%ymm3
   33c4e:	c5 fd 72 f1 01       	vpslld $0x1,%ymm1,%ymm0
   33c53:	c5 f5 72 d1 07       	vpsrld $0x7,%ymm1,%ymm1
   33c58:	c5 e5 db dc          	vpand  %ymm4,%ymm3,%ymm3
   33c5c:	c5 fd fa c1          	vpsubd %ymm1,%ymm0,%ymm0
   33c60:	c5 fd db c5          	vpand  %ymm5,%ymm0,%ymm0
   33c64:	c5 fd ef db          	vpxor  %ymm3,%ymm0,%ymm3
   33c68:	c5 e5 db ce          	vpand  %ymm6,%ymm3,%ymm1
   33c6c:	c5 c5 72 f3 01       	vpslld $0x1,%ymm3,%ymm7
   33c71:	c5 65 ef c2          	vpxor  %ymm2,%ymm3,%ymm8
   33c75:	c5 fd 72 f1 01       	vpslld $0x1,%ymm1,%ymm0
   33c7a:	c5 f5 72 d1 07       	vpsrld $0x7,%ymm1,%ymm1
   33c7f:	c5 c5 db fc          	vpand  %ymm4,%ymm7,%ymm7
   33c83:	c5 fd fa c1          	vpsubd %ymm1,%ymm0,%ymm0
   33c87:	c5 fd db c5          	vpand  %ymm5,%ymm0,%ymm0
   33c8b:	c5 fd ef ff          	vpxor  %ymm7,%ymm0,%ymm7
   33c8f:	c5 c5 db c6          	vpand  %ymm6,%ymm7,%ymm0
   33c93:	c5 f5 72 f0 01       	vpslld $0x1,%ymm0,%ymm1
   33c98:	c5 fd 72 d0 07       	vpsrld $0x7,%ymm0,%ymm0
   33c9d:	c5 f5 fa c8          	vpsubd %ymm0,%ymm1,%ymm1
   33ca1:	c5 fd 72 f7 01       	vpslld $0x1,%ymm7,%ymm0
   33ca6:	c5 f5 db cd          	vpand  %ymm5,%ymm1,%ymm1
   33caa:	c5 fd db c4          	vpand  %ymm4,%ymm0,%ymm0
   33cae:	c5 f5 ef c0          	vpxor  %ymm0,%ymm1,%ymm0
   33cb2:	c5 7d ef ca          	vpxor  %ymm2,%ymm0,%ymm9
   33cb6:	c5 3d ef c0          	vpxor  %ymm0,%ymm8,%ymm8
   33cba:	c5 fd ef c7          	vpxor  %ymm7,%ymm0,%ymm0
   33cbe:	c4 c1 75 72 f1 08    	vpslld $0x8,%ymm9,%ymm1
   33cc4:	c4 c1 45 72 f0 18    	vpslld $0x18,%ymm8,%ymm7
   33cca:	c5 fd ef d2          	vpxor  %ymm2,%ymm0,%ymm2
   33cce:	c4 c1 35 72 d1 18    	vpsrld $0x18,%ymm9,%ymm9
   33cd4:	c4 c1 3d 72 d0 08    	vpsrld $0x8,%ymm8,%ymm8
   33cda:	c5 fd ef c3          	vpxor  %ymm3,%ymm0,%ymm0
   33cde:	c4 c1 75 eb c9       	vpor   %ymm9,%ymm1,%ymm1
   33ce3:	c4 41 45 eb c0       	vpor   %ymm8,%ymm7,%ymm8
   33ce8:	c4 c1 75 ef c8       	vpxor  %ymm8,%ymm1,%ymm1
   33ced:	c5 f5 ef c0          	vpxor  %ymm0,%ymm1,%ymm0
   33cf1:	c5 f5 72 f2 10       	vpslld $0x10,%ymm2,%ymm1
   33cf6:	c5 ed 72 d2 10       	vpsrld $0x10,%ymm2,%ymm2
   33cfb:	c5 f5 eb d2          	vpor   %ymm2,%ymm1,%ymm2
   33cff:	c5 fd ef c2          	vpxor  %ymm2,%ymm0,%ymm0
   33d03:	c5 fe 7f 04 02       	vmovdqu %ymm0,(%rdx,%rax,1)
   33d08:	48 83 c0 20          	add    $0x20,%rax
   33d0c:	48 39 f0             	cmp    %rsi,%rax
   33d0f:	0f 85 2b ff ff ff    	jne    33c40 <l9_ExpandRijndaelKey+0x580>
   33d15:	89 f8                	mov    %edi,%eax
   33d17:	83 e0 f8             	and    $0xfffffff8,%eax
   33d1a:	01 44 24 e0          	add    %eax,-0x20(%rsp)
   33d1e:	39 f8                	cmp    %edi,%eax
   33d20:	0f 84 f9 04 00 00    	je     3421f <l9_ExpandRijndaelKey+0xb5f>
   33d26:	48 63 44 24 e0       	movslq -0x20(%rsp),%rax
   33d2b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   33d2f:	48 8d 3c 87          	lea    (%rdi,%rax,4),%rdi
   33d33:	48 89 c3             	mov    %rax,%rbx
   33d36:	44 8b 07             	mov    (%rdi),%r8d
   33d39:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   33d3d:	44 89 c0             	mov    %r8d,%eax
   33d40:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   33d46:	25 80 80 80 80       	and    $0x80808080,%eax
   33d4b:	89 f2                	mov    %esi,%edx
   33d4d:	8d 34 00             	lea    (%rax,%rax,1),%esi
   33d50:	c1 e8 07             	shr    $0x7,%eax
   33d53:	29 c6                	sub    %eax,%esi
   33d55:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   33d5b:	31 d6                	xor    %edx,%esi
   33d5d:	8d 14 36             	lea    (%rsi,%rsi,1),%edx
   33d60:	89 f0                	mov    %esi,%eax
   33d62:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   33d68:	25 80 80 80 80       	and    $0x80808080,%eax
   33d6d:	41 89 d1             	mov    %edx,%r9d
   33d70:	8d 14 00             	lea    (%rax,%rax,1),%edx
   33d73:	c1 e8 07             	shr    $0x7,%eax
   33d76:	29 c2                	sub    %eax,%edx
   33d78:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   33d7e:	44 31 ca             	xor    %r9d,%edx
   33d81:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   33d84:	41 89 d1             	mov    %edx,%r9d
   33d87:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   33d8c:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   33d93:	41 89 c2             	mov    %eax,%r10d
   33d96:	43 8d 04 09          	lea    (%r9,%r9,1),%eax
   33d9a:	41 c1 e9 07          	shr    $0x7,%r9d
   33d9e:	44 29 c8             	sub    %r9d,%eax
   33da1:	45 89 c1             	mov    %r8d,%r9d
   33da4:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   33da9:	41 31 f1             	xor    %esi,%r9d
   33dac:	44 31 d0             	xor    %r10d,%eax
   33daf:	31 c2                	xor    %eax,%edx
   33db1:	41 31 c1             	xor    %eax,%r9d
   33db4:	44 31 c0             	xor    %r8d,%eax
   33db7:	31 d6                	xor    %edx,%esi
   33db9:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   33dbf:	c4 e3 7b f0 c0 18    	rorx   $0x18,%eax,%eax
   33dc5:	44 31 c2             	xor    %r8d,%edx
   33dc8:	44 31 ce             	xor    %r9d,%esi
   33dcb:	c4 e3 7b f0 d2 10    	rorx   $0x10,%edx,%edx
   33dd1:	31 f0                	xor    %esi,%eax
   33dd3:	31 d0                	xor    %edx,%eax
   33dd5:	89 07                	mov    %eax,(%rdi)
   33dd7:	8d 43 01             	lea    0x1(%rbx),%eax
   33dda:	39 c1                	cmp    %eax,%ecx
   33ddc:	0f 8e 3d 04 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   33de2:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   33de6:	48 98                	cltq   
   33de8:	48 8d 3c 87          	lea    (%rdi,%rax,4),%rdi
   33dec:	44 8b 07             	mov    (%rdi),%r8d
   33def:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   33df3:	44 89 c0             	mov    %r8d,%eax
   33df6:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   33dfc:	25 80 80 80 80       	and    $0x80808080,%eax
   33e01:	89 f2                	mov    %esi,%edx
   33e03:	8d 34 00             	lea    (%rax,%rax,1),%esi
   33e06:	c1 e8 07             	shr    $0x7,%eax
   33e09:	29 c6                	sub    %eax,%esi
   33e0b:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   33e11:	31 d6                	xor    %edx,%esi
   33e13:	8d 14 36             	lea    (%rsi,%rsi,1),%edx
   33e16:	89 f0                	mov    %esi,%eax
   33e18:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   33e1e:	25 80 80 80 80       	and    $0x80808080,%eax
   33e23:	41 89 d1             	mov    %edx,%r9d
   33e26:	8d 14 00             	lea    (%rax,%rax,1),%edx
   33e29:	c1 e8 07             	shr    $0x7,%eax
   33e2c:	29 c2                	sub    %eax,%edx
   33e2e:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   33e34:	44 31 ca             	xor    %r9d,%edx
   33e37:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   33e3a:	41 89 d1             	mov    %edx,%r9d
   33e3d:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   33e42:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   33e49:	41 89 c2             	mov    %eax,%r10d
   33e4c:	43 8d 04 09          	lea    (%r9,%r9,1),%eax
   33e50:	41 c1 e9 07          	shr    $0x7,%r9d
   33e54:	44 29 c8             	sub    %r9d,%eax
   33e57:	45 89 c1             	mov    %r8d,%r9d
   33e5a:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   33e5f:	41 31 f1             	xor    %esi,%r9d
   33e62:	44 31 d0             	xor    %r10d,%eax
   33e65:	31 c2                	xor    %eax,%edx
   33e67:	41 31 c1             	xor    %eax,%r9d
   33e6a:	44 31 c0             	xor    %r8d,%eax
   33e6d:	31 d6                	xor    %edx,%esi
   33e6f:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   33e75:	c4 e3 7b f0 c0 18    	rorx   $0x18,%eax,%eax
   33e7b:	44 31 c2             	xor    %r8d,%edx
   33e7e:	44 31 ce             	xor    %r9d,%esi
   33e81:	c4 e3 7b f0 d2 10    	rorx   $0x10,%edx,%edx
   33e87:	31 f0                	xor    %esi,%eax
   33e89:	31 d0                	xor    %edx,%eax
   33e8b:	89 07                	mov    %eax,(%rdi)
   33e8d:	8d 43 02             	lea    0x2(%rbx),%eax
   33e90:	39 c1                	cmp    %eax,%ecx
   33e92:	0f 8e 87 03 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   33e98:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   33e9c:	48 98                	cltq   
   33e9e:	48 8d 3c 87          	lea    (%rdi,%rax,4),%rdi
   33ea2:	44 8b 07             	mov    (%rdi),%r8d
   33ea5:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   33ea9:	44 89 c0             	mov    %r8d,%eax
   33eac:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   33eb2:	25 80 80 80 80       	and    $0x80808080,%eax
   33eb7:	89 f2                	mov    %esi,%edx
   33eb9:	8d 34 00             	lea    (%rax,%rax,1),%esi
   33ebc:	c1 e8 07             	shr    $0x7,%eax
   33ebf:	29 c6                	sub    %eax,%esi
   33ec1:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   33ec7:	31 d6                	xor    %edx,%esi
   33ec9:	8d 14 36             	lea    (%rsi,%rsi,1),%edx
   33ecc:	89 f0                	mov    %esi,%eax
   33ece:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   33ed4:	25 80 80 80 80       	and    $0x80808080,%eax
   33ed9:	41 89 d1             	mov    %edx,%r9d
   33edc:	8d 14 00             	lea    (%rax,%rax,1),%edx
   33edf:	c1 e8 07             	shr    $0x7,%eax
   33ee2:	29 c2                	sub    %eax,%edx
   33ee4:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   33eea:	44 31 ca             	xor    %r9d,%edx
   33eed:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   33ef0:	41 89 d1             	mov    %edx,%r9d
   33ef3:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   33ef8:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   33eff:	41 89 c2             	mov    %eax,%r10d
   33f02:	43 8d 04 09          	lea    (%r9,%r9,1),%eax
   33f06:	41 c1 e9 07          	shr    $0x7,%r9d
   33f0a:	44 29 c8             	sub    %r9d,%eax
   33f0d:	45 89 c1             	mov    %r8d,%r9d
   33f10:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   33f15:	41 31 f1             	xor    %esi,%r9d
   33f18:	44 31 d0             	xor    %r10d,%eax
   33f1b:	31 c2                	xor    %eax,%edx
   33f1d:	41 31 c1             	xor    %eax,%r9d
   33f20:	44 31 c0             	xor    %r8d,%eax
   33f23:	31 d6                	xor    %edx,%esi
   33f25:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   33f2b:	c4 e3 7b f0 c0 18    	rorx   $0x18,%eax,%eax
   33f31:	44 31 c2             	xor    %r8d,%edx
   33f34:	44 31 ce             	xor    %r9d,%esi
   33f37:	c4 e3 7b f0 d2 10    	rorx   $0x10,%edx,%edx
   33f3d:	31 f0                	xor    %esi,%eax
   33f3f:	31 d0                	xor    %edx,%eax
   33f41:	89 07                	mov    %eax,(%rdi)
   33f43:	8d 43 03             	lea    0x3(%rbx),%eax
   33f46:	39 c1                	cmp    %eax,%ecx
   33f48:	0f 8e d1 02 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   33f4e:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   33f52:	48 98                	cltq   
   33f54:	48 8d 3c 87          	lea    (%rdi,%rax,4),%rdi
   33f58:	44 8b 07             	mov    (%rdi),%r8d
   33f5b:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   33f5f:	44 89 c0             	mov    %r8d,%eax
   33f62:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   33f68:	25 80 80 80 80       	and    $0x80808080,%eax
   33f6d:	89 f2                	mov    %esi,%edx
   33f6f:	8d 34 00             	lea    (%rax,%rax,1),%esi
   33f72:	c1 e8 07             	shr    $0x7,%eax
   33f75:	29 c6                	sub    %eax,%esi
   33f77:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   33f7d:	31 d6                	xor    %edx,%esi
   33f7f:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   33f82:	89 f2                	mov    %esi,%edx
   33f84:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   33f89:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   33f8f:	41 89 c1             	mov    %eax,%r9d
   33f92:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   33f95:	c1 ea 07             	shr    $0x7,%edx
   33f98:	29 d0                	sub    %edx,%eax
   33f9a:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   33f9f:	44 31 c8             	xor    %r9d,%eax
   33fa2:	8d 14 00             	lea    (%rax,%rax,1),%edx
   33fa5:	41 89 c1             	mov    %eax,%r9d
   33fa8:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   33fae:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   33fb5:	41 89 d2             	mov    %edx,%r10d
   33fb8:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   33fbc:	41 c1 e9 07          	shr    $0x7,%r9d
   33fc0:	44 29 ca             	sub    %r9d,%edx
   33fc3:	41 89 f1             	mov    %esi,%r9d
   33fc6:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   33fcc:	45 31 c1             	xor    %r8d,%r9d
   33fcf:	44 31 d2             	xor    %r10d,%edx
   33fd2:	31 d0                	xor    %edx,%eax
   33fd4:	41 31 d1             	xor    %edx,%r9d
   33fd7:	44 31 c2             	xor    %r8d,%edx
   33fda:	31 c6                	xor    %eax,%esi
   33fdc:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   33fe2:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   33fe8:	44 31 c0             	xor    %r8d,%eax
   33feb:	44 31 ce             	xor    %r9d,%esi
   33fee:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   33ff4:	31 f2                	xor    %esi,%edx
   33ff6:	31 c2                	xor    %eax,%edx
   33ff8:	8d 43 04             	lea    0x4(%rbx),%eax
   33ffb:	89 17                	mov    %edx,(%rdi)
   33ffd:	39 c1                	cmp    %eax,%ecx
   33fff:	0f 8e 1a 02 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   34005:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   34009:	48 98                	cltq   
   3400b:	48 8d 3c 87          	lea    (%rdi,%rax,4),%rdi
   3400f:	44 8b 07             	mov    (%rdi),%r8d
   34012:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   34016:	44 89 c0             	mov    %r8d,%eax
   34019:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   3401f:	25 80 80 80 80       	and    $0x80808080,%eax
   34024:	89 f2                	mov    %esi,%edx
   34026:	8d 34 00             	lea    (%rax,%rax,1),%esi
   34029:	c1 e8 07             	shr    $0x7,%eax
   3402c:	29 c6                	sub    %eax,%esi
   3402e:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   34034:	31 d6                	xor    %edx,%esi
   34036:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   34039:	89 f2                	mov    %esi,%edx
   3403b:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   34040:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   34046:	41 89 c1             	mov    %eax,%r9d
   34049:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   3404c:	c1 ea 07             	shr    $0x7,%edx
   3404f:	29 d0                	sub    %edx,%eax
   34051:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   34056:	44 31 c8             	xor    %r9d,%eax
   34059:	8d 14 00             	lea    (%rax,%rax,1),%edx
   3405c:	41 89 c1             	mov    %eax,%r9d
   3405f:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   34065:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   3406c:	41 89 d2             	mov    %edx,%r10d
   3406f:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   34073:	41 c1 e9 07          	shr    $0x7,%r9d
   34077:	44 29 ca             	sub    %r9d,%edx
   3407a:	41 89 f1             	mov    %esi,%r9d
   3407d:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   34083:	45 31 c1             	xor    %r8d,%r9d
   34086:	44 31 d2             	xor    %r10d,%edx
   34089:	31 d0                	xor    %edx,%eax
   3408b:	41 31 d1             	xor    %edx,%r9d
   3408e:	44 31 c2             	xor    %r8d,%edx
   34091:	31 c6                	xor    %eax,%esi
   34093:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   34099:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   3409f:	44 31 c0             	xor    %r8d,%eax
   340a2:	44 31 ce             	xor    %r9d,%esi
   340a5:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   340ab:	31 f2                	xor    %esi,%edx
   340ad:	31 c2                	xor    %eax,%edx
   340af:	8d 43 05             	lea    0x5(%rbx),%eax
   340b2:	89 17                	mov    %edx,(%rdi)
   340b4:	39 c1                	cmp    %eax,%ecx
   340b6:	0f 8e 63 01 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   340bc:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   340c0:	48 98                	cltq   
   340c2:	48 8d 34 87          	lea    (%rdi,%rax,4),%rsi
   340c6:	8b 3e                	mov    (%rsi),%edi
   340c8:	89 f8                	mov    %edi,%eax
   340ca:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
   340ce:	25 80 80 80 80       	and    $0x80808080,%eax
   340d3:	44 89 ca             	mov    %r9d,%edx
   340d6:	44 8d 0c 00          	lea    (%rax,%rax,1),%r9d
   340da:	c1 e8 07             	shr    $0x7,%eax
   340dd:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   340e3:	41 29 c1             	sub    %eax,%r9d
   340e6:	41 81 e1 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r9d
   340ed:	41 31 d1             	xor    %edx,%r9d
   340f0:	44 89 c8             	mov    %r9d,%eax
   340f3:	47 8d 04 09          	lea    (%r9,%r9,1),%r8d
   340f7:	25 80 80 80 80       	and    $0x80808080,%eax
   340fc:	44 89 c2             	mov    %r8d,%edx
   340ff:	44 8d 04 00          	lea    (%rax,%rax,1),%r8d
   34103:	c1 e8 07             	shr    $0x7,%eax
   34106:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   3410c:	41 29 c0             	sub    %eax,%r8d
   3410f:	41 81 e0 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r8d
   34116:	41 31 d0             	xor    %edx,%r8d
   34119:	43 8d 04 00          	lea    (%r8,%r8,1),%eax
   3411d:	44 89 c2             	mov    %r8d,%edx
   34120:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   34125:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   3412b:	41 89 c2             	mov    %eax,%r10d
   3412e:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   34131:	c1 ea 07             	shr    $0x7,%edx
   34134:	29 d0                	sub    %edx,%eax
   34136:	44 89 ca             	mov    %r9d,%edx
   34139:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   3413e:	31 fa                	xor    %edi,%edx
   34140:	44 31 d0             	xor    %r10d,%eax
   34143:	41 31 c0             	xor    %eax,%r8d
   34146:	31 c2                	xor    %eax,%edx
   34148:	31 f8                	xor    %edi,%eax
   3414a:	45 31 c1             	xor    %r8d,%r9d
   3414d:	c4 e3 7b f0 d2 08    	rorx   $0x8,%edx,%edx
   34153:	c4 e3 7b f0 c0 18    	rorx   $0x18,%eax,%eax
   34159:	44 31 c7             	xor    %r8d,%edi
   3415c:	44 31 ca             	xor    %r9d,%edx
   3415f:	31 d0                	xor    %edx,%eax
   34161:	c4 e3 7b f0 d7 10    	rorx   $0x10,%edi,%edx
   34167:	31 d0                	xor    %edx,%eax
   34169:	89 06                	mov    %eax,(%rsi)
   3416b:	89 d8                	mov    %ebx,%eax
   3416d:	83 c0 06             	add    $0x6,%eax
   34170:	39 c1                	cmp    %eax,%ecx
   34172:	0f 8e a7 00 00 00    	jle    3421f <l9_ExpandRijndaelKey+0xb5f>
   34178:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   3417c:	48 98                	cltq   
   3417e:	48 8d 0c 87          	lea    (%rdi,%rax,4),%rcx
   34182:	8b 39                	mov    (%rcx),%edi
   34184:	8d 34 3f             	lea    (%rdi,%rdi,1),%esi
   34187:	89 f8                	mov    %edi,%eax
   34189:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   3418f:	25 80 80 80 80       	and    $0x80808080,%eax
   34194:	89 f2                	mov    %esi,%edx
   34196:	8d 34 00             	lea    (%rax,%rax,1),%esi
   34199:	c1 e8 07             	shr    $0x7,%eax
   3419c:	29 c6                	sub    %eax,%esi
   3419e:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   341a4:	31 d6                	xor    %edx,%esi
   341a6:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   341a9:	89 f2                	mov    %esi,%edx
   341ab:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   341b0:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   341b6:	41 89 c0             	mov    %eax,%r8d
   341b9:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   341bc:	c1 ea 07             	shr    $0x7,%edx
   341bf:	29 d0                	sub    %edx,%eax
   341c1:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   341c6:	44 31 c0             	xor    %r8d,%eax
   341c9:	8d 14 00             	lea    (%rax,%rax,1),%edx
   341cc:	41 89 c0             	mov    %eax,%r8d
   341cf:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   341d5:	41 81 e0 80 80 80 80 	and    $0x80808080,%r8d
   341dc:	41 89 d1             	mov    %edx,%r9d
   341df:	43 8d 14 00          	lea    (%r8,%r8,1),%edx
   341e3:	41 c1 e8 07          	shr    $0x7,%r8d
   341e7:	44 29 c2             	sub    %r8d,%edx
   341ea:	41 89 f0             	mov    %esi,%r8d
   341ed:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   341f3:	41 31 f8             	xor    %edi,%r8d
   341f6:	44 31 ca             	xor    %r9d,%edx
   341f9:	31 d0                	xor    %edx,%eax
   341fb:	41 31 d0             	xor    %edx,%r8d
   341fe:	31 fa                	xor    %edi,%edx
   34200:	31 c6                	xor    %eax,%esi
   34202:	c4 43 7b f0 c0 08    	rorx   $0x8,%r8d,%r8d
   34208:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   3420e:	31 f8                	xor    %edi,%eax
   34210:	44 31 c6             	xor    %r8d,%esi
   34213:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   34219:	31 f2                	xor    %esi,%edx
   3421b:	31 d0                	xor    %edx,%eax
   3421d:	89 01                	mov    %eax,(%rcx)
   3421f:	c5 f8 77             	vzeroupper 
   34222:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   34226:	5b                   	pop    %rbx
   34227:	41 5c                	pop    %r12
   34229:	41 5d                	pop    %r13
   3422b:	41 5e                	pop    %r14
   3422d:	41 5f                	pop    %r15
   3422f:	5d                   	pop    %rbp
   34230:	c3                   	retq   
   34231:	83 7c 24 f8 06       	cmpl   $0x6,-0x8(%rsp)
   34236:	0f 8e ed f8 ff ff    	jle    33b29 <l9_ExpandRijndaelKey+0x469>
   3423c:	48 8d 05 7d a9 00 00 	lea    0xa97d(%rip),%rax        # 3ebc0 <RconTbl>
   34243:	48 89 44 24 e8       	mov    %rax,-0x18(%rsp)
   34248:	48 8d 05 f1 ab 00 00 	lea    0xabf1(%rip),%rax        # 3ee40 <RijEncSbox>
   3424f:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34256:	00 00 00 00 
   3425a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   34260:	45 89 d5             	mov    %r10d,%r13d
   34263:	45 89 d6             	mov    %r10d,%r14d
   34266:	45 31 db             	xor    %r11d,%r11d
   34269:	31 db                	xor    %ebx,%ebx
   3426b:	41 c0 ed 03          	shr    $0x3,%r13b
   3426f:	45 0f b6 ed          	movzbl %r13b,%r13d
   34273:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3427a:	00 00 00 00 
   3427e:	66 90                	xchg   %ax,%ax
   34280:	4c 89 da             	mov    %r11,%rdx
   34283:	4c 31 ea             	xor    %r13,%rdx
   34286:	4c 8d 62 ff          	lea    -0x1(%rdx),%r12
   3428a:	c4 c2 e8 f2 d4       	andn   %r12,%rdx,%rdx
   3428f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   34293:	4a 23 14 d8          	and    (%rax,%r11,8),%rdx
   34297:	49 ff c3             	inc    %r11
   3429a:	48 09 d3             	or     %rdx,%rbx
   3429d:	49 83 fb 20          	cmp    $0x20,%r11
   342a1:	75 dd                	jne    34280 <l9_ExpandRijndaelKey+0xbc0>
   342a3:	45 89 d7             	mov    %r10d,%r15d
   342a6:	41 83 e6 07          	and    $0x7,%r14d
   342aa:	45 31 db             	xor    %r11d,%r11d
   342ad:	41 c1 ef 18          	shr    $0x18,%r15d
   342b1:	46 8d 24 f5 00 00 00 	lea    0x0(,%r14,8),%r12d
   342b8:	00 
   342b9:	45 89 fe             	mov    %r15d,%r14d
   342bc:	c4 62 9b f7 e3       	shrx   %r12,%rbx,%r12
   342c1:	31 db                	xor    %ebx,%ebx
   342c3:	41 c1 e4 18          	shl    $0x18,%r12d
   342c7:	41 c0 ee 03          	shr    $0x3,%r14b
   342cb:	45 0f b6 f6          	movzbl %r14b,%r14d
   342cf:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   342d6:	00 00 00 00 
   342da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   342e0:	4c 89 da             	mov    %r11,%rdx
   342e3:	4c 31 f2             	xor    %r14,%rdx
   342e6:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   342ea:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   342ef:	48 c1 fa 3f          	sar    $0x3f,%rdx
   342f3:	4a 23 14 d8          	and    (%rax,%r11,8),%rdx
   342f7:	49 ff c3             	inc    %r11
   342fa:	48 09 d3             	or     %rdx,%rbx
   342fd:	49 83 fb 20          	cmp    $0x20,%r11
   34301:	75 dd                	jne    342e0 <l9_ExpandRijndaelKey+0xc20>
   34303:	41 83 e7 07          	and    $0x7,%r15d
   34307:	45 31 db             	xor    %r11d,%r11d
   3430a:	42 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%edx
   34311:	00 
   34312:	45 89 d7             	mov    %r10d,%r15d
   34315:	41 c1 ef 10          	shr    $0x10,%r15d
   34319:	c4 e2 eb f7 d3       	shrx   %rdx,%rbx,%rdx
   3431e:	0f b6 d2             	movzbl %dl,%edx
   34321:	31 db                	xor    %ebx,%ebx
   34323:	45 89 fe             	mov    %r15d,%r14d
   34326:	c1 e2 10             	shl    $0x10,%edx
   34329:	41 c0 ee 03          	shr    $0x3,%r14b
   3432d:	41 09 d4             	or     %edx,%r12d
   34330:	45 0f b6 f6          	movzbl %r14b,%r14d
   34334:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3433b:	00 00 00 00 
   3433f:	90                   	nop
   34340:	4c 89 da             	mov    %r11,%rdx
   34343:	4c 31 f2             	xor    %r14,%rdx
   34346:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   3434a:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   3434f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   34353:	4a 23 14 d8          	and    (%rax,%r11,8),%rdx
   34357:	49 ff c3             	inc    %r11
   3435a:	48 09 d3             	or     %rdx,%rbx
   3435d:	49 83 fb 20          	cmp    $0x20,%r11
   34361:	75 dd                	jne    34340 <l9_ExpandRijndaelKey+0xc80>
   34363:	41 83 e7 07          	and    $0x7,%r15d
   34367:	45 31 db             	xor    %r11d,%r11d
   3436a:	42 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%edx
   34371:	00 
   34372:	45 89 d7             	mov    %r10d,%r15d
   34375:	41 c1 ef 08          	shr    $0x8,%r15d
   34379:	c4 e2 eb f7 d3       	shrx   %rdx,%rbx,%rdx
   3437e:	0f b6 d2             	movzbl %dl,%edx
   34381:	31 db                	xor    %ebx,%ebx
   34383:	45 89 fe             	mov    %r15d,%r14d
   34386:	c1 e2 08             	shl    $0x8,%edx
   34389:	41 c0 ee 03          	shr    $0x3,%r14b
   3438d:	41 09 d4             	or     %edx,%r12d
   34390:	45 0f b6 f6          	movzbl %r14b,%r14d
   34394:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3439b:	00 00 00 00 
   3439f:	90                   	nop
   343a0:	4c 89 da             	mov    %r11,%rdx
   343a3:	4c 31 f2             	xor    %r14,%rdx
   343a6:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   343aa:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   343af:	48 c1 fa 3f          	sar    $0x3f,%rdx
   343b3:	4a 23 14 d8          	and    (%rax,%r11,8),%rdx
   343b7:	49 ff c3             	inc    %r11
   343ba:	48 09 d3             	or     %rdx,%rbx
   343bd:	49 83 fb 20          	cmp    $0x20,%r11
   343c1:	75 dd                	jne    343a0 <l9_ExpandRijndaelKey+0xce0>
   343c3:	41 83 e7 07          	and    $0x7,%r15d
   343c7:	48 83 44 24 e8 04    	addq   $0x4,-0x18(%rsp)
   343cd:	4c 8b 74 24 e8       	mov    -0x18(%rsp),%r14
   343d2:	4c 63 de             	movslq %esi,%r11
   343d5:	42 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%edx
   343dc:	00 
   343dd:	83 c6 06             	add    $0x6,%esi
   343e0:	c4 e2 eb f7 d3       	shrx   %rdx,%rbx,%rdx
   343e5:	0f b6 d2             	movzbl %dl,%edx
   343e8:	41 09 d4             	or     %edx,%r12d
   343eb:	45 33 66 fc          	xor    -0x4(%r14),%r12d
   343ef:	4a 8d 14 9d 00 00 00 	lea    0x0(,%r11,4),%rdx
   343f6:	00 
   343f7:	45 31 e0             	xor    %r12d,%r8d
   343fa:	44 31 c7             	xor    %r8d,%edi
   343fd:	31 7c 24 fc          	xor    %edi,-0x4(%rsp)
   34401:	8b 5c 24 fc          	mov    -0x4(%rsp),%ebx
   34405:	47 89 04 99          	mov    %r8d,(%r9,%r11,4)
   34409:	31 d9                	xor    %ebx,%ecx
   3440b:	31 4c 24 f0          	xor    %ecx,-0x10(%rsp)
   3440f:	44 8b 7c 24 f0       	mov    -0x10(%rsp),%r15d
   34414:	41 89 7c 11 04       	mov    %edi,0x4(%r9,%rdx,1)
   34419:	45 31 fa             	xor    %r15d,%r10d
   3441c:	41 89 5c 11 08       	mov    %ebx,0x8(%r9,%rdx,1)
   34421:	41 89 4c 11 0c       	mov    %ecx,0xc(%r9,%rdx,1)
   34426:	45 89 7c 11 10       	mov    %r15d,0x10(%r9,%rdx,1)
   3442b:	45 89 54 11 14       	mov    %r10d,0x14(%r9,%rdx,1)
   34430:	39 74 24 f8          	cmp    %esi,-0x8(%rsp)
   34434:	0f 8f 26 fe ff ff    	jg     34260 <l9_ExpandRijndaelKey+0xba0>
   3443a:	e9 ea f6 ff ff       	jmpq   33b29 <l9_ExpandRijndaelKey+0x469>
   3443f:	83 7c 24 f8 04       	cmpl   $0x4,-0x8(%rsp)
   34444:	0f 8e df f6 ff ff    	jle    33b29 <l9_ExpandRijndaelKey+0x469>
   3444a:	48 8d 1d 6f a7 00 00 	lea    0xa76f(%rip),%rbx        # 3ebc0 <RconTbl>
   34451:	48 8d 05 e8 a9 00 00 	lea    0xa9e8(%rip),%rax        # 3ee40 <RijEncSbox>
   34458:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
   3445d:	8b 5c 24 fc          	mov    -0x4(%rsp),%ebx
   34461:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34468:	00 00 00 00 
   3446c:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34473:	00 00 00 00 
   34477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3447e:	00 00 
   34480:	41 89 cd             	mov    %ecx,%r13d
   34483:	41 89 ce             	mov    %ecx,%r14d
   34486:	45 31 d2             	xor    %r10d,%r10d
   34489:	45 31 e4             	xor    %r12d,%r12d
   3448c:	41 c0 ed 03          	shr    $0x3,%r13b
   34490:	45 0f b6 ed          	movzbl %r13b,%r13d
   34494:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3449b:	00 00 00 00 
   3449f:	90                   	nop
   344a0:	4c 89 d2             	mov    %r10,%rdx
   344a3:	4c 31 ea             	xor    %r13,%rdx
   344a6:	4c 8d 5a ff          	lea    -0x1(%rdx),%r11
   344aa:	c4 c2 e8 f2 d3       	andn   %r11,%rdx,%rdx
   344af:	48 c1 fa 3f          	sar    $0x3f,%rdx
   344b3:	4a 23 14 d0          	and    (%rax,%r10,8),%rdx
   344b7:	49 ff c2             	inc    %r10
   344ba:	49 09 d4             	or     %rdx,%r12
   344bd:	49 83 fa 20          	cmp    $0x20,%r10
   344c1:	75 dd                	jne    344a0 <l9_ExpandRijndaelKey+0xde0>
   344c3:	41 89 cf             	mov    %ecx,%r15d
   344c6:	41 83 e6 07          	and    $0x7,%r14d
   344ca:	45 31 d2             	xor    %r10d,%r10d
   344cd:	45 31 db             	xor    %r11d,%r11d
   344d0:	41 c1 ef 18          	shr    $0x18,%r15d
   344d4:	46 8d 2c f5 00 00 00 	lea    0x0(,%r14,8),%r13d
   344db:	00 
   344dc:	45 89 fe             	mov    %r15d,%r14d
   344df:	c4 42 93 f7 e4       	shrx   %r13,%r12,%r12
   344e4:	45 89 e5             	mov    %r12d,%r13d
   344e7:	41 c0 ee 03          	shr    $0x3,%r14b
   344eb:	41 c1 e5 18          	shl    $0x18,%r13d
   344ef:	45 0f b6 f6          	movzbl %r14b,%r14d
   344f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   344fa:	00 00 00 00 
   344fe:	66 90                	xchg   %ax,%ax
   34500:	4c 89 d2             	mov    %r10,%rdx
   34503:	4c 31 f2             	xor    %r14,%rdx
   34506:	4c 8d 62 ff          	lea    -0x1(%rdx),%r12
   3450a:	c4 c2 e8 f2 d4       	andn   %r12,%rdx,%rdx
   3450f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   34513:	4a 23 14 d0          	and    (%rax,%r10,8),%rdx
   34517:	49 ff c2             	inc    %r10
   3451a:	49 09 d3             	or     %rdx,%r11
   3451d:	49 83 fa 20          	cmp    $0x20,%r10
   34521:	75 dd                	jne    34500 <l9_ExpandRijndaelKey+0xe40>
   34523:	41 83 e7 07          	and    $0x7,%r15d
   34527:	45 31 d2             	xor    %r10d,%r10d
   3452a:	46 8d 24 fd 00 00 00 	lea    0x0(,%r15,8),%r12d
   34531:	00 
   34532:	41 89 cf             	mov    %ecx,%r15d
   34535:	41 c1 ef 10          	shr    $0x10,%r15d
   34539:	c4 42 9b f7 e3       	shrx   %r12,%r11,%r12
   3453e:	45 0f b6 e4          	movzbl %r12b,%r12d
   34542:	45 31 db             	xor    %r11d,%r11d
   34545:	45 89 fe             	mov    %r15d,%r14d
   34548:	41 c1 e4 10          	shl    $0x10,%r12d
   3454c:	41 c0 ee 03          	shr    $0x3,%r14b
   34550:	45 09 ec             	or     %r13d,%r12d
   34553:	45 0f b6 f6          	movzbl %r14b,%r14d
   34557:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3455e:	00 00 
   34560:	4c 89 d2             	mov    %r10,%rdx
   34563:	4c 31 f2             	xor    %r14,%rdx
   34566:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   3456a:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   3456f:	48 c1 fa 3f          	sar    $0x3f,%rdx
   34573:	4a 23 14 d0          	and    (%rax,%r10,8),%rdx
   34577:	49 ff c2             	inc    %r10
   3457a:	49 09 d3             	or     %rdx,%r11
   3457d:	49 83 fa 20          	cmp    $0x20,%r10
   34581:	75 dd                	jne    34560 <l9_ExpandRijndaelKey+0xea0>
   34583:	41 83 e7 07          	and    $0x7,%r15d
   34587:	45 31 d2             	xor    %r10d,%r10d
   3458a:	42 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%edx
   34591:	00 
   34592:	41 89 cf             	mov    %ecx,%r15d
   34595:	41 c1 ef 08          	shr    $0x8,%r15d
   34599:	c4 c2 eb f7 d3       	shrx   %rdx,%r11,%rdx
   3459e:	0f b6 d2             	movzbl %dl,%edx
   345a1:	45 31 db             	xor    %r11d,%r11d
   345a4:	45 89 fe             	mov    %r15d,%r14d
   345a7:	c1 e2 08             	shl    $0x8,%edx
   345aa:	41 c0 ee 03          	shr    $0x3,%r14b
   345ae:	41 09 d4             	or     %edx,%r12d
   345b1:	45 0f b6 f6          	movzbl %r14b,%r14d
   345b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   345bc:	00 00 00 00 
   345c0:	4c 89 d2             	mov    %r10,%rdx
   345c3:	4c 31 f2             	xor    %r14,%rdx
   345c6:	4c 8d 6a ff          	lea    -0x1(%rdx),%r13
   345ca:	c4 c2 e8 f2 d5       	andn   %r13,%rdx,%rdx
   345cf:	48 c1 fa 3f          	sar    $0x3f,%rdx
   345d3:	4a 23 14 d0          	and    (%rax,%r10,8),%rdx
   345d7:	49 ff c2             	inc    %r10
   345da:	49 09 d3             	or     %rdx,%r11
   345dd:	49 83 fa 20          	cmp    $0x20,%r10
   345e1:	75 dd                	jne    345c0 <l9_ExpandRijndaelKey+0xf00>
   345e3:	41 83 e7 07          	and    $0x7,%r15d
   345e7:	48 83 44 24 f0 04    	addq   $0x4,-0x10(%rsp)
   345ed:	48 8b 54 24 f0       	mov    -0x10(%rsp),%rdx
   345f2:	4c 63 d6             	movslq %esi,%r10
   345f5:	41 c1 e7 03          	shl    $0x3,%r15d
   345f9:	83 c6 04             	add    $0x4,%esi
   345fc:	c4 42 83 f7 db       	shrx   %r15,%r11,%r11
   34601:	45 0f b6 db          	movzbl %r11b,%r11d
   34605:	45 09 dc             	or     %r11d,%r12d
   34608:	44 33 62 fc          	xor    -0x4(%rdx),%r12d
   3460c:	4a 8d 14 95 00 00 00 	lea    0x0(,%r10,4),%rdx
   34613:	00 
   34614:	45 31 e0             	xor    %r12d,%r8d
   34617:	44 31 c7             	xor    %r8d,%edi
   3461a:	47 89 04 91          	mov    %r8d,(%r9,%r10,4)
   3461e:	31 fb                	xor    %edi,%ebx
   34620:	41 89 7c 11 04       	mov    %edi,0x4(%r9,%rdx,1)
   34625:	31 d9                	xor    %ebx,%ecx
   34627:	41 89 5c 11 08       	mov    %ebx,0x8(%r9,%rdx,1)
   3462c:	41 89 4c 11 0c       	mov    %ecx,0xc(%r9,%rdx,1)
   34631:	39 74 24 f8          	cmp    %esi,-0x8(%rsp)
   34635:	0f 8f 45 fe ff ff    	jg     34480 <l9_ExpandRijndaelKey+0xdc0>
   3463b:	e9 e9 f4 ff ff       	jmpq   33b29 <l9_ExpandRijndaelKey+0x469>
   34640:	31 c0                	xor    %eax,%eax
   34642:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   34646:	eb 0b                	jmp    34653 <l9_ExpandRijndaelKey+0xf93>
   34648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3464f:	00 
   34650:	48 89 c8             	mov    %rcx,%rax
   34653:	41 0f b6 0c 01       	movzbl (%r9,%rax,1),%ecx
   34658:	88 0c 06             	mov    %cl,(%rsi,%rax,1)
   3465b:	48 8d 48 01          	lea    0x1(%rax),%rcx
   3465f:	48 39 d0             	cmp    %rdx,%rax
   34662:	75 ec                	jne    34650 <l9_ExpandRijndaelKey+0xf90>
   34664:	e9 68 f5 ff ff       	jmpq   33bd1 <l9_ExpandRijndaelKey+0x511>
   34669:	41 8b 41 08          	mov    0x8(%r9),%eax
   3466d:	45 8b 01             	mov    (%r9),%r8d
   34670:	41 8b 79 04          	mov    0x4(%r9),%edi
   34674:	41 8b 49 0c          	mov    0xc(%r9),%ecx
   34678:	89 44 24 fc          	mov    %eax,-0x4(%rsp)
   3467c:	e9 d1 f0 ff ff       	jmpq   33752 <l9_ExpandRijndaelKey+0x92>
   34681:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34688:	00 00 00 
   3468b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34692:	00 00 00 
   34695:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3469c:	00 00 00 
   3469f:	90                   	nop

00000000000346a0 <l9_cpAESCMAC_Update_AES_NI>:
   346a0:	48 63 d2             	movslq %edx,%rdx
   346a3:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   346a7:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   346ae:	00 00 00 00 
   346b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   346b9:	00 00 00 00 
   346bd:	0f 1f 00             	nopl   (%rax)
   346c0:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   346c4:	66 41 0f 6f 20       	movdqa (%r8),%xmm4
   346c9:	4d 89 c1             	mov    %r8,%r9
   346cc:	66 0f ef c1          	pxor   %xmm1,%xmm0
   346d0:	66 0f ef c4          	pxor   %xmm4,%xmm0
   346d4:	66 41 0f 6f 61 10    	movdqa 0x10(%r9),%xmm4
   346da:	49 83 c1 10          	add    $0x10,%r9
   346de:	49 89 ca             	mov    %rcx,%r10
   346e1:	49 83 ea 01          	sub    $0x1,%r10
   346e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   346ec:	00 00 00 00 
   346f0:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   346f7:	00 00 00 00 
   346fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34700:	66 0f 38 dc c4       	aesenc %xmm4,%xmm0
   34705:	66 41 0f 6f 61 10    	movdqa 0x10(%r9),%xmm4
   3470b:	49 83 c1 10          	add    $0x10,%r9
   3470f:	49 ff ca             	dec    %r10
   34712:	75 ec                	jne    34700 <l9_cpAESCMAC_Update_AES_NI+0x60>
   34714:	66 0f 38 dd c4       	aesenclast %xmm4,%xmm0
   34719:	48 83 c6 10          	add    $0x10,%rsi
   3471d:	48 83 ea 10          	sub    $0x10,%rdx
   34721:	75 9d                	jne    346c0 <l9_cpAESCMAC_Update_AES_NI+0x20>
   34723:	66 0f ef e4          	pxor   %xmm4,%xmm4
   34727:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   3472b:	c5 f8 77             	vzeroupper 
   3472e:	c3                   	retq   
   3472f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34736:	00 00 00 
   34739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000034740 <l9_Decrypt_RIJ128_AES_NI>:
   34740:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   34747:	00 
   34748:	48 8d 04 85 00 00 00 	lea    0x0(,%rax,4),%rax
   3474f:	00 
   34750:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   34754:	66 0f ef 04 01       	pxor   (%rcx,%rax,1),%xmm0
   34759:	48 83 fa 0c          	cmp    $0xc,%rdx
   3475d:	7c 26                	jl     34785 <l9_Decrypt_RIJ128_AES_NI+0x45>
   3475f:	74 12                	je     34773 <l9_Decrypt_RIJ128_AES_NI+0x33>
   34761:	66 0f 38 de 81 d0 00 	aesdec 0xd0(%rcx),%xmm0
   34768:	00 00 
   3476a:	66 0f 38 de 81 c0 00 	aesdec 0xc0(%rcx),%xmm0
   34771:	00 00 
   34773:	66 0f 38 de 81 b0 00 	aesdec 0xb0(%rcx),%xmm0
   3477a:	00 00 
   3477c:	66 0f 38 de 81 a0 00 	aesdec 0xa0(%rcx),%xmm0
   34783:	00 00 
   34785:	66 0f 38 de 81 90 00 	aesdec 0x90(%rcx),%xmm0
   3478c:	00 00 
   3478e:	66 0f 38 de 81 80 00 	aesdec 0x80(%rcx),%xmm0
   34795:	00 00 
   34797:	66 0f 38 de 41 70    	aesdec 0x70(%rcx),%xmm0
   3479d:	66 0f 38 de 41 60    	aesdec 0x60(%rcx),%xmm0
   347a3:	66 0f 38 de 41 50    	aesdec 0x50(%rcx),%xmm0
   347a9:	66 0f 38 de 41 40    	aesdec 0x40(%rcx),%xmm0
   347af:	66 0f 38 de 41 30    	aesdec 0x30(%rcx),%xmm0
   347b5:	66 0f 38 de 41 20    	aesdec 0x20(%rcx),%xmm0
   347bb:	66 0f 38 de 41 10    	aesdec 0x10(%rcx),%xmm0
   347c1:	66 0f 38 df 01       	aesdeclast (%rcx),%xmm0
   347c6:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   347ca:	c5 f8 77             	vzeroupper 
   347cd:	c3                   	retq   
   347ce:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   347d5:	00 00 00 
   347d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   347df:	00 

00000000000347e0 <l9_Encrypt_RIJ128_AES_NI>:
   347e0:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   347e4:	66 0f ef 01          	pxor   (%rcx),%xmm0
   347e8:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   347ef:	00 
   347f0:	48 8d 8c 81 70 ff ff 	lea    -0x90(%rcx,%rax,4),%rcx
   347f7:	ff 
   347f8:	48 83 fa 0c          	cmp    $0xc,%rdx
   347fc:	7c 1a                	jl     34818 <l9_Encrypt_RIJ128_AES_NI+0x38>
   347fe:	74 0c                	je     3480c <l9_Encrypt_RIJ128_AES_NI+0x2c>
   34800:	66 0f 38 dc 41 c0    	aesenc -0x40(%rcx),%xmm0
   34806:	66 0f 38 dc 41 d0    	aesenc -0x30(%rcx),%xmm0
   3480c:	66 0f 38 dc 41 e0    	aesenc -0x20(%rcx),%xmm0
   34812:	66 0f 38 dc 41 f0    	aesenc -0x10(%rcx),%xmm0
   34818:	66 0f 38 dc 01       	aesenc (%rcx),%xmm0
   3481d:	66 0f 38 dc 41 10    	aesenc 0x10(%rcx),%xmm0
   34823:	66 0f 38 dc 41 20    	aesenc 0x20(%rcx),%xmm0
   34829:	66 0f 38 dc 41 30    	aesenc 0x30(%rcx),%xmm0
   3482f:	66 0f 38 dc 41 40    	aesenc 0x40(%rcx),%xmm0
   34835:	66 0f 38 dc 41 50    	aesenc 0x50(%rcx),%xmm0
   3483b:	66 0f 38 dc 41 60    	aesenc 0x60(%rcx),%xmm0
   34841:	66 0f 38 dc 41 70    	aesenc 0x70(%rcx),%xmm0
   34847:	66 0f 38 dc 81 80 00 	aesenc 0x80(%rcx),%xmm0
   3484e:	00 00 
   34850:	66 0f 38 dd 81 90 00 	aesenclast 0x90(%rcx),%xmm0
   34857:	00 00 
   34859:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   3485d:	c5 f8 77             	vzeroupper 
   34860:	c3                   	retq   
   34861:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34868:	00 00 00 
   3486b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34872:	00 00 00 
   34875:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3487c:	00 00 00 
   3487f:	90                   	nop

0000000000034880 <DECODE_DATA>:
   34880:	00 01                	add    %al,(%rcx)
   34882:	2e 2f                	cs (bad) 
   34884:	49                   	rex.WB
   34885:	48                   	rex.W
   34886:	67 66 43             	addr32 data16 rex.XB
   34889:	42 6d                	rex.X insl (%dx),%es:(%rdi)
   3488b:	6c                   	insb   (%dx),%es:(%rdi)
   3488c:	0a 0b                	or     (%rbx),%cl
   3488e:	24 25                	and    $0x25,%al

0000000000034890 <TransFwdHI>:
   34890:	00 35 d0 e5 3d 08    	add    %dh,0x83de5d0(%rip)        # 8412e66 <_end+0x83bbb26>
   34896:	ed                   	in     (%dx),%eax
   34897:	d8 e9                	fsubr  %st(1),%st
   34899:	dc 39                	fdivrl (%rcx)
   3489b:	0c d4                	or     $0xd4,%al
   3489d:	e1 04                	loope  348a3 <TransInvLO+0x3>
   3489f:	31                   	.byte 0x31

00000000000348a0 <TransInvLO>:
   348a0:	00 01                	add    %al,(%rcx)
   348a2:	5c                   	pop    %rsp
   348a3:	5d                   	pop    %rbp
   348a4:	e0 e1                	loopne 34887 <DECODE_DATA+0x7>
   348a6:	bc bd 50 51 0c       	mov    $0xc5150bd,%esp
   348ab:	0d b0 b1 ec ed       	or     $0xedecb1b0,%eax

00000000000348b0 <TransInvHI>:
   348b0:	00 1f                	add    %bl,(%rdi)
   348b2:	ee                   	out    %al,(%dx)
   348b3:	f1                   	icebp  
   348b4:	55                   	push   %rbp
   348b5:	4a bb a4 6a 75 84 9b 	rex.WX movabs $0xd1203f9b84756aa4,%rbx
   348bc:	3f 20 d1 
   348bf:	ce                   	(bad)  

00000000000348c0 <GF16_csize>:
   348c0:	0f                   	(bad)  
   348c1:	0f                   	(bad)  
   348c2:	0f                   	(bad)  
   348c3:	0f                   	(bad)  
   348c4:	0f                   	(bad)  
   348c5:	0f                   	(bad)  
   348c6:	0f                   	(bad)  
   348c7:	0f                   	(bad)  
   348c8:	0f                   	(bad)  
   348c9:	0f                   	(bad)  
   348ca:	0f                   	(bad)  
   348cb:	0f                   	(bad)  
   348cc:	0f                   	(bad)  
   348cd:	0f                   	.byte 0xf
   348ce:	0f                   	.byte 0xf
   348cf:	0f                   	.byte 0xf

00000000000348d0 <GF16_logTbl>:
   348d0:	c0 00 01             	rolb   $0x1,(%rax)
   348d3:	04 02                	add    $0x2,%al
   348d5:	08 05 0a 03 0e 09    	or     %al,0x90e030a(%rip)        # 9114be5 <_end+0x90bd8a5>
   348db:	07                   	(bad)  
   348dc:	06                   	(bad)  
   348dd:	0d                   	.byte 0xd
   348de:	0b                   	.byte 0xb
   348df:	0c                   	.byte 0xc

00000000000348e0 <GF16_expTbl>:
   348e0:	01 02                	add    %eax,(%rdx)
   348e2:	04 08                	add    $0x8,%al
   348e4:	03 06                	add    (%rsi),%eax
   348e6:	0c 0b                	or     $0xb,%al
   348e8:	05 0a 07 0e 0f       	add    $0xf0e070a,%eax
   348ed:	0d                   	.byte 0xd
   348ee:	09 01                	or     %eax,(%rcx)

00000000000348f0 <GF16_sqr1>:
   348f0:	00 09                	add    %cl,(%rcx)
   348f2:	02 0b                	add    (%rbx),%cl
   348f4:	08 01                	or     %al,(%rcx)
   348f6:	0a 03                	or     (%rbx),%al
   348f8:	06                   	(bad)  
   348f9:	0f 04                	(bad)  
   348fb:	0d 0e 07 0c 05       	or     $0x50c070e,%eax

0000000000034900 <GF16_invLog>:
   34900:	c0 00 0e             	rolb   $0xe,(%rax)
   34903:	0b 0d 07 0a 05 0c    	or     0xc050a07(%rip),%ecx        # c085310 <_end+0xc02dfd0>
   34909:	01 06                	add    %eax,(%rsi)
   3490b:	08 09                	or     %cl,(%rcx)
   3490d:	02 04 03             	add    (%rbx,%rax,1),%al

0000000000034910 <InvAffineLO>:
   34910:	00 50 36             	add    %dl,0x36(%rax)
   34913:	66 15 45 23          	adc    $0x2345,%ax
   34917:	73 82                	jae    3489b <TransFwdHI+0xb>
   34919:	d2 b4 e4 97 c7 a1 f1 	shlb   %cl,-0xe5e3869(%rsp,%riz,8)

0000000000034920 <InvAffineHI>:
   34920:	00 01                	add    %al,(%rcx)
   34922:	34 35                	xor    $0x35,%al
   34924:	40                   	rex
   34925:	41 74 75             	rex.B je 3499d <GF16mul_B_0x+0xd>
   34928:	3e 3f                	ds (bad) 
   3492a:	0a 0b                	or     (%rbx),%cl
   3492c:	7e 7f                	jle    349ad <GF16mul_0_Bx+0xd>
   3492e:	4a                   	rex.WX
   3492f:	4b                   	rex.WXB

0000000000034930 <InvAffineCnt>:
   34930:	48                   	rex.W
   34931:	48                   	rex.W
   34932:	48                   	rex.W
   34933:	48                   	rex.W
   34934:	48                   	rex.W
   34935:	48                   	rex.W
   34936:	48                   	rex.W
   34937:	48                   	rex.W
   34938:	48                   	rex.W
   34939:	48                   	rex.W
   3493a:	48                   	rex.W
   3493b:	48                   	rex.W
   3493c:	48                   	rex.W
   3493d:	48                   	rex.W
   3493e:	48                   	rex.W
   3493f:	48                   	rex.W

0000000000034940 <InvShiftRows>:
   34940:	00 0d 0a 07 04 01    	add    %cl,0x104070a(%rip)        # 1075050 <_end+0x101dd10>
   34946:	0e                   	(bad)  
   34947:	0b 08                	or     (%rax),%ecx
   34949:	05 02 0f 0c 09       	add    $0x90c0f02,%eax
   3494e:	06                   	(bad)  
   3494f:	03                   	.byte 0x3

0000000000034950 <GF16mul_4_2x>:
   34950:	00 24 48             	add    %ah,(%rax,%rcx,2)
   34953:	6c                   	insb   (%dx),%es:(%rdi)
   34954:	83 a7 cb ef 36 12 7e 	andl   $0x7e,0x1236efcb(%rdi)
   3495b:	5a                   	pop    %rdx
   3495c:	b5 91                	mov    $0x91,%ch
   3495e:	fd                   	std    
   3495f:	d9                   	.byte 0xd9

0000000000034960 <GF16mul_1_6x>:
   34960:	00 61 c2             	add    %ah,-0x3e(%rcx)
   34963:	a3 b4 d5 76 17 58 39 	movabs %eax,0xfb9a39581776d5b4
   3496a:	9a fb 
   3496c:	ec                   	in     (%dx),%al
   3496d:	8d 2e                	lea    (%rsi),%ebp
   3496f:	4f                   	rex.WRXB

0000000000034970 <GF16mul_C_6x>:
   34970:	00 6c cb a7          	add    %ch,-0x59(%rbx,%rcx,8)
   34974:	b5 d9                	mov    $0xd9,%ch
   34976:	7e 12                	jle    3498a <GF16mul_3_Ax+0xa>
   34978:	5a                   	pop    %rdx
   34979:	36 91                	ss xchg %eax,%ecx
   3497b:	fd                   	std    
   3497c:	ef                   	out    %eax,(%dx)
   3497d:	83                   	.byte 0x83
   3497e:	24 48                	and    $0x48,%al

0000000000034980 <GF16mul_3_Ax>:
   34980:	00 a3 76 d5 ec 4f    	add    %ah,0x4fecd576(%rbx)
   34986:	9a                   	(bad)  
   34987:	39 fb                	cmp    %edi,%ebx
   34989:	58                   	pop    %rax
   3498a:	8d 2e                	lea    (%rsi),%ebp
   3498c:	17                   	(bad)  
   3498d:	b4 61                	mov    $0x61,%ah
   3498f:	c2                   	.byte 0xc2

0000000000034990 <GF16mul_B_0x>:
   34990:	00 0b                	add    %cl,(%rbx)
   34992:	05 0e 0a 01 0f       	add    $0xf010a0e,%eax
   34997:	04 07                	add    $0x7,%al
   34999:	0c 02                	or     $0x2,%al
   3499b:	09                   	.byte 0x9
   3499c:	0d                   	.byte 0xd
   3499d:	06                   	(bad)  
   3499e:	08 03                	or     %al,(%rbx)

00000000000349a0 <GF16mul_0_Bx>:
   349a0:	00 b0 50 e0 a0 10    	add    %dh,0x10a0e050(%rax)
   349a6:	f0 40 70 c0          	lock rex jo 3496a <GF16mul_1_6x+0xa>
   349aa:	20 90 d0 60 80 30    	and    %dl,0x308060d0(%rax)

00000000000349b0 <GF16mul_2_4x>:
   349b0:	00 42 84             	add    %al,-0x7c(%rdx)
   349b3:	c6                   	(bad)  
   349b4:	38 7a bc             	cmp    %bh,-0x44(%rdx)
   349b7:	fe                   	(bad)  
   349b8:	63 21                	movslq (%rcx),%esp
   349ba:	e7 a5                	out    %eax,$0xa5
   349bc:	5b                   	pop    %rbx
   349bd:	19 df                	sbb    %ebx,%edi
   349bf:	9d                   	popfq  

00000000000349c0 <GF16mul_2_6x>:
   349c0:	00 62 c4             	add    %ah,-0x3c(%rdx)
   349c3:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   349c4:	b8 da 7c 1e 53       	mov    $0x531e7cda,%eax
   349c9:	31 97 f5 eb 89 2f    	xor    %edx,0x2f89ebf5(%rdi)
   349cf:	4d                   	rex.WRB

00000000000349d0 <ColumnROR>:
   349d0:	01 02                	add    %eax,(%rdx)
   349d2:	03 00                	add    (%rax),%eax
   349d4:	05 06 07 04 09       	add    $0x9040706,%eax
   349d9:	0a 0b                	or     (%rbx),%cl
   349db:	08                   	.byte 0x8
   349dc:	0d                   	.byte 0xd
   349dd:	0e                   	(bad)  
   349de:	0f 0c                	(bad)  

00000000000349e0 <l9_SafeDecrypt_RIJ128>:
   349e0:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   349e7:	00 
   349e8:	48 8d 0c 81          	lea    (%rcx,%rax,4),%rcx
   349ec:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   349f0:	66 0f 6f 3d c8 fe ff 	movdqa -0x138(%rip),%xmm7        # 348c0 <GF16_csize>
   349f7:	ff 
   349f8:	66 0f 6f 15 80 fe ff 	movdqa -0x180(%rip),%xmm2        # 34880 <DECODE_DATA>
   349ff:	ff 
   34a00:	66 0f 6f 0d 88 fe ff 	movdqa -0x178(%rip),%xmm1        # 34890 <TransFwdHI>
   34a07:	ff 
   34a08:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   34a0c:	66 0f 71 d0 04       	psrlw  $0x4,%xmm0
   34a11:	66 0f db df          	pand   %xmm7,%xmm3
   34a15:	66 0f db c7          	pand   %xmm7,%xmm0
   34a19:	66 0f 38 00 d3       	pshufb %xmm3,%xmm2
   34a1e:	66 0f 38 00 c8       	pshufb %xmm0,%xmm1
   34a23:	66 0f ef d1          	pxor   %xmm1,%xmm2
   34a27:	66 0f ef 11          	pxor   (%rcx),%xmm2
   34a2b:	48 83 e9 10          	sub    $0x10,%rcx
   34a2f:	48 83 ea 01          	sub    $0x1,%rdx
   34a33:	66 0f 6f 05 d5 fe ff 	movdqa -0x12b(%rip),%xmm0        # 34910 <InvAffineLO>
   34a3a:	ff 
   34a3b:	66 0f 6f 0d dd fe ff 	movdqa -0x123(%rip),%xmm1        # 34920 <InvAffineHI>
   34a42:	ff 
   34a43:	66 0f 6f da          	movdqa %xmm2,%xmm3
   34a47:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   34a4c:	66 0f db df          	pand   %xmm7,%xmm3
   34a50:	66 0f db d7          	pand   %xmm7,%xmm2
   34a54:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   34a59:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   34a5e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   34a62:	66 0f ef 05 c6 fe ff 	pxor   -0x13a(%rip),%xmm0        # 34930 <InvAffineCnt>
   34a69:	ff 
   34a6a:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   34a6e:	66 0f db c7          	pand   %xmm7,%xmm0
   34a72:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   34a77:	66 0f db cf          	pand   %xmm7,%xmm1
   34a7b:	66 0f 6f 2d 4d fe ff 	movdqa -0x1b3(%rip),%xmm5        # 348d0 <GF16_logTbl>
   34a82:	ff 
   34a83:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   34a88:	66 0f ef c1          	pxor   %xmm1,%xmm0
   34a8c:	66 0f 6f 15 3c fe ff 	movdqa -0x1c4(%rip),%xmm2        # 348d0 <GF16_logTbl>
   34a93:	ff 
   34a94:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   34a99:	66 0f 6f 25 4f fe ff 	movdqa -0x1b1(%rip),%xmm4        # 348f0 <GF16_sqr1>
   34aa0:	ff 
   34aa1:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   34aa6:	66 0f 6f 1d 22 fe ff 	movdqa -0x1de(%rip),%xmm3        # 348d0 <GF16_logTbl>
   34aad:	ff 
   34aae:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34ab3:	66 0f fc ea          	paddb  %xmm2,%xmm5
   34ab7:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   34abb:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   34abf:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   34ac3:	66 0f 6f 2d 15 fe ff 	movdqa -0x1eb(%rip),%xmm5        # 348e0 <GF16_expTbl>
   34aca:	ff 
   34acb:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   34ad0:	66 0f ef e5          	pxor   %xmm5,%xmm4
   34ad4:	66 0f 6f 2d 24 fe ff 	movdqa -0x1dc(%rip),%xmm5        # 34900 <GF16_invLog>
   34adb:	ff 
   34adc:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   34ae1:	66 0f fc d5          	paddb  %xmm5,%xmm2
   34ae5:	66 0f fc dd          	paddb  %xmm5,%xmm3
   34ae9:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   34aed:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   34af1:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   34af5:	66 0f 6f 05 e3 fd ff 	movdqa -0x21d(%rip),%xmm0        # 348e0 <GF16_expTbl>
   34afc:	ff 
   34afd:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   34b02:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   34b06:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   34b0a:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   34b0e:	66 0f 6f 0d ca fd ff 	movdqa -0x236(%rip),%xmm1        # 348e0 <GF16_expTbl>
   34b15:	ff 
   34b16:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   34b1b:	66 0f 38 00 05 1c fe 	pshufb -0x1e4(%rip),%xmm0        # 34940 <InvShiftRows>
   34b22:	ff ff 
   34b24:	66 0f 38 00 0d 13 fe 	pshufb -0x1ed(%rip),%xmm1        # 34940 <InvShiftRows>
   34b2b:	ff ff 
   34b2d:	66 0f 6f 15 1b fe ff 	movdqa -0x1e5(%rip),%xmm2        # 34950 <GF16mul_4_2x>
   34b34:	ff 
   34b35:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   34b3a:	66 0f 38 00 05 8d fe 	pshufb -0x173(%rip),%xmm0        # 349d0 <ColumnROR>
   34b41:	ff ff 
   34b43:	66 0f 6f 1d 15 fe ff 	movdqa -0x1eb(%rip),%xmm3        # 34960 <GF16mul_1_6x>
   34b4a:	ff 
   34b4b:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34b50:	66 0f 38 00 0d 77 fe 	pshufb -0x189(%rip),%xmm1        # 349d0 <ColumnROR>
   34b57:	ff ff 
   34b59:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34b5d:	66 0f 6f 1d 0b fe ff 	movdqa -0x1f5(%rip),%xmm3        # 34970 <GF16mul_C_6x>
   34b64:	ff 
   34b65:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   34b6a:	66 0f 38 00 05 5d fe 	pshufb -0x1a3(%rip),%xmm0        # 349d0 <ColumnROR>
   34b71:	ff ff 
   34b73:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34b77:	66 0f 6f 1d 01 fe ff 	movdqa -0x1ff(%rip),%xmm3        # 34980 <GF16mul_3_Ax>
   34b7e:	ff 
   34b7f:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34b84:	66 0f 38 00 0d 43 fe 	pshufb -0x1bd(%rip),%xmm1        # 349d0 <ColumnROR>
   34b8b:	ff ff 
   34b8d:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34b91:	66 0f 6f 1d f7 fd ff 	movdqa -0x209(%rip),%xmm3        # 34990 <GF16mul_B_0x>
   34b98:	ff 
   34b99:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   34b9e:	66 0f 38 00 05 29 fe 	pshufb -0x1d7(%rip),%xmm0        # 349d0 <ColumnROR>
   34ba5:	ff ff 
   34ba7:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34bab:	66 0f 6f 1d ed fd ff 	movdqa -0x213(%rip),%xmm3        # 349a0 <GF16mul_0_Bx>
   34bb2:	ff 
   34bb3:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34bb8:	66 0f 38 00 0d 0f fe 	pshufb -0x1f1(%rip),%xmm1        # 349d0 <ColumnROR>
   34bbf:	ff ff 
   34bc1:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34bc5:	66 0f 6f 1d e3 fd ff 	movdqa -0x21d(%rip),%xmm3        # 349b0 <GF16mul_2_4x>
   34bcc:	ff 
   34bcd:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   34bd2:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34bd6:	66 0f 6f 1d e2 fd ff 	movdqa -0x21e(%rip),%xmm3        # 349c0 <GF16mul_2_6x>
   34bdd:	ff 
   34bde:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34be3:	66 0f ef d3          	pxor   %xmm3,%xmm2
   34be7:	66 0f ef 11          	pxor   (%rcx),%xmm2
   34beb:	48 83 e9 10          	sub    $0x10,%rcx
   34bef:	48 83 ea 01          	sub    $0x1,%rdx
   34bf3:	0f 8f 3a fe ff ff    	jg     34a33 <l9_SafeDecrypt_RIJ128+0x53>
   34bf9:	66 0f 6f 05 0f fd ff 	movdqa -0x2f1(%rip),%xmm0        # 34910 <InvAffineLO>
   34c00:	ff 
   34c01:	66 0f 6f 0d 17 fd ff 	movdqa -0x2e9(%rip),%xmm1        # 34920 <InvAffineHI>
   34c08:	ff 
   34c09:	66 0f 6f da          	movdqa %xmm2,%xmm3
   34c0d:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   34c12:	66 0f db df          	pand   %xmm7,%xmm3
   34c16:	66 0f db d7          	pand   %xmm7,%xmm2
   34c1a:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   34c1f:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   34c24:	66 0f ef c1          	pxor   %xmm1,%xmm0
   34c28:	66 0f ef 05 00 fd ff 	pxor   -0x300(%rip),%xmm0        # 34930 <InvAffineCnt>
   34c2f:	ff 
   34c30:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   34c34:	66 0f db c7          	pand   %xmm7,%xmm0
   34c38:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   34c3d:	66 0f db cf          	pand   %xmm7,%xmm1
   34c41:	66 0f 6f 2d 87 fc ff 	movdqa -0x379(%rip),%xmm5        # 348d0 <GF16_logTbl>
   34c48:	ff 
   34c49:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   34c4e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   34c52:	66 0f 6f 15 76 fc ff 	movdqa -0x38a(%rip),%xmm2        # 348d0 <GF16_logTbl>
   34c59:	ff 
   34c5a:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   34c5f:	66 0f 6f 25 89 fc ff 	movdqa -0x377(%rip),%xmm4        # 348f0 <GF16_sqr1>
   34c66:	ff 
   34c67:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   34c6c:	66 0f 6f 1d 5c fc ff 	movdqa -0x3a4(%rip),%xmm3        # 348d0 <GF16_logTbl>
   34c73:	ff 
   34c74:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34c79:	66 0f fc ea          	paddb  %xmm2,%xmm5
   34c7d:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   34c81:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   34c85:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   34c89:	66 0f 6f 2d 4f fc ff 	movdqa -0x3b1(%rip),%xmm5        # 348e0 <GF16_expTbl>
   34c90:	ff 
   34c91:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   34c96:	66 0f ef e5          	pxor   %xmm5,%xmm4
   34c9a:	66 0f 6f 2d 5e fc ff 	movdqa -0x3a2(%rip),%xmm5        # 34900 <GF16_invLog>
   34ca1:	ff 
   34ca2:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   34ca7:	66 0f fc d5          	paddb  %xmm5,%xmm2
   34cab:	66 0f fc dd          	paddb  %xmm5,%xmm3
   34caf:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   34cb3:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   34cb7:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   34cbb:	66 0f 6f 05 1d fc ff 	movdqa -0x3e3(%rip),%xmm0        # 348e0 <GF16_expTbl>
   34cc2:	ff 
   34cc3:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   34cc8:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   34ccc:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   34cd0:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   34cd4:	66 0f 6f 0d 04 fc ff 	movdqa -0x3fc(%rip),%xmm1        # 348e0 <GF16_expTbl>
   34cdb:	ff 
   34cdc:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   34ce1:	66 0f 71 f1 04       	psllw  $0x4,%xmm1
   34ce6:	66 0f eb c8          	por    %xmm0,%xmm1
   34cea:	66 0f 38 00 0d 4d fc 	pshufb -0x3b3(%rip),%xmm1        # 34940 <InvShiftRows>
   34cf1:	ff ff 
   34cf3:	66 0f ef 09          	pxor   (%rcx),%xmm1
   34cf7:	66 0f 6f 05 a1 fb ff 	movdqa -0x45f(%rip),%xmm0        # 348a0 <TransInvLO>
   34cfe:	ff 
   34cff:	66 0f 6f 15 a9 fb ff 	movdqa -0x457(%rip),%xmm2        # 348b0 <TransInvHI>
   34d06:	ff 
   34d07:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   34d0b:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   34d10:	66 0f db df          	pand   %xmm7,%xmm3
   34d14:	66 0f db cf          	pand   %xmm7,%xmm1
   34d18:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   34d1d:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   34d22:	66 0f ef c2          	pxor   %xmm2,%xmm0
   34d26:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   34d2a:	c5 f8 77             	vzeroupper 
   34d2d:	c3                   	retq   
   34d2e:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34d35:	00 00 00 
   34d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   34d3f:	00 

0000000000034d40 <ENCODE_DATA>:
   34d40:	00 01                	add    %al,(%rcx)
   34d42:	2e 2f                	cs (bad) 
   34d44:	49                   	rex.WB
   34d45:	48                   	rex.W
   34d46:	67 66 43             	addr32 data16 rex.XB
   34d49:	42 6d                	rex.X insl (%dx),%es:(%rdi)
   34d4b:	6c                   	insb   (%dx),%es:(%rdi)
   34d4c:	0a 0b                	or     (%rbx),%cl
   34d4e:	24 25                	and    $0x25,%al

0000000000034d50 <TransFwdHI>:
   34d50:	00 35 d0 e5 3d 08    	add    %dh,0x83de5d0(%rip)        # 8413326 <_end+0x83bbfe6>
   34d56:	ed                   	in     (%dx),%eax
   34d57:	d8 e9                	fsubr  %st(1),%st
   34d59:	dc 39                	fdivrl (%rcx)
   34d5b:	0c d4                	or     $0xd4,%al
   34d5d:	e1 04                	loope  34d63 <TransInvLO+0x3>
   34d5f:	31                   	.byte 0x31

0000000000034d60 <TransInvLO>:
   34d60:	00 01                	add    %al,(%rcx)
   34d62:	5c                   	pop    %rsp
   34d63:	5d                   	pop    %rbp
   34d64:	e0 e1                	loopne 34d47 <ENCODE_DATA+0x7>
   34d66:	bc bd 50 51 0c       	mov    $0xc5150bd,%esp
   34d6b:	0d b0 b1 ec ed       	or     $0xedecb1b0,%eax

0000000000034d70 <TransInvHI>:
   34d70:	00 1f                	add    %bl,(%rdi)
   34d72:	ee                   	out    %al,(%dx)
   34d73:	f1                   	icebp  
   34d74:	55                   	push   %rbp
   34d75:	4a bb a4 6a 75 84 9b 	rex.WX movabs $0xd1203f9b84756aa4,%rbx
   34d7c:	3f 20 d1 
   34d7f:	ce                   	(bad)  

0000000000034d80 <GF16_csize>:
   34d80:	0f                   	(bad)  
   34d81:	0f                   	(bad)  
   34d82:	0f                   	(bad)  
   34d83:	0f                   	(bad)  
   34d84:	0f                   	(bad)  
   34d85:	0f                   	(bad)  
   34d86:	0f                   	(bad)  
   34d87:	0f                   	(bad)  
   34d88:	0f                   	(bad)  
   34d89:	0f                   	(bad)  
   34d8a:	0f                   	(bad)  
   34d8b:	0f                   	(bad)  
   34d8c:	0f                   	(bad)  
   34d8d:	0f                   	.byte 0xf
   34d8e:	0f                   	.byte 0xf
   34d8f:	0f                   	.byte 0xf

0000000000034d90 <GF16_logTbl>:
   34d90:	c0 00 01             	rolb   $0x1,(%rax)
   34d93:	04 02                	add    $0x2,%al
   34d95:	08 05 0a 03 0e 09    	or     %al,0x90e030a(%rip)        # 91150a5 <_end+0x90bdd65>
   34d9b:	07                   	(bad)  
   34d9c:	06                   	(bad)  
   34d9d:	0d                   	.byte 0xd
   34d9e:	0b                   	.byte 0xb
   34d9f:	0c                   	.byte 0xc

0000000000034da0 <GF16_expTbl>:
   34da0:	01 02                	add    %eax,(%rdx)
   34da2:	04 08                	add    $0x8,%al
   34da4:	03 06                	add    (%rsi),%eax
   34da6:	0c 0b                	or     $0xb,%al
   34da8:	05 0a 07 0e 0f       	add    $0xf0e070a,%eax
   34dad:	0d                   	.byte 0xd
   34dae:	09 01                	or     %eax,(%rcx)

0000000000034db0 <GF16_sqr1>:
   34db0:	00 09                	add    %cl,(%rcx)
   34db2:	02 0b                	add    (%rbx),%cl
   34db4:	08 01                	or     %al,(%rcx)
   34db6:	0a 03                	or     (%rbx),%al
   34db8:	06                   	(bad)  
   34db9:	0f 04                	(bad)  
   34dbb:	0d 0e 07 0c 05       	or     $0x50c070e,%eax

0000000000034dc0 <GF16_invLog>:
   34dc0:	c0 00 0e             	rolb   $0xe,(%rax)
   34dc3:	0b 0d 07 0a 05 0c    	or     0xc050a07(%rip),%ecx        # c0857d0 <_end+0xc02e490>
   34dc9:	01 06                	add    %eax,(%rsi)
   34dcb:	08 09                	or     %cl,(%rcx)
   34dcd:	02 04 03             	add    (%rbx,%rax,1),%al

0000000000034dd0 <GF16_expTbl_shift>:
   34dd0:	10 20                	adc    %ah,(%rax)
   34dd2:	40 80 30 60          	rex xorb $0x60,(%rax)
   34dd6:	c0 b0 50 a0 70 e0 f0 	shlb   $0xf0,-0x1f8f5fb0(%rax)
   34ddd:	d0                   	.byte 0xd0
   34dde:	90                   	nop
   34ddf:	10                   	.byte 0x10

0000000000034de0 <FwdAffineLO>:
   34de0:	00 10                	add    %dl,(%rax)
   34de2:	22 32                	and    (%rdx),%dh
   34de4:	55                   	push   %rbp
   34de5:	45 77 67             	rex.RB ja 34e4f <ColumnROR+0xf>
   34de8:	82                   	(bad)  
   34de9:	92                   	xchg   %eax,%edx
   34dea:	a0                   	.byte 0xa0
   34deb:	b0 d7                	mov    $0xd7,%al
   34ded:	c7                   	(bad)  
   34dee:	f5                   	cmc    
   34def:	e5                   	.byte 0xe5

0000000000034df0 <FwdAffineHI>:
   34df0:	00 41 34             	add    %al,0x34(%rcx)
   34df3:	75 40                	jne    34e35 <GF16mul_1_Cx+0x5>
   34df5:	01 74 35 2a          	add    %esi,0x2a(%rbp,%rsi,1)
   34df9:	6b 1e 5f             	imul   $0x5f,(%rsi),%ebx
   34dfc:	6a 2b                	pushq  $0x2b
   34dfe:	5e                   	pop    %rsi
   34dff:	1f                   	(bad)  

0000000000034e00 <FwdAffineCnt>:
   34e00:	c2 c2 c2             	retq   $0xc2c2
   34e03:	c2 c2 c2             	retq   $0xc2c2
   34e06:	c2 c2 c2             	retq   $0xc2c2
   34e09:	c2 c2 c2             	retq   $0xc2c2
   34e0c:	c2 c2 c2             	retq   $0xc2c2
   34e0f:	c2                   	.byte 0xc2

0000000000034e10 <FwdShiftRows>:
   34e10:	00 05 0a 0f 04 09    	add    %al,0x9040f0a(%rip)        # 9075d20 <_end+0x901e9e0>
   34e16:	0e                   	(bad)  
   34e17:	03 08                	add    (%rax),%ecx
   34e19:	0d 02 07 0c 01       	or     $0x10c0702,%eax
   34e1e:	06                   	(bad)  
   34e1f:	0b                   	.byte 0xb

0000000000034e20 <GF16mul_E_2x>:
   34e20:	00 2e                	add    %ch,(%rsi)
   34e22:	4f 61                	rex.WRXB (bad) 
   34e24:	8d a3 c2 ec 39 17    	lea    0x1739ecc2(%rbx),%esp
   34e2a:	76 58                	jbe    34e84 <l9_TransformNative2Composite+0x24>
   34e2c:	b4 9a                	mov    $0x9a,%ah
   34e2e:	fb                   	sti    
   34e2f:	d5                   	(bad)  

0000000000034e30 <GF16mul_1_Cx>:
   34e30:	00 c1                	add    %al,%cl
   34e32:	b2 73                	mov    $0x73,%dl
   34e34:	54                   	push   %rsp
   34e35:	95                   	xchg   %eax,%ebp
   34e36:	e6 27                	out    %al,$0x27
   34e38:	a8 69                	test   $0x69,%al
   34e3a:	1a db                	sbb    %bl,%bl
   34e3c:	fc                   	cld    
   34e3d:	3d                   	.byte 0x3d
   34e3e:	4e                   	rex.WRX
   34e3f:	8f                   	.byte 0x8f

0000000000034e40 <ColumnROR>:
   34e40:	01 02                	add    %eax,(%rdx)
   34e42:	03 00                	add    (%rax),%eax
   34e44:	05 06 07 04 09       	add    $0x9040706,%eax
   34e49:	0a 0b                	or     (%rbx),%cl
   34e4b:	08 0d 0e 0f 0c 66    	or     %cl,0x660c0f0e(%rip)        # 660f5d5f <_end+0x6609ea1f>
   34e51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34e58:	00 00 00 
   34e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000034e60 <l9_TransformNative2Composite>:
   34e60:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   34e64:	66 0f 6f 3d 14 ff ff 	movdqa -0xec(%rip),%xmm7        # 34d80 <GF16_csize>
   34e6b:	ff 
   34e6c:	66 0f 6f 0d cc fe ff 	movdqa -0x134(%rip),%xmm1        # 34d40 <ENCODE_DATA>
   34e73:	ff 
   34e74:	66 0f 6f 15 d4 fe ff 	movdqa -0x12c(%rip),%xmm2        # 34d50 <TransFwdHI>
   34e7b:	ff 
   34e7c:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   34e80:	66 0f 71 d0 04       	psrlw  $0x4,%xmm0
   34e85:	66 0f db df          	pand   %xmm7,%xmm3
   34e89:	66 0f db c7          	pand   %xmm7,%xmm0
   34e8d:	66 0f 38 00 cb       	pshufb %xmm3,%xmm1
   34e92:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   34e97:	66 0f ef ca          	pxor   %xmm2,%xmm1
   34e9b:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   34e9f:	c5 f8 77             	vzeroupper 
   34ea2:	c3                   	retq   
   34ea3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34eaa:	00 00 00 00 
   34eae:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34eb5:	00 00 00 00 
   34eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000034ec0 <l9_SafeEncrypt_RIJ128>:
   34ec0:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   34ec4:	66 0f 6f 3d b4 fe ff 	movdqa -0x14c(%rip),%xmm7        # 34d80 <GF16_csize>
   34ecb:	ff 
   34ecc:	66 0f 6f 05 6c fe ff 	movdqa -0x194(%rip),%xmm0        # 34d40 <ENCODE_DATA>
   34ed3:	ff 
   34ed4:	66 0f 6f 15 74 fe ff 	movdqa -0x18c(%rip),%xmm2        # 34d50 <TransFwdHI>
   34edb:	ff 
   34edc:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   34ee0:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   34ee5:	66 0f db df          	pand   %xmm7,%xmm3
   34ee9:	66 0f db cf          	pand   %xmm7,%xmm1
   34eed:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   34ef2:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   34ef7:	66 0f ef c2          	pxor   %xmm2,%xmm0
   34efb:	66 0f ef 01          	pxor   (%rcx),%xmm0
   34eff:	48 83 c1 10          	add    $0x10,%rcx
   34f03:	48 83 ea 01          	sub    $0x1,%rdx
   34f07:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   34f0b:	66 0f db c7          	pand   %xmm7,%xmm0
   34f0f:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   34f14:	66 0f db cf          	pand   %xmm7,%xmm1
   34f18:	66 0f 6f 2d 70 fe ff 	movdqa -0x190(%rip),%xmm5        # 34d90 <GF16_logTbl>
   34f1f:	ff 
   34f20:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   34f25:	66 0f ef c1          	pxor   %xmm1,%xmm0
   34f29:	66 0f 6f 15 5f fe ff 	movdqa -0x1a1(%rip),%xmm2        # 34d90 <GF16_logTbl>
   34f30:	ff 
   34f31:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   34f36:	66 0f 6f 25 72 fe ff 	movdqa -0x18e(%rip),%xmm4        # 34db0 <GF16_sqr1>
   34f3d:	ff 
   34f3e:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   34f43:	66 0f 6f 1d 45 fe ff 	movdqa -0x1bb(%rip),%xmm3        # 34d90 <GF16_logTbl>
   34f4a:	ff 
   34f4b:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   34f50:	66 0f fc ea          	paddb  %xmm2,%xmm5
   34f54:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   34f58:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   34f5c:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   34f60:	66 0f 6f 2d 38 fe ff 	movdqa -0x1c8(%rip),%xmm5        # 34da0 <GF16_expTbl>
   34f67:	ff 
   34f68:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   34f6d:	66 0f ef e5          	pxor   %xmm5,%xmm4
   34f71:	66 0f 6f 2d 47 fe ff 	movdqa -0x1b9(%rip),%xmm5        # 34dc0 <GF16_invLog>
   34f78:	ff 
   34f79:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   34f7e:	66 0f fc d5          	paddb  %xmm5,%xmm2
   34f82:	66 0f fc dd          	paddb  %xmm5,%xmm3
   34f86:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   34f8a:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   34f8e:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   34f92:	66 0f 6f 05 06 fe ff 	movdqa -0x1fa(%rip),%xmm0        # 34da0 <GF16_expTbl>
   34f99:	ff 
   34f9a:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   34f9f:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   34fa3:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   34fa7:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   34fab:	66 0f 6f 0d ed fd ff 	movdqa -0x213(%rip),%xmm1        # 34da0 <GF16_expTbl>
   34fb2:	ff 
   34fb3:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   34fb8:	66 0f 6f 1d 20 fe ff 	movdqa -0x1e0(%rip),%xmm3        # 34de0 <FwdAffineLO>
   34fbf:	ff 
   34fc0:	66 0f 6f 15 28 fe ff 	movdqa -0x1d8(%rip),%xmm2        # 34df0 <FwdAffineHI>
   34fc7:	ff 
   34fc8:	66 0f 6f 25 30 fe ff 	movdqa -0x1d0(%rip),%xmm4        # 34e00 <FwdAffineCnt>
   34fcf:	ff 
   34fd0:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   34fd5:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   34fda:	66 0f ef dc          	pxor   %xmm4,%xmm3
   34fde:	66 0f ef da          	pxor   %xmm2,%xmm3
   34fe2:	66 0f 38 00 1d 25 fe 	pshufb -0x1db(%rip),%xmm3        # 34e10 <FwdShiftRows>
   34fe9:	ff ff 
   34feb:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   34fef:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   34ff3:	66 0f ef e4          	pxor   %xmm4,%xmm4
   34ff7:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   34ffc:	66 0f db cf          	pand   %xmm7,%xmm1
   35000:	66 0f 6f 05 18 fe ff 	movdqa -0x1e8(%rip),%xmm0        # 34e20 <GF16mul_E_2x>
   35007:	ff 
   35008:	66 0f 38 00 c1       	pshufb %xmm1,%xmm0
   3500d:	66 0f db d7          	pand   %xmm7,%xmm2
   35011:	66 0f 6f 0d 17 fe ff 	movdqa -0x1e9(%rip),%xmm1        # 34e30 <GF16mul_1_Cx>
   35018:	ff 
   35019:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   3501e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   35022:	66 0f 38 00 1d 15 fe 	pshufb -0x1eb(%rip),%xmm3        # 34e40 <ColumnROR>
   35029:	ff ff 
   3502b:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3502f:	66 0f 38 00 1d 08 fe 	pshufb -0x1f8(%rip),%xmm3        # 34e40 <ColumnROR>
   35036:	ff ff 
   35038:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3503c:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   35040:	66 0f 38 00 15 f7 fd 	pshufb -0x209(%rip),%xmm2        # 34e40 <ColumnROR>
   35047:	ff ff 
   35049:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3504d:	66 0f 38 00 1d ea fd 	pshufb -0x216(%rip),%xmm3        # 34e40 <ColumnROR>
   35054:	ff ff 
   35056:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3505a:	66 0f ef c4          	pxor   %xmm4,%xmm0
   3505e:	66 0f ef 01          	pxor   (%rcx),%xmm0
   35062:	48 83 c1 10          	add    $0x10,%rcx
   35066:	48 83 ea 01          	sub    $0x1,%rdx
   3506a:	0f 8f 97 fe ff ff    	jg     34f07 <l9_SafeEncrypt_RIJ128+0x47>
   35070:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   35074:	66 0f db c7          	pand   %xmm7,%xmm0
   35078:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   3507d:	66 0f db cf          	pand   %xmm7,%xmm1
   35081:	66 0f 6f 2d 07 fd ff 	movdqa -0x2f9(%rip),%xmm5        # 34d90 <GF16_logTbl>
   35088:	ff 
   35089:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   3508e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   35092:	66 0f 6f 15 f6 fc ff 	movdqa -0x30a(%rip),%xmm2        # 34d90 <GF16_logTbl>
   35099:	ff 
   3509a:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   3509f:	66 0f 6f 25 09 fd ff 	movdqa -0x2f7(%rip),%xmm4        # 34db0 <GF16_sqr1>
   350a6:	ff 
   350a7:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   350ac:	66 0f 6f 1d dc fc ff 	movdqa -0x324(%rip),%xmm3        # 34d90 <GF16_logTbl>
   350b3:	ff 
   350b4:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   350b9:	66 0f fc ea          	paddb  %xmm2,%xmm5
   350bd:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   350c1:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   350c5:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   350c9:	66 0f 6f 2d cf fc ff 	movdqa -0x331(%rip),%xmm5        # 34da0 <GF16_expTbl>
   350d0:	ff 
   350d1:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   350d6:	66 0f ef e5          	pxor   %xmm5,%xmm4
   350da:	66 0f 6f 2d de fc ff 	movdqa -0x322(%rip),%xmm5        # 34dc0 <GF16_invLog>
   350e1:	ff 
   350e2:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   350e7:	66 0f fc d5          	paddb  %xmm5,%xmm2
   350eb:	66 0f fc dd          	paddb  %xmm5,%xmm3
   350ef:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   350f3:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   350f7:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   350fb:	66 0f 6f 05 9d fc ff 	movdqa -0x363(%rip),%xmm0        # 34da0 <GF16_expTbl>
   35102:	ff 
   35103:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   35108:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   3510c:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   35110:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   35114:	66 0f 6f 0d 84 fc ff 	movdqa -0x37c(%rip),%xmm1        # 34da0 <GF16_expTbl>
   3511b:	ff 
   3511c:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   35121:	66 0f 6f 1d b7 fc ff 	movdqa -0x349(%rip),%xmm3        # 34de0 <FwdAffineLO>
   35128:	ff 
   35129:	66 0f 6f 15 bf fc ff 	movdqa -0x341(%rip),%xmm2        # 34df0 <FwdAffineHI>
   35130:	ff 
   35131:	66 0f 6f 25 c7 fc ff 	movdqa -0x339(%rip),%xmm4        # 34e00 <FwdAffineCnt>
   35138:	ff 
   35139:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   3513e:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   35143:	66 0f ef dc          	pxor   %xmm4,%xmm3
   35147:	66 0f ef da          	pxor   %xmm2,%xmm3
   3514b:	66 0f 38 00 1d bc fc 	pshufb -0x344(%rip),%xmm3        # 34e10 <FwdShiftRows>
   35152:	ff ff 
   35154:	66 0f ef 19          	pxor   (%rcx),%xmm3
   35158:	66 0f 6f 05 00 fc ff 	movdqa -0x400(%rip),%xmm0        # 34d60 <TransInvLO>
   3515f:	ff 
   35160:	66 0f 6f 15 08 fc ff 	movdqa -0x3f8(%rip),%xmm2        # 34d70 <TransInvHI>
   35167:	ff 
   35168:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   3516c:	66 0f 71 d3 04       	psrlw  $0x4,%xmm3
   35171:	66 0f db cf          	pand   %xmm7,%xmm1
   35175:	66 0f db df          	pand   %xmm7,%xmm3
   35179:	66 0f 38 00 c1       	pshufb %xmm1,%xmm0
   3517e:	66 0f 38 00 d3       	pshufb %xmm3,%xmm2
   35183:	66 0f ef c2          	pxor   %xmm2,%xmm0
   35187:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   3518b:	c5 f8 77             	vzeroupper 
   3518e:	c3                   	retq   
   3518f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35196:	00 00 00 
   35199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000351a0 <k0_ippsAES_CMACFinal>:
   351a0:	55                   	push   %rbp
   351a1:	48 89 e5             	mov    %rsp,%rbp
   351a4:	41 57                	push   %r15
   351a6:	41 56                	push   %r14
   351a8:	41 55                	push   %r13
   351aa:	41 54                	push   %r12
   351ac:	53                   	push   %rbx
   351ad:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   351b1:	48 83 ec 20          	sub    $0x20,%rsp
   351b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   351bc:	00 00 
   351be:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   351c3:	31 c0                	xor    %eax,%eax
   351c5:	48 85 d2             	test   %rdx,%rdx
   351c8:	0f 84 05 01 00 00    	je     352d3 <k0_ippsAES_CMACFinal+0x133>
   351ce:	49 89 d5             	mov    %rdx,%r13
   351d1:	49 f7 dd             	neg    %r13
   351d4:	41 83 e5 0f          	and    $0xf,%r13d
   351d8:	49 89 fe             	mov    %rdi,%r14
   351db:	49 01 d5             	add    %rdx,%r13
   351de:	48 85 ff             	test   %rdi,%rdi
   351e1:	0f 84 ec 00 00 00    	je     352d3 <k0_ippsAES_CMACFinal+0x133>
   351e7:	44 8d 7e ff          	lea    -0x1(%rsi),%r15d
   351eb:	41 89 f4             	mov    %esi,%r12d
   351ee:	41 83 ff 0f          	cmp    $0xf,%r15d
   351f2:	0f 87 cf 00 00 00    	ja     352c7 <k0_ippsAES_CMACFinal+0x127>
   351f8:	48 89 e3             	mov    %rsp,%rbx
   351fb:	4c 89 ea             	mov    %r13,%rdx
   351fe:	be 10 00 00 00       	mov    $0x10,%esi
   35203:	48 89 df             	mov    %rbx,%rdi
   35206:	e8 f5 00 00 00       	callq  35300 <k0_ippsAES_CMACGetTag>
   3520b:	85 c0                	test   %eax,%eax
   3520d:	0f 85 91 00 00 00    	jne    352a4 <k0_ippsAES_CMACFinal+0x104>
   35213:	45 85 e4             	test   %r12d,%r12d
   35216:	7e 7a                	jle    35292 <k0_ippsAES_CMACFinal+0xf2>
   35218:	41 83 ff 1e          	cmp    $0x1e,%r15d
   3521c:	0f 86 a1 00 00 00    	jbe    352c3 <k0_ippsAES_CMACFinal+0x123>
   35222:	44 89 e2             	mov    %r12d,%edx
   35225:	c1 ea 05             	shr    $0x5,%edx
   35228:	48 c1 e2 05          	shl    $0x5,%rdx
   3522c:	48 89 df             	mov    %rbx,%rdi
   3522f:	4c 89 f1             	mov    %r14,%rcx
   35232:	4c 01 f2             	add    %r14,%rdx
   35235:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3523c:	00 00 00 00 
   35240:	62 f1 fd 28 6f 0f    	vmovdqa64 (%rdi),%ymm1
   35246:	48 83 c1 20          	add    $0x20,%rcx
   3524a:	62 f1 7f 28 7f 49 ff 	vmovdqu8 %ymm1,-0x20(%rcx)
   35251:	48 83 c7 20          	add    $0x20,%rdi
   35255:	48 39 d1             	cmp    %rdx,%rcx
   35258:	75 e6                	jne    35240 <k0_ippsAES_CMACFinal+0xa0>
   3525a:	44 89 e1             	mov    %r12d,%ecx
   3525d:	83 e1 e0             	and    $0xffffffe0,%ecx
   35260:	41 39 cc             	cmp    %ecx,%r12d
   35263:	74 69                	je     352ce <k0_ippsAES_CMACFinal+0x12e>
   35265:	c5 f8 77             	vzeroupper 
   35268:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3526f:	00 00 00 00 
   35273:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3527a:	00 00 00 00 
   3527e:	66 90                	xchg   %ax,%ax
   35280:	48 63 f1             	movslq %ecx,%rsi
   35283:	0f b6 3c 34          	movzbl (%rsp,%rsi,1),%edi
   35287:	ff c1                	inc    %ecx
   35289:	41 88 3c 36          	mov    %dil,(%r14,%rsi,1)
   3528d:	41 39 cc             	cmp    %ecx,%r12d
   35290:	7f ee                	jg     35280 <k0_ippsAES_CMACFinal+0xe0>
   35292:	41 c7 45 04 00 00 00 	movl   $0x0,0x4(%r13)
   35299:	00 
   3529a:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   3529e:	c4 c1 78 11 45 40    	vmovups %xmm0,0x40(%r13)
   352a4:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   352a9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   352b0:	00 00 
   352b2:	75 26                	jne    352da <k0_ippsAES_CMACFinal+0x13a>
   352b4:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   352b8:	5b                   	pop    %rbx
   352b9:	41 5c                	pop    %r12
   352bb:	41 5d                	pop    %r13
   352bd:	41 5e                	pop    %r14
   352bf:	41 5f                	pop    %r15
   352c1:	5d                   	pop    %rbp
   352c2:	c3                   	retq   
   352c3:	31 c9                	xor    %ecx,%ecx
   352c5:	eb b9                	jmp    35280 <k0_ippsAES_CMACFinal+0xe0>
   352c7:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   352cc:	eb d6                	jmp    352a4 <k0_ippsAES_CMACFinal+0x104>
   352ce:	c5 f8 77             	vzeroupper 
   352d1:	eb bf                	jmp    35292 <k0_ippsAES_CMACFinal+0xf2>
   352d3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   352d8:	eb ca                	jmp    352a4 <k0_ippsAES_CMACFinal+0x104>
   352da:	e8 ad 61 fd ff       	callq  b48c <__stack_chk_fail>
   352df:	90                   	nop

00000000000352e0 <k0_ippsAES_CMACGetSize>:
   352e0:	48 85 ff             	test   %rdi,%rdi
   352e3:	74 09                	je     352ee <k0_ippsAES_CMACGetSize+0xe>
   352e5:	c7 07 9f 02 00 00    	movl   $0x29f,(%rdi)
   352eb:	31 c0                	xor    %eax,%eax
   352ed:	c3                   	retq   
   352ee:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   352f3:	c3                   	retq   
   352f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   352fb:	00 00 00 
   352fe:	66 90                	xchg   %ax,%ax

0000000000035300 <k0_ippsAES_CMACGetTag>:
   35300:	55                   	push   %rbp
   35301:	48 89 e5             	mov    %rsp,%rbp
   35304:	41 56                	push   %r14
   35306:	41 55                	push   %r13
   35308:	41 54                	push   %r12
   3530a:	53                   	push   %rbx
   3530b:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   3530f:	48 83 ec 40          	sub    $0x40,%rsp
   35313:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3531a:	00 00 
   3531c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   35321:	31 c0                	xor    %eax,%eax
   35323:	48 85 d2             	test   %rdx,%rdx
   35326:	0f 84 09 02 00 00    	je     35535 <k0_ippsAES_CMACGetTag+0x235>
   3532c:	48 89 d0             	mov    %rdx,%rax
   3532f:	48 f7 d8             	neg    %rax
   35332:	83 e0 0f             	and    $0xf,%eax
   35335:	48 01 c2             	add    %rax,%rdx
   35338:	81 3a 43 41 4d 43    	cmpl   $0x434d4143,(%rdx)
   3533e:	0f 85 e3 01 00 00    	jne    35527 <k0_ippsAES_CMACGetTag+0x227>
   35344:	49 89 fd             	mov    %rdi,%r13
   35347:	48 85 ff             	test   %rdi,%rdi
   3534a:	0f 84 e5 01 00 00    	je     35535 <k0_ippsAES_CMACGetTag+0x235>
   35350:	44 8d 76 ff          	lea    -0x1(%rsi),%r14d
   35354:	41 89 f4             	mov    %esi,%r12d
   35357:	41 83 fe 0f          	cmp    $0xf,%r14d
   3535b:	0f 87 cd 01 00 00    	ja     3552e <k0_ippsAES_CMACGetTag+0x22e>
   35361:	48 8b 4a 30          	mov    0x30(%rdx),%rcx
   35365:	48 8b 42 38          	mov    0x38(%rdx),%rax
   35369:	48 63 7a 04          	movslq 0x4(%rdx),%rdi
   3536d:	4c 8b 4a 60          	mov    0x60(%rdx),%r9
   35371:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   35376:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3537b:	4c 8b 52 40          	mov    0x40(%rdx),%r10
   3537f:	4c 8b 42 48          	mov    0x48(%rdx),%r8
   35383:	83 ff 10             	cmp    $0x10,%edi
   35386:	0f 84 6c 01 00 00    	je     354f8 <k0_ippsAES_CMACGetTag+0x1f8>
   3538c:	be 10 00 00 00       	mov    $0x10,%esi
   35391:	29 fe                	sub    %edi,%esi
   35393:	85 f6                	test   %esi,%esi
   35395:	7e 78                	jle    3540f <k0_ippsAES_CMACGetTag+0x10f>
   35397:	8d 46 ff             	lea    -0x1(%rsi),%eax
   3539a:	83 f8 1e             	cmp    $0x1e,%eax
   3539d:	0f 86 70 01 00 00    	jbe    35513 <k0_ippsAES_CMACGetTag+0x213>
   353a3:	89 f1                	mov    %esi,%ecx
   353a5:	c1 e9 05             	shr    $0x5,%ecx
   353a8:	48 8d 44 3c 20       	lea    0x20(%rsp,%rdi,1),%rax
   353ad:	48 c1 e1 05          	shl    $0x5,%rcx
   353b1:	48 01 c1             	add    %rax,%rcx
   353b4:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   353b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   353bf:	00 
   353c0:	62 f1 7f 28 7f 00    	vmovdqu8 %ymm0,(%rax)
   353c6:	48 83 c0 20          	add    $0x20,%rax
   353ca:	48 39 c8             	cmp    %rcx,%rax
   353cd:	75 f1                	jne    353c0 <k0_ippsAES_CMACGetTag+0xc0>
   353cf:	89 f0                	mov    %esi,%eax
   353d1:	83 e0 e0             	and    $0xffffffe0,%eax
   353d4:	39 c6                	cmp    %eax,%esi
   353d6:	0f 84 3e 01 00 00    	je     3551a <k0_ippsAES_CMACGetTag+0x21a>
   353dc:	c5 f8 77             	vzeroupper 
   353df:	4c 8d 5c 3c 40       	lea    0x40(%rsp,%rdi,1),%r11
   353e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   353eb:	00 00 00 00 
   353ef:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   353f6:	00 00 00 00 
   353fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35400:	48 63 c8             	movslq %eax,%rcx
   35403:	ff c0                	inc    %eax
   35405:	42 c6 44 19 e0 00    	movb   $0x0,-0x20(%rcx,%r11,1)
   3540b:	39 c6                	cmp    %eax,%esi
   3540d:	7f f1                	jg     35400 <k0_ippsAES_CMACGetTag+0x100>
   3540f:	c6 44 3c 20 80       	movb   $0x80,0x20(%rsp,%rdi,1)
   35414:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   35419:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   3541e:	48 33 4a 20          	xor    0x20(%rdx),%rcx
   35422:	48 33 42 28          	xor    0x28(%rdx),%rax
   35426:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   3542b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   35430:	49 31 ca             	xor    %rcx,%r10
   35433:	49 31 c0             	xor    %rax,%r8
   35436:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   3543b:	4c 89 14 24          	mov    %r10,(%rsp)
   3543f:	48 89 e3             	mov    %rsp,%rbx
   35442:	48 8d 8a 80 00 00 00 	lea    0x80(%rdx),%rcx
   35449:	8b 52 5c             	mov    0x5c(%rdx),%edx
   3544c:	45 31 c0             	xor    %r8d,%r8d
   3544f:	48 89 de             	mov    %rbx,%rsi
   35452:	48 89 df             	mov    %rbx,%rdi
   35455:	41 ff d1             	callq  *%r9
   35458:	45 85 e4             	test   %r12d,%r12d
   3545b:	7e 76                	jle    354d3 <k0_ippsAES_CMACGetTag+0x1d3>
   3545d:	41 83 fe 1e          	cmp    $0x1e,%r14d
   35461:	0f 86 a8 00 00 00    	jbe    3550f <k0_ippsAES_CMACGetTag+0x20f>
   35467:	44 89 e2             	mov    %r12d,%edx
   3546a:	c1 ea 05             	shr    $0x5,%edx
   3546d:	48 c1 e2 05          	shl    $0x5,%rdx
   35471:	48 89 de             	mov    %rbx,%rsi
   35474:	4c 89 e8             	mov    %r13,%rax
   35477:	4c 01 ea             	add    %r13,%rdx
   3547a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35480:	62 f1 fd 28 6f 0e    	vmovdqa64 (%rsi),%ymm1
   35486:	48 83 c0 20          	add    $0x20,%rax
   3548a:	62 f1 7f 28 7f 48 ff 	vmovdqu8 %ymm1,-0x20(%rax)
   35491:	48 83 c6 20          	add    $0x20,%rsi
   35495:	48 39 c2             	cmp    %rax,%rdx
   35498:	75 e6                	jne    35480 <k0_ippsAES_CMACGetTag+0x180>
   3549a:	44 89 e0             	mov    %r12d,%eax
   3549d:	83 e0 e0             	and    $0xffffffe0,%eax
   354a0:	44 39 e0             	cmp    %r12d,%eax
   354a3:	74 7d                	je     35522 <k0_ippsAES_CMACGetTag+0x222>
   354a5:	c5 f8 77             	vzeroupper 
   354a8:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   354af:	00 00 00 00 
   354b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   354ba:	00 00 00 00 
   354be:	66 90                	xchg   %ax,%ax
   354c0:	48 63 d0             	movslq %eax,%rdx
   354c3:	0f b6 0c 14          	movzbl (%rsp,%rdx,1),%ecx
   354c7:	ff c0                	inc    %eax
   354c9:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
   354ce:	41 39 c4             	cmp    %eax,%r12d
   354d1:	7f ed                	jg     354c0 <k0_ippsAES_CMACGetTag+0x1c0>
   354d3:	31 c0                	xor    %eax,%eax
   354d5:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   354da:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   354e1:	00 00 
   354e3:	75 57                	jne    3553c <k0_ippsAES_CMACGetTag+0x23c>
   354e5:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
   354e9:	5b                   	pop    %rbx
   354ea:	41 5c                	pop    %r12
   354ec:	41 5d                	pop    %r13
   354ee:	41 5e                	pop    %r14
   354f0:	5d                   	pop    %rbp
   354f1:	c3                   	retq   
   354f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   354f8:	48 33 4a 10          	xor    0x10(%rdx),%rcx
   354fc:	48 33 42 18          	xor    0x18(%rdx),%rax
   35500:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   35505:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3550a:	e9 21 ff ff ff       	jmpq   35430 <k0_ippsAES_CMACGetTag+0x130>
   3550f:	31 c0                	xor    %eax,%eax
   35511:	eb ad                	jmp    354c0 <k0_ippsAES_CMACGetTag+0x1c0>
   35513:	31 c0                	xor    %eax,%eax
   35515:	e9 c5 fe ff ff       	jmpq   353df <k0_ippsAES_CMACGetTag+0xdf>
   3551a:	c5 f8 77             	vzeroupper 
   3551d:	e9 ed fe ff ff       	jmpq   3540f <k0_ippsAES_CMACGetTag+0x10f>
   35522:	c5 f8 77             	vzeroupper 
   35525:	eb ac                	jmp    354d3 <k0_ippsAES_CMACGetTag+0x1d3>
   35527:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   3552c:	eb a7                	jmp    354d5 <k0_ippsAES_CMACGetTag+0x1d5>
   3552e:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   35533:	eb a0                	jmp    354d5 <k0_ippsAES_CMACGetTag+0x1d5>
   35535:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   3553a:	eb 99                	jmp    354d5 <k0_ippsAES_CMACGetTag+0x1d5>
   3553c:	e8 4b 5f fd ff       	callq  b48c <__stack_chk_fail>
   35541:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35548:	00 00 00 
   3554b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35552:	00 00 00 
   35555:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3555c:	00 00 00 
   3555f:	90                   	nop

0000000000035560 <k0_ippsAES_CMACInit>:
   35560:	48 85 d2             	test   %rdx,%rdx
   35563:	0f 84 a3 02 00 00    	je     3580c <k0_ippsAES_CMACInit+0x2ac>
   35569:	81 f9 9e 02 00 00    	cmp    $0x29e,%ecx
   3556f:	0f 8e 91 02 00 00    	jle    35806 <k0_ippsAES_CMACInit+0x2a6>
   35575:	41 57                	push   %r15
   35577:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   3557b:	b9 48 02 00 00       	mov    $0x248,%ecx
   35580:	41 56                	push   %r14
   35582:	41 55                	push   %r13
   35584:	41 54                	push   %r12
   35586:	55                   	push   %rbp
   35587:	53                   	push   %rbx
   35588:	48 89 d3             	mov    %rdx,%rbx
   3558b:	48 f7 db             	neg    %rbx
   3558e:	83 e3 0f             	and    $0xf,%ebx
   35591:	48 01 d3             	add    %rdx,%rbx
   35594:	48 83 ec 18          	sub    $0x18,%rsp
   35598:	48 c7 03 43 41 4d 43 	movq   $0x434d4143,(%rbx)
   3559f:	c5 f8 11 43 40       	vmovups %xmm0,0x40(%rbx)
   355a4:	48 8d 53 50          	lea    0x50(%rbx),%rdx
   355a8:	48 8d 6b 40          	lea    0x40(%rbx),%rbp
   355ac:	e8 6f 06 00 00       	callq  35c20 <k0_ippsAESInit>
   355b1:	85 c0                	test   %eax,%eax
   355b3:	0f 85 3e 02 00 00    	jne    357f7 <k0_ippsAES_CMACInit+0x297>
   355b9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   355bd:	8b 53 5c             	mov    0x5c(%rbx),%edx
   355c0:	45 31 c0             	xor    %r8d,%r8d
   355c3:	48 89 ef             	mov    %rbp,%rdi
   355c6:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   355cd:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   355d1:	ff 53 60             	callq  *0x60(%rbx)
   355d4:	0f b6 53 1f          	movzbl 0x1f(%rbx),%edx
   355d8:	0f b6 4b 1e          	movzbl 0x1e(%rbx),%ecx
   355dc:	01 d2                	add    %edx,%edx
   355de:	88 53 1f             	mov    %dl,0x1f(%rbx)
   355e1:	c1 ea 08             	shr    $0x8,%edx
   355e4:	44 8d 34 4a          	lea    (%rdx,%rcx,2),%r14d
   355e8:	44 89 f2             	mov    %r14d,%edx
   355eb:	0f b6 4b 1d          	movzbl 0x1d(%rbx),%ecx
   355ef:	c1 ea 08             	shr    $0x8,%edx
   355f2:	44 8d 2c 4a          	lea    (%rdx,%rcx,2),%r13d
   355f6:	44 89 ea             	mov    %r13d,%edx
   355f9:	0f b6 4b 1c          	movzbl 0x1c(%rbx),%ecx
   355fd:	c1 ea 08             	shr    $0x8,%edx
   35600:	44 8d 24 4a          	lea    (%rdx,%rcx,2),%r12d
   35604:	44 89 e2             	mov    %r12d,%edx
   35607:	0f b6 4b 1b          	movzbl 0x1b(%rbx),%ecx
   3560b:	c1 ea 08             	shr    $0x8,%edx
   3560e:	8d 2c 4a             	lea    (%rdx,%rcx,2),%ebp
   35611:	89 ea                	mov    %ebp,%edx
   35613:	0f b6 4b 1a          	movzbl 0x1a(%rbx),%ecx
   35617:	c1 ea 08             	shr    $0x8,%edx
   3561a:	44 8d 1c 4a          	lea    (%rdx,%rcx,2),%r11d
   3561e:	44 89 da             	mov    %r11d,%edx
   35621:	0f b6 4b 19          	movzbl 0x19(%rbx),%ecx
   35625:	c1 ea 08             	shr    $0x8,%edx
   35628:	44 8d 14 4a          	lea    (%rdx,%rcx,2),%r10d
   3562c:	44 89 d2             	mov    %r10d,%edx
   3562f:	0f b6 4b 18          	movzbl 0x18(%rbx),%ecx
   35633:	c1 ea 08             	shr    $0x8,%edx
   35636:	44 8d 0c 4a          	lea    (%rdx,%rcx,2),%r9d
   3563a:	44 89 ca             	mov    %r9d,%edx
   3563d:	0f b6 4b 17          	movzbl 0x17(%rbx),%ecx
   35641:	c1 ea 08             	shr    $0x8,%edx
   35644:	44 8d 04 4a          	lea    (%rdx,%rcx,2),%r8d
   35648:	44 89 c2             	mov    %r8d,%edx
   3564b:	0f b6 4b 16          	movzbl 0x16(%rbx),%ecx
   3564f:	c1 ea 08             	shr    $0x8,%edx
   35652:	8d 3c 4a             	lea    (%rdx,%rcx,2),%edi
   35655:	89 fa                	mov    %edi,%edx
   35657:	0f b6 4b 15          	movzbl 0x15(%rbx),%ecx
   3565b:	c1 ea 08             	shr    $0x8,%edx
   3565e:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
   35661:	89 c2                	mov    %eax,%edx
   35663:	0f b6 4b 14          	movzbl 0x14(%rbx),%ecx
   35667:	c1 ea 08             	shr    $0x8,%edx
   3566a:	8d 34 4a             	lea    (%rdx,%rcx,2),%esi
   3566d:	89 f2                	mov    %esi,%edx
   3566f:	0f b6 4b 13          	movzbl 0x13(%rbx),%ecx
   35673:	c1 ea 08             	shr    $0x8,%edx
   35676:	8d 0c 4a             	lea    (%rdx,%rcx,2),%ecx
   35679:	88 4b 13             	mov    %cl,0x13(%rbx)
   3567c:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   35680:	89 ca                	mov    %ecx,%edx
   35682:	0f b6 4b 12          	movzbl 0x12(%rbx),%ecx
   35686:	c1 ea 08             	shr    $0x8,%edx
   35689:	40 88 73 14          	mov    %sil,0x14(%rbx)
   3568d:	89 74 24 04          	mov    %esi,0x4(%rsp)
   35691:	8d 34 4a             	lea    (%rdx,%rcx,2),%esi
   35694:	89 f2                	mov    %esi,%edx
   35696:	0f b6 4b 11          	movzbl 0x11(%rbx),%ecx
   3569a:	c1 ea 08             	shr    $0x8,%edx
   3569d:	8d 0c 4a             	lea    (%rdx,%rcx,2),%ecx
   356a0:	44 0f b6 7b 10       	movzbl 0x10(%rbx),%r15d
   356a5:	89 ca                	mov    %ecx,%edx
   356a7:	c1 ea 08             	shr    $0x8,%edx
   356aa:	42 8d 14 7a          	lea    (%rdx,%r15,2),%edx
   356ae:	41 c1 ff 07          	sar    $0x7,%r15d
   356b2:	41 f7 df             	neg    %r15d
   356b5:	41 83 e7 87          	and    $0xffffff87,%r15d
   356b9:	44 88 73 1e          	mov    %r14b,0x1e(%rbx)
   356bd:	44 88 6b 1d          	mov    %r13b,0x1d(%rbx)
   356c1:	44 88 63 1c          	mov    %r12b,0x1c(%rbx)
   356c5:	40 88 6b 1b          	mov    %bpl,0x1b(%rbx)
   356c9:	44 88 5b 1a          	mov    %r11b,0x1a(%rbx)
   356cd:	44 88 53 19          	mov    %r10b,0x19(%rbx)
   356d1:	44 88 4b 18          	mov    %r9b,0x18(%rbx)
   356d5:	44 88 43 17          	mov    %r8b,0x17(%rbx)
   356d9:	40 88 7b 16          	mov    %dil,0x16(%rbx)
   356dd:	88 43 15             	mov    %al,0x15(%rbx)
   356e0:	40 88 73 12          	mov    %sil,0x12(%rbx)
   356e4:	88 4b 11             	mov    %cl,0x11(%rbx)
   356e7:	44 30 7b 1f          	xor    %r15b,0x1f(%rbx)
   356eb:	45 0f b6 f6          	movzbl %r14b,%r14d
   356ef:	45 0f b6 ed          	movzbl %r13b,%r13d
   356f3:	45 0f b6 e4          	movzbl %r12b,%r12d
   356f7:	44 0f b6 7b 1f       	movzbl 0x1f(%rbx),%r15d
   356fc:	40 0f b6 ed          	movzbl %bpl,%ebp
   35700:	45 01 ff             	add    %r15d,%r15d
   35703:	44 88 7b 2f          	mov    %r15b,0x2f(%rbx)
   35707:	41 c1 ef 08          	shr    $0x8,%r15d
   3570b:	47 8d 34 77          	lea    (%r15,%r14,2),%r14d
   3570f:	44 88 73 2e          	mov    %r14b,0x2e(%rbx)
   35713:	41 c1 ee 08          	shr    $0x8,%r14d
   35717:	47 8d 2c 6e          	lea    (%r14,%r13,2),%r13d
   3571b:	44 88 6b 2d          	mov    %r13b,0x2d(%rbx)
   3571f:	41 c1 ed 08          	shr    $0x8,%r13d
   35723:	47 8d 64 65 00       	lea    0x0(%r13,%r12,2),%r12d
   35728:	44 88 63 2c          	mov    %r12b,0x2c(%rbx)
   3572c:	41 c1 ec 08          	shr    $0x8,%r12d
   35730:	41 8d 2c 6c          	lea    (%r12,%rbp,2),%ebp
   35734:	40 88 6b 2b          	mov    %bpl,0x2b(%rbx)
   35738:	45 0f b6 db          	movzbl %r11b,%r11d
   3573c:	c1 ed 08             	shr    $0x8,%ebp
   3573f:	46 8d 5c 5d 00       	lea    0x0(%rbp,%r11,2),%r11d
   35744:	44 88 5b 2a          	mov    %r11b,0x2a(%rbx)
   35748:	45 0f b6 d2          	movzbl %r10b,%r10d
   3574c:	41 c1 eb 08          	shr    $0x8,%r11d
   35750:	47 8d 14 53          	lea    (%r11,%r10,2),%r10d
   35754:	44 88 53 29          	mov    %r10b,0x29(%rbx)
   35758:	45 0f b6 c9          	movzbl %r9b,%r9d
   3575c:	41 c1 ea 08          	shr    $0x8,%r10d
   35760:	47 8d 0c 4a          	lea    (%r10,%r9,2),%r9d
   35764:	44 88 4b 28          	mov    %r9b,0x28(%rbx)
   35768:	45 0f b6 c0          	movzbl %r8b,%r8d
   3576c:	41 c1 e9 08          	shr    $0x8,%r9d
   35770:	47 8d 04 41          	lea    (%r9,%r8,2),%r8d
   35774:	44 88 43 27          	mov    %r8b,0x27(%rbx)
   35778:	40 0f b6 ff          	movzbl %dil,%edi
   3577c:	41 c1 e8 08          	shr    $0x8,%r8d
   35780:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   35784:	40 88 7b 26          	mov    %dil,0x26(%rbx)
   35788:	c1 ef 08             	shr    $0x8,%edi
   3578b:	41 89 f8             	mov    %edi,%r8d
   3578e:	0f b6 f8             	movzbl %al,%edi
   35791:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   35795:	40 88 7b 25          	mov    %dil,0x25(%rbx)
   35799:	c1 ef 08             	shr    $0x8,%edi
   3579c:	41 89 f8             	mov    %edi,%r8d
   3579f:	0f b6 7c 24 04       	movzbl 0x4(%rsp),%edi
   357a4:	40 0f b6 f6          	movzbl %sil,%esi
   357a8:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   357ac:	40 88 7b 24          	mov    %dil,0x24(%rbx)
   357b0:	c1 ef 08             	shr    $0x8,%edi
   357b3:	41 89 f8             	mov    %edi,%r8d
   357b6:	0f b6 7c 24 08       	movzbl 0x8(%rsp),%edi
   357bb:	0f b6 c9             	movzbl %cl,%ecx
   357be:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   357c2:	40 88 7b 23          	mov    %dil,0x23(%rbx)
   357c6:	c1 ef 08             	shr    $0x8,%edi
   357c9:	8d 34 77             	lea    (%rdi,%rsi,2),%esi
   357cc:	40 88 73 22          	mov    %sil,0x22(%rbx)
   357d0:	c1 ee 08             	shr    $0x8,%esi
   357d3:	8d 0c 4e             	lea    (%rsi,%rcx,2),%ecx
   357d6:	88 53 10             	mov    %dl,0x10(%rbx)
   357d9:	88 4b 21             	mov    %cl,0x21(%rbx)
   357dc:	0f b6 d2             	movzbl %dl,%edx
   357df:	c1 e9 08             	shr    $0x8,%ecx
   357e2:	8d 0c 51             	lea    (%rcx,%rdx,2),%ecx
   357e5:	c1 fa 07             	sar    $0x7,%edx
   357e8:	f7 da                	neg    %edx
   357ea:	83 e2 87             	and    $0xffffff87,%edx
   357ed:	30 53 2f             	xor    %dl,0x2f(%rbx)
   357f0:	88 4b 20             	mov    %cl,0x20(%rbx)
   357f3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   357f7:	48 83 c4 18          	add    $0x18,%rsp
   357fb:	5b                   	pop    %rbx
   357fc:	5d                   	pop    %rbp
   357fd:	41 5c                	pop    %r12
   357ff:	41 5d                	pop    %r13
   35801:	41 5e                	pop    %r14
   35803:	41 5f                	pop    %r15
   35805:	c3                   	retq   
   35806:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   3580b:	c3                   	retq   
   3580c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   35811:	c3                   	retq   
   35812:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35819:	00 00 00 
   3581c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000035820 <k0_ippsAES_CMACUpdate>:
   35820:	48 85 d2             	test   %rdx,%rdx
   35823:	0f 84 d1 03 00 00    	je     35bfa <k0_ippsAES_CMACUpdate+0x3da>
   35829:	55                   	push   %rbp
   3582a:	48 89 e5             	mov    %rsp,%rbp
   3582d:	41 57                	push   %r15
   3582f:	41 56                	push   %r14
   35831:	41 55                	push   %r13
   35833:	41 54                	push   %r12
   35835:	53                   	push   %rbx
   35836:	48 89 d3             	mov    %rdx,%rbx
   35839:	48 f7 db             	neg    %rbx
   3583c:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   35840:	83 e3 0f             	and    $0xf,%ebx
   35843:	48 83 ec 20          	sub    $0x20,%rsp
   35847:	48 01 d3             	add    %rdx,%rbx
   3584a:	81 3b 43 41 4d 43    	cmpl   $0x434d4143,(%rbx)
   35850:	0f 85 9a 03 00 00    	jne    35bf0 <k0_ippsAES_CMACUpdate+0x3d0>
   35856:	49 89 fd             	mov    %rdi,%r13
   35859:	41 89 f6             	mov    %esi,%r14d
   3585c:	85 f6                	test   %esi,%esi
   3585e:	79 09                	jns    35869 <k0_ippsAES_CMACUpdate+0x49>
   35860:	48 85 ff             	test   %rdi,%rdi
   35863:	0f 85 73 03 00 00    	jne    35bdc <k0_ippsAES_CMACUpdate+0x3bc>
   35869:	45 85 f6             	test   %r14d,%r14d
   3586c:	74 09                	je     35877 <k0_ippsAES_CMACUpdate+0x57>
   3586e:	4d 85 ed             	test   %r13,%r13
   35871:	0f 84 6f 03 00 00    	je     35be6 <k0_ippsAES_CMACUpdate+0x3c6>
   35877:	45 85 f6             	test   %r14d,%r14d
   3587a:	0f 84 00 02 00 00    	je     35a80 <k0_ippsAES_CMACUpdate+0x260>
   35880:	8b 53 04             	mov    0x4(%rbx),%edx
   35883:	85 d2                	test   %edx,%edx
   35885:	0f 84 e8 00 00 00    	je     35973 <k0_ippsAES_CMACUpdate+0x153>
   3588b:	b9 10 00 00 00       	mov    $0x10,%ecx
   35890:	29 d1                	sub    %edx,%ecx
   35892:	44 39 f1             	cmp    %r14d,%ecx
   35895:	41 0f 4f ce          	cmovg  %r14d,%ecx
   35899:	4c 8d 53 30          	lea    0x30(%rbx),%r10
   3589d:	4c 63 c2             	movslq %edx,%r8
   358a0:	85 c9                	test   %ecx,%ecx
   358a2:	0f 8e ae 00 00 00    	jle    35956 <k0_ippsAES_CMACUpdate+0x136>
   358a8:	4a 8d 74 03 50       	lea    0x50(%rbx,%r8,1),%rsi
   358ad:	49 39 f5             	cmp    %rsi,%r13
   358b0:	4a 8d 7c 03 30       	lea    0x30(%rbx,%r8,1),%rdi
   358b5:	49 8d 75 20          	lea    0x20(%r13),%rsi
   358b9:	41 0f 93 c3          	setae  %r11b
   358bd:	48 39 f7             	cmp    %rsi,%rdi
   358c0:	40 0f 93 c6          	setae  %sil
   358c4:	41 08 f3             	or     %sil,%r11b
   358c7:	8d 51 ff             	lea    -0x1(%rcx),%edx
   358ca:	0f 84 b0 02 00 00    	je     35b80 <k0_ippsAES_CMACUpdate+0x360>
   358d0:	83 fa 1e             	cmp    $0x1e,%edx
   358d3:	0f 86 a7 02 00 00    	jbe    35b80 <k0_ippsAES_CMACUpdate+0x360>
   358d9:	89 ce                	mov    %ecx,%esi
   358db:	c1 ee 05             	shr    $0x5,%esi
   358de:	48 c1 e6 05          	shl    $0x5,%rsi
   358e2:	31 d2                	xor    %edx,%edx
   358e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   358eb:	00 00 00 00 
   358ef:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   358f6:	00 00 00 00 
   358fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35900:	62 d1 7f 28 6f 54 15 	vmovdqu8 0x0(%r13,%rdx,1),%ymm2
   35907:	00 
   35908:	62 f1 7f 28 7f 14 17 	vmovdqu8 %ymm2,(%rdi,%rdx,1)
   3590f:	48 83 c2 20          	add    $0x20,%rdx
   35913:	48 39 f2             	cmp    %rsi,%rdx
   35916:	75 e8                	jne    35900 <k0_ippsAES_CMACUpdate+0xe0>
   35918:	89 ca                	mov    %ecx,%edx
   3591a:	83 e2 e0             	and    $0xffffffe0,%edx
   3591d:	39 d1                	cmp    %edx,%ecx
   3591f:	74 32                	je     35953 <k0_ippsAES_CMACUpdate+0x133>
   35921:	4d 01 d0             	add    %r10,%r8
   35924:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3592b:	00 00 00 00 
   3592f:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35936:	00 00 00 00 
   3593a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35940:	48 63 f2             	movslq %edx,%rsi
   35943:	41 0f b6 7c 35 00    	movzbl 0x0(%r13,%rsi,1),%edi
   35949:	ff c2                	inc    %edx
   3594b:	41 88 3c 30          	mov    %dil,(%r8,%rsi,1)
   3594f:	39 d1                	cmp    %edx,%ecx
   35951:	7f ed                	jg     35940 <k0_ippsAES_CMACUpdate+0x120>
   35953:	8b 53 04             	mov    0x4(%rbx),%edx
   35956:	01 ca                	add    %ecx,%edx
   35958:	48 63 f1             	movslq %ecx,%rsi
   3595b:	89 53 04             	mov    %edx,0x4(%rbx)
   3595e:	49 01 f5             	add    %rsi,%r13
   35961:	41 29 ce             	sub    %ecx,%r14d
   35964:	0f 84 06 02 00 00    	je     35b70 <k0_ippsAES_CMACUpdate+0x350>
   3596a:	83 fa 10             	cmp    $0x10,%edx
   3596d:	0f 84 bd 01 00 00    	je     35b30 <k0_ippsAES_CMACUpdate+0x310>
   35973:	45 89 f7             	mov    %r14d,%r15d
   35976:	41 83 e7 f0          	and    $0xfffffff0,%r15d
   3597a:	41 8d 57 f0          	lea    -0x10(%r15),%edx
   3597e:	41 f6 c6 0f          	test   $0xf,%r14b
   35982:	44 0f 44 fa          	cmove  %edx,%r15d
   35986:	45 85 ff             	test   %r15d,%r15d
   35989:	0f 85 09 01 00 00    	jne    35a98 <k0_ippsAES_CMACUpdate+0x278>
   3598f:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   35993:	45 85 f6             	test   %r14d,%r14d
   35996:	0f 8e 98 00 00 00    	jle    35a34 <k0_ippsAES_CMACUpdate+0x214>
   3599c:	49 8d 4d 20          	lea    0x20(%r13),%rcx
   359a0:	48 39 cf             	cmp    %rcx,%rdi
   359a3:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   359a7:	40 0f 93 c6          	setae  %sil
   359ab:	49 39 cd             	cmp    %rcx,%r13
   359ae:	0f 93 c1             	setae  %cl
   359b1:	40 08 ce             	or     %cl,%sil
   359b4:	41 8d 56 ff          	lea    -0x1(%r14),%edx
   359b8:	0f 84 f2 01 00 00    	je     35bb0 <k0_ippsAES_CMACUpdate+0x390>
   359be:	83 fa 1e             	cmp    $0x1e,%edx
   359c1:	0f 86 e9 01 00 00    	jbe    35bb0 <k0_ippsAES_CMACUpdate+0x390>
   359c7:	44 89 f1             	mov    %r14d,%ecx
   359ca:	c1 e9 05             	shr    $0x5,%ecx
   359cd:	48 c1 e1 05          	shl    $0x5,%rcx
   359d1:	31 d2                	xor    %edx,%edx
   359d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   359da:	00 00 00 00 
   359de:	66 90                	xchg   %ax,%ax
   359e0:	62 d1 7f 28 6f 5c 15 	vmovdqu8 0x0(%r13,%rdx,1),%ymm3
   359e7:	00 
   359e8:	62 f1 7f 28 7f 9c 13 	vmovdqu8 %ymm3,0x30(%rbx,%rdx,1)
   359ef:	30 00 00 00 
   359f3:	48 83 c2 20          	add    $0x20,%rdx
   359f7:	48 39 ca             	cmp    %rcx,%rdx
   359fa:	75 e4                	jne    359e0 <k0_ippsAES_CMACUpdate+0x1c0>
   359fc:	44 89 f2             	mov    %r14d,%edx
   359ff:	83 e2 e0             	and    $0xffffffe0,%edx
   35a02:	44 39 f2             	cmp    %r14d,%edx
   35a05:	74 2d                	je     35a34 <k0_ippsAES_CMACUpdate+0x214>
   35a07:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35a0e:	00 00 00 00 
   35a12:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35a19:	00 00 00 00 
   35a1d:	0f 1f 00             	nopl   (%rax)
   35a20:	48 63 ca             	movslq %edx,%rcx
   35a23:	41 0f b6 74 0d 00    	movzbl 0x0(%r13,%rcx,1),%esi
   35a29:	ff c2                	inc    %edx
   35a2b:	40 88 34 0f          	mov    %sil,(%rdi,%rcx,1)
   35a2f:	44 39 f2             	cmp    %r14d,%edx
   35a32:	7c ec                	jl     35a20 <k0_ippsAES_CMACUpdate+0x200>
   35a34:	44 01 73 04          	add    %r14d,0x4(%rbx)
   35a38:	31 c0                	xor    %eax,%eax
   35a3a:	c5 f8 77             	vzeroupper 
   35a3d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   35a41:	5b                   	pop    %rbx
   35a42:	41 5c                	pop    %r12
   35a44:	41 5d                	pop    %r13
   35a46:	41 5e                	pop    %r14
   35a48:	41 5f                	pop    %r15
   35a4a:	5d                   	pop    %rbp
   35a4b:	c3                   	retq   
   35a4c:	0f 1f 40 00          	nopl   0x0(%rax)
   35a50:	89 d1                	mov    %edx,%ecx
   35a52:	49 89 c0             	mov    %rax,%r8
   35a55:	44 89 fa             	mov    %r15d,%edx
   35a58:	4c 89 ee             	mov    %r13,%rsi
   35a5b:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   35a5f:	c5 f8 77             	vzeroupper 
   35a62:	e8 99 24 00 00       	callq  37f00 <k0_cpAESCMAC_Update_AES_NI>
   35a67:	45 29 fe             	sub    %r15d,%r14d
   35a6a:	0f 85 90 01 00 00    	jne    35c00 <k0_ippsAES_CMACUpdate+0x3e0>
   35a70:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35a77:	00 00 00 00 
   35a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   35a80:	31 c0                	xor    %eax,%eax
   35a82:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   35a86:	5b                   	pop    %rbx
   35a87:	41 5c                	pop    %r12
   35a89:	41 5d                	pop    %r13
   35a8b:	41 5e                	pop    %r14
   35a8d:	41 5f                	pop    %r15
   35a8f:	5d                   	pop    %rbp
   35a90:	c3                   	retq   
   35a91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35a98:	48 8d 43 40          	lea    0x40(%rbx),%rax
   35a9c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   35aa1:	81 bb 80 02 00 00 00 	cmpl   $0x400,0x280(%rbx)
   35aa8:	04 00 00 
   35aab:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   35ab2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   35ab7:	8b 53 5c             	mov    0x5c(%rbx),%edx
   35aba:	74 94                	je     35a50 <k0_ippsAES_CMACUpdate+0x230>
   35abc:	48 8b 43 60          	mov    0x60(%rbx),%rax
   35ac0:	4d 89 ec             	mov    %r13,%r12
   35ac3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   35ac8:	43 8d 04 2f          	lea    (%r15,%r13,1),%eax
   35acc:	89 44 24 04          	mov    %eax,0x4(%rsp)
   35ad0:	c5 f8 77             	vzeroupper 
   35ad3:	eb 06                	jmp    35adb <k0_ippsAES_CMACUpdate+0x2bb>
   35ad5:	0f 1f 00             	nopl   (%rax)
   35ad8:	8b 53 5c             	mov    0x5c(%rbx),%edx
   35adb:	41 8b 0c 24          	mov    (%r12),%ecx
   35adf:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   35ae4:	31 4b 40             	xor    %ecx,0x40(%rbx)
   35ae7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   35aec:	45 31 c0             	xor    %r8d,%r8d
   35aef:	48 89 fe             	mov    %rdi,%rsi
   35af2:	41 8b 4c 24 04       	mov    0x4(%r12),%ecx
   35af7:	49 83 c4 10          	add    $0x10,%r12
   35afb:	31 4b 44             	xor    %ecx,0x44(%rbx)
   35afe:	41 8b 4c 24 f8       	mov    -0x8(%r12),%ecx
   35b03:	31 4b 48             	xor    %ecx,0x48(%rbx)
   35b06:	41 8b 4c 24 fc       	mov    -0x4(%r12),%ecx
   35b0b:	31 4b 4c             	xor    %ecx,0x4c(%rbx)
   35b0e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   35b13:	ff d0                	callq  *%rax
   35b15:	44 39 64 24 04       	cmp    %r12d,0x4(%rsp)
   35b1a:	75 bc                	jne    35ad8 <k0_ippsAES_CMACUpdate+0x2b8>
   35b1c:	45 29 fe             	sub    %r15d,%r14d
   35b1f:	0f 84 5b ff ff ff    	je     35a80 <k0_ippsAES_CMACUpdate+0x260>
   35b25:	e9 d6 00 00 00       	jmpq   35c00 <k0_ippsAES_CMACUpdate+0x3e0>
   35b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35b30:	62 f1 fe 08 6f 4b 04 	vmovdqu64 0x40(%rbx),%xmm1
   35b37:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   35b3b:	c5 f1 ef 43 30       	vpxor  0x30(%rbx),%xmm1,%xmm0
   35b40:	8b 53 5c             	mov    0x5c(%rbx),%edx
   35b43:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   35b4a:	45 31 c0             	xor    %r8d,%r8d
   35b4d:	48 89 fe             	mov    %rdi,%rsi
   35b50:	c5 f8 11 43 40       	vmovups %xmm0,0x40(%rbx)
   35b55:	c5 f8 77             	vzeroupper 
   35b58:	ff 53 60             	callq  *0x60(%rbx)
   35b5b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
   35b62:	e9 0c fe ff ff       	jmpq   35973 <k0_ippsAES_CMACUpdate+0x153>
   35b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   35b6e:	00 00 
   35b70:	c5 f8 77             	vzeroupper 
   35b73:	e9 08 ff ff ff       	jmpq   35a80 <k0_ippsAES_CMACUpdate+0x260>
   35b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   35b7f:	00 
   35b80:	89 d6                	mov    %edx,%esi
   35b82:	49 01 d8             	add    %rbx,%r8
   35b85:	31 d2                	xor    %edx,%edx
   35b87:	eb 0a                	jmp    35b93 <k0_ippsAES_CMACUpdate+0x373>
   35b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35b90:	48 89 fa             	mov    %rdi,%rdx
   35b93:	41 0f b6 7c 15 00    	movzbl 0x0(%r13,%rdx,1),%edi
   35b99:	41 88 7c 10 30       	mov    %dil,0x30(%r8,%rdx,1)
   35b9e:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   35ba2:	48 39 f2             	cmp    %rsi,%rdx
   35ba5:	75 e9                	jne    35b90 <k0_ippsAES_CMACUpdate+0x370>
   35ba7:	e9 a7 fd ff ff       	jmpq   35953 <k0_ippsAES_CMACUpdate+0x133>
   35bac:	0f 1f 40 00          	nopl   0x0(%rax)
   35bb0:	89 d1                	mov    %edx,%ecx
   35bb2:	31 d2                	xor    %edx,%edx
   35bb4:	eb 0d                	jmp    35bc3 <k0_ippsAES_CMACUpdate+0x3a3>
   35bb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35bbd:	00 00 00 
   35bc0:	48 89 f2             	mov    %rsi,%rdx
   35bc3:	41 0f b6 74 15 00    	movzbl 0x0(%r13,%rdx,1),%esi
   35bc9:	40 88 74 13 30       	mov    %sil,0x30(%rbx,%rdx,1)
   35bce:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   35bd2:	48 39 d1             	cmp    %rdx,%rcx
   35bd5:	75 e9                	jne    35bc0 <k0_ippsAES_CMACUpdate+0x3a0>
   35bd7:	e9 58 fe ff ff       	jmpq   35a34 <k0_ippsAES_CMACUpdate+0x214>
   35bdc:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   35be1:	e9 9c fe ff ff       	jmpq   35a82 <k0_ippsAES_CMACUpdate+0x262>
   35be6:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   35beb:	e9 92 fe ff ff       	jmpq   35a82 <k0_ippsAES_CMACUpdate+0x262>
   35bf0:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   35bf5:	e9 88 fe ff ff       	jmpq   35a82 <k0_ippsAES_CMACUpdate+0x262>
   35bfa:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   35bff:	c3                   	retq   
   35c00:	4d 63 df             	movslq %r15d,%r11
   35c03:	4d 01 dd             	add    %r11,%r13
   35c06:	e9 84 fd ff ff       	jmpq   3598f <k0_ippsAES_CMACUpdate+0x16f>
   35c0b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35c12:	00 00 00 
   35c15:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35c1c:	00 00 00 
   35c1f:	90                   	nop

0000000000035c20 <k0_ippsAESInit>:
   35c20:	55                   	push   %rbp
   35c21:	48 89 e5             	mov    %rsp,%rbp
   35c24:	41 57                	push   %r15
   35c26:	41 56                	push   %r14
   35c28:	41 55                	push   %r13
   35c2a:	41 54                	push   %r12
   35c2c:	41 52                	push   %r10
   35c2e:	53                   	push   %rbx
   35c2f:	48 89 d3             	mov    %rdx,%rbx
   35c32:	48 f7 db             	neg    %rbx
   35c35:	48 83 ec 40          	sub    $0x40,%rsp
   35c39:	83 e3 0f             	and    $0xf,%ebx
   35c3c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35c43:	00 00 
   35c45:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   35c49:	31 c0                	xor    %eax,%eax
   35c4b:	48 01 d3             	add    %rdx,%rbx
   35c4e:	48 85 d2             	test   %rdx,%rdx
   35c51:	0f 84 34 02 00 00    	je     35e8b <k0_ippsAESInit+0x26b>
   35c57:	89 f0                	mov    %esi,%eax
   35c59:	83 e0 f7             	and    $0xfffffff7,%eax
   35c5c:	49 89 fe             	mov    %rdi,%r14
   35c5f:	83 f8 10             	cmp    $0x10,%eax
   35c62:	74 09                	je     35c6d <k0_ippsAESInit+0x4d>
   35c64:	83 fe 20             	cmp    $0x20,%esi
   35c67:	0f 85 10 02 00 00    	jne    35e7d <k0_ippsAESInit+0x25d>
   35c6d:	48 63 c9             	movslq %ecx,%rcx
   35c70:	48 8d bb 38 02 00 00 	lea    0x238(%rbx),%rdi
   35c77:	48 01 ca             	add    %rcx,%rdx
   35c7a:	48 39 d7             	cmp    %rdx,%rdi
   35c7d:	0f 87 01 02 00 00    	ja     35e84 <k0_ippsAESInit+0x264>
   35c83:	c1 e6 03             	shl    $0x3,%esi
   35c86:	8d 46 1f             	lea    0x1f(%rsi),%eax
   35c89:	0f 48 f0             	cmovs  %eax,%esi
   35c8c:	48 8d 15 0d 90 00 00 	lea    0x900d(%rip),%rdx        # 3eca0 <rij128nKeys>
   35c93:	c1 fe 05             	sar    $0x5,%esi
   35c96:	8d 46 fc             	lea    -0x4(%rsi),%eax
   35c99:	d1 f8                	sar    %eax
   35c9b:	48 98                	cltq   
   35c9d:	8b 0c 82             	mov    (%rdx,%rax,4),%ecx
   35ca0:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   35ca4:	48 8d 15 05 90 00 00 	lea    0x9005(%rip),%rdx        # 3ecb0 <rij128nRounds>
   35cab:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
   35cae:	44 8b 24 82          	mov    (%rdx,%rax,4),%r12d
   35cb2:	c5 f8 29 45 a0       	vmovaps %xmm0,-0x60(%rbp)
   35cb7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   35cbb:	c5 f8 29 45 b0       	vmovaps %xmm0,-0x50(%rbp)
   35cc0:	4d 85 f6             	test   %r14,%r14
   35cc3:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
   35cc7:	4c 0f 44 f0          	cmove  %rax,%r14
   35ccb:	62 f1 7f 28 7f 03    	vmovdqu8 %ymm0,(%rbx)
   35cd1:	62 f1 7f 28 7f 43 01 	vmovdqu8 %ymm0,0x20(%rbx)
   35cd8:	62 f1 7f 28 7f 43 02 	vmovdqu8 %ymm0,0x40(%rbx)
   35cdf:	62 f1 7f 28 7f 43 03 	vmovdqu8 %ymm0,0x60(%rbx)
   35ce6:	62 f1 7f 28 7f 43 04 	vmovdqu8 %ymm0,0x80(%rbx)
   35ced:	62 f1 7f 28 7f 43 05 	vmovdqu8 %ymm0,0xa0(%rbx)
   35cf4:	62 f1 7f 28 7f 43 06 	vmovdqu8 %ymm0,0xc0(%rbx)
   35cfb:	62 f1 7f 28 7f 43 07 	vmovdqu8 %ymm0,0xe0(%rbx)
   35d02:	62 f1 7f 28 7f 43 08 	vmovdqu8 %ymm0,0x100(%rbx)
   35d09:	62 f1 7f 28 7f 43 09 	vmovdqu8 %ymm0,0x120(%rbx)
   35d10:	62 f1 7f 28 7f 43 0a 	vmovdqu8 %ymm0,0x140(%rbx)
   35d17:	62 f1 7f 28 7f 43 0b 	vmovdqu8 %ymm0,0x160(%rbx)
   35d1e:	62 f1 7f 28 7f 43 0c 	vmovdqu8 %ymm0,0x180(%rbx)
   35d25:	62 f1 7f 28 7f 43 0d 	vmovdqu8 %ymm0,0x1a0(%rbx)
   35d2c:	62 f1 7f 28 7f 43 0e 	vmovdqu8 %ymm0,0x1c0(%rbx)
   35d33:	62 f1 7f 28 7f 43 0f 	vmovdqu8 %ymm0,0x1e0(%rbx)
   35d3a:	62 f1 7f 28 7f 43 10 	vmovdqu8 %ymm0,0x200(%rbx)
   35d41:	48 8d 83 20 02 00 00 	lea    0x220(%rbx),%rax
   35d48:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35d4f:	00 00 00 00 
   35d53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35d5a:	00 00 00 00 
   35d5e:	66 90                	xchg   %ax,%ax
   35d60:	c6 00 00             	movb   $0x0,(%rax)
   35d63:	48 ff c0             	inc    %rax
   35d66:	48 39 c7             	cmp    %rax,%rdi
   35d69:	75 f5                	jne    35d60 <k0_ippsAESInit+0x140>
   35d6b:	bf 00 04 00 00       	mov    $0x400,%edi
   35d70:	c7 03 4a 49 52 20    	movl   $0x2052494a,(%rbx)
   35d76:	c7 43 08 04 00 00 00 	movl   $0x4,0x8(%rbx)
   35d7d:	89 73 04             	mov    %esi,0x4(%rbx)
   35d80:	89 75 98             	mov    %esi,-0x68(%rbp)
   35d83:	44 89 63 0c          	mov    %r12d,0xc(%rbx)
   35d87:	c7 83 34 02 00 00 01 	movl   $0x1,0x234(%rbx)
   35d8e:	00 00 00 
   35d91:	c5 f8 77             	vzeroupper 
   35d94:	e8 67 96 ff ff       	callq  2f400 <cpGetFeature>
   35d99:	85 c0                	test   %eax,%eax
   35d9b:	41 89 c7             	mov    %eax,%r15d
   35d9e:	8b 75 98             	mov    -0x68(%rbp),%esi
   35da1:	0f 85 a9 00 00 00    	jne    35e50 <k0_ippsAESInit+0x230>
   35da7:	48 8d 83 30 01 00 00 	lea    0x130(%rbx),%rax
   35dae:	48 83 ec 08          	sub    $0x8,%rsp
   35db2:	50                   	push   %rax
   35db3:	4c 8d 6b 30          	lea    0x30(%rbx),%r13
   35db7:	44 8b 45 94          	mov    -0x6c(%rbp),%r8d
   35dbb:	44 89 e1             	mov    %r12d,%ecx
   35dbe:	ba 04 00 00 00       	mov    $0x4,%edx
   35dc3:	4d 89 e9             	mov    %r13,%r9
   35dc6:	4c 89 f7             	mov    %r14,%rdi
   35dc9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   35dcd:	41 ff c4             	inc    %r12d
   35dd0:	e8 cb 00 00 00       	callq  35ea0 <k0_ExpandRijndaelKey>
   35dd5:	58                   	pop    %rax
   35dd6:	5a                   	pop    %rdx
   35dd7:	45 85 e4             	test   %r12d,%r12d
   35dda:	7e 33                	jle    35e0f <k0_ippsAESInit+0x1ef>
   35ddc:	0f 1f 40 00          	nopl   0x0(%rax)
   35de0:	45 89 fe             	mov    %r15d,%r14d
   35de3:	41 c1 e6 04          	shl    $0x4,%r14d
   35de7:	4d 63 f6             	movslq %r14d,%r14
   35dea:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
   35def:	48 89 fe             	mov    %rdi,%rsi
   35df2:	e8 89 29 00 00       	callq  38780 <k0_TransformNative2Composite>
   35df7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   35dfb:	41 ff c7             	inc    %r15d
   35dfe:	4a 8d 3c 30          	lea    (%rax,%r14,1),%rdi
   35e02:	48 89 fe             	mov    %rdi,%rsi
   35e05:	e8 76 29 00 00       	callq  38780 <k0_TransformNative2Composite>
   35e0a:	45 39 e7             	cmp    %r12d,%r15d
   35e0d:	75 d1                	jne    35de0 <k0_ippsAESInit+0x1c0>
   35e0f:	48 8d 05 ea 29 00 00 	lea    0x29ea(%rip),%rax        # 38800 <k0_SafeEncrypt_RIJ128>
   35e16:	48 89 43 10          	mov    %rax,0x10(%rbx)
   35e1a:	48 8d 05 9f 24 00 00 	lea    0x249f(%rip),%rax        # 382c0 <k0_SafeDecrypt_RIJ128>
   35e21:	48 89 43 18          	mov    %rax,0x18(%rbx)
   35e25:	31 c0                	xor    %eax,%eax
   35e27:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   35e2b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   35e32:	00 00 
   35e34:	75 5c                	jne    35e92 <k0_ippsAESInit+0x272>
   35e36:	48 8d 65 d0          	lea    -0x30(%rbp),%rsp
   35e3a:	5b                   	pop    %rbx
   35e3b:	41 5a                	pop    %r10
   35e3d:	41 5c                	pop    %r12
   35e3f:	41 5d                	pop    %r13
   35e41:	41 5e                	pop    %r14
   35e43:	41 5f                	pop    %r15
   35e45:	5d                   	pop    %rbp
   35e46:	c3                   	retq   
   35e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   35e4e:	00 00 
   35e50:	48 8d 05 29 22 00 00 	lea    0x2229(%rip),%rax        # 38080 <k0_Encrypt_RIJ128_AES_NI>
   35e57:	c7 83 30 02 00 00 00 	movl   $0x400,0x230(%rbx)
   35e5e:	04 00 00 
   35e61:	48 89 43 10          	mov    %rax,0x10(%rbx)
   35e65:	48 8d 05 54 21 00 00 	lea    0x2154(%rip),%rax        # 37fc0 <k0_Decrypt_RIJ128_AES_NI>
   35e6c:	48 89 de             	mov    %rbx,%rsi
   35e6f:	48 89 43 18          	mov    %rax,0x18(%rbx)
   35e73:	4c 89 f7             	mov    %r14,%rdi
   35e76:	e8 25 2d 00 00       	callq  38ba0 <k0_cpExpandAesKey_NI>
   35e7b:	eb a8                	jmp    35e25 <k0_ippsAESInit+0x205>
   35e7d:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   35e82:	eb a3                	jmp    35e27 <k0_ippsAESInit+0x207>
   35e84:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   35e89:	eb 9c                	jmp    35e27 <k0_ippsAESInit+0x207>
   35e8b:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   35e90:	eb 95                	jmp    35e27 <k0_ippsAESInit+0x207>
   35e92:	e8 f5 55 fd ff       	callq  b48c <__stack_chk_fail>
   35e97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   35e9e:	00 00 

0000000000035ea0 <k0_ExpandRijndaelKey>:
   35ea0:	55                   	push   %rbp
   35ea1:	48 89 e5             	mov    %rsp,%rbp
   35ea4:	41 57                	push   %r15
   35ea6:	41 56                	push   %r14
   35ea8:	41 55                	push   %r13
   35eaa:	41 54                	push   %r12
   35eac:	53                   	push   %rbx
   35ead:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   35eb1:	89 54 24 ec          	mov    %edx,-0x14(%rsp)
   35eb5:	89 4c 24 e8          	mov    %ecx,-0x18(%rsp)
   35eb9:	44 89 44 24 fc       	mov    %r8d,-0x4(%rsp)
   35ebe:	8d 4e ff             	lea    -0x1(%rsi),%ecx
   35ec1:	4c 8b 7d 10          	mov    0x10(%rbp),%r15
   35ec5:	31 d2                	xor    %edx,%edx
   35ec7:	85 f6                	test   %esi,%esi
   35ec9:	7f 08                	jg     35ed3 <k0_ExpandRijndaelKey+0x33>
   35ecb:	e9 1a 20 00 00       	jmpq   37eea <k0_ExpandRijndaelKey+0x204a>
   35ed0:	48 89 c2             	mov    %rax,%rdx
   35ed3:	44 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%r8d
   35eda:	00 
   35edb:	4d 63 c0             	movslq %r8d,%r8
   35ede:	42 0f b6 44 07 03    	movzbl 0x3(%rdi,%r8,1),%eax
   35ee4:	46 0f b6 54 07 02    	movzbl 0x2(%rdi,%r8,1),%r10d
   35eea:	c1 e0 18             	shl    $0x18,%eax
   35eed:	41 c1 e2 10          	shl    $0x10,%r10d
   35ef1:	44 09 d0             	or     %r10d,%eax
   35ef4:	46 0f b6 14 07       	movzbl (%rdi,%r8,1),%r10d
   35ef9:	46 0f b6 44 07 01    	movzbl 0x1(%rdi,%r8,1),%r8d
   35eff:	44 09 d0             	or     %r10d,%eax
   35f02:	41 c1 e0 08          	shl    $0x8,%r8d
   35f06:	44 09 c0             	or     %r8d,%eax
   35f09:	41 89 04 91          	mov    %eax,(%r9,%rdx,4)
   35f0d:	48 8d 42 01          	lea    0x1(%rdx),%rax
   35f11:	48 39 ca             	cmp    %rcx,%rdx
   35f14:	75 ba                	jne    35ed0 <k0_ExpandRijndaelKey+0x30>
   35f16:	45 8b 11             	mov    (%r9),%r10d
   35f19:	45 8b 41 04          	mov    0x4(%r9),%r8d
   35f1d:	41 8b 79 08          	mov    0x8(%r9),%edi
   35f21:	41 8b 41 0c          	mov    0xc(%r9),%eax
   35f25:	83 fe 04             	cmp    $0x4,%esi
   35f28:	0f 84 59 19 00 00    	je     37887 <k0_ExpandRijndaelKey+0x19e7>
   35f2e:	45 8b 71 10          	mov    0x10(%r9),%r14d
   35f32:	45 8b 59 14          	mov    0x14(%r9),%r11d
   35f36:	83 fe 06             	cmp    $0x6,%esi
   35f39:	0f 84 e4 12 00 00    	je     37223 <k0_ExpandRijndaelKey+0x1383>
   35f3f:	83 7c 24 fc 08       	cmpl   $0x8,-0x4(%rsp)
   35f44:	41 8b 59 18          	mov    0x18(%r9),%ebx
   35f48:	41 8b 71 1c          	mov    0x1c(%r9),%esi
   35f4c:	0f 8e 30 0c 00 00    	jle    36b82 <k0_ExpandRijndaelKey+0xce2>
   35f52:	48 8d 15 e7 8e 00 00 	lea    0x8ee7(%rip),%rdx        # 3ee40 <RijEncSbox>
   35f59:	48 8d 0d 60 8d 00 00 	lea    0x8d60(%rip),%rcx        # 3ecc0 <RconTbl>
   35f60:	48 89 4c 24 f0       	mov    %rcx,-0x10(%rsp)
   35f65:	c7 44 24 f8 08 00 00 	movl   $0x8,-0x8(%rsp)
   35f6c:	00 
   35f6d:	62 e1 fd 28 6f 12    	vmovdqa64 (%rdx),%ymm18
   35f73:	62 e1 fd 28 6f 4a 01 	vmovdqa64 0x20(%rdx),%ymm17
   35f7a:	62 e1 fd 28 6f 42 02 	vmovdqa64 0x40(%rdx),%ymm16
   35f81:	62 71 fd 28 6f 7a 03 	vmovdqa64 0x60(%rdx),%ymm15
   35f88:	62 71 fd 28 6f 72 04 	vmovdqa64 0x80(%rdx),%ymm14
   35f8f:	62 71 fd 28 6f 6a 05 	vmovdqa64 0xa0(%rdx),%ymm13
   35f96:	62 71 fd 28 6f 62 06 	vmovdqa64 0xc0(%rdx),%ymm12
   35f9d:	62 71 fd 28 6f 5a 07 	vmovdqa64 0xe0(%rdx),%ymm11
   35fa4:	62 71 fd 28 6f 0d 92 	vmovdqa64 0x8d92(%rip),%ymm9        # 3ed40 <RconTbl+0x80>
   35fab:	8d 00 00 
   35fae:	62 71 fd 28 6f 05 a8 	vmovdqa64 0x8da8(%rip),%ymm8        # 3ed60 <RconTbl+0xa0>
   35fb5:	8d 00 00 
   35fb8:	62 f1 fd 28 6f 3d be 	vmovdqa64 0x8dbe(%rip),%ymm7        # 3ed80 <RconTbl+0xc0>
   35fbf:	8d 00 00 
   35fc2:	62 f1 fd 28 6f 35 d4 	vmovdqa64 0x8dd4(%rip),%ymm6        # 3eda0 <RconTbl+0xe0>
   35fc9:	8d 00 00 
   35fcc:	62 f1 fd 28 6f 2d ea 	vmovdqa64 0x8dea(%rip),%ymm5        # 3edc0 <RconTbl+0x100>
   35fd3:	8d 00 00 
   35fd6:	62 f1 fd 28 6f 25 00 	vmovdqa64 0x8e00(%rip),%ymm4        # 3ede0 <RconTbl+0x120>
   35fdd:	8e 00 00 
   35fe0:	62 f1 fd 28 6f 1d 16 	vmovdqa64 0x8e16(%rip),%ymm3        # 3ee00 <RconTbl+0x140>
   35fe7:	8e 00 00 
   35fea:	62 f1 fd 28 6f 15 2c 	vmovdqa64 0x8e2c(%rip),%ymm2        # 3ee20 <RconTbl+0x160>
   35ff1:	8e 00 00 
   35ff4:	4c 89 7d 10          	mov    %r15,0x10(%rbp)
   35ff8:	c5 fd 76 c0          	vpcmpeqd %ymm0,%ymm0,%ymm0
   35ffc:	41 89 df             	mov    %ebx,%r15d
   35fff:	90                   	nop
   36000:	89 f2                	mov    %esi,%edx
   36002:	c0 ea 03             	shr    $0x3,%dl
   36005:	0f b6 d2             	movzbl %dl,%edx
   36008:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   3600e:	62 61 f5 28 ef c7    	vpxorq %ymm7,%ymm1,%ymm24
   36014:	62 61 f5 28 ef ce    	vpxorq %ymm6,%ymm1,%ymm25
   3601a:	62 e1 f5 28 ef f3    	vpxorq %ymm3,%ymm1,%ymm22
   36020:	62 e1 f5 28 ef e2    	vpxorq %ymm2,%ymm1,%ymm20
   36026:	62 c1 f5 28 ef e9    	vpxorq %ymm9,%ymm1,%ymm21
   3602c:	62 c1 f5 28 ef f8    	vpxorq %ymm8,%ymm1,%ymm23
   36032:	62 e1 f5 28 ef dd    	vpxorq %ymm5,%ymm1,%ymm19
   36038:	c5 75 ef d4          	vpxor  %ymm4,%ymm1,%ymm10
   3603c:	62 f1 bd 20 d4 c8    	vpaddq %ymm0,%ymm24,%ymm1
   36042:	62 f1 bd 20 df c9    	vpandnq %ymm1,%ymm24,%ymm1
   36048:	62 61 c5 20 d4 c0    	vpaddq %ymm0,%ymm23,%ymm24
   3604e:	62 81 c5 20 df f8    	vpandnq %ymm24,%ymm23,%ymm23
   36054:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   3605b:	62 b1 c5 20 72 e7 3f 	vpsraq $0x3f,%ymm23,%ymm23
   36062:	62 b1 f5 28 db c8    	vpandq %ymm16,%ymm1,%ymm1
   36068:	62 a1 c5 20 db f9    	vpandq %ymm17,%ymm23,%ymm23
   3606e:	62 a1 f5 28 eb ff    	vporq  %ymm23,%ymm1,%ymm23
   36074:	62 f1 e5 20 d4 c8    	vpaddq %ymm0,%ymm19,%ymm1
   3607a:	62 e1 e5 20 df d9    	vpandnq %ymm1,%ymm19,%ymm19
   36080:	62 f1 b5 20 d4 c8    	vpaddq %ymm0,%ymm25,%ymm1
   36086:	62 f1 b5 20 df c9    	vpandnq %ymm1,%ymm25,%ymm1
   3608c:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   36093:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   3609a:	62 c1 e5 20 db de    	vpandq %ymm14,%ymm19,%ymm19
   360a0:	c4 c1 75 db cf       	vpand  %ymm15,%ymm1,%ymm1
   360a5:	62 f1 e5 20 eb c9    	vporq  %ymm1,%ymm19,%ymm1
   360ab:	62 e1 ad 28 d4 d8    	vpaddq %ymm0,%ymm10,%ymm19
   360b1:	62 31 ad 28 df d3    	vpandnq %ymm19,%ymm10,%ymm10
   360b7:	62 e1 cd 20 d4 d8    	vpaddq %ymm0,%ymm22,%ymm19
   360bd:	62 a1 cd 20 df db    	vpandnq %ymm19,%ymm22,%ymm19
   360c3:	41 89 f4             	mov    %esi,%r12d
   360c6:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   360cd:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   360d4:	41 c1 ec 18          	shr    $0x18,%r12d
   360d8:	62 c1 e5 20 db dc    	vpandq %ymm12,%ymm19,%ymm19
   360de:	c4 41 2d db d5       	vpand  %ymm13,%ymm10,%ymm10
   360e3:	62 31 ad 28 eb d3    	vporq  %ymm19,%ymm10,%ymm10
   360e9:	62 f1 c5 20 eb c9    	vporq  %ymm1,%ymm23,%ymm1
   360ef:	44 89 e2             	mov    %r12d,%edx
   360f2:	c4 c1 75 eb ca       	vpor   %ymm10,%ymm1,%ymm1
   360f7:	c0 ea 03             	shr    $0x3,%dl
   360fa:	62 71 d5 20 d4 d0    	vpaddq %ymm0,%ymm21,%ymm10
   36100:	62 c1 d5 20 df ea    	vpandnq %ymm10,%ymm21,%ymm21
   36106:	0f b6 d2             	movzbl %dl,%edx
   36109:	62 71 dd 20 d4 d0    	vpaddq %ymm0,%ymm20,%ymm10
   3610f:	62 51 dd 20 df d2    	vpandnq %ymm10,%ymm20,%ymm10
   36115:	62 e2 fd 28 7c e2    	vpbroadcastq %rdx,%ymm20
   3611b:	62 61 dd 20 ef d7    	vpxorq %ymm7,%ymm20,%ymm26
   36121:	62 41 dd 20 ef c0    	vpxorq %ymm8,%ymm20,%ymm24
   36127:	62 61 ad 20 d4 d8    	vpaddq %ymm0,%ymm26,%ymm27
   3612d:	62 01 ad 20 df d3    	vpandnq %ymm27,%ymm26,%ymm26
   36133:	62 61 bd 20 d4 d8    	vpaddq %ymm0,%ymm24,%ymm27
   36139:	62 01 bd 20 df c3    	vpandnq %ymm27,%ymm24,%ymm24
   3613f:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   36146:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   3614d:	62 e1 dd 20 ef dd    	vpxorq %ymm5,%ymm20,%ymm19
   36153:	62 21 ad 20 db d0    	vpandq %ymm16,%ymm26,%ymm26
   36159:	62 21 bd 20 db c1    	vpandq %ymm17,%ymm24,%ymm24
   3615f:	62 61 dd 20 ef ce    	vpxorq %ymm6,%ymm20,%ymm25
   36165:	62 01 ad 20 eb c0    	vporq  %ymm24,%ymm26,%ymm24
   3616b:	62 61 e5 20 d4 d0    	vpaddq %ymm0,%ymm19,%ymm26
   36171:	62 81 e5 20 df da    	vpandnq %ymm26,%ymm19,%ymm19
   36177:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   3617d:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   36183:	62 b1 d5 20 72 e5 3f 	vpsraq $0x3f,%ymm21,%ymm21
   3618a:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   36191:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   36198:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   3619f:	c4 41 2d db d3       	vpand  %ymm11,%ymm10,%ymm10
   361a4:	62 41 b5 20 db cf    	vpandq %ymm15,%ymm25,%ymm25
   361aa:	62 a1 d5 20 db ea    	vpandq %ymm18,%ymm21,%ymm21
   361b0:	62 c1 e5 20 db de    	vpandq %ymm14,%ymm19,%ymm19
   361b6:	62 c1 d5 20 eb ea    	vporq  %ymm10,%ymm21,%ymm21
   361bc:	62 81 e5 20 eb d9    	vporq  %ymm25,%ymm19,%ymm19
   361c2:	62 71 dd 20 ef d4    	vpxorq %ymm4,%ymm20,%ymm10
   361c8:	62 e1 dd 20 ef f3    	vpxorq %ymm3,%ymm20,%ymm22
   361ce:	62 a1 bd 20 eb db    	vporq  %ymm19,%ymm24,%ymm19
   361d4:	62 61 ad 28 d4 c0    	vpaddq %ymm0,%ymm10,%ymm24
   361da:	62 11 ad 28 df d0    	vpandnq %ymm24,%ymm10,%ymm10
   361e0:	62 61 cd 20 d4 c0    	vpaddq %ymm0,%ymm22,%ymm24
   361e6:	62 81 cd 20 df f0    	vpandnq %ymm24,%ymm22,%ymm22
   361ec:	62 b1 f5 28 eb cd    	vporq  %ymm21,%ymm1,%ymm1
   361f2:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   361f9:	62 b1 cd 20 72 e6 3f 	vpsraq $0x3f,%ymm22,%ymm22
   36200:	62 b3 7d 48 39 cd 01 	vextracti32x4 $0x1,%zmm1,%xmm21
   36207:	62 c1 cd 20 db f4    	vpandq %ymm12,%ymm22,%ymm22
   3620d:	c4 41 2d db d5       	vpand  %ymm13,%ymm10,%ymm10
   36212:	62 e1 d5 00 eb e9    	vporq  %xmm1,%xmm21,%xmm21
   36218:	62 31 ad 28 eb d6    	vporq  %ymm22,%ymm10,%ymm10
   3621e:	62 d1 dd 20 ef c9    	vpxorq %ymm9,%ymm20,%ymm1
   36224:	62 51 e5 20 eb d2    	vporq  %ymm10,%ymm19,%ymm10
   3622a:	62 e1 dd 20 ef e2    	vpxorq %ymm2,%ymm20,%ymm20
   36230:	62 e1 f5 28 d4 d8    	vpaddq %ymm0,%ymm1,%ymm19
   36236:	62 b1 f5 28 df cb    	vpandnq %ymm19,%ymm1,%ymm1
   3623c:	62 e1 dd 20 d4 d8    	vpaddq %ymm0,%ymm20,%ymm19
   36242:	62 a1 dd 20 df e3    	vpandnq %ymm19,%ymm20,%ymm20
   36248:	62 b1 e5 20 72 e4 3f 	vpsraq $0x3f,%ymm20,%ymm19
   3624f:	89 f3                	mov    %esi,%ebx
   36251:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   36258:	c1 eb 10             	shr    $0x10,%ebx
   3625b:	62 c1 e5 20 db db    	vpandq %ymm11,%ymm19,%ymm19
   36261:	62 b1 f5 28 db ca    	vpandq %ymm18,%ymm1,%ymm1
   36267:	62 b1 f5 28 eb cb    	vporq  %ymm19,%ymm1,%ymm1
   3626d:	89 da                	mov    %ebx,%edx
   3626f:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   36273:	c0 ea 03             	shr    $0x3,%dl
   36276:	62 b3 7d 48 39 cc 01 	vextracti32x4 $0x1,%zmm1,%xmm20
   3627d:	0f b6 d2             	movzbl %dl,%edx
   36280:	62 e1 dd 00 eb e1    	vporq  %xmm1,%xmm20,%xmm20
   36286:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   3628c:	62 61 f5 28 ef e5    	vpxorq %ymm5,%ymm1,%ymm28
   36292:	62 61 f5 28 ef d6    	vpxorq %ymm6,%ymm1,%ymm26
   36298:	62 61 9d 20 d4 e8    	vpaddq %ymm0,%ymm28,%ymm29
   3629e:	62 01 9d 20 df e5    	vpandnq %ymm29,%ymm28,%ymm28
   362a4:	62 61 ad 20 d4 e8    	vpaddq %ymm0,%ymm26,%ymm29
   362aa:	62 01 ad 20 df d5    	vpandnq %ymm29,%ymm26,%ymm26
   362b0:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   362b7:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   362be:	62 61 f5 28 ef c7    	vpxorq %ymm7,%ymm1,%ymm24
   362c4:	62 41 9d 20 db e6    	vpandq %ymm14,%ymm28,%ymm28
   362ca:	62 41 ad 20 db d7    	vpandq %ymm15,%ymm26,%ymm26
   362d0:	62 41 f5 28 ef d8    	vpxorq %ymm8,%ymm1,%ymm27
   362d6:	62 01 9d 20 eb d2    	vporq  %ymm26,%ymm28,%ymm26
   362dc:	62 61 bd 20 d4 e0    	vpaddq %ymm0,%ymm24,%ymm28
   362e2:	62 01 bd 20 df c4    	vpandnq %ymm28,%ymm24,%ymm24
   362e8:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   362ee:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   362f4:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   362fb:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   36302:	62 21 a5 20 db d9    	vpandq %ymm17,%ymm27,%ymm27
   36308:	62 21 bd 20 db c0    	vpandq %ymm16,%ymm24,%ymm24
   3630e:	62 e1 f5 28 ef dc    	vpxorq %ymm4,%ymm1,%ymm19
   36314:	62 01 bd 20 eb c3    	vporq  %ymm27,%ymm24,%ymm24
   3631a:	62 61 f5 28 ef cb    	vpxorq %ymm3,%ymm1,%ymm25
   36320:	62 01 ad 20 eb c0    	vporq  %ymm24,%ymm26,%ymm24
   36326:	62 61 e5 20 d4 d0    	vpaddq %ymm0,%ymm19,%ymm26
   3632c:	62 81 e5 20 df da    	vpandnq %ymm26,%ymm19,%ymm19
   36332:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   36338:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   3633e:	41 89 f5             	mov    %esi,%r13d
   36341:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   36348:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   3634f:	41 c1 ed 08          	shr    $0x8,%r13d
   36353:	62 41 b5 20 db cc    	vpandq %ymm12,%ymm25,%ymm25
   36359:	62 c1 e5 20 db dd    	vpandq %ymm13,%ymm19,%ymm19
   3635f:	c4 41 75 ef d1       	vpxor  %ymm9,%ymm1,%ymm10
   36364:	62 81 e5 20 eb d9    	vporq  %ymm25,%ymm19,%ymm19
   3636a:	44 89 ea             	mov    %r13d,%edx
   3636d:	62 21 bd 20 eb c3    	vporq  %ymm19,%ymm24,%ymm24
   36373:	c5 f5 ef ca          	vpxor  %ymm2,%ymm1,%ymm1
   36377:	62 e1 ad 28 d4 d8    	vpaddq %ymm0,%ymm10,%ymm19
   3637d:	c0 ea 03             	shr    $0x3,%dl
   36380:	62 31 ad 28 df d3    	vpandnq %ymm19,%ymm10,%ymm10
   36386:	0f b6 d2             	movzbl %dl,%edx
   36389:	62 e1 f5 28 d4 d8    	vpaddq %ymm0,%ymm1,%ymm19
   3638f:	62 b1 f5 28 df cb    	vpandnq %ymm19,%ymm1,%ymm1
   36395:	62 e2 fd 28 7c da    	vpbroadcastq %rdx,%ymm19
   3639b:	62 61 e5 20 ef f5    	vpxorq %ymm5,%ymm19,%ymm30
   363a1:	62 61 e5 20 ef d6    	vpxorq %ymm6,%ymm19,%ymm26
   363a7:	62 61 8d 20 d4 f8    	vpaddq %ymm0,%ymm30,%ymm31
   363ad:	62 01 8d 20 df f7    	vpandnq %ymm31,%ymm30,%ymm30
   363b3:	62 61 ad 20 d4 f8    	vpaddq %ymm0,%ymm26,%ymm31
   363b9:	62 01 ad 20 df d7    	vpandnq %ymm31,%ymm26,%ymm26
   363bf:	62 91 8d 20 72 e6 3f 	vpsraq $0x3f,%ymm30,%ymm30
   363c6:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   363cd:	62 61 e5 20 ef e7    	vpxorq %ymm7,%ymm19,%ymm28
   363d3:	62 41 8d 20 db f6    	vpandq %ymm14,%ymm30,%ymm30
   363d9:	62 41 ad 20 db d7    	vpandq %ymm15,%ymm26,%ymm26
   363df:	62 41 e5 20 ef e8    	vpxorq %ymm8,%ymm19,%ymm29
   363e5:	62 01 8d 20 eb d2    	vporq  %ymm26,%ymm30,%ymm26
   363eb:	62 61 9d 20 d4 f0    	vpaddq %ymm0,%ymm28,%ymm30
   363f1:	62 01 9d 20 df e6    	vpandnq %ymm30,%ymm28,%ymm28
   363f7:	62 61 95 20 d4 f0    	vpaddq %ymm0,%ymm29,%ymm30
   363fd:	62 01 95 20 df ee    	vpandnq %ymm30,%ymm29,%ymm29
   36403:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   3640a:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   36411:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   36418:	62 91 95 20 72 e5 3f 	vpsraq $0x3f,%ymm29,%ymm29
   3641f:	62 31 ad 28 db d2    	vpandq %ymm18,%ymm10,%ymm10
   36425:	62 21 95 20 db e9    	vpandq %ymm17,%ymm29,%ymm29
   3642b:	c4 c1 75 db cb       	vpand  %ymm11,%ymm1,%ymm1
   36430:	62 21 9d 20 db e0    	vpandq %ymm16,%ymm28,%ymm28
   36436:	62 01 9d 20 eb e5    	vporq  %ymm29,%ymm28,%ymm28
   3643c:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   36440:	62 71 e5 20 ef d4    	vpxorq %ymm4,%ymm19,%ymm10
   36446:	62 61 e5 20 ef db    	vpxorq %ymm3,%ymm19,%ymm27
   3644c:	62 01 ad 20 eb d4    	vporq  %ymm28,%ymm26,%ymm26
   36452:	62 61 ad 28 d4 e0    	vpaddq %ymm0,%ymm10,%ymm28
   36458:	62 11 ad 28 df d4    	vpandnq %ymm28,%ymm10,%ymm10
   3645e:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   36464:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   3646a:	62 f1 bd 20 eb c9    	vporq  %ymm1,%ymm24,%ymm1
   36470:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   36477:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   3647e:	62 93 7d 48 39 c8 01 	vextracti32x4 $0x1,%zmm1,%xmm24
   36485:	62 41 a5 20 db dc    	vpandq %ymm12,%ymm27,%ymm27
   3648b:	c4 41 2d db d5       	vpand  %ymm13,%ymm10,%ymm10
   36490:	62 61 bd 00 eb c1    	vporq  %xmm1,%xmm24,%xmm24
   36496:	62 11 ad 28 eb d3    	vporq  %ymm27,%ymm10,%ymm10
   3649c:	62 d1 e5 20 ef c9    	vpxorq %ymm9,%ymm19,%ymm1
   364a2:	62 51 ad 20 eb d2    	vporq  %ymm10,%ymm26,%ymm10
   364a8:	62 e1 e5 20 ef da    	vpxorq %ymm2,%ymm19,%ymm19
   364ae:	62 61 f5 28 d4 d0    	vpaddq %ymm0,%ymm1,%ymm26
   364b4:	62 91 f5 28 df ca    	vpandnq %ymm26,%ymm1,%ymm1
   364ba:	62 61 e5 20 d4 d0    	vpaddq %ymm0,%ymm19,%ymm26
   364c0:	62 81 e5 20 df da    	vpandnq %ymm26,%ymm19,%ymm19
   364c6:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   364cd:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   364d4:	62 c1 e5 20 db db    	vpandq %ymm11,%ymm19,%ymm19
   364da:	62 b1 f5 28 db ca    	vpandq %ymm18,%ymm1,%ymm1
   364e0:	62 b1 f5 28 eb cb    	vporq  %ymm19,%ymm1,%ymm1
   364e6:	c5 2d eb d1          	vpor   %ymm1,%ymm10,%ymm10
   364ea:	c4 63 7d 39 d1 01    	vextracti128 $0x1,%ymm10,%xmm1
   364f0:	62 b1 45 00 73 dd 08 	vpsrldq $0x8,%xmm21,%xmm23
   364f7:	c4 c1 71 eb ca       	vpor   %xmm10,%xmm1,%xmm1
   364fc:	89 f2                	mov    %esi,%edx
   364fe:	62 a1 d5 00 eb ef    	vporq  %xmm23,%xmm21,%xmm21
   36504:	c5 a9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm10
   36509:	83 e2 07             	and    $0x7,%edx
   3650c:	c1 e2 03             	shl    $0x3,%edx
   3650f:	c4 c1 71 eb ca       	vpor   %xmm10,%xmm1,%xmm1
   36514:	62 e1 fd 08 7e e9    	vmovq  %xmm21,%rcx
   3651a:	41 83 e5 07          	and    $0x7,%r13d
   3651e:	62 b1 4d 00 73 dc 08 	vpsrldq $0x8,%xmm20,%xmm22
   36525:	c4 e2 eb f7 c9       	shrx   %rdx,%rcx,%rcx
   3652a:	41 c1 e5 03          	shl    $0x3,%r13d
   3652e:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
   36533:	62 a1 dd 00 eb e6    	vporq  %xmm22,%xmm20,%xmm20
   36539:	c1 e1 18             	shl    $0x18,%ecx
   3653c:	41 83 e4 07          	and    $0x7,%r12d
   36540:	c4 e2 93 f7 d2       	shrx   %r13,%rdx,%rdx
   36545:	0f b6 d2             	movzbl %dl,%edx
   36548:	09 d1                	or     %edx,%ecx
   3654a:	41 c1 e4 03          	shl    $0x3,%r12d
   3654e:	62 e1 fd 08 7e e2    	vmovq  %xmm20,%rdx
   36554:	62 91 35 00 73 d8 08 	vpsrldq $0x8,%xmm24,%xmm25
   3655b:	48 83 44 24 f0 04    	addq   $0x4,-0x10(%rsp)
   36561:	c4 e2 9b f7 d2       	shrx   %r12,%rdx,%rdx
   36566:	0f b6 d2             	movzbl %dl,%edx
   36569:	c1 e2 10             	shl    $0x10,%edx
   3656c:	62 01 bd 00 eb c1    	vporq  %xmm25,%xmm24,%xmm24
   36572:	83 e3 07             	and    $0x7,%ebx
   36575:	09 d1                	or     %edx,%ecx
   36577:	c1 e3 03             	shl    $0x3,%ebx
   3657a:	62 61 fd 08 7e c2    	vmovq  %xmm24,%rdx
   36580:	c4 e2 e3 f7 d2       	shrx   %rbx,%rdx,%rdx
   36585:	0f b6 d2             	movzbl %dl,%edx
   36588:	c1 e2 08             	shl    $0x8,%edx
   3658b:	48 8b 5c 24 f0       	mov    -0x10(%rsp),%rbx
   36590:	09 d1                	or     %edx,%ecx
   36592:	33 4b fc             	xor    -0x4(%rbx),%ecx
   36595:	41 31 ca             	xor    %ecx,%r10d
   36598:	45 31 d0             	xor    %r10d,%r8d
   3659b:	44 31 c7             	xor    %r8d,%edi
   3659e:	31 f8                	xor    %edi,%eax
   365a0:	41 89 c4             	mov    %eax,%r12d
   365a3:	41 c1 ec 18          	shr    $0x18,%r12d
   365a7:	44 89 e2             	mov    %r12d,%edx
   365aa:	c0 ea 03             	shr    $0x3,%dl
   365ad:	0f b6 d2             	movzbl %dl,%edx
   365b0:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   365b6:	62 61 f5 28 ef c5    	vpxorq %ymm5,%ymm1,%ymm24
   365bc:	62 41 f5 28 ef c8    	vpxorq %ymm8,%ymm1,%ymm25
   365c2:	62 e1 f5 28 ef f3    	vpxorq %ymm3,%ymm1,%ymm22
   365c8:	62 e1 f5 28 ef e2    	vpxorq %ymm2,%ymm1,%ymm20
   365ce:	62 c1 f5 28 ef e9    	vpxorq %ymm9,%ymm1,%ymm21
   365d4:	62 e1 f5 28 ef df    	vpxorq %ymm7,%ymm1,%ymm19
   365da:	62 e1 f5 28 ef fe    	vpxorq %ymm6,%ymm1,%ymm23
   365e0:	c5 75 ef d4          	vpxor  %ymm4,%ymm1,%ymm10
   365e4:	62 f1 bd 20 d4 c8    	vpaddq %ymm0,%ymm24,%ymm1
   365ea:	62 f1 bd 20 df c9    	vpandnq %ymm1,%ymm24,%ymm1
   365f0:	62 61 c5 20 d4 c0    	vpaddq %ymm0,%ymm23,%ymm24
   365f6:	62 81 c5 20 df f8    	vpandnq %ymm24,%ymm23,%ymm23
   365fc:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   36603:	62 b1 c5 20 72 e7 3f 	vpsraq $0x3f,%ymm23,%ymm23
   3660a:	c4 c1 75 db ce       	vpand  %ymm14,%ymm1,%ymm1
   3660f:	62 c1 c5 20 db ff    	vpandq %ymm15,%ymm23,%ymm23
   36615:	62 a1 f5 28 eb ff    	vporq  %ymm23,%ymm1,%ymm23
   3661b:	62 f1 e5 20 d4 c8    	vpaddq %ymm0,%ymm19,%ymm1
   36621:	62 e1 e5 20 df d9    	vpandnq %ymm1,%ymm19,%ymm19
   36627:	62 f1 b5 20 d4 c8    	vpaddq %ymm0,%ymm25,%ymm1
   3662d:	62 f1 b5 20 df c9    	vpandnq %ymm1,%ymm25,%ymm1
   36633:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   3663a:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   36641:	62 a1 e5 20 db d8    	vpandq %ymm16,%ymm19,%ymm19
   36647:	62 b1 f5 28 db c9    	vpandq %ymm17,%ymm1,%ymm1
   3664d:	62 f1 e5 20 eb c9    	vporq  %ymm1,%ymm19,%ymm1
   36653:	62 e1 ad 28 d4 d8    	vpaddq %ymm0,%ymm10,%ymm19
   36659:	62 31 ad 28 df d3    	vpandnq %ymm19,%ymm10,%ymm10
   3665f:	62 e1 cd 20 d4 d8    	vpaddq %ymm0,%ymm22,%ymm19
   36665:	62 a1 cd 20 df db    	vpandnq %ymm19,%ymm22,%ymm19
   3666b:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   36672:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   36679:	89 c3                	mov    %eax,%ebx
   3667b:	c1 eb 10             	shr    $0x10,%ebx
   3667e:	62 c1 e5 20 db dc    	vpandq %ymm12,%ymm19,%ymm19
   36684:	c4 41 2d db d5       	vpand  %ymm13,%ymm10,%ymm10
   36689:	62 31 ad 28 eb d3    	vporq  %ymm19,%ymm10,%ymm10
   3668f:	62 f1 c5 20 eb c9    	vporq  %ymm1,%ymm23,%ymm1
   36695:	89 da                	mov    %ebx,%edx
   36697:	c4 c1 75 eb ca       	vpor   %ymm10,%ymm1,%ymm1
   3669c:	c0 ea 03             	shr    $0x3,%dl
   3669f:	62 71 d5 20 d4 d0    	vpaddq %ymm0,%ymm21,%ymm10
   366a5:	62 c1 d5 20 df ea    	vpandnq %ymm10,%ymm21,%ymm21
   366ab:	0f b6 d2             	movzbl %dl,%edx
   366ae:	62 71 dd 20 d4 d0    	vpaddq %ymm0,%ymm20,%ymm10
   366b4:	62 51 dd 20 df d2    	vpandnq %ymm10,%ymm20,%ymm10
   366ba:	62 e2 fd 28 7c e2    	vpbroadcastq %rdx,%ymm20
   366c0:	62 61 dd 20 ef d5    	vpxorq %ymm5,%ymm20,%ymm26
   366c6:	62 e1 dd 20 ef fe    	vpxorq %ymm6,%ymm20,%ymm23
   366cc:	62 61 ad 20 d4 d8    	vpaddq %ymm0,%ymm26,%ymm27
   366d2:	62 01 ad 20 df d3    	vpandnq %ymm27,%ymm26,%ymm26
   366d8:	62 61 c5 20 d4 d8    	vpaddq %ymm0,%ymm23,%ymm27
   366de:	62 81 c5 20 df fb    	vpandnq %ymm27,%ymm23,%ymm23
   366e4:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   366eb:	62 b1 c5 20 72 e7 3f 	vpsraq $0x3f,%ymm23,%ymm23
   366f2:	62 e1 dd 20 ef df    	vpxorq %ymm7,%ymm20,%ymm19
   366f8:	62 41 ad 20 db d6    	vpandq %ymm14,%ymm26,%ymm26
   366fe:	62 c1 c5 20 db ff    	vpandq %ymm15,%ymm23,%ymm23
   36704:	62 41 dd 20 ef c8    	vpxorq %ymm8,%ymm20,%ymm25
   3670a:	62 a1 ad 20 eb ff    	vporq  %ymm23,%ymm26,%ymm23
   36710:	62 61 e5 20 d4 d0    	vpaddq %ymm0,%ymm19,%ymm26
   36716:	62 81 e5 20 df da    	vpandnq %ymm26,%ymm19,%ymm19
   3671c:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   36722:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   36728:	62 b1 d5 20 72 e5 3f 	vpsraq $0x3f,%ymm21,%ymm21
   3672f:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   36736:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   3673d:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   36744:	c4 41 2d db d3       	vpand  %ymm11,%ymm10,%ymm10
   36749:	62 21 b5 20 db c9    	vpandq %ymm17,%ymm25,%ymm25
   3674f:	62 a1 d5 20 db ea    	vpandq %ymm18,%ymm21,%ymm21
   36755:	62 a1 e5 20 db d8    	vpandq %ymm16,%ymm19,%ymm19
   3675b:	62 c1 d5 20 eb ea    	vporq  %ymm10,%ymm21,%ymm21
   36761:	62 81 e5 20 eb d9    	vporq  %ymm25,%ymm19,%ymm19
   36767:	62 71 dd 20 ef d4    	vpxorq %ymm4,%ymm20,%ymm10
   3676d:	62 e1 dd 20 ef f3    	vpxorq %ymm3,%ymm20,%ymm22
   36773:	62 a1 c5 20 eb db    	vporq  %ymm19,%ymm23,%ymm19
   36779:	62 e1 ad 28 d4 f8    	vpaddq %ymm0,%ymm10,%ymm23
   3677f:	62 31 ad 28 df d7    	vpandnq %ymm23,%ymm10,%ymm10
   36785:	62 e1 cd 20 d4 f8    	vpaddq %ymm0,%ymm22,%ymm23
   3678b:	62 a1 cd 20 df f7    	vpandnq %ymm23,%ymm22,%ymm22
   36791:	62 b1 f5 28 eb cd    	vporq  %ymm21,%ymm1,%ymm1
   36797:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   3679e:	62 b1 cd 20 72 e6 3f 	vpsraq $0x3f,%ymm22,%ymm22
   367a5:	62 b3 7d 48 39 cd 01 	vextracti32x4 $0x1,%zmm1,%xmm21
   367ac:	62 c1 cd 20 db f4    	vpandq %ymm12,%ymm22,%ymm22
   367b2:	c4 41 2d db d5       	vpand  %ymm13,%ymm10,%ymm10
   367b7:	62 e1 d5 00 eb e9    	vporq  %xmm1,%xmm21,%xmm21
   367bd:	62 31 ad 28 eb d6    	vporq  %ymm22,%ymm10,%ymm10
   367c3:	62 d1 dd 20 ef c9    	vpxorq %ymm9,%ymm20,%ymm1
   367c9:	62 51 e5 20 eb d2    	vporq  %ymm10,%ymm19,%ymm10
   367cf:	62 e1 dd 20 ef e2    	vpxorq %ymm2,%ymm20,%ymm20
   367d5:	62 e1 f5 28 d4 d8    	vpaddq %ymm0,%ymm1,%ymm19
   367db:	62 b1 f5 28 df cb    	vpandnq %ymm19,%ymm1,%ymm1
   367e1:	62 e1 dd 20 d4 d8    	vpaddq %ymm0,%ymm20,%ymm19
   367e7:	62 a1 dd 20 df e3    	vpandnq %ymm19,%ymm20,%ymm20
   367ed:	62 b1 e5 20 72 e4 3f 	vpsraq $0x3f,%ymm20,%ymm19
   367f4:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   367fb:	89 c1                	mov    %eax,%ecx
   367fd:	c1 e9 08             	shr    $0x8,%ecx
   36800:	62 c1 e5 20 db db    	vpandq %ymm11,%ymm19,%ymm19
   36806:	62 b1 f5 28 db ca    	vpandq %ymm18,%ymm1,%ymm1
   3680c:	62 b1 f5 28 eb cb    	vporq  %ymm19,%ymm1,%ymm1
   36812:	89 ca                	mov    %ecx,%edx
   36814:	c0 ea 03             	shr    $0x3,%dl
   36817:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   3681b:	62 b3 7d 48 39 cc 01 	vextracti32x4 $0x1,%zmm1,%xmm20
   36822:	0f b6 d2             	movzbl %dl,%edx
   36825:	62 e1 dd 00 eb e1    	vporq  %xmm1,%xmm20,%xmm20
   3682b:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   36831:	62 61 f5 28 ef e5    	vpxorq %ymm5,%ymm1,%ymm28
   36837:	62 61 f5 28 ef d6    	vpxorq %ymm6,%ymm1,%ymm26
   3683d:	62 61 9d 20 d4 e8    	vpaddq %ymm0,%ymm28,%ymm29
   36843:	62 01 9d 20 df e5    	vpandnq %ymm29,%ymm28,%ymm28
   36849:	62 61 ad 20 d4 e8    	vpaddq %ymm0,%ymm26,%ymm29
   3684f:	62 01 ad 20 df d5    	vpandnq %ymm29,%ymm26,%ymm26
   36855:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   3685c:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   36863:	62 e1 f5 28 ef f7    	vpxorq %ymm7,%ymm1,%ymm22
   36869:	62 41 9d 20 db e6    	vpandq %ymm14,%ymm28,%ymm28
   3686f:	62 41 ad 20 db d7    	vpandq %ymm15,%ymm26,%ymm26
   36875:	62 41 f5 28 ef d8    	vpxorq %ymm8,%ymm1,%ymm27
   3687b:	62 01 9d 20 eb d2    	vporq  %ymm26,%ymm28,%ymm26
   36881:	62 61 cd 20 d4 e0    	vpaddq %ymm0,%ymm22,%ymm28
   36887:	62 81 cd 20 df f4    	vpandnq %ymm28,%ymm22,%ymm22
   3688d:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   36893:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   36899:	62 b1 cd 20 72 e6 3f 	vpsraq $0x3f,%ymm22,%ymm22
   368a0:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   368a7:	62 21 a5 20 db d9    	vpandq %ymm17,%ymm27,%ymm27
   368ad:	62 a1 cd 20 db f0    	vpandq %ymm16,%ymm22,%ymm22
   368b3:	62 e1 f5 28 ef dc    	vpxorq %ymm4,%ymm1,%ymm19
   368b9:	62 81 cd 20 eb f3    	vporq  %ymm27,%ymm22,%ymm22
   368bf:	62 61 f5 28 ef cb    	vpxorq %ymm3,%ymm1,%ymm25
   368c5:	62 a1 ad 20 eb f6    	vporq  %ymm22,%ymm26,%ymm22
   368cb:	62 61 e5 20 d4 d0    	vpaddq %ymm0,%ymm19,%ymm26
   368d1:	62 81 e5 20 df da    	vpandnq %ymm26,%ymm19,%ymm19
   368d7:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   368dd:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   368e3:	89 c2                	mov    %eax,%edx
   368e5:	62 b1 e5 20 72 e3 3f 	vpsraq $0x3f,%ymm19,%ymm19
   368ec:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   368f3:	c0 ea 03             	shr    $0x3,%dl
   368f6:	62 41 b5 20 db cc    	vpandq %ymm12,%ymm25,%ymm25
   368fc:	0f b6 d2             	movzbl %dl,%edx
   368ff:	62 c1 e5 20 db dd    	vpandq %ymm13,%ymm19,%ymm19
   36905:	62 81 e5 20 eb d9    	vporq  %ymm25,%ymm19,%ymm19
   3690b:	62 62 fd 28 7c ca    	vpbroadcastq %rdx,%ymm25
   36911:	62 61 b5 20 ef f7    	vpxorq %ymm7,%ymm25,%ymm30
   36917:	62 41 b5 20 ef d0    	vpxorq %ymm8,%ymm25,%ymm26
   3691d:	62 61 8d 20 d4 f8    	vpaddq %ymm0,%ymm30,%ymm31
   36923:	c4 41 75 ef d1       	vpxor  %ymm9,%ymm1,%ymm10
   36928:	62 01 8d 20 df f7    	vpandnq %ymm31,%ymm30,%ymm30
   3692e:	62 61 ad 20 d4 f8    	vpaddq %ymm0,%ymm26,%ymm31
   36934:	62 a1 cd 20 eb f3    	vporq  %ymm19,%ymm22,%ymm22
   3693a:	c5 f5 ef ca          	vpxor  %ymm2,%ymm1,%ymm1
   3693e:	62 e1 ad 28 d4 d8    	vpaddq %ymm0,%ymm10,%ymm19
   36944:	62 01 ad 20 df d7    	vpandnq %ymm31,%ymm26,%ymm26
   3694a:	62 31 ad 28 df d3    	vpandnq %ymm19,%ymm10,%ymm10
   36950:	62 91 8d 20 72 e6 3f 	vpsraq $0x3f,%ymm30,%ymm30
   36957:	62 e1 f5 28 d4 d8    	vpaddq %ymm0,%ymm1,%ymm19
   3695d:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   36964:	62 61 b5 20 ef e5    	vpxorq %ymm5,%ymm25,%ymm28
   3696a:	62 b1 f5 28 df cb    	vpandnq %ymm19,%ymm1,%ymm1
   36970:	62 21 8d 20 db f0    	vpandq %ymm16,%ymm30,%ymm30
   36976:	62 21 ad 20 db d1    	vpandq %ymm17,%ymm26,%ymm26
   3697c:	62 61 b5 20 ef ee    	vpxorq %ymm6,%ymm25,%ymm29
   36982:	62 01 8d 20 eb d2    	vporq  %ymm26,%ymm30,%ymm26
   36988:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   3698f:	62 61 9d 20 d4 f0    	vpaddq %ymm0,%ymm28,%ymm30
   36995:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   3699c:	62 31 ad 28 db d2    	vpandq %ymm18,%ymm10,%ymm10
   369a2:	62 01 9d 20 df e6    	vpandnq %ymm30,%ymm28,%ymm28
   369a8:	c4 c1 75 db cb       	vpand  %ymm11,%ymm1,%ymm1
   369ad:	62 61 95 20 d4 f0    	vpaddq %ymm0,%ymm29,%ymm30
   369b3:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   369b7:	62 01 95 20 df ee    	vpandnq %ymm30,%ymm29,%ymm29
   369bd:	62 f1 cd 20 eb c9    	vporq  %ymm1,%ymm22,%ymm1
   369c3:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   369ca:	62 91 95 20 72 e5 3f 	vpsraq $0x3f,%ymm29,%ymm29
   369d1:	62 b3 7d 48 39 cb 01 	vextracti32x4 $0x1,%zmm1,%xmm19
   369d8:	62 41 9d 20 db e6    	vpandq %ymm14,%ymm28,%ymm28
   369de:	62 41 95 20 db ef    	vpandq %ymm15,%ymm29,%ymm29
   369e4:	62 e1 e5 00 eb d9    	vporq  %xmm1,%xmm19,%xmm19
   369ea:	62 01 9d 20 eb e5    	vporq  %ymm29,%ymm28,%ymm28
   369f0:	62 f1 b5 20 ef cc    	vpxorq %ymm4,%ymm25,%ymm1
   369f6:	62 61 b5 20 ef db    	vpxorq %ymm3,%ymm25,%ymm27
   369fc:	62 01 ad 20 eb d4    	vporq  %ymm28,%ymm26,%ymm26
   36a02:	62 61 f5 28 d4 e0    	vpaddq %ymm0,%ymm1,%ymm28
   36a08:	62 91 f5 28 df cc    	vpandnq %ymm28,%ymm1,%ymm1
   36a0e:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   36a14:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   36a1a:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   36a21:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   36a28:	c4 c1 75 db cd       	vpand  %ymm13,%ymm1,%ymm1
   36a2d:	62 41 a5 20 db dc    	vpandq %ymm12,%ymm27,%ymm27
   36a33:	62 51 b5 20 ef d1    	vpxorq %ymm9,%ymm25,%ymm10
   36a39:	62 91 f5 28 eb cb    	vporq  %ymm27,%ymm1,%ymm1
   36a3f:	62 61 b5 20 ef ca    	vpxorq %ymm2,%ymm25,%ymm25
   36a45:	62 f1 ad 20 eb c9    	vporq  %ymm1,%ymm26,%ymm1
   36a4b:	62 61 ad 28 d4 d0    	vpaddq %ymm0,%ymm10,%ymm26
   36a51:	62 11 ad 28 df d2    	vpandnq %ymm26,%ymm10,%ymm10
   36a57:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   36a5d:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   36a63:	62 b1 3d 00 73 dd 08 	vpsrldq $0x8,%xmm21,%xmm24
   36a6a:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   36a71:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   36a78:	62 41 b5 20 db cb    	vpandq %ymm11,%ymm25,%ymm25
   36a7e:	62 b1 45 00 73 dc 08 	vpsrldq $0x8,%xmm20,%xmm23
   36a85:	62 31 ad 28 db d2    	vpandq %ymm18,%ymm10,%ymm10
   36a8b:	62 81 d5 00 eb e8    	vporq  %xmm24,%xmm21,%xmm21
   36a91:	41 83 e4 07          	and    $0x7,%r12d
   36a95:	62 11 ad 28 eb d1    	vporq  %ymm25,%ymm10,%ymm10
   36a9b:	62 e1 fd 08 7e ea    	vmovq  %xmm21,%rdx
   36aa1:	41 c1 e4 03          	shl    $0x3,%r12d
   36aa5:	62 a1 dd 00 eb e7    	vporq  %xmm23,%xmm20,%xmm20
   36aab:	83 e3 07             	and    $0x7,%ebx
   36aae:	c4 c1 75 eb ca       	vpor   %ymm10,%ymm1,%ymm1
   36ab3:	c4 62 9b f7 e2       	shrx   %r12,%rdx,%r12
   36ab8:	c1 e3 03             	shl    $0x3,%ebx
   36abb:	62 e1 fd 08 7e e2    	vmovq  %xmm20,%rdx
   36ac1:	c4 e2 e3 f7 da       	shrx   %rbx,%rdx,%rbx
   36ac6:	62 93 7d 48 39 c9 01 	vextracti32x4 $0x1,%zmm1,%xmm25
   36acd:	0f b6 db             	movzbl %bl,%ebx
   36ad0:	62 f1 b5 00 eb c9    	vporq  %xmm1,%xmm25,%xmm1
   36ad6:	41 c1 e4 18          	shl    $0x18,%r12d
   36ada:	c1 e3 10             	shl    $0x10,%ebx
   36add:	44 09 e3             	or     %r12d,%ebx
   36ae0:	c5 a9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm10
   36ae5:	41 89 c4             	mov    %eax,%r12d
   36ae8:	c4 c1 71 eb ca       	vpor   %xmm10,%xmm1,%xmm1
   36aed:	41 83 e4 07          	and    $0x7,%r12d
   36af1:	62 b1 4d 00 73 db 08 	vpsrldq $0x8,%xmm19,%xmm22
   36af8:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
   36afd:	41 c1 e4 03          	shl    $0x3,%r12d
   36b01:	c4 e2 9b f7 d2       	shrx   %r12,%rdx,%rdx
   36b06:	62 a1 e5 00 eb de    	vporq  %xmm22,%xmm19,%xmm19
   36b0c:	0f b6 d2             	movzbl %dl,%edx
   36b0f:	83 e1 07             	and    $0x7,%ecx
   36b12:	09 d3                	or     %edx,%ebx
   36b14:	c1 e1 03             	shl    $0x3,%ecx
   36b17:	62 e1 fd 08 7e da    	vmovq  %xmm19,%rdx
   36b1d:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   36b22:	0f b6 d2             	movzbl %dl,%edx
   36b25:	c1 e2 08             	shl    $0x8,%edx
   36b28:	09 d3                	or     %edx,%ebx
   36b2a:	48 63 4c 24 f8       	movslq -0x8(%rsp),%rcx
   36b2f:	41 31 de             	xor    %ebx,%r14d
   36b32:	45 31 f3             	xor    %r14d,%r11d
   36b35:	45 31 df             	xor    %r11d,%r15d
   36b38:	48 89 cb             	mov    %rcx,%rbx
   36b3b:	48 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%rdx
   36b42:	00 
   36b43:	44 31 fe             	xor    %r15d,%esi
   36b46:	83 c3 08             	add    $0x8,%ebx
   36b49:	45 89 14 89          	mov    %r10d,(%r9,%rcx,4)
   36b4d:	89 5c 24 f8          	mov    %ebx,-0x8(%rsp)
   36b51:	45 89 44 11 04       	mov    %r8d,0x4(%r9,%rdx,1)
   36b56:	41 89 7c 11 08       	mov    %edi,0x8(%r9,%rdx,1)
   36b5b:	41 89 44 11 0c       	mov    %eax,0xc(%r9,%rdx,1)
   36b60:	45 89 74 11 10       	mov    %r14d,0x10(%r9,%rdx,1)
   36b65:	45 89 5c 11 14       	mov    %r11d,0x14(%r9,%rdx,1)
   36b6a:	45 89 7c 11 18       	mov    %r15d,0x18(%r9,%rdx,1)
   36b6f:	41 89 74 11 1c       	mov    %esi,0x1c(%r9,%rdx,1)
   36b74:	39 5c 24 fc          	cmp    %ebx,-0x4(%rsp)
   36b78:	0f 8f 82 f4 ff ff    	jg     36000 <k0_ExpandRijndaelKey+0x160>
   36b7e:	4c 8b 7d 10          	mov    0x10(%rbp),%r15
   36b82:	8b 74 24 fc          	mov    -0x4(%rsp),%esi
   36b86:	c1 e6 02             	shl    $0x2,%esi
   36b89:	85 f6                	test   %esi,%esi
   36b8b:	7e 65                	jle    36bf2 <k0_ExpandRijndaelKey+0xd52>
   36b8d:	49 8d 47 20          	lea    0x20(%r15),%rax
   36b91:	49 39 c1             	cmp    %rax,%r9
   36b94:	49 8d 41 20          	lea    0x20(%r9),%rax
   36b98:	0f 93 c1             	setae  %cl
   36b9b:	49 39 c7             	cmp    %rax,%r15
   36b9e:	0f 93 c0             	setae  %al
   36ba1:	08 c1                	or     %al,%cl
   36ba3:	8d 56 ff             	lea    -0x1(%rsi),%edx
   36ba6:	0f 84 1c 13 00 00    	je     37ec8 <k0_ExpandRijndaelKey+0x2028>
   36bac:	83 fa 1e             	cmp    $0x1e,%edx
   36baf:	0f 86 13 13 00 00    	jbe    37ec8 <k0_ExpandRijndaelKey+0x2028>
   36bb5:	89 f2                	mov    %esi,%edx
   36bb7:	c1 ea 05             	shr    $0x5,%edx
   36bba:	48 c1 e2 05          	shl    $0x5,%rdx
   36bbe:	31 c0                	xor    %eax,%eax
   36bc0:	62 41 7f 28 6f 3c 01 	vmovdqu8 (%r9,%rax,1),%ymm31
   36bc7:	62 41 7f 28 7f 3c 07 	vmovdqu8 %ymm31,(%r15,%rax,1)
   36bce:	48 83 c0 20          	add    $0x20,%rax
   36bd2:	48 39 d0             	cmp    %rdx,%rax
   36bd5:	75 e9                	jne    36bc0 <k0_ExpandRijndaelKey+0xd20>
   36bd7:	89 f0                	mov    %esi,%eax
   36bd9:	83 e0 e0             	and    $0xffffffe0,%eax
   36bdc:	39 f0                	cmp    %esi,%eax
   36bde:	74 12                	je     36bf2 <k0_ExpandRijndaelKey+0xd52>
   36be0:	48 63 d0             	movslq %eax,%rdx
   36be3:	41 0f b6 0c 11       	movzbl (%r9,%rdx,1),%ecx
   36be8:	ff c0                	inc    %eax
   36bea:	41 88 0c 17          	mov    %cl,(%r15,%rdx,1)
   36bee:	39 c6                	cmp    %eax,%esi
   36bf0:	7f ee                	jg     36be0 <k0_ExpandRijndaelKey+0xd40>
   36bf2:	8b 4c 24 e8          	mov    -0x18(%rsp),%ecx
   36bf6:	8b 44 24 ec          	mov    -0x14(%rsp),%eax
   36bfa:	0f af c8             	imul   %eax,%ecx
   36bfd:	39 c1                	cmp    %eax,%ecx
   36bff:	0f 8e 0c 06 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   36c05:	89 cf                	mov    %ecx,%edi
   36c07:	29 c7                	sub    %eax,%edi
   36c09:	89 c6                	mov    %eax,%esi
   36c0b:	8d 47 ff             	lea    -0x1(%rdi),%eax
   36c0e:	83 f8 06             	cmp    $0x6,%eax
   36c11:	0f 86 1a 01 00 00    	jbe    36d31 <k0_ExpandRijndaelKey+0xe91>
   36c17:	48 63 c6             	movslq %esi,%rax
   36c1a:	89 fe                	mov    %edi,%esi
   36c1c:	c1 ee 03             	shr    $0x3,%esi
   36c1f:	62 71 fd 28 6f 05 17 	vmovdqa64 0x8017(%rip),%ymm8        # 3ec40 <RconTbl+0x80>
   36c26:	80 00 00 
   36c29:	62 f1 fd 28 6f 3d 2d 	vmovdqa64 0x802d(%rip),%ymm7        # 3ec60 <RconTbl+0xa0>
   36c30:	80 00 00 
   36c33:	62 f1 fd 28 6f 35 43 	vmovdqa64 0x8043(%rip),%ymm6        # 3ec80 <RconTbl+0xc0>
   36c3a:	80 00 00 
   36c3d:	49 8d 14 87          	lea    (%r15,%rax,4),%rdx
   36c41:	48 c1 e6 05          	shl    $0x5,%rsi
   36c45:	31 c0                	xor    %eax,%eax
   36c47:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36c4e:	00 00 00 00 
   36c52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36c59:	00 00 00 00 
   36c5d:	0f 1f 00             	nopl   (%rax)
   36c60:	62 f1 7e 28 6f 1c 02 	vmovdqu32 (%rdx,%rax,1),%ymm3
   36c67:	c4 c1 65 db c8       	vpand  %ymm8,%ymm3,%ymm1
   36c6c:	c5 fd 72 f1 01       	vpslld $0x1,%ymm1,%ymm0
   36c71:	c5 f5 72 d1 07       	vpsrld $0x7,%ymm1,%ymm1
   36c76:	c5 fd fa c1          	vpsubd %ymm1,%ymm0,%ymm0
   36c7a:	c5 ed 72 f3 01       	vpslld $0x1,%ymm3,%ymm2
   36c7f:	c5 fd db c7          	vpand  %ymm7,%ymm0,%ymm0
   36c83:	c5 ed db d6          	vpand  %ymm6,%ymm2,%ymm2
   36c87:	c5 fd ef d2          	vpxor  %ymm2,%ymm0,%ymm2
   36c8b:	c4 c1 6d db c8       	vpand  %ymm8,%ymm2,%ymm1
   36c90:	c5 fd 72 f1 01       	vpslld $0x1,%ymm1,%ymm0
   36c95:	c5 f5 72 d1 07       	vpsrld $0x7,%ymm1,%ymm1
   36c9a:	c5 fd fa c1          	vpsubd %ymm1,%ymm0,%ymm0
   36c9e:	c5 dd 72 f2 01       	vpslld $0x1,%ymm2,%ymm4
   36ca3:	c5 fd db c7          	vpand  %ymm7,%ymm0,%ymm0
   36ca7:	c5 dd db e6          	vpand  %ymm6,%ymm4,%ymm4
   36cab:	c5 fd ef e4          	vpxor  %ymm4,%ymm0,%ymm4
   36caf:	c4 c1 5d db c0       	vpand  %ymm8,%ymm4,%ymm0
   36cb4:	c5 f5 72 f0 01       	vpslld $0x1,%ymm0,%ymm1
   36cb9:	c5 fd 72 d0 07       	vpsrld $0x7,%ymm0,%ymm0
   36cbe:	c5 f5 fa c8          	vpsubd %ymm0,%ymm1,%ymm1
   36cc2:	c5 fd 72 f4 01       	vpslld $0x1,%ymm4,%ymm0
   36cc7:	c5 f5 db cf          	vpand  %ymm7,%ymm1,%ymm1
   36ccb:	c5 fd db c6          	vpand  %ymm6,%ymm0,%ymm0
   36ccf:	c5 f5 ef c0          	vpxor  %ymm0,%ymm1,%ymm0
   36cd3:	c5 ed ef eb          	vpxor  %ymm3,%ymm2,%ymm5
   36cd7:	c5 fd ef cb          	vpxor  %ymm3,%ymm0,%ymm1
   36cdb:	c5 d5 ef e8          	vpxor  %ymm0,%ymm5,%ymm5
   36cdf:	62 f1 75 28 72 c9 08 	vprold $0x8,%ymm1,%ymm1
   36ce6:	c5 fd ef c4          	vpxor  %ymm4,%ymm0,%ymm0
   36cea:	62 f1 5d 28 72 c5 08 	vprord $0x8,%ymm5,%ymm4
   36cf1:	c5 fd ef db          	vpxor  %ymm3,%ymm0,%ymm3
   36cf5:	62 f1 65 28 72 cb 10 	vprold $0x10,%ymm3,%ymm3
   36cfc:	c5 fd ef c2          	vpxor  %ymm2,%ymm0,%ymm0
   36d00:	c5 f5 ef cc          	vpxor  %ymm4,%ymm1,%ymm1
   36d04:	c5 f5 ef c0          	vpxor  %ymm0,%ymm1,%ymm0
   36d08:	c5 fd ef c3          	vpxor  %ymm3,%ymm0,%ymm0
   36d0c:	62 f1 7e 28 7f 04 02 	vmovdqu32 %ymm0,(%rdx,%rax,1)
   36d13:	48 83 c0 20          	add    $0x20,%rax
   36d17:	48 39 c6             	cmp    %rax,%rsi
   36d1a:	0f 85 40 ff ff ff    	jne    36c60 <k0_ExpandRijndaelKey+0xdc0>
   36d20:	89 f8                	mov    %edi,%eax
   36d22:	83 e0 f8             	and    $0xfffffff8,%eax
   36d25:	01 44 24 ec          	add    %eax,-0x14(%rsp)
   36d29:	39 f8                	cmp    %edi,%eax
   36d2b:	0f 84 e0 04 00 00    	je     37211 <k0_ExpandRijndaelKey+0x1371>
   36d31:	48 63 44 24 ec       	movslq -0x14(%rsp),%rax
   36d36:	49 8d 3c 87          	lea    (%r15,%rax,4),%rdi
   36d3a:	44 8b 07             	mov    (%rdi),%r8d
   36d3d:	48 89 c3             	mov    %rax,%rbx
   36d40:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   36d44:	44 89 c0             	mov    %r8d,%eax
   36d47:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   36d4d:	25 80 80 80 80       	and    $0x80808080,%eax
   36d52:	89 f2                	mov    %esi,%edx
   36d54:	8d 34 00             	lea    (%rax,%rax,1),%esi
   36d57:	c1 e8 07             	shr    $0x7,%eax
   36d5a:	29 c6                	sub    %eax,%esi
   36d5c:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   36d62:	31 d6                	xor    %edx,%esi
   36d64:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   36d67:	89 f2                	mov    %esi,%edx
   36d69:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   36d6e:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   36d74:	41 89 c1             	mov    %eax,%r9d
   36d77:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   36d7a:	c1 ea 07             	shr    $0x7,%edx
   36d7d:	29 d0                	sub    %edx,%eax
   36d7f:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   36d84:	44 31 c8             	xor    %r9d,%eax
   36d87:	8d 14 00             	lea    (%rax,%rax,1),%edx
   36d8a:	41 89 c1             	mov    %eax,%r9d
   36d8d:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   36d93:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   36d9a:	41 89 d2             	mov    %edx,%r10d
   36d9d:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   36da1:	41 c1 e9 07          	shr    $0x7,%r9d
   36da5:	44 29 ca             	sub    %r9d,%edx
   36da8:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   36dae:	44 31 d2             	xor    %r10d,%edx
   36db1:	41 89 f1             	mov    %esi,%r9d
   36db4:	31 d0                	xor    %edx,%eax
   36db6:	45 31 c1             	xor    %r8d,%r9d
   36db9:	41 31 d1             	xor    %edx,%r9d
   36dbc:	31 c6                	xor    %eax,%esi
   36dbe:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   36dc4:	44 31 c2             	xor    %r8d,%edx
   36dc7:	44 31 ce             	xor    %r9d,%esi
   36dca:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   36dd0:	44 31 c0             	xor    %r8d,%eax
   36dd3:	31 f2                	xor    %esi,%edx
   36dd5:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   36ddb:	31 c2                	xor    %eax,%edx
   36ddd:	8d 43 01             	lea    0x1(%rbx),%eax
   36de0:	89 17                	mov    %edx,(%rdi)
   36de2:	39 c1                	cmp    %eax,%ecx
   36de4:	0f 8e 27 04 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   36dea:	48 98                	cltq   
   36dec:	49 8d 3c 87          	lea    (%r15,%rax,4),%rdi
   36df0:	44 8b 07             	mov    (%rdi),%r8d
   36df3:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   36df7:	44 89 c0             	mov    %r8d,%eax
   36dfa:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   36e00:	25 80 80 80 80       	and    $0x80808080,%eax
   36e05:	89 f2                	mov    %esi,%edx
   36e07:	8d 34 00             	lea    (%rax,%rax,1),%esi
   36e0a:	c1 e8 07             	shr    $0x7,%eax
   36e0d:	29 c6                	sub    %eax,%esi
   36e0f:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   36e15:	31 d6                	xor    %edx,%esi
   36e17:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   36e1a:	89 f2                	mov    %esi,%edx
   36e1c:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   36e21:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   36e27:	41 89 c1             	mov    %eax,%r9d
   36e2a:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   36e2d:	c1 ea 07             	shr    $0x7,%edx
   36e30:	29 d0                	sub    %edx,%eax
   36e32:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   36e37:	44 31 c8             	xor    %r9d,%eax
   36e3a:	8d 14 00             	lea    (%rax,%rax,1),%edx
   36e3d:	41 89 c1             	mov    %eax,%r9d
   36e40:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   36e46:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   36e4d:	41 89 d2             	mov    %edx,%r10d
   36e50:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   36e54:	41 c1 e9 07          	shr    $0x7,%r9d
   36e58:	44 29 ca             	sub    %r9d,%edx
   36e5b:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   36e61:	44 31 d2             	xor    %r10d,%edx
   36e64:	45 89 c1             	mov    %r8d,%r9d
   36e67:	31 d0                	xor    %edx,%eax
   36e69:	41 31 f1             	xor    %esi,%r9d
   36e6c:	41 31 d1             	xor    %edx,%r9d
   36e6f:	31 c6                	xor    %eax,%esi
   36e71:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   36e77:	44 31 c2             	xor    %r8d,%edx
   36e7a:	44 31 ce             	xor    %r9d,%esi
   36e7d:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   36e83:	44 31 c0             	xor    %r8d,%eax
   36e86:	31 f2                	xor    %esi,%edx
   36e88:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   36e8e:	31 c2                	xor    %eax,%edx
   36e90:	8d 43 02             	lea    0x2(%rbx),%eax
   36e93:	89 17                	mov    %edx,(%rdi)
   36e95:	39 c1                	cmp    %eax,%ecx
   36e97:	0f 8e 74 03 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   36e9d:	48 98                	cltq   
   36e9f:	49 8d 3c 87          	lea    (%r15,%rax,4),%rdi
   36ea3:	44 8b 07             	mov    (%rdi),%r8d
   36ea6:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   36eaa:	44 89 c0             	mov    %r8d,%eax
   36ead:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   36eb3:	25 80 80 80 80       	and    $0x80808080,%eax
   36eb8:	89 f2                	mov    %esi,%edx
   36eba:	8d 34 00             	lea    (%rax,%rax,1),%esi
   36ebd:	c1 e8 07             	shr    $0x7,%eax
   36ec0:	29 c6                	sub    %eax,%esi
   36ec2:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   36ec8:	31 d6                	xor    %edx,%esi
   36eca:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   36ecd:	89 f2                	mov    %esi,%edx
   36ecf:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   36ed4:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   36eda:	41 89 c1             	mov    %eax,%r9d
   36edd:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   36ee0:	c1 ea 07             	shr    $0x7,%edx
   36ee3:	29 d0                	sub    %edx,%eax
   36ee5:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   36eea:	44 31 c8             	xor    %r9d,%eax
   36eed:	8d 14 00             	lea    (%rax,%rax,1),%edx
   36ef0:	41 89 c1             	mov    %eax,%r9d
   36ef3:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   36ef9:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   36f00:	41 89 d2             	mov    %edx,%r10d
   36f03:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   36f07:	41 c1 e9 07          	shr    $0x7,%r9d
   36f0b:	44 29 ca             	sub    %r9d,%edx
   36f0e:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   36f14:	44 31 d2             	xor    %r10d,%edx
   36f17:	45 89 c1             	mov    %r8d,%r9d
   36f1a:	31 d0                	xor    %edx,%eax
   36f1c:	41 31 f1             	xor    %esi,%r9d
   36f1f:	41 31 d1             	xor    %edx,%r9d
   36f22:	31 c6                	xor    %eax,%esi
   36f24:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   36f2a:	44 31 c2             	xor    %r8d,%edx
   36f2d:	44 31 ce             	xor    %r9d,%esi
   36f30:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   36f36:	44 31 c0             	xor    %r8d,%eax
   36f39:	31 f2                	xor    %esi,%edx
   36f3b:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   36f41:	31 c2                	xor    %eax,%edx
   36f43:	8d 43 03             	lea    0x3(%rbx),%eax
   36f46:	89 17                	mov    %edx,(%rdi)
   36f48:	39 c1                	cmp    %eax,%ecx
   36f4a:	0f 8e c1 02 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   36f50:	48 98                	cltq   
   36f52:	49 8d 3c 87          	lea    (%r15,%rax,4),%rdi
   36f56:	44 8b 07             	mov    (%rdi),%r8d
   36f59:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   36f5d:	44 89 c0             	mov    %r8d,%eax
   36f60:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   36f66:	25 80 80 80 80       	and    $0x80808080,%eax
   36f6b:	89 f2                	mov    %esi,%edx
   36f6d:	8d 34 00             	lea    (%rax,%rax,1),%esi
   36f70:	c1 e8 07             	shr    $0x7,%eax
   36f73:	29 c6                	sub    %eax,%esi
   36f75:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   36f7b:	31 d6                	xor    %edx,%esi
   36f7d:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   36f80:	89 f2                	mov    %esi,%edx
   36f82:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   36f87:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   36f8d:	41 89 c1             	mov    %eax,%r9d
   36f90:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   36f93:	c1 ea 07             	shr    $0x7,%edx
   36f96:	29 d0                	sub    %edx,%eax
   36f98:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   36f9d:	44 31 c8             	xor    %r9d,%eax
   36fa0:	8d 14 00             	lea    (%rax,%rax,1),%edx
   36fa3:	41 89 c1             	mov    %eax,%r9d
   36fa6:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   36fac:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   36fb3:	41 89 d2             	mov    %edx,%r10d
   36fb6:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   36fba:	41 c1 e9 07          	shr    $0x7,%r9d
   36fbe:	44 29 ca             	sub    %r9d,%edx
   36fc1:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   36fc7:	44 31 d2             	xor    %r10d,%edx
   36fca:	41 89 f1             	mov    %esi,%r9d
   36fcd:	31 d0                	xor    %edx,%eax
   36fcf:	45 31 c1             	xor    %r8d,%r9d
   36fd2:	41 31 d1             	xor    %edx,%r9d
   36fd5:	31 c6                	xor    %eax,%esi
   36fd7:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   36fdd:	44 31 c2             	xor    %r8d,%edx
   36fe0:	44 31 ce             	xor    %r9d,%esi
   36fe3:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   36fe9:	44 31 c0             	xor    %r8d,%eax
   36fec:	31 f2                	xor    %esi,%edx
   36fee:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   36ff4:	31 c2                	xor    %eax,%edx
   36ff6:	8d 43 04             	lea    0x4(%rbx),%eax
   36ff9:	89 17                	mov    %edx,(%rdi)
   36ffb:	39 c1                	cmp    %eax,%ecx
   36ffd:	0f 8e 0e 02 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   37003:	48 98                	cltq   
   37005:	49 8d 3c 87          	lea    (%r15,%rax,4),%rdi
   37009:	44 8b 07             	mov    (%rdi),%r8d
   3700c:	43 8d 34 00          	lea    (%r8,%r8,1),%esi
   37010:	44 89 c0             	mov    %r8d,%eax
   37013:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   37019:	25 80 80 80 80       	and    $0x80808080,%eax
   3701e:	89 f2                	mov    %esi,%edx
   37020:	8d 34 00             	lea    (%rax,%rax,1),%esi
   37023:	c1 e8 07             	shr    $0x7,%eax
   37026:	29 c6                	sub    %eax,%esi
   37028:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   3702e:	31 d6                	xor    %edx,%esi
   37030:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   37033:	89 f2                	mov    %esi,%edx
   37035:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   3703a:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   37040:	41 89 c1             	mov    %eax,%r9d
   37043:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   37046:	c1 ea 07             	shr    $0x7,%edx
   37049:	29 d0                	sub    %edx,%eax
   3704b:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   37050:	44 31 c8             	xor    %r9d,%eax
   37053:	8d 14 00             	lea    (%rax,%rax,1),%edx
   37056:	41 89 c1             	mov    %eax,%r9d
   37059:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   3705f:	41 81 e1 80 80 80 80 	and    $0x80808080,%r9d
   37066:	41 89 d2             	mov    %edx,%r10d
   37069:	43 8d 14 09          	lea    (%r9,%r9,1),%edx
   3706d:	41 c1 e9 07          	shr    $0x7,%r9d
   37071:	44 29 ca             	sub    %r9d,%edx
   37074:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   3707a:	44 31 d2             	xor    %r10d,%edx
   3707d:	41 89 f1             	mov    %esi,%r9d
   37080:	31 d0                	xor    %edx,%eax
   37082:	45 31 c1             	xor    %r8d,%r9d
   37085:	41 31 d1             	xor    %edx,%r9d
   37088:	31 c6                	xor    %eax,%esi
   3708a:	c4 43 7b f0 c9 08    	rorx   $0x8,%r9d,%r9d
   37090:	44 31 c2             	xor    %r8d,%edx
   37093:	44 31 ce             	xor    %r9d,%esi
   37096:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   3709c:	44 31 c0             	xor    %r8d,%eax
   3709f:	31 f2                	xor    %esi,%edx
   370a1:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   370a7:	31 c2                	xor    %eax,%edx
   370a9:	8d 43 05             	lea    0x5(%rbx),%eax
   370ac:	89 17                	mov    %edx,(%rdi)
   370ae:	39 c1                	cmp    %eax,%ecx
   370b0:	0f 8e 5b 01 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   370b6:	48 98                	cltq   
   370b8:	49 8d 34 87          	lea    (%r15,%rax,4),%rsi
   370bc:	8b 3e                	mov    (%rsi),%edi
   370be:	89 f8                	mov    %edi,%eax
   370c0:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
   370c4:	25 80 80 80 80       	and    $0x80808080,%eax
   370c9:	44 89 ca             	mov    %r9d,%edx
   370cc:	44 8d 0c 00          	lea    (%rax,%rax,1),%r9d
   370d0:	c1 e8 07             	shr    $0x7,%eax
   370d3:	41 29 c1             	sub    %eax,%r9d
   370d6:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   370dc:	41 81 e1 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r9d
   370e3:	41 31 d1             	xor    %edx,%r9d
   370e6:	44 89 c8             	mov    %r9d,%eax
   370e9:	47 8d 04 09          	lea    (%r9,%r9,1),%r8d
   370ed:	25 80 80 80 80       	and    $0x80808080,%eax
   370f2:	44 89 c2             	mov    %r8d,%edx
   370f5:	44 8d 04 00          	lea    (%rax,%rax,1),%r8d
   370f9:	c1 e8 07             	shr    $0x7,%eax
   370fc:	41 29 c0             	sub    %eax,%r8d
   370ff:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   37105:	41 81 e0 1b 1b 1b 1b 	and    $0x1b1b1b1b,%r8d
   3710c:	41 31 d0             	xor    %edx,%r8d
   3710f:	43 8d 04 00          	lea    (%r8,%r8,1),%eax
   37113:	44 89 c2             	mov    %r8d,%edx
   37116:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   3711b:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   37121:	41 89 c2             	mov    %eax,%r10d
   37124:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   37127:	c1 ea 07             	shr    $0x7,%edx
   3712a:	29 d0                	sub    %edx,%eax
   3712c:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   37131:	44 31 d0             	xor    %r10d,%eax
   37134:	89 fa                	mov    %edi,%edx
   37136:	41 31 c0             	xor    %eax,%r8d
   37139:	44 31 ca             	xor    %r9d,%edx
   3713c:	31 c2                	xor    %eax,%edx
   3713e:	45 31 c1             	xor    %r8d,%r9d
   37141:	31 f8                	xor    %edi,%eax
   37143:	c4 e3 7b f0 d2 08    	rorx   $0x8,%edx,%edx
   37149:	44 31 ca             	xor    %r9d,%edx
   3714c:	c4 e3 7b f0 c0 18    	rorx   $0x18,%eax,%eax
   37152:	44 31 c7             	xor    %r8d,%edi
   37155:	31 d0                	xor    %edx,%eax
   37157:	c4 e3 7b f0 d7 10    	rorx   $0x10,%edi,%edx
   3715d:	31 d0                	xor    %edx,%eax
   3715f:	89 06                	mov    %eax,(%rsi)
   37161:	89 d8                	mov    %ebx,%eax
   37163:	83 c0 06             	add    $0x6,%eax
   37166:	39 c1                	cmp    %eax,%ecx
   37168:	0f 8e a3 00 00 00    	jle    37211 <k0_ExpandRijndaelKey+0x1371>
   3716e:	48 98                	cltq   
   37170:	49 8d 0c 87          	lea    (%r15,%rax,4),%rcx
   37174:	8b 39                	mov    (%rcx),%edi
   37176:	8d 34 3f             	lea    (%rdi,%rdi,1),%esi
   37179:	89 f8                	mov    %edi,%eax
   3717b:	81 e6 fe fe fe fe    	and    $0xfefefefe,%esi
   37181:	25 80 80 80 80       	and    $0x80808080,%eax
   37186:	89 f2                	mov    %esi,%edx
   37188:	8d 34 00             	lea    (%rax,%rax,1),%esi
   3718b:	c1 e8 07             	shr    $0x7,%eax
   3718e:	29 c6                	sub    %eax,%esi
   37190:	81 e6 1b 1b 1b 1b    	and    $0x1b1b1b1b,%esi
   37196:	31 d6                	xor    %edx,%esi
   37198:	8d 04 36             	lea    (%rsi,%rsi,1),%eax
   3719b:	89 f2                	mov    %esi,%edx
   3719d:	25 fe fe fe fe       	and    $0xfefefefe,%eax
   371a2:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   371a8:	41 89 c0             	mov    %eax,%r8d
   371ab:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   371ae:	c1 ea 07             	shr    $0x7,%edx
   371b1:	29 d0                	sub    %edx,%eax
   371b3:	25 1b 1b 1b 1b       	and    $0x1b1b1b1b,%eax
   371b8:	44 31 c0             	xor    %r8d,%eax
   371bb:	8d 14 00             	lea    (%rax,%rax,1),%edx
   371be:	41 89 c0             	mov    %eax,%r8d
   371c1:	81 e2 fe fe fe fe    	and    $0xfefefefe,%edx
   371c7:	41 81 e0 80 80 80 80 	and    $0x80808080,%r8d
   371ce:	41 89 d1             	mov    %edx,%r9d
   371d1:	43 8d 14 00          	lea    (%r8,%r8,1),%edx
   371d5:	41 c1 e8 07          	shr    $0x7,%r8d
   371d9:	44 29 c2             	sub    %r8d,%edx
   371dc:	81 e2 1b 1b 1b 1b    	and    $0x1b1b1b1b,%edx
   371e2:	44 31 ca             	xor    %r9d,%edx
   371e5:	41 89 f0             	mov    %esi,%r8d
   371e8:	31 d0                	xor    %edx,%eax
   371ea:	41 31 f8             	xor    %edi,%r8d
   371ed:	41 31 d0             	xor    %edx,%r8d
   371f0:	31 c6                	xor    %eax,%esi
   371f2:	c4 43 7b f0 c0 08    	rorx   $0x8,%r8d,%r8d
   371f8:	31 fa                	xor    %edi,%edx
   371fa:	44 31 c6             	xor    %r8d,%esi
   371fd:	c4 e3 7b f0 d2 18    	rorx   $0x18,%edx,%edx
   37203:	31 f8                	xor    %edi,%eax
   37205:	31 f2                	xor    %esi,%edx
   37207:	c4 e3 7b f0 c0 10    	rorx   $0x10,%eax,%eax
   3720d:	31 d0                	xor    %edx,%eax
   3720f:	89 01                	mov    %eax,(%rcx)
   37211:	c5 f8 77             	vzeroupper 
   37214:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   37218:	5b                   	pop    %rbx
   37219:	41 5c                	pop    %r12
   3721b:	41 5d                	pop    %r13
   3721d:	41 5e                	pop    %r14
   3721f:	41 5f                	pop    %r15
   37221:	5d                   	pop    %rbp
   37222:	c3                   	retq   
   37223:	83 7c 24 fc 06       	cmpl   $0x6,-0x4(%rsp)
   37228:	0f 8e 54 f9 ff ff    	jle    36b82 <k0_ExpandRijndaelKey+0xce2>
   3722e:	48 8d 15 0b 7c 00 00 	lea    0x7c0b(%rip),%rdx        # 3ee40 <RijEncSbox>
   37235:	48 8d 1d 84 7a 00 00 	lea    0x7a84(%rip),%rbx        # 3ecc0 <RconTbl>
   3723c:	62 e1 fd 28 6f 2a    	vmovdqa64 (%rdx),%ymm21
   37242:	62 e1 fd 28 6f 62 01 	vmovdqa64 0x20(%rdx),%ymm20
   37249:	62 e1 fd 28 6f 5a 02 	vmovdqa64 0x40(%rdx),%ymm19
   37250:	62 e1 fd 28 6f 52 03 	vmovdqa64 0x60(%rdx),%ymm18
   37257:	62 e1 fd 28 6f 4a 04 	vmovdqa64 0x80(%rdx),%ymm17
   3725e:	62 e1 fd 28 6f 42 05 	vmovdqa64 0xa0(%rdx),%ymm16
   37265:	62 71 fd 28 6f 7a 06 	vmovdqa64 0xc0(%rdx),%ymm15
   3726c:	62 71 fd 28 6f 72 07 	vmovdqa64 0xe0(%rdx),%ymm14
   37273:	62 71 fd 28 6f 0d c3 	vmovdqa64 0x7ac3(%rip),%ymm9        # 3ed40 <RconTbl+0x80>
   3727a:	7a 00 00 
   3727d:	62 71 fd 28 6f 05 d9 	vmovdqa64 0x7ad9(%rip),%ymm8        # 3ed60 <RconTbl+0xa0>
   37284:	7a 00 00 
   37287:	62 f1 fd 28 6f 3d ef 	vmovdqa64 0x7aef(%rip),%ymm7        # 3ed80 <RconTbl+0xc0>
   3728e:	7a 00 00 
   37291:	62 f1 fd 28 6f 35 05 	vmovdqa64 0x7b05(%rip),%ymm6        # 3eda0 <RconTbl+0xe0>
   37298:	7b 00 00 
   3729b:	62 f1 fd 28 6f 2d 1b 	vmovdqa64 0x7b1b(%rip),%ymm5        # 3edc0 <RconTbl+0x100>
   372a2:	7b 00 00 
   372a5:	62 f1 fd 28 6f 25 31 	vmovdqa64 0x7b31(%rip),%ymm4        # 3ede0 <RconTbl+0x120>
   372ac:	7b 00 00 
   372af:	62 f1 fd 28 6f 1d 47 	vmovdqa64 0x7b47(%rip),%ymm3        # 3ee00 <RconTbl+0x140>
   372b6:	7b 00 00 
   372b9:	62 f1 fd 28 6f 15 5d 	vmovdqa64 0x7b5d(%rip),%ymm2        # 3ee20 <RconTbl+0x160>
   372c0:	7b 00 00 
   372c3:	4c 89 7d 10          	mov    %r15,0x10(%rbp)
   372c7:	c5 fd 76 c0          	vpcmpeqd %ymm0,%ymm0,%ymm0
   372cb:	49 89 df             	mov    %rbx,%r15
   372ce:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   372d5:	00 00 00 00 
   372d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   372e0:	44 89 da             	mov    %r11d,%edx
   372e3:	c0 ea 03             	shr    $0x3,%dl
   372e6:	0f b6 d2             	movzbl %dl,%edx
   372e9:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   372ef:	62 61 f5 28 ef cf    	vpxorq %ymm7,%ymm1,%ymm25
   372f5:	62 41 f5 28 ef c0    	vpxorq %ymm8,%ymm1,%ymm24
   372fb:	62 e1 f5 28 ef f3    	vpxorq %ymm3,%ymm1,%ymm22
   37301:	c5 75 ef ea          	vpxor  %ymm2,%ymm1,%ymm13
   37305:	c4 41 75 ef d1       	vpxor  %ymm9,%ymm1,%ymm10
   3730a:	62 e1 f5 28 ef fe    	vpxorq %ymm6,%ymm1,%ymm23
   37310:	c5 75 ef e5          	vpxor  %ymm5,%ymm1,%ymm12
   37314:	c5 75 ef dc          	vpxor  %ymm4,%ymm1,%ymm11
   37318:	62 f1 b5 20 d4 c8    	vpaddq %ymm0,%ymm25,%ymm1
   3731e:	62 61 b5 20 df c9    	vpandnq %ymm1,%ymm25,%ymm25
   37324:	62 91 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm1
   3732b:	62 21 f5 28 db cb    	vpandq %ymm19,%ymm1,%ymm25
   37331:	62 f1 bd 20 d4 c8    	vpaddq %ymm0,%ymm24,%ymm1
   37337:	62 f1 bd 20 df c9    	vpandnq %ymm1,%ymm24,%ymm1
   3733d:	62 61 9d 28 d4 c0    	vpaddq %ymm0,%ymm12,%ymm24
   37343:	62 11 9d 28 df e0    	vpandnq %ymm24,%ymm12,%ymm12
   37349:	62 61 c5 20 d4 c0    	vpaddq %ymm0,%ymm23,%ymm24
   3734f:	62 81 c5 20 df f8    	vpandnq %ymm24,%ymm23,%ymm23
   37355:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   3735c:	62 d1 9d 28 72 e4 3f 	vpsraq $0x3f,%ymm12,%ymm12
   37363:	62 b1 c5 20 72 e7 3f 	vpsraq $0x3f,%ymm23,%ymm23
   3736a:	62 a1 c5 20 db fa    	vpandq %ymm18,%ymm23,%ymm23
   37370:	62 b1 f5 28 db cc    	vpandq %ymm20,%ymm1,%ymm1
   37376:	62 31 9d 28 db e1    	vpandq %ymm17,%ymm12,%ymm12
   3737c:	62 31 9d 28 eb e7    	vporq  %ymm23,%ymm12,%ymm12
   37382:	62 f1 b5 20 eb c9    	vporq  %ymm1,%ymm25,%ymm1
   37388:	c4 c1 75 eb cc       	vpor   %ymm12,%ymm1,%ymm1
   3738d:	45 89 dc             	mov    %r11d,%r12d
   37390:	c5 25 d4 e0          	vpaddq %ymm0,%ymm11,%ymm12
   37394:	c4 41 25 df dc       	vpandn %ymm12,%ymm11,%ymm11
   37399:	41 c1 ec 18          	shr    $0x18,%r12d
   3739d:	62 71 cd 20 d4 e0    	vpaddq %ymm0,%ymm22,%ymm12
   373a3:	62 51 cd 20 df e4    	vpandnq %ymm12,%ymm22,%ymm12
   373a9:	44 89 e2             	mov    %r12d,%edx
   373ac:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   373b3:	62 d1 9d 28 72 e4 3f 	vpsraq $0x3f,%ymm12,%ymm12
   373ba:	c0 ea 03             	shr    $0x3,%dl
   373bd:	c4 41 1d db e7       	vpand  %ymm15,%ymm12,%ymm12
   373c2:	0f b6 d2             	movzbl %dl,%edx
   373c5:	62 31 a5 28 db d8    	vpandq %ymm16,%ymm11,%ymm11
   373cb:	c4 41 25 eb dc       	vpor   %ymm12,%ymm11,%ymm11
   373d0:	62 72 fd 28 7c e2    	vpbroadcastq %rdx,%ymm12
   373d6:	62 61 9d 28 ef d7    	vpxorq %ymm7,%ymm12,%ymm26
   373dc:	c4 c1 75 eb cb       	vpor   %ymm11,%ymm1,%ymm1
   373e1:	c5 2d d4 d8          	vpaddq %ymm0,%ymm10,%ymm11
   373e5:	62 41 9d 28 ef c0    	vpxorq %ymm8,%ymm12,%ymm24
   373eb:	c4 41 2d df d3       	vpandn %ymm11,%ymm10,%ymm10
   373f0:	62 61 ad 20 d4 d8    	vpaddq %ymm0,%ymm26,%ymm27
   373f6:	c5 15 d4 d8          	vpaddq %ymm0,%ymm13,%ymm11
   373fa:	c4 41 15 df db       	vpandn %ymm11,%ymm13,%ymm11
   373ff:	62 01 ad 20 df d3    	vpandnq %ymm27,%ymm26,%ymm26
   37405:	62 61 bd 20 d4 d8    	vpaddq %ymm0,%ymm24,%ymm27
   3740b:	62 01 bd 20 df c3    	vpandnq %ymm27,%ymm24,%ymm24
   37411:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37418:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   3741f:	c4 41 25 db de       	vpand  %ymm14,%ymm11,%ymm11
   37424:	62 31 ad 28 db d5    	vpandq %ymm21,%ymm10,%ymm10
   3742a:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   37431:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   37438:	c4 41 2d eb d3       	vpor   %ymm11,%ymm10,%ymm10
   3743d:	62 21 ad 20 db d3    	vpandq %ymm19,%ymm26,%ymm26
   37443:	c5 1d ef dd          	vpxor  %ymm5,%ymm12,%ymm11
   37447:	62 21 bd 20 db c4    	vpandq %ymm20,%ymm24,%ymm24
   3744d:	62 61 9d 28 ef ce    	vpxorq %ymm6,%ymm12,%ymm25
   37453:	62 01 ad 20 eb c0    	vporq  %ymm24,%ymm26,%ymm24
   37459:	62 61 a5 28 d4 d0    	vpaddq %ymm0,%ymm11,%ymm26
   3745f:	62 11 a5 28 df da    	vpandnq %ymm26,%ymm11,%ymm11
   37465:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   3746b:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   37471:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37478:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   3747f:	62 21 b5 20 db ca    	vpandq %ymm18,%ymm25,%ymm25
   37485:	62 31 a5 28 db d9    	vpandq %ymm17,%ymm11,%ymm11
   3748b:	c4 c1 75 eb ca       	vpor   %ymm10,%ymm1,%ymm1
   37490:	62 11 a5 28 eb d9    	vporq  %ymm25,%ymm11,%ymm11
   37496:	c5 1d ef d4          	vpxor  %ymm4,%ymm12,%ymm10
   3749a:	62 e1 9d 28 ef f3    	vpxorq %ymm3,%ymm12,%ymm22
   374a0:	62 51 bd 20 eb db    	vporq  %ymm11,%ymm24,%ymm11
   374a6:	62 61 ad 28 d4 c0    	vpaddq %ymm0,%ymm10,%ymm24
   374ac:	62 11 ad 28 df d0    	vpandnq %ymm24,%ymm10,%ymm10
   374b2:	62 61 cd 20 d4 c0    	vpaddq %ymm0,%ymm22,%ymm24
   374b8:	62 81 cd 20 df f0    	vpandnq %ymm24,%ymm22,%ymm22
   374be:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   374c5:	62 b1 cd 20 72 e6 3f 	vpsraq $0x3f,%ymm22,%ymm22
   374cc:	c4 c3 7d 39 cd 01    	vextracti128 $0x1,%ymm1,%xmm13
   374d2:	62 c1 cd 20 db f7    	vpandq %ymm15,%ymm22,%ymm22
   374d8:	62 31 ad 28 db d0    	vpandq %ymm16,%ymm10,%ymm10
   374de:	c5 11 eb e9          	vpor   %xmm1,%xmm13,%xmm13
   374e2:	62 31 ad 28 eb d6    	vporq  %ymm22,%ymm10,%ymm10
   374e8:	c4 c1 1d ef c9       	vpxor  %ymm9,%ymm12,%ymm1
   374ed:	c4 41 25 eb d2       	vpor   %ymm10,%ymm11,%ymm10
   374f2:	c5 1d ef e2          	vpxor  %ymm2,%ymm12,%ymm12
   374f6:	c5 75 d4 d8          	vpaddq %ymm0,%ymm1,%ymm11
   374fa:	c4 c1 75 df cb       	vpandn %ymm11,%ymm1,%ymm1
   374ff:	c5 1d d4 d8          	vpaddq %ymm0,%ymm12,%ymm11
   37503:	c4 41 1d df db       	vpandn %ymm11,%ymm12,%ymm11
   37508:	44 89 db             	mov    %r11d,%ebx
   3750b:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   37512:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37519:	c4 41 25 db de       	vpand  %ymm14,%ymm11,%ymm11
   3751e:	c1 eb 10             	shr    $0x10,%ebx
   37521:	62 b1 f5 28 db cd    	vpandq %ymm21,%ymm1,%ymm1
   37527:	c4 c1 75 eb cb       	vpor   %ymm11,%ymm1,%ymm1
   3752c:	89 da                	mov    %ebx,%edx
   3752e:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   37532:	c0 ea 03             	shr    $0x3,%dl
   37535:	c4 c3 7d 39 cc 01    	vextracti128 $0x1,%ymm1,%xmm12
   3753b:	0f b6 d2             	movzbl %dl,%edx
   3753e:	c5 19 eb e1          	vpor   %xmm1,%xmm12,%xmm12
   37542:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   37548:	62 61 f5 28 ef e7    	vpxorq %ymm7,%ymm1,%ymm28
   3754e:	62 41 f5 28 ef d0    	vpxorq %ymm8,%ymm1,%ymm26
   37554:	62 61 9d 20 d4 e8    	vpaddq %ymm0,%ymm28,%ymm29
   3755a:	62 01 9d 20 df e5    	vpandnq %ymm29,%ymm28,%ymm28
   37560:	62 61 ad 20 d4 e8    	vpaddq %ymm0,%ymm26,%ymm29
   37566:	62 01 ad 20 df d5    	vpandnq %ymm29,%ymm26,%ymm26
   3756c:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   37573:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   3757a:	62 61 f5 28 ef c5    	vpxorq %ymm5,%ymm1,%ymm24
   37580:	62 21 9d 20 db e3    	vpandq %ymm19,%ymm28,%ymm28
   37586:	62 21 ad 20 db d4    	vpandq %ymm20,%ymm26,%ymm26
   3758c:	62 61 f5 28 ef de    	vpxorq %ymm6,%ymm1,%ymm27
   37592:	62 01 9d 20 eb d2    	vporq  %ymm26,%ymm28,%ymm26
   37598:	62 61 bd 20 d4 e0    	vpaddq %ymm0,%ymm24,%ymm28
   3759e:	62 01 bd 20 df c4    	vpandnq %ymm28,%ymm24,%ymm24
   375a4:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   375aa:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   375b0:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   375b7:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   375be:	62 21 a5 20 db da    	vpandq %ymm18,%ymm27,%ymm27
   375c4:	62 21 bd 20 db c1    	vpandq %ymm17,%ymm24,%ymm24
   375ca:	c5 75 ef dc          	vpxor  %ymm4,%ymm1,%ymm11
   375ce:	62 01 bd 20 eb c3    	vporq  %ymm27,%ymm24,%ymm24
   375d4:	62 61 f5 28 ef cb    	vpxorq %ymm3,%ymm1,%ymm25
   375da:	62 01 ad 20 eb c0    	vporq  %ymm24,%ymm26,%ymm24
   375e0:	62 61 a5 28 d4 d0    	vpaddq %ymm0,%ymm11,%ymm26
   375e6:	62 11 a5 28 df da    	vpandnq %ymm26,%ymm11,%ymm11
   375ec:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   375f2:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   375f8:	45 89 dd             	mov    %r11d,%r13d
   375fb:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37602:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   37609:	62 41 b5 20 db cf    	vpandq %ymm15,%ymm25,%ymm25
   3760f:	41 c1 ed 08          	shr    $0x8,%r13d
   37613:	62 31 a5 28 db d8    	vpandq %ymm16,%ymm11,%ymm11
   37619:	c4 41 75 ef d1       	vpxor  %ymm9,%ymm1,%ymm10
   3761e:	62 11 a5 28 eb d9    	vporq  %ymm25,%ymm11,%ymm11
   37624:	44 89 ea             	mov    %r13d,%edx
   37627:	62 41 bd 20 eb c3    	vporq  %ymm11,%ymm24,%ymm24
   3762d:	c5 f5 ef ca          	vpxor  %ymm2,%ymm1,%ymm1
   37631:	c5 2d d4 d8          	vpaddq %ymm0,%ymm10,%ymm11
   37635:	c0 ea 03             	shr    $0x3,%dl
   37638:	c4 41 2d df d3       	vpandn %ymm11,%ymm10,%ymm10
   3763d:	0f b6 d2             	movzbl %dl,%edx
   37640:	c5 75 d4 d8          	vpaddq %ymm0,%ymm1,%ymm11
   37644:	c4 c1 75 df cb       	vpandn %ymm11,%ymm1,%ymm1
   37649:	62 72 fd 28 7c da    	vpbroadcastq %rdx,%ymm11
   3764f:	62 61 a5 28 ef f7    	vpxorq %ymm7,%ymm11,%ymm30
   37655:	62 41 a5 28 ef d0    	vpxorq %ymm8,%ymm11,%ymm26
   3765b:	62 61 8d 20 d4 f8    	vpaddq %ymm0,%ymm30,%ymm31
   37661:	62 01 8d 20 df f7    	vpandnq %ymm31,%ymm30,%ymm30
   37667:	62 61 ad 20 d4 f8    	vpaddq %ymm0,%ymm26,%ymm31
   3766d:	62 01 ad 20 df d7    	vpandnq %ymm31,%ymm26,%ymm26
   37673:	62 91 8d 20 72 e6 3f 	vpsraq $0x3f,%ymm30,%ymm30
   3767a:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   37681:	62 61 a5 28 ef e5    	vpxorq %ymm5,%ymm11,%ymm28
   37687:	62 21 8d 20 db f3    	vpandq %ymm19,%ymm30,%ymm30
   3768d:	62 21 ad 20 db d4    	vpandq %ymm20,%ymm26,%ymm26
   37693:	62 61 a5 28 ef ee    	vpxorq %ymm6,%ymm11,%ymm29
   37699:	62 01 8d 20 eb d2    	vporq  %ymm26,%ymm30,%ymm26
   3769f:	62 61 9d 20 d4 f0    	vpaddq %ymm0,%ymm28,%ymm30
   376a5:	62 01 9d 20 df e6    	vpandnq %ymm30,%ymm28,%ymm28
   376ab:	62 61 95 20 d4 f0    	vpaddq %ymm0,%ymm29,%ymm30
   376b1:	62 01 95 20 df ee    	vpandnq %ymm30,%ymm29,%ymm29
   376b7:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   376be:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   376c5:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   376cc:	62 91 95 20 72 e5 3f 	vpsraq $0x3f,%ymm29,%ymm29
   376d3:	62 31 ad 28 db d5    	vpandq %ymm21,%ymm10,%ymm10
   376d9:	c4 c1 75 db ce       	vpand  %ymm14,%ymm1,%ymm1
   376de:	62 21 9d 20 db e1    	vpandq %ymm17,%ymm28,%ymm28
   376e4:	62 21 95 20 db ea    	vpandq %ymm18,%ymm29,%ymm29
   376ea:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   376ee:	62 01 9d 20 eb e5    	vporq  %ymm29,%ymm28,%ymm28
   376f4:	c5 25 ef d4          	vpxor  %ymm4,%ymm11,%ymm10
   376f8:	62 61 a5 28 ef db    	vpxorq %ymm3,%ymm11,%ymm27
   376fe:	62 01 ad 20 eb d4    	vporq  %ymm28,%ymm26,%ymm26
   37704:	62 61 ad 28 d4 e0    	vpaddq %ymm0,%ymm10,%ymm28
   3770a:	62 11 ad 28 df d4    	vpandnq %ymm28,%ymm10,%ymm10
   37710:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   37716:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   3771c:	62 f1 bd 20 eb c9    	vporq  %ymm1,%ymm24,%ymm1
   37722:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37729:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   37730:	62 93 7d 48 39 c8 01 	vextracti32x4 $0x1,%zmm1,%xmm24
   37737:	62 31 ad 28 db d0    	vpandq %ymm16,%ymm10,%ymm10
   3773d:	62 41 a5 20 db df    	vpandq %ymm15,%ymm27,%ymm27
   37743:	62 61 bd 00 eb c1    	vporq  %xmm1,%xmm24,%xmm24
   37749:	62 11 ad 28 eb d3    	vporq  %ymm27,%ymm10,%ymm10
   3774f:	c4 c1 25 ef c9       	vpxor  %ymm9,%ymm11,%ymm1
   37754:	62 51 ad 20 eb d2    	vporq  %ymm10,%ymm26,%ymm10
   3775a:	c5 25 ef da          	vpxor  %ymm2,%ymm11,%ymm11
   3775e:	62 61 f5 28 d4 d0    	vpaddq %ymm0,%ymm1,%ymm26
   37764:	62 91 f5 28 df ca    	vpandnq %ymm26,%ymm1,%ymm1
   3776a:	62 61 a5 28 d4 d0    	vpaddq %ymm0,%ymm11,%ymm26
   37770:	62 11 a5 28 df da    	vpandnq %ymm26,%ymm11,%ymm11
   37776:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   3777d:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37784:	62 b1 f5 28 db cd    	vpandq %ymm21,%ymm1,%ymm1
   3778a:	c4 41 25 db de       	vpand  %ymm14,%ymm11,%ymm11
   3778f:	c4 c1 75 eb cb       	vpor   %ymm11,%ymm1,%ymm1
   37794:	c5 2d eb d1          	vpor   %ymm1,%ymm10,%ymm10
   37798:	c4 63 7d 39 d1 01    	vextracti128 $0x1,%ymm10,%xmm1
   3779e:	c4 c1 71 eb ca       	vpor   %xmm10,%xmm1,%xmm1
   377a3:	44 89 d9             	mov    %r11d,%ecx
   377a6:	62 d1 45 00 73 dd 08 	vpsrldq $0x8,%xmm13,%xmm23
   377ad:	c5 a9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm10
   377b2:	62 31 95 08 eb ef    	vporq  %xmm23,%xmm13,%xmm13
   377b8:	83 e1 07             	and    $0x7,%ecx
   377bb:	c4 61 f9 7e ea       	vmovq  %xmm13,%rdx
   377c0:	c1 e1 03             	shl    $0x3,%ecx
   377c3:	c4 c1 71 eb ca       	vpor   %xmm10,%xmm1,%xmm1
   377c8:	41 83 e5 07          	and    $0x7,%r13d
   377cc:	c4 e2 f3 f7 ca       	shrx   %rcx,%rdx,%rcx
   377d1:	62 d1 4d 00 73 dc 08 	vpsrldq $0x8,%xmm12,%xmm22
   377d8:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
   377dd:	41 c1 e5 03          	shl    $0x3,%r13d
   377e1:	c1 e1 18             	shl    $0x18,%ecx
   377e4:	c4 e2 93 f7 d2       	shrx   %r13,%rdx,%rdx
   377e9:	62 31 9d 08 eb e6    	vporq  %xmm22,%xmm12,%xmm12
   377ef:	0f b6 d2             	movzbl %dl,%edx
   377f2:	41 83 e4 07          	and    $0x7,%r12d
   377f6:	09 d1                	or     %edx,%ecx
   377f8:	41 c1 e4 03          	shl    $0x3,%r12d
   377fc:	c4 61 f9 7e e2       	vmovq  %xmm12,%rdx
   37801:	62 91 35 00 73 d8 08 	vpsrldq $0x8,%xmm24,%xmm25
   37808:	c4 e2 9b f7 d2       	shrx   %r12,%rdx,%rdx
   3780d:	0f b6 d2             	movzbl %dl,%edx
   37810:	c1 e2 10             	shl    $0x10,%edx
   37813:	62 01 bd 00 eb c1    	vporq  %xmm25,%xmm24,%xmm24
   37819:	83 e3 07             	and    $0x7,%ebx
   3781c:	09 d1                	or     %edx,%ecx
   3781e:	c1 e3 03             	shl    $0x3,%ebx
   37821:	62 61 fd 08 7e c2    	vmovq  %xmm24,%rdx
   37827:	c4 e2 e3 f7 d2       	shrx   %rbx,%rdx,%rdx
   3782c:	0f b6 d2             	movzbl %dl,%edx
   3782f:	c1 e2 08             	shl    $0x8,%edx
   37832:	09 d1                	or     %edx,%ecx
   37834:	49 83 c7 04          	add    $0x4,%r15
   37838:	41 33 4f fc          	xor    -0x4(%r15),%ecx
   3783c:	41 31 ca             	xor    %ecx,%r10d
   3783f:	45 31 d0             	xor    %r10d,%r8d
   37842:	44 31 c7             	xor    %r8d,%edi
   37845:	31 f8                	xor    %edi,%eax
   37847:	48 63 ce             	movslq %esi,%rcx
   3784a:	41 31 c6             	xor    %eax,%r14d
   3784d:	48 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%rdx
   37854:	00 
   37855:	45 31 f3             	xor    %r14d,%r11d
   37858:	83 c6 06             	add    $0x6,%esi
   3785b:	45 89 14 89          	mov    %r10d,(%r9,%rcx,4)
   3785f:	45 89 44 11 04       	mov    %r8d,0x4(%r9,%rdx,1)
   37864:	41 89 7c 11 08       	mov    %edi,0x8(%r9,%rdx,1)
   37869:	41 89 44 11 0c       	mov    %eax,0xc(%r9,%rdx,1)
   3786e:	45 89 74 11 10       	mov    %r14d,0x10(%r9,%rdx,1)
   37873:	45 89 5c 11 14       	mov    %r11d,0x14(%r9,%rdx,1)
   37878:	39 74 24 fc          	cmp    %esi,-0x4(%rsp)
   3787c:	0f 8f 5e fa ff ff    	jg     372e0 <k0_ExpandRijndaelKey+0x1440>
   37882:	e9 f7 f2 ff ff       	jmpq   36b7e <k0_ExpandRijndaelKey+0xcde>
   37887:	83 7c 24 fc 04       	cmpl   $0x4,-0x4(%rsp)
   3788c:	0f 8e f0 f2 ff ff    	jle    36b82 <k0_ExpandRijndaelKey+0xce2>
   37892:	48 8d 15 a7 75 00 00 	lea    0x75a7(%rip),%rdx        # 3ee40 <RijEncSbox>
   37899:	62 71 fd 28 6f 0d 9d 	vmovdqa64 0x749d(%rip),%ymm9        # 3ed40 <RconTbl+0x80>
   378a0:	74 00 00 
   378a3:	62 e1 fd 28 6f 2a    	vmovdqa64 (%rdx),%ymm21
   378a9:	62 e1 fd 28 6f 62 01 	vmovdqa64 0x20(%rdx),%ymm20
   378b0:	62 e1 fd 28 6f 5a 02 	vmovdqa64 0x40(%rdx),%ymm19
   378b7:	62 e1 fd 28 6f 52 03 	vmovdqa64 0x60(%rdx),%ymm18
   378be:	62 e1 fd 28 6f 4a 04 	vmovdqa64 0x80(%rdx),%ymm17
   378c5:	62 e1 fd 28 6f 42 05 	vmovdqa64 0xa0(%rdx),%ymm16
   378cc:	62 71 fd 28 6f 7a 06 	vmovdqa64 0xc0(%rdx),%ymm15
   378d3:	62 71 fd 28 6f 72 07 	vmovdqa64 0xe0(%rdx),%ymm14
   378da:	62 71 fd 28 6f 05 7c 	vmovdqa64 0x747c(%rip),%ymm8        # 3ed60 <RconTbl+0xa0>
   378e1:	74 00 00 
   378e4:	62 f1 fd 28 6f 3d 92 	vmovdqa64 0x7492(%rip),%ymm7        # 3ed80 <RconTbl+0xc0>
   378eb:	74 00 00 
   378ee:	62 f1 fd 28 6f 35 a8 	vmovdqa64 0x74a8(%rip),%ymm6        # 3eda0 <RconTbl+0xe0>
   378f5:	74 00 00 
   378f8:	62 f1 fd 28 6f 2d be 	vmovdqa64 0x74be(%rip),%ymm5        # 3edc0 <RconTbl+0x100>
   378ff:	74 00 00 
   37902:	62 f1 fd 28 6f 25 d4 	vmovdqa64 0x74d4(%rip),%ymm4        # 3ede0 <RconTbl+0x120>
   37909:	74 00 00 
   3790c:	62 f1 fd 28 6f 1d ea 	vmovdqa64 0x74ea(%rip),%ymm3        # 3ee00 <RconTbl+0x140>
   37913:	74 00 00 
   37916:	62 f1 fd 28 6f 15 00 	vmovdqa64 0x7500(%rip),%ymm2        # 3ee20 <RconTbl+0x160>
   3791d:	75 00 00 
   37920:	44 8b 5c 24 fc       	mov    -0x4(%rsp),%r11d
   37925:	4c 8d 2d 94 73 00 00 	lea    0x7394(%rip),%r13        # 3ecc0 <RconTbl>
   3792c:	c5 fd 76 c0          	vpcmpeqd %ymm0,%ymm0,%ymm0
   37930:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37937:	00 00 00 00 
   3793b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   37940:	89 c2                	mov    %eax,%edx
   37942:	c0 ea 03             	shr    $0x3,%dl
   37945:	0f b6 d2             	movzbl %dl,%edx
   37948:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   3794e:	c5 75 ef ef          	vpxor  %ymm7,%ymm1,%ymm13
   37952:	62 c1 f5 28 ef f1    	vpxorq %ymm9,%ymm1,%ymm22
   37958:	62 41 f5 28 ef c8    	vpxorq %ymm8,%ymm1,%ymm25
   3795e:	62 e1 f5 28 ef fb    	vpxorq %ymm3,%ymm1,%ymm23
   37964:	c5 75 ef e2          	vpxor  %ymm2,%ymm1,%ymm12
   37968:	62 61 f5 28 ef c6    	vpxorq %ymm6,%ymm1,%ymm24
   3796e:	c5 75 ef dd          	vpxor  %ymm5,%ymm1,%ymm11
   37972:	c5 75 ef d4          	vpxor  %ymm4,%ymm1,%ymm10
   37976:	c5 95 d4 c8          	vpaddq %ymm0,%ymm13,%ymm1
   3797a:	c5 15 df e9          	vpandn %ymm1,%ymm13,%ymm13
   3797e:	62 f1 b5 20 d4 c8    	vpaddq %ymm0,%ymm25,%ymm1
   37984:	62 f1 b5 20 df c9    	vpandnq %ymm1,%ymm25,%ymm1
   3798a:	62 d1 95 28 72 e5 3f 	vpsraq $0x3f,%ymm13,%ymm13
   37991:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   37998:	62 b1 f5 28 db cc    	vpandq %ymm20,%ymm1,%ymm1
   3799e:	62 31 95 28 db eb    	vpandq %ymm19,%ymm13,%ymm13
   379a4:	c5 15 eb e9          	vpor   %ymm1,%ymm13,%ymm13
   379a8:	c5 a5 d4 c8          	vpaddq %ymm0,%ymm11,%ymm1
   379ac:	c5 25 df d9          	vpandn %ymm1,%ymm11,%ymm11
   379b0:	62 f1 bd 20 d4 c8    	vpaddq %ymm0,%ymm24,%ymm1
   379b6:	62 61 bd 20 df c1    	vpandnq %ymm1,%ymm24,%ymm24
   379bc:	c5 ad d4 c8          	vpaddq %ymm0,%ymm10,%ymm1
   379c0:	c5 2d df d1          	vpandn %ymm1,%ymm10,%ymm10
   379c4:	62 f1 c5 20 d4 c8    	vpaddq %ymm0,%ymm23,%ymm1
   379ca:	62 f1 c5 20 df c9    	vpandnq %ymm1,%ymm23,%ymm1
   379d0:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   379d7:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   379de:	62 21 bd 20 db c2    	vpandq %ymm18,%ymm24,%ymm24
   379e4:	62 31 a5 28 db d9    	vpandq %ymm17,%ymm11,%ymm11
   379ea:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   379f1:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   379f8:	62 11 a5 28 eb d8    	vporq  %ymm24,%ymm11,%ymm11
   379fe:	c4 c1 75 db cf       	vpand  %ymm15,%ymm1,%ymm1
   37a03:	62 31 ad 28 db d0    	vpandq %ymm16,%ymm10,%ymm10
   37a09:	c5 2d eb d1          	vpor   %ymm1,%ymm10,%ymm10
   37a0d:	c4 41 15 eb eb       	vpor   %ymm11,%ymm13,%ymm13
   37a12:	c4 41 15 eb ea       	vpor   %ymm10,%ymm13,%ymm13
   37a17:	62 f1 cd 20 d4 c8    	vpaddq %ymm0,%ymm22,%ymm1
   37a1d:	c5 1d d4 d0          	vpaddq %ymm0,%ymm12,%ymm10
   37a21:	62 f1 cd 20 df c9    	vpandnq %ymm1,%ymm22,%ymm1
   37a27:	c4 41 1d df d2       	vpandn %ymm10,%ymm12,%ymm10
   37a2c:	41 89 c6             	mov    %eax,%r14d
   37a2f:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   37a36:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37a3d:	c4 41 2d db d6       	vpand  %ymm14,%ymm10,%ymm10
   37a42:	41 c1 ee 18          	shr    $0x18,%r14d
   37a46:	62 b1 f5 28 db cd    	vpandq %ymm21,%ymm1,%ymm1
   37a4c:	c4 c1 75 eb ca       	vpor   %ymm10,%ymm1,%ymm1
   37a51:	44 89 f2             	mov    %r14d,%edx
   37a54:	c5 95 eb c9          	vpor   %ymm1,%ymm13,%ymm1
   37a58:	c0 ea 03             	shr    $0x3,%dl
   37a5b:	c4 c3 7d 39 cd 01    	vextracti128 $0x1,%ymm1,%xmm13
   37a61:	0f b6 d2             	movzbl %dl,%edx
   37a64:	c5 11 eb e9          	vpor   %xmm1,%xmm13,%xmm13
   37a68:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   37a6e:	62 61 f5 28 ef d7    	vpxorq %ymm7,%ymm1,%ymm26
   37a74:	62 41 f5 28 ef c0    	vpxorq %ymm8,%ymm1,%ymm24
   37a7a:	62 61 ad 20 d4 d8    	vpaddq %ymm0,%ymm26,%ymm27
   37a80:	62 01 ad 20 df d3    	vpandnq %ymm27,%ymm26,%ymm26
   37a86:	62 61 bd 20 d4 d8    	vpaddq %ymm0,%ymm24,%ymm27
   37a8c:	62 01 bd 20 df c3    	vpandnq %ymm27,%ymm24,%ymm24
   37a92:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   37a99:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   37aa0:	c5 75 ef e5          	vpxor  %ymm5,%ymm1,%ymm12
   37aa4:	62 21 ad 20 db d3    	vpandq %ymm19,%ymm26,%ymm26
   37aaa:	62 21 bd 20 db c4    	vpandq %ymm20,%ymm24,%ymm24
   37ab0:	62 61 f5 28 ef ce    	vpxorq %ymm6,%ymm1,%ymm25
   37ab6:	62 01 ad 20 eb c0    	vporq  %ymm24,%ymm26,%ymm24
   37abc:	62 61 9d 28 d4 d0    	vpaddq %ymm0,%ymm12,%ymm26
   37ac2:	62 11 9d 28 df e2    	vpandnq %ymm26,%ymm12,%ymm12
   37ac8:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   37ace:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   37ad4:	62 d1 9d 28 72 e4 3f 	vpsraq $0x3f,%ymm12,%ymm12
   37adb:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   37ae2:	62 21 b5 20 db ca    	vpandq %ymm18,%ymm25,%ymm25
   37ae8:	62 31 9d 28 db e1    	vpandq %ymm17,%ymm12,%ymm12
   37aee:	c5 75 ef dc          	vpxor  %ymm4,%ymm1,%ymm11
   37af2:	62 11 9d 28 eb e1    	vporq  %ymm25,%ymm12,%ymm12
   37af8:	62 e1 f5 28 ef fb    	vpxorq %ymm3,%ymm1,%ymm23
   37afe:	62 51 bd 20 eb e4    	vporq  %ymm12,%ymm24,%ymm12
   37b04:	62 61 a5 28 d4 c0    	vpaddq %ymm0,%ymm11,%ymm24
   37b0a:	62 11 a5 28 df d8    	vpandnq %ymm24,%ymm11,%ymm11
   37b10:	62 61 c5 20 d4 c0    	vpaddq %ymm0,%ymm23,%ymm24
   37b16:	62 81 c5 20 df f8    	vpandnq %ymm24,%ymm23,%ymm23
   37b1c:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37b23:	62 b1 c5 20 72 e7 3f 	vpsraq $0x3f,%ymm23,%ymm23
   37b2a:	62 c1 c5 20 db ff    	vpandq %ymm15,%ymm23,%ymm23
   37b30:	62 31 a5 28 db d8    	vpandq %ymm16,%ymm11,%ymm11
   37b36:	c4 41 75 ef d1       	vpxor  %ymm9,%ymm1,%ymm10
   37b3b:	62 31 a5 28 eb df    	vporq  %ymm23,%ymm11,%ymm11
   37b41:	c4 41 1d eb db       	vpor   %ymm11,%ymm12,%ymm11
   37b46:	c5 f5 ef ca          	vpxor  %ymm2,%ymm1,%ymm1
   37b4a:	c5 2d d4 e0          	vpaddq %ymm0,%ymm10,%ymm12
   37b4e:	c4 41 2d df d4       	vpandn %ymm12,%ymm10,%ymm10
   37b53:	c5 75 d4 e0          	vpaddq %ymm0,%ymm1,%ymm12
   37b57:	c4 c1 75 df cc       	vpandn %ymm12,%ymm1,%ymm1
   37b5c:	41 89 c4             	mov    %eax,%r12d
   37b5f:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37b66:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   37b6d:	62 31 ad 28 db d5    	vpandq %ymm21,%ymm10,%ymm10
   37b73:	41 c1 ec 10          	shr    $0x10,%r12d
   37b77:	c4 c1 75 db ce       	vpand  %ymm14,%ymm1,%ymm1
   37b7c:	c5 ad eb c9          	vpor   %ymm1,%ymm10,%ymm1
   37b80:	44 89 e2             	mov    %r12d,%edx
   37b83:	c5 a5 eb c9          	vpor   %ymm1,%ymm11,%ymm1
   37b87:	c0 ea 03             	shr    $0x3,%dl
   37b8a:	c4 c3 7d 39 cc 01    	vextracti128 $0x1,%ymm1,%xmm12
   37b90:	0f b6 d2             	movzbl %dl,%edx
   37b93:	c5 19 eb e1          	vpor   %xmm1,%xmm12,%xmm12
   37b97:	62 f2 fd 28 7c ca    	vpbroadcastq %rdx,%ymm1
   37b9d:	62 61 f5 28 ef e5    	vpxorq %ymm5,%ymm1,%ymm28
   37ba3:	62 61 f5 28 ef d6    	vpxorq %ymm6,%ymm1,%ymm26
   37ba9:	62 61 9d 20 d4 e8    	vpaddq %ymm0,%ymm28,%ymm29
   37baf:	62 01 9d 20 df e5    	vpandnq %ymm29,%ymm28,%ymm28
   37bb5:	62 61 ad 20 d4 e8    	vpaddq %ymm0,%ymm26,%ymm29
   37bbb:	62 01 ad 20 df d5    	vpandnq %ymm29,%ymm26,%ymm26
   37bc1:	62 91 9d 20 72 e4 3f 	vpsraq $0x3f,%ymm28,%ymm28
   37bc8:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   37bcf:	c5 75 ef df          	vpxor  %ymm7,%ymm1,%ymm11
   37bd3:	62 21 9d 20 db e1    	vpandq %ymm17,%ymm28,%ymm28
   37bd9:	62 21 ad 20 db d2    	vpandq %ymm18,%ymm26,%ymm26
   37bdf:	62 41 f5 28 ef d8    	vpxorq %ymm8,%ymm1,%ymm27
   37be5:	62 01 9d 20 eb d2    	vporq  %ymm26,%ymm28,%ymm26
   37beb:	62 61 a5 28 d4 e0    	vpaddq %ymm0,%ymm11,%ymm28
   37bf1:	62 11 a5 28 df dc    	vpandnq %ymm28,%ymm11,%ymm11
   37bf7:	62 61 a5 20 d4 e0    	vpaddq %ymm0,%ymm27,%ymm28
   37bfd:	62 01 a5 20 df dc    	vpandnq %ymm28,%ymm27,%ymm27
   37c03:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37c0a:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   37c11:	62 21 a5 20 db dc    	vpandq %ymm20,%ymm27,%ymm27
   37c17:	62 31 a5 28 db db    	vpandq %ymm19,%ymm11,%ymm11
   37c1d:	c5 75 ef d4          	vpxor  %ymm4,%ymm1,%ymm10
   37c21:	62 11 a5 28 eb db    	vporq  %ymm27,%ymm11,%ymm11
   37c27:	62 61 f5 28 ef cb    	vpxorq %ymm3,%ymm1,%ymm25
   37c2d:	62 51 ad 20 eb db    	vporq  %ymm11,%ymm26,%ymm11
   37c33:	62 61 ad 28 d4 d0    	vpaddq %ymm0,%ymm10,%ymm26
   37c39:	62 11 ad 28 df d2    	vpandnq %ymm26,%ymm10,%ymm10
   37c3f:	62 61 b5 20 d4 d0    	vpaddq %ymm0,%ymm25,%ymm26
   37c45:	62 01 b5 20 df ca    	vpandnq %ymm26,%ymm25,%ymm25
   37c4b:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37c52:	62 91 b5 20 72 e1 3f 	vpsraq $0x3f,%ymm25,%ymm25
   37c59:	62 41 b5 20 db cf    	vpandq %ymm15,%ymm25,%ymm25
   37c5f:	62 31 ad 28 db d0    	vpandq %ymm16,%ymm10,%ymm10
   37c65:	62 41 f5 28 ef c1    	vpxorq %ymm9,%ymm1,%ymm24
   37c6b:	62 11 ad 28 eb d1    	vporq  %ymm25,%ymm10,%ymm10
   37c71:	c5 f5 ef ca          	vpxor  %ymm2,%ymm1,%ymm1
   37c75:	c4 41 25 eb da       	vpor   %ymm10,%ymm11,%ymm11
   37c7a:	c5 75 d4 d0          	vpaddq %ymm0,%ymm1,%ymm10
   37c7e:	c4 c1 75 df ca       	vpandn %ymm10,%ymm1,%ymm1
   37c83:	89 c3                	mov    %eax,%ebx
   37c85:	62 71 bd 20 d4 d0    	vpaddq %ymm0,%ymm24,%ymm10
   37c8b:	62 41 bd 20 df c2    	vpandnq %ymm10,%ymm24,%ymm24
   37c91:	c1 eb 08             	shr    $0x8,%ebx
   37c94:	89 da                	mov    %ebx,%edx
   37c96:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   37c9d:	62 91 bd 20 72 e0 3f 	vpsraq $0x3f,%ymm24,%ymm24
   37ca4:	62 21 bd 20 db c5    	vpandq %ymm21,%ymm24,%ymm24
   37caa:	c4 c1 75 db ce       	vpand  %ymm14,%ymm1,%ymm1
   37caf:	c0 ea 03             	shr    $0x3,%dl
   37cb2:	62 91 f5 28 eb c8    	vporq  %ymm24,%ymm1,%ymm1
   37cb8:	0f b6 d2             	movzbl %dl,%edx
   37cbb:	c5 a5 eb c9          	vpor   %ymm1,%ymm11,%ymm1
   37cbf:	62 72 fd 28 7c da    	vpbroadcastq %rdx,%ymm11
   37cc5:	62 41 a5 28 ef d0    	vpxorq %ymm8,%ymm11,%ymm26
   37ccb:	c5 25 ef d7          	vpxor  %ymm7,%ymm11,%ymm10
   37ccf:	62 61 ad 20 d4 f8    	vpaddq %ymm0,%ymm26,%ymm31
   37cd5:	62 01 ad 20 df d7    	vpandnq %ymm31,%ymm26,%ymm26
   37cdb:	62 61 ad 28 d4 f8    	vpaddq %ymm0,%ymm10,%ymm31
   37ce1:	62 11 ad 28 df d7    	vpandnq %ymm31,%ymm10,%ymm10
   37ce7:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   37cee:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37cf5:	62 61 a5 28 ef ed    	vpxorq %ymm5,%ymm11,%ymm29
   37cfb:	62 21 ad 20 db d4    	vpandq %ymm20,%ymm26,%ymm26
   37d01:	62 31 ad 28 db d3    	vpandq %ymm19,%ymm10,%ymm10
   37d07:	62 61 a5 28 ef f6    	vpxorq %ymm6,%ymm11,%ymm30
   37d0d:	62 51 ad 20 eb d2    	vporq  %ymm10,%ymm26,%ymm10
   37d13:	62 61 95 20 d4 d0    	vpaddq %ymm0,%ymm29,%ymm26
   37d19:	62 01 95 20 df ea    	vpandnq %ymm26,%ymm29,%ymm29
   37d1f:	62 61 8d 20 d4 d0    	vpaddq %ymm0,%ymm30,%ymm26
   37d25:	62 01 8d 20 df d2    	vpandnq %ymm26,%ymm30,%ymm26
   37d2b:	62 91 95 20 72 e5 3f 	vpsraq $0x3f,%ymm29,%ymm29
   37d32:	62 91 ad 20 72 e2 3f 	vpsraq $0x3f,%ymm26,%ymm26
   37d39:	62 21 95 20 db e9    	vpandq %ymm17,%ymm29,%ymm29
   37d3f:	62 21 ad 20 db d2    	vpandq %ymm18,%ymm26,%ymm26
   37d45:	62 61 a5 28 ef dc    	vpxorq %ymm4,%ymm11,%ymm27
   37d4b:	62 01 95 20 eb d2    	vporq  %ymm26,%ymm29,%ymm26
   37d51:	62 61 a5 28 ef e3    	vpxorq %ymm3,%ymm11,%ymm28
   37d57:	62 01 ad 28 eb d2    	vporq  %ymm26,%ymm10,%ymm26
   37d5d:	62 71 a5 20 d4 d0    	vpaddq %ymm0,%ymm27,%ymm10
   37d63:	62 51 a5 20 df d2    	vpandnq %ymm10,%ymm27,%ymm10
   37d69:	62 61 9d 20 d4 d8    	vpaddq %ymm0,%ymm28,%ymm27
   37d6f:	62 01 9d 20 df db    	vpandnq %ymm27,%ymm28,%ymm27
   37d75:	62 d1 ad 28 72 e2 3f 	vpsraq $0x3f,%ymm10,%ymm10
   37d7c:	62 91 a5 20 72 e3 3f 	vpsraq $0x3f,%ymm27,%ymm27
   37d83:	62 93 7d 48 39 c8 01 	vextracti32x4 $0x1,%zmm1,%xmm24
   37d8a:	62 31 ad 28 db d0    	vpandq %ymm16,%ymm10,%ymm10
   37d90:	62 41 a5 20 db df    	vpandq %ymm15,%ymm27,%ymm27
   37d96:	62 61 bd 00 eb c1    	vporq  %xmm1,%xmm24,%xmm24
   37d9c:	62 11 ad 28 eb d3    	vporq  %ymm27,%ymm10,%ymm10
   37da2:	c4 c1 25 ef c9       	vpxor  %ymm9,%ymm11,%ymm1
   37da7:	62 51 ad 20 eb d2    	vporq  %ymm10,%ymm26,%ymm10
   37dad:	c5 25 ef da          	vpxor  %ymm2,%ymm11,%ymm11
   37db1:	62 61 f5 28 d4 d0    	vpaddq %ymm0,%ymm1,%ymm26
   37db7:	62 91 f5 28 df ca    	vpandnq %ymm26,%ymm1,%ymm1
   37dbd:	62 61 a5 28 d4 d0    	vpaddq %ymm0,%ymm11,%ymm26
   37dc3:	62 11 a5 28 df da    	vpandnq %ymm26,%ymm11,%ymm11
   37dc9:	62 f1 f5 28 72 e1 3f 	vpsraq $0x3f,%ymm1,%ymm1
   37dd0:	62 d1 a5 28 72 e3 3f 	vpsraq $0x3f,%ymm11,%ymm11
   37dd7:	c4 41 25 db de       	vpand  %ymm14,%ymm11,%ymm11
   37ddc:	62 b1 f5 28 db cd    	vpandq %ymm21,%ymm1,%ymm1
   37de2:	c4 c1 75 eb cb       	vpor   %ymm11,%ymm1,%ymm1
   37de7:	c5 2d eb d1          	vpor   %ymm1,%ymm10,%ymm10
   37deb:	c4 43 7d 39 d3 01    	vextracti128 $0x1,%ymm10,%xmm11
   37df1:	c4 c1 21 eb ca       	vpor   %xmm10,%xmm11,%xmm1
   37df6:	89 c1                	mov    %eax,%ecx
   37df8:	62 d1 4d 00 73 dd 08 	vpsrldq $0x8,%xmm13,%xmm22
   37dff:	c5 a9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm10
   37e04:	62 31 95 08 eb ee    	vporq  %xmm22,%xmm13,%xmm13
   37e0a:	83 e1 07             	and    $0x7,%ecx
   37e0d:	c1 e1 03             	shl    $0x3,%ecx
   37e10:	62 d1 45 00 73 dc 08 	vpsrldq $0x8,%xmm12,%xmm23
   37e17:	c4 61 f9 7e ea       	vmovq  %xmm13,%rdx
   37e1c:	c4 c1 71 eb ca       	vpor   %xmm10,%xmm1,%xmm1
   37e21:	83 e3 07             	and    $0x7,%ebx
   37e24:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   37e29:	c1 e3 03             	shl    $0x3,%ebx
   37e2c:	62 91 35 00 73 d8 08 	vpsrldq $0x8,%xmm24,%xmm25
   37e33:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
   37e38:	62 31 9d 08 eb e7    	vporq  %xmm23,%xmm12,%xmm12
   37e3e:	41 83 e6 07          	and    $0x7,%r14d
   37e42:	c4 e2 e3 f7 c9       	shrx   %rbx,%rcx,%rcx
   37e47:	c1 e2 18             	shl    $0x18,%edx
   37e4a:	0f b6 c9             	movzbl %cl,%ecx
   37e4d:	c4 61 f9 7e e3       	vmovq  %xmm12,%rbx
   37e52:	41 c1 e6 03          	shl    $0x3,%r14d
   37e56:	62 01 bd 00 eb c1    	vporq  %xmm25,%xmm24,%xmm24
   37e5c:	41 83 e4 07          	and    $0x7,%r12d
   37e60:	09 ca                	or     %ecx,%edx
   37e62:	c4 e2 8b f7 db       	shrx   %r14,%rbx,%rbx
   37e67:	62 61 fd 08 7e c1    	vmovq  %xmm24,%rcx
   37e6d:	0f b6 db             	movzbl %bl,%ebx
   37e70:	41 c1 e4 03          	shl    $0x3,%r12d
   37e74:	c1 e3 10             	shl    $0x10,%ebx
   37e77:	c4 e2 9b f7 c9       	shrx   %r12,%rcx,%rcx
   37e7c:	0f b6 c9             	movzbl %cl,%ecx
   37e7f:	c1 e1 08             	shl    $0x8,%ecx
   37e82:	09 da                	or     %ebx,%edx
   37e84:	09 ca                	or     %ecx,%edx
   37e86:	49 83 c5 04          	add    $0x4,%r13
   37e8a:	41 33 55 fc          	xor    -0x4(%r13),%edx
   37e8e:	41 31 d2             	xor    %edx,%r10d
   37e91:	45 31 d0             	xor    %r10d,%r8d
   37e94:	48 63 ce             	movslq %esi,%rcx
   37e97:	44 31 c7             	xor    %r8d,%edi
   37e9a:	48 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%rdx
   37ea1:	00 
   37ea2:	31 f8                	xor    %edi,%eax
   37ea4:	83 c6 04             	add    $0x4,%esi
   37ea7:	45 89 14 89          	mov    %r10d,(%r9,%rcx,4)
   37eab:	45 89 44 11 04       	mov    %r8d,0x4(%r9,%rdx,1)
   37eb0:	41 89 7c 11 08       	mov    %edi,0x8(%r9,%rdx,1)
   37eb5:	41 89 44 11 0c       	mov    %eax,0xc(%r9,%rdx,1)
   37eba:	41 39 f3             	cmp    %esi,%r11d
   37ebd:	0f 8f 7d fa ff ff    	jg     37940 <k0_ExpandRijndaelKey+0x1aa0>
   37ec3:	e9 ba ec ff ff       	jmpq   36b82 <k0_ExpandRijndaelKey+0xce2>
   37ec8:	31 c0                	xor    %eax,%eax
   37eca:	eb 07                	jmp    37ed3 <k0_ExpandRijndaelKey+0x2033>
   37ecc:	0f 1f 40 00          	nopl   0x0(%rax)
   37ed0:	48 89 c8             	mov    %rcx,%rax
   37ed3:	41 0f b6 0c 01       	movzbl (%r9,%rax,1),%ecx
   37ed8:	41 88 0c 07          	mov    %cl,(%r15,%rax,1)
   37edc:	48 8d 48 01          	lea    0x1(%rax),%rcx
   37ee0:	48 39 c2             	cmp    %rax,%rdx
   37ee3:	75 eb                	jne    37ed0 <k0_ExpandRijndaelKey+0x2030>
   37ee5:	e9 08 ed ff ff       	jmpq   36bf2 <k0_ExpandRijndaelKey+0xd52>
   37eea:	45 8b 11             	mov    (%r9),%r10d
   37eed:	45 8b 41 04          	mov    0x4(%r9),%r8d
   37ef1:	41 8b 79 08          	mov    0x8(%r9),%edi
   37ef5:	41 8b 41 0c          	mov    0xc(%r9),%eax
   37ef9:	e9 30 e0 ff ff       	jmpq   35f2e <k0_ExpandRijndaelKey+0x8e>
   37efe:	66 90                	xchg   %ax,%ax

0000000000037f00 <k0_cpAESCMAC_Update_AES_NI>:
   37f00:	48 63 d2             	movslq %edx,%rdx
   37f03:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   37f07:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f0e:	00 00 00 00 
   37f12:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f19:	00 00 00 00 
   37f1d:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f24:	00 00 00 00 
   37f28:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f2f:	00 00 00 00 
   37f33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f3a:	00 00 00 00 
   37f3e:	66 90                	xchg   %ax,%ax
   37f40:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   37f44:	66 41 0f 6f 20       	movdqa (%r8),%xmm4
   37f49:	4d 89 c1             	mov    %r8,%r9
   37f4c:	66 0f ef c1          	pxor   %xmm1,%xmm0
   37f50:	66 0f ef c4          	pxor   %xmm4,%xmm0
   37f54:	66 41 0f 6f 61 10    	movdqa 0x10(%r9),%xmm4
   37f5a:	49 83 c1 10          	add    $0x10,%r9
   37f5e:	49 89 ca             	mov    %rcx,%r10
   37f61:	49 83 ea 01          	sub    $0x1,%r10
   37f65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f6c:	00 00 00 00 
   37f70:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f77:	00 00 00 00 
   37f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   37f80:	66 0f 38 dc c4       	aesenc %xmm4,%xmm0
   37f85:	66 41 0f 6f 61 10    	movdqa 0x10(%r9),%xmm4
   37f8b:	49 83 c1 10          	add    $0x10,%r9
   37f8f:	49 ff ca             	dec    %r10
   37f92:	75 ec                	jne    37f80 <k0_cpAESCMAC_Update_AES_NI+0x80>
   37f94:	66 0f 38 dd c4       	aesenclast %xmm4,%xmm0
   37f99:	48 83 c6 10          	add    $0x10,%rsi
   37f9d:	48 83 ea 10          	sub    $0x10,%rdx
   37fa1:	75 9d                	jne    37f40 <k0_cpAESCMAC_Update_AES_NI+0x40>
   37fa3:	66 0f ef e4          	pxor   %xmm4,%xmm4
   37fa7:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   37fab:	c5 f8 77             	vzeroupper 
   37fae:	c3                   	retq   
   37faf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   37fb6:	00 00 00 
   37fb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000037fc0 <k0_Decrypt_RIJ128_AES_NI>:
   37fc0:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   37fc7:	00 
   37fc8:	48 8d 04 85 00 00 00 	lea    0x0(,%rax,4),%rax
   37fcf:	00 
   37fd0:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   37fd4:	66 0f ef 04 01       	pxor   (%rcx,%rax,1),%xmm0
   37fd9:	48 83 fa 0c          	cmp    $0xc,%rdx
   37fdd:	7c 26                	jl     38005 <k0_Decrypt_RIJ128_AES_NI+0x45>
   37fdf:	74 12                	je     37ff3 <k0_Decrypt_RIJ128_AES_NI+0x33>
   37fe1:	66 0f 38 de 81 d0 00 	aesdec 0xd0(%rcx),%xmm0
   37fe8:	00 00 
   37fea:	66 0f 38 de 81 c0 00 	aesdec 0xc0(%rcx),%xmm0
   37ff1:	00 00 
   37ff3:	66 0f 38 de 81 b0 00 	aesdec 0xb0(%rcx),%xmm0
   37ffa:	00 00 
   37ffc:	66 0f 38 de 81 a0 00 	aesdec 0xa0(%rcx),%xmm0
   38003:	00 00 
   38005:	66 0f 38 de 81 90 00 	aesdec 0x90(%rcx),%xmm0
   3800c:	00 00 
   3800e:	66 0f 38 de 81 80 00 	aesdec 0x80(%rcx),%xmm0
   38015:	00 00 
   38017:	66 0f 38 de 41 70    	aesdec 0x70(%rcx),%xmm0
   3801d:	66 0f 38 de 41 60    	aesdec 0x60(%rcx),%xmm0
   38023:	66 0f 38 de 41 50    	aesdec 0x50(%rcx),%xmm0
   38029:	66 0f 38 de 41 40    	aesdec 0x40(%rcx),%xmm0
   3802f:	66 0f 38 de 41 30    	aesdec 0x30(%rcx),%xmm0
   38035:	66 0f 38 de 41 20    	aesdec 0x20(%rcx),%xmm0
   3803b:	66 0f 38 de 41 10    	aesdec 0x10(%rcx),%xmm0
   38041:	66 0f 38 df 01       	aesdeclast (%rcx),%xmm0
   38046:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   3804a:	c5 f8 77             	vzeroupper 
   3804d:	c3                   	retq   
   3804e:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38055:	00 00 00 
   38058:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3805f:	00 00 00 
   38062:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38069:	00 00 00 
   3806c:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38073:	00 00 00 
   38076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3807d:	00 00 00 

0000000000038080 <k0_Encrypt_RIJ128_AES_NI>:
   38080:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   38084:	66 0f ef 01          	pxor   (%rcx),%xmm0
   38088:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   3808f:	00 
   38090:	48 8d 8c 81 70 ff ff 	lea    -0x90(%rcx,%rax,4),%rcx
   38097:	ff 
   38098:	48 83 fa 0c          	cmp    $0xc,%rdx
   3809c:	7c 1a                	jl     380b8 <k0_Encrypt_RIJ128_AES_NI+0x38>
   3809e:	74 0c                	je     380ac <k0_Encrypt_RIJ128_AES_NI+0x2c>
   380a0:	66 0f 38 dc 41 c0    	aesenc -0x40(%rcx),%xmm0
   380a6:	66 0f 38 dc 41 d0    	aesenc -0x30(%rcx),%xmm0
   380ac:	66 0f 38 dc 41 e0    	aesenc -0x20(%rcx),%xmm0
   380b2:	66 0f 38 dc 41 f0    	aesenc -0x10(%rcx),%xmm0
   380b8:	66 0f 38 dc 01       	aesenc (%rcx),%xmm0
   380bd:	66 0f 38 dc 41 10    	aesenc 0x10(%rcx),%xmm0
   380c3:	66 0f 38 dc 41 20    	aesenc 0x20(%rcx),%xmm0
   380c9:	66 0f 38 dc 41 30    	aesenc 0x30(%rcx),%xmm0
   380cf:	66 0f 38 dc 41 40    	aesenc 0x40(%rcx),%xmm0
   380d5:	66 0f 38 dc 41 50    	aesenc 0x50(%rcx),%xmm0
   380db:	66 0f 38 dc 41 60    	aesenc 0x60(%rcx),%xmm0
   380e1:	66 0f 38 dc 41 70    	aesenc 0x70(%rcx),%xmm0
   380e7:	66 0f 38 dc 81 80 00 	aesenc 0x80(%rcx),%xmm0
   380ee:	00 00 
   380f0:	66 0f 38 dd 81 90 00 	aesenclast 0x90(%rcx),%xmm0
   380f7:	00 00 
   380f9:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   380fd:	c5 f8 77             	vzeroupper 
   38100:	c3                   	retq   
   38101:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38108:	00 00 00 
   3810b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38112:	00 00 00 
   38115:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3811c:	00 00 00 
   3811f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38126:	00 00 00 
   38129:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38130:	00 00 00 
   38133:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3813a:	00 00 00 
   3813d:	0f 1f 00             	nopl   (%rax)

0000000000038140 <DECODE_DATA>:
   38140:	00 01                	add    %al,(%rcx)
   38142:	2e 2f                	cs (bad) 
   38144:	49                   	rex.WB
   38145:	48                   	rex.W
   38146:	67 66 43             	addr32 data16 rex.XB
   38149:	42 6d                	rex.X insl (%dx),%es:(%rdi)
   3814b:	6c                   	insb   (%dx),%es:(%rdi)
   3814c:	0a 0b                	or     (%rbx),%cl
   3814e:	24 25                	and    $0x25,%al

0000000000038150 <TransFwdHI>:
   38150:	00 35 d0 e5 3d 08    	add    %dh,0x83de5d0(%rip)        # 8416726 <_end+0x83bf3e6>
   38156:	ed                   	in     (%dx),%eax
   38157:	d8 e9                	fsubr  %st(1),%st
   38159:	dc 39                	fdivrl (%rcx)
   3815b:	0c d4                	or     $0xd4,%al
   3815d:	e1 04                	loope  38163 <TransInvLO+0x3>
   3815f:	31                   	.byte 0x31

0000000000038160 <TransInvLO>:
   38160:	00 01                	add    %al,(%rcx)
   38162:	5c                   	pop    %rsp
   38163:	5d                   	pop    %rbp
   38164:	e0 e1                	loopne 38147 <DECODE_DATA+0x7>
   38166:	bc bd 50 51 0c       	mov    $0xc5150bd,%esp
   3816b:	0d b0 b1 ec ed       	or     $0xedecb1b0,%eax

0000000000038170 <TransInvHI>:
   38170:	00 1f                	add    %bl,(%rdi)
   38172:	ee                   	out    %al,(%dx)
   38173:	f1                   	icebp  
   38174:	55                   	push   %rbp
   38175:	4a bb a4 6a 75 84 9b 	rex.WX movabs $0xd1203f9b84756aa4,%rbx
   3817c:	3f 20 d1 
   3817f:	ce                   	(bad)  

0000000000038180 <GF16_csize>:
   38180:	0f                   	(bad)  
   38181:	0f                   	(bad)  
   38182:	0f                   	(bad)  
   38183:	0f                   	(bad)  
   38184:	0f                   	(bad)  
   38185:	0f                   	(bad)  
   38186:	0f                   	(bad)  
   38187:	0f                   	(bad)  
   38188:	0f                   	(bad)  
   38189:	0f                   	(bad)  
   3818a:	0f                   	(bad)  
   3818b:	0f                   	(bad)  
   3818c:	0f                   	(bad)  
   3818d:	0f                   	.byte 0xf
   3818e:	0f                   	.byte 0xf
   3818f:	0f                   	.byte 0xf

0000000000038190 <GF16_logTbl>:
   38190:	c0 00 01             	rolb   $0x1,(%rax)
   38193:	04 02                	add    $0x2,%al
   38195:	08 05 0a 03 0e 09    	or     %al,0x90e030a(%rip)        # 91184a5 <_end+0x90c1165>
   3819b:	07                   	(bad)  
   3819c:	06                   	(bad)  
   3819d:	0d                   	.byte 0xd
   3819e:	0b                   	.byte 0xb
   3819f:	0c                   	.byte 0xc

00000000000381a0 <GF16_expTbl>:
   381a0:	01 02                	add    %eax,(%rdx)
   381a2:	04 08                	add    $0x8,%al
   381a4:	03 06                	add    (%rsi),%eax
   381a6:	0c 0b                	or     $0xb,%al
   381a8:	05 0a 07 0e 0f       	add    $0xf0e070a,%eax
   381ad:	0d                   	.byte 0xd
   381ae:	09 01                	or     %eax,(%rcx)

00000000000381b0 <GF16_sqr1>:
   381b0:	00 09                	add    %cl,(%rcx)
   381b2:	02 0b                	add    (%rbx),%cl
   381b4:	08 01                	or     %al,(%rcx)
   381b6:	0a 03                	or     (%rbx),%al
   381b8:	06                   	(bad)  
   381b9:	0f 04                	(bad)  
   381bb:	0d 0e 07 0c 05       	or     $0x50c070e,%eax

00000000000381c0 <GF16_invLog>:
   381c0:	c0 00 0e             	rolb   $0xe,(%rax)
   381c3:	0b 0d 07 0a 05 0c    	or     0xc050a07(%rip),%ecx        # c088bd0 <_end+0xc031890>
   381c9:	01 06                	add    %eax,(%rsi)
   381cb:	08 09                	or     %cl,(%rcx)
   381cd:	02 04 03             	add    (%rbx,%rax,1),%al

00000000000381d0 <InvAffineLO>:
   381d0:	00 50 36             	add    %dl,0x36(%rax)
   381d3:	66 15 45 23          	adc    $0x2345,%ax
   381d7:	73 82                	jae    3815b <TransFwdHI+0xb>
   381d9:	d2 b4 e4 97 c7 a1 f1 	shlb   %cl,-0xe5e3869(%rsp,%riz,8)

00000000000381e0 <InvAffineHI>:
   381e0:	00 01                	add    %al,(%rcx)
   381e2:	34 35                	xor    $0x35,%al
   381e4:	40                   	rex
   381e5:	41 74 75             	rex.B je 3825d <GF16mul_B_0x+0xd>
   381e8:	3e 3f                	ds (bad) 
   381ea:	0a 0b                	or     (%rbx),%cl
   381ec:	7e 7f                	jle    3826d <GF16mul_0_Bx+0xd>
   381ee:	4a                   	rex.WX
   381ef:	4b                   	rex.WXB

00000000000381f0 <InvAffineCnt>:
   381f0:	48                   	rex.W
   381f1:	48                   	rex.W
   381f2:	48                   	rex.W
   381f3:	48                   	rex.W
   381f4:	48                   	rex.W
   381f5:	48                   	rex.W
   381f6:	48                   	rex.W
   381f7:	48                   	rex.W
   381f8:	48                   	rex.W
   381f9:	48                   	rex.W
   381fa:	48                   	rex.W
   381fb:	48                   	rex.W
   381fc:	48                   	rex.W
   381fd:	48                   	rex.W
   381fe:	48                   	rex.W
   381ff:	48                   	rex.W

0000000000038200 <InvShiftRows>:
   38200:	00 0d 0a 07 04 01    	add    %cl,0x104070a(%rip)        # 1078910 <_end+0x10215d0>
   38206:	0e                   	(bad)  
   38207:	0b 08                	or     (%rax),%ecx
   38209:	05 02 0f 0c 09       	add    $0x90c0f02,%eax
   3820e:	06                   	(bad)  
   3820f:	03                   	.byte 0x3

0000000000038210 <GF16mul_4_2x>:
   38210:	00 24 48             	add    %ah,(%rax,%rcx,2)
   38213:	6c                   	insb   (%dx),%es:(%rdi)
   38214:	83 a7 cb ef 36 12 7e 	andl   $0x7e,0x1236efcb(%rdi)
   3821b:	5a                   	pop    %rdx
   3821c:	b5 91                	mov    $0x91,%ch
   3821e:	fd                   	std    
   3821f:	d9                   	.byte 0xd9

0000000000038220 <GF16mul_1_6x>:
   38220:	00 61 c2             	add    %ah,-0x3e(%rcx)
   38223:	a3 b4 d5 76 17 58 39 	movabs %eax,0xfb9a39581776d5b4
   3822a:	9a fb 
   3822c:	ec                   	in     (%dx),%al
   3822d:	8d 2e                	lea    (%rsi),%ebp
   3822f:	4f                   	rex.WRXB

0000000000038230 <GF16mul_C_6x>:
   38230:	00 6c cb a7          	add    %ch,-0x59(%rbx,%rcx,8)
   38234:	b5 d9                	mov    $0xd9,%ch
   38236:	7e 12                	jle    3824a <GF16mul_3_Ax+0xa>
   38238:	5a                   	pop    %rdx
   38239:	36 91                	ss xchg %eax,%ecx
   3823b:	fd                   	std    
   3823c:	ef                   	out    %eax,(%dx)
   3823d:	83                   	.byte 0x83
   3823e:	24 48                	and    $0x48,%al

0000000000038240 <GF16mul_3_Ax>:
   38240:	00 a3 76 d5 ec 4f    	add    %ah,0x4fecd576(%rbx)
   38246:	9a                   	(bad)  
   38247:	39 fb                	cmp    %edi,%ebx
   38249:	58                   	pop    %rax
   3824a:	8d 2e                	lea    (%rsi),%ebp
   3824c:	17                   	(bad)  
   3824d:	b4 61                	mov    $0x61,%ah
   3824f:	c2                   	.byte 0xc2

0000000000038250 <GF16mul_B_0x>:
   38250:	00 0b                	add    %cl,(%rbx)
   38252:	05 0e 0a 01 0f       	add    $0xf010a0e,%eax
   38257:	04 07                	add    $0x7,%al
   38259:	0c 02                	or     $0x2,%al
   3825b:	09                   	.byte 0x9
   3825c:	0d                   	.byte 0xd
   3825d:	06                   	(bad)  
   3825e:	08 03                	or     %al,(%rbx)

0000000000038260 <GF16mul_0_Bx>:
   38260:	00 b0 50 e0 a0 10    	add    %dh,0x10a0e050(%rax)
   38266:	f0 40 70 c0          	lock rex jo 3822a <GF16mul_1_6x+0xa>
   3826a:	20 90 d0 60 80 30    	and    %dl,0x308060d0(%rax)

0000000000038270 <GF16mul_2_4x>:
   38270:	00 42 84             	add    %al,-0x7c(%rdx)
   38273:	c6                   	(bad)  
   38274:	38 7a bc             	cmp    %bh,-0x44(%rdx)
   38277:	fe                   	(bad)  
   38278:	63 21                	movslq (%rcx),%esp
   3827a:	e7 a5                	out    %eax,$0xa5
   3827c:	5b                   	pop    %rbx
   3827d:	19 df                	sbb    %ebx,%edi
   3827f:	9d                   	popfq  

0000000000038280 <GF16mul_2_6x>:
   38280:	00 62 c4             	add    %ah,-0x3c(%rdx)
   38283:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   38284:	b8 da 7c 1e 53       	mov    $0x531e7cda,%eax
   38289:	31 97 f5 eb 89 2f    	xor    %edx,0x2f89ebf5(%rdi)
   3828f:	4d                   	rex.WRB

0000000000038290 <ColumnROR>:
   38290:	01 02                	add    %eax,(%rdx)
   38292:	03 00                	add    (%rax),%eax
   38294:	05 06 07 04 09       	add    $0x9040706,%eax
   38299:	0a 0b                	or     (%rbx),%cl
   3829b:	08 0d 0e 0f 0c 66    	or     %cl,0x660c0f0e(%rip)        # 660f91af <_end+0x660a1e6f>
   382a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   382a8:	00 00 00 
   382ab:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   382b2:	00 00 00 00 
   382b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   382bd:	00 00 00 

00000000000382c0 <k0_SafeDecrypt_RIJ128>:
   382c0:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   382c7:	00 
   382c8:	48 8d 0c 81          	lea    (%rcx,%rax,4),%rcx
   382cc:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   382d0:	66 0f 6f 3d a8 fe ff 	movdqa -0x158(%rip),%xmm7        # 38180 <GF16_csize>
   382d7:	ff 
   382d8:	66 0f 6f 15 60 fe ff 	movdqa -0x1a0(%rip),%xmm2        # 38140 <DECODE_DATA>
   382df:	ff 
   382e0:	66 0f 6f 0d 68 fe ff 	movdqa -0x198(%rip),%xmm1        # 38150 <TransFwdHI>
   382e7:	ff 
   382e8:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   382ec:	66 0f 71 d0 04       	psrlw  $0x4,%xmm0
   382f1:	66 0f db df          	pand   %xmm7,%xmm3
   382f5:	66 0f db c7          	pand   %xmm7,%xmm0
   382f9:	66 0f 38 00 d3       	pshufb %xmm3,%xmm2
   382fe:	66 0f 38 00 c8       	pshufb %xmm0,%xmm1
   38303:	66 0f ef d1          	pxor   %xmm1,%xmm2
   38307:	66 0f ef 11          	pxor   (%rcx),%xmm2
   3830b:	48 83 e9 10          	sub    $0x10,%rcx
   3830f:	48 83 ea 01          	sub    $0x1,%rdx
   38313:	66 0f 6f 05 b5 fe ff 	movdqa -0x14b(%rip),%xmm0        # 381d0 <InvAffineLO>
   3831a:	ff 
   3831b:	66 0f 6f 0d bd fe ff 	movdqa -0x143(%rip),%xmm1        # 381e0 <InvAffineHI>
   38322:	ff 
   38323:	66 0f 6f da          	movdqa %xmm2,%xmm3
   38327:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   3832c:	66 0f db df          	pand   %xmm7,%xmm3
   38330:	66 0f db d7          	pand   %xmm7,%xmm2
   38334:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   38339:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   3833e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38342:	66 0f ef 05 a6 fe ff 	pxor   -0x15a(%rip),%xmm0        # 381f0 <InvAffineCnt>
   38349:	ff 
   3834a:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   3834e:	66 0f db c7          	pand   %xmm7,%xmm0
   38352:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   38357:	66 0f db cf          	pand   %xmm7,%xmm1
   3835b:	66 0f 6f 2d 2d fe ff 	movdqa -0x1d3(%rip),%xmm5        # 38190 <GF16_logTbl>
   38362:	ff 
   38363:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   38368:	66 0f ef c1          	pxor   %xmm1,%xmm0
   3836c:	66 0f 6f 15 1c fe ff 	movdqa -0x1e4(%rip),%xmm2        # 38190 <GF16_logTbl>
   38373:	ff 
   38374:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   38379:	66 0f 6f 25 2f fe ff 	movdqa -0x1d1(%rip),%xmm4        # 381b0 <GF16_sqr1>
   38380:	ff 
   38381:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   38386:	66 0f 6f 1d 02 fe ff 	movdqa -0x1fe(%rip),%xmm3        # 38190 <GF16_logTbl>
   3838d:	ff 
   3838e:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   38393:	66 0f fc ea          	paddb  %xmm2,%xmm5
   38397:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   3839b:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   3839f:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   383a3:	66 0f 6f 2d f5 fd ff 	movdqa -0x20b(%rip),%xmm5        # 381a0 <GF16_expTbl>
   383aa:	ff 
   383ab:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   383b0:	66 0f ef e5          	pxor   %xmm5,%xmm4
   383b4:	66 0f 6f 2d 04 fe ff 	movdqa -0x1fc(%rip),%xmm5        # 381c0 <GF16_invLog>
   383bb:	ff 
   383bc:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   383c1:	66 0f fc d5          	paddb  %xmm5,%xmm2
   383c5:	66 0f fc dd          	paddb  %xmm5,%xmm3
   383c9:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   383cd:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   383d1:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   383d5:	66 0f 6f 05 c3 fd ff 	movdqa -0x23d(%rip),%xmm0        # 381a0 <GF16_expTbl>
   383dc:	ff 
   383dd:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   383e2:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   383e6:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   383ea:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   383ee:	66 0f 6f 0d aa fd ff 	movdqa -0x256(%rip),%xmm1        # 381a0 <GF16_expTbl>
   383f5:	ff 
   383f6:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   383fb:	66 0f 38 00 05 fc fd 	pshufb -0x204(%rip),%xmm0        # 38200 <InvShiftRows>
   38402:	ff ff 
   38404:	66 0f 38 00 0d f3 fd 	pshufb -0x20d(%rip),%xmm1        # 38200 <InvShiftRows>
   3840b:	ff ff 
   3840d:	66 0f 6f 15 fb fd ff 	movdqa -0x205(%rip),%xmm2        # 38210 <GF16mul_4_2x>
   38414:	ff 
   38415:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   3841a:	66 0f 38 00 05 6d fe 	pshufb -0x193(%rip),%xmm0        # 38290 <ColumnROR>
   38421:	ff ff 
   38423:	66 0f 6f 1d f5 fd ff 	movdqa -0x20b(%rip),%xmm3        # 38220 <GF16mul_1_6x>
   3842a:	ff 
   3842b:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   38430:	66 0f 38 00 0d 57 fe 	pshufb -0x1a9(%rip),%xmm1        # 38290 <ColumnROR>
   38437:	ff ff 
   38439:	66 0f ef d3          	pxor   %xmm3,%xmm2
   3843d:	66 0f 6f 1d eb fd ff 	movdqa -0x215(%rip),%xmm3        # 38230 <GF16mul_C_6x>
   38444:	ff 
   38445:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   3844a:	66 0f 38 00 05 3d fe 	pshufb -0x1c3(%rip),%xmm0        # 38290 <ColumnROR>
   38451:	ff ff 
   38453:	66 0f ef d3          	pxor   %xmm3,%xmm2
   38457:	66 0f 6f 1d e1 fd ff 	movdqa -0x21f(%rip),%xmm3        # 38240 <GF16mul_3_Ax>
   3845e:	ff 
   3845f:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   38464:	66 0f 38 00 0d 23 fe 	pshufb -0x1dd(%rip),%xmm1        # 38290 <ColumnROR>
   3846b:	ff ff 
   3846d:	66 0f ef d3          	pxor   %xmm3,%xmm2
   38471:	66 0f 6f 1d d7 fd ff 	movdqa -0x229(%rip),%xmm3        # 38250 <GF16mul_B_0x>
   38478:	ff 
   38479:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   3847e:	66 0f 38 00 05 09 fe 	pshufb -0x1f7(%rip),%xmm0        # 38290 <ColumnROR>
   38485:	ff ff 
   38487:	66 0f ef d3          	pxor   %xmm3,%xmm2
   3848b:	66 0f 6f 1d cd fd ff 	movdqa -0x233(%rip),%xmm3        # 38260 <GF16mul_0_Bx>
   38492:	ff 
   38493:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   38498:	66 0f 38 00 0d ef fd 	pshufb -0x211(%rip),%xmm1        # 38290 <ColumnROR>
   3849f:	ff ff 
   384a1:	66 0f ef d3          	pxor   %xmm3,%xmm2
   384a5:	66 0f 6f 1d c3 fd ff 	movdqa -0x23d(%rip),%xmm3        # 38270 <GF16mul_2_4x>
   384ac:	ff 
   384ad:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   384b2:	66 0f ef d3          	pxor   %xmm3,%xmm2
   384b6:	66 0f 6f 1d c2 fd ff 	movdqa -0x23e(%rip),%xmm3        # 38280 <GF16mul_2_6x>
   384bd:	ff 
   384be:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   384c3:	66 0f ef d3          	pxor   %xmm3,%xmm2
   384c7:	66 0f ef 11          	pxor   (%rcx),%xmm2
   384cb:	48 83 e9 10          	sub    $0x10,%rcx
   384cf:	48 83 ea 01          	sub    $0x1,%rdx
   384d3:	0f 8f 3a fe ff ff    	jg     38313 <k0_SafeDecrypt_RIJ128+0x53>
   384d9:	66 0f 6f 05 ef fc ff 	movdqa -0x311(%rip),%xmm0        # 381d0 <InvAffineLO>
   384e0:	ff 
   384e1:	66 0f 6f 0d f7 fc ff 	movdqa -0x309(%rip),%xmm1        # 381e0 <InvAffineHI>
   384e8:	ff 
   384e9:	66 0f 6f da          	movdqa %xmm2,%xmm3
   384ed:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   384f2:	66 0f db df          	pand   %xmm7,%xmm3
   384f6:	66 0f db d7          	pand   %xmm7,%xmm2
   384fa:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   384ff:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   38504:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38508:	66 0f ef 05 e0 fc ff 	pxor   -0x320(%rip),%xmm0        # 381f0 <InvAffineCnt>
   3850f:	ff 
   38510:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   38514:	66 0f db c7          	pand   %xmm7,%xmm0
   38518:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   3851d:	66 0f db cf          	pand   %xmm7,%xmm1
   38521:	66 0f 6f 2d 67 fc ff 	movdqa -0x399(%rip),%xmm5        # 38190 <GF16_logTbl>
   38528:	ff 
   38529:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   3852e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38532:	66 0f 6f 15 56 fc ff 	movdqa -0x3aa(%rip),%xmm2        # 38190 <GF16_logTbl>
   38539:	ff 
   3853a:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   3853f:	66 0f 6f 25 69 fc ff 	movdqa -0x397(%rip),%xmm4        # 381b0 <GF16_sqr1>
   38546:	ff 
   38547:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   3854c:	66 0f 6f 1d 3c fc ff 	movdqa -0x3c4(%rip),%xmm3        # 38190 <GF16_logTbl>
   38553:	ff 
   38554:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   38559:	66 0f fc ea          	paddb  %xmm2,%xmm5
   3855d:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   38561:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   38565:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   38569:	66 0f 6f 2d 2f fc ff 	movdqa -0x3d1(%rip),%xmm5        # 381a0 <GF16_expTbl>
   38570:	ff 
   38571:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   38576:	66 0f ef e5          	pxor   %xmm5,%xmm4
   3857a:	66 0f 6f 2d 3e fc ff 	movdqa -0x3c2(%rip),%xmm5        # 381c0 <GF16_invLog>
   38581:	ff 
   38582:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   38587:	66 0f fc d5          	paddb  %xmm5,%xmm2
   3858b:	66 0f fc dd          	paddb  %xmm5,%xmm3
   3858f:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   38593:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   38597:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   3859b:	66 0f 6f 05 fd fb ff 	movdqa -0x403(%rip),%xmm0        # 381a0 <GF16_expTbl>
   385a2:	ff 
   385a3:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   385a8:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   385ac:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   385b0:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   385b4:	66 0f 6f 0d e4 fb ff 	movdqa -0x41c(%rip),%xmm1        # 381a0 <GF16_expTbl>
   385bb:	ff 
   385bc:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   385c1:	66 0f 71 f1 04       	psllw  $0x4,%xmm1
   385c6:	66 0f eb c8          	por    %xmm0,%xmm1
   385ca:	66 0f 38 00 0d 2d fc 	pshufb -0x3d3(%rip),%xmm1        # 38200 <InvShiftRows>
   385d1:	ff ff 
   385d3:	66 0f ef 09          	pxor   (%rcx),%xmm1
   385d7:	66 0f 6f 05 81 fb ff 	movdqa -0x47f(%rip),%xmm0        # 38160 <TransInvLO>
   385de:	ff 
   385df:	66 0f 6f 15 89 fb ff 	movdqa -0x477(%rip),%xmm2        # 38170 <TransInvHI>
   385e6:	ff 
   385e7:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   385eb:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   385f0:	66 0f db df          	pand   %xmm7,%xmm3
   385f4:	66 0f db cf          	pand   %xmm7,%xmm1
   385f8:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   385fd:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   38602:	66 0f ef c2          	pxor   %xmm2,%xmm0
   38606:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   3860a:	c5 f8 77             	vzeroupper 
   3860d:	c3                   	retq   
   3860e:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38615:	00 00 00 
   38618:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3861f:	00 00 00 
   38622:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38629:	00 00 00 
   3862c:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38633:	00 00 00 
   38636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3863d:	00 00 00 

0000000000038640 <ENCODE_DATA>:
   38640:	00 01                	add    %al,(%rcx)
   38642:	2e 2f                	cs (bad) 
   38644:	49                   	rex.WB
   38645:	48                   	rex.W
   38646:	67 66 43             	addr32 data16 rex.XB
   38649:	42 6d                	rex.X insl (%dx),%es:(%rdi)
   3864b:	6c                   	insb   (%dx),%es:(%rdi)
   3864c:	0a 0b                	or     (%rbx),%cl
   3864e:	24 25                	and    $0x25,%al

0000000000038650 <TransFwdHI>:
   38650:	00 35 d0 e5 3d 08    	add    %dh,0x83de5d0(%rip)        # 8416c26 <_end+0x83bf8e6>
   38656:	ed                   	in     (%dx),%eax
   38657:	d8 e9                	fsubr  %st(1),%st
   38659:	dc 39                	fdivrl (%rcx)
   3865b:	0c d4                	or     $0xd4,%al
   3865d:	e1 04                	loope  38663 <TransInvLO+0x3>
   3865f:	31                   	.byte 0x31

0000000000038660 <TransInvLO>:
   38660:	00 01                	add    %al,(%rcx)
   38662:	5c                   	pop    %rsp
   38663:	5d                   	pop    %rbp
   38664:	e0 e1                	loopne 38647 <ENCODE_DATA+0x7>
   38666:	bc bd 50 51 0c       	mov    $0xc5150bd,%esp
   3866b:	0d b0 b1 ec ed       	or     $0xedecb1b0,%eax

0000000000038670 <TransInvHI>:
   38670:	00 1f                	add    %bl,(%rdi)
   38672:	ee                   	out    %al,(%dx)
   38673:	f1                   	icebp  
   38674:	55                   	push   %rbp
   38675:	4a bb a4 6a 75 84 9b 	rex.WX movabs $0xd1203f9b84756aa4,%rbx
   3867c:	3f 20 d1 
   3867f:	ce                   	(bad)  

0000000000038680 <GF16_csize>:
   38680:	0f                   	(bad)  
   38681:	0f                   	(bad)  
   38682:	0f                   	(bad)  
   38683:	0f                   	(bad)  
   38684:	0f                   	(bad)  
   38685:	0f                   	(bad)  
   38686:	0f                   	(bad)  
   38687:	0f                   	(bad)  
   38688:	0f                   	(bad)  
   38689:	0f                   	(bad)  
   3868a:	0f                   	(bad)  
   3868b:	0f                   	(bad)  
   3868c:	0f                   	(bad)  
   3868d:	0f                   	.byte 0xf
   3868e:	0f                   	.byte 0xf
   3868f:	0f                   	.byte 0xf

0000000000038690 <GF16_logTbl>:
   38690:	c0 00 01             	rolb   $0x1,(%rax)
   38693:	04 02                	add    $0x2,%al
   38695:	08 05 0a 03 0e 09    	or     %al,0x90e030a(%rip)        # 91189a5 <_end+0x90c1665>
   3869b:	07                   	(bad)  
   3869c:	06                   	(bad)  
   3869d:	0d                   	.byte 0xd
   3869e:	0b                   	.byte 0xb
   3869f:	0c                   	.byte 0xc

00000000000386a0 <GF16_expTbl>:
   386a0:	01 02                	add    %eax,(%rdx)
   386a2:	04 08                	add    $0x8,%al
   386a4:	03 06                	add    (%rsi),%eax
   386a6:	0c 0b                	or     $0xb,%al
   386a8:	05 0a 07 0e 0f       	add    $0xf0e070a,%eax
   386ad:	0d                   	.byte 0xd
   386ae:	09 01                	or     %eax,(%rcx)

00000000000386b0 <GF16_sqr1>:
   386b0:	00 09                	add    %cl,(%rcx)
   386b2:	02 0b                	add    (%rbx),%cl
   386b4:	08 01                	or     %al,(%rcx)
   386b6:	0a 03                	or     (%rbx),%al
   386b8:	06                   	(bad)  
   386b9:	0f 04                	(bad)  
   386bb:	0d 0e 07 0c 05       	or     $0x50c070e,%eax

00000000000386c0 <GF16_invLog>:
   386c0:	c0 00 0e             	rolb   $0xe,(%rax)
   386c3:	0b 0d 07 0a 05 0c    	or     0xc050a07(%rip),%ecx        # c0890d0 <_end+0xc031d90>
   386c9:	01 06                	add    %eax,(%rsi)
   386cb:	08 09                	or     %cl,(%rcx)
   386cd:	02 04 03             	add    (%rbx,%rax,1),%al

00000000000386d0 <GF16_expTbl_shift>:
   386d0:	10 20                	adc    %ah,(%rax)
   386d2:	40 80 30 60          	rex xorb $0x60,(%rax)
   386d6:	c0 b0 50 a0 70 e0 f0 	shlb   $0xf0,-0x1f8f5fb0(%rax)
   386dd:	d0                   	.byte 0xd0
   386de:	90                   	nop
   386df:	10                   	.byte 0x10

00000000000386e0 <FwdAffineLO>:
   386e0:	00 10                	add    %dl,(%rax)
   386e2:	22 32                	and    (%rdx),%dh
   386e4:	55                   	push   %rbp
   386e5:	45 77 67             	rex.RB ja 3874f <ColumnROR+0xf>
   386e8:	82                   	(bad)  
   386e9:	92                   	xchg   %eax,%edx
   386ea:	a0                   	.byte 0xa0
   386eb:	b0 d7                	mov    $0xd7,%al
   386ed:	c7                   	(bad)  
   386ee:	f5                   	cmc    
   386ef:	e5                   	.byte 0xe5

00000000000386f0 <FwdAffineHI>:
   386f0:	00 41 34             	add    %al,0x34(%rcx)
   386f3:	75 40                	jne    38735 <GF16mul_1_Cx+0x5>
   386f5:	01 74 35 2a          	add    %esi,0x2a(%rbp,%rsi,1)
   386f9:	6b 1e 5f             	imul   $0x5f,(%rsi),%ebx
   386fc:	6a 2b                	pushq  $0x2b
   386fe:	5e                   	pop    %rsi
   386ff:	1f                   	(bad)  

0000000000038700 <FwdAffineCnt>:
   38700:	c2 c2 c2             	retq   $0xc2c2
   38703:	c2 c2 c2             	retq   $0xc2c2
   38706:	c2 c2 c2             	retq   $0xc2c2
   38709:	c2 c2 c2             	retq   $0xc2c2
   3870c:	c2 c2 c2             	retq   $0xc2c2
   3870f:	c2                   	.byte 0xc2

0000000000038710 <FwdShiftRows>:
   38710:	00 05 0a 0f 04 09    	add    %al,0x9040f0a(%rip)        # 9079620 <_end+0x90222e0>
   38716:	0e                   	(bad)  
   38717:	03 08                	add    (%rax),%ecx
   38719:	0d 02 07 0c 01       	or     $0x10c0702,%eax
   3871e:	06                   	(bad)  
   3871f:	0b                   	.byte 0xb

0000000000038720 <GF16mul_E_2x>:
   38720:	00 2e                	add    %ch,(%rsi)
   38722:	4f 61                	rex.WRXB (bad) 
   38724:	8d a3 c2 ec 39 17    	lea    0x1739ecc2(%rbx),%esp
   3872a:	76 58                	jbe    38784 <k0_TransformNative2Composite+0x4>
   3872c:	b4 9a                	mov    $0x9a,%ah
   3872e:	fb                   	sti    
   3872f:	d5                   	(bad)  

0000000000038730 <GF16mul_1_Cx>:
   38730:	00 c1                	add    %al,%cl
   38732:	b2 73                	mov    $0x73,%dl
   38734:	54                   	push   %rsp
   38735:	95                   	xchg   %eax,%ebp
   38736:	e6 27                	out    %al,$0x27
   38738:	a8 69                	test   $0x69,%al
   3873a:	1a db                	sbb    %bl,%bl
   3873c:	fc                   	cld    
   3873d:	3d                   	.byte 0x3d
   3873e:	4e                   	rex.WRX
   3873f:	8f                   	.byte 0x8f

0000000000038740 <ColumnROR>:
   38740:	01 02                	add    %eax,(%rdx)
   38742:	03 00                	add    (%rax),%eax
   38744:	05 06 07 04 09       	add    $0x9040706,%eax
   38749:	0a 0b                	or     (%rbx),%cl
   3874b:	08 0d 0e 0f 0c 66    	or     %cl,0x660c0f0e(%rip)        # 660f965f <_end+0x660a231f>
   38751:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38758:	00 00 00 
   3875b:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   38762:	00 00 00 00 
   38766:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3876d:	00 00 00 00 
   38771:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   38778:	00 00 00 00 
   3877c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000038780 <k0_TransformNative2Composite>:
   38780:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   38784:	66 0f 6f 3d f4 fe ff 	movdqa -0x10c(%rip),%xmm7        # 38680 <GF16_csize>
   3878b:	ff 
   3878c:	66 0f 6f 0d ac fe ff 	movdqa -0x154(%rip),%xmm1        # 38640 <ENCODE_DATA>
   38793:	ff 
   38794:	66 0f 6f 15 b4 fe ff 	movdqa -0x14c(%rip),%xmm2        # 38650 <TransFwdHI>
   3879b:	ff 
   3879c:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   387a0:	66 0f 71 d0 04       	psrlw  $0x4,%xmm0
   387a5:	66 0f db df          	pand   %xmm7,%xmm3
   387a9:	66 0f db c7          	pand   %xmm7,%xmm0
   387ad:	66 0f 38 00 cb       	pshufb %xmm3,%xmm1
   387b2:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   387b7:	66 0f ef ca          	pxor   %xmm2,%xmm1
   387bb:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   387bf:	c5 f8 77             	vzeroupper 
   387c2:	c3                   	retq   
   387c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   387ca:	00 00 00 00 
   387ce:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   387d5:	00 00 00 00 
   387d9:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   387e0:	00 00 00 00 
   387e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   387eb:	00 00 00 00 
   387ef:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   387f6:	00 00 00 00 
   387fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000038800 <k0_SafeEncrypt_RIJ128>:
   38800:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   38804:	66 0f 6f 3d 74 fe ff 	movdqa -0x18c(%rip),%xmm7        # 38680 <GF16_csize>
   3880b:	ff 
   3880c:	66 0f 6f 05 2c fe ff 	movdqa -0x1d4(%rip),%xmm0        # 38640 <ENCODE_DATA>
   38813:	ff 
   38814:	66 0f 6f 15 34 fe ff 	movdqa -0x1cc(%rip),%xmm2        # 38650 <TransFwdHI>
   3881b:	ff 
   3881c:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   38820:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   38825:	66 0f db df          	pand   %xmm7,%xmm3
   38829:	66 0f db cf          	pand   %xmm7,%xmm1
   3882d:	66 0f 38 00 c3       	pshufb %xmm3,%xmm0
   38832:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   38837:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3883b:	66 0f ef 01          	pxor   (%rcx),%xmm0
   3883f:	48 83 c1 10          	add    $0x10,%rcx
   38843:	48 83 ea 01          	sub    $0x1,%rdx
   38847:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   3884b:	66 0f db c7          	pand   %xmm7,%xmm0
   3884f:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   38854:	66 0f db cf          	pand   %xmm7,%xmm1
   38858:	66 0f 6f 2d 30 fe ff 	movdqa -0x1d0(%rip),%xmm5        # 38690 <GF16_logTbl>
   3885f:	ff 
   38860:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   38865:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38869:	66 0f 6f 15 1f fe ff 	movdqa -0x1e1(%rip),%xmm2        # 38690 <GF16_logTbl>
   38870:	ff 
   38871:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   38876:	66 0f 6f 25 32 fe ff 	movdqa -0x1ce(%rip),%xmm4        # 386b0 <GF16_sqr1>
   3887d:	ff 
   3887e:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   38883:	66 0f 6f 1d 05 fe ff 	movdqa -0x1fb(%rip),%xmm3        # 38690 <GF16_logTbl>
   3888a:	ff 
   3888b:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   38890:	66 0f fc ea          	paddb  %xmm2,%xmm5
   38894:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   38898:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   3889c:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   388a0:	66 0f 6f 2d f8 fd ff 	movdqa -0x208(%rip),%xmm5        # 386a0 <GF16_expTbl>
   388a7:	ff 
   388a8:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   388ad:	66 0f ef e5          	pxor   %xmm5,%xmm4
   388b1:	66 0f 6f 2d 07 fe ff 	movdqa -0x1f9(%rip),%xmm5        # 386c0 <GF16_invLog>
   388b8:	ff 
   388b9:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   388be:	66 0f fc d5          	paddb  %xmm5,%xmm2
   388c2:	66 0f fc dd          	paddb  %xmm5,%xmm3
   388c6:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   388ca:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   388ce:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   388d2:	66 0f 6f 05 c6 fd ff 	movdqa -0x23a(%rip),%xmm0        # 386a0 <GF16_expTbl>
   388d9:	ff 
   388da:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   388df:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   388e3:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   388e7:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   388eb:	66 0f 6f 0d ad fd ff 	movdqa -0x253(%rip),%xmm1        # 386a0 <GF16_expTbl>
   388f2:	ff 
   388f3:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   388f8:	66 0f 6f 1d e0 fd ff 	movdqa -0x220(%rip),%xmm3        # 386e0 <FwdAffineLO>
   388ff:	ff 
   38900:	66 0f 6f 15 e8 fd ff 	movdqa -0x218(%rip),%xmm2        # 386f0 <FwdAffineHI>
   38907:	ff 
   38908:	66 0f 6f 25 f0 fd ff 	movdqa -0x210(%rip),%xmm4        # 38700 <FwdAffineCnt>
   3890f:	ff 
   38910:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   38915:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   3891a:	66 0f ef dc          	pxor   %xmm4,%xmm3
   3891e:	66 0f ef da          	pxor   %xmm2,%xmm3
   38922:	66 0f 38 00 1d e5 fd 	pshufb -0x21b(%rip),%xmm3        # 38710 <FwdShiftRows>
   38929:	ff ff 
   3892b:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   3892f:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   38933:	66 0f ef e4          	pxor   %xmm4,%xmm4
   38937:	66 0f 71 d2 04       	psrlw  $0x4,%xmm2
   3893c:	66 0f db cf          	pand   %xmm7,%xmm1
   38940:	66 0f 6f 05 d8 fd ff 	movdqa -0x228(%rip),%xmm0        # 38720 <GF16mul_E_2x>
   38947:	ff 
   38948:	66 0f 38 00 c1       	pshufb %xmm1,%xmm0
   3894d:	66 0f db d7          	pand   %xmm7,%xmm2
   38951:	66 0f 6f 0d d7 fd ff 	movdqa -0x229(%rip),%xmm1        # 38730 <GF16mul_1_Cx>
   38958:	ff 
   38959:	66 0f 38 00 ca       	pshufb %xmm2,%xmm1
   3895e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38962:	66 0f 38 00 1d d5 fd 	pshufb -0x22b(%rip),%xmm3        # 38740 <ColumnROR>
   38969:	ff ff 
   3896b:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3896f:	66 0f 38 00 1d c8 fd 	pshufb -0x238(%rip),%xmm3        # 38740 <ColumnROR>
   38976:	ff ff 
   38978:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3897c:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   38980:	66 0f 38 00 15 b7 fd 	pshufb -0x249(%rip),%xmm2        # 38740 <ColumnROR>
   38987:	ff ff 
   38989:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3898d:	66 0f 38 00 1d aa fd 	pshufb -0x256(%rip),%xmm3        # 38740 <ColumnROR>
   38994:	ff ff 
   38996:	66 0f ef e3          	pxor   %xmm3,%xmm4
   3899a:	66 0f ef c4          	pxor   %xmm4,%xmm0
   3899e:	66 0f ef 01          	pxor   (%rcx),%xmm0
   389a2:	48 83 c1 10          	add    $0x10,%rcx
   389a6:	48 83 ea 01          	sub    $0x1,%rdx
   389aa:	0f 8f 97 fe ff ff    	jg     38847 <k0_SafeEncrypt_RIJ128+0x47>
   389b0:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   389b4:	66 0f db c7          	pand   %xmm7,%xmm0
   389b8:	66 0f 71 d1 04       	psrlw  $0x4,%xmm1
   389bd:	66 0f db cf          	pand   %xmm7,%xmm1
   389c1:	66 0f 6f 2d c7 fc ff 	movdqa -0x339(%rip),%xmm5        # 38690 <GF16_logTbl>
   389c8:	ff 
   389c9:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   389ce:	66 0f ef c1          	pxor   %xmm1,%xmm0
   389d2:	66 0f 6f 15 b6 fc ff 	movdqa -0x34a(%rip),%xmm2        # 38690 <GF16_logTbl>
   389d9:	ff 
   389da:	66 0f 38 00 d0       	pshufb %xmm0,%xmm2
   389df:	66 0f 6f 25 c9 fc ff 	movdqa -0x337(%rip),%xmm4        # 386b0 <GF16_sqr1>
   389e6:	ff 
   389e7:	66 0f 38 00 e1       	pshufb %xmm1,%xmm4
   389ec:	66 0f 6f 1d 9c fc ff 	movdqa -0x364(%rip),%xmm3        # 38690 <GF16_logTbl>
   389f3:	ff 
   389f4:	66 0f 38 00 d9       	pshufb %xmm1,%xmm3
   389f9:	66 0f fc ea          	paddb  %xmm2,%xmm5
   389fd:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   38a01:	66 0f 64 ef          	pcmpgtb %xmm7,%xmm5
   38a05:	66 0f f8 c5          	psubb  %xmm5,%xmm0
   38a09:	66 0f 6f 2d 8f fc ff 	movdqa -0x371(%rip),%xmm5        # 386a0 <GF16_expTbl>
   38a10:	ff 
   38a11:	66 0f 38 00 e8       	pshufb %xmm0,%xmm5
   38a16:	66 0f ef e5          	pxor   %xmm5,%xmm4
   38a1a:	66 0f 6f 2d 9e fc ff 	movdqa -0x362(%rip),%xmm5        # 386c0 <GF16_invLog>
   38a21:	ff 
   38a22:	66 0f 38 00 ec       	pshufb %xmm4,%xmm5
   38a27:	66 0f fc d5          	paddb  %xmm5,%xmm2
   38a2b:	66 0f fc dd          	paddb  %xmm5,%xmm3
   38a2f:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   38a33:	66 0f 64 d7          	pcmpgtb %xmm7,%xmm2
   38a37:	66 0f f8 ea          	psubb  %xmm2,%xmm5
   38a3b:	66 0f 6f 05 5d fc ff 	movdqa -0x3a3(%rip),%xmm0        # 386a0 <GF16_expTbl>
   38a42:	ff 
   38a43:	66 0f 38 00 c5       	pshufb %xmm5,%xmm0
   38a48:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   38a4c:	66 0f 64 df          	pcmpgtb %xmm7,%xmm3
   38a50:	66 0f f8 eb          	psubb  %xmm3,%xmm5
   38a54:	66 0f 6f 0d 44 fc ff 	movdqa -0x3bc(%rip),%xmm1        # 386a0 <GF16_expTbl>
   38a5b:	ff 
   38a5c:	66 0f 38 00 cd       	pshufb %xmm5,%xmm1
   38a61:	66 0f 6f 1d 77 fc ff 	movdqa -0x389(%rip),%xmm3        # 386e0 <FwdAffineLO>
   38a68:	ff 
   38a69:	66 0f 6f 15 7f fc ff 	movdqa -0x381(%rip),%xmm2        # 386f0 <FwdAffineHI>
   38a70:	ff 
   38a71:	66 0f 6f 25 87 fc ff 	movdqa -0x379(%rip),%xmm4        # 38700 <FwdAffineCnt>
   38a78:	ff 
   38a79:	66 0f 38 00 d8       	pshufb %xmm0,%xmm3
   38a7e:	66 0f 38 00 d1       	pshufb %xmm1,%xmm2
   38a83:	66 0f ef dc          	pxor   %xmm4,%xmm3
   38a87:	66 0f ef da          	pxor   %xmm2,%xmm3
   38a8b:	66 0f 38 00 1d 7c fc 	pshufb -0x384(%rip),%xmm3        # 38710 <FwdShiftRows>
   38a92:	ff ff 
   38a94:	66 0f ef 19          	pxor   (%rcx),%xmm3
   38a98:	66 0f 6f 05 c0 fb ff 	movdqa -0x440(%rip),%xmm0        # 38660 <TransInvLO>
   38a9f:	ff 
   38aa0:	66 0f 6f 15 c8 fb ff 	movdqa -0x438(%rip),%xmm2        # 38670 <TransInvHI>
   38aa7:	ff 
   38aa8:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   38aac:	66 0f 71 d3 04       	psrlw  $0x4,%xmm3
   38ab1:	66 0f db cf          	pand   %xmm7,%xmm1
   38ab5:	66 0f db df          	pand   %xmm7,%xmm3
   38ab9:	66 0f 38 00 c1       	pshufb %xmm1,%xmm0
   38abe:	66 0f 38 00 d3       	pshufb %xmm3,%xmm2
   38ac3:	66 0f ef c2          	pxor   %xmm2,%xmm0
   38ac7:	f3 0f 7f 06          	movdqu %xmm0,(%rsi)
   38acb:	c5 f8 77             	vzeroupper 
   38ace:	c3                   	retq   
   38acf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38ad6:	00 00 00 
   38ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000038ae0 <y8_cpExpandAesKey_NI>:
   38ae0:	41 54                	push   %r12
   38ae2:	4c 8d 66 30          	lea    0x30(%rsi),%r12
   38ae6:	55                   	push   %rbp
   38ae7:	53                   	push   %rbx
   38ae8:	8b 6e 0c             	mov    0xc(%rsi),%ebp
   38aeb:	48 8d 9e 30 01 00 00 	lea    0x130(%rsi),%rbx
   38af2:	83 fd 0c             	cmp    $0xc,%ebp
   38af5:	74 29                	je     38b20 <y8_cpExpandAesKey_NI+0x40>
   38af7:	83 fd 0e             	cmp    $0xe,%ebp
   38afa:	74 34                	je     38b30 <y8_cpExpandAesKey_NI+0x50>
   38afc:	48 89 fe             	mov    %rdi,%rsi
   38aff:	4c 89 e7             	mov    %r12,%rdi
   38b02:	e8 59 01 00 00       	callq  38c60 <y8_aes128_KeyExpansion_NI>
   38b07:	89 ea                	mov    %ebp,%edx
   38b09:	4c 89 e6             	mov    %r12,%rsi
   38b0c:	48 89 df             	mov    %rbx,%rdi
   38b0f:	5b                   	pop    %rbx
   38b10:	5d                   	pop    %rbp
   38b11:	41 5c                	pop    %r12
   38b13:	e9 e8 00 00 00       	jmpq   38c00 <y8_aes_DecKeyExpansion_NI>
   38b18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   38b1f:	00 
   38b20:	48 89 fe             	mov    %rdi,%rsi
   38b23:	4c 89 e7             	mov    %r12,%rdi
   38b26:	e8 95 03 00 00       	callq  38ec0 <y8_aes192_KeyExpansion_NI>
   38b2b:	eb da                	jmp    38b07 <y8_cpExpandAesKey_NI+0x27>
   38b2d:	0f 1f 00             	nopl   (%rax)
   38b30:	48 89 fe             	mov    %rdi,%rsi
   38b33:	4c 89 e7             	mov    %r12,%rdi
   38b36:	e8 85 06 00 00       	callq  391c0 <y8_aes256_KeyExpansion_NI>
   38b3b:	eb ca                	jmp    38b07 <y8_cpExpandAesKey_NI+0x27>
   38b3d:	0f 1f 00             	nopl   (%rax)

0000000000038b40 <l9_cpExpandAesKey_NI>:
   38b40:	41 54                	push   %r12
   38b42:	4c 8d 66 30          	lea    0x30(%rsi),%r12
   38b46:	55                   	push   %rbp
   38b47:	53                   	push   %rbx
   38b48:	8b 6e 0c             	mov    0xc(%rsi),%ebp
   38b4b:	48 8d 9e 30 01 00 00 	lea    0x130(%rsi),%rbx
   38b52:	83 fd 0c             	cmp    $0xc,%ebp
   38b55:	74 29                	je     38b80 <l9_cpExpandAesKey_NI+0x40>
   38b57:	83 fd 0e             	cmp    $0xe,%ebp
   38b5a:	74 34                	je     38b90 <l9_cpExpandAesKey_NI+0x50>
   38b5c:	48 89 fe             	mov    %rdi,%rsi
   38b5f:	4c 89 e7             	mov    %r12,%rdi
   38b62:	e8 f9 09 00 00       	callq  39560 <l9_aes128_KeyExpansion_NI>
   38b67:	89 ea                	mov    %ebp,%edx
   38b69:	4c 89 e6             	mov    %r12,%rsi
   38b6c:	48 89 df             	mov    %rbx,%rdi
   38b6f:	5b                   	pop    %rbx
   38b70:	5d                   	pop    %rbp
   38b71:	41 5c                	pop    %r12
   38b73:	e9 88 09 00 00       	jmpq   39500 <l9_aes_DecKeyExpansion_NI>
   38b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   38b7f:	00 
   38b80:	48 89 fe             	mov    %rdi,%rsi
   38b83:	4c 89 e7             	mov    %r12,%rdi
   38b86:	e8 d5 0b 00 00       	callq  39760 <l9_aes192_KeyExpansion_NI>
   38b8b:	eb da                	jmp    38b67 <l9_cpExpandAesKey_NI+0x27>
   38b8d:	0f 1f 00             	nopl   (%rax)
   38b90:	48 89 fe             	mov    %rdi,%rsi
   38b93:	4c 89 e7             	mov    %r12,%rdi
   38b96:	e8 25 0e 00 00       	callq  399c0 <l9_aes256_KeyExpansion_NI>
   38b9b:	eb ca                	jmp    38b67 <l9_cpExpandAesKey_NI+0x27>
   38b9d:	0f 1f 00             	nopl   (%rax)

0000000000038ba0 <k0_cpExpandAesKey_NI>:
   38ba0:	41 54                	push   %r12
   38ba2:	4c 8d 66 30          	lea    0x30(%rsi),%r12
   38ba6:	55                   	push   %rbp
   38ba7:	53                   	push   %rbx
   38ba8:	48 8d 9e 30 01 00 00 	lea    0x130(%rsi),%rbx
   38baf:	8b 6e 0c             	mov    0xc(%rsi),%ebp
   38bb2:	83 fd 0c             	cmp    $0xc,%ebp
   38bb5:	74 29                	je     38be0 <k0_cpExpandAesKey_NI+0x40>
   38bb7:	83 fd 0e             	cmp    $0xe,%ebp
   38bba:	74 34                	je     38bf0 <k0_cpExpandAesKey_NI+0x50>
   38bbc:	48 89 fe             	mov    %rdi,%rsi
   38bbf:	4c 89 e7             	mov    %r12,%rdi
   38bc2:	e8 19 11 00 00       	callq  39ce0 <k0_aes128_KeyExpansion_NI>
   38bc7:	48 89 df             	mov    %rbx,%rdi
   38bca:	5b                   	pop    %rbx
   38bcb:	89 ea                	mov    %ebp,%edx
   38bcd:	5d                   	pop    %rbp
   38bce:	4c 89 e6             	mov    %r12,%rsi
   38bd1:	41 5c                	pop    %r12
   38bd3:	e9 88 10 00 00       	jmpq   39c60 <k0_aes_DecKeyExpansion_NI>
   38bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   38bdf:	00 
   38be0:	48 89 fe             	mov    %rdi,%rsi
   38be3:	4c 89 e7             	mov    %r12,%rdi
   38be6:	e8 f5 12 00 00       	callq  39ee0 <k0_aes192_KeyExpansion_NI>
   38beb:	eb da                	jmp    38bc7 <k0_cpExpandAesKey_NI+0x27>
   38bed:	0f 1f 00             	nopl   (%rax)
   38bf0:	48 89 fe             	mov    %rdi,%rsi
   38bf3:	4c 89 e7             	mov    %r12,%rdi
   38bf6:	e8 45 15 00 00       	callq  3a140 <k0_aes256_KeyExpansion_NI>
   38bfb:	eb ca                	jmp    38bc7 <k0_cpExpandAesKey_NI+0x27>
   38bfd:	0f 1f 00             	nopl   (%rax)

0000000000038c00 <y8_aes_DecKeyExpansion_NI>:
   38c00:	66 0f 6f 0e          	movdqa (%rsi),%xmm1
   38c04:	0f 29 0f             	movaps %xmm1,(%rdi)
   38c07:	83 fa 01             	cmp    $0x1,%edx
   38c0a:	7e 3c                	jle    38c48 <y8_aes_DecKeyExpansion_NI+0x48>
   38c0c:	8d 4a fe             	lea    -0x2(%rdx),%ecx
   38c0f:	b8 10 00 00 00       	mov    $0x10,%eax
   38c14:	48 83 c1 02          	add    $0x2,%rcx
   38c18:	48 c1 e1 04          	shl    $0x4,%rcx
   38c1c:	0f 1f 40 00          	nopl   0x0(%rax)
   38c20:	66 0f 38 db 04 06    	aesimc (%rsi,%rax,1),%xmm0
   38c26:	0f 29 04 07          	movaps %xmm0,(%rdi,%rax,1)
   38c2a:	48 83 c0 10          	add    $0x10,%rax
   38c2e:	48 39 c1             	cmp    %rax,%rcx
   38c31:	75 ed                	jne    38c20 <y8_aes_DecKeyExpansion_NI+0x20>
   38c33:	48 63 d2             	movslq %edx,%rdx
   38c36:	48 c1 e2 04          	shl    $0x4,%rdx
   38c3a:	66 0f 6f 14 16       	movdqa (%rsi,%rdx,1),%xmm2
   38c3f:	0f 29 14 17          	movaps %xmm2,(%rdi,%rdx,1)
   38c43:	c3                   	retq   
   38c44:	0f 1f 40 00          	nopl   0x0(%rax)
   38c48:	ba 10 00 00 00       	mov    $0x10,%edx
   38c4d:	66 0f 6f 14 16       	movdqa (%rsi,%rdx,1),%xmm2
   38c52:	0f 29 14 17          	movaps %xmm2,(%rdi,%rdx,1)
   38c56:	c3                   	retq   
   38c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   38c5e:	00 00 

0000000000038c60 <y8_aes128_KeyExpansion_NI>:
   38c60:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   38c64:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   38c68:	66 0f 3a df c8 01    	aeskeygenassist $0x1,%xmm0,%xmm1
   38c6e:	66 0f 70 d9 ff       	pshufd $0xff,%xmm1,%xmm3
   38c73:	0f 29 07             	movaps %xmm0,(%rdi)
   38c76:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38c7b:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   38c7f:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38c84:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   38c88:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38c8c:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   38c91:	66 0f ef cb          	pxor   %xmm3,%xmm1
   38c95:	66 0f ef ca          	pxor   %xmm2,%xmm1
   38c99:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38c9d:	66 0f 6f e0          	movdqa %xmm0,%xmm4
   38ca1:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38ca6:	66 0f 3a df c8 02    	aeskeygenassist $0x2,%xmm0,%xmm1
   38cac:	66 0f 70 d9 ff       	pshufd $0xff,%xmm1,%xmm3
   38cb1:	0f 29 47 10          	movaps %xmm0,0x10(%rdi)
   38cb5:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   38cb9:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38cbe:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   38cc2:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38cc6:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   38ccb:	66 0f ef cb          	pxor   %xmm3,%xmm1
   38ccf:	66 0f ef ca          	pxor   %xmm2,%xmm1
   38cd3:	66 0f ef c8          	pxor   %xmm0,%xmm1
   38cd7:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   38cdb:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38ce0:	66 0f 3a df c1 04    	aeskeygenassist $0x4,%xmm1,%xmm0
   38ce6:	66 0f 70 d8 ff       	pshufd $0xff,%xmm0,%xmm3
   38ceb:	0f 29 4f 20          	movaps %xmm1,0x20(%rdi)
   38cef:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   38cf3:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38cf8:	66 0f 6f c2          	movdqa %xmm2,%xmm0
   38cfc:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38d00:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   38d05:	66 0f ef c3          	pxor   %xmm3,%xmm0
   38d09:	66 0f ef c2          	pxor   %xmm2,%xmm0
   38d0d:	66 0f ef c8          	pxor   %xmm0,%xmm1
   38d11:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   38d15:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38d1a:	66 0f 3a df c1 08    	aeskeygenassist $0x8,%xmm1,%xmm0
   38d20:	66 0f 70 d8 ff       	pshufd $0xff,%xmm0,%xmm3
   38d25:	0f 29 4f 30          	movaps %xmm1,0x30(%rdi)
   38d29:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   38d2d:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38d32:	66 0f 6f c2          	movdqa %xmm2,%xmm0
   38d36:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38d3a:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   38d3f:	66 0f ef c3          	pxor   %xmm3,%xmm0
   38d43:	66 0f ef c2          	pxor   %xmm2,%xmm0
   38d47:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38d4b:	66 0f 6f e0          	movdqa %xmm0,%xmm4
   38d4f:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38d54:	66 0f 3a df c8 10    	aeskeygenassist $0x10,%xmm0,%xmm1
   38d5a:	66 0f 70 d9 ff       	pshufd $0xff,%xmm1,%xmm3
   38d5f:	0f 29 47 40          	movaps %xmm0,0x40(%rdi)
   38d63:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   38d67:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38d6c:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   38d70:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38d74:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   38d79:	66 0f ef cb          	pxor   %xmm3,%xmm1
   38d7d:	66 0f ef ca          	pxor   %xmm2,%xmm1
   38d81:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38d85:	66 0f 6f e0          	movdqa %xmm0,%xmm4
   38d89:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38d8e:	66 0f 3a df c8 20    	aeskeygenassist $0x20,%xmm0,%xmm1
   38d94:	66 0f 70 d9 ff       	pshufd $0xff,%xmm1,%xmm3
   38d99:	0f 29 47 50          	movaps %xmm0,0x50(%rdi)
   38d9d:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   38da1:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38da6:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   38daa:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38dae:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   38db3:	66 0f ef cb          	pxor   %xmm3,%xmm1
   38db7:	66 0f ef ca          	pxor   %xmm2,%xmm1
   38dbb:	66 0f ef c8          	pxor   %xmm0,%xmm1
   38dbf:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   38dc3:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38dc8:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
   38dce:	66 0f 70 c2 ff       	pshufd $0xff,%xmm2,%xmm0
   38dd3:	0f 29 4f 60          	movaps %xmm1,0x60(%rdi)
   38dd7:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   38ddb:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   38de0:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   38de4:	66 0f ef dc          	pxor   %xmm4,%xmm3
   38de8:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38ded:	66 0f ef d0          	pxor   %xmm0,%xmm2
   38df1:	66 0f ef d3          	pxor   %xmm3,%xmm2
   38df5:	66 0f ef ca          	pxor   %xmm2,%xmm1
   38df9:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   38dfd:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38e02:	66 0f 3a df c1 80    	aeskeygenassist $0x80,%xmm1,%xmm0
   38e08:	66 0f 70 d8 ff       	pshufd $0xff,%xmm0,%xmm3
   38e0d:	0f 29 4f 70          	movaps %xmm1,0x70(%rdi)
   38e11:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   38e15:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38e1a:	66 0f 6f c2          	movdqa %xmm2,%xmm0
   38e1e:	66 0f ef d4          	pxor   %xmm4,%xmm2
   38e22:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   38e27:	66 0f ef c3          	pxor   %xmm3,%xmm0
   38e2b:	66 0f ef c2          	pxor   %xmm2,%xmm0
   38e2f:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38e33:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   38e37:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   38e3b:	0f 29 87 80 00 00 00 	movaps %xmm0,0x80(%rdi)
   38e42:	66 0f 3a df c0 1b    	aeskeygenassist $0x1b,%xmm0,%xmm0
   38e48:	66 0f 70 d8 ff       	pshufd $0xff,%xmm0,%xmm3
   38e4d:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38e52:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   38e56:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   38e5b:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   38e5f:	66 0f ef cc          	pxor   %xmm4,%xmm1
   38e63:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   38e68:	66 0f ef c3          	pxor   %xmm3,%xmm0
   38e6c:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38e70:	66 0f ef c2          	pxor   %xmm2,%xmm0
   38e74:	66 0f 6f e0          	movdqa %xmm0,%xmm4
   38e78:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38e7d:	66 0f 3a df d0 36    	aeskeygenassist $0x36,%xmm0,%xmm2
   38e83:	66 0f 70 da ff       	pshufd $0xff,%xmm2,%xmm3
   38e88:	0f 29 87 90 00 00 00 	movaps %xmm0,0x90(%rdi)
   38e8f:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   38e93:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   38e98:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   38e9c:	66 0f ef cc          	pxor   %xmm4,%xmm1
   38ea0:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38ea5:	66 0f ef d3          	pxor   %xmm3,%xmm2
   38ea9:	66 0f ef ca          	pxor   %xmm2,%xmm1
   38ead:	66 0f ef c1          	pxor   %xmm1,%xmm0
   38eb1:	0f 29 87 a0 00 00 00 	movaps %xmm0,0xa0(%rdi)
   38eb8:	c3                   	retq   
   38eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000038ec0 <y8_aes192_KeyExpansion_NI>:
   38ec0:	f3 0f 6f 16          	movdqu (%rsi),%xmm2
   38ec4:	f3 0f 7e 76 10       	movq   0x10(%rsi),%xmm6
   38ec9:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   38ecd:	0f 29 17             	movaps %xmm2,(%rdi)
   38ed0:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38ed5:	66 0f 3a df de 01    	aeskeygenassist $0x1,%xmm6,%xmm3
   38edb:	66 0f 6f ee          	movdqa %xmm6,%xmm5
   38edf:	66 0f 70 cb 55       	pshufd $0x55,%xmm3,%xmm1
   38ee4:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   38ee8:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   38eed:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   38ef2:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   38ef6:	66 0f ef c4          	pxor   %xmm4,%xmm0
   38efa:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   38eff:	66 0f ef d9          	pxor   %xmm1,%xmm3
   38f03:	66 0f ef d8          	pxor   %xmm0,%xmm3
   38f07:	66 0f ef da          	pxor   %xmm2,%xmm3
   38f0b:	66 0f 70 e3 ff       	pshufd $0xff,%xmm3,%xmm4
   38f10:	66 0f ef ec          	pxor   %xmm4,%xmm5
   38f14:	66 0f ef ee          	pxor   %xmm6,%xmm5
   38f18:	66 0f 6f e5          	movdqa %xmm5,%xmm4
   38f1c:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   38f20:	66 0f 3a df d5 02    	aeskeygenassist $0x2,%xmm5,%xmm2
   38f26:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   38f2a:	66 0f 3a 0f c3 08    	palignr $0x8,%xmm3,%xmm0
   38f30:	66 0f 70 ca 55       	pshufd $0x55,%xmm2,%xmm1
   38f35:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   38f3a:	0f 29 47 20          	movaps %xmm0,0x20(%rdi)
   38f3e:	66 0f 6c f3          	punpcklqdq %xmm3,%xmm6
   38f42:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   38f46:	0f 29 77 10          	movaps %xmm6,0x10(%rdi)
   38f4a:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   38f4f:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   38f53:	66 0f ef c5          	pxor   %xmm5,%xmm0
   38f57:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   38f5b:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38f60:	66 0f ef d1          	pxor   %xmm1,%xmm2
   38f64:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   38f69:	66 0f ef d0          	pxor   %xmm0,%xmm2
   38f6d:	66 0f ef d3          	pxor   %xmm3,%xmm2
   38f71:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   38f75:	66 0f 70 c2 ff       	pshufd $0xff,%xmm2,%xmm0
   38f7a:	66 0f ef e8          	pxor   %xmm0,%xmm5
   38f7e:	66 0f ef ec          	pxor   %xmm4,%xmm5
   38f82:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   38f86:	0f 29 57 30          	movaps %xmm2,0x30(%rdi)
   38f8a:	66 0f 3a df d5 04    	aeskeygenassist $0x4,%xmm5,%xmm2
   38f90:	66 0f 70 c2 55       	pshufd $0x55,%xmm2,%xmm0
   38f95:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38f9a:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   38f9e:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   38fa3:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   38fa7:	66 0f ef dc          	pxor   %xmm4,%xmm3
   38fab:	66 0f 6f e5          	movdqa %xmm5,%xmm4
   38faf:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   38fb4:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38fb9:	66 0f ef d0          	pxor   %xmm0,%xmm2
   38fbd:	66 0f ef d3          	pxor   %xmm3,%xmm2
   38fc1:	66 0f ef d1          	pxor   %xmm1,%xmm2
   38fc5:	66 0f 70 f2 ff       	pshufd $0xff,%xmm2,%xmm6
   38fca:	66 0f ef e6          	pxor   %xmm6,%xmm4
   38fce:	66 0f 6f f4          	movdqa %xmm4,%xmm6
   38fd2:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   38fd6:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   38fdb:	66 0f ef f5          	pxor   %xmm5,%xmm6
   38fdf:	66 0f 6f c6          	movdqa %xmm6,%xmm0
   38fe3:	66 0f 3a df ce 08    	aeskeygenassist $0x8,%xmm6,%xmm1
   38fe9:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   38fed:	66 0f 3a 0f c2 08    	palignr $0x8,%xmm2,%xmm0
   38ff3:	66 0f 6c ea          	punpcklqdq %xmm2,%xmm5
   38ff7:	0f 29 6f 40          	movaps %xmm5,0x40(%rdi)
   38ffb:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   39000:	0f 29 47 50          	movaps %xmm0,0x50(%rdi)
   39004:	66 0f 70 c1 55       	pshufd $0x55,%xmm1,%xmm0
   39009:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   3900d:	66 0f ef dc          	pxor   %xmm4,%xmm3
   39011:	66 0f 6f e6          	movdqa %xmm6,%xmm4
   39015:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   3901a:	66 0f ef c8          	pxor   %xmm0,%xmm1
   3901e:	66 0f ef cb          	pxor   %xmm3,%xmm1
   39022:	66 0f ef ca          	pxor   %xmm2,%xmm1
   39026:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   3902a:	66 0f 6f e8          	movdqa %xmm0,%xmm5
   3902e:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   39033:	66 0f 70 c9 ff       	pshufd $0xff,%xmm1,%xmm1
   39038:	0f 29 47 60          	movaps %xmm0,0x60(%rdi)
   3903c:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   39041:	66 0f ef e1          	pxor   %xmm1,%xmm4
   39045:	66 0f ef e6          	pxor   %xmm6,%xmm4
   39049:	66 0f 3a df cc 10    	aeskeygenassist $0x10,%xmm4,%xmm1
   3904f:	66 0f 6f d5          	movdqa %xmm5,%xmm2
   39053:	66 0f 70 d9 55       	pshufd $0x55,%xmm1,%xmm3
   39058:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   3905d:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   39061:	66 0f ef d5          	pxor   %xmm5,%xmm2
   39065:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   3906a:	66 0f ef cb          	pxor   %xmm3,%xmm1
   3906e:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   39072:	66 0f ef ca          	pxor   %xmm2,%xmm1
   39076:	66 0f ef c8          	pxor   %xmm0,%xmm1
   3907a:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   3907f:	66 0f 70 e9 ff       	pshufd $0xff,%xmm1,%xmm5
   39084:	66 0f ef dd          	pxor   %xmm5,%xmm3
   39088:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   3908c:	66 0f ef ec          	pxor   %xmm4,%xmm5
   39090:	66 0f 6c e1          	punpcklqdq %xmm1,%xmm4
   39094:	0f 29 67 70          	movaps %xmm4,0x70(%rdi)
   39098:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   3909c:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   390a1:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   390a5:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   390a9:	66 0f 3a 0f c1 08    	palignr $0x8,%xmm1,%xmm0
   390af:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   390b4:	0f 29 87 80 00 00 00 	movaps %xmm0,0x80(%rdi)
   390bb:	66 0f 3a df c5 20    	aeskeygenassist $0x20,%xmm5,%xmm0
   390c1:	66 0f 70 d0 55       	pshufd $0x55,%xmm0,%xmm2
   390c6:	66 0f 6f c3          	movdqa %xmm3,%xmm0
   390ca:	66 0f ef dc          	pxor   %xmm4,%xmm3
   390ce:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   390d3:	66 0f ef c2          	pxor   %xmm2,%xmm0
   390d7:	66 0f ef c3          	pxor   %xmm3,%xmm0
   390db:	66 0f 6f dd          	movdqa %xmm5,%xmm3
   390df:	66 0f 6f d0          	movdqa %xmm0,%xmm2
   390e3:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   390e8:	66 0f ef d1          	pxor   %xmm1,%xmm2
   390ec:	66 0f 70 c2 ff       	pshufd $0xff,%xmm2,%xmm0
   390f1:	0f 29 97 90 00 00 00 	movaps %xmm2,0x90(%rdi)
   390f8:	66 0f ef d8          	pxor   %xmm0,%xmm3
   390fc:	66 0f ef dd          	pxor   %xmm5,%xmm3
   39100:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   39104:	66 0f 3a df c3 40    	aeskeygenassist $0x40,%xmm3,%xmm0
   3910a:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   3910f:	66 0f 70 e0 55       	pshufd $0x55,%xmm0,%xmm4
   39114:	66 0f 6f cd          	movdqa %xmm5,%xmm1
   39118:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   3911d:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   39121:	66 0f ef cd          	pxor   %xmm5,%xmm1
   39125:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   3912a:	66 0f ef c4          	pxor   %xmm4,%xmm0
   3912e:	66 0f ef c1          	pxor   %xmm1,%xmm0
   39132:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   39136:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3913a:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   3913f:	66 0f 70 d0 ff       	pshufd $0xff,%xmm0,%xmm2
   39144:	66 0f 6f e0          	movdqa %xmm0,%xmm4
   39148:	66 0f ef ca          	pxor   %xmm2,%xmm1
   3914c:	66 0f ef cb          	pxor   %xmm3,%xmm1
   39150:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   39154:	66 0f 6c d8          	punpcklqdq %xmm0,%xmm3
   39158:	66 0f 3a 0f d0 08    	palignr $0x8,%xmm0,%xmm2
   3915e:	0f 29 9f a0 00 00 00 	movaps %xmm3,0xa0(%rdi)
   39165:	66 0f 3a df c9 80    	aeskeygenassist $0x80,%xmm1,%xmm1
   3916b:	66 0f 70 c9 55       	pshufd $0x55,%xmm1,%xmm1
   39170:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   39175:	0f 29 97 b0 00 00 00 	movaps %xmm2,0xb0(%rdi)
   3917c:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   39180:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   39185:	66 0f 6f da          	movdqa %xmm2,%xmm3
   39189:	66 0f ef d4          	pxor   %xmm4,%xmm2
   3918d:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   39192:	66 0f ef cb          	pxor   %xmm3,%xmm1
   39196:	66 0f ef ca          	pxor   %xmm2,%xmm1
   3919a:	66 0f ef c1          	pxor   %xmm1,%xmm0
   3919e:	0f 29 87 c0 00 00 00 	movaps %xmm0,0xc0(%rdi)
   391a5:	c3                   	retq   
   391a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   391ad:	00 00 00 
   391b0:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   391b7:	00 00 00 
   391ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000391c0 <y8_aes256_KeyExpansion_NI>:
   391c0:	f3 0f 6f 3e          	movdqu (%rsi),%xmm7
   391c4:	f3 0f 6f 66 10       	movdqu 0x10(%rsi),%xmm4
   391c9:	66 0f 6f cf          	movdqa %xmm7,%xmm1
   391cd:	0f 29 3f             	movaps %xmm7,(%rdi)
   391d0:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   391d5:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   391d9:	66 0f 3a df ec 01    	aeskeygenassist $0x1,%xmm4,%xmm5
   391df:	0f 29 67 10          	movaps %xmm4,0x10(%rdi)
   391e3:	66 44 0f 6f c1       	movdqa %xmm1,%xmm8
   391e8:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   391ed:	66 0f 70 dd ff       	pshufd $0xff,%xmm5,%xmm3
   391f2:	66 41 0f 73 f8 04    	pslldq $0x4,%xmm8
   391f8:	66 41 0f 6f e8       	movdqa %xmm8,%xmm5
   391fd:	66 44 0f ef c1       	pxor   %xmm1,%xmm8
   39202:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   39206:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   3920b:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   39210:	66 0f ef eb          	pxor   %xmm3,%xmm5
   39214:	66 41 0f ef e8       	pxor   %xmm8,%xmm5
   39219:	66 0f ef fd          	pxor   %xmm5,%xmm7
   3921d:	66 0f 3a df f7 00    	aeskeygenassist $0x0,%xmm7,%xmm6
   39223:	66 0f 6f ef          	movdqa %xmm7,%xmm5
   39227:	66 0f 70 d6 aa       	pshufd $0xaa,%xmm6,%xmm2
   3922c:	66 0f 6f f1          	movdqa %xmm1,%xmm6
   39230:	66 0f ef c8          	pxor   %xmm0,%xmm1
   39234:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   39239:	0f 29 7f 20          	movaps %xmm7,0x20(%rdi)
   3923d:	66 0f 73 fe 04       	pslldq $0x4,%xmm6
   39242:	66 0f ef f2          	pxor   %xmm2,%xmm6
   39246:	66 0f ef f1          	pxor   %xmm1,%xmm6
   3924a:	66 0f ef f4          	pxor   %xmm4,%xmm6
   3924e:	0f 29 77 30          	movaps %xmm6,0x30(%rdi)
   39252:	66 0f 3a df c6 02    	aeskeygenassist $0x2,%xmm6,%xmm0
   39258:	66 0f 70 c8 ff       	pshufd $0xff,%xmm0,%xmm1
   3925d:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   39261:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   39266:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   3926a:	66 0f ef e8          	pxor   %xmm0,%xmm5
   3926e:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   39273:	66 0f 6f c3          	movdqa %xmm3,%xmm0
   39277:	66 0f ef c1          	pxor   %xmm1,%xmm0
   3927b:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   3927f:	66 0f ef e8          	pxor   %xmm0,%xmm5
   39283:	66 0f ef ef          	pxor   %xmm7,%xmm5
   39287:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   3928c:	66 0f 3a df e5 00    	aeskeygenassist $0x0,%xmm5,%xmm4
   39292:	66 0f 70 c4 aa       	pshufd $0xaa,%xmm4,%xmm0
   39297:	0f 29 6f 40          	movaps %xmm5,0x40(%rdi)
   3929b:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   3929f:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   392a4:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   392a8:	66 0f ef d1          	pxor   %xmm1,%xmm2
   392ac:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   392b1:	66 0f ef e0          	pxor   %xmm0,%xmm4
   392b5:	66 0f ef e2          	pxor   %xmm2,%xmm4
   392b9:	66 0f 6f d5          	movdqa %xmm5,%xmm2
   392bd:	66 0f ef f4          	pxor   %xmm4,%xmm6
   392c1:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   392c6:	66 0f 3a df de 04    	aeskeygenassist $0x4,%xmm6,%xmm3
   392cc:	66 0f 70 c3 ff       	pshufd $0xff,%xmm3,%xmm0
   392d1:	0f 29 77 50          	movaps %xmm6,0x50(%rdi)
   392d5:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   392d9:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   392de:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   392e2:	66 0f ef ca          	pxor   %xmm2,%xmm1
   392e6:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   392eb:	66 0f ef d8          	pxor   %xmm0,%xmm3
   392ef:	66 0f 6f c6          	movdqa %xmm6,%xmm0
   392f3:	66 0f ef d9          	pxor   %xmm1,%xmm3
   392f7:	66 0f ef eb          	pxor   %xmm3,%xmm5
   392fb:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   39300:	66 0f 3a df d5 00    	aeskeygenassist $0x0,%xmm5,%xmm2
   39306:	66 0f 70 e2 aa       	pshufd $0xaa,%xmm2,%xmm4
   3930b:	0f 29 6f 60          	movaps %xmm5,0x60(%rdi)
   3930f:	66 0f 6f f8          	movdqa %xmm0,%xmm7
   39313:	66 0f 73 ff 04       	pslldq $0x4,%xmm7
   39318:	66 0f 6f d7          	movdqa %xmm7,%xmm2
   3931c:	66 0f ef f8          	pxor   %xmm0,%xmm7
   39320:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   39325:	66 0f ef d4          	pxor   %xmm4,%xmm2
   39329:	66 0f ef d7          	pxor   %xmm7,%xmm2
   3932d:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   39331:	66 0f 6f d5          	movdqa %xmm5,%xmm2
   39335:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   3933a:	66 0f ef e6          	pxor   %xmm6,%xmm4
   3933e:	66 0f 3a df cc 08    	aeskeygenassist $0x8,%xmm4,%xmm1
   39344:	66 0f 70 d9 ff       	pshufd $0xff,%xmm1,%xmm3
   39349:	66 0f 6f c2          	movdqa %xmm2,%xmm0
   3934d:	0f 29 67 70          	movaps %xmm4,0x70(%rdi)
   39351:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   39356:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   3935a:	66 0f ef c2          	pxor   %xmm2,%xmm0
   3935e:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   39362:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   39367:	66 0f ef cb          	pxor   %xmm3,%xmm1
   3936b:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   39370:	66 0f ef c8          	pxor   %xmm0,%xmm1
   39374:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   39378:	66 0f ef dd          	pxor   %xmm5,%xmm3
   3937c:	66 0f 3a df cb 00    	aeskeygenassist $0x0,%xmm3,%xmm1
   39382:	66 0f 70 e9 aa       	pshufd $0xaa,%xmm1,%xmm5
   39387:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   3938b:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   39390:	0f 29 9f 80 00 00 00 	movaps %xmm3,0x80(%rdi)
   39397:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   3939b:	66 0f ef d1          	pxor   %xmm1,%xmm2
   3939f:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   393a4:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   393a8:	66 0f ef cd          	pxor   %xmm5,%xmm1
   393ac:	66 0f ef d1          	pxor   %xmm1,%xmm2
   393b0:	66 0f 6f cb          	movdqa %xmm3,%xmm1
   393b4:	66 0f ef d4          	pxor   %xmm4,%xmm2
   393b8:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   393bd:	66 0f 3a df c2 10    	aeskeygenassist $0x10,%xmm2,%xmm0
   393c3:	66 0f 70 e8 ff       	pshufd $0xff,%xmm0,%xmm5
   393c8:	0f 29 97 90 00 00 00 	movaps %xmm2,0x90(%rdi)
   393cf:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   393d3:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   393d8:	66 0f 6f e0          	movdqa %xmm0,%xmm4
   393dc:	66 0f ef c8          	pxor   %xmm0,%xmm1
   393e0:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   393e5:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   393e9:	66 0f ef c5          	pxor   %xmm5,%xmm0
   393ed:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   393f1:	66 0f ef c8          	pxor   %xmm0,%xmm1
   393f5:	66 0f ef cb          	pxor   %xmm3,%xmm1
   393f9:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   393fe:	66 0f 3a df c1 00    	aeskeygenassist $0x0,%xmm1,%xmm0
   39404:	66 0f 70 e0 aa       	pshufd $0xaa,%xmm0,%xmm4
   39409:	0f 29 8f a0 00 00 00 	movaps %xmm1,0xa0(%rdi)
   39410:	66 0f 6f dd          	movdqa %xmm5,%xmm3
   39414:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   39419:	66 0f 6f c3          	movdqa %xmm3,%xmm0
   3941d:	66 0f ef dd          	pxor   %xmm5,%xmm3
   39421:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   39425:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   3942a:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   3942f:	66 0f ef c4          	pxor   %xmm4,%xmm0
   39433:	66 0f ef c3          	pxor   %xmm3,%xmm0
   39437:	66 0f ef d0          	pxor   %xmm0,%xmm2
   3943b:	66 0f 6f c5          	movdqa %xmm5,%xmm0
   3943f:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   39444:	66 0f 3a df da 20    	aeskeygenassist $0x20,%xmm2,%xmm3
   3944a:	66 0f 70 e3 ff       	pshufd $0xff,%xmm3,%xmm4
   3944f:	0f 29 97 b0 00 00 00 	movaps %xmm2,0xb0(%rdi)
   39456:	66 0f 6f d8          	movdqa %xmm0,%xmm3
   3945a:	66 0f ef c5          	pxor   %xmm5,%xmm0
   3945e:	66 0f 6f ea          	movdqa %xmm2,%xmm5
   39462:	66 0f 73 fd 04       	pslldq $0x4,%xmm5
   39467:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   3946c:	66 0f ef dc          	pxor   %xmm4,%xmm3
   39470:	66 0f ef d8          	pxor   %xmm0,%xmm3
   39474:	66 0f ef d9          	pxor   %xmm1,%xmm3
   39478:	66 0f 6f cd          	movdqa %xmm5,%xmm1
   3947c:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   39481:	66 0f 3a df c3 00    	aeskeygenassist $0x0,%xmm3,%xmm0
   39487:	66 0f 70 e0 aa       	pshufd $0xaa,%xmm0,%xmm4
   3948c:	0f 29 9f c0 00 00 00 	movaps %xmm3,0xc0(%rdi)
   39493:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   39497:	66 0f ef cd          	pxor   %xmm5,%xmm1
   3949b:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   394a0:	66 0f ef c4          	pxor   %xmm4,%xmm0
   394a4:	66 0f 6f e3          	movdqa %xmm3,%xmm4
   394a8:	66 0f ef c1          	pxor   %xmm1,%xmm0
   394ac:	66 0f ef c2          	pxor   %xmm2,%xmm0
   394b0:	66 0f 73 fc 04       	pslldq $0x4,%xmm4
   394b5:	0f 29 87 d0 00 00 00 	movaps %xmm0,0xd0(%rdi)
   394bc:	66 0f 3a df c0 40    	aeskeygenassist $0x40,%xmm0,%xmm0
   394c2:	66 0f 70 c0 ff       	pshufd $0xff,%xmm0,%xmm0
   394c7:	66 0f 6f d4          	movdqa %xmm4,%xmm2
   394cb:	66 0f 73 fa 04       	pslldq $0x4,%xmm2
   394d0:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   394d4:	66 0f ef d4          	pxor   %xmm4,%xmm2
   394d8:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   394dd:	66 0f ef c8          	pxor   %xmm0,%xmm1
   394e1:	66 0f ef ca          	pxor   %xmm2,%xmm1
   394e5:	66 0f ef cb          	pxor   %xmm3,%xmm1
   394e9:	0f 29 8f e0 00 00 00 	movaps %xmm1,0xe0(%rdi)
   394f0:	c3                   	retq   
   394f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   394f8:	00 00 00 
   394fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000039500 <l9_aes_DecKeyExpansion_NI>:
   39500:	c5 f9 6f 0e          	vmovdqa (%rsi),%xmm1
   39504:	c5 f8 29 0f          	vmovaps %xmm1,(%rdi)
   39508:	83 fa 01             	cmp    $0x1,%edx
   3950b:	7e 43                	jle    39550 <l9_aes_DecKeyExpansion_NI+0x50>
   3950d:	8d 4a fe             	lea    -0x2(%rdx),%ecx
   39510:	b8 10 00 00 00       	mov    $0x10,%eax
   39515:	48 83 c1 02          	add    $0x2,%rcx
   39519:	48 c1 e1 04          	shl    $0x4,%rcx
   3951d:	0f 1f 00             	nopl   (%rax)
   39520:	c4 e2 79 db 04 06    	vaesimc (%rsi,%rax,1),%xmm0
   39526:	c5 f8 29 04 07       	vmovaps %xmm0,(%rdi,%rax,1)
   3952b:	48 83 c0 10          	add    $0x10,%rax
   3952f:	48 39 c1             	cmp    %rax,%rcx
   39532:	75 ec                	jne    39520 <l9_aes_DecKeyExpansion_NI+0x20>
   39534:	48 63 d2             	movslq %edx,%rdx
   39537:	48 c1 e2 04          	shl    $0x4,%rdx
   3953b:	c5 f9 6f 14 16       	vmovdqa (%rsi,%rdx,1),%xmm2
   39540:	c5 f8 29 14 17       	vmovaps %xmm2,(%rdi,%rdx,1)
   39545:	c3                   	retq   
   39546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3954d:	00 00 00 
   39550:	ba 10 00 00 00       	mov    $0x10,%edx
   39555:	c5 f9 6f 14 16       	vmovdqa (%rsi,%rdx,1),%xmm2
   3955a:	c5 f8 29 14 17       	vmovaps %xmm2,(%rdi,%rdx,1)
   3955f:	c3                   	retq   

0000000000039560 <l9_aes128_KeyExpansion_NI>:
   39560:	c5 fa 6f 06          	vmovdqu (%rsi),%xmm0
   39564:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   39569:	c4 e3 79 df c8 01    	vaeskeygenassist $0x1,%xmm0,%xmm1
   3956f:	c5 f8 29 07          	vmovaps %xmm0,(%rdi)
   39573:	c5 d9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm4
   39578:	c5 f9 70 d9 ff       	vpshufd $0xff,%xmm1,%xmm3
   3957d:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   39582:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39586:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   3958a:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   3958e:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39592:	c4 e3 79 df d0 02    	vaeskeygenassist $0x2,%xmm0,%xmm2
   39598:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   3959d:	c5 f8 29 47 10       	vmovaps %xmm0,0x10(%rdi)
   395a2:	c5 f9 70 e2 ff       	vpshufd $0xff,%xmm2,%xmm4
   395a7:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   395ac:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   395b1:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   395b5:	c5 e1 ef d4          	vpxor  %xmm4,%xmm3,%xmm2
   395b9:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   395bd:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   395c1:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   395c6:	c4 e3 79 df c1 04    	vaeskeygenassist $0x4,%xmm1,%xmm0
   395cc:	c5 f8 29 4f 20       	vmovaps %xmm1,0x20(%rdi)
   395d1:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   395d6:	c5 f9 70 d8 ff       	vpshufd $0xff,%xmm0,%xmm3
   395db:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   395e0:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   395e4:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   395e8:	c5 e9 ef c0          	vpxor  %xmm0,%xmm2,%xmm0
   395ec:	c5 f9 ef c9          	vpxor  %xmm1,%xmm0,%xmm1
   395f0:	c4 e3 79 df d1 08    	vaeskeygenassist $0x8,%xmm1,%xmm2
   395f6:	c5 f9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm0
   395fb:	c5 f8 29 4f 30       	vmovaps %xmm1,0x30(%rdi)
   39600:	c5 f9 70 e2 ff       	vpshufd $0xff,%xmm2,%xmm4
   39605:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   3960a:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   3960f:	c5 e9 ef c0          	vpxor  %xmm0,%xmm2,%xmm0
   39613:	c5 e1 ef d4          	vpxor  %xmm4,%xmm3,%xmm2
   39617:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3961b:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   3961f:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39624:	c4 e3 79 df c8 10    	vaeskeygenassist $0x10,%xmm0,%xmm1
   3962a:	c5 f8 29 47 40       	vmovaps %xmm0,0x40(%rdi)
   3962f:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   39634:	c5 f9 70 d9 ff       	vpshufd $0xff,%xmm1,%xmm3
   39639:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   3963e:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39642:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39646:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   3964a:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   3964e:	c4 e3 79 df d0 20    	vaeskeygenassist $0x20,%xmm0,%xmm2
   39654:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39659:	c5 f8 29 47 50       	vmovaps %xmm0,0x50(%rdi)
   3965e:	c5 f9 70 e2 ff       	vpshufd $0xff,%xmm2,%xmm4
   39663:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   39668:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   3966d:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39671:	c5 e1 ef d4          	vpxor  %xmm4,%xmm3,%xmm2
   39675:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   39679:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   3967d:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   39682:	c4 e3 79 df d1 40    	vaeskeygenassist $0x40,%xmm1,%xmm2
   39688:	c5 f8 29 4f 60       	vmovaps %xmm1,0x60(%rdi)
   3968d:	c5 f9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm0
   39692:	c5 f9 70 da ff       	vpshufd $0xff,%xmm2,%xmm3
   39697:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   3969c:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   396a0:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   396a4:	c5 e9 ef d0          	vpxor  %xmm0,%xmm2,%xmm2
   396a8:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   396ac:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   396b1:	c4 e3 79 df c1 80    	vaeskeygenassist $0x80,%xmm1,%xmm0
   396b7:	c5 f8 29 4f 70       	vmovaps %xmm1,0x70(%rdi)
   396bc:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   396c1:	c5 f9 70 d8 ff       	vpshufd $0xff,%xmm0,%xmm3
   396c6:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   396cb:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   396cf:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   396d3:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   396d7:	c5 f9 ef d1          	vpxor  %xmm1,%xmm0,%xmm2
   396db:	c4 e3 79 df ca 1b    	vaeskeygenassist $0x1b,%xmm2,%xmm1
   396e1:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   396e6:	c5 f8 29 97 80 00 00 	vmovaps %xmm2,0x80(%rdi)
   396ed:	00 
   396ee:	c5 f9 70 e1 ff       	vpshufd $0xff,%xmm1,%xmm4
   396f3:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   396f8:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   396fd:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39701:	c5 e1 ef cc          	vpxor  %xmm4,%xmm3,%xmm1
   39705:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39709:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3970d:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39712:	c4 e3 79 df d0 36    	vaeskeygenassist $0x36,%xmm0,%xmm2
   39718:	c5 f8 29 87 90 00 00 	vmovaps %xmm0,0x90(%rdi)
   3971f:	00 
   39720:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   39725:	c5 f9 70 da ff       	vpshufd $0xff,%xmm2,%xmm3
   3972a:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   3972f:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   39733:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   39737:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   3973b:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   3973f:	c5 f8 29 87 a0 00 00 	vmovaps %xmm0,0xa0(%rdi)
   39746:	00 
   39747:	c3                   	retq   
   39748:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3974f:	00 00 00 
   39752:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39759:	00 00 00 
   3975c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000039760 <l9_aes192_KeyExpansion_NI>:
   39760:	c5 fa 7e 6e 10       	vmovq  0x10(%rsi),%xmm5
   39765:	c5 fa 6f 16          	vmovdqu (%rsi),%xmm2
   39769:	c4 e3 79 df cd 01    	vaeskeygenassist $0x1,%xmm5,%xmm1
   3976f:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39774:	c5 f8 29 17          	vmovaps %xmm2,(%rdi)
   39778:	c5 f9 70 e1 55       	vpshufd $0x55,%xmm1,%xmm4
   3977d:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39782:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   39787:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   3978b:	c5 e1 ef cc          	vpxor  %xmm4,%xmm3,%xmm1
   3978f:	c5 e1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm3
   39794:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39798:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3979c:	c5 f9 70 e0 ff       	vpshufd $0xff,%xmm0,%xmm4
   397a1:	c5 e1 ef dc          	vpxor  %xmm4,%xmm3,%xmm3
   397a5:	c5 e1 ef e5          	vpxor  %xmm5,%xmm3,%xmm4
   397a9:	c5 d1 6c e8          	vpunpcklqdq %xmm0,%xmm5,%xmm5
   397ad:	c4 e3 59 0f c8 08    	vpalignr $0x8,%xmm0,%xmm4,%xmm1
   397b3:	c5 f8 29 6f 10       	vmovaps %xmm5,0x10(%rdi)
   397b8:	c5 d1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm5
   397bd:	c5 e9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm2
   397c2:	c5 f8 29 4f 20       	vmovaps %xmm1,0x20(%rdi)
   397c7:	c4 e3 79 df cc 02    	vaeskeygenassist $0x2,%xmm4,%xmm1
   397cd:	c5 f9 70 d9 55       	vpshufd $0x55,%xmm1,%xmm3
   397d2:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   397d7:	c5 e9 ef d5          	vpxor  %xmm5,%xmm2,%xmm2
   397db:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   397df:	c5 e1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm3
   397e4:	c5 e9 ef d1          	vpxor  %xmm1,%xmm2,%xmm2
   397e8:	c5 e9 ef c8          	vpxor  %xmm0,%xmm2,%xmm1
   397ec:	c5 f9 70 c1 ff       	vpshufd $0xff,%xmm1,%xmm0
   397f1:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   397f6:	c5 f8 29 4f 30       	vmovaps %xmm1,0x30(%rdi)
   397fb:	c5 e1 ef d8          	vpxor  %xmm0,%xmm3,%xmm3
   397ff:	c5 e1 ef dc          	vpxor  %xmm4,%xmm3,%xmm3
   39803:	c4 e3 79 df c3 04    	vaeskeygenassist $0x4,%xmm3,%xmm0
   39809:	c5 f9 70 e8 55       	vpshufd $0x55,%xmm0,%xmm5
   3980e:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39813:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39818:	c5 f9 ef d2          	vpxor  %xmm2,%xmm0,%xmm2
   3981c:	c5 d9 ef c5          	vpxor  %xmm5,%xmm4,%xmm0
   39820:	c5 d9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm4
   39825:	c5 e9 ef d0          	vpxor  %xmm0,%xmm2,%xmm2
   39829:	c5 e9 ef d1          	vpxor  %xmm1,%xmm2,%xmm2
   3982d:	c5 f9 70 ea ff       	vpshufd $0xff,%xmm2,%xmm5
   39832:	c5 d9 ef e5          	vpxor  %xmm5,%xmm4,%xmm4
   39836:	c5 d9 ef eb          	vpxor  %xmm3,%xmm4,%xmm5
   3983a:	c5 d9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm4
   3983f:	c5 e1 6c da          	vpunpcklqdq %xmm2,%xmm3,%xmm3
   39843:	c4 e3 51 0f c2 08    	vpalignr $0x8,%xmm2,%xmm5,%xmm0
   39849:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   3984e:	c5 f8 29 5f 40       	vmovaps %xmm3,0x40(%rdi)
   39853:	c5 f8 29 47 50       	vmovaps %xmm0,0x50(%rdi)
   39858:	c4 e3 79 df c5 08    	vaeskeygenassist $0x8,%xmm5,%xmm0
   3985e:	c5 f9 70 d8 55       	vpshufd $0x55,%xmm0,%xmm3
   39863:	c5 f9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm0
   39868:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   3986c:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   39870:	c5 d9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm4
   39875:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   39879:	c5 f1 ef c2          	vpxor  %xmm2,%xmm1,%xmm0
   3987d:	c5 f9 70 c8 ff       	vpshufd $0xff,%xmm0,%xmm1
   39882:	c5 f8 29 47 60       	vmovaps %xmm0,0x60(%rdi)
   39887:	c5 d9 ef e1          	vpxor  %xmm1,%xmm4,%xmm4
   3988b:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39890:	c5 d9 ef e5          	vpxor  %xmm5,%xmm4,%xmm4
   39894:	c4 e3 79 df d4 10    	vaeskeygenassist $0x10,%xmm4,%xmm2
   3989a:	c5 f9 70 ea 55       	vpshufd $0x55,%xmm2,%xmm5
   3989f:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   398a4:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   398a9:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   398ad:	c5 e1 ef d5          	vpxor  %xmm5,%xmm3,%xmm2
   398b1:	c5 e1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm3
   398b6:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   398ba:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   398be:	c5 f9 70 e9 ff       	vpshufd $0xff,%xmm1,%xmm5
   398c3:	c5 e1 ef dd          	vpxor  %xmm5,%xmm3,%xmm3
   398c7:	c5 e1 ef ec          	vpxor  %xmm4,%xmm3,%xmm5
   398cb:	c5 d9 6c e1          	vpunpcklqdq %xmm1,%xmm4,%xmm4
   398cf:	c4 e3 51 0f c1 08    	vpalignr $0x8,%xmm1,%xmm5,%xmm0
   398d5:	c5 f8 29 67 70       	vmovaps %xmm4,0x70(%rdi)
   398da:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   398df:	c4 e3 79 df d5 20    	vaeskeygenassist $0x20,%xmm5,%xmm2
   398e5:	c5 f8 29 87 80 00 00 	vmovaps %xmm0,0x80(%rdi)
   398ec:	00 
   398ed:	c5 f9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm0
   398f2:	c5 f9 70 da 55       	vpshufd $0x55,%xmm2,%xmm3
   398f7:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   398fc:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   39900:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   39904:	c5 e1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm3
   39909:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3990d:	c5 f9 ef d1          	vpxor  %xmm1,%xmm0,%xmm2
   39911:	c5 f9 70 c2 ff       	vpshufd $0xff,%xmm2,%xmm0
   39916:	c5 f8 29 97 90 00 00 	vmovaps %xmm2,0x90(%rdi)
   3991d:	00 
   3991e:	c5 e1 ef d8          	vpxor  %xmm0,%xmm3,%xmm3
   39922:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39927:	c5 e1 ef dd          	vpxor  %xmm5,%xmm3,%xmm3
   3992b:	c4 e3 79 df cb 40    	vaeskeygenassist $0x40,%xmm3,%xmm1
   39931:	c5 f9 70 e9 55       	vpshufd $0x55,%xmm1,%xmm5
   39936:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   3993b:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   39940:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39944:	c5 d9 ef cd          	vpxor  %xmm5,%xmm4,%xmm1
   39948:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   3994c:	c5 f1 73 fb 04       	vpslldq $0x4,%xmm3,%xmm1
   39951:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39955:	c5 f9 70 d0 ff       	vpshufd $0xff,%xmm0,%xmm2
   3995a:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   3995f:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   39963:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39967:	c5 e1 6c d8          	vpunpcklqdq %xmm0,%xmm3,%xmm3
   3996b:	c4 e3 71 0f d0 08    	vpalignr $0x8,%xmm0,%xmm1,%xmm2
   39971:	c4 e3 79 df c9 80    	vaeskeygenassist $0x80,%xmm1,%xmm1
   39977:	c5 f8 29 9f a0 00 00 	vmovaps %xmm3,0xa0(%rdi)
   3997e:	00 
   3997f:	c5 f8 29 97 b0 00 00 	vmovaps %xmm2,0xb0(%rdi)
   39986:	00 
   39987:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   3998c:	c5 f9 70 c9 55       	vpshufd $0x55,%xmm1,%xmm1
   39991:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   39996:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   3999a:	c5 e1 ef c9          	vpxor  %xmm1,%xmm3,%xmm1
   3999e:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   399a2:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   399a6:	c5 f8 29 87 c0 00 00 	vmovaps %xmm0,0xc0(%rdi)
   399ad:	00 
   399ae:	c3                   	retq   
   399af:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   399b6:	00 00 00 
   399b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000399c0 <l9_aes256_KeyExpansion_NI>:
   399c0:	c5 fa 6f 36          	vmovdqu (%rsi),%xmm6
   399c4:	c5 fa 6f 66 10       	vmovdqu 0x10(%rsi),%xmm4
   399c9:	c5 e9 73 fe 04       	vpslldq $0x4,%xmm6,%xmm2
   399ce:	c4 e3 79 df ec 01    	vaeskeygenassist $0x1,%xmm4,%xmm5
   399d4:	c5 f8 29 37          	vmovaps %xmm6,(%rdi)
   399d8:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   399dd:	c5 f9 70 c5 ff       	vpshufd $0xff,%xmm5,%xmm0
   399e2:	c5 f8 29 67 10       	vmovaps %xmm4,0x10(%rdi)
   399e7:	c5 d1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm5
   399ec:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   399f0:	c5 d1 ef e8          	vpxor  %xmm0,%xmm5,%xmm5
   399f4:	c5 f9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm0
   399f9:	c5 f1 ef ed          	vpxor  %xmm5,%xmm1,%xmm5
   399fd:	c5 d1 ef f6          	vpxor  %xmm6,%xmm5,%xmm6
   39a01:	c4 e3 79 df ce 00    	vaeskeygenassist $0x0,%xmm6,%xmm1
   39a07:	c5 d1 73 fe 04       	vpslldq $0x4,%xmm6,%xmm5
   39a0c:	c5 f8 29 77 20       	vmovaps %xmm6,0x20(%rdi)
   39a11:	c5 f9 70 d9 aa       	vpshufd $0xaa,%xmm1,%xmm3
   39a16:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39a1b:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   39a20:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39a24:	c5 e9 ef cb          	vpxor  %xmm3,%xmm2,%xmm1
   39a28:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39a2c:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   39a30:	c4 e3 79 df c8 02    	vaeskeygenassist $0x2,%xmm0,%xmm1
   39a36:	c5 f8 29 47 30       	vmovaps %xmm0,0x30(%rdi)
   39a3b:	c5 f9 70 d1 ff       	vpshufd $0xff,%xmm1,%xmm2
   39a40:	c5 f1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm1
   39a45:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   39a4a:	c5 f1 ef ed          	vpxor  %xmm5,%xmm1,%xmm5
   39a4e:	c5 e1 ef ca          	vpxor  %xmm2,%xmm3,%xmm1
   39a52:	c5 e1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm3
   39a57:	c5 d1 ef e9          	vpxor  %xmm1,%xmm5,%xmm5
   39a5b:	c5 e9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm2
   39a60:	c5 d1 ef ee          	vpxor  %xmm6,%xmm5,%xmm5
   39a64:	c4 e3 79 df e5 00    	vaeskeygenassist $0x0,%xmm5,%xmm4
   39a6a:	c5 f8 29 6f 40       	vmovaps %xmm5,0x40(%rdi)
   39a6f:	c5 f9 70 cc aa       	vpshufd $0xaa,%xmm4,%xmm1
   39a74:	c5 d9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm4
   39a79:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   39a7d:	c5 d9 ef e1          	vpxor  %xmm1,%xmm4,%xmm4
   39a81:	c5 d9 ef e2          	vpxor  %xmm2,%xmm4,%xmm4
   39a85:	c5 d9 ef c0          	vpxor  %xmm0,%xmm4,%xmm0
   39a89:	c5 d9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm4
   39a8e:	c4 e3 79 df d8 04    	vaeskeygenassist $0x4,%xmm0,%xmm3
   39a94:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   39a99:	c5 f8 29 47 50       	vmovaps %xmm0,0x50(%rdi)
   39a9e:	c5 f9 70 d3 ff       	vpshufd $0xff,%xmm3,%xmm2
   39aa3:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   39aa8:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   39aac:	c5 e1 ef da          	vpxor  %xmm2,%xmm3,%xmm3
   39ab0:	c5 e1 ef d9          	vpxor  %xmm1,%xmm3,%xmm3
   39ab4:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39ab9:	c5 e1 ef ed          	vpxor  %xmm5,%xmm3,%xmm5
   39abd:	c5 c9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm6
   39ac2:	c4 e3 79 df d5 00    	vaeskeygenassist $0x0,%xmm5,%xmm2
   39ac8:	c5 f8 29 6f 60       	vmovaps %xmm5,0x60(%rdi)
   39acd:	c5 f9 70 e2 aa       	vpshufd $0xaa,%xmm2,%xmm4
   39ad2:	c5 e9 73 fe 04       	vpslldq $0x4,%xmm6,%xmm2
   39ad7:	c5 c9 ef f1          	vpxor  %xmm1,%xmm6,%xmm6
   39adb:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39adf:	c5 c9 ef d2          	vpxor  %xmm2,%xmm6,%xmm2
   39ae3:	c5 e9 ef e0          	vpxor  %xmm0,%xmm2,%xmm4
   39ae7:	c5 e9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm2
   39aec:	c4 e3 79 df cc 08    	vaeskeygenassist $0x8,%xmm4,%xmm1
   39af2:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39af7:	c5 f8 29 67 70       	vmovaps %xmm4,0x70(%rdi)
   39afc:	c5 f9 70 d9 ff       	vpshufd $0xff,%xmm1,%xmm3
   39b01:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39b06:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39b0a:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39b0e:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   39b13:	c5 f9 ef c9          	vpxor  %xmm1,%xmm0,%xmm1
   39b17:	c5 f1 ef dd          	vpxor  %xmm5,%xmm1,%xmm3
   39b1b:	c4 e3 79 df c3 00    	vaeskeygenassist $0x0,%xmm3,%xmm0
   39b21:	c5 f8 29 9f 80 00 00 	vmovaps %xmm3,0x80(%rdi)
   39b28:	00 
   39b29:	c5 f9 70 e8 aa       	vpshufd $0xaa,%xmm0,%xmm5
   39b2e:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39b33:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39b38:	c5 f9 ef d2          	vpxor  %xmm2,%xmm0,%xmm2
   39b3c:	c5 f1 ef c5          	vpxor  %xmm5,%xmm1,%xmm0
   39b40:	c5 f1 73 fb 04       	vpslldq $0x4,%xmm3,%xmm1
   39b45:	c5 e9 ef d0          	vpxor  %xmm0,%xmm2,%xmm2
   39b49:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39b4d:	c4 e3 79 df c2 10    	vaeskeygenassist $0x10,%xmm2,%xmm0
   39b53:	c5 f8 29 97 90 00 00 	vmovaps %xmm2,0x90(%rdi)
   39b5a:	00 
   39b5b:	c5 f9 70 e8 ff       	vpshufd $0xff,%xmm0,%xmm5
   39b60:	c5 f9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm0
   39b65:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39b6a:	c5 f9 ef c9          	vpxor  %xmm1,%xmm0,%xmm1
   39b6e:	c5 d9 ef c5          	vpxor  %xmm5,%xmm4,%xmm0
   39b72:	c5 d1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm5
   39b77:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   39b7b:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39b7f:	c5 e1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm3
   39b84:	c4 e3 79 df c1 00    	vaeskeygenassist $0x0,%xmm1,%xmm0
   39b8a:	c5 f8 29 8f a0 00 00 	vmovaps %xmm1,0xa0(%rdi)
   39b91:	00 
   39b92:	c5 f9 70 e0 aa       	vpshufd $0xaa,%xmm0,%xmm4
   39b97:	c5 f9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm0
   39b9c:	c5 e1 ef dd          	vpxor  %xmm5,%xmm3,%xmm3
   39ba0:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   39ba4:	c5 d1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm5
   39ba9:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   39bad:	c5 f9 ef d2          	vpxor  %xmm2,%xmm0,%xmm2
   39bb1:	c5 f9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm0
   39bb6:	c4 e3 79 df da 20    	vaeskeygenassist $0x20,%xmm2,%xmm3
   39bbc:	c5 f8 29 97 b0 00 00 	vmovaps %xmm2,0xb0(%rdi)
   39bc3:	00 
   39bc4:	c5 f9 70 e3 ff       	vpshufd $0xff,%xmm3,%xmm4
   39bc9:	c5 e1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm3
   39bce:	c5 f9 ef c5          	vpxor  %xmm5,%xmm0,%xmm0
   39bd2:	c5 e1 ef dc          	vpxor  %xmm4,%xmm3,%xmm3
   39bd6:	c5 e1 ef d8          	vpxor  %xmm0,%xmm3,%xmm3
   39bda:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39bdf:	c5 e1 ef d9          	vpxor  %xmm1,%xmm3,%xmm3
   39be3:	c4 e3 79 df cb 00    	vaeskeygenassist $0x0,%xmm3,%xmm1
   39be9:	c5 f8 29 9f c0 00 00 	vmovaps %xmm3,0xc0(%rdi)
   39bf0:	00 
   39bf1:	c5 f9 70 e9 aa       	vpshufd $0xaa,%xmm1,%xmm5
   39bf6:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39bfb:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   39c00:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39c04:	c5 d9 ef cd          	vpxor  %xmm5,%xmm4,%xmm1
   39c08:	c5 d9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm4
   39c0d:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39c11:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39c15:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   39c1a:	c5 f8 29 87 d0 00 00 	vmovaps %xmm0,0xd0(%rdi)
   39c21:	00 
   39c22:	c4 e3 79 df c0 40    	vaeskeygenassist $0x40,%xmm0,%xmm0
   39c28:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   39c2d:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39c31:	c5 f9 70 c0 ff       	vpshufd $0xff,%xmm0,%xmm0
   39c36:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   39c3a:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39c3e:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39c42:	c5 f8 29 8f e0 00 00 	vmovaps %xmm1,0xe0(%rdi)
   39c49:	00 
   39c4a:	c3                   	retq   
   39c4b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39c52:	00 00 00 
   39c55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39c5c:	00 00 00 
   39c5f:	90                   	nop

0000000000039c60 <k0_aes_DecKeyExpansion_NI>:
   39c60:	62 f1 fd 08 6f 0e    	vmovdqa64 (%rsi),%xmm1
   39c66:	c5 f8 29 0f          	vmovaps %xmm1,(%rdi)
   39c6a:	83 fa 01             	cmp    $0x1,%edx
   39c6d:	7e 41                	jle    39cb0 <k0_aes_DecKeyExpansion_NI+0x50>
   39c6f:	8d 4a fe             	lea    -0x2(%rdx),%ecx
   39c72:	48 83 c1 02          	add    $0x2,%rcx
   39c76:	48 c1 e1 04          	shl    $0x4,%rcx
   39c7a:	b8 10 00 00 00       	mov    $0x10,%eax
   39c7f:	90                   	nop
   39c80:	c4 e2 79 db 04 06    	vaesimc (%rsi,%rax,1),%xmm0
   39c86:	c5 f8 29 04 07       	vmovaps %xmm0,(%rdi,%rax,1)
   39c8b:	48 83 c0 10          	add    $0x10,%rax
   39c8f:	48 39 c1             	cmp    %rax,%rcx
   39c92:	75 ec                	jne    39c80 <k0_aes_DecKeyExpansion_NI+0x20>
   39c94:	48 63 d2             	movslq %edx,%rdx
   39c97:	48 c1 e2 04          	shl    $0x4,%rdx
   39c9b:	62 f1 fd 08 6f 14 16 	vmovdqa64 (%rsi,%rdx,1),%xmm2
   39ca2:	c5 f8 29 14 17       	vmovaps %xmm2,(%rdi,%rdx,1)
   39ca7:	c3                   	retq   
   39ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   39caf:	00 
   39cb0:	ba 10 00 00 00       	mov    $0x10,%edx
   39cb5:	62 f1 fd 08 6f 14 16 	vmovdqa64 (%rsi,%rdx,1),%xmm2
   39cbc:	c5 f8 29 14 17       	vmovaps %xmm2,(%rdi,%rdx,1)
   39cc1:	c3                   	retq   
   39cc2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39cc9:	00 00 00 
   39ccc:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39cd3:	00 00 00 
   39cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39cdd:	00 00 00 

0000000000039ce0 <k0_aes128_KeyExpansion_NI>:
   39ce0:	62 f1 fe 08 6f 06    	vmovdqu64 (%rsi),%xmm0
   39ce6:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   39ceb:	c5 d9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm4
   39cf0:	c4 e3 79 df d8 01    	vaeskeygenassist $0x1,%xmm0,%xmm3
   39cf6:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   39cfb:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   39d00:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39d04:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39d08:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39d0c:	c5 f8 29 07          	vmovaps %xmm0,(%rdi)
   39d10:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39d14:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39d19:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   39d1e:	c4 e3 79 df e0 02    	vaeskeygenassist $0x2,%xmm0,%xmm4
   39d24:	c5 f9 70 e4 ff       	vpshufd $0xff,%xmm4,%xmm4
   39d29:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   39d2e:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39d32:	c5 e1 ef d4          	vpxor  %xmm4,%xmm3,%xmm2
   39d36:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   39d3a:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   39d3e:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   39d43:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   39d48:	c4 e3 79 df d9 04    	vaeskeygenassist $0x4,%xmm1,%xmm3
   39d4e:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   39d53:	c5 f8 29 47 10       	vmovaps %xmm0,0x10(%rdi)
   39d58:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39d5d:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   39d61:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39d65:	c5 e9 ef c0          	vpxor  %xmm0,%xmm2,%xmm0
   39d69:	c5 f8 29 4f 20       	vmovaps %xmm1,0x20(%rdi)
   39d6e:	c5 f9 ef c9          	vpxor  %xmm1,%xmm0,%xmm1
   39d72:	c5 f9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm0
   39d77:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   39d7c:	c4 e3 79 df e1 08    	vaeskeygenassist $0x8,%xmm1,%xmm4
   39d82:	c5 f9 70 e4 ff       	vpshufd $0xff,%xmm4,%xmm4
   39d87:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   39d8c:	c5 e9 ef c0          	vpxor  %xmm0,%xmm2,%xmm0
   39d90:	c5 e1 ef d4          	vpxor  %xmm4,%xmm3,%xmm2
   39d94:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39d98:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39d9c:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39da1:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   39da6:	c4 e3 79 df d8 10    	vaeskeygenassist $0x10,%xmm0,%xmm3
   39dac:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   39db1:	c5 f8 29 4f 30       	vmovaps %xmm1,0x30(%rdi)
   39db6:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   39dbb:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39dbf:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39dc3:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39dc7:	c5 f8 29 47 40       	vmovaps %xmm0,0x40(%rdi)
   39dcc:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39dd0:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39dd5:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   39dda:	c4 e3 79 df e0 20    	vaeskeygenassist $0x20,%xmm0,%xmm4
   39de0:	c5 f9 70 e4 ff       	vpshufd $0xff,%xmm4,%xmm4
   39de5:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   39dea:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39dee:	c5 e1 ef d4          	vpxor  %xmm4,%xmm3,%xmm2
   39df2:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   39df6:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   39dfa:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   39dff:	c4 e3 79 df d9 40    	vaeskeygenassist $0x40,%xmm1,%xmm3
   39e05:	c5 f8 29 47 50       	vmovaps %xmm0,0x50(%rdi)
   39e0a:	c5 f9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm0
   39e0f:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   39e14:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   39e19:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   39e1d:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   39e21:	c5 e9 ef d0          	vpxor  %xmm0,%xmm2,%xmm2
   39e25:	c5 f8 29 4f 60       	vmovaps %xmm1,0x60(%rdi)
   39e2a:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   39e2e:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   39e33:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   39e38:	c4 e3 79 df d9 80    	vaeskeygenassist $0x80,%xmm1,%xmm3
   39e3e:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   39e43:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39e48:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   39e4c:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   39e50:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39e54:	c5 f9 ef d1          	vpxor  %xmm1,%xmm0,%xmm2
   39e58:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39e5d:	c4 e3 79 df e2 1b    	vaeskeygenassist $0x1b,%xmm2,%xmm4
   39e63:	c5 f8 29 4f 70       	vmovaps %xmm1,0x70(%rdi)
   39e68:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39e6d:	c5 f9 70 e4 ff       	vpshufd $0xff,%xmm4,%xmm4
   39e72:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   39e77:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39e7b:	c5 e1 ef cc          	vpxor  %xmm4,%xmm3,%xmm1
   39e7f:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39e83:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39e87:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39e8c:	c4 e3 79 df d8 36    	vaeskeygenassist $0x36,%xmm0,%xmm3
   39e92:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   39e97:	c5 f8 29 97 80 00 00 	vmovaps %xmm2,0x80(%rdi)
   39e9e:	00 
   39e9f:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   39ea4:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   39ea9:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   39ead:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   39eb1:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   39eb5:	c5 f8 29 87 90 00 00 	vmovaps %xmm0,0x90(%rdi)
   39ebc:	00 
   39ebd:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39ec1:	c5 f8 29 87 a0 00 00 	vmovaps %xmm0,0xa0(%rdi)
   39ec8:	00 
   39ec9:	c3                   	retq   
   39eca:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39ed1:	00 00 00 
   39ed4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39edb:	00 00 00 
   39ede:	66 90                	xchg   %ax,%ax

0000000000039ee0 <k0_aes192_KeyExpansion_NI>:
   39ee0:	62 f1 fe 08 6f 16    	vmovdqu64 (%rsi),%xmm2
   39ee6:	c5 fa 7e 6e 10       	vmovq  0x10(%rsi),%xmm5
   39eeb:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39ef0:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   39ef5:	c4 e3 79 df e5 01    	vaeskeygenassist $0x1,%xmm5,%xmm4
   39efb:	c5 f9 70 e4 55       	vpshufd $0x55,%xmm4,%xmm4
   39f00:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   39f05:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   39f09:	c5 e1 ef cc          	vpxor  %xmm4,%xmm3,%xmm1
   39f0d:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   39f11:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   39f15:	c5 f9 70 e0 ff       	vpshufd $0xff,%xmm0,%xmm4
   39f1a:	c5 e1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm3
   39f1f:	c5 e1 ef dc          	vpxor  %xmm4,%xmm3,%xmm3
   39f23:	c5 e1 ef e5          	vpxor  %xmm5,%xmm3,%xmm4
   39f27:	c5 d1 6c e8          	vpunpcklqdq %xmm0,%xmm5,%xmm5
   39f2b:	c5 f8 29 6f 10       	vmovaps %xmm5,0x10(%rdi)
   39f30:	c5 d1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm5
   39f35:	c4 e3 59 0f c8 08    	vpalignr $0x8,%xmm0,%xmm4,%xmm1
   39f3b:	c4 e3 79 df dc 02    	vaeskeygenassist $0x2,%xmm4,%xmm3
   39f41:	c5 f8 29 17          	vmovaps %xmm2,(%rdi)
   39f45:	c5 e9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm2
   39f4a:	c5 f9 70 db 55       	vpshufd $0x55,%xmm3,%xmm3
   39f4f:	c5 f8 29 4f 20       	vmovaps %xmm1,0x20(%rdi)
   39f54:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   39f59:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   39f5d:	c5 e9 ef d5          	vpxor  %xmm5,%xmm2,%xmm2
   39f61:	c5 e9 ef d1          	vpxor  %xmm1,%xmm2,%xmm2
   39f65:	c5 e9 ef c8          	vpxor  %xmm0,%xmm2,%xmm1
   39f69:	c5 f9 70 c1 ff       	vpshufd $0xff,%xmm1,%xmm0
   39f6e:	c5 e1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm3
   39f73:	c5 e1 ef d8          	vpxor  %xmm0,%xmm3,%xmm3
   39f77:	c5 e1 ef dc          	vpxor  %xmm4,%xmm3,%xmm3
   39f7b:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   39f80:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   39f85:	c4 e3 79 df eb 04    	vaeskeygenassist $0x4,%xmm3,%xmm5
   39f8b:	c5 f9 70 ed 55       	vpshufd $0x55,%xmm5,%xmm5
   39f90:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   39f95:	c5 f9 ef d2          	vpxor  %xmm2,%xmm0,%xmm2
   39f99:	c5 d9 ef c5          	vpxor  %xmm5,%xmm4,%xmm0
   39f9d:	c5 e9 ef d0          	vpxor  %xmm0,%xmm2,%xmm2
   39fa1:	c5 e9 ef d1          	vpxor  %xmm1,%xmm2,%xmm2
   39fa5:	c5 f9 70 ea ff       	vpshufd $0xff,%xmm2,%xmm5
   39faa:	c5 d9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm4
   39faf:	c5 d9 ef e5          	vpxor  %xmm5,%xmm4,%xmm4
   39fb3:	c5 d9 ef eb          	vpxor  %xmm3,%xmm4,%xmm5
   39fb7:	c5 d9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm4
   39fbc:	c5 e1 6c da          	vpunpcklqdq %xmm2,%xmm3,%xmm3
   39fc0:	c4 e3 51 0f c2 08    	vpalignr $0x8,%xmm2,%xmm5,%xmm0
   39fc6:	c5 f8 29 4f 30       	vmovaps %xmm1,0x30(%rdi)
   39fcb:	c5 f8 29 5f 40       	vmovaps %xmm3,0x40(%rdi)
   39fd0:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   39fd5:	c4 e3 79 df dd 08    	vaeskeygenassist $0x8,%xmm5,%xmm3
   39fdb:	c5 f9 70 db 55       	vpshufd $0x55,%xmm3,%xmm3
   39fe0:	c5 f8 29 47 50       	vmovaps %xmm0,0x50(%rdi)
   39fe5:	c5 f9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm0
   39fea:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   39fee:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   39ff2:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   39ff6:	c5 f1 ef c2          	vpxor  %xmm2,%xmm1,%xmm0
   39ffa:	c5 f9 70 c8 ff       	vpshufd $0xff,%xmm0,%xmm1
   39fff:	c5 d9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm4
   3a004:	c5 d9 ef e1          	vpxor  %xmm1,%xmm4,%xmm4
   3a008:	c5 d9 ef e5          	vpxor  %xmm5,%xmm4,%xmm4
   3a00c:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   3a011:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   3a016:	c4 e3 79 df ec 10    	vaeskeygenassist $0x10,%xmm4,%xmm5
   3a01c:	c5 f9 70 ed 55       	vpshufd $0x55,%xmm5,%xmm5
   3a021:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   3a026:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   3a02a:	c5 e1 ef d5          	vpxor  %xmm5,%xmm3,%xmm2
   3a02e:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   3a032:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   3a036:	c5 f9 70 e9 ff       	vpshufd $0xff,%xmm1,%xmm5
   3a03b:	c5 e1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm3
   3a040:	c5 e1 ef dd          	vpxor  %xmm5,%xmm3,%xmm3
   3a044:	c5 e1 ef ec          	vpxor  %xmm4,%xmm3,%xmm5
   3a048:	c5 d9 6c e1          	vpunpcklqdq %xmm1,%xmm4,%xmm4
   3a04c:	c5 f8 29 47 60       	vmovaps %xmm0,0x60(%rdi)
   3a051:	c5 f8 29 67 70       	vmovaps %xmm4,0x70(%rdi)
   3a056:	c4 e3 51 0f c1 08    	vpalignr $0x8,%xmm1,%xmm5,%xmm0
   3a05c:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   3a061:	c4 e3 79 df dd 20    	vaeskeygenassist $0x20,%xmm5,%xmm3
   3a067:	c5 f8 29 87 80 00 00 	vmovaps %xmm0,0x80(%rdi)
   3a06e:	00 
   3a06f:	c5 f9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm0
   3a074:	c5 f9 70 db 55       	vpshufd $0x55,%xmm3,%xmm3
   3a079:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   3a07e:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   3a082:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   3a086:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3a08a:	c5 f9 ef d1          	vpxor  %xmm1,%xmm0,%xmm2
   3a08e:	c5 f9 70 c2 ff       	vpshufd $0xff,%xmm2,%xmm0
   3a093:	c5 e1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm3
   3a098:	c5 e1 ef d8          	vpxor  %xmm0,%xmm3,%xmm3
   3a09c:	c5 e1 ef dd          	vpxor  %xmm5,%xmm3,%xmm3
   3a0a0:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   3a0a5:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   3a0aa:	c4 e3 79 df eb 40    	vaeskeygenassist $0x40,%xmm3,%xmm5
   3a0b0:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   3a0b5:	c5 f9 70 ed 55       	vpshufd $0x55,%xmm5,%xmm5
   3a0ba:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   3a0be:	c5 d9 ef cd          	vpxor  %xmm5,%xmm4,%xmm1
   3a0c2:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   3a0c6:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3a0ca:	c5 f1 73 fb 04       	vpslldq $0x4,%xmm3,%xmm1
   3a0cf:	c5 f8 29 97 90 00 00 	vmovaps %xmm2,0x90(%rdi)
   3a0d6:	00 
   3a0d7:	c5 f9 70 d0 ff       	vpshufd $0xff,%xmm0,%xmm2
   3a0dc:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   3a0e0:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   3a0e4:	c4 e3 71 0f d0 08    	vpalignr $0x8,%xmm0,%xmm1,%xmm2
   3a0ea:	c5 d9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm4
   3a0ef:	c5 e1 6c d8          	vpunpcklqdq %xmm0,%xmm3,%xmm3
   3a0f3:	c5 f8 29 97 b0 00 00 	vmovaps %xmm2,0xb0(%rdi)
   3a0fa:	00 
   3a0fb:	c4 e3 79 df c9 80    	vaeskeygenassist $0x80,%xmm1,%xmm1
   3a101:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   3a106:	c5 f8 29 9f a0 00 00 	vmovaps %xmm3,0xa0(%rdi)
   3a10d:	00 
   3a10e:	c5 f9 70 c9 55       	vpshufd $0x55,%xmm1,%xmm1
   3a113:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   3a118:	c5 e1 ef c9          	vpxor  %xmm1,%xmm3,%xmm1
   3a11c:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   3a120:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   3a124:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   3a128:	c5 f8 29 87 c0 00 00 	vmovaps %xmm0,0xc0(%rdi)
   3a12f:	00 
   3a130:	c3                   	retq   
   3a131:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3a138:	00 00 00 
   3a13b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003a140 <k0_aes256_KeyExpansion_NI>:
   3a140:	62 f1 fe 08 6f 26    	vmovdqu64 (%rsi),%xmm4
   3a146:	62 f1 fe 08 6f 46 01 	vmovdqu64 0x10(%rsi),%xmm0
   3a14d:	c5 d1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm5
   3a152:	c5 f1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm1
   3a157:	c4 e3 79 df d8 01    	vaeskeygenassist $0x1,%xmm0,%xmm3
   3a15d:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   3a162:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   3a167:	c5 e9 ef d3          	vpxor  %xmm3,%xmm2,%xmm2
   3a16b:	c5 f1 ef cd          	vpxor  %xmm5,%xmm1,%xmm1
   3a16f:	c5 f1 ef d2          	vpxor  %xmm2,%xmm1,%xmm2
   3a173:	c5 c9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm6
   3a178:	c5 f8 29 27          	vmovaps %xmm4,(%rdi)
   3a17c:	c5 e9 ef e4          	vpxor  %xmm4,%xmm2,%xmm4
   3a180:	c5 d1 73 fe 04       	vpslldq $0x4,%xmm6,%xmm5
   3a185:	c4 e3 79 df d4 00    	vaeskeygenassist $0x0,%xmm4,%xmm2
   3a18b:	c5 f9 70 d2 aa       	vpshufd $0xaa,%xmm2,%xmm2
   3a190:	c5 f1 73 fd 04       	vpslldq $0x4,%xmm5,%xmm1
   3a195:	c5 d1 ef f6          	vpxor  %xmm6,%xmm5,%xmm6
   3a199:	c5 f1 ef ea          	vpxor  %xmm2,%xmm1,%xmm5
   3a19d:	c5 c9 ef f5          	vpxor  %xmm5,%xmm6,%xmm6
   3a1a1:	c5 c9 ef f0          	vpxor  %xmm0,%xmm6,%xmm6
   3a1a5:	c5 e9 73 fc 04       	vpslldq $0x4,%xmm4,%xmm2
   3a1aa:	c5 d1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm5
   3a1af:	c4 e3 79 df ce 02    	vaeskeygenassist $0x2,%xmm6,%xmm1
   3a1b5:	c5 f9 70 c9 ff       	vpshufd $0xff,%xmm1,%xmm1
   3a1ba:	c5 f8 29 47 10       	vmovaps %xmm0,0x10(%rdi)
   3a1bf:	c5 f9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm0
   3a1c4:	c5 d1 ef d2          	vpxor  %xmm2,%xmm5,%xmm2
   3a1c8:	c5 f9 ef e9          	vpxor  %xmm1,%xmm0,%xmm5
   3a1cc:	c5 e9 ef d5          	vpxor  %xmm5,%xmm2,%xmm2
   3a1d0:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   3a1d4:	c5 f8 29 67 20       	vmovaps %xmm4,0x20(%rdi)
   3a1d9:	c5 d9 73 fe 04       	vpslldq $0x4,%xmm6,%xmm4
   3a1de:	c5 e1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm3
   3a1e3:	c4 e3 79 df ca 00    	vaeskeygenassist $0x0,%xmm2,%xmm1
   3a1e9:	c5 f9 70 c9 aa       	vpshufd $0xaa,%xmm1,%xmm1
   3a1ee:	c5 f9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm0
   3a1f3:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   3a1f7:	c5 e1 ef dc          	vpxor  %xmm4,%xmm3,%xmm3
   3a1fb:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   3a1ff:	c5 f8 29 77 30       	vmovaps %xmm6,0x30(%rdi)
   3a204:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   3a209:	c5 f9 ef f6          	vpxor  %xmm6,%xmm0,%xmm6
   3a20d:	c5 f1 73 fb 04       	vpslldq $0x4,%xmm3,%xmm1
   3a212:	c4 e3 79 df c6 04    	vaeskeygenassist $0x4,%xmm6,%xmm0
   3a218:	c5 f9 70 c0 ff       	vpshufd $0xff,%xmm0,%xmm0
   3a21d:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   3a222:	c5 d9 ef e0          	vpxor  %xmm0,%xmm4,%xmm4
   3a226:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   3a22a:	c5 d9 ef e1          	vpxor  %xmm1,%xmm4,%xmm4
   3a22e:	c5 d9 ef e2          	vpxor  %xmm2,%xmm4,%xmm4
   3a232:	c5 f1 73 fe 04       	vpslldq $0x4,%xmm6,%xmm1
   3a237:	c4 e3 79 df c4 00    	vaeskeygenassist $0x0,%xmm4,%xmm0
   3a23d:	c5 f8 29 57 40       	vmovaps %xmm2,0x40(%rdi)
   3a242:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   3a247:	c5 f9 70 c0 aa       	vpshufd $0xaa,%xmm0,%xmm0
   3a24c:	c5 e1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm3
   3a251:	c5 e1 ef d8          	vpxor  %xmm0,%xmm3,%xmm3
   3a255:	c5 e9 ef d1          	vpxor  %xmm1,%xmm2,%xmm2
   3a259:	c5 e9 ef db          	vpxor  %xmm3,%xmm2,%xmm3
   3a25d:	c5 d1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm5
   3a262:	c5 f8 29 77 50       	vmovaps %xmm6,0x50(%rdi)
   3a267:	c5 e1 ef f6          	vpxor  %xmm6,%xmm3,%xmm6
   3a26b:	c5 e9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm2
   3a270:	c4 e3 79 df de 08    	vaeskeygenassist $0x8,%xmm6,%xmm3
   3a276:	c5 f9 70 db ff       	vpshufd $0xff,%xmm3,%xmm3
   3a27b:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   3a280:	c5 f1 ef cb          	vpxor  %xmm3,%xmm1,%xmm1
   3a284:	c5 e9 ef d5          	vpxor  %xmm5,%xmm2,%xmm2
   3a288:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   3a28c:	c5 e1 73 fe 04       	vpslldq $0x4,%xmm6,%xmm3
   3a291:	c5 f8 29 67 60       	vmovaps %xmm4,0x60(%rdi)
   3a296:	c5 f1 ef e4          	vpxor  %xmm4,%xmm1,%xmm4
   3a29a:	c5 e9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm2
   3a29f:	c4 e3 79 df ec 00    	vaeskeygenassist $0x0,%xmm4,%xmm5
   3a2a5:	c5 f9 70 ed aa       	vpshufd $0xaa,%xmm5,%xmm5
   3a2aa:	c5 f1 73 fa 04       	vpslldq $0x4,%xmm2,%xmm1
   3a2af:	c5 e9 ef db          	vpxor  %xmm3,%xmm2,%xmm3
   3a2b3:	c5 f1 ef d5          	vpxor  %xmm5,%xmm1,%xmm2
   3a2b7:	c5 e1 ef da          	vpxor  %xmm2,%xmm3,%xmm3
   3a2bb:	c5 e1 ef de          	vpxor  %xmm6,%xmm3,%xmm3
   3a2bf:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   3a2c4:	c5 e9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm2
   3a2c9:	c4 e3 79 df eb 10    	vaeskeygenassist $0x10,%xmm3,%xmm5
   3a2cf:	c5 f9 70 ed ff       	vpshufd $0xff,%xmm5,%xmm5
   3a2d4:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   3a2d9:	c5 e9 ef c9          	vpxor  %xmm1,%xmm2,%xmm1
   3a2dd:	c5 f9 ef d5          	vpxor  %xmm5,%xmm0,%xmm2
   3a2e1:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   3a2e5:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   3a2e9:	c5 d1 73 fb 04       	vpslldq $0x4,%xmm3,%xmm5
   3a2ee:	c5 e9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm2
   3a2f3:	c5 f8 29 a7 80 00 00 	vmovaps %xmm4,0x80(%rdi)
   3a2fa:	00 
   3a2fb:	c4 e3 79 df e1 00    	vaeskeygenassist $0x0,%xmm1,%xmm4
   3a301:	c5 f9 70 e4 aa       	vpshufd $0xaa,%xmm4,%xmm4
   3a306:	c5 f9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm0
   3a30b:	c5 f9 ef c4          	vpxor  %xmm4,%xmm0,%xmm0
   3a30f:	c5 e9 ef d5          	vpxor  %xmm5,%xmm2,%xmm2
   3a313:	c5 f9 ef c2          	vpxor  %xmm2,%xmm0,%xmm0
   3a317:	c5 d1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm5
   3a31c:	c5 f8 29 9f 90 00 00 	vmovaps %xmm3,0x90(%rdi)
   3a323:	00 
   3a324:	c5 f9 ef db          	vpxor  %xmm3,%xmm0,%xmm3
   3a328:	c4 e3 79 df e3 20    	vaeskeygenassist $0x20,%xmm3,%xmm4
   3a32e:	c5 f9 73 fd 04       	vpslldq $0x4,%xmm5,%xmm0
   3a333:	c5 f9 70 e4 ff       	vpshufd $0xff,%xmm4,%xmm4
   3a338:	c5 e9 73 f8 04       	vpslldq $0x4,%xmm0,%xmm2
   3a33d:	c5 e9 ef d4          	vpxor  %xmm4,%xmm2,%xmm2
   3a341:	c5 f9 ef c5          	vpxor  %xmm5,%xmm0,%xmm0
   3a345:	c5 e9 ef d0          	vpxor  %xmm0,%xmm2,%xmm2
   3a349:	c5 e9 ef d1          	vpxor  %xmm1,%xmm2,%xmm2
   3a34d:	c5 f9 73 fb 04       	vpslldq $0x4,%xmm3,%xmm0
   3a352:	c5 f8 29 8f a0 00 00 	vmovaps %xmm1,0xa0(%rdi)
   3a359:	00 
   3a35a:	c4 e3 79 df ea 00    	vaeskeygenassist $0x0,%xmm2,%xmm5
   3a360:	c5 f1 73 f8 04       	vpslldq $0x4,%xmm0,%xmm1
   3a365:	c5 d9 73 f9 04       	vpslldq $0x4,%xmm1,%xmm4
   3a36a:	c5 f9 70 ed aa       	vpshufd $0xaa,%xmm5,%xmm5
   3a36f:	c5 f1 ef c0          	vpxor  %xmm0,%xmm1,%xmm0
   3a373:	c5 d9 ef cd          	vpxor  %xmm5,%xmm4,%xmm1
   3a377:	c5 f9 ef c1          	vpxor  %xmm1,%xmm0,%xmm0
   3a37b:	c5 f9 ef c3          	vpxor  %xmm3,%xmm0,%xmm0
   3a37f:	c5 d9 73 fa 04       	vpslldq $0x4,%xmm2,%xmm4
   3a384:	c5 f1 73 fc 04       	vpslldq $0x4,%xmm4,%xmm1
   3a389:	c5 f8 29 87 d0 00 00 	vmovaps %xmm0,0xd0(%rdi)
   3a390:	00 
   3a391:	c4 e3 79 df c0 40    	vaeskeygenassist $0x40,%xmm0,%xmm0
   3a397:	c5 f8 29 9f b0 00 00 	vmovaps %xmm3,0xb0(%rdi)
   3a39e:	00 
   3a39f:	c5 f9 70 c0 ff       	vpshufd $0xff,%xmm0,%xmm0
   3a3a4:	c5 e1 73 f9 04       	vpslldq $0x4,%xmm1,%xmm3
   3a3a9:	c5 e1 ef c0          	vpxor  %xmm0,%xmm3,%xmm0
   3a3ad:	c5 f1 ef cc          	vpxor  %xmm4,%xmm1,%xmm1
   3a3b1:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   3a3b5:	c5 f1 ef ca          	vpxor  %xmm2,%xmm1,%xmm1
   3a3b9:	c5 f8 29 77 70       	vmovaps %xmm6,0x70(%rdi)
   3a3be:	c5 f8 29 97 c0 00 00 	vmovaps %xmm2,0xc0(%rdi)
   3a3c5:	00 
   3a3c6:	c5 f8 29 8f e0 00 00 	vmovaps %xmm1,0xe0(%rdi)
   3a3cd:	00 
   3a3ce:	c3                   	retq   

000000000003a3cf <tservice_access_version_dummy1>:
   3a3cf:	55                   	push   %rbp
   3a3d0:	48 89 e5             	mov    %rsp,%rbp
   3a3d3:	c6 05 a6 ce 00 00 73 	movb   $0x73,0xcea6(%rip)        # 47280 <sgx_tservice_version>
   3a3da:	48 8d 05 9f ce 00 00 	lea    0xce9f(%rip),%rax        # 47280 <sgx_tservice_version>
   3a3e1:	5d                   	pop    %rbp
   3a3e2:	c3                   	retq   

000000000003a3e3 <sgx_create_report>:
   3a3e3:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   3a3e8:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   3a3ef:	41 ff 72 f8          	pushq  -0x8(%r10)
   3a3f3:	55                   	push   %rbp
   3a3f4:	48 89 e5             	mov    %rsp,%rbp
   3a3f7:	41 52                	push   %r10
   3a3f9:	48 81 ec e8 09 00 00 	sub    $0x9e8,%rsp
   3a400:	48 89 bd 78 f7 ff ff 	mov    %rdi,-0x888(%rbp)
   3a407:	48 89 b5 70 f7 ff ff 	mov    %rsi,-0x890(%rbp)
   3a40e:	48 89 95 68 f7 ff ff 	mov    %rdx,-0x898(%rbp)
   3a415:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3a41c:	00 00 
   3a41e:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
   3a425:	31 c0                	xor    %eax,%eax
   3a427:	48 8d 85 90 f7 ff ff 	lea    -0x870(%rbp),%rax
   3a42e:	ba 40 00 00 00       	mov    $0x40,%edx
   3a433:	be 00 00 00 00       	mov    $0x0,%esi
   3a438:	48 89 c7             	mov    %rax,%rdi
   3a43b:	e8 b4 92 fd ff       	callq  136f4 <__memset>
   3a440:	48 8d 85 10 fa ff ff 	lea    -0x5f0(%rbp),%rax
   3a447:	ba 00 02 00 00       	mov    $0x200,%edx
   3a44c:	be 00 00 00 00       	mov    $0x0,%esi
   3a451:	48 89 c7             	mov    %rax,%rdi
   3a454:	e8 9b 92 fd ff       	callq  136f4 <__memset>
   3a459:	48 8d 85 10 f8 ff ff 	lea    -0x7f0(%rbp),%rax
   3a460:	ba b0 01 00 00       	mov    $0x1b0,%edx
   3a465:	be 00 00 00 00       	mov    $0x0,%esi
   3a46a:	48 89 c7             	mov    %rax,%rdi
   3a46d:	e8 82 92 fd ff       	callq  136f4 <__memset>
   3a472:	48 83 bd 78 f7 ff ff 	cmpq   $0x0,-0x888(%rbp)
   3a479:	00 
   3a47a:	74 46                	je     3a4c2 <sgx_create_report+0xdf>
   3a47c:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   3a483:	be 00 02 00 00       	mov    $0x200,%esi
   3a488:	48 89 c7             	mov    %rax,%rdi
   3a48b:	e8 21 d9 fc ff       	callq  7db1 <sgx_is_within_enclave>
   3a490:	85 c0                	test   %eax,%eax
   3a492:	0f 94 c0             	sete   %al
   3a495:	84 c0                	test   %al,%al
   3a497:	74 0a                	je     3a4a3 <sgx_create_report+0xc0>
   3a499:	b8 02 00 00 00       	mov    $0x2,%eax
   3a49e:	e9 8a 01 00 00       	jmpq   3a62d <sgx_create_report+0x24a>
   3a4a3:	48 8b 95 78 f7 ff ff 	mov    -0x888(%rbp),%rdx
   3a4aa:	48 8d 85 10 fa ff ff 	lea    -0x5f0(%rbp),%rax
   3a4b1:	48 89 d6             	mov    %rdx,%rsi
   3a4b4:	ba 40 00 00 00       	mov    $0x40,%edx
   3a4b9:	48 89 c7             	mov    %rax,%rdi
   3a4bc:	48 89 d1             	mov    %rdx,%rcx
   3a4bf:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   3a4c2:	48 83 bd 70 f7 ff ff 	cmpq   $0x0,-0x890(%rbp)
   3a4c9:	00 
   3a4ca:	0f 84 85 00 00 00    	je     3a555 <sgx_create_report+0x172>
   3a4d0:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
   3a4d7:	be 40 00 00 00       	mov    $0x40,%esi
   3a4dc:	48 89 c7             	mov    %rax,%rdi
   3a4df:	e8 cd d8 fc ff       	callq  7db1 <sgx_is_within_enclave>
   3a4e4:	85 c0                	test   %eax,%eax
   3a4e6:	0f 94 c0             	sete   %al
   3a4e9:	84 c0                	test   %al,%al
   3a4eb:	74 0a                	je     3a4f7 <sgx_create_report+0x114>
   3a4ed:	b8 02 00 00 00       	mov    $0x2,%eax
   3a4f2:	e9 36 01 00 00       	jmpq   3a62d <sgx_create_report+0x24a>
   3a4f7:	48 8b 8d 70 f7 ff ff 	mov    -0x890(%rbp),%rcx
   3a4fe:	48 8b 01             	mov    (%rcx),%rax
   3a501:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   3a505:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
   3a50c:	48 89 95 98 f7 ff ff 	mov    %rdx,-0x868(%rbp)
   3a513:	48 8b 41 10          	mov    0x10(%rcx),%rax
   3a517:	48 8b 51 18          	mov    0x18(%rcx),%rdx
   3a51b:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
   3a522:	48 89 95 a8 f7 ff ff 	mov    %rdx,-0x858(%rbp)
   3a529:	48 8b 41 20          	mov    0x20(%rcx),%rax
   3a52d:	48 8b 51 28          	mov    0x28(%rcx),%rdx
   3a531:	48 89 85 b0 f7 ff ff 	mov    %rax,-0x850(%rbp)
   3a538:	48 89 95 b8 f7 ff ff 	mov    %rdx,-0x848(%rbp)
   3a53f:	48 8b 41 30          	mov    0x30(%rcx),%rax
   3a543:	48 8b 51 38          	mov    0x38(%rcx),%rdx
   3a547:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
   3a54e:	48 89 95 c8 f7 ff ff 	mov    %rdx,-0x838(%rbp)
   3a555:	48 83 bd 68 f7 ff ff 	cmpq   $0x0,-0x898(%rbp)
   3a55c:	00 
   3a55d:	74 18                	je     3a577 <sgx_create_report+0x194>
   3a55f:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
   3a566:	be b0 01 00 00       	mov    $0x1b0,%esi
   3a56b:	48 89 c7             	mov    %rax,%rdi
   3a56e:	e8 3e d8 fc ff       	callq  7db1 <sgx_is_within_enclave>
   3a573:	85 c0                	test   %eax,%eax
   3a575:	75 07                	jne    3a57e <sgx_create_report+0x19b>
   3a577:	b8 01 00 00 00       	mov    $0x1,%eax
   3a57c:	eb 05                	jmp    3a583 <sgx_create_report+0x1a0>
   3a57e:	b8 00 00 00 00       	mov    $0x0,%eax
   3a583:	84 c0                	test   %al,%al
   3a585:	74 0a                	je     3a591 <sgx_create_report+0x1ae>
   3a587:	b8 02 00 00 00       	mov    $0x2,%eax
   3a58c:	e9 9c 00 00 00       	jmpq   3a62d <sgx_create_report+0x24a>
   3a591:	48 8d 95 10 f8 ff ff 	lea    -0x7f0(%rbp),%rdx
   3a598:	48 8d 8d 90 f7 ff ff 	lea    -0x870(%rbp),%rcx
   3a59f:	48 8d 85 10 fa ff ff 	lea    -0x5f0(%rbp),%rax
   3a5a6:	48 89 ce             	mov    %rcx,%rsi
   3a5a9:	48 89 c7             	mov    %rax,%rdi
   3a5ac:	e8 6b 0f 00 00       	callq  3b51c <do_ereport>
   3a5b1:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%rbp)
   3a5b7:	83 bd 84 f7 ff ff 00 	cmpl   $0x0,-0x87c(%rbp)
   3a5be:	75 57                	jne    3a617 <sgx_create_report+0x234>
   3a5c0:	48 c7 85 88 f7 ff ff 	movq   $0x0,-0x878(%rbp)
   3a5c7:	00 00 00 00 
   3a5cb:	48 83 bd 88 f7 ff ff 	cmpq   $0x35,-0x878(%rbp)
   3a5d2:	35 
   3a5d3:	77 42                	ja     3a617 <sgx_create_report+0x234>
   3a5d5:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
   3a5dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   3a5e3:	00 
   3a5e4:	48 8d 85 10 f8 ff ff 	lea    -0x7f0(%rbp),%rax
   3a5eb:	48 01 d0             	add    %rdx,%rax
   3a5ee:	48 8b 95 88 f7 ff ff 	mov    -0x878(%rbp),%rdx
   3a5f5:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   3a5fc:	00 
   3a5fd:	48 8b 95 68 f7 ff ff 	mov    -0x898(%rbp),%rdx
   3a604:	48 01 ca             	add    %rcx,%rdx
   3a607:	48 8b 00             	mov    (%rax),%rax
   3a60a:	48 89 02             	mov    %rax,(%rdx)
   3a60d:	48 83 85 88 f7 ff ff 	addq   $0x1,-0x878(%rbp)
   3a614:	01 
   3a615:	eb b4                	jmp    3a5cb <sgx_create_report+0x1e8>
   3a617:	83 bd 84 f7 ff ff 00 	cmpl   $0x0,-0x87c(%rbp)
   3a61e:	74 07                	je     3a627 <sgx_create_report+0x244>
   3a620:	b8 01 00 00 00       	mov    $0x1,%eax
   3a625:	eb 06                	jmp    3a62d <sgx_create_report+0x24a>
   3a627:	b8 00 00 00 00       	mov    $0x0,%eax
   3a62c:	90                   	nop
   3a62d:	48 8b b5 08 fe ff ff 	mov    -0x1f8(%rbp),%rsi
   3a634:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   3a63b:	00 00 
   3a63d:	74 05                	je     3a644 <sgx_create_report+0x261>
   3a63f:	e8 48 0e fd ff       	callq  b48c <__stack_chk_fail>
   3a644:	48 81 c4 e8 09 00 00 	add    $0x9e8,%rsp
   3a64b:	41 5a                	pop    %r10
   3a64d:	5d                   	pop    %rbp
   3a64e:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   3a652:	c3                   	retq   

000000000003a653 <sgx_self_report>:
   3a653:	55                   	push   %rbp
   3a654:	48 89 e5             	mov    %rsp,%rbp
   3a657:	48 8b 05 d2 ca 01 00 	mov    0x1cad2(%rip),%rax        # 57130 <_ZZ15sgx_self_reportE7_report+0x30>
   3a65e:	48 85 c0             	test   %rax,%rax
   3a661:	75 16                	jne    3a679 <sgx_self_report+0x26>
   3a663:	48 8d 15 96 ca 01 00 	lea    0x1ca96(%rip),%rdx        # 57100 <_ZZ15sgx_self_reportE7_report>
   3a66a:	be 00 00 00 00       	mov    $0x0,%esi
   3a66f:	bf 00 00 00 00       	mov    $0x0,%edi
   3a674:	e8 6a fd ff ff       	callq  3a3e3 <sgx_create_report>
   3a679:	48 8d 05 80 ca 01 00 	lea    0x1ca80(%rip),%rax        # 57100 <_ZZ15sgx_self_reportE7_report>
   3a680:	5d                   	pop    %rbp
   3a681:	c3                   	retq   

000000000003a682 <getpagesize>:
   3a682:	55                   	push   %rbp
   3a683:	48 89 e5             	mov    %rsp,%rbp
   3a686:	b8 00 10 00 00       	mov    $0x1000,%eax
   3a68b:	5d                   	pop    %rbp
   3a68c:	c3                   	retq   

000000000003a68d <labs>:
   3a68d:	55                   	push   %rbp
   3a68e:	48 89 e5             	mov    %rsp,%rbp
   3a691:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   3a695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3a699:	48 99                	cqto   
   3a69b:	48 89 d0             	mov    %rdx,%rax
   3a69e:	48 33 45 f8          	xor    -0x8(%rbp),%rax
   3a6a2:	48 29 d0             	sub    %rdx,%rax
   3a6a5:	5d                   	pop    %rbp
   3a6a6:	c3                   	retq   

Disassembly of section .nipx:

000000000003a6a7 <do_init_enclave>:
   3a6a7:	55                   	push   %rbp
   3a6a8:	48 89 e5             	mov    %rsp,%rbp
   3a6ab:	48 83 ec 20          	sub    $0x20,%rsp
   3a6af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   3a6b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   3a6b7:	e8 df 0a 00 00       	callq  3b19b <get_enclave_base>
   3a6bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3a6c0:	e8 f5 0a 00 00       	callq  3b1ba <lock_enclave>
   3a6c5:	85 c0                	test   %eax,%eax
   3a6c7:	0f 95 c0             	setne  %al
   3a6ca:	84 c0                	test   %al,%al
   3a6cc:	74 07                	je     3a6d5 <do_init_enclave+0x2e>
   3a6ce:	b8 01 00 00 00       	mov    $0x1,%eax
   3a6d3:	eb 32                	jmp    3a707 <do_init_enclave+0x60>
   3a6d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   3a6d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3a6dd:	48 89 d6             	mov    %rdx,%rsi
   3a6e0:	48 89 c7             	mov    %rax,%rdi
   3a6e3:	e8 21 00 00 00       	callq  3a709 <init_enclave>
   3a6e8:	85 c0                	test   %eax,%eax
   3a6ea:	0f 95 c0             	setne  %al
   3a6ed:	84 c0                	test   %al,%al
   3a6ef:	74 07                	je     3a6f8 <do_init_enclave+0x51>
   3a6f1:	b8 01 00 00 00       	mov    $0x1,%eax
   3a6f6:	eb 0f                	jmp    3a707 <do_init_enclave+0x60>
   3a6f8:	c7 05 7e d4 00 00 02 	movl   $0x2,0xd47e(%rip)        # 47b80 <g_enclave_state>
   3a6ff:	00 00 00 
   3a702:	b8 00 00 00 00       	mov    $0x0,%eax
   3a707:	c9                   	leaveq 
   3a708:	c3                   	retq   

000000000003a709 <init_enclave>:
   3a709:	55                   	push   %rbp
   3a70a:	48 89 e5             	mov    %rsp,%rbp
   3a70d:	41 55                	push   %r13
   3a70f:	41 54                	push   %r12
   3a711:	53                   	push   %rbx
   3a712:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   3a719:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
   3a720:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
   3a727:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3a72e:	00 00 
   3a730:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   3a734:	31 c0                	xor    %eax,%eax
   3a736:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   3a73d:	00 
   3a73e:	74 0a                	je     3a74a <init_enclave+0x41>
   3a740:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
   3a747:	00 
   3a748:	75 0a                	jne    3a754 <init_enclave+0x4b>
   3a74a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a74f:	e9 6f 04 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3a754:	48 8b 05 8d c8 00 00 	mov    0xc88d(%rip),%rax        # 46fe8 <_Z9pcl_entryPvS_>
   3a75b:	48 85 c0             	test   %rax,%rax
   3a75e:	74 67                	je     3a7c7 <init_enclave+0xbe>
   3a760:	0f ae e8             	lfence 
   3a763:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   3a76a:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   3a771:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   3a778:	48 8b 80 94 00 00 00 	mov    0x94(%rax),%rax
   3a77f:	48 85 c0             	test   %rax,%rax
   3a782:	75 0a                	jne    3a78e <init_enclave+0x85>
   3a784:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a789:	e9 35 04 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3a78e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   3a795:	48 8b 90 94 00 00 00 	mov    0x94(%rax),%rdx
   3a79c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   3a7a3:	48 89 d6             	mov    %rdx,%rsi
   3a7a6:	48 89 c7             	mov    %rax,%rdi
   3a7a9:	e8 62 78 fc ff       	callq  2010 <_Z9pcl_entryPvS_@plt>
   3a7ae:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
   3a7b4:	83 bd ec fe ff ff 00 	cmpl   $0x0,-0x114(%rbp)
   3a7bb:	74 0a                	je     3a7c7 <init_enclave+0xbe>
   3a7bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a7c2:	e9 fc 03 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3a7c7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   3a7ce:	48 89 c7             	mov    %rax,%rdi
   3a7d1:	e8 04 07 fd ff       	callq  aeda <relocate_enclave>
   3a7d6:	85 c0                	test   %eax,%eax
   3a7d8:	0f 95 c0             	setne  %al
   3a7db:	84 c0                	test   %al,%al
   3a7dd:	74 0a                	je     3a7e9 <init_enclave+0xe0>
   3a7df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a7e4:	e9 da 03 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3a7e9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   3a7f0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   3a7f7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   3a7fe:	be b0 00 00 00       	mov    $0xb0,%esi
   3a803:	48 89 c7             	mov    %rax,%rdi
   3a806:	e8 33 d6 fc ff       	callq  7e3e <sgx_is_outside_enclave>
   3a80b:	85 c0                	test   %eax,%eax
   3a80d:	0f 94 c0             	sete   %al
   3a810:	84 c0                	test   %al,%al
   3a812:	74 0a                	je     3a81e <init_enclave+0x115>
   3a814:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a819:	e9 a5 03 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3a81e:	0f ae e8             	lfence 
   3a821:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   3a828:	48 8b 10             	mov    (%rax),%rdx
   3a82b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   3a82f:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
   3a836:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
   3a83d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   3a841:	48 8b 48 18          	mov    0x18(%rax),%rcx
   3a845:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
   3a84c:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
   3a853:	48 8b 50 20          	mov    0x20(%rax),%rdx
   3a857:	48 8b 48 28          	mov    0x28(%rax),%rcx
   3a85b:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
   3a862:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
   3a869:	48 8b 50 30          	mov    0x30(%rax),%rdx
   3a86d:	48 8b 48 38          	mov    0x38(%rax),%rcx
   3a871:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
   3a878:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
   3a87f:	48 8b 50 40          	mov    0x40(%rax),%rdx
   3a883:	48 8b 48 48          	mov    0x48(%rax),%rcx
   3a887:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
   3a88e:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
   3a895:	48 8b 50 50          	mov    0x50(%rax),%rdx
   3a899:	48 8b 48 58          	mov    0x58(%rax),%rcx
   3a89d:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
   3a8a4:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
   3a8ab:	48 8b 50 60          	mov    0x60(%rax),%rdx
   3a8af:	48 8b 48 68          	mov    0x68(%rax),%rcx
   3a8b3:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
   3a8b7:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
   3a8bb:	48 8b 50 70          	mov    0x70(%rax),%rdx
   3a8bf:	48 8b 48 78          	mov    0x78(%rax),%rcx
   3a8c3:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
   3a8c7:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
   3a8cb:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
   3a8d2:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
   3a8d9:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
   3a8dd:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
   3a8e1:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
   3a8e8:	48 8b 88 98 00 00 00 	mov    0x98(%rax),%rcx
   3a8ef:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
   3a8f3:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   3a8f7:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
   3a8fe:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   3a905:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   3a909:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   3a90d:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
   3a914:	00 00 00 00 
   3a918:	48 8b 95 2c ff ff ff 	mov    -0xd4(%rbp),%rdx
   3a91f:	48 b8 00 00 00 00 00 	movabs $0x4000000000000000,%rax
   3a926:	00 00 40 
   3a929:	48 21 d0             	and    %rdx,%rax
   3a92c:	48 85 c0             	test   %rax,%rax
   3a92f:	74 1c                	je     3a94d <init_enclave+0x244>
   3a931:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   3a935:	ba b0 00 00 00       	mov    $0xb0,%edx
   3a93a:	48 3d b0 00 00 00    	cmp    $0xb0,%rax
   3a940:	48 0f 47 c2          	cmova  %rdx,%rax
   3a944:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   3a94b:	eb 0b                	jmp    3a958 <init_enclave+0x24f>
   3a94d:	48 c7 85 f0 fe ff ff 	movq   $0x9c,-0x110(%rbp)
   3a954:	9c 00 00 00 
   3a958:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
   3a95f:	00 00 00 00 
   3a963:	b8 b0 00 00 00       	mov    $0xb0,%eax
   3a968:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   3a96f:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   3a976:	73 28                	jae    3a9a0 <init_enclave+0x297>
   3a978:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   3a97f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   3a986:	48 01 c2             	add    %rax,%rdx
   3a989:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   3a990:	48 01 d0             	add    %rdx,%rax
   3a993:	c6 00 00             	movb   $0x0,(%rax)
   3a996:	48 83 85 f8 fe ff ff 	addq   $0x1,-0x108(%rbp)
   3a99d:	01 
   3a99e:	eb c3                	jmp    3a963 <init_enclave+0x25a>
   3a9a0:	8b 45 cc             	mov    -0x34(%rbp),%eax
   3a9a3:	89 05 d7 c2 00 00    	mov    %eax,0xc2d7(%rip)        # 46c80 <g_cpu_core_num>
   3a9a9:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   3a9af:	89 05 c7 c2 00 00    	mov    %eax,0xc2c7(%rip)        # 46c7c <g_sdk_version>
   3a9b5:	8b 05 c1 c2 00 00    	mov    0xc2c1(%rip),%eax        # 46c7c <g_sdk_version>
   3a9bb:	85 c0                	test   %eax,%eax
   3a9bd:	75 0c                	jne    3a9cb <init_enclave+0x2c2>
   3a9bf:	c7 05 af c2 00 00 00 	movl   $0x0,0xc2af(%rip)        # 46c78 <EDMM_supported>
   3a9c6:	00 00 00 
   3a9c9:	eb 34                	jmp    3a9ff <init_enclave+0x2f6>
   3a9cb:	8b 05 ab c2 00 00    	mov    0xc2ab(%rip),%eax        # 46c7c <g_sdk_version>
   3a9d1:	85 c0                	test   %eax,%eax
   3a9d3:	7e 20                	jle    3a9f5 <init_enclave+0x2ec>
   3a9d5:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   3a9dc:	48 83 c0 0c          	add    $0xc,%rax
   3a9e0:	be 00 00 00 00       	mov    $0x0,%esi
   3a9e5:	48 89 c7             	mov    %rax,%rdi
   3a9e8:	e8 74 e7 fc ff       	callq  9161 <feature_supported>
   3a9ed:	89 05 85 c2 00 00    	mov    %eax,0xc285(%rip)        # 46c78 <EDMM_supported>
   3a9f3:	eb 0a                	jmp    3a9ff <init_enclave+0x2f6>
   3a9f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a9fa:	e9 c4 01 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3a9ff:	8b 1d 73 c2 00 00    	mov    0xc273(%rip),%ebx        # 46c78 <EDMM_supported>
   3aa05:	e8 cd e5 fc ff       	callq  8fd7 <get_heap_min_size>
   3aa0a:	49 89 c5             	mov    %rax,%r13
   3aa0d:	e8 4b e5 fc ff       	callq  8f5d <get_heap_size>
   3aa12:	49 89 c4             	mov    %rax,%r12
   3aa15:	e8 2c e5 fc ff       	callq  8f46 <get_heap_base>
   3aa1a:	89 d9                	mov    %ebx,%ecx
   3aa1c:	4c 89 ea             	mov    %r13,%rdx
   3aa1f:	4c 89 e6             	mov    %r12,%rsi
   3aa22:	48 89 c7             	mov    %rax,%rdi
   3aa25:	e8 b2 8d fd ff       	callq  137dc <heap_init>
   3aa2a:	85 c0                	test   %eax,%eax
   3aa2c:	0f 95 c0             	setne  %al
   3aa2f:	84 c0                	test   %al,%al
   3aa31:	74 0a                	je     3aa3d <init_enclave+0x334>
   3aa33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3aa38:	e9 86 01 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3aa3d:	48 8b 15 8c c8 00 00 	mov    0xc88c(%rip),%rdx        # 472d0 <g_global_data+0x10>
   3aa44:	48 8b 05 85 c8 00 00 	mov    0xc885(%rip),%rax        # 472d0 <g_global_data+0x10>
   3aa4b:	48 8b 35 76 c8 00 00 	mov    0xc876(%rip),%rsi        # 472c8 <g_global_data+0x8>
   3aa52:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
   3aa59:	48 01 f1             	add    %rsi,%rcx
   3aa5c:	48 89 cf             	mov    %rcx,%rdi
   3aa5f:	48 89 d1             	mov    %rdx,%rcx
   3aa62:	ba 00 00 00 00       	mov    $0x0,%edx
   3aa67:	48 89 c6             	mov    %rax,%rsi
   3aa6a:	e8 f0 8c fd ff       	callq  1375f <memset_s>
   3aa6f:	48 8b 15 6a c8 00 00 	mov    0xc86a(%rip),%rdx        # 472e0 <g_global_data+0x20>
   3aa76:	48 8b 05 63 c8 00 00 	mov    0xc863(%rip),%rax        # 472e0 <g_global_data+0x20>
   3aa7d:	48 8b 35 54 c8 00 00 	mov    0xc854(%rip),%rsi        # 472d8 <g_global_data+0x18>
   3aa84:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
   3aa8b:	48 01 f1             	add    %rsi,%rcx
   3aa8e:	48 89 cf             	mov    %rcx,%rdi
   3aa91:	48 89 d1             	mov    %rdx,%rcx
   3aa94:	ba 00 00 00 00       	mov    $0x0,%edx
   3aa99:	48 89 c6             	mov    %rax,%rsi
   3aa9c:	e8 be 8c fd ff       	callq  1375f <memset_s>
   3aaa1:	e8 5e ef fc ff       	callq  9a04 <get_xfeature_state>
   3aaa6:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   3aaad:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   3aab4:	48 0d 00 18 00 1e    	or     $0x1e001800,%rax
   3aaba:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   3aac1:	48 8b 95 2c ff ff ff 	mov    -0xd4(%rbp),%rdx
   3aac8:	48 b8 00 00 00 00 00 	movabs $0x4000000000000000,%rax
   3aacf:	00 00 40 
   3aad2:	48 21 d0             	and    %rdx,%rax
   3aad5:	48 85 c0             	test   %rax,%rax
   3aad8:	74 0b                	je     3aae5 <init_enclave+0x3dc>
   3aada:	48 8b 45 c4          	mov    -0x3c(%rbp),%rax
   3aade:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   3aae5:	8b 05 91 c1 00 00    	mov    0xc191(%rip),%eax        # 46c7c <g_sdk_version>
   3aaeb:	83 f8 01             	cmp    $0x1,%eax
   3aaee:	7f 09                	jg     3aaf9 <init_enclave+0x3f0>
   3aaf0:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   3aaf4:	48 85 c0             	test   %rax,%rax
   3aaf7:	74 37                	je     3ab30 <init_enclave+0x427>
   3aaf9:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   3ab00:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   3ab07:	48 8d 48 14          	lea    0x14(%rax),%rcx
   3ab0b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   3ab12:	48 89 ce             	mov    %rcx,%rsi
   3ab15:	48 89 c7             	mov    %rax,%rdi
   3ab18:	e8 81 f0 fc ff       	callq  9b9e <init_optimized_libs>
   3ab1d:	85 c0                	test   %eax,%eax
   3ab1f:	0f 95 c0             	setne  %al
   3ab22:	84 c0                	test   %al,%al
   3ab24:	74 35                	je     3ab5b <init_enclave+0x452>
   3ab26:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3ab2b:	e9 93 00 00 00       	jmpq   3abc3 <init_enclave+0x4ba>
   3ab30:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   3ab37:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   3ab3e:	be 00 00 00 00       	mov    $0x0,%esi
   3ab43:	48 89 c7             	mov    %rax,%rdi
   3ab46:	e8 53 f0 fc ff       	callq  9b9e <init_optimized_libs>
   3ab4b:	85 c0                	test   %eax,%eax
   3ab4d:	0f 95 c0             	setne  %al
   3ab50:	84 c0                	test   %al,%al
   3ab52:	74 07                	je     3ab5b <init_enclave+0x452>
   3ab54:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3ab59:	eb 68                	jmp    3abc3 <init_enclave+0x4ba>
   3ab5b:	e8 fd e4 fc ff       	callq  905d <get_rsrv_size>
   3ab60:	48 85 c0             	test   %rax,%rax
   3ab63:	0f 95 c0             	setne  %al
   3ab66:	84 c0                	test   %al,%al
   3ab68:	74 33                	je     3ab9d <init_enclave+0x494>
   3ab6a:	e8 68 e5 fc ff       	callq  90d7 <get_rsrv_min_size>
   3ab6f:	49 89 c4             	mov    %rax,%r12
   3ab72:	e8 e6 e4 fc ff       	callq  905d <get_rsrv_size>
   3ab77:	48 89 c3             	mov    %rax,%rbx
   3ab7a:	e8 c7 e4 fc ff       	callq  9046 <get_rsrv_base>
   3ab7f:	4c 89 e2             	mov    %r12,%rdx
   3ab82:	48 89 de             	mov    %rbx,%rsi
   3ab85:	48 89 c7             	mov    %rax,%rdi
   3ab88:	e8 82 9c fd ff       	callq  1480f <rsrv_mem_init>
   3ab8d:	85 c0                	test   %eax,%eax
   3ab8f:	0f 95 c0             	setne  %al
   3ab92:	84 c0                	test   %al,%al
   3ab94:	74 07                	je     3ab9d <init_enclave+0x494>
   3ab96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3ab9b:	eb 26                	jmp    3abc3 <init_enclave+0x4ba>
   3ab9d:	be 08 00 00 00       	mov    $0x8,%esi
   3aba2:	48 8d 3d df c0 00 00 	lea    0xc0df(%rip),%rdi        # 46c88 <__intel_security_cookie>
   3aba9:	e8 3f d5 fc ff       	callq  80ed <sgx_read_rand>
   3abae:	85 c0                	test   %eax,%eax
   3abb0:	0f 95 c0             	setne  %al
   3abb3:	84 c0                	test   %al,%al
   3abb5:	74 07                	je     3abbe <init_enclave+0x4b5>
   3abb7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3abbc:	eb 05                	jmp    3abc3 <init_enclave+0x4ba>
   3abbe:	b8 00 00 00 00       	mov    $0x0,%eax
   3abc3:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   3abc7:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   3abce:	00 00 
   3abd0:	74 05                	je     3abd7 <init_enclave+0x4ce>
   3abd2:	e8 b5 08 fd ff       	callq  b48c <__stack_chk_fail>
   3abd7:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   3abde:	5b                   	pop    %rbx
   3abdf:	41 5c                	pop    %r12
   3abe1:	41 5d                	pop    %r13
   3abe3:	5d                   	pop    %rbp
   3abe4:	c3                   	retq   

000000000003abe5 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
   3abe5:	55                   	push   %rbp
   3abe6:	48 89 e5             	mov    %rsp,%rbp
   3abe9:	53                   	push   %rbx
   3abea:	48 83 ec 48          	sub    $0x48,%rsp
   3abee:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   3abf2:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   3abf6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   3abfa:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
   3ac01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   3ac05:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   3ac09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ac0d:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   3ac11:	0f 83 1a 01 00 00    	jae    3ad31 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x14c>
   3ac17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ac1b:	0f b7 00             	movzwl (%rax),%eax
   3ac1e:	0f b7 c0             	movzwl %ax,%eax
   3ac21:	25 00 10 00 00       	and    $0x1000,%eax
   3ac26:	85 c0                	test   %eax,%eax
   3ac28:	75 27                	jne    3ac51 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6c>
   3ac2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ac2e:	48 8b 40 18          	mov    0x18(%rax),%rax
   3ac32:	25 00 01 00 00       	and    $0x100,%eax
   3ac37:	48 85 c0             	test   %rax,%rax
   3ac3a:	74 15                	je     3ac51 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6c>
   3ac3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ac40:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   3ac44:	66 83 f8 03          	cmp    $0x3,%ax
   3ac48:	75 07                	jne    3ac51 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6c>
   3ac4a:	b8 01 00 00 00       	mov    $0x1,%eax
   3ac4f:	eb 05                	jmp    3ac56 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x71>
   3ac51:	b8 00 00 00 00       	mov    $0x0,%eax
   3ac56:	84 c0                	test   %al,%al
   3ac58:	74 3f                	je     3ac99 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb4>
   3ac5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ac5e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   3ac62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   3ac66:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
   3ac6a:	e8 2c 05 00 00       	callq  3b19b <get_enclave_base>
   3ac6f:	48 01 d8             	add    %rbx,%rax
   3ac72:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   3ac76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3ac7a:	48 89 c7             	mov    %rax,%rdi
   3ac7d:	e8 b7 d7 fc ff       	callq  8439 <_Z11do_save_tcsPv>
   3ac82:	85 c0                	test   %eax,%eax
   3ac84:	0f 95 c0             	setne  %al
   3ac87:	84 c0                	test   %al,%al
   3ac89:	0f 84 98 00 00 00    	je     3ad27 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x142>
   3ac8f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3ac94:	e9 9d 00 00 00       	jmpq   3ad36 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x151>
   3ac99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ac9d:	0f b7 00             	movzwl (%rax),%eax
   3aca0:	0f b7 c0             	movzwl %ax,%eax
   3aca3:	25 00 10 00 00       	and    $0x1000,%eax
   3aca8:	85 c0                	test   %eax,%eax
   3acaa:	0f 95 c0             	setne  %al
   3acad:	84 c0                	test   %al,%al
   3acaf:	74 76                	je     3ad27 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x142>
   3acb1:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   3acb8:	00 
   3acb9:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   3acc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3acc4:	8b 40 04             	mov    0x4(%rax),%eax
   3acc7:	39 45 d0             	cmp    %eax,-0x30(%rbp)
   3acca:	0f 92 c0             	setb   %al
   3accd:	84 c0                	test   %al,%al
   3accf:	74 56                	je     3ad27 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x142>
   3acd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3acd5:	48 8b 40 08          	mov    0x8(%rax),%rax
   3acd9:	48 01 45 e0          	add    %rax,-0x20(%rbp)
   3acdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ace1:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   3ace5:	0f b7 c0             	movzwl %ax,%eax
   3ace8:	f7 d8                	neg    %eax
   3acea:	48 98                	cltq   
   3acec:	48 c1 e0 05          	shl    $0x5,%rax
   3acf0:	48 89 c2             	mov    %rax,%rdx
   3acf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3acf7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   3acfb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   3acff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ad03:	48 89 c6             	mov    %rax,%rsi
   3ad06:	48 89 cf             	mov    %rcx,%rdi
   3ad09:	e8 d7 fe ff ff       	callq  3abe5 <_ZL18add_static_threadsPVK9_layout_tS1_m>
   3ad0e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   3ad11:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   3ad15:	0f 95 c0             	setne  %al
   3ad18:	84 c0                	test   %al,%al
   3ad1a:	74 05                	je     3ad21 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x13c>
   3ad1c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   3ad1f:	eb 15                	jmp    3ad36 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x151>
   3ad21:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   3ad25:	eb 99                	jmp    3acc0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xdb>
   3ad27:	48 83 45 d8 20       	addq   $0x20,-0x28(%rbp)
   3ad2c:	e9 d8 fe ff ff       	jmpq   3ac09 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x24>
   3ad31:	b8 00 00 00 00       	mov    $0x0,%eax
   3ad36:	48 83 c4 48          	add    $0x48,%rsp
   3ad3a:	5b                   	pop    %rbx
   3ad3b:	5d                   	pop    %rbp
   3ad3c:	c3                   	retq   

000000000003ad3d <sgx_is_enclave_crashed>:
   3ad3d:	55                   	push   %rbp
   3ad3e:	48 89 e5             	mov    %rsp,%rbp
   3ad41:	e8 5d 04 00 00       	callq  3b1a3 <get_enclave_state>
   3ad46:	83 f8 03             	cmp    $0x3,%eax
   3ad49:	0f 94 c0             	sete   %al
   3ad4c:	0f b6 c0             	movzbl %al,%eax
   3ad4f:	5d                   	pop    %rbp
   3ad50:	c3                   	retq   

000000000003ad51 <_ZL16init_stack_guardPv>:
   3ad51:	55                   	push   %rbp
   3ad52:	48 89 e5             	mov    %rsp,%rbp
   3ad55:	48 83 ec 20          	sub    $0x20,%rsp
   3ad59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   3ad5d:	e8 74 04 00 00       	callq  3b1d6 <get_thread_data>
   3ad62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3ad66:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   3ad6b:	74 21                	je     3ad8e <_ZL16init_stack_guardPv+0x3d>
   3ad6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3ad71:	48 8b 50 10          	mov    0x10(%rax),%rdx
   3ad75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3ad79:	48 8b 40 08          	mov    0x8(%rax),%rax
   3ad7d:	48 39 c2             	cmp    %rax,%rdx
   3ad80:	75 13                	jne    3ad95 <_ZL16init_stack_guardPv+0x44>
   3ad82:	48 8b 05 67 c5 00 00 	mov    0xc567(%rip),%rax        # 472f0 <g_global_data+0x30>
   3ad89:	48 85 c0             	test   %rax,%rax
   3ad8c:	74 07                	je     3ad95 <_ZL16init_stack_guardPv+0x44>
   3ad8e:	b8 01 00 00 00       	mov    $0x1,%eax
   3ad93:	eb 05                	jmp    3ad9a <_ZL16init_stack_guardPv+0x49>
   3ad95:	b8 00 00 00 00       	mov    $0x0,%eax
   3ad9a:	84 c0                	test   %al,%al
   3ad9c:	74 6d                	je     3ae0b <_ZL16init_stack_guardPv+0xba>
   3ad9e:	48 8b 15 5b c5 00 00 	mov    0xc55b(%rip),%rdx        # 47300 <g_global_data+0x40>
   3ada5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3ada9:	48 01 d0             	add    %rdx,%rax
   3adac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3adb0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   3adb5:	75 1f                	jne    3add6 <_ZL16init_stack_guardPv+0x85>
   3adb7:	48 8d 0d e2 18 00 00 	lea    0x18e2(%rip),%rcx        # 3c6a0 <_ZZ9ecall_mapE8__func__+0x10>
   3adbe:	48 8d 15 2b 19 00 00 	lea    0x192b(%rip),%rdx        # 3c6f0 <_ZZL16init_stack_guardPvE8__func__>
   3adc5:	be 3f 00 00 00       	mov    $0x3f,%esi
   3adca:	48 8d 3d e7 18 00 00 	lea    0x18e7(%rip),%rdi        # 3c6b8 <_ZZ9ecall_mapE8__func__+0x28>
   3add1:	e8 bf 06 fd ff       	callq  b495 <__assert>
   3add6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   3addd:	00 
   3adde:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   3ade2:	be 08 00 00 00       	mov    $0x8,%esi
   3ade7:	48 89 c7             	mov    %rax,%rdi
   3adea:	e8 fe d2 fc ff       	callq  80ed <sgx_read_rand>
   3adef:	85 c0                	test   %eax,%eax
   3adf1:	0f 95 c0             	setne  %al
   3adf4:	84 c0                	test   %al,%al
   3adf6:	74 05                	je     3adfd <_ZL16init_stack_guardPv+0xac>
   3adf8:	e8 dc 07 00 00       	callq  3b5d9 <abort>
   3adfd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   3ae01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3ae05:	48 89 50 28          	mov    %rdx,0x28(%rax)
   3ae09:	eb 01                	jmp    3ae0c <_ZL16init_stack_guardPv+0xbb>
   3ae0b:	90                   	nop
   3ae0c:	c9                   	leaveq 
   3ae0d:	c3                   	retq   

000000000003ae0e <enter_enclave>:
   3ae0e:	55                   	push   %rbp
   3ae0f:	48 89 e5             	mov    %rsp,%rbp
   3ae12:	48 83 ec 30          	sub    $0x30,%rsp
   3ae16:	89 7d ec             	mov    %edi,-0x14(%rbp)
   3ae19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   3ae1d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   3ae21:	89 4d e8             	mov    %ecx,-0x18(%rbp)
   3ae24:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
   3ae2b:	e8 0d ff ff ff       	callq  3ad3d <sgx_is_enclave_crashed>
   3ae30:	85 c0                	test   %eax,%eax
   3ae32:	0f 95 c0             	setne  %al
   3ae35:	84 c0                	test   %al,%al
   3ae37:	74 0a                	je     3ae43 <enter_enclave+0x35>
   3ae39:	b8 06 10 00 00       	mov    $0x1006,%eax
   3ae3e:	e9 1e 01 00 00       	jmpq   3af61 <enter_enclave+0x153>
   3ae43:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   3ae47:	74 11                	je     3ae5a <enter_enclave+0x4c>
   3ae49:	e8 55 03 00 00       	callq  3b1a3 <get_enclave_state>
   3ae4e:	83 f8 02             	cmp    $0x2,%eax
   3ae51:	74 07                	je     3ae5a <enter_enclave+0x4c>
   3ae53:	b8 01 00 00 00       	mov    $0x1,%eax
   3ae58:	eb 05                	jmp    3ae5f <enter_enclave+0x51>
   3ae5a:	b8 00 00 00 00       	mov    $0x0,%eax
   3ae5f:	84 c0                	test   %al,%al
   3ae61:	74 12                	je     3ae75 <enter_enclave+0x67>
   3ae63:	bf 03 00 00 00       	mov    $0x3,%edi
   3ae68:	e8 43 03 00 00       	callq  3b1b0 <set_enclave_state>
   3ae6d:	8b 45 fc             	mov    -0x4(%rbp),%eax
   3ae70:	e9 ec 00 00 00       	jmpq   3af61 <enter_enclave+0x153>
   3ae75:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   3ae79:	0f 85 98 00 00 00    	jne    3af17 <enter_enclave+0x109>
   3ae7f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   3ae83:	79 06                	jns    3ae8b <enter_enclave+0x7d>
   3ae85:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
   3ae89:	75 29                	jne    3aeb4 <enter_enclave+0xa6>
   3ae8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3ae8f:	48 89 c7             	mov    %rax,%rdi
   3ae92:	e8 ba fe ff ff       	callq  3ad51 <_ZL16init_stack_guardPv>
   3ae97:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   3ae9b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   3ae9f:	8b 45 ec             	mov    -0x14(%rbp),%eax
   3aea2:	48 89 ce             	mov    %rcx,%rsi
   3aea5:	89 c7                	mov    %eax,%edi
   3aea7:	e8 c8 da fc ff       	callq  8974 <do_ecall>
   3aeac:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3aeaf:	e9 9a 00 00 00       	jmpq   3af4e <enter_enclave+0x140>
   3aeb4:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   3aeb8:	75 18                	jne    3aed2 <enter_enclave+0xc4>
   3aeba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   3aebe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   3aec2:	48 89 d6             	mov    %rdx,%rsi
   3aec5:	48 89 c7             	mov    %rax,%rdi
   3aec8:	e8 da f7 ff ff       	callq  3a6a7 <do_init_enclave>
   3aecd:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3aed0:	eb 7c                	jmp    3af4e <enter_enclave+0x140>
   3aed2:	83 7d ec fe          	cmpl   $0xfffffffe,-0x14(%rbp)
   3aed6:	75 11                	jne    3aee9 <enter_enclave+0xdb>
   3aed8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   3aedc:	48 89 c7             	mov    %rax,%rdi
   3aedf:	e8 6e df fc ff       	callq  8e52 <do_oret>
   3aee4:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3aee7:	eb 65                	jmp    3af4e <enter_enclave+0x140>
   3aee9:	83 7d ec fc          	cmpl   $0xfffffffc,-0x14(%rbp)
   3aeed:	75 11                	jne    3af00 <enter_enclave+0xf2>
   3aeef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   3aef3:	48 89 c7             	mov    %rax,%rdi
   3aef6:	e8 57 dc fc ff       	callq  8b52 <do_ecall_add_thread>
   3aefb:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3aefe:	eb 4e                	jmp    3af4e <enter_enclave+0x140>
   3af00:	83 7d ec fb          	cmpl   $0xfffffffb,-0x14(%rbp)
   3af04:	75 48                	jne    3af4e <enter_enclave+0x140>
   3af06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3af0a:	48 89 c7             	mov    %rax,%rdi
   3af0d:	e8 04 dd fc ff       	callq  8c16 <do_uninit_enclave>
   3af12:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3af15:	eb 37                	jmp    3af4e <enter_enclave+0x140>
   3af17:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
   3af1b:	75 31                	jne    3af4e <enter_enclave+0x140>
   3af1d:	83 7d ec fd          	cmpl   $0xfffffffd,-0x14(%rbp)
   3af21:	75 2b                	jne    3af4e <enter_enclave+0x140>
   3af23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3af27:	48 89 c7             	mov    %rax,%rdi
   3af2a:	e8 fd e5 fc ff       	callq  952c <trts_handle_exception>
   3af2f:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3af32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3af36:	48 89 c7             	mov    %rax,%rdi
   3af39:	e8 c8 d2 fc ff       	callq  8206 <check_static_stack_canary>
   3af3e:	85 c0                	test   %eax,%eax
   3af40:	0f 95 c0             	setne  %al
   3af43:	84 c0                	test   %al,%al
   3af45:	74 07                	je     3af4e <enter_enclave+0x140>
   3af47:	c7 45 fc 09 10 00 00 	movl   $0x1009,-0x4(%rbp)
   3af4e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   3af52:	75 0a                	jne    3af5e <enter_enclave+0x150>
   3af54:	bf 03 00 00 00       	mov    $0x3,%edi
   3af59:	e8 52 02 00 00       	callq  3b1b0 <set_enclave_state>
   3af5e:	8b 45 fc             	mov    -0x4(%rbp),%eax
   3af61:	c9                   	leaveq 
   3af62:	c3                   	retq   

000000000003af63 <_SE3>:
   3af63:	55                   	push   %rbp
   3af64:	48 89 e5             	mov    %rsp,%rbp
   3af67:	48 83 ec 30          	sub    $0x30,%rsp
   3af6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   3af6f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   3af73:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   3af77:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   3af7b:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   3af7f:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   3af83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3af87:	48 83 f8 01          	cmp    $0x1,%rax
   3af8b:	74 32                	je     3afbf <_SE3+0x5c>
   3af8d:	48 83 f8 01          	cmp    $0x1,%rax
   3af91:	72 43                	jb     3afd6 <_SE3+0x73>
   3af93:	48 83 f8 04          	cmp    $0x4,%rax
   3af97:	75 5b                	jne    3aff4 <_SE3+0x91>
   3af99:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   3af9d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   3afa1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   3afa5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   3afa9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   3afad:	49 89 f8             	mov    %rdi,%r8
   3afb0:	48 89 c7             	mov    %rax,%rdi
   3afb3:	e8 43 00 00 00       	callq  3affb <_ZL6_EEXITmmmmm>
   3afb8:	b8 00 00 00 00       	mov    $0x0,%eax
   3afbd:	eb 3a                	jmp    3aff9 <_SE3+0x96>
   3afbf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   3afc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   3afc7:	48 89 d6             	mov    %rdx,%rsi
   3afca:	48 89 c7             	mov    %rax,%rdi
   3afcd:	e8 a9 ec fc ff       	callq  9c7b <_ZL8_EGETKEYP14_key_request_tPh>
   3afd2:	48 98                	cltq   
   3afd4:	eb 23                	jmp    3aff9 <_SE3+0x96>
   3afd6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   3afda:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   3afde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   3afe2:	48 89 ce             	mov    %rcx,%rsi
   3afe5:	48 89 c7             	mov    %rax,%rdi
   3afe8:	e8 1e f7 fc ff       	callq  a70b <_ZL8_EREPORTPK14_target_info_tPK18_sgx_report_data_tP9_report_t>
   3afed:	b8 00 00 00 00       	mov    $0x0,%eax
   3aff2:	eb 05                	jmp    3aff9 <_SE3+0x96>
   3aff4:	e8 e0 05 00 00       	callq  3b5d9 <abort>
   3aff9:	c9                   	leaveq 
   3affa:	c3                   	retq   

000000000003affb <_ZL6_EEXITmmmmm>:
   3affb:	55                   	push   %rbp
   3affc:	48 89 e5             	mov    %rsp,%rbp
   3afff:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   3b006:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   3b00a:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   3b00e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   3b012:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   3b016:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
   3b01d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3b024:	00 00 
   3b026:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3b02a:	31 c0                	xor    %eax,%eax
   3b02c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   3b030:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   3b034:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   3b038:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   3b03c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   3b040:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   3b044:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   3b048:	48 83 e8 50          	sub    $0x50,%rax
   3b04c:	48 8b 00             	mov    (%rax),%rax
   3b04f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   3b053:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   3b058:	0f 94 c0             	sete   %al
   3b05b:	0f b6 c0             	movzbl %al,%eax
   3b05e:	48 85 c0             	test   %rax,%rax
   3b061:	74 05                	je     3b068 <_ZL6_EEXITmmmmm+0x6d>
   3b063:	e8 71 05 00 00       	callq  3b5d9 <abort>
   3b068:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   3b06c:	48 89 c7             	mov    %rax,%rdi
   3b06f:	e8 c6 00 00 00       	callq  3b13a <td_mngr_restore_td>
   3b074:	85 c0                	test   %eax,%eax
   3b076:	0f 94 c0             	sete   %al
   3b079:	0f b6 c0             	movzbl %al,%eax
   3b07c:	48 85 c0             	test   %rax,%rax
   3b07f:	0f 95 c0             	setne  %al
   3b082:	84 c0                	test   %al,%al
   3b084:	74 05                	je     3b08b <_ZL6_EEXITmmmmm+0x90>
   3b086:	e8 4e 05 00 00       	callq  3b5d9 <abort>
   3b08b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   3b08f:	48 83 c0 48          	add    $0x48,%rax
   3b093:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   3b097:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   3b09b:	48 8b 40 08          	mov    0x8(%rax),%rax
   3b09f:	48 83 f8 01          	cmp    $0x1,%rax
   3b0a3:	0f 95 c0             	setne  %al
   3b0a6:	0f b6 c0             	movzbl %al,%eax
   3b0a9:	48 85 c0             	test   %rax,%rax
   3b0ac:	74 05                	je     3b0b3 <_ZL6_EEXITmmmmm+0xb8>
   3b0ae:	e8 26 05 00 00       	callq  3b5d9 <abort>
   3b0b3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   3b0b7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   3b0be:	00 
   3b0bf:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   3b0c6:	00 
   3b0c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   3b0cb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   3b0cf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   3b0d3:	48 8b 00             	mov    (%rax),%rax
   3b0d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   3b0da:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   3b0de:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   3b0e2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   3b0e9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   3b0ed:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   3b0f1:	48 89 c7             	mov    %rax,%rdi
   3b0f4:	e8 1b 00 00 00       	callq  3b114 <load_regs>
   3b0f9:	90                   	nop
   3b0fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3b0fe:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   3b105:	00 00 
   3b107:	74 05                	je     3b10e <_ZL6_EEXITmmmmm+0x113>
   3b109:	e8 7e 03 fd ff       	callq  b48c <__stack_chk_fail>
   3b10e:	c9                   	leaveq 
   3b10f:	c3                   	retq   

000000000003b110 <get_bp>:
   3b110:	48 89 e8             	mov    %rbp,%rax
   3b113:	c3                   	retq   

000000000003b114 <load_regs>:
   3b114:	48 89 fa             	mov    %rdi,%rdx
   3b117:	48 8b 02             	mov    (%rdx),%rax
   3b11a:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
   3b11e:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   3b122:	48 8b 72 20          	mov    0x20(%rdx),%rsi
   3b126:	48 8b 7a 28          	mov    0x28(%rdx),%rdi
   3b12a:	48 8b 6a 30          	mov    0x30(%rdx),%rbp
   3b12e:	48 8b 62 38          	mov    0x38(%rdx),%rsp
   3b132:	ff 72 40             	pushq  0x40(%rdx)
   3b135:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   3b139:	c3                   	retq   

000000000003b13a <td_mngr_restore_td>:
   3b13a:	55                   	push   %rbp
   3b13b:	48 89 e5             	mov    %rsp,%rbp
   3b13e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   3b142:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   3b147:	75 07                	jne    3b150 <td_mngr_restore_td+0x16>
   3b149:	b8 00 00 00 00       	mov    $0x0,%eax
   3b14e:	eb 49                	jmp    3b199 <td_mngr_restore_td+0x5f>
   3b150:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b157:	00 00 
   3b159:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   3b15d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3b161:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   3b165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3b169:	48 83 c0 48          	add    $0x48,%rax
   3b16d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3b171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3b175:	48 8b 40 10          	mov    0x10(%rax),%rax
   3b179:	48 89 c2             	mov    %rax,%rdx
   3b17c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   3b180:	48 89 10             	mov    %rdx,(%rax)
   3b183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3b187:	48 8b 40 18          	mov    0x18(%rax),%rax
   3b18b:	64 48 89 04 25 00 00 	mov    %rax,%fs:0x0
   3b192:	00 00 
   3b194:	b8 01 00 00 00       	mov    $0x1,%eax
   3b199:	5d                   	pop    %rbp
   3b19a:	c3                   	retq   

000000000003b19b <get_enclave_base>:
   3b19b:	48 8d 05 5e 4e fc ff 	lea    -0x3b1a2(%rip),%rax        # 0 <enclave.so>
   3b1a2:	c3                   	retq   

000000000003b1a3 <get_enclave_state>:
   3b1a3:	48 8d 0d d6 c9 00 00 	lea    0xc9d6(%rip),%rcx        # 47b80 <g_enclave_state>
   3b1aa:	48 31 c0             	xor    %rax,%rax
   3b1ad:	8b 01                	mov    (%rcx),%eax
   3b1af:	c3                   	retq   

000000000003b1b0 <set_enclave_state>:
   3b1b0:	48 8d 05 c9 c9 00 00 	lea    0xc9c9(%rip),%rax        # 47b80 <g_enclave_state>
   3b1b7:	89 38                	mov    %edi,(%rax)
   3b1b9:	c3                   	retq   

000000000003b1ba <lock_enclave>:
   3b1ba:	48 8d 15 bf c9 00 00 	lea    0xc9bf(%rip),%rdx        # 47b80 <g_enclave_state>
   3b1c1:	48 31 c0             	xor    %rax,%rax
   3b1c4:	b8 00 00 00 00       	mov    $0x0,%eax
   3b1c9:	48 31 c9             	xor    %rcx,%rcx
   3b1cc:	b9 01 00 00 00       	mov    $0x1,%ecx
   3b1d1:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   3b1d5:	c3                   	retq   

000000000003b1d6 <get_thread_data>:
   3b1d6:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b1dd:	00 00 
   3b1df:	48 8b 00             	mov    (%rax),%rax
   3b1e2:	48 8b 00             	mov    (%rax),%rax
   3b1e5:	c3                   	retq   

000000000003b1e6 <get_stack_guard>:
   3b1e6:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b1ed:	00 00 
   3b1ef:	48 8b 00             	mov    (%rax),%rax
   3b1f2:	48 8b 40 28          	mov    0x28(%rax),%rax
   3b1f6:	c3                   	retq   

000000000003b1f7 <enclave_entry>:
   3b1f7:	48 31 d2             	xor    %rdx,%rdx
   3b1fa:	48 01 d2             	add    %rdx,%rdx
   3b1fd:	fc                   	cld    
   3b1fe:	4d 31 c0             	xor    %r8,%r8
   3b201:	4d 31 c9             	xor    %r9,%r9
   3b204:	4d 31 d2             	xor    %r10,%r10
   3b207:	4d 31 db             	xor    %r11,%r11
   3b20a:	4d 31 e4             	xor    %r12,%r12
   3b20d:	4d 31 ed             	xor    %r13,%r13
   3b210:	4d 31 f6             	xor    %r14,%r14
   3b213:	4d 31 ff             	xor    %r15,%r15
   3b216:	48 83 f8 00          	cmp    $0x0,%rax
   3b21a:	0f 85 ee 00 00 00    	jne    3b30e <enclave_entry+0x117>
   3b220:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b227:	00 00 
   3b229:	48 8b 00             	mov    (%rax),%rax
   3b22c:	48 8b 40 08          	mov    0x8(%rax),%rax
   3b230:	48 83 f8 00          	cmp    $0x0,%rax
   3b234:	75 0f                	jne    3b245 <enclave_entry+0x4e>
   3b236:	48 89 d8             	mov    %rbx,%rax
   3b239:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   3b23f:	48 2d b0 02 00 00    	sub    $0x2b0,%rax
   3b245:	48 94                	xchg   %rax,%rsp
   3b247:	51                   	push   %rcx
   3b248:	55                   	push   %rbp
   3b249:	48 89 e5             	mov    %rsp,%rbp
   3b24c:	9c                   	pushfq 
   3b24d:	48 f7 14 24          	notq   (%rsp)
   3b251:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   3b258:	00 
   3b259:	48 f7 14 24          	notq   (%rsp)
   3b25d:	9d                   	popfq  
   3b25e:	48 83 ec 30          	sub    $0x30,%rsp
   3b262:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3b266:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   3b26a:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   3b26e:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   3b272:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   3b276:	48 83 ec 20          	sub    $0x20,%rsp
   3b27a:	48 8d 3d bf c6 00 00 	lea    0xc6bf(%rip),%rdi        # 47940 <SYNTHETIC_STATE>
   3b281:	e8 c4 03 00 00       	callq  3b64a <restore_xregs>
   3b286:	48 83 c4 20          	add    $0x20,%rsp
   3b28a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   3b28e:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   3b292:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   3b296:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   3b29a:	e8 6f fb ff ff       	callq  3ae0e <enter_enclave>
   3b29f:	48 89 c3             	mov    %rax,%rbx
   3b2a2:	48 8d 3d 97 c6 00 00 	lea    0xc697(%rip),%rdi        # 47940 <SYNTHETIC_STATE>
   3b2a9:	e8 9c 03 00 00       	callq  3b64a <restore_xregs>
   3b2ae:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   3b2b5:	48 89 de             	mov    %rbx,%rsi
   3b2b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   3b2bc:	48 89 ec             	mov    %rbp,%rsp
   3b2bf:	5d                   	pop    %rbp
   3b2c0:	5b                   	pop    %rbx
   3b2c1:	48 89 d4             	mov    %rdx,%rsp
   3b2c4:	48 31 c9             	xor    %rcx,%rcx
   3b2c7:	48 31 d2             	xor    %rdx,%rdx
   3b2ca:	4d 31 c0             	xor    %r8,%r8
   3b2cd:	4d 31 c9             	xor    %r9,%r9
   3b2d0:	4d 31 d2             	xor    %r10,%r10
   3b2d3:	4d 31 db             	xor    %r11,%r11
   3b2d6:	4d 31 e4             	xor    %r12,%r12
   3b2d9:	4d 31 ed             	xor    %r13,%r13
   3b2dc:	4d 31 f6             	xor    %r14,%r14
   3b2df:	4d 31 ff             	xor    %r15,%r15
   3b2e2:	48 01 d2             	add    %rdx,%rdx
   3b2e5:	fc                   	cld    
   3b2e6:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   3b2ed:	48 83 f8 04          	cmp    $0x4,%rax
   3b2f1:	75 06                	jne    3b2f9 <enclave_entry+0x102>
   3b2f3:	48 89 ea             	mov    %rbp,%rdx
   3b2f6:	48 89 e1             	mov    %rsp,%rcx
   3b2f9:	57                   	push   %rdi
   3b2fa:	56                   	push   %rsi
   3b2fb:	52                   	push   %rdx
   3b2fc:	51                   	push   %rcx
   3b2fd:	53                   	push   %rbx
   3b2fe:	50                   	push   %rax
   3b2ff:	5f                   	pop    %rdi
   3b300:	5e                   	pop    %rsi
   3b301:	5a                   	pop    %rdx
   3b302:	59                   	pop    %rcx
   3b303:	41 58                	pop    %r8
   3b305:	41 59                	pop    %r9
   3b307:	e8 57 fc ff ff       	callq  3af63 <_SE3>
   3b30c:	0f 0b                	ud2    
   3b30e:	48 89 c2             	mov    %rax,%rdx
   3b311:	48 89 d8             	mov    %rbx,%rax
   3b314:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   3b31a:	e9 26 ff ff ff       	jmpq   3b245 <enclave_entry+0x4e>
   3b31f:	0f 0b                	ud2    

000000000003b321 <do_ocall>:
   3b321:	55                   	push   %rbp
   3b322:	48 89 e5             	mov    %rsp,%rbp
   3b325:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   3b329:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   3b32d:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b334:	00 00 
   3b336:	48 8b 00             	mov    (%rax),%rax
   3b339:	48 8b 40 38          	mov    0x38(%rax),%rax
   3b33d:	48 29 c4             	sub    %rax,%rsp
   3b340:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   3b347:	48 f7 d0             	not    %rax
   3b34a:	48 21 c4             	and    %rax,%rsp
   3b34d:	48 89 e1             	mov    %rsp,%rcx
   3b350:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   3b357:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   3b35e:	00 
   3b35f:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   3b364:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   3b369:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   3b36e:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   3b373:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   3b378:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   3b37d:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   3b382:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   3b387:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   3b38e:	00 
   3b38f:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b396:	00 00 
   3b398:	48 8b 00             	mov    (%rax),%rax
   3b39b:	48 8b 40 38          	mov    0x38(%rax),%rax
   3b39f:	48 89 c1             	mov    %rax,%rcx
   3b3a2:	48 c1 e9 02          	shr    $0x2,%rcx
   3b3a6:	48 31 c0             	xor    %rax,%rax
   3b3a9:	fc                   	cld    
   3b3aa:	f3 ab                	rep stos %eax,%es:(%rdi)
   3b3ac:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   3b3b3:	00 
   3b3b4:	48 89 3c 24          	mov    %rdi,(%rsp)
   3b3b8:	e8 bb 02 00 00       	callq  3b678 <save_xregs>
   3b3bd:	48 8d 3d 7c c5 00 00 	lea    0xc57c(%rip),%rdi        # 47940 <SYNTHETIC_STATE>
   3b3c4:	48 89 3c 24          	mov    %rdi,(%rsp)
   3b3c8:	e8 7d 02 00 00       	callq  3b64a <restore_xregs>
   3b3cd:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   3b3d2:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   3b3d7:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   3b3de:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   3b3e3:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   3b3e8:	64 48 8b 04 25 08 00 	mov    %fs:0x8,%rax
   3b3ef:	00 00 
   3b3f1:	48 8b 00             	mov    (%rax),%rax
   3b3f4:	48 8b 00             	mov    (%rax),%rax
   3b3f7:	48 89 c3             	mov    %rax,%rbx
   3b3fa:	48 89 e7             	mov    %rsp,%rdi
   3b3fd:	e8 bd d9 fc ff       	callq  8dbf <update_ocall_lastsp>
   3b402:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   3b407:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   3b40c:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   3b410:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   3b417:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   3b41e:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   3b422:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   3b429:	48 31 c9             	xor    %rcx,%rcx
   3b42c:	48 31 d2             	xor    %rdx,%rdx
   3b42f:	4d 31 c0             	xor    %r8,%r8
   3b432:	4d 31 c9             	xor    %r9,%r9
   3b435:	4d 31 d2             	xor    %r10,%r10
   3b438:	4d 31 db             	xor    %r11,%r11
   3b43b:	4d 31 e4             	xor    %r12,%r12
   3b43e:	4d 31 ed             	xor    %r13,%r13
   3b441:	4d 31 f6             	xor    %r14,%r14
   3b444:	4d 31 ff             	xor    %r15,%r15
   3b447:	48 01 d2             	add    %rdx,%rdx
   3b44a:	fc                   	cld    
   3b44b:	48 83 f8 04          	cmp    $0x4,%rax
   3b44f:	75 06                	jne    3b457 <do_ocall+0x136>
   3b451:	48 89 ea             	mov    %rbp,%rdx
   3b454:	48 89 e1             	mov    %rsp,%rcx
   3b457:	57                   	push   %rdi
   3b458:	56                   	push   %rsi
   3b459:	52                   	push   %rdx
   3b45a:	51                   	push   %rcx
   3b45b:	53                   	push   %rbx
   3b45c:	50                   	push   %rax
   3b45d:	5f                   	pop    %rdi
   3b45e:	5e                   	pop    %rsi
   3b45f:	5a                   	pop    %rdx
   3b460:	59                   	pop    %rcx
   3b461:	41 58                	pop    %r8
   3b463:	41 59                	pop    %r9
   3b465:	e8 f9 fa ff ff       	callq  3af63 <_SE3>

000000000003b46a <__morestack>:
   3b46a:	55                   	push   %rbp
   3b46b:	48 89 e5             	mov    %rsp,%rbp
   3b46e:	48 83 ec 20          	sub    $0x20,%rsp
   3b472:	e8 aa fe ff ff       	callq  3b321 <do_ocall>
   3b477:	c9                   	leaveq 
   3b478:	c3                   	retq   

000000000003b479 <asm_oret>:
   3b479:	48 89 e3             	mov    %rsp,%rbx
   3b47c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   3b481:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   3b486:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   3b48a:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   3b491:	00 
   3b492:	e8 b3 01 00 00       	callq  3b64a <restore_xregs>
   3b497:	48 31 c0             	xor    %rax,%rax
   3b49a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   3b49f:	48 29 f9             	sub    %rdi,%rcx
   3b4a2:	48 83 e9 08          	sub    $0x8,%rcx
   3b4a6:	48 c1 e9 02          	shr    $0x2,%rcx
   3b4aa:	fc                   	cld    
   3b4ab:	f3 ab                	rep stos %eax,%es:(%rdi)
   3b4ad:	48 8b 43 10          	mov    0x10(%rbx),%rax
   3b4b1:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   3b4b6:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   3b4bb:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   3b4c0:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   3b4c5:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   3b4ca:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   3b4cf:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   3b4d4:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   3b4d9:	48 89 ec             	mov    %rbp,%rsp
   3b4dc:	5d                   	pop    %rbp
   3b4dd:	c3                   	retq   
   3b4de:	0f 0b                	ud2    

000000000003b4e0 <do_egetkey>:
   3b4e0:	53                   	push   %rbx
   3b4e1:	51                   	push   %rcx
   3b4e2:	52                   	push   %rdx
   3b4e3:	48 89 fb             	mov    %rdi,%rbx
   3b4e6:	48 89 f1             	mov    %rsi,%rcx
   3b4e9:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   3b4f0:	48 83 f8 04          	cmp    $0x4,%rax
   3b4f4:	75 06                	jne    3b4fc <do_egetkey+0x1c>
   3b4f6:	48 89 ea             	mov    %rbp,%rdx
   3b4f9:	48 89 e1             	mov    %rsp,%rcx
   3b4fc:	57                   	push   %rdi
   3b4fd:	56                   	push   %rsi
   3b4fe:	52                   	push   %rdx
   3b4ff:	51                   	push   %rcx
   3b500:	53                   	push   %rbx
   3b501:	50                   	push   %rax
   3b502:	5f                   	pop    %rdi
   3b503:	5e                   	pop    %rsi
   3b504:	5a                   	pop    %rdx
   3b505:	59                   	pop    %rcx
   3b506:	41 58                	pop    %r8
   3b508:	41 59                	pop    %r9
   3b50a:	e8 54 fa ff ff       	callq  3af63 <_SE3>
   3b50f:	48 83 f8 00          	cmp    $0x0,%rax
   3b513:	75 03                	jne    3b518 <do_egetkey+0x38>
   3b515:	48 31 c0             	xor    %rax,%rax
   3b518:	5a                   	pop    %rdx
   3b519:	59                   	pop    %rcx
   3b51a:	5b                   	pop    %rbx
   3b51b:	c3                   	retq   

000000000003b51c <do_ereport>:
   3b51c:	53                   	push   %rbx
   3b51d:	51                   	push   %rcx
   3b51e:	52                   	push   %rdx
   3b51f:	48 89 fb             	mov    %rdi,%rbx
   3b522:	48 89 f1             	mov    %rsi,%rcx
   3b525:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   3b52c:	f8                   	clc    

000000000003b52d <Lereport_inst>:
   3b52d:	48 83 f8 04          	cmp    $0x4,%rax
   3b531:	75 06                	jne    3b539 <Lereport_inst+0xc>
   3b533:	48 89 ea             	mov    %rbp,%rdx
   3b536:	48 89 e1             	mov    %rsp,%rcx
   3b539:	57                   	push   %rdi
   3b53a:	56                   	push   %rsi
   3b53b:	52                   	push   %rdx
   3b53c:	51                   	push   %rcx
   3b53d:	53                   	push   %rbx
   3b53e:	50                   	push   %rax
   3b53f:	5f                   	pop    %rdi
   3b540:	5e                   	pop    %rsi
   3b541:	5a                   	pop    %rdx
   3b542:	59                   	pop    %rcx
   3b543:	41 58                	pop    %r8
   3b545:	41 59                	pop    %r9
   3b547:	e8 17 fa ff ff       	callq  3af63 <_SE3>
   3b54c:	0f 92 c0             	setb   %al
   3b54f:	5a                   	pop    %rdx
   3b550:	59                   	pop    %rcx
   3b551:	5b                   	pop    %rbx
   3b552:	c3                   	retq   

000000000003b553 <do_eaccept>:
   3b553:	53                   	push   %rbx
   3b554:	51                   	push   %rcx
   3b555:	52                   	push   %rdx
   3b556:	48 89 fb             	mov    %rdi,%rbx
   3b559:	48 89 f1             	mov    %rsi,%rcx
   3b55c:	b8 05 00 00 00       	mov    $0x5,%eax
   3b561:	48 83 f8 04          	cmp    $0x4,%rax
   3b565:	75 06                	jne    3b56d <do_eaccept+0x1a>
   3b567:	48 89 ea             	mov    %rbp,%rdx
   3b56a:	48 89 e1             	mov    %rsp,%rcx
   3b56d:	57                   	push   %rdi
   3b56e:	56                   	push   %rsi
   3b56f:	52                   	push   %rdx
   3b570:	51                   	push   %rcx
   3b571:	53                   	push   %rbx
   3b572:	50                   	push   %rax
   3b573:	5f                   	pop    %rdi
   3b574:	5e                   	pop    %rsi
   3b575:	5a                   	pop    %rdx
   3b576:	59                   	pop    %rcx
   3b577:	41 58                	pop    %r8
   3b579:	41 59                	pop    %r9
   3b57b:	e8 e3 f9 ff ff       	callq  3af63 <_SE3>
   3b580:	83 f8 00             	cmp    $0x0,%eax
   3b583:	75 54                	jne    3b5d9 <abort>
   3b585:	5a                   	pop    %rdx
   3b586:	59                   	pop    %rcx
   3b587:	5b                   	pop    %rbx
   3b588:	c3                   	retq   

000000000003b589 <do_emodpe>:
   3b589:	53                   	push   %rbx
   3b58a:	51                   	push   %rcx
   3b58b:	52                   	push   %rdx
   3b58c:	48 89 fb             	mov    %rdi,%rbx
   3b58f:	48 89 f1             	mov    %rsi,%rcx
   3b592:	b8 06 00 00 00       	mov    $0x6,%eax
   3b597:	48 83 f8 04          	cmp    $0x4,%rax
   3b59b:	75 06                	jne    3b5a3 <do_emodpe+0x1a>
   3b59d:	48 89 ea             	mov    %rbp,%rdx
   3b5a0:	48 89 e1             	mov    %rsp,%rcx
   3b5a3:	57                   	push   %rdi
   3b5a4:	56                   	push   %rsi
   3b5a5:	52                   	push   %rdx
   3b5a6:	51                   	push   %rcx
   3b5a7:	53                   	push   %rbx
   3b5a8:	50                   	push   %rax
   3b5a9:	5f                   	pop    %rdi
   3b5aa:	5e                   	pop    %rsi
   3b5ab:	5a                   	pop    %rdx
   3b5ac:	59                   	pop    %rcx
   3b5ad:	41 58                	pop    %r8
   3b5af:	41 59                	pop    %r9
   3b5b1:	e8 ad f9 ff ff       	callq  3af63 <_SE3>
   3b5b6:	5a                   	pop    %rdx
   3b5b7:	59                   	pop    %rcx
   3b5b8:	5b                   	pop    %rbx
   3b5b9:	c3                   	retq   

000000000003b5ba <do_rdrand>:
   3b5ba:	b9 0a 00 00 00       	mov    $0xa,%ecx
   3b5bf:	0f c7 f0             	rdrand %eax
   3b5c2:	72 08                	jb     3b5cc <do_rdrand+0x12>
   3b5c4:	ff c9                	dec    %ecx
   3b5c6:	75 f7                	jne    3b5bf <do_rdrand+0x5>
   3b5c8:	48 31 c0             	xor    %rax,%rax
   3b5cb:	c3                   	retq   
   3b5cc:	48 89 f9             	mov    %rdi,%rcx
   3b5cf:	89 01                	mov    %eax,(%rcx)
   3b5d1:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   3b5d8:	c3                   	retq   

000000000003b5d9 <abort>:
   3b5d9:	48 8d 05 a0 c5 00 00 	lea    0xc5a0(%rip),%rax        # 47b80 <g_enclave_state>
   3b5e0:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   3b5e6:	0f 0b                	ud2    

000000000003b5e8 <continue_execution>:
   3b5e8:	48 89 f9             	mov    %rdi,%rcx
   3b5eb:	48 8b 01             	mov    (%rcx),%rax
   3b5ee:	50                   	push   %rax
   3b5ef:	48 8b 41 08          	mov    0x8(%rcx),%rax
   3b5f3:	50                   	push   %rax
   3b5f4:	48 8b 41 20          	mov    0x20(%rcx),%rax
   3b5f8:	48 2d 88 00 00 00    	sub    $0x88,%rax
   3b5fe:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   3b602:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   3b606:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   3b60a:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   3b60e:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   3b612:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   3b616:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   3b61a:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   3b61e:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   3b622:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   3b626:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   3b62a:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   3b62e:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   3b632:	ff b1 80 00 00 00    	pushq  0x80(%rcx)
   3b638:	9d                   	popfq  
   3b639:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   3b640:	48 89 08             	mov    %rcx,(%rax)
   3b643:	59                   	pop    %rcx
   3b644:	5c                   	pop    %rsp
   3b645:	48 94                	xchg   %rax,%rsp
   3b647:	c2 80 00             	retq   $0x80

000000000003b64a <restore_xregs>:
   3b64a:	48 89 f9             	mov    %rdi,%rcx
   3b64d:	48 8d 05 30 c5 00 00 	lea    0xc530(%rip),%rax        # 47b84 <g_xsave_enabled>
   3b654:	8b 00                	mov    (%rax),%eax
   3b656:	83 f8 00             	cmp    $0x0,%eax
   3b659:	74 18                	je     3b673 <restore_xregs+0x29>
   3b65b:	48 8d 05 2a c5 00 00 	lea    0xc52a(%rip),%rax        # 47b8c <g_xsave_mask_low>
   3b662:	48 8d 15 1f c5 00 00 	lea    0xc51f(%rip),%rdx        # 47b88 <g_xsave_mask_high>
   3b669:	8b 00                	mov    (%rax),%eax
   3b66b:	8b 12                	mov    (%rdx),%edx
   3b66d:	48 0f ae 29          	xrstor64 (%rcx)
   3b671:	eb 04                	jmp    3b677 <restore_xregs+0x2d>
   3b673:	48 0f ae 09          	fxrstor64 (%rcx)
   3b677:	c3                   	retq   

000000000003b678 <save_xregs>:
   3b678:	48 89 f9             	mov    %rdi,%rcx
   3b67b:	48 8d 05 02 c5 00 00 	lea    0xc502(%rip),%rax        # 47b84 <g_xsave_enabled>
   3b682:	9b                   	fwait
   3b683:	8b 00                	mov    (%rax),%eax
   3b685:	83 f8 00             	cmp    $0x0,%eax
   3b688:	74 18                	je     3b6a2 <save_xregs+0x2a>
   3b68a:	48 8d 05 fb c4 00 00 	lea    0xc4fb(%rip),%rax        # 47b8c <g_xsave_mask_low>
   3b691:	48 8d 15 f0 c4 00 00 	lea    0xc4f0(%rip),%rdx        # 47b88 <g_xsave_mask_high>
   3b698:	8b 00                	mov    (%rax),%eax
   3b69a:	8b 12                	mov    (%rdx),%edx
   3b69c:	48 0f c7 21          	xsavec64 (%rcx)
   3b6a0:	eb 04                	jmp    3b6a6 <save_xregs+0x2e>
   3b6a2:	48 0f ae 01          	fxsave64 (%rcx)
   3b6a6:	c3                   	retq   
